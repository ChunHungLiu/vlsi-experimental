params:
{
    techname = "b5c";
};

b5c:
{
    benchmark:
    {
        def = "b5c.def";
        lef = "b5c.lef";
        lib = "b5c.lib";
        useTechMapping = false;
        exportDEFFileName = "";
        target_clock_cycle = 0.0;
        CanDoTiming = true;
    };
};

plotter:
{
    //enabled = true;
    windowHeight = 800;
    histogramWindowHeight = 300;
    histogramWindowWidth = 1200;
    autoRefreshStep = 10;
    //saveImages = true;
    saveMilestoneImages = true;
    embeedMilestones = true;
    //createVideo = true;
};

DesignFlow:
{
    nMacroIterations = 0;
    LRSizing = true;
};

Timing:
{
    SignalDirectionsUsed = 1; //rise\fall
    RCE:
    {
        LayersUsed = 3;//0 - lumped (=1 with simplified C extraction), 1 or 2, 3=Hippocrate
    };
};

CriticalPaths:
{
    countLogReportCriticalPaths = -1;  //set to -1 if you want to print all the critical paths
    countPlotCriticalPaths = 0;       //set to -1 if you want to plot all the critical paths
    plotWait = 1;
};

Config:
{
    //Trace = true;
    Replicate = false;
    WarnOnChange = true;
};