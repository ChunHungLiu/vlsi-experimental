<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://www.pnp-software.com/XSLTdoc">
  
  <xd:doc type="stylesheet">
    <xd:author>João Daniel Togni</xd:author>
    <xd:MyProperty>
      <xd:MyCaption>Maintained by:</xd:MyCaption>
      <xd:MyLine>Rodrigo Gasparoni Santos</xd:MyLine>
    </xd:MyProperty>
    <xd:copyright>&#169; 2006, Nangate Inc. All rights reserved.</xd:copyright>
    <xd:MyProperty>
      <xd:MyCaption>Copyright Notice:</xd:MyCaption>
      <xd:MyLine>This document contains confidential and proprietary information.</xd:MyLine>
      <xd:MyLine>Reproduction or usage of this document, in part or whole, by any means, electrical, mechanical, optical, chemical or otherwise is prohibited, without written permission from Nangate Inc.</xd:MyLine>
      <xd:MyLine>The information contained herein is protected by Danish and international copyright laws.</xd:MyLine>
    </xd:MyProperty>
    <xd:cvsId>$Id: GenericTable.xsl_,v 1.10 2008/01/16 15:21:02 rgs Exp $</xd:cvsId>
    Stylesheet for summary pages
  </xd:doc>
  
  <xsl:include href="Utils.xsl"/>
  <xsl:include href="UnitConversion.xsl"/>
  <xsl:include href="Includes.xsl"/>
  <xsl:include href="NavigationBar.xsl"/>
  <xsl:include href="TimingTable.xsl"/>
  
  
  
  <!-- Summary table processment -->
  <xd:doc>Redirects all summary data to be processed by the GenericTable template</xd:doc>
  <xsl:template match="ReducedData|FirstOrder">
    <xsl:call-template name="GenericTable"/>
  </xsl:template>
  
  
  
  <!-- Summary table processment -->
  <xd:doc>Builds the summary table page. Calls the appropriate templates to build each section of the page</xd:doc>
  <xsl:template name="GenericTable">
    
    <xsl:variable name="Title">
      
      <xsl:call-template name="Map">
        <xsl:with-param name="map" select="$MapNode/summary"/>
        <xsl:with-param name="key" select="concat(@Name,'_Title')"/>
      </xsl:call-template>
      
      <!--<xsl:if test="substring(@CornerName,1,9)!=$NoCorner or $Config/@doctype='PDF'">-->
        <xsl:value-of select="concat(' [', @CornerName, ']')"/>
      <!--</xsl:if>-->
      
    </xsl:variable>
    
    <html>
      <head>
        <title>
          <xsl:value-of select="$Title"/>
        </title>
        <xsl:call-template name="Includes"/>
      </head>
      <body onLoad="NanInit();">
        
        <xsl:call-template name="NangateHeader">
          <xsl:with-param name="dir"   select="'.'"/>
          <xsl:with-param name="Title" select="$Title"/>
        </xsl:call-template>
        
        <!-- Top navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          
          <xsl:with-param name="PrevName">
            <xsl:if test="Navigation/Previous">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Previous/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
          <xsl:with-param name="NextName">
            <xsl:if test="Navigation/Next">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Next/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
        </xsl:call-template>
        
        <xsl:call-template name="TitleNotes"/>
    <!--<xsl:call-template name="GenFilters"/>-->
        <xsl:call-template name="GenTable"/>
        <xsl:call-template name="Notes"/>
        
        <!-- Bottom navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          
          <xsl:with-param name="Pos">Bottom</xsl:with-param>
          
          <xsl:with-param name="PrevName">
            <xsl:if test="Navigation/Previous">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Previous/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
          <xsl:with-param name="NextName">
            <xsl:if test="Navigation/Next">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Next/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
        </xsl:call-template>
        
      </body>
    </html>
    
  </xsl:template>
  
  
  
  <xd:doc>Creates form elements to filter data from summary tables. It is not being used in the current version</xd:doc>
  <xsl:template name="GenFilters">
    <form name="selectform" method="post">
      <br/>
      <INPUT TYPE="button" VALUE="Row Filters" OnClick="openPopupFilter('pop_row_ret')"/>
      <INPUT TYPE="text" value="" id="pop_row_ret"/>
      <br/>
      <INPUT TYPE="button" VALUE="Col Filters" OnClick="openPopupFilter('pop_col_ret')"/>
      <INPUT TYPE="text" value="" id="pop_col_ret"/>
      <br/>
      <INPUT TYPE="submit" value="Submit" OnClick="submitHides()"/>
    </form>
  </xsl:template>
  
  
  
  <!-- Generate summary table itself -->
  <xd:doc>Inside a summary table page, generates the tables themselves. Calls the PrintTimingTable_Aglomerated template</xd:doc>
  <xsl:template name="GenTable">
    <xsl:for-each select="Table">
      <a>
        
        <xsl:attribute name="name">
          <xsl:value-of select="concat('Table_',@Id)"/>
        </xsl:attribute>
        
        <xsl:call-template name="CreateTableCaption"/>
        
        <span>
          
          <xsl:attribute name="id">
            <xsl:value-of select="concat('_Table_',@Id)"/>
          </xsl:attribute>
          
          <hr class="Title"/>
          
          <xsl:variable name="unit_node">
            <xsl:choose>
              <xsl:when test="../@Name=$FP">fall_power</xsl:when>
              <xsl:when test="../@Name=$RP">rise_power</xsl:when>
              <xsl:when test="../@Name=$PWR">power</xsl:when>
              <xsl:when test="../@Name=$OS">output_slopes</xsl:when>
              <xsl:when test="../@Name=$PD">propagation_delay</xsl:when>
              <xsl:when test="../@Name=$OSRatio">output_slope_ratio</xsl:when>
              <xsl:when test="../@Name=$PDRatio">propagation_delay_ratio</xsl:when>
              <xsl:when test="../@Name=$FO4D">fo4_delay</xsl:when>
              <xsl:when test="../@Name=$FOOS">fo_output_slope</xsl:when>
              <xsl:when test="../@Name=$FOPD">fo_propagation_delay</xsl:when>
              <xsl:when test="../@Name=$MS">metastability</xsl:when>
              <xsl:when test="../@Name=$RRMS">rr_metastability</xsl:when>
              <xsl:when test="../@Name=$ST">setup_time</xsl:when>
              <xsl:when test="../@Name=$HT">hold_time</xsl:when>
              <xsl:when test="../@Name=$RC">recovery</xsl:when>
              <xsl:when test="../@Name=$RM">removal</xsl:when>
              <xsl:when test="../@Name=$CAP">capacitance</xsl:when>
            </xsl:choose>
          </xsl:variable>
          
          <xsl:call-template name="PrintTimingTable_Aglomerated">
            
            <xsl:with-param name="table" select="."/>
            <xsl:with-param name="SecId" select="/*/@Name"/>
            <xsl:with-param name="unit_node" select="$UnitNode/timing_summary/*[name()=$unit_node]"/>
            
            <xsl:with-param name="sub_link">
              <xsl:choose>
                <xsl:when test="../@Name=$FOOS">#OutputSlope</xsl:when>
                <xsl:when test="../@Name=$FOPD">#PropagationDelay</xsl:when>
                <xsl:when test="../@Name=$FP">#PowerFall</xsl:when>
                <xsl:when test="../@Name=$OS">#OutputSlope</xsl:when>
                <xsl:when test="../@Name=$OSRatio">#OutputSlope</xsl:when>
                <xsl:when test="../@Name=$PD">#PropagationDelay</xsl:when>
                <xsl:when test="../@Name=$PDRatio">#PropagationDelay</xsl:when>
                <xsl:when test="../@Name=$FO4D">#Fanout4Delay</xsl:when>
                <xsl:when test="../@Name=$PWR">#Power</xsl:when>
                <xsl:when test="../@Name=$RP">#PowerRise</xsl:when>
                <xsl:when test="../@Name=$MS">#Metastability</xsl:when>
                <xsl:when test="../@Name=$RRMS">#RRMetastability</xsl:when>
                <xsl:when test="../@Name=$ST">#SetupTime</xsl:when>
                <xsl:when test="../@Name=$HT">#HoldTime</xsl:when>
                <xsl:when test="../@Name=$RC">#Recovery</xsl:when>
                <xsl:when test="../@Name=$RM">#Removal</xsl:when>
                <xsl:when test="../@Name=$CAP">#Capacitance</xsl:when>
              </xsl:choose>
            </xsl:with-param>
            
          </xsl:call-template>
          
        </span>
        
      </a>
    </xsl:for-each>
  </xsl:template>
  
  
  
  <!-- Auxiliar template to write the output slope limits -->
  <!-- not used anymore. -->
  <xd:doc>
    Writes the output slope threshold limits. Used by the <i>WriteSlopeThresholds</i> template
    <xd:param name="XmlLib" type="element">Root element of the XML tree containing the slope limits</xd:param>
  </xd:doc>
  <xsl:template name="writeSlopeLimits">
    <xsl:param name="XmlLib"/>
    <xsl:choose>
      <xsl:when test="@Transition='fall' and $XmlLib/slew_lower_threshold_pct_fall and $XmlLib/slew_upper_threshold_pct_fall">
        <xsl:value-of select="format-number($XmlLib/slew_lower_threshold_pct_fall, '0')"/>/<xsl:value-of select="format-number($XmlLib/slew_upper_threshold_pct_fall, '0')"/> 
      </xsl:when>
      <xsl:when test="@Transition='rise' and $XmlLib/slew_lower_threshold_pct_rise and $XmlLib/slew_upper_threshold_pct_rise">
        <xsl:value-of select="format-number($XmlLib/slew_lower_threshold_pct_rise, '0')"/>/<xsl:value-of select="format-number($XmlLib/slew_upper_threshold_pct_rise, '0')"/>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
  
  <!-- Writes the propagation delay thresholds -->  
  <xd:doc>Builds the propagation delay threshold information. Calls the <i>CreateCTPLink</i> template</xd:doc>
  <xsl:template name="WritePropagationThresholds">
    <xsl:choose>
      <xsl:when test="$LibMode!='normal'">

        <xsl:variable name="CornerName" select="/*/@CornerName"/>
        <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$CornerName]"/>
        <xsl:variable name="RefNode" select="$XmlCornerList/CornerList/Corner[@Id=$CornerNode/@Ref]"/>
        <xsl:variable name="XmlLib" select="document($RefNode/@File)"/>

        <xsl:call-template name="CreateCTPLink">
          <xsl:with-param name="XmlLib" select="$XmlLib/Library"/>
          <xsl:with-param name="type">propagation</xsl:with-param>
          <xsl:with-param name="unateness">binate</xsl:with-param>
          <xsl:with-param name="risefall" select="@Transition"/>
        </xsl:call-template>

      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="CreateCTPLink">
          <xsl:with-param name="XmlLib" select="$XmlLibrary/Library"/>          
          <xsl:with-param name="type">propagation</xsl:with-param>
          <xsl:with-param name="unateness">binate</xsl:with-param>
          <xsl:with-param name="risefall" select="@Transition"/>
        </xsl:call-template>

      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
 

  <!-- Writes the output slope thresholds -->
   <xd:doc>Builds the output slope threshold information. Calls the <i>CreateCTPLink</i> template</xd:doc>
  <xsl:template name="WriteSlopeThresholds">
    <xsl:choose>
      <xsl:when test="$LibMode!='normal'">

        <xsl:variable name="CornerName" select="/*/@CornerName"/>
        <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$CornerName]"/>
        <xsl:variable name="RefNode" select="$XmlCornerList/CornerList/Corner[@Id=$CornerNode/@Ref]"/>
        <xsl:variable name="XmlLib" select="document($RefNode/@File)"/>

        <xsl:call-template name="CreateCTPLink">
          <xsl:with-param name="XmlLib" select="$XmlLib/Library"/>
          <xsl:with-param name="type">slope</xsl:with-param>
          <xsl:with-param name="risefall" select="@Transition"/>
        </xsl:call-template>

      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="CreateCTPLink">
          <xsl:with-param name="XmlLib" select="$XmlLibrary/Library"/>          
          <xsl:with-param name="type">slope</xsl:with-param>
          <xsl:with-param name="risefall" select="@Transition"/>
        </xsl:call-template>

      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
  
  
  <!-- Helper for generating summary table caption -->
  <xd:doc>Creates the caption (with collapse) for a summary table</xd:doc>
  <xsl:template name="CreateTableCaption">
    
    <xsl:variable name="title">
      <xsl:choose>
        <xsl:when test="../@Name=$FOOS">
          Output Slope
         </xsl:when>
        <xsl:when test="../@Name=$FOPD">
          Propagation Delay 
        </xsl:when>
        <xsl:when test="../@Name=$FP">
          Fall Power
        </xsl:when>
        <xsl:when test="../@Name=$OS">
          Output Slope
        </xsl:when>
        <xsl:when test="../@Name=$OSRatio">
          Output Slope Ratio
        </xsl:when>
        <xsl:when test="../@Name=$PD">
          Propagation Delay
        </xsl:when>
        <xsl:when test="../@Name=$PDRatio">
          Propagation Delay Ratio 
        </xsl:when>
        <xsl:when test="../@Name=$FO4D">
          Fanout 4 Delay
        </xsl:when>
        <xsl:when test="../@Name=$PWR">
          Power 
        </xsl:when>
        <xsl:when test="../@Name=$RP">
          Rise Power
        </xsl:when>
        <xsl:when test="../@Name=$MS">
          Setup/Hold Metastability Window
        </xsl:when>
        <xsl:when test="../@Name=$RRMS">
          Recovery/Removal Metastability Window 
        </xsl:when>
        <xsl:when test="../@Name=$ST">
          Setup Time
        </xsl:when>
        <xsl:when test="../@Name=$HT">
          Hold Time 
        </xsl:when>
        <xsl:when test="../@Name=$RC">
          Recovery Time 
        </xsl:when>
        <xsl:when test="../@Name=$RM">
          Removal Time 
        </xsl:when>
        <xsl:when test="../@Name=$CAP">
          Gate Capacitance 
        </xsl:when>
      </xsl:choose>

    </xsl:variable>

    <xsl:variable name="ExtraTitle">
      <xsl:text> </xsl:text>
      <xsl:call-template name="TableCaption">
        <xsl:with-param name="trans">
          <xsl:if test="../@Name=$RM or ../@Name=$RC or ../@Name=$HT or ../@Name=$ST or ../@Name=$MS or ../@Name=$RRMS">yes</xsl:if>
        </xsl:with-param>
      </xsl:call-template>
      <xsl:text> </xsl:text>
      <xsl:choose>
        <xsl:when test="../@Name=$FOOS">          
          <xsl:call-template name="WriteSlopeThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$OS">
          <xsl:call-template name="WriteSlopeThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$OSRatio">
          <xsl:call-template name="WriteSlopeThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$FOPD">          
          <xsl:call-template name="WritePropagationThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$PD">
          <xsl:call-template name="WritePropagationThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$PDRatio">
          <xsl:call-template name="WritePropagationThresholds"/>
        </xsl:when>
        <xsl:when test="../@Name=$FO4D">
          <xsl:call-template name="WritePropagationThresholds"/>
        </xsl:when>


      </xsl:choose>
      <xsl:text> </xsl:text>
      <xsl:choose>
        <xsl:when test="../@Name=$FOOS">(CL[pF])</xsl:when>
        <xsl:when test="../@Name=$FOPD">(CL[pF])</xsl:when>
      </xsl:choose>
    </xsl:variable>

    <xsl:call-template name="CreateCollapse">
      <xsl:with-param name="name" select="$title"/>
      <xsl:with-param name="tag"  select="concat('Table_', @Id)"/>
      <xsl:with-param name="dir">.</xsl:with-param>
      <xsl:with-param name="extra" select="$ExtraTitle"/>
    </xsl:call-template>
    
  </xsl:template>
  
  
  
  <!-- Helper for generating title notes in summary tables -->
  <xd:doc>Generates the informations that appear at the title of the page</xd:doc>
  <xsl:template name="TitleNotes">
    
    <xsl:variable name="PDFLink">
      <xsl:call-template name="Map">
        <xsl:with-param name="map" select="$MapNode/summary"/>
        <xsl:with-param name="key" select="concat(@Name, '_Title')"/>
      </xsl:call-template>
    </xsl:variable> 
    
    <xsl:variable name="Page">
      <xsl:choose>
        <xsl:when test="@Name=$FOOS">FirstOrderOutputSlope</xsl:when>
        <xsl:when test="@Name=$FOPD">FirstOrderPropagationDelay</xsl:when>
        <xsl:when test="@Name=$FP">PowerFall</xsl:when>
        <xsl:when test="@Name=$OS">OutputSlope</xsl:when>
        <xsl:when test="@Name=$OSRatio">OutputSlopeRatio</xsl:when>
        <xsl:when test="@Name=$PD">PropagationDelay</xsl:when>
        <xsl:when test="@Name=$PDRatio">PropagationDelayRatio</xsl:when>
        <xsl:when test="@Name=$FO4D">FO4Delay</xsl:when>
        <xsl:when test="@Name=$PWR">Power</xsl:when>
        <xsl:when test="@Name=$RP">PowerRise</xsl:when>
        <xsl:when test="@Name=$MS">SetupHoldMetastability</xsl:when>
        <xsl:when test="@Name=$RRMS">RecoveryRemovalMetastability</xsl:when>
        <xsl:when test="@Name=$ST">Setup</xsl:when>
        <xsl:when test="@Name=$HT">Hold</xsl:when>
        <xsl:when test="@Name=$RC">Recovery</xsl:when>
        <xsl:when test="@Name=$RM">Removal</xsl:when>
        <xsl:when test="@Name=$CAP">Capacitance</xsl:when>
      </xsl:choose>
    </xsl:variable>
    
    <xsl:call-template name="CreateTitleCornerNote">
      <xsl:with-param name="PDFLink" select="$PDFLink"/>
      <xsl:with-param name="Page"    select="$Page"/>
    </xsl:call-template>
    
    <p>
      <xsl:call-template name="BasicNotes">
        <xsl:with-param name="PDFLink"    select="$PDFLink"/>
        <xsl:with-param name="Page"       select="$Page"/>
        <xsl:with-param name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=/*/@CornerName]"/>
      </xsl:call-template>
    </p>
    
    <p>
      This section presents the 
      <span class="bold">
        <xsl:choose>
          <xsl:when test="@Name=$FOOS"> 1st order output slope approximation (based on worst case slope figures) </xsl:when>
          <xsl:when test="@Name=$FOPD"> 1st order propagation delay approximation (based on worst case propagation delay figures) </xsl:when>
          <xsl:when test="@Name=$FP"> average fall power </xsl:when>
          <xsl:when test="@Name=$OS"> worst case output slope </xsl:when>
          <xsl:when test="@Name=$OSRatio"> rise/fall ratios for output slope </xsl:when>
          <xsl:when test="@Name=$PD"> worst case propagation delay </xsl:when>
          <xsl:when test="@Name=$PDRatio"> rise/fall ratios for propagation delay </xsl:when>
          <xsl:when test="@Name=$FO4D"> worst fanout 4 delay</xsl:when>
          <xsl:when test="@Name=$PWR"> average power </xsl:when>
          <xsl:when test="@Name=$RP"> average rise power </xsl:when>
          <xsl:when test="@Name=$MS"> worst case setup/hold metastability data </xsl:when>
          <xsl:when test="@Name=$RRMS"> worst case recovery/removal metastability data </xsl:when>
          <xsl:when test="@Name=$ST"> worst case setup time </xsl:when>
          <xsl:when test="@Name=$HT"> worst case hold time </xsl:when>
          <xsl:when test="@Name=$RC"> worst case recovery time </xsl:when>
          <xsl:when test="@Name=$RM"> worst case removal time </xsl:when>
        </xsl:choose>
      </span>
      for all cells.
      <xsl:variable name="corner" select="@CornerName"/>
      <xsl:variable name="BN">
        <xsl:call-template name="BasicNotes">
          <xsl:with-param name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="CornerContent">
        <xsl:call-template name="Corner">
          <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$BN != '' or $CornerContent != ''"> See <a href="#Notes">notes</a> for additional information.</xsl:if>
    </p>
    
  </xsl:template>
  
  
  
  <!-- Generate notes -->
  <xd:doc>Generates the informations that appear at the bottom of the page</xd:doc>
  <xsl:template name="Notes">
    <xsl:variable name="corner" select="@CornerName"/>
    <xsl:variable name="BN">
      <xsl:call-template name="BasicNotes">
        <xsl:with-param name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="CornerContent">
      <xsl:call-template name="Corner">
        <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
      </xsl:call-template>
    </xsl:variable>
    
    <xsl:if test="$BN != '' or $CornerContent != ''">
      <a name="Notes">
        
        <xsl:call-template name="CreateCollapse">
          <xsl:with-param name="name">Notes</xsl:with-param>
          <xsl:with-param name="dir">.</xsl:with-param>
        </xsl:call-template>
        
        <span id="_Notes">
          <ul>
            
            <xsl:variable name="PDFLink">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(@Name, '_Title')"/>
              </xsl:call-template>
            </xsl:variable> 
            
            <xsl:variable name="Page">
              <xsl:choose>
                <xsl:when test="@Name=$FOOS">FirstOrderOutputSlope</xsl:when>
                <xsl:when test="@Name=$FOPD">FirstOrderPropagationDelay</xsl:when>
                <xsl:when test="@Name=$FP">PowerFall</xsl:when>
                <xsl:when test="@Name=$OS">OutputSlope</xsl:when>
                <xsl:when test="@Name=$OSRatio">OutputSlopeRatio</xsl:when>
                <xsl:when test="@Name=$PD">PropagationDelay</xsl:when>
                <xsl:when test="@Name=$PDRatio">PropagationDelayRatio</xsl:when>
                <xsl:when test="@Name=$FO4D">FO4Delay</xsl:when>
                <xsl:when test="@Name=$PWR">Power</xsl:when>
                <xsl:when test="@Name=$RP">PowerRise</xsl:when>
                <xsl:when test="@Name=$MS">SetupHoldMetastability</xsl:when>
                <xsl:when test="@Name=$RRMS">RecoveryRemovalMetastability</xsl:when>
                <xsl:when test="@Name=$ST">Setup</xsl:when>
                <xsl:when test="@Name=$HT">Hold</xsl:when>
                <xsl:when test="@Name=$RC">Recovery</xsl:when>
                <xsl:when test="@Name=$RM">Removal</xsl:when>
                <xsl:when test="@Name=$CAP">Capacitance</xsl:when>
              </xsl:choose>
            </xsl:variable>
            
            
            
            <li>
              <xsl:call-template name="BasicNotes">
                <xsl:with-param name="PDFLink"    select="$PDFLink"/>
                <xsl:with-param name="Page"       select="$Page"/>
                <xsl:with-param name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
              </xsl:call-template>
            </li>
            
            <li>
              <xsl:call-template name="Corner">
                <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
                <xsl:with-param name="PDFLink" select="$PDFLink"/>
                <xsl:with-param name="Page"    select="$Page"/>
              </xsl:call-template>
            </li>
            
            <xsl:if test="@Name=$FOOS or @Name=$FOPD">
              <li><p>1st order approximation is based on the Least Square Method (LSM).</p></li>
              <li><p>Values in red in the tables are values with the tolerance exceeded.</p></li>
            </xsl:if>
            
          </ul>
        </span>
        
      </a>
    </xsl:if>
  </xsl:template>
  
  <!-- Generate table caption text properly -->
  <xd:doc>Generates the string to be used as caption for a table</xd:doc>
 
  <xsl:template name="TableCaption">
    <xsl:param name="trans" select="'no'"/>
    <xsl:if test="(@Strength!='Unknown' and @Strength!='') or (@Transition!='Unknown' and @Transition!='')"> @ </xsl:if>
    <xsl:if test="@Strength!='Unknown' and @Strength!='' ">strength: <xsl:value-of select="@Strength"/></xsl:if>
    <xsl:if test="@Strength!='Unknown' and @Strength!='' and @Transition!='Unknown' and @Transition!=''"> and </xsl:if>
    <xsl:if test="@Transition!='Unknown' and @Transition!=''">transition: </xsl:if>
    <xsl:if test="@Strength!='Unknown' or @Transition!='Unknown'">
      <xsl:if test="$trans = 'yes'">
        <xsl:value-of select="@Transition"/>
      </xsl:if>
    </xsl:if>
  </xsl:template>
  
</xsl:stylesheet>
