/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 2004-2008, Nangate Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * Nangate and the Nangate logo are trademarks of Nangate Inc.                *
* *                                                                            *
* * All trademarks, logos, software marks, and trade names (collectively the   *
* * "Marks") in this program are proprietary to Nangate or other respective    *
* * owners that have granted Nangate the right and license to use such Marks.  *
* * You are not permitted to use the Marks without the prior written consent   *
* * of Nangate or such third party that may own the Marks.                     *
* *                                                                            *
* * This file has been provided pursuant to a License Agreement containing     *
* * restrictions on its use.  This file contains valuable trade secrets and    *
* * proprietary information of Nangate Inc., and is protected by U.S. and      *
* * international laws and/or treaties.                                        *
* *                                                                            *
* * The copyright notice(s) in this file does not indicate actual or intended  *
* * publication of this file.                                                  *
* *                                                                            *
* *          NGLibraryCreator Development_version build 200810101607           *
* *                                                                            *
* ******************************************************************************
*
* Spice engine            : Nanspice build v2008.10-HR40-2008-09-24 0810090230
* Liberty export type     : conditional
*
* Characterization Corner : typical
* Process                 : TypTyp
* Temperature             : 25C
* Voltage                 : 1.1V
*
****************************************************************************/

library (NangateOpenCellLibrary_PDKv1_2_v2008_10) {

  /* Documentation Attributes */
  date                    		: "Fri 10 Oct 2008, 18:23:51";
  revision                		: "revision 1.0";
  comment                 		: "Copyright (c) 2004-2008 Nangate Inc. All Rights Reserved.";

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 25.00;
  nom_voltage             		: 1.10;

  define(process_corner, operating_conditions, string);
  operating_conditions (typical) {
    process_corner	: "TypTyp";
    process       	: 1.00;
    voltage       	: 1.10;
    temperature   	: 25.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : typical;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 1.00 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.0;
  default_input_pin_cap       		: 1.0;
  default_output_pin_cap      		: 0.0;
  default_fanout_load         		: 1.0;


  lu_table_template (Timing_X1) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800")
  }


  lu_table_template (Timing_X2) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.001600,0.003200,0.006400,0.012800,0.025600")
  }


  power_lut_template (Power_X1) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800")
  }


  power_lut_template (Power_X2) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.001600,0.003200,0.006400,0.012800,0.025600")
  }


  lu_table_template (Tristate_Disable) {
	variable_1 : input_net_transition;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
  }


  power_lut_template (Hidden_Power_Data) {
	variable_1 : input_transition_time;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
  }


  power_lut_template (Hidden_Power_Clk) {
	variable_1 : input_transition_time;
	index_1 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  power_lut_template (Hidden_Power_Set_Reset) {
	variable_1 : input_transition_time;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
  }


  lu_table_template (Setup) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Hold) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Recovery) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Removal) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Timing_X8) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.006400,0.012800,0.025600,0.051200,0.102400")
  }


  lu_table_template (Timing_X4) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.003200,0.006400,0.012800,0.025600,0.051200")
  }


  power_lut_template (Power_X8) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.006400,0.012800,0.025600,0.051200,0.102400")
  }


  power_lut_template (Power_X4) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.003200,0.006400,0.012800,0.025600,0.051200")
  }


  lu_table_template (Timing_X32) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.025600,0.051200,0.102400,0.204800,0.409600")
  }


  lu_table_template (Timing_X3) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.002400,0.004800,0.009600,0.019200,0.038400")
  }


  lu_table_template (Timing_X16) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.012800,0.025600,0.051200,0.102400,0.204800")
  }


  power_lut_template (Power_X32) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.025600,0.051200,0.102400,0.204800,0.409600")
  }


  power_lut_template (Power_X3) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.002400,0.004800,0.009600,0.019200,0.038400")
  }


  power_lut_template (Power_X16) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.012800,0.025600,0.051200,0.102400,0.204800")
  }


/******************************************************************************************
 Module          	: AND2_X1
 Cell Description	: Combinational cell (AND2_X1) with drive strength X1
*******************************************************************************************/

cell (AND2_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 8230.085000;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 4709.343000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 4896.167000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 11032.050000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 12282.780000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000505;
		fall_capacitance	: 0.000495;
		rise_capacitance	: 0.000515;
		fall_capacitance_range		(0.000426, 0.000579);
		rise_capacitance_range		(0.000426, 0.000602);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000006,0.000005,0.000005,0.000004,0.000004,0.000002");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000525;
		fall_capacitance	: 0.000508;
		rise_capacitance	: 0.000543;
		fall_capacitance_range		(0.000445, 0.000583);
		rise_capacitance_range		(0.000443, 0.000620);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000005,0.000002,0.000000,-0.000001,-0.000001,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.041378,0.045159,0.051664,0.063147,0.083230,0.121352", \
				        "0.045124,0.048902,0.055465,0.066960,0.087026,0.125142", \
				        "0.053161,0.056937,0.063522,0.074988,0.095098,0.133168", \
				        "0.067494,0.071508,0.078382,0.089977,0.110377,0.148457", \
				        "0.087852,0.092446,0.100134,0.112837,0.134317,0.172829", \
				        "0.118167,0.123525,0.132374,0.146735,0.169946,0.209689", \
				        "0.165832,0.172260,0.183231,0.200296,0.227145,0.270382", \
				        "0.245157,0.253118,0.266438,0.288019,0.321291,0.372629");
			}
			cell_rise(Timing_X1) {
				values ("0.036175,0.041429,0.051398,0.070698,0.108400,0.183836", \
				        "0.039308,0.044541,0.054494,0.073586,0.111268,0.186693", \
				        "0.044882,0.050111,0.059998,0.078971,0.116633,0.192079", \
				        "0.051446,0.056759,0.066810,0.086072,0.123581,0.198897", \
				        "0.057470,0.063118,0.073335,0.092631,0.130304,0.205584", \
				        "0.059146,0.065832,0.076997,0.096856,0.134720,0.209904", \
				        "0.047479,0.055694,0.069819,0.092149,0.131363,0.207246", \
				        "0.006504,0.016493,0.033689,0.062327,0.106905,0.185384");
			}
			fall_transition(Timing_X1) {
				values ("0.009287,0.011307,0.015185,0.022723,0.037644,0.069218", \
				        "0.009295,0.011312,0.015175,0.022692,0.037661,0.069228", \
				        "0.009358,0.011357,0.015230,0.022768,0.037664,0.069172", \
				        "0.010542,0.012400,0.016047,0.023286,0.037994,0.069278", \
				        "0.012871,0.014835,0.018490,0.025584,0.039511,0.069839", \
				        "0.016340,0.018475,0.022306,0.029273,0.042793,0.071441", \
				        "0.022077,0.024510,0.028779,0.036291,0.049600,0.076561", \
				        "0.031935,0.034872,0.039989,0.048720,0.063392,0.089837");
			}
			rise_transition(Timing_X1) {
				values ("0.012796,0.016820,0.025189,0.042573,0.078311,0.149970", \
				        "0.012786,0.016829,0.025216,0.042584,0.078286,0.149975", \
				        "0.012982,0.016975,0.025308,0.042671,0.078323,0.149962", \
				        "0.013637,0.017509,0.025717,0.042948,0.078398,0.149974", \
				        "0.015374,0.018868,0.026552,0.043397,0.078621,0.150070", \
				        "0.019116,0.022553,0.029364,0.044994,0.079289,0.150403", \
				        "0.025107,0.029357,0.036513,0.050237,0.082199,0.152231", \
				        "0.034567,0.039756,0.048952,0.063896,0.091814,0.158250");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.053235,0.057239,0.064080,0.075859,0.096587,0.135165", \
				        "0.056965,0.060969,0.067850,0.079576,0.100215,0.138750", \
				        "0.064924,0.068920,0.075852,0.087744,0.108426,0.146933", \
				        "0.081347,0.085359,0.092217,0.104004,0.124662,0.163150", \
				        "0.107035,0.111535,0.119194,0.131755,0.153178,0.191848", \
				        "0.143993,0.149208,0.157830,0.171798,0.194709,0.234345", \
				        "0.201200,0.207222,0.217308,0.233415,0.258586,0.300334", \
				        "0.295982,0.303223,0.315337,0.334411,0.364189,0.410568");
			}
			cell_rise(Timing_X1) {
				values ("0.043129,0.048378,0.058310,0.077555,0.115223,0.190666", \
				        "0.045854,0.051103,0.061104,0.080410,0.118157,0.193645", \
				        "0.050462,0.055709,0.065622,0.084723,0.122395,0.197745", \
				        "0.057015,0.062375,0.072416,0.091692,0.129283,0.204616", \
				        "0.063495,0.069188,0.079526,0.098957,0.136767,0.212128", \
				        "0.065474,0.072075,0.083431,0.103503,0.141587,0.216835", \
				        "0.054329,0.062349,0.075956,0.098453,0.138006,0.214155", \
				        "0.012058,0.021679,0.038759,0.066189,0.110492,0.189490");
			}
			fall_transition(Timing_X1) {
				values ("0.010232,0.012226,0.016089,0.023663,0.038420,0.069829", \
				        "0.010225,0.012231,0.016087,0.023657,0.038477,0.069829", \
				        "0.010250,0.012222,0.016075,0.023610,0.038418,0.069800", \
				        "0.010533,0.012490,0.016286,0.023757,0.038536,0.069829", \
				        "0.012852,0.014720,0.018305,0.025496,0.039511,0.070155", \
				        "0.016132,0.018086,0.021724,0.028652,0.042259,0.071532", \
				        "0.020821,0.022947,0.026810,0.033738,0.046909,0.074504", \
				        "0.028520,0.030871,0.035007,0.042642,0.055917,0.081944");
			}
			rise_transition(Timing_X1) {
				values ("0.012798,0.016834,0.025182,0.042638,0.078336,0.149955", \
				        "0.012799,0.016826,0.025208,0.042610,0.078337,0.149969", \
				        "0.012878,0.016878,0.025229,0.042646,0.078354,0.149965", \
				        "0.013468,0.017378,0.025539,0.042738,0.078395,0.149954", \
				        "0.014907,0.018622,0.026430,0.043204,0.078508,0.149988", \
				        "0.018119,0.021788,0.029012,0.044799,0.079101,0.150188", \
				        "0.023185,0.027589,0.035123,0.049583,0.082065,0.151978", \
				        "0.030477,0.035889,0.045216,0.060632,0.090066,0.157707");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.001555,0.001319,0.000830,-0.000144,-0.002087,-0.005969", \
				        "0.001553,0.001311,0.000829,-0.000148,-0.002090,-0.005970", \
				        "0.001583,0.001335,0.000855,-0.000120,-0.002059,-0.005932", \
				        "0.001685,0.001433,0.000952,-0.000006,-0.001946,-0.005819", \
				        "0.001960,0.001705,0.001208,0.000243,-0.001699,-0.005576", \
				        "0.002595,0.002326,0.001819,0.000836,-0.001108,-0.004994", \
				        "0.004046,0.003757,0.003220,0.002208,0.000241,-0.003657", \
				        "0.007193,0.006882,0.006290,0.005214,0.003198,-0.000739");
			}
			rise_power(Power_X1) {
				values ("0.001602,0.001839,0.002329,0.003301,0.005247,0.009123", \
				        "0.001594,0.001834,0.002326,0.003302,0.005241,0.009120", \
				        "0.001618,0.001856,0.002341,0.003312,0.005258,0.009133", \
				        "0.001693,0.001931,0.002416,0.003387,0.005324,0.009198", \
				        "0.001936,0.002172,0.002646,0.003606,0.005540,0.009409", \
				        "0.002573,0.002811,0.003265,0.004218,0.006135,0.009995", \
				        "0.004045,0.004259,0.004712,0.005643,0.007543,0.011376", \
				        "0.007204,0.007398,0.007820,0.008715,0.010575,0.014367");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.002443,0.002194,0.001710,0.000746,-0.001212,-0.005094", \
				        "0.002438,0.002188,0.001709,0.000739,-0.001210,-0.005089", \
				        "0.002457,0.002218,0.001726,0.000751,-0.001192,-0.005070", \
				        "0.002552,0.002311,0.001817,0.000856,-0.001085,-0.004960", \
				        "0.002817,0.002561,0.002064,0.001094,-0.000840,-0.004715", \
				        "0.003421,0.003135,0.002639,0.001653,-0.000287,-0.004173", \
				        "0.004734,0.004448,0.003902,0.002902,0.000939,-0.002964", \
				        "0.007513,0.007191,0.006625,0.005574,0.003569,-0.000359");
			}
			rise_power(Power_X1) {
				values ("0.001591,0.001836,0.002323,0.003302,0.005247,0.009122", \
				        "0.001584,0.001828,0.002316,0.003298,0.005241,0.009118", \
				        "0.001571,0.001814,0.002305,0.003278,0.005225,0.009101", \
				        "0.001575,0.001815,0.002301,0.003279,0.005223,0.009099", \
				        "0.001670,0.001910,0.002389,0.003358,0.005297,0.009173", \
				        "0.002098,0.002321,0.002793,0.003749,0.005682,0.009548", \
				        "0.003252,0.003472,0.003934,0.004871,0.006787,0.010637", \
				        "0.005892,0.006097,0.006542,0.007453,0.009336,0.013155");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND2_X2
 Cell Description	: Combinational cell (AND2_X2) with drive strength X2
*******************************************************************************************/

cell (AND2_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 11878.907250;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 8825.954000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 9012.915000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 15148.590000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 14528.170000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000510;
		fall_capacitance	: 0.000501;
		rise_capacitance	: 0.000519;
		fall_capacitance_range		(0.000413, 0.000581);
		rise_capacitance_range		(0.000429, 0.000611);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000006,0.000005,0.000005,0.000004,0.000004,0.000002");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000541;
		fall_capacitance	: 0.000524;
		rise_capacitance	: 0.000557;
		fall_capacitance_range		(0.000461, 0.000591);
		rise_capacitance_range		(0.000460, 0.000635);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000008,0.000004,0.000002,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.042172,0.048538,0.055369,0.067016,0.087070,0.124185", \
				        "0.045887,0.052249,0.059117,0.070712,0.090740,0.127875", \
				        "0.053863,0.060222,0.067151,0.078790,0.098815,0.135953", \
				        "0.068996,0.075620,0.082626,0.094399,0.114596,0.151586", \
				        "0.090575,0.098133,0.106024,0.118895,0.140145,0.177712", \
				        "0.122146,0.130884,0.140099,0.154565,0.177800,0.216699", \
				        "0.171645,0.181984,0.193042,0.210340,0.237032,0.279482", \
				        "0.253468,0.265961,0.279195,0.300702,0.333651,0.384078");
			}
			cell_rise(Timing_X2) {
				values ("0.034251,0.042540,0.052468,0.071169,0.107618,0.180413", \
				        "0.037379,0.045653,0.055587,0.074167,0.110611,0.183400", \
				        "0.043328,0.051581,0.061439,0.079942,0.116287,0.189034", \
				        "0.050844,0.059309,0.069302,0.088041,0.124242,0.196899", \
				        "0.057791,0.067068,0.077241,0.096130,0.132404,0.204918", \
				        "0.060271,0.071221,0.082787,0.102237,0.138658,0.211022", \
				        "0.050262,0.063275,0.077526,0.100041,0.137966,0.210806", \
				        "0.011724,0.027144,0.044194,0.072674,0.116759,0.192179");
			}
			fall_transition(Timing_X2) {
				values ("0.008464,0.011571,0.015400,0.022593,0.036821,0.066720", \
				        "0.008466,0.011577,0.015412,0.022612,0.036823,0.066755", \
				        "0.008503,0.011612,0.015415,0.022633,0.036824,0.066738", \
				        "0.009633,0.012475,0.016088,0.023095,0.037050,0.066838", \
				        "0.012265,0.015252,0.018819,0.025643,0.038683,0.067381", \
				        "0.016032,0.019271,0.023013,0.029781,0.042431,0.069551", \
				        "0.022095,0.025746,0.029882,0.037051,0.049784,0.075070", \
				        "0.032547,0.036808,0.041697,0.049996,0.063996,0.088882");
			}
			rise_transition(Timing_X2) {
				values ("0.009960,0.015761,0.023720,0.040332,0.074552,0.143661", \
				        "0.009947,0.015749,0.023733,0.040333,0.074524,0.143641", \
				        "0.010067,0.015881,0.023818,0.040377,0.074616,0.143660", \
				        "0.011019,0.016533,0.024302,0.040605,0.074596,0.143592", \
				        "0.013093,0.018212,0.025373,0.041259,0.074889,0.143711", \
				        "0.016657,0.022226,0.028702,0.043140,0.075600,0.144091", \
				        "0.022405,0.029044,0.036279,0.049222,0.078974,0.145825", \
				        "0.032383,0.039757,0.048752,0.063535,0.089708,0.151884");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.053833,0.060549,0.067713,0.079753,0.100271,0.137818", \
				        "0.057545,0.064253,0.071442,0.083464,0.103913,0.141527", \
				        "0.065508,0.072217,0.079391,0.091530,0.111956,0.149581", \
				        "0.082005,0.088669,0.095904,0.107908,0.128444,0.165971", \
				        "0.108767,0.116251,0.124103,0.136837,0.157978,0.195732", \
				        "0.146949,0.155601,0.164440,0.178761,0.201560,0.240408", \
				        "0.205226,0.215272,0.226037,0.242295,0.267804,0.308974", \
				        "0.302275,0.314101,0.326178,0.345923,0.375761,0.421818");
			}
			cell_rise(Timing_X2) {
				values ("0.041210,0.049500,0.059389,0.078112,0.114592,0.187346", \
				        "0.043957,0.052244,0.062200,0.080934,0.117432,0.190158", \
				        "0.048678,0.056956,0.066848,0.085506,0.121903,0.194608", \
				        "0.055637,0.064140,0.074180,0.092879,0.129136,0.201846", \
				        "0.062865,0.072022,0.082379,0.101409,0.137651,0.210387", \
				        "0.065895,0.076528,0.087895,0.107680,0.144472,0.216968", \
				        "0.056195,0.068842,0.082626,0.104833,0.143213,0.216532", \
				        "0.016571,0.031354,0.048212,0.075434,0.118793,0.194816");
			}
			fall_transition(Timing_X2) {
				values ("0.009475,0.012528,0.016326,0.023536,0.037610,0.067375", \
				        "0.009480,0.012526,0.016325,0.023518,0.037613,0.067395", \
				        "0.009458,0.012544,0.016332,0.023553,0.037615,0.067377", \
				        "0.009713,0.012712,0.016474,0.023631,0.037684,0.067402", \
				        "0.012304,0.015128,0.018597,0.025437,0.038647,0.067727", \
				        "0.016007,0.018963,0.022538,0.029168,0.041963,0.069503", \
				        "0.021278,0.024489,0.028157,0.034964,0.047411,0.073220", \
				        "0.029665,0.033220,0.037251,0.044460,0.057178,0.081613");
			}
			rise_transition(Timing_X2) {
				values ("0.009920,0.015760,0.023706,0.040314,0.074604,0.143646", \
				        "0.009957,0.015770,0.023720,0.040274,0.074574,0.143614", \
				        "0.010018,0.015809,0.023716,0.040313,0.074586,0.143636", \
				        "0.010610,0.016320,0.024098,0.040419,0.074631,0.143628", \
				        "0.012125,0.017651,0.025083,0.041028,0.074766,0.143682", \
				        "0.015052,0.020905,0.027893,0.042851,0.075465,0.143900", \
				        "0.019666,0.026602,0.034141,0.047958,0.078570,0.145596", \
				        "0.026850,0.034874,0.044126,0.059312,0.087163,0.151318");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.002092,0.001349,0.000381,-0.001568,-0.005453,-0.013224", \
				        "0.002083,0.001341,0.000370,-0.001573,-0.005451,-0.013228", \
				        "0.002106,0.001358,0.000395,-0.001552,-0.005426,-0.013198", \
				        "0.002243,0.001474,0.000494,-0.001434,-0.005311,-0.013059", \
				        "0.002592,0.001778,0.000771,-0.001173,-0.005060,-0.012817", \
				        "0.003346,0.002476,0.001422,-0.000562,-0.004462,-0.012243", \
				        "0.004999,0.004067,0.002924,0.000857,-0.003096,-0.010913", \
				        "0.008527,0.007490,0.006269,0.004039,-0.000049,-0.007953");
			}
			rise_power(Power_X2) {
				values ("0.002056,0.002783,0.003761,0.005713,0.009601,0.017353", \
				        "0.002055,0.002780,0.003762,0.005717,0.009599,0.017354", \
				        "0.002091,0.002805,0.003772,0.005709,0.009596,0.017351", \
				        "0.002197,0.002896,0.003857,0.005794,0.009666,0.017410", \
				        "0.002479,0.003164,0.004103,0.006023,0.009878,0.017611", \
				        "0.003192,0.003848,0.004770,0.006654,0.010477,0.018188", \
				        "0.004853,0.005436,0.006321,0.008165,0.011943,0.019598", \
				        "0.008428,0.008895,0.009694,0.011459,0.015148,0.022711");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.003004,0.002240,0.001260,-0.000679,-0.004561,-0.012328", \
				        "0.002998,0.002233,0.001256,-0.000679,-0.004563,-0.012338", \
				        "0.003019,0.002257,0.001271,-0.000672,-0.004549,-0.012326", \
				        "0.003125,0.002349,0.001363,-0.000577,-0.004454,-0.012210", \
				        "0.003461,0.002650,0.001640,-0.000308,-0.004191,-0.011942", \
				        "0.004203,0.003328,0.002270,0.000280,-0.003621,-0.011407", \
				        "0.005715,0.004775,0.003648,0.001596,-0.002356,-0.010179", \
				        "0.008846,0.007815,0.006623,0.004431,0.000369,-0.007526");
			}
			rise_power(Power_X2) {
				values ("0.002062,0.002776,0.003756,0.005712,0.009599,0.017350", \
				        "0.002046,0.002762,0.003748,0.005708,0.009595,0.017347", \
				        "0.002039,0.002758,0.003732,0.005687,0.009577,0.017328", \
				        "0.002058,0.002771,0.003745,0.005688,0.009569,0.017321", \
				        "0.002186,0.002884,0.003837,0.005768,0.009640,0.017386", \
				        "0.002654,0.003327,0.004261,0.006168,0.010023,0.017776", \
				        "0.003930,0.004558,0.005459,0.007333,0.011147,0.018848", \
				        "0.006835,0.007379,0.008224,0.010037,0.013781,0.021403");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND2_X4
 Cell Description	: Combinational cell (AND2_X4) with drive strength X4
*******************************************************************************************/

cell (AND2_X4) {

	area               	: 1.064000;

	cell_leakage_power 	: 19176.880000;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 17059.320000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 17246.710000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 23381.990000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 19019.500000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000485;
		fall_capacitance	: 0.000477;
		rise_capacitance	: 0.000492;
		fall_capacitance_range		(0.000415, 0.000550);
		rise_capacitance_range		(0.000406, 0.000591);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000006,0.000005,0.000005,0.000004,0.000004,0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000537;
		fall_capacitance	: 0.000520;
		rise_capacitance	: 0.000555;
		fall_capacitance_range		(0.000445, 0.000584);
		rise_capacitance_range		(0.000459, 0.000636);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000003,0.000002,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.048165,0.056564,0.064050,0.076377,0.097174,0.134413", \
				        "0.051870,0.060261,0.067746,0.080052,0.100828,0.138072", \
				        "0.059789,0.068178,0.075663,0.088041,0.108838,0.146178", \
				        "0.076010,0.084404,0.091822,0.104167,0.124997,0.162166", \
				        "0.100441,0.109935,0.118240,0.131500,0.153190,0.190670", \
				        "0.135355,0.146175,0.155829,0.170793,0.194534,0.233645", \
				        "0.189513,0.201968,0.213077,0.230785,0.257898,0.300616", \
				        "0.277603,0.292185,0.305289,0.326704,0.359700,0.410040");
			}
			cell_rise(Timing_X4) {
				values ("0.036772,0.047293,0.057488,0.076231,0.112242,0.183840", \
				        "0.039852,0.050372,0.060594,0.079188,0.115168,0.186801", \
				        "0.046157,0.056625,0.066757,0.085353,0.121198,0.192810", \
				        "0.055383,0.066104,0.076297,0.094963,0.130739,0.202206", \
				        "0.064418,0.076159,0.086737,0.105588,0.141199,0.212625", \
				        "0.069829,0.083295,0.095399,0.115072,0.150843,0.221803", \
				        "0.064491,0.079953,0.094232,0.117289,0.154752,0.225800", \
				        "0.032370,0.050023,0.066814,0.095185,0.139421,0.213068");
			}
			fall_transition(Timing_X4) {
				values ("0.009532,0.013272,0.017147,0.024280,0.038130,0.066873", \
				        "0.009532,0.013272,0.017170,0.024277,0.038124,0.066905", \
				        "0.009522,0.013284,0.017148,0.024286,0.038097,0.066937", \
				        "0.010237,0.013745,0.017523,0.024556,0.038270,0.066954", \
				        "0.013549,0.016988,0.020475,0.027153,0.039862,0.067583", \
				        "0.018249,0.021862,0.025459,0.031996,0.044393,0.070375", \
				        "0.025399,0.029287,0.033222,0.040128,0.052371,0.076550", \
				        "0.037583,0.041823,0.046296,0.054054,0.067376,0.091113");
			}
			rise_transition(Timing_X4) {
				values ("0.009275,0.016160,0.023921,0.039939,0.073304,0.141094", \
				        "0.009281,0.016160,0.023918,0.039957,0.073194,0.141074", \
				        "0.009325,0.016198,0.023928,0.039973,0.073232,0.141057", \
				        "0.010395,0.016924,0.024479,0.040220,0.073288,0.141070", \
				        "0.012705,0.018923,0.025870,0.040988,0.073672,0.141185", \
				        "0.016602,0.023331,0.029734,0.043420,0.074470,0.141489", \
				        "0.023349,0.030621,0.037956,0.050463,0.078235,0.143114", \
				        "0.035406,0.042601,0.051116,0.065726,0.090574,0.149484");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.059921,0.068722,0.076447,0.089134,0.110397,0.148156", \
				        "0.063695,0.072477,0.080155,0.092820,0.114041,0.151774", \
				        "0.071519,0.080322,0.088064,0.100735,0.122002,0.159795", \
				        "0.088069,0.096809,0.104538,0.117276,0.138524,0.176282", \
				        "0.117231,0.126728,0.134821,0.148083,0.169617,0.207356", \
				        "0.158340,0.169257,0.178700,0.193422,0.216953,0.256030", \
				        "0.220618,0.233111,0.244122,0.261038,0.287328,0.329087", \
				        "0.322810,0.337153,0.349534,0.369773,0.400192,0.447087");
			}
			cell_rise(Timing_X4) {
				values ("0.043723,0.054245,0.064435,0.083152,0.119179,0.190790", \
				        "0.046481,0.057004,0.067251,0.085930,0.122114,0.193685", \
				        "0.051388,0.061874,0.072113,0.090870,0.126826,0.198370", \
				        "0.059115,0.069858,0.080111,0.098787,0.134629,0.206173", \
				        "0.068094,0.079546,0.090124,0.109132,0.144943,0.216531", \
				        "0.073901,0.086917,0.098590,0.118422,0.154577,0.225863", \
				        "0.068333,0.083326,0.097365,0.119675,0.157536,0.229333", \
				        "0.035293,0.052352,0.068549,0.096040,0.138905,0.213251");
			}
			fall_transition(Timing_X4) {
				values ("0.010670,0.014333,0.018132,0.025207,0.038968,0.067563", \
				        "0.010677,0.014334,0.018140,0.025210,0.038979,0.067625", \
				        "0.010694,0.014328,0.018133,0.025210,0.038980,0.067628", \
				        "0.010746,0.014415,0.018217,0.025269,0.039002,0.067576", \
				        "0.013546,0.016797,0.020274,0.026877,0.039842,0.067969", \
				        "0.018203,0.021605,0.025040,0.031527,0.043843,0.070278", \
				        "0.024735,0.028310,0.031843,0.038407,0.050501,0.075100", \
				        "0.034804,0.038580,0.042400,0.049289,0.061665,0.084873");
			}
			rise_transition(Timing_X4) {
				values ("0.009256,0.016143,0.023879,0.039858,0.073244,0.141066", \
				        "0.009264,0.016155,0.023895,0.039938,0.073313,0.141095", \
				        "0.009266,0.016162,0.023890,0.039942,0.073298,0.141096", \
				        "0.009848,0.016624,0.024212,0.040044,0.073335,0.141095", \
				        "0.011290,0.018012,0.025370,0.040726,0.073417,0.141113", \
				        "0.014229,0.021304,0.028287,0.042703,0.074338,0.141324", \
				        "0.019292,0.027194,0.034720,0.048231,0.077595,0.142930", \
				        "0.027746,0.036119,0.045103,0.060002,0.086864,0.148684");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.003282,0.001410,-0.000558,-0.004453,-0.012227,-0.027770", \
				        "0.003277,0.001393,-0.000567,-0.004459,-0.012229,-0.027776", \
				        "0.003295,0.001412,-0.000566,-0.004453,-0.012216,-0.027794", \
				        "0.003477,0.001553,-0.000443,-0.004331,-0.012094,-0.027601", \
				        "0.004059,0.001993,-0.000085,-0.004025,-0.011799,-0.027319", \
				        "0.005165,0.002934,0.000724,-0.003325,-0.011164,-0.026762", \
				        "0.007336,0.004932,0.002543,-0.001732,-0.009724,-0.025412", \
				        "0.011752,0.009183,0.006591,0.001939,-0.006421,-0.022327");
			}
			rise_power(Power_X4) {
				values ("0.003010,0.004672,0.006621,0.010511,0.018284,0.033789", \
				        "0.003014,0.004673,0.006611,0.010507,0.018277,0.033783", \
				        "0.003063,0.004703,0.006632,0.010509,0.018272,0.033775", \
				        "0.003241,0.004850,0.006746,0.010600,0.018336,0.033826", \
				        "0.003658,0.005193,0.007057,0.010880,0.018560,0.034021", \
				        "0.004622,0.006027,0.007841,0.011587,0.019215,0.034605", \
				        "0.006805,0.007958,0.009668,0.013306,0.020828,0.036096", \
				        "0.011391,0.012218,0.013679,0.017110,0.024433,0.039500");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004282,0.002352,0.000348,-0.003550,-0.011319,-0.026869", \
				        "0.004288,0.002357,0.000343,-0.003554,-0.011334,-0.026884", \
				        "0.004301,0.002365,0.000356,-0.003548,-0.011319,-0.026885", \
				        "0.004412,0.002460,0.000443,-0.003470,-0.011238,-0.026794", \
				        "0.004949,0.002881,0.000801,-0.003139,-0.010920,-0.026433", \
				        "0.006050,0.003823,0.001594,-0.002451,-0.010285,-0.025900", \
				        "0.008096,0.005701,0.003327,-0.000934,-0.008922,-0.024615", \
				        "0.012037,0.009476,0.006922,0.002334,-0.005940,-0.021821");
			}
			rise_power(Power_X4) {
				values ("0.003010,0.004670,0.006611,0.010510,0.018283,0.033795", \
				        "0.003011,0.004664,0.006608,0.010501,0.018277,0.033781", \
				        "0.003010,0.004666,0.006603,0.010506,0.018273,0.033777", \
				        "0.003063,0.004694,0.006611,0.010489,0.018251,0.033748", \
				        "0.003268,0.004859,0.006742,0.010597,0.018322,0.033813", \
				        "0.003899,0.005391,0.007241,0.011038,0.018715,0.034156", \
				        "0.005521,0.006835,0.008609,0.012309,0.019908,0.035261", \
				        "0.009119,0.010147,0.011749,0.015321,0.022768,0.037969");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND3_X1
 Cell Description	: Combinational cell (AND3_X1) with drive strength X1
*******************************************************************************************/

cell (AND3_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 10327.530625;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 4957.708000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 10844.650000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 4171.287000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 11098.430000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 5325.161000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 19278.460000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 5164.379000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 21780.170000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000573;
		fall_capacitance	: 0.000573;
		rise_capacitance	: 0.000573;
		fall_capacitance_range		(0.000475, 0.000666);
		rise_capacitance_range		(0.000467, 0.000689);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000009,0.000008,0.000007,0.000006,0.000006,0.000005,0.000004");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,0.000000,-0.000001");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000577;
		fall_capacitance	: 0.000576;
		rise_capacitance	: 0.000579;
		fall_capacitance_range		(0.000509, 0.000643);
		rise_capacitance_range		(0.000476, 0.000682);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000002,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000556;
		fall_capacitance	: 0.000541;
		rise_capacitance	: 0.000571;
		fall_capacitance_range		(0.000492, 0.000601);
		rise_capacitance_range		(0.000484, 0.000659);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,-0.000000,-0.000001,-0.000002,-0.000004,-0.000005,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049407,0.053492,0.060552,0.072714,0.093786,0.132472", \
				        "0.053104,0.057188,0.064283,0.076488,0.097477,0.136085", \
				        "0.061091,0.065168,0.072251,0.084526,0.105551,0.144268", \
				        "0.076699,0.080870,0.088049,0.100243,0.121437,0.160099", \
				        "0.099967,0.104735,0.112833,0.126060,0.148385,0.187438", \
				        "0.134567,0.140084,0.149215,0.164250,0.188357,0.229063", \
				        "0.188955,0.195493,0.206708,0.224450,0.252204,0.296596", \
				        "0.278940,0.287009,0.300671,0.322617,0.356779,0.409273");
			}
			cell_rise(Timing_X1) {
				values ("0.042565,0.048321,0.058941,0.078960,0.116864,0.192259", \
				        "0.045550,0.051299,0.061929,0.081861,0.119687,0.195061", \
				        "0.051441,0.057146,0.067705,0.087270,0.125144,0.200532", \
				        "0.059279,0.065001,0.075603,0.095519,0.133266,0.208549", \
				        "0.066758,0.072673,0.083499,0.103405,0.141507,0.216717", \
				        "0.070061,0.076880,0.088408,0.108870,0.147111,0.222289", \
				        "0.059208,0.067510,0.081909,0.104782,0.144402,0.220343", \
				        "0.016650,0.026714,0.043991,0.072965,0.118137,0.196784");
			}
			fall_transition(Timing_X1) {
				values ("0.010759,0.012860,0.016847,0.024557,0.039280,0.070145", \
				        "0.010762,0.012865,0.016859,0.024541,0.039274,0.070138", \
				        "0.010788,0.012878,0.016855,0.024555,0.039286,0.070081", \
				        "0.011529,0.013513,0.017366,0.024925,0.039445,0.070209", \
				        "0.014073,0.016111,0.019879,0.027230,0.041030,0.070713", \
				        "0.017693,0.019902,0.023887,0.031135,0.044628,0.072873", \
				        "0.023548,0.026044,0.030473,0.038123,0.051598,0.078259", \
				        "0.033465,0.036454,0.041658,0.050597,0.065538,0.091984");
			}
			rise_transition(Timing_X1) {
				values ("0.015019,0.019115,0.027368,0.044240,0.079204,0.150579", \
				        "0.015003,0.019106,0.027337,0.044236,0.079177,0.150592", \
				        "0.014998,0.019112,0.027385,0.044275,0.079206,0.150601", \
				        "0.015387,0.019477,0.027736,0.044483,0.079241,0.150612", \
				        "0.016833,0.020548,0.028430,0.045066,0.079640,0.150742", \
				        "0.020514,0.024065,0.031112,0.046636,0.080438,0.151182", \
				        "0.026566,0.030861,0.038168,0.051989,0.083541,0.152921", \
				        "0.036063,0.041272,0.050537,0.065569,0.093256,0.159056");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.063960,0.068278,0.075649,0.088203,0.109968,0.149133", \
				        "0.067562,0.071883,0.079267,0.091794,0.113446,0.152665", \
				        "0.075234,0.079551,0.087047,0.099649,0.121284,0.160534", \
				        "0.091796,0.096101,0.103467,0.116127,0.137744,0.176957", \
				        "0.120488,0.125199,0.133219,0.146427,0.168472,0.207804", \
				        "0.162105,0.167542,0.176579,0.191235,0.215136,0.255716", \
				        "0.225882,0.231869,0.242698,0.259592,0.286122,0.329204", \
				        "0.330349,0.337904,0.350651,0.370522,0.401624,0.449865");
			}
			cell_rise(Timing_X1) {
				values ("0.052635,0.058382,0.068954,0.088872,0.126790,0.202172", \
				        "0.055379,0.061127,0.071773,0.091598,0.129590,0.204950", \
				        "0.060382,0.066114,0.076738,0.096632,0.134483,0.209813", \
				        "0.068323,0.074148,0.084839,0.104696,0.142495,0.217792", \
				        "0.077054,0.083148,0.094083,0.114229,0.152374,0.227681", \
				        "0.081632,0.088568,0.100538,0.121344,0.159838,0.235021", \
				        "0.073248,0.081569,0.095649,0.119089,0.159217,0.235225", \
				        "0.033249,0.043098,0.060797,0.089155,0.134664,0.213736");
			}
			fall_transition(Timing_X1) {
				values ("0.011873,0.013954,0.017920,0.025642,0.040245,0.070895", \
				        "0.011875,0.013955,0.017922,0.025495,0.040210,0.070811", \
				        "0.011876,0.013953,0.017911,0.025484,0.040209,0.070851", \
				        "0.011978,0.014050,0.018006,0.025530,0.040262,0.070904", \
				        "0.014108,0.016064,0.019768,0.026870,0.040994,0.071173", \
				        "0.017735,0.019753,0.023522,0.030672,0.044350,0.072937", \
				        "0.022840,0.025073,0.029033,0.036246,0.049611,0.076647", \
				        "0.031008,0.033458,0.037720,0.045545,0.059233,0.084947");
			}
			rise_transition(Timing_X1) {
				values ("0.015025,0.019122,0.027331,0.044168,0.079199,0.150581", \
				        "0.015034,0.019130,0.027355,0.044217,0.079139,0.150591", \
				        "0.015050,0.019147,0.027365,0.044232,0.079126,0.150603", \
				        "0.015515,0.019571,0.027684,0.044462,0.079237,0.150603", \
				        "0.016874,0.020760,0.028627,0.045100,0.079514,0.150662", \
				        "0.020128,0.023982,0.031344,0.046806,0.080308,0.151011", \
				        "0.025511,0.030044,0.037805,0.052096,0.083549,0.152583", \
				        "0.033309,0.038809,0.048334,0.063915,0.092631,0.158501");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.075788,0.080328,0.088001,0.101038,0.123304,0.163045", \
				        "0.079428,0.083965,0.091668,0.104598,0.126854,0.166592", \
				        "0.087106,0.091637,0.099368,0.112408,0.134629,0.174403", \
				        "0.103599,0.108128,0.115793,0.128959,0.151217,0.191012", \
				        "0.135719,0.140420,0.148468,0.161581,0.183874,0.223598", \
				        "0.183669,0.189081,0.198034,0.212615,0.236428,0.277158", \
				        "0.255553,0.261855,0.272473,0.289117,0.315448,0.358318", \
				        "0.373955,0.381294,0.393918,0.413113,0.443027,0.490055");
			}
			cell_rise(Timing_X1) {
				values ("0.058477,0.064225,0.074820,0.094763,0.132756,0.208080", \
				        "0.060991,0.066739,0.077366,0.097150,0.135275,0.210637", \
				        "0.065019,0.070762,0.081470,0.101405,0.139249,0.214657", \
				        "0.070800,0.076610,0.087316,0.107320,0.145113,0.220503", \
				        "0.077242,0.083276,0.094219,0.114372,0.152352,0.227722", \
				        "0.079221,0.085963,0.097837,0.118742,0.157425,0.232658", \
				        "0.063928,0.072101,0.086109,0.109594,0.150179,0.226609", \
				        "0.010596,0.020461,0.038005,0.066728,0.112691,0.192687");
			}
			fall_transition(Timing_X1) {
				values ("0.012921,0.014984,0.018962,0.026542,0.041226,0.071711", \
				        "0.012921,0.014984,0.018946,0.026573,0.041212,0.071665", \
				        "0.012918,0.014999,0.018955,0.026635,0.041212,0.071715", \
				        "0.012920,0.014988,0.018945,0.026532,0.041193,0.071717", \
				        "0.014210,0.016142,0.019861,0.027184,0.041618,0.071874", \
				        "0.017859,0.019822,0.023501,0.030571,0.044408,0.073132", \
				        "0.022868,0.024957,0.028751,0.035844,0.049176,0.076471", \
				        "0.030170,0.032446,0.036497,0.043911,0.057283,0.083257");
			}
			rise_transition(Timing_X1) {
				values ("0.015025,0.019122,0.027353,0.044234,0.079168,0.150603", \
				        "0.015034,0.019132,0.027350,0.044231,0.079192,0.150588", \
				        "0.015031,0.019127,0.027346,0.044203,0.079199,0.150594", \
				        "0.015334,0.019410,0.027544,0.044367,0.079214,0.150602", \
				        "0.016285,0.020322,0.028356,0.044882,0.079445,0.150646", \
				        "0.018993,0.023009,0.030715,0.046577,0.080195,0.150828", \
				        "0.024317,0.028957,0.036969,0.051879,0.083713,0.152761", \
				        "0.032370,0.038017,0.047801,0.063864,0.093294,0.159372");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.001777,0.001531,0.001049,0.000080,-0.001870,-0.005756", \
				        "0.001776,0.001528,0.001039,0.000072,-0.001879,-0.005757", \
				        "0.001794,0.001541,0.001058,0.000087,-0.001852,-0.005742", \
				        "0.001890,0.001638,0.001152,0.000191,-0.001752,-0.005629", \
				        "0.002162,0.001906,0.001403,0.000439,-0.001500,-0.005377", \
				        "0.002817,0.002548,0.002031,0.001043,-0.000902,-0.004791", \
				        "0.004308,0.004012,0.003474,0.002455,0.000486,-0.003419", \
				        "0.007580,0.007270,0.006664,0.005582,0.003558,-0.000385");
			}
			rise_power(Power_X1) {
				values ("0.002139,0.002367,0.002858,0.003832,0.005775,0.009652", \
				        "0.002134,0.002379,0.002857,0.003830,0.005776,0.009650", \
				        "0.002152,0.002391,0.002876,0.003842,0.005784,0.009657", \
				        "0.002231,0.002465,0.002946,0.003917,0.005852,0.009722", \
				        "0.002465,0.002689,0.003166,0.004123,0.006058,0.009918", \
				        "0.003095,0.003314,0.003775,0.004723,0.006638,0.010493", \
				        "0.004565,0.004797,0.005251,0.006169,0.008070,0.011895", \
				        "0.007853,0.008026,0.008468,0.009363,0.011218,0.014992");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.002840,0.002583,0.002108,0.001138,-0.000813,-0.004692", \
				        "0.002831,0.002585,0.002094,0.001131,-0.000822,-0.004701", \
				        "0.002839,0.002586,0.002103,0.001135,-0.000813,-0.004695", \
				        "0.002919,0.002666,0.002179,0.001205,-0.000735,-0.004613", \
				        "0.003185,0.002929,0.002423,0.001452,-0.000483,-0.004356", \
				        "0.003801,0.003530,0.003015,0.002020,0.000077,-0.003811", \
				        "0.005163,0.004870,0.004335,0.003314,0.001344,-0.002561", \
				        "0.008046,0.007736,0.007150,0.006095,0.004084,0.000140");
			}
			rise_power(Power_X1) {
				values ("0.002130,0.002374,0.002854,0.003828,0.005780,0.009658", \
				        "0.002129,0.002366,0.002842,0.003828,0.005771,0.009650", \
				        "0.002108,0.002351,0.002834,0.003819,0.005763,0.009639", \
				        "0.002113,0.002350,0.002835,0.003815,0.005755,0.009628", \
				        "0.002201,0.002435,0.002909,0.003875,0.005807,0.009680", \
				        "0.002576,0.002802,0.003278,0.004225,0.006152,0.010016", \
				        "0.003721,0.003942,0.004396,0.005337,0.007239,0.011083", \
				        "0.006426,0.006627,0.007072,0.007975,0.009850,0.013661");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.003773,0.003521,0.003023,0.002056,0.000113,-0.003761", \
				        "0.003758,0.003517,0.003014,0.002048,0.000105,-0.003768", \
				        "0.003773,0.003512,0.003026,0.002059,0.000110,-0.003767", \
				        "0.003851,0.003591,0.003097,0.002121,0.000172,-0.003710", \
				        "0.004092,0.003833,0.003335,0.002361,0.000429,-0.003441", \
				        "0.004719,0.004441,0.003925,0.002931,0.000982,-0.002902", \
				        "0.006080,0.005790,0.005253,0.004224,0.002255,-0.001652", \
				        "0.008986,0.008666,0.008104,0.007038,0.005022,0.001086");
			}
			rise_power(Power_X1) {
				values ("0.002139,0.002383,0.002868,0.003848,0.005789,0.009665", \
				        "0.002127,0.002364,0.002846,0.003823,0.005760,0.009640", \
				        "0.002123,0.002362,0.002846,0.003829,0.005767,0.009641", \
				        "0.002110,0.002351,0.002842,0.003815,0.005758,0.009632", \
				        "0.002167,0.002386,0.002868,0.003847,0.005792,0.009663", \
				        "0.002430,0.002678,0.003142,0.004103,0.006035,0.009902", \
				        "0.003466,0.003689,0.004157,0.005092,0.007009,0.010862", \
				        "0.006147,0.006365,0.006800,0.007716,0.009597,0.013413");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND3_X2
 Cell Description	: Combinational cell (AND3_X2) with drive strength X2
*******************************************************************************************/

cell (AND3_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 14210.349000;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 9074.292000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 14961.240000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 8287.943000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 15215.190000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 9441.749000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 23394.940000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 9281.128000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 24026.310000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000589;
		fall_capacitance	: 0.000590;
		rise_capacitance	: 0.000587;
		fall_capacitance_range		(0.000513, 0.000678);
		rise_capacitance_range		(0.000488, 0.000706);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000009,0.000008,0.000007,0.000006,0.000006,0.000005,0.000004");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,0.000000,-0.000001");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000578;
		fall_capacitance	: 0.000574;
		rise_capacitance	: 0.000581;
		fall_capacitance_range		(0.000515, 0.000641);
		rise_capacitance_range		(0.000486, 0.000684);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000002,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000552;
		fall_capacitance	: 0.000538;
		rise_capacitance	: 0.000567;
		fall_capacitance_range		(0.000482, 0.000596);
		rise_capacitance_range		(0.000464, 0.000657);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,-0.000000,-0.000001,-0.000002,-0.000004,-0.000005,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.049611,0.056561,0.063950,0.076476,0.097514,0.135421", \
				        "0.053311,0.060255,0.067659,0.080140,0.101134,0.139082", \
				        "0.061184,0.068118,0.075583,0.088126,0.109166,0.147157", \
				        "0.077195,0.084198,0.091688,0.104190,0.125326,0.163136", \
				        "0.101621,0.109584,0.117896,0.131452,0.153536,0.191783", \
				        "0.137306,0.146469,0.156057,0.171336,0.195590,0.235596", \
				        "0.193177,0.203943,0.215563,0.233434,0.261334,0.305164", \
				        "0.285494,0.298479,0.312095,0.334366,0.368296,0.420154");
			}
			cell_rise(Timing_X2) {
				values ("0.039675,0.048929,0.059666,0.079320,0.116158,0.188939", \
				        "0.042620,0.051873,0.062643,0.082206,0.118954,0.191730", \
				        "0.048743,0.057912,0.068565,0.087940,0.124662,0.197384", \
				        "0.057485,0.066669,0.077454,0.096975,0.133667,0.206329", \
				        "0.066023,0.075790,0.086629,0.106358,0.143142,0.215755", \
				        "0.070081,0.081428,0.093354,0.113667,0.150688,0.223143", \
				        "0.060630,0.074014,0.088825,0.111840,0.150595,0.223605", \
				        "0.020257,0.036063,0.053445,0.082629,0.127392,0.203261");
			}
			fall_transition(Timing_X2) {
				values ("0.009601,0.012898,0.016878,0.024285,0.038352,0.067629", \
				        "0.009604,0.012901,0.016894,0.024250,0.038356,0.067612", \
				        "0.009613,0.012920,0.016868,0.024292,0.038323,0.067681", \
				        "0.010239,0.013363,0.017252,0.024586,0.038530,0.067710", \
				        "0.013013,0.016159,0.019914,0.026942,0.040005,0.068346", \
				        "0.016898,0.020313,0.024266,0.031294,0.044184,0.070938", \
				        "0.022976,0.026835,0.031158,0.038726,0.051641,0.076774", \
				        "0.033330,0.037826,0.042917,0.051485,0.065874,0.091000");
			}
			rise_transition(Timing_X2) {
				values ("0.011487,0.017632,0.025620,0.041761,0.075034,0.143787", \
				        "0.011486,0.017637,0.025605,0.041746,0.075111,0.143796", \
				        "0.011406,0.017614,0.025611,0.041767,0.075123,0.143798", \
				        "0.011971,0.018013,0.025971,0.041980,0.075252,0.143843", \
				        "0.013864,0.019387,0.026846,0.042735,0.075607,0.143916", \
				        "0.017385,0.023200,0.029996,0.044534,0.076436,0.144387", \
				        "0.023131,0.029966,0.037417,0.050642,0.079963,0.146126", \
				        "0.032945,0.040538,0.049735,0.064749,0.090946,0.152397");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.063883,0.071195,0.078950,0.091929,0.113565,0.151960", \
				        "0.067461,0.074784,0.082610,0.095478,0.117081,0.155504", \
				        "0.075220,0.082552,0.090286,0.103281,0.124853,0.163365", \
				        "0.091604,0.098885,0.106757,0.119756,0.141341,0.179905", \
				        "0.121197,0.129105,0.137430,0.150808,0.172838,0.211320", \
				        "0.163846,0.173023,0.182292,0.197448,0.221338,0.261279", \
				        "0.228547,0.239177,0.250535,0.267730,0.294519,0.337196", \
				        "0.335090,0.347596,0.360321,0.381068,0.412461,0.460522");
			}
			cell_rise(Timing_X2) {
				values ("0.049774,0.059019,0.069763,0.089306,0.126187,0.198890", \
				        "0.052543,0.061788,0.072545,0.092060,0.129030,0.201776", \
				        "0.057622,0.066844,0.077613,0.097252,0.133975,0.206709", \
				        "0.065929,0.075307,0.086120,0.105701,0.142423,0.215094", \
				        "0.075376,0.085299,0.096490,0.116375,0.153284,0.225987", \
				        "0.081039,0.092343,0.104469,0.125210,0.162648,0.235226", \
				        "0.073840,0.087195,0.101667,0.125107,0.164331,0.237656", \
				        "0.036349,0.051852,0.069415,0.097752,0.142750,0.219172");
			}
			fall_transition(Timing_X2) {
				values ("0.010794,0.014031,0.017977,0.025386,0.039379,0.068452", \
				        "0.010795,0.014032,0.017981,0.025338,0.039360,0.068498", \
				        "0.010815,0.014039,0.017982,0.025394,0.039384,0.068433", \
				        "0.010861,0.014101,0.018042,0.025457,0.039390,0.068441", \
				        "0.013160,0.016132,0.019776,0.026657,0.040103,0.068832", \
				        "0.017129,0.020278,0.024013,0.030892,0.043878,0.070871", \
				        "0.022734,0.026138,0.030006,0.037066,0.049810,0.075300", \
				        "0.031446,0.035259,0.039508,0.047015,0.060214,0.084560");
			}
			rise_transition(Timing_X2) {
				values ("0.011482,0.017634,0.025592,0.041728,0.075141,0.143795", \
				        "0.011499,0.017653,0.025606,0.041720,0.075163,0.143837", \
				        "0.011509,0.017658,0.025591,0.041691,0.075046,0.143811", \
				        "0.011975,0.018064,0.025910,0.041944,0.075219,0.143832", \
				        "0.013394,0.019334,0.026982,0.042690,0.075476,0.143837", \
				        "0.016395,0.022614,0.029855,0.044660,0.076458,0.144266", \
				        "0.021255,0.028522,0.036399,0.050255,0.079891,0.145819", \
				        "0.028896,0.037154,0.046713,0.062321,0.089620,0.151854");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.075556,0.083211,0.091362,0.104689,0.126888,0.165879", \
				        "0.079225,0.086881,0.094996,0.108248,0.130404,0.169391", \
				        "0.086855,0.094516,0.102759,0.116061,0.138193,0.177156", \
				        "0.103301,0.110946,0.119003,0.132456,0.154634,0.193776", \
				        "0.135883,0.143777,0.152182,0.165523,0.187716,0.226619", \
				        "0.184766,0.193868,0.203084,0.218056,0.242045,0.282050", \
				        "0.257675,0.268249,0.279478,0.296593,0.322913,0.365396", \
				        "0.377443,0.389747,0.402703,0.422284,0.452939,0.499843");
			}
			cell_rise(Timing_X2) {
				values ("0.055631,0.064872,0.075567,0.095232,0.132085,0.204855", \
				        "0.058151,0.067394,0.078165,0.097647,0.134544,0.207252", \
				        "0.062174,0.071412,0.082242,0.101858,0.138626,0.211393", \
				        "0.068086,0.077433,0.088252,0.107929,0.144643,0.217373", \
				        "0.074811,0.084553,0.095700,0.115573,0.152435,0.225137", \
				        "0.077488,0.088417,0.100453,0.121205,0.158887,0.231603", \
				        "0.063581,0.076535,0.090700,0.114064,0.153673,0.227487", \
				        "0.012215,0.027599,0.045101,0.073453,0.118828,0.196243");
			}
			fall_transition(Timing_X2) {
				values ("0.011897,0.015092,0.019039,0.026424,0.040322,0.069337", \
				        "0.011897,0.015092,0.019038,0.026424,0.040341,0.069345", \
				        "0.011880,0.015077,0.019034,0.026433,0.040305,0.069314", \
				        "0.011893,0.015097,0.019050,0.026438,0.040364,0.069334", \
				        "0.013248,0.016179,0.019818,0.026848,0.040692,0.069449", \
				        "0.017280,0.020304,0.023901,0.030751,0.043883,0.071049", \
				        "0.022797,0.026042,0.029743,0.036591,0.049337,0.075055", \
				        "0.030768,0.034309,0.038254,0.045427,0.058270,0.082750");
			}
			rise_transition(Timing_X2) {
				values ("0.011480,0.017646,0.025595,0.041668,0.075158,0.143837", \
				        "0.011483,0.017652,0.025612,0.041686,0.075143,0.143797", \
				        "0.011488,0.017638,0.025604,0.041670,0.075052,0.143769", \
				        "0.011787,0.017904,0.025759,0.041861,0.075106,0.143774", \
				        "0.012633,0.018813,0.026628,0.042435,0.075363,0.143831", \
				        "0.015061,0.021435,0.029052,0.044240,0.076329,0.144118", \
				        "0.019677,0.027095,0.035207,0.049707,0.080029,0.146035", \
				        "0.027311,0.035880,0.045659,0.061669,0.089834,0.152699");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.002373,0.001612,0.000637,-0.001307,-0.005195,-0.012971", \
				        "0.002362,0.001609,0.000632,-0.001313,-0.005197,-0.012973", \
				        "0.002385,0.001621,0.000648,-0.001301,-0.005182,-0.012970", \
				        "0.002502,0.001722,0.000741,-0.001200,-0.005080,-0.012825", \
				        "0.002859,0.002036,0.001027,-0.000931,-0.004816,-0.012571", \
				        "0.003641,0.002766,0.001699,-0.000300,-0.004210,-0.011997", \
				        "0.005353,0.004393,0.003253,0.001171,-0.002795,-0.010624", \
				        "0.009004,0.007966,0.006725,0.004492,0.000377,-0.007542");
			}
			rise_power(Power_X2) {
				values ("0.002569,0.003282,0.004250,0.006198,0.010086,0.017839", \
				        "0.002568,0.003279,0.004255,0.006204,0.010087,0.017840", \
				        "0.002603,0.003305,0.004264,0.006204,0.010084,0.017837", \
				        "0.002703,0.003399,0.004354,0.006284,0.010155,0.017898", \
				        "0.002976,0.003664,0.004598,0.006509,0.010360,0.018092", \
				        "0.003691,0.004348,0.005258,0.007136,0.010958,0.018654", \
				        "0.005385,0.005968,0.006846,0.008687,0.012451,0.020092", \
				        "0.009067,0.009528,0.010344,0.012097,0.015775,0.023327");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.003474,0.002695,0.001704,-0.000235,-0.004124,-0.011882", \
				        "0.003466,0.002680,0.001697,-0.000246,-0.004138,-0.011903", \
				        "0.003478,0.002692,0.001702,-0.000242,-0.004129,-0.011905", \
				        "0.003558,0.002766,0.001774,-0.000176,-0.004056,-0.011842", \
				        "0.003896,0.003072,0.002048,0.000094,-0.003793,-0.011542", \
				        "0.004667,0.003781,0.002709,0.000698,-0.003206,-0.011000", \
				        "0.006235,0.005288,0.004152,0.002078,-0.001892,-0.009729", \
				        "0.009501,0.008482,0.007247,0.005045,0.000951,-0.006960");
			}
			rise_power(Power_X2) {
				values ("0.002567,0.003281,0.004250,0.006203,0.010084,0.017836", \
				        "0.002558,0.003272,0.004246,0.006197,0.010078,0.017833", \
				        "0.002555,0.003269,0.004236,0.006200,0.010083,0.017828", \
				        "0.002574,0.003279,0.004240,0.006181,0.010066,0.017812", \
				        "0.002702,0.003386,0.004333,0.006254,0.010119,0.017859", \
				        "0.003140,0.003809,0.004728,0.006626,0.010474,0.018189", \
				        "0.004422,0.005040,0.005930,0.007788,0.011581,0.019256", \
				        "0.007441,0.007952,0.008778,0.010572,0.014304,0.021902");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.004447,0.003643,0.002644,0.000698,-0.003193,-0.010955", \
				        "0.004439,0.003630,0.002634,0.000688,-0.003202,-0.010963", \
				        "0.004447,0.003636,0.002646,0.000697,-0.003199,-0.010954", \
				        "0.004523,0.003705,0.002707,0.000749,-0.003134,-0.010915", \
				        "0.004822,0.003991,0.002971,0.001012,-0.002877,-0.010631", \
				        "0.005588,0.004700,0.003632,0.001623,-0.002290,-0.010085", \
				        "0.007171,0.006223,0.005087,0.003009,-0.000969,-0.008808", \
				        "0.010411,0.009406,0.008182,0.005985,0.001907,-0.006005");
			}
			rise_power(Power_X2) {
				values ("0.002584,0.003297,0.004272,0.006217,0.010102,0.017857", \
				        "0.002562,0.003276,0.004243,0.006192,0.010079,0.017829", \
				        "0.002557,0.003268,0.004242,0.006194,0.010082,0.017835", \
				        "0.002559,0.003266,0.004233,0.006182,0.010063,0.017813", \
				        "0.002632,0.003320,0.004281,0.006219,0.010102,0.017847", \
				        "0.002955,0.003635,0.004572,0.006486,0.010347,0.018080", \
				        "0.004109,0.004736,0.005644,0.007517,0.011337,0.019028", \
				        "0.007089,0.007616,0.008461,0.010272,0.014010,0.021630");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND3_X4
 Cell Description	: Combinational cell (AND3_X4) with drive strength X4
*******************************************************************************************/

cell (AND3_X4) {

	area               	: 1.330000;

	cell_leakage_power 	: 21976.270000;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 17307.590000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 23194.590000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 16521.430000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 23449.010000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 17675.100000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 31628.230000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 17514.970000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 28519.240000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000585;
		fall_capacitance	: 0.000588;
		rise_capacitance	: 0.000583;
		fall_capacitance_range		(0.000500, 0.000668);
		rise_capacitance_range		(0.000497, 0.000710);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000008,0.000008,0.000007,0.000006,0.000006,0.000005,0.000004");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000587;
		fall_capacitance	: 0.000587;
		rise_capacitance	: 0.000588;
		fall_capacitance_range		(0.000526, 0.000648);
		rise_capacitance_range		(0.000492, 0.000697);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000002,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000012,0.000007,0.000004,0.000002,0.000001,-0.000001,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000550;
		fall_capacitance	: 0.000536;
		rise_capacitance	: 0.000564;
		fall_capacitance_range		(0.000471, 0.000591);
		rise_capacitance_range		(0.000457, 0.000656);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,-0.000000,-0.000000,-0.000002,-0.000003,-0.000005,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000004,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.055305,0.064400,0.072443,0.085597,0.107473,0.145673", \
				        "0.058970,0.068053,0.076118,0.089243,0.111045,0.149289", \
				        "0.066752,0.075832,0.083926,0.097117,0.118939,0.157250", \
				        "0.083220,0.092271,0.100237,0.113445,0.135289,0.173526", \
				        "0.110279,0.120298,0.128945,0.142877,0.165380,0.203747", \
				        "0.149025,0.160408,0.170532,0.186172,0.210906,0.251211", \
				        "0.209168,0.222287,0.233984,0.252324,0.280561,0.324728", \
				        "0.307451,0.322718,0.336302,0.358637,0.392682,0.444568");
			}
			cell_rise(Timing_X4) {
				values ("0.041945,0.053644,0.064725,0.084504,0.121157,0.192809", \
				        "0.044847,0.056561,0.067680,0.087376,0.124002,0.195638", \
				        "0.050948,0.062611,0.073721,0.093348,0.129811,0.201428", \
				        "0.061209,0.072814,0.083856,0.103528,0.140001,0.211509", \
				        "0.071847,0.084203,0.095342,0.115221,0.151651,0.223115", \
				        "0.078488,0.092523,0.105142,0.125562,0.162199,0.233392", \
				        "0.073416,0.089479,0.104329,0.127982,0.166346,0.237828", \
				        "0.039023,0.057362,0.074593,0.103830,0.148949,0.223334");
			}
			fall_transition(Timing_X4) {
				values ("0.010493,0.014469,0.018525,0.025865,0.039712,0.067972", \
				        "0.010492,0.014471,0.018530,0.025829,0.039687,0.068004", \
				        "0.010498,0.014475,0.018521,0.025812,0.039712,0.067993", \
				        "0.010749,0.014676,0.018700,0.026006,0.039800,0.068072", \
				        "0.013941,0.017625,0.021319,0.028196,0.041147,0.068682", \
				        "0.018677,0.022582,0.026399,0.033343,0.045939,0.071673", \
				        "0.025777,0.029984,0.034139,0.041449,0.054081,0.078281", \
				        "0.037751,0.042357,0.047098,0.055217,0.068944,0.093086");
			}
			rise_transition(Timing_X4) {
				values ("0.010450,0.017907,0.025806,0.041486,0.073978,0.141161", \
				        "0.010429,0.017886,0.025794,0.041475,0.073990,0.141126", \
				        "0.010361,0.017872,0.025782,0.041468,0.073931,0.141153", \
				        "0.010962,0.018228,0.026091,0.041673,0.074068,0.141162", \
				        "0.013136,0.019860,0.027241,0.042571,0.074519,0.141281", \
				        "0.017008,0.024061,0.030789,0.044814,0.075385,0.141796", \
				        "0.023630,0.031214,0.038804,0.051689,0.079389,0.143448", \
				        "0.035400,0.042972,0.051744,0.066681,0.091800,0.150079");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.069549,0.079118,0.087460,0.101038,0.123447,0.162179", \
				        "0.073183,0.082761,0.091048,0.104591,0.126936,0.165665", \
				        "0.080833,0.090388,0.098753,0.112333,0.134689,0.173500", \
				        "0.097138,0.106691,0.115065,0.128698,0.151132,0.189946", \
				        "0.128498,0.138555,0.147011,0.160907,0.183406,0.222156", \
				        "0.173780,0.185314,0.195259,0.210833,0.235338,0.275538", \
				        "0.242240,0.255529,0.267106,0.284819,0.312436,0.355734", \
				        "0.353606,0.368825,0.381911,0.403227,0.435041,0.483829");
			}
			cell_rise(Timing_X4) {
				values ("0.052046,0.063748,0.074844,0.094623,0.131281,0.202910", \
				        "0.054822,0.066530,0.077659,0.097367,0.134051,0.205738", \
				        "0.059923,0.071615,0.082772,0.102578,0.139129,0.210731", \
				        "0.068894,0.080694,0.091831,0.111529,0.148013,0.219634", \
				        "0.080114,0.092498,0.103917,0.124052,0.160605,0.232149", \
				        "0.088480,0.102386,0.114781,0.135746,0.172844,0.244278", \
				        "0.085198,0.101089,0.116047,0.139491,0.178515,0.250475", \
				        "0.053893,0.071973,0.088845,0.117765,0.162263,0.237318");
			}
			fall_transition(Timing_X4) {
				values ("0.011882,0.015735,0.019659,0.026997,0.040763,0.068918", \
				        "0.011882,0.015735,0.019683,0.026999,0.040759,0.068915", \
				        "0.011863,0.015735,0.019691,0.026983,0.040749,0.068912", \
				        "0.011897,0.015761,0.019724,0.026966,0.040758,0.068878", \
				        "0.014043,0.017514,0.021147,0.028062,0.041424,0.069213", \
				        "0.018878,0.022542,0.026174,0.032926,0.045591,0.071570", \
				        "0.025579,0.029512,0.033231,0.040147,0.052443,0.077024", \
				        "0.035838,0.040029,0.044137,0.051317,0.064164,0.087639");
			}
			rise_transition(Timing_X4) {
				values ("0.010449,0.017908,0.025790,0.041529,0.073990,0.141156", \
				        "0.010431,0.017893,0.025801,0.041474,0.073941,0.141162", \
				        "0.010440,0.017897,0.025766,0.041497,0.073970,0.141156", \
				        "0.010820,0.018213,0.026049,0.041646,0.074026,0.141166", \
				        "0.012221,0.019515,0.027162,0.042498,0.074412,0.141234", \
				        "0.015316,0.022853,0.030149,0.044579,0.075347,0.141643", \
				        "0.020646,0.028939,0.036868,0.050572,0.079028,0.143145", \
				        "0.029529,0.038233,0.047576,0.062997,0.089560,0.149367");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.081438,0.091367,0.099961,0.113946,0.136870,0.176108", \
				        "0.085030,0.094968,0.103583,0.117498,0.140365,0.179602", \
				        "0.092771,0.102707,0.111235,0.125239,0.148082,0.187324", \
				        "0.108862,0.118777,0.127535,0.141584,0.164470,0.203810", \
				        "0.142420,0.152437,0.160991,0.174886,0.197789,0.237048", \
				        "0.193830,0.205343,0.215003,0.230550,0.254913,0.295168", \
				        "0.270071,0.283291,0.295009,0.312452,0.339715,0.382788", \
				        "0.393896,0.409075,0.421968,0.442664,0.473929,0.521689");
			}
			cell_rise(Timing_X4) {
				values ("0.057889,0.069593,0.080688,0.100503,0.137148,0.208802", \
				        "0.060426,0.072132,0.083263,0.102890,0.139597,0.211231", \
				        "0.064482,0.076180,0.087372,0.107116,0.143683,0.215314", \
				        "0.070665,0.082459,0.093614,0.113450,0.149937,0.221553", \
				        "0.078207,0.090428,0.101856,0.121919,0.158571,0.230155", \
				        "0.083082,0.096450,0.108625,0.129628,0.166775,0.238399", \
				        "0.072680,0.088130,0.102744,0.125959,0.165329,0.237880", \
				        "0.027166,0.045071,0.062153,0.090406,0.135199,0.211238");
			}
			fall_transition(Timing_X4) {
				values ("0.013042,0.016835,0.020762,0.028128,0.041732,0.069799", \
				        "0.013040,0.016834,0.020758,0.028130,0.041732,0.069786", \
				        "0.013057,0.016848,0.020773,0.028048,0.041759,0.069811", \
				        "0.013038,0.016842,0.020760,0.028112,0.041729,0.069775", \
				        "0.014139,0.017572,0.021279,0.028410,0.041984,0.069896", \
				        "0.019015,0.022495,0.026046,0.032727,0.045500,0.071646", \
				        "0.025591,0.029347,0.032981,0.039649,0.051992,0.076719", \
				        "0.035017,0.039030,0.042898,0.049815,0.062255,0.085812");
			}
			rise_transition(Timing_X4) {
				values ("0.010443,0.017910,0.025771,0.041456,0.073965,0.141161", \
				        "0.010430,0.017894,0.025798,0.041480,0.073978,0.141161", \
				        "0.010450,0.017910,0.025789,0.041466,0.073958,0.141158", \
				        "0.010639,0.018092,0.025937,0.041616,0.073950,0.141149", \
				        "0.011448,0.018976,0.026780,0.042261,0.074282,0.141203", \
				        "0.013703,0.021443,0.029103,0.044132,0.075188,0.141484", \
				        "0.018525,0.027087,0.035165,0.049570,0.078964,0.143362", \
				        "0.026989,0.036222,0.045748,0.061602,0.089240,0.150138");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.003670,0.001747,-0.000250,-0.004153,-0.011935,-0.027493", \
				        "0.003664,0.001738,-0.000257,-0.004167,-0.011950,-0.027512", \
				        "0.003674,0.001743,-0.000258,-0.004167,-0.011941,-0.027519", \
				        "0.003814,0.001860,-0.000159,-0.004075,-0.011838,-0.027389", \
				        "0.004386,0.002310,0.000214,-0.003740,-0.011525,-0.027045", \
				        "0.005541,0.003293,0.001065,-0.003007,-0.010869,-0.026477", \
				        "0.007786,0.005375,0.002964,-0.001337,-0.009365,-0.025067", \
				        "0.012346,0.009775,0.007165,0.002488,-0.005905,-0.021846");
			}
			rise_power(Power_X4) {
				values ("0.003529,0.005151,0.007072,0.010950,0.018714,0.034215", \
				        "0.003515,0.005148,0.007072,0.010958,0.018722,0.034221", \
				        "0.003550,0.005173,0.007092,0.010964,0.018716,0.034218", \
				        "0.003739,0.005320,0.007210,0.011054,0.018784,0.034267", \
				        "0.004163,0.005679,0.007533,0.011341,0.019011,0.034456", \
				        "0.005142,0.006529,0.008333,0.012063,0.019675,0.035039", \
				        "0.007369,0.008519,0.010209,0.013834,0.021322,0.036595", \
				        "0.012074,0.012902,0.014364,0.017775,0.025087,0.040120");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004891,0.002893,0.000855,-0.003062,-0.010842,-0.026375", \
				        "0.004873,0.002883,0.000848,-0.003064,-0.010855,-0.026376", \
				        "0.004883,0.002881,0.000846,-0.003078,-0.010854,-0.026412", \
				        "0.004963,0.002969,0.000914,-0.003019,-0.010804,-0.026368", \
				        "0.005456,0.003370,0.001264,-0.002691,-0.010484,-0.026016", \
				        "0.006603,0.004360,0.002123,-0.001957,-0.009836,-0.025454", \
				        "0.008742,0.006336,0.003927,-0.000367,-0.008397,-0.024118", \
				        "0.012843,0.010281,0.007691,0.003080,-0.005260,-0.021182");
			}
			rise_power(Power_X4) {
				values ("0.003528,0.005153,0.007072,0.010959,0.018719,0.034222", \
				        "0.003526,0.005149,0.007069,0.010954,0.018714,0.034220", \
				        "0.003520,0.005148,0.007070,0.010955,0.018717,0.034222", \
				        "0.003574,0.005177,0.007084,0.010946,0.018695,0.034189", \
				        "0.003800,0.005344,0.007229,0.011066,0.018763,0.034236", \
				        "0.004451,0.005902,0.007728,0.011497,0.019162,0.034576", \
				        "0.006104,0.007378,0.009129,0.012804,0.020368,0.035687", \
				        "0.009884,0.010907,0.012422,0.015941,0.023354,0.038499");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.005956,0.003904,0.001834,-0.002098,-0.009882,-0.025423", \
				        "0.005946,0.003904,0.001828,-0.002108,-0.009901,-0.025431", \
				        "0.005957,0.003913,0.001835,-0.002103,-0.009901,-0.025428", \
				        "0.006014,0.003969,0.001896,-0.002056,-0.009854,-0.025417", \
				        "0.006408,0.004314,0.002215,-0.001768,-0.009568,-0.025122", \
				        "0.007563,0.005314,0.003072,-0.001021,-0.008906,-0.024522", \
				        "0.009685,0.007286,0.004894,0.000590,-0.007447,-0.023182", \
				        "0.013721,0.011193,0.008606,0.004020,-0.004299,-0.020213");
			}
			rise_power(Power_X4) {
				values ("0.003539,0.005163,0.007095,0.010973,0.018742,0.034245", \
				        "0.003523,0.005147,0.007054,0.010954,0.018721,0.034224", \
				        "0.003520,0.005141,0.007067,0.010959,0.018720,0.034225", \
				        "0.003535,0.005153,0.007062,0.010945,0.018697,0.034194", \
				        "0.003654,0.005240,0.007131,0.010997,0.018739,0.034224", \
				        "0.004129,0.005642,0.007494,0.011303,0.018998,0.034449", \
				        "0.005617,0.006955,0.008737,0.012444,0.020060,0.035431", \
				        "0.009277,0.010336,0.011950,0.015509,0.022962,0.038162");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND4_X1
 Cell Description	: Combinational cell (AND4_X1) with drive strength X1
*******************************************************************************************/

cell (AND4_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 12417.248000;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 5272.835000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 5794.547000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 4213.454000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 4709.752000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 5430.765000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 5902.778000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 4247.093000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 5500.094000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 12740.360000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 20286.860000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 11736.520000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 20615.450000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 13215.300000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 31093.030000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 13013.030000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 34904.100000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000669;
		fall_capacitance	: 0.000681;
		rise_capacitance	: 0.000657;
		fall_capacitance_range		(0.000586, 0.000776);
		rise_capacitance_range		(0.000540, 0.000800);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000011,0.000010,0.000009,0.000008,0.000008,0.000007,0.000005");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000636;
		fall_capacitance	: 0.000642;
		rise_capacitance	: 0.000630;
		fall_capacitance_range		(0.000560, 0.000719);
		rise_capacitance_range		(0.000520, 0.000755);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000022,0.000013,0.000008,0.000004,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000003,0.000003,0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000012,0.000011,0.000011,0.000010,0.000010,0.000010,0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000005,0.000004,0.000004,0.000004,0.000004,0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,0.000000,-0.000000");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000593;
		fall_capacitance	: 0.000592;
		rise_capacitance	: 0.000595;
		fall_capacitance_range		(0.000527, 0.000654);
		rise_capacitance_range		(0.000476, 0.000711);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000003,0.000000,-0.000002,-0.000003,-0.000006,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000000,-0.000001,-0.000002,-0.000002,-0.000003,-0.000005,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000629;
		fall_capacitance	: 0.000616;
		rise_capacitance	: 0.000642;
		fall_capacitance_range		(0.000537, 0.000667);
		rise_capacitance_range		(0.000545, 0.000741);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000001,-0.000001,-0.000003,-0.000004,-0.000005,-0.000007,-0.000010");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.056520,0.060904,0.068395,0.081242,0.103337,0.142697", \
				        "0.060242,0.064627,0.072111,0.084946,0.106954,0.146356", \
				        "0.068123,0.072510,0.080038,0.093030,0.114983,0.154453", \
				        "0.084311,0.088710,0.096332,0.109148,0.131163,0.170564", \
				        "0.110236,0.115200,0.123502,0.137367,0.160201,0.199934", \
				        "0.148416,0.154135,0.163711,0.179325,0.204270,0.245845", \
				        "0.208841,0.215612,0.227342,0.245414,0.274176,0.319580", \
				        "0.309489,0.317754,0.331466,0.354225,0.388999,0.442594");
			}
			cell_rise(Timing_X1) {
				values ("0.046066,0.052325,0.063700,0.084678,0.123330,0.198742", \
				        "0.049036,0.055284,0.066682,0.087497,0.126047,0.201512", \
				        "0.055093,0.061265,0.072523,0.093065,0.131465,0.206941", \
				        "0.063662,0.069770,0.081116,0.101781,0.140208,0.215610", \
				        "0.072295,0.078476,0.089738,0.110411,0.149171,0.224592", \
				        "0.076412,0.083449,0.095306,0.116427,0.155244,0.230680", \
				        "0.065300,0.073789,0.088622,0.111812,0.152170,0.228333", \
				        "0.019685,0.029862,0.047388,0.076916,0.122593,0.201653");
			}
			fall_transition(Timing_X1) {
				values ("0.011880,0.014087,0.018188,0.026035,0.040676,0.070948", \
				        "0.011883,0.014089,0.018191,0.026009,0.040708,0.071024", \
				        "0.011907,0.014103,0.018200,0.026018,0.040686,0.070975", \
				        "0.012269,0.014421,0.018477,0.026257,0.040803,0.071080", \
				        "0.014859,0.016971,0.020922,0.028210,0.042177,0.071596", \
				        "0.018629,0.020916,0.025045,0.032521,0.046217,0.074092", \
				        "0.024544,0.027127,0.031652,0.039621,0.053280,0.079855", \
				        "0.034482,0.037560,0.042929,0.051954,0.067149,0.093704");
			}
			rise_transition(Timing_X1) {
				values ("0.016599,0.020880,0.029232,0.045901,0.080036,0.150795", \
				        "0.016546,0.020833,0.029218,0.045880,0.080043,0.150785", \
				        "0.016396,0.020719,0.029150,0.045867,0.080054,0.150766", \
				        "0.016528,0.020869,0.029365,0.046061,0.080190,0.150787", \
				        "0.017685,0.021643,0.029832,0.046592,0.080670,0.150981", \
				        "0.021278,0.024967,0.032230,0.048012,0.081423,0.151602", \
				        "0.027370,0.031754,0.039188,0.053271,0.084577,0.153351", \
				        "0.036879,0.042157,0.051542,0.066742,0.094490,0.159606");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.073855,0.078492,0.086377,0.099749,0.122454,0.162389", \
				        "0.077416,0.082057,0.089994,0.103270,0.125889,0.165865", \
				        "0.085079,0.089718,0.097594,0.110956,0.133643,0.173641", \
				        "0.101334,0.105968,0.113959,0.127418,0.150100,0.190124", \
				        "0.132394,0.137304,0.145662,0.159263,0.182128,0.222219", \
				        "0.178295,0.183956,0.193194,0.208602,0.233359,0.274862", \
				        "0.248135,0.254693,0.266114,0.283589,0.311065,0.355405", \
				        "0.363113,0.370970,0.383669,0.404801,0.437044,0.486780");
			}
			cell_rise(Timing_X1) {
				values ("0.058959,0.065203,0.076572,0.097364,0.136081,0.211532", \
				        "0.061663,0.067908,0.079290,0.100103,0.138902,0.214319", \
				        "0.066737,0.072975,0.084381,0.105248,0.143791,0.219184", \
				        "0.075442,0.081723,0.093126,0.113890,0.152294,0.227731", \
				        "0.085542,0.092021,0.103719,0.124699,0.163717,0.239128", \
				        "0.091837,0.099083,0.111490,0.133189,0.172401,0.247861", \
				        "0.084165,0.092700,0.107571,0.131795,0.172779,0.249056", \
				        "0.043578,0.053750,0.071854,0.101115,0.147842,0.227428");
			}
			fall_transition(Timing_X1) {
				values ("0.013200,0.015352,0.019460,0.027229,0.041852,0.071904", \
				        "0.013198,0.015351,0.019429,0.027217,0.041844,0.071908", \
				        "0.013201,0.015370,0.019470,0.027243,0.041840,0.071917", \
				        "0.013227,0.015397,0.019471,0.027230,0.041886,0.071887", \
				        "0.014988,0.017004,0.020799,0.028109,0.042486,0.072242", \
				        "0.018871,0.020959,0.024882,0.032085,0.045927,0.074057", \
				        "0.024343,0.026612,0.030648,0.038062,0.051494,0.078312", \
				        "0.032807,0.035345,0.039805,0.047680,0.061520,0.087401");
			}
			rise_transition(Timing_X1) {
				values ("0.016648,0.020911,0.029261,0.045892,0.080032,0.150789", \
				        "0.016639,0.020919,0.029282,0.045914,0.080026,0.150807", \
				        "0.016640,0.020922,0.029253,0.045903,0.080051,0.150792", \
				        "0.016942,0.021217,0.029533,0.046059,0.080154,0.150796", \
				        "0.018114,0.022224,0.030365,0.046802,0.080611,0.150897", \
				        "0.021316,0.025346,0.032963,0.048542,0.081466,0.151441", \
				        "0.026890,0.031595,0.039582,0.054039,0.084942,0.152980", \
				        "0.035011,0.040597,0.050407,0.066377,0.094648,0.159148");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.088503,0.093360,0.101615,0.115431,0.138704,0.179287", \
				        "0.091965,0.096812,0.105161,0.118871,0.142095,0.182677", \
				        "0.099415,0.104266,0.112689,0.126435,0.149569,0.190199", \
				        "0.115637,0.120488,0.128686,0.142593,0.165961,0.206585", \
				        "0.149043,0.153913,0.162332,0.176052,0.199152,0.239839", \
				        "0.201678,0.207331,0.216457,0.231744,0.256529,0.298125", \
				        "0.280161,0.286667,0.298024,0.315282,0.342394,0.386529", \
				        "0.408148,0.415842,0.428224,0.448660,0.480288,0.528886");
			}
			cell_rise(Timing_X1) {
				values ("0.067804,0.074045,0.085428,0.106237,0.144870,0.220331", \
				        "0.070422,0.076666,0.088071,0.108755,0.147495,0.222927", \
				        "0.074801,0.081043,0.092510,0.113321,0.151909,0.227361", \
				        "0.081720,0.088006,0.099424,0.120239,0.158692,0.234147", \
				        "0.090236,0.096727,0.108500,0.129515,0.168414,0.243832", \
				        "0.094828,0.102061,0.114648,0.136504,0.175931,0.251461", \
				        "0.081998,0.090631,0.105476,0.130144,0.171683,0.248269", \
				        "0.030252,0.040643,0.058955,0.088948,0.136886,0.217498");
			}
			fall_transition(Timing_X1) {
				values ("0.014353,0.016498,0.020608,0.028355,0.043002,0.072914", \
				        "0.014351,0.016494,0.020610,0.028326,0.042987,0.072916", \
				        "0.014357,0.016505,0.020585,0.028328,0.043023,0.072883", \
				        "0.014349,0.016507,0.020620,0.028355,0.042964,0.072924", \
				        "0.015088,0.017108,0.020995,0.028650,0.043232,0.073009", \
				        "0.018993,0.021042,0.024815,0.032032,0.045966,0.074323", \
				        "0.024474,0.026605,0.030521,0.037720,0.051125,0.078193", \
				        "0.032346,0.034690,0.038861,0.046360,0.059861,0.085670");
			}
			rise_transition(Timing_X1) {
				values ("0.016641,0.020921,0.029246,0.045930,0.080060,0.150795", \
				        "0.016645,0.020914,0.029276,0.045936,0.080070,0.150774", \
				        "0.016646,0.020925,0.029265,0.045906,0.080067,0.150762", \
				        "0.016881,0.021143,0.029450,0.045986,0.080088,0.150804", \
				        "0.017825,0.022069,0.030272,0.046655,0.080477,0.150869", \
				        "0.020697,0.024923,0.032819,0.048531,0.081516,0.151267", \
				        "0.026298,0.031185,0.039549,0.054448,0.085355,0.153065", \
				        "0.034867,0.040716,0.050947,0.067547,0.096268,0.160066");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.100991,0.106073,0.114717,0.128996,0.152883,0.194202", \
				        "0.104568,0.109657,0.118262,0.132460,0.156282,0.197595", \
				        "0.112066,0.117121,0.125861,0.140070,0.163843,0.205151", \
				        "0.128210,0.133284,0.141733,0.156119,0.180081,0.221407", \
				        "0.162230,0.167256,0.175948,0.190123,0.213917,0.255187", \
				        "0.220903,0.226587,0.235741,0.251027,0.275905,0.317696", \
				        "0.307313,0.313865,0.325241,0.342368,0.369540,0.413744", \
				        "0.447285,0.454985,0.467869,0.487708,0.518674,0.566841");
			}
			cell_rise(Timing_X1) {
				values ("0.072963,0.079208,0.090560,0.111365,0.150076,0.225533", \
				        "0.075429,0.081673,0.093002,0.113798,0.152511,0.227936", \
				        "0.079188,0.085431,0.096863,0.117552,0.156225,0.231636", \
				        "0.084481,0.090746,0.102200,0.122875,0.161364,0.236809", \
				        "0.090041,0.096473,0.108107,0.129238,0.168002,0.243455", \
				        "0.091770,0.098684,0.111043,0.132722,0.172150,0.247681", \
				        "0.075036,0.083247,0.097468,0.121643,0.163149,0.240064", \
				        "0.010830,0.020860,0.038940,0.068313,0.115889,0.197062");
			}
			fall_transition(Timing_X1) {
				values ("0.015540,0.017691,0.021803,0.029555,0.044298,0.074032", \
				        "0.015536,0.017689,0.021803,0.029581,0.044296,0.074030", \
				        "0.015544,0.017696,0.021817,0.029580,0.044283,0.074022", \
				        "0.015529,0.017686,0.021809,0.029557,0.044226,0.073994", \
				        "0.015575,0.017714,0.021802,0.029539,0.044274,0.074009", \
				        "0.019292,0.021272,0.025047,0.032261,0.046259,0.074792", \
				        "0.024745,0.026830,0.030637,0.037837,0.051270,0.078467", \
				        "0.032307,0.034578,0.038620,0.045921,0.059215,0.085153");
			}
			rise_transition(Timing_X1) {
				values ("0.016641,0.020921,0.029259,0.045935,0.080066,0.150791", \
				        "0.016636,0.020921,0.029271,0.045932,0.080006,0.150806", \
				        "0.016649,0.020921,0.029258,0.045848,0.080044,0.150803", \
				        "0.016780,0.021042,0.029374,0.046010,0.080095,0.150768", \
				        "0.017398,0.021692,0.029971,0.046424,0.080332,0.150842", \
				        "0.019321,0.023660,0.031872,0.048048,0.081233,0.151162", \
				        "0.024275,0.029125,0.037590,0.053082,0.085006,0.153114", \
				        "0.032845,0.038749,0.048984,0.065773,0.095529,0.160552");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.002055,0.001807,0.001324,0.000354,-0.001610,-0.005494", \
				        "0.002051,0.001804,0.001316,0.000347,-0.001611,-0.005493", \
				        "0.002067,0.001818,0.001328,0.000354,-0.001588,-0.005477", \
				        "0.002162,0.001902,0.001415,0.000451,-0.001493,-0.005374", \
				        "0.002433,0.002171,0.001677,0.000704,-0.001235,-0.005113", \
				        "0.003102,0.002820,0.002310,0.001317,-0.000633,-0.004522", \
				        "0.004634,0.004345,0.003799,0.002775,0.000800,-0.003110", \
				        "0.008022,0.007713,0.007118,0.006030,0.003996,0.000050");
			}
			rise_power(Power_X1) {
				values ("0.002520,0.002770,0.003246,0.004213,0.006153,0.010033", \
				        "0.002523,0.002773,0.003252,0.004214,0.006158,0.010033", \
				        "0.002551,0.002793,0.003268,0.004231,0.006163,0.010042", \
				        "0.002625,0.002854,0.003333,0.004303,0.006240,0.010115", \
				        "0.002876,0.003084,0.003560,0.004520,0.006442,0.010308", \
				        "0.003479,0.003710,0.004178,0.005112,0.007024,0.010877", \
				        "0.005004,0.005221,0.005672,0.006593,0.008487,0.012312", \
				        "0.008391,0.008595,0.009021,0.009908,0.011755,0.015537");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.003323,0.003066,0.002577,0.001601,-0.000349,-0.004221", \
				        "0.003307,0.003054,0.002562,0.001592,-0.000359,-0.004236", \
				        "0.003321,0.003061,0.002566,0.001597,-0.000357,-0.004235", \
				        "0.003371,0.003127,0.002623,0.001649,-0.000296,-0.004177", \
				        "0.003628,0.003369,0.002872,0.001891,-0.000042,-0.003919", \
				        "0.004271,0.003992,0.003465,0.002476,0.000528,-0.003364", \
				        "0.005675,0.005387,0.004842,0.003813,0.001841,-0.002071", \
				        "0.008696,0.008388,0.007781,0.006712,0.004689,0.000742");
			}
			rise_power(Power_X1) {
				values ("0.002522,0.002764,0.003252,0.004218,0.006161,0.010035", \
				        "0.002530,0.002753,0.003246,0.004219,0.006157,0.010037", \
				        "0.002508,0.002756,0.003240,0.004219,0.006160,0.010039", \
				        "0.002507,0.002752,0.003233,0.004215,0.006146,0.010022", \
				        "0.002596,0.002826,0.003303,0.004259,0.006193,0.010063", \
				        "0.002953,0.003173,0.003644,0.004597,0.006516,0.010377", \
				        "0.004099,0.004310,0.004771,0.005695,0.007595,0.011431", \
				        "0.006868,0.007058,0.007511,0.008415,0.010283,0.014077");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.004432,0.004177,0.003679,0.002700,0.000760,-0.003109", \
				        "0.004420,0.004161,0.003667,0.002690,0.000743,-0.003124", \
				        "0.004418,0.004157,0.003665,0.002689,0.000748,-0.003127", \
				        "0.004471,0.004216,0.003716,0.002739,0.000791,-0.003085", \
				        "0.004712,0.004444,0.003938,0.002960,0.001025,-0.002852", \
				        "0.005339,0.005061,0.004535,0.003537,0.001587,-0.002302", \
				        "0.006735,0.006444,0.005895,0.004870,0.002887,-0.001024", \
				        "0.009734,0.009428,0.008836,0.007769,0.005744,0.001804");
			}
			rise_power(Power_X1) {
				values ("0.002538,0.002777,0.003272,0.004248,0.006184,0.010061", \
				        "0.002524,0.002753,0.003247,0.004227,0.006165,0.010040", \
				        "0.002507,0.002754,0.003242,0.004224,0.006158,0.010030", \
				        "0.002509,0.002747,0.003234,0.004215,0.006152,0.010024", \
				        "0.002539,0.002775,0.003261,0.004230,0.006175,0.010045", \
				        "0.002798,0.003019,0.003491,0.004449,0.006373,0.010235", \
				        "0.003783,0.004001,0.004457,0.005403,0.007301,0.011149", \
				        "0.006505,0.006716,0.007140,0.008048,0.009913,0.013722");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X1) {
				values ("0.005457,0.005196,0.004690,0.003714,0.001773,-0.002097", \
				        "0.005443,0.005185,0.004678,0.003700,0.001761,-0.002108", \
				        "0.005452,0.005182,0.004688,0.003705,0.001762,-0.002106", \
				        "0.005504,0.005246,0.004731,0.003755,0.001813,-0.002058", \
				        "0.005719,0.005452,0.004947,0.003966,0.002016,-0.001856", \
				        "0.006370,0.006074,0.005541,0.004545,0.002594,-0.001294", \
				        "0.007761,0.007463,0.006922,0.005885,0.003903,-0.000006", \
				        "0.010790,0.010473,0.009899,0.008822,0.006793,0.002855");
			}
			rise_power(Power_X1) {
				values ("0.002536,0.002788,0.003266,0.004237,0.006182,0.010055", \
				        "0.002536,0.002769,0.003265,0.004245,0.006186,0.010057", \
				        "0.002516,0.002763,0.003244,0.004215,0.006155,0.010032", \
				        "0.002506,0.002743,0.003239,0.004209,0.006152,0.010032", \
				        "0.002519,0.002754,0.003236,0.004210,0.006148,0.010023", \
				        "0.002715,0.002948,0.003429,0.004391,0.006327,0.010195", \
				        "0.003617,0.003834,0.004292,0.005246,0.007163,0.011017", \
				        "0.006252,0.006454,0.006874,0.007810,0.009686,0.013506");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND4_X2
 Cell Description	: Combinational cell (AND4_X2) with drive strength X2
*******************************************************************************************/

cell (AND4_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 16417.026937;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 9389.405000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 9911.125000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 8330.082000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 8826.413000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 9547.338000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 10019.360000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 8363.750000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 9616.858000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 16856.930000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 24403.440000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 15853.170000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 24732.210000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 17331.870000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 35209.440000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 17129.790000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 37151.250000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000670;
		fall_capacitance	: 0.000686;
		rise_capacitance	: 0.000655;
		fall_capacitance_range		(0.000604, 0.000771);
		rise_capacitance_range		(0.000547, 0.000801);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000011,0.000010,0.000009,0.000008,0.000008,0.000007,0.000005");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000703;
		fall_capacitance	: 0.000712;
		rise_capacitance	: 0.000695;
		fall_capacitance_range		(0.000643, 0.000782);
		rise_capacitance_range		(0.000580, 0.000821);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000022,0.000013,0.000008,0.000004,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000003,0.000003,0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000012,0.000011,0.000011,0.000011,0.000010,0.000010,0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000005,0.000004,0.000004,0.000004,0.000004,0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,0.000000,-0.000000");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000595;
		fall_capacitance	: 0.000594;
		rise_capacitance	: 0.000596;
		fall_capacitance_range		(0.000529, 0.000655);
		rise_capacitance_range		(0.000490, 0.000714);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000003,0.000000,-0.000002,-0.000003,-0.000005,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000000,-0.000001,-0.000002,-0.000002,-0.000003,-0.000005,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000630;
		fall_capacitance	: 0.000615;
		rise_capacitance	: 0.000644;
		fall_capacitance_range		(0.000554, 0.000668);
		rise_capacitance_range		(0.000526, 0.000744);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000001,-0.000001,-0.000003,-0.000004,-0.000005,-0.000007,-0.000010");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.055781,0.063140,0.070958,0.084169,0.106016,0.144704", \
				        "0.059486,0.066844,0.074671,0.087795,0.109659,0.148360", \
				        "0.067272,0.074628,0.082547,0.095758,0.117601,0.156371", \
				        "0.083702,0.091032,0.098908,0.112061,0.133978,0.172617", \
				        "0.110404,0.118612,0.127179,0.141196,0.163895,0.202787", \
				        "0.149348,0.158796,0.168796,0.184535,0.209515,0.250398", \
				        "0.210957,0.222022,0.233895,0.252331,0.280919,0.325756", \
				        "0.313263,0.326501,0.340410,0.363272,0.397827,0.450704");
			}
			cell_rise(Timing_X2) {
				values ("0.042204,0.052228,0.063709,0.084390,0.122045,0.195002", \
				        "0.045096,0.055118,0.066662,0.087221,0.124884,0.197813", \
				        "0.051246,0.061141,0.072577,0.092941,0.130451,0.203378", \
				        "0.060712,0.070430,0.081852,0.102270,0.139711,0.212576", \
				        "0.070253,0.080346,0.091565,0.112109,0.149669,0.222681", \
				        "0.074752,0.086347,0.098701,0.119560,0.157412,0.230194", \
				        "0.064688,0.078325,0.093373,0.116937,0.156292,0.229745", \
				        "0.020683,0.036733,0.054377,0.084040,0.129412,0.205841");
			}
			fall_transition(Timing_X2) {
				values ("0.010504,0.013944,0.018059,0.025579,0.039677,0.068596", \
				        "0.010506,0.013945,0.018059,0.025620,0.039700,0.068630", \
				        "0.010528,0.013963,0.018069,0.025559,0.039718,0.068596", \
				        "0.010803,0.014185,0.018273,0.025781,0.039827,0.068697", \
				        "0.013544,0.016829,0.020695,0.027847,0.041143,0.069286", \
				        "0.017540,0.021085,0.025166,0.032460,0.045549,0.072053", \
				        "0.023644,0.027633,0.032083,0.039843,0.053106,0.078235", \
				        "0.033931,0.038574,0.043822,0.052546,0.067262,0.092577");
			}
			rise_transition(Timing_X2) {
				values ("0.012700,0.019255,0.027450,0.043444,0.076187,0.144123", \
				        "0.012653,0.019222,0.027425,0.043421,0.076090,0.144082", \
				        "0.012452,0.019088,0.027339,0.043453,0.076131,0.144089", \
				        "0.012671,0.019206,0.027506,0.043589,0.076218,0.144138", \
				        "0.014396,0.020243,0.028087,0.044170,0.076794,0.144319", \
				        "0.017940,0.023923,0.030939,0.045820,0.077627,0.144938", \
				        "0.023686,0.030651,0.038278,0.051745,0.081115,0.146705", \
				        "0.033445,0.041179,0.050515,0.065713,0.092000,0.153160");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.072799,0.080600,0.088864,0.102545,0.125117,0.164403", \
				        "0.076405,0.084203,0.092486,0.106033,0.128605,0.167863", \
				        "0.084041,0.091831,0.100023,0.113734,0.136243,0.175555", \
				        "0.100225,0.107994,0.116413,0.130076,0.152664,0.192016", \
				        "0.131825,0.140010,0.148506,0.162328,0.185127,0.224420", \
				        "0.178295,0.187787,0.197500,0.213136,0.237790,0.278581", \
				        "0.249057,0.260059,0.271820,0.289544,0.317317,0.361140", \
				        "0.365316,0.378227,0.391485,0.412868,0.445133,0.494505");
			}
			cell_rise(Timing_X2) {
				values ("0.055122,0.065125,0.076622,0.097234,0.134890,0.207804", \
				        "0.057846,0.067847,0.079362,0.099987,0.137573,0.210474", \
				        "0.062925,0.072925,0.084466,0.105128,0.142651,0.215581", \
				        "0.071875,0.081943,0.093502,0.114008,0.151496,0.224411", \
				        "0.082701,0.093162,0.104972,0.125780,0.163586,0.236614", \
				        "0.089681,0.101449,0.114097,0.135681,0.174002,0.246899", \
				        "0.082670,0.096466,0.111852,0.135963,0.176201,0.249916", \
				        "0.044079,0.060073,0.077679,0.107432,0.153558,0.230730");
			}
			fall_transition(Timing_X2) {
				values ("0.011962,0.015309,0.019369,0.026926,0.040895,0.069591", \
				        "0.011961,0.015307,0.019358,0.026921,0.040890,0.069616", \
				        "0.011972,0.015319,0.019358,0.026940,0.040866,0.069589", \
				        "0.011983,0.015337,0.019377,0.026915,0.040897,0.069579", \
				        "0.013790,0.016862,0.020619,0.027806,0.041482,0.069928", \
				        "0.017982,0.021246,0.025069,0.032030,0.045179,0.071967", \
				        "0.023808,0.027356,0.031310,0.038532,0.051536,0.076963", \
				        "0.032729,0.036736,0.041122,0.048768,0.062197,0.086748");
			}
			rise_transition(Timing_X2) {
				values ("0.012725,0.019286,0.027441,0.043499,0.076205,0.144108", \
				        "0.012722,0.019278,0.027446,0.043481,0.076207,0.144118", \
				        "0.012719,0.019280,0.027444,0.043476,0.076203,0.144128", \
				        "0.012997,0.019553,0.027676,0.043640,0.076259,0.144108", \
				        "0.014276,0.020631,0.028599,0.044400,0.076652,0.144203", \
				        "0.017356,0.023841,0.031371,0.046375,0.077741,0.144756", \
				        "0.022433,0.029928,0.038042,0.052112,0.081460,0.146409", \
				        "0.030403,0.038837,0.048717,0.064637,0.091852,0.152764");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.087348,0.095500,0.104081,0.118152,0.141357,0.181243", \
				        "0.090796,0.098955,0.107639,0.121541,0.144730,0.184611", \
				        "0.098312,0.106461,0.115126,0.129132,0.152249,0.192104", \
				        "0.114305,0.122450,0.131141,0.145300,0.168461,0.208413", \
				        "0.148062,0.156255,0.164833,0.178791,0.201941,0.241834", \
				        "0.201270,0.210646,0.220218,0.235781,0.260420,0.301260", \
				        "0.280414,0.291392,0.303103,0.320665,0.348021,0.391630", \
				        "0.409400,0.422187,0.435140,0.456084,0.487656,0.535968");
			}
			cell_rise(Timing_X2) {
				values ("0.063962,0.073965,0.085468,0.106079,0.143731,0.216655", \
				        "0.066586,0.076589,0.088127,0.108605,0.146353,0.219248", \
				        "0.070982,0.080979,0.092556,0.113127,0.150700,0.223618", \
				        "0.077975,0.088042,0.099588,0.120224,0.157717,0.230631", \
				        "0.086746,0.097196,0.109096,0.129948,0.167687,0.240664", \
				        "0.091969,0.103573,0.116218,0.138066,0.176620,0.249646", \
				        "0.079802,0.093331,0.108687,0.133221,0.174016,0.248136", \
				        "0.029780,0.045899,0.064110,0.093997,0.141265,0.219542");
			}
			fall_transition(Timing_X2) {
				values ("0.013179,0.016496,0.020533,0.028028,0.042036,0.070628", \
				        "0.013185,0.016492,0.020534,0.028033,0.042056,0.070655", \
				        "0.013199,0.016502,0.020533,0.028079,0.042037,0.070608", \
				        "0.013204,0.016505,0.020545,0.028032,0.042030,0.070626", \
				        "0.013923,0.016994,0.020888,0.028373,0.042260,0.070747", \
				        "0.018190,0.021292,0.025033,0.032050,0.045262,0.072172", \
				        "0.024019,0.027405,0.031224,0.038193,0.051147,0.076750", \
				        "0.032408,0.036138,0.040237,0.047421,0.060363,0.085021");
			}
			rise_transition(Timing_X2) {
				values ("0.012721,0.019276,0.027454,0.043500,0.076206,0.144130", \
				        "0.012728,0.019288,0.027445,0.043495,0.076208,0.144117", \
				        "0.012725,0.019284,0.027460,0.043487,0.076197,0.144106", \
				        "0.012940,0.019468,0.027609,0.043566,0.076229,0.144120", \
				        "0.013836,0.020395,0.028466,0.044264,0.076631,0.144229", \
				        "0.016444,0.023204,0.031055,0.046261,0.077767,0.144667", \
				        "0.021438,0.029244,0.037699,0.052318,0.081782,0.146507", \
				        "0.029679,0.038543,0.048734,0.065355,0.093139,0.153722");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.099730,0.108240,0.117185,0.131692,0.155546,0.196126", \
				        "0.103261,0.111802,0.120679,0.135132,0.158934,0.199515", \
				        "0.110816,0.119316,0.128330,0.142765,0.166446,0.207041", \
				        "0.126766,0.135261,0.144152,0.158780,0.182716,0.223265", \
				        "0.160966,0.169374,0.178293,0.192748,0.216415,0.257017", \
				        "0.220053,0.229504,0.239017,0.254592,0.279401,0.320420", \
				        "0.307110,0.318090,0.329800,0.347387,0.374540,0.418152", \
				        "0.447858,0.460621,0.473473,0.494082,0.525569,0.573402");
			}
			cell_rise(Timing_X2) {
				values ("0.069136,0.079139,0.090611,0.111242,0.148878,0.221817", \
				        "0.071612,0.081613,0.093124,0.113659,0.151302,0.224220", \
				        "0.075364,0.085366,0.096929,0.117429,0.154957,0.227933", \
				        "0.080696,0.090739,0.102299,0.122791,0.160337,0.233282", \
				        "0.086315,0.096620,0.108415,0.129370,0.167048,0.240039", \
				        "0.088325,0.099390,0.111816,0.133418,0.171860,0.244983", \
				        "0.072209,0.085226,0.099565,0.123635,0.164336,0.238755", \
				        "0.009435,0.025069,0.042998,0.072171,0.118991,0.197804");
			}
			fall_transition(Timing_X2) {
				values ("0.014429,0.017728,0.021751,0.029240,0.043257,0.071737", \
				        "0.014435,0.017725,0.021748,0.029315,0.043261,0.071733", \
				        "0.014428,0.017730,0.021770,0.029293,0.043290,0.071760", \
				        "0.014434,0.017724,0.021747,0.029254,0.043269,0.071731", \
				        "0.014399,0.017723,0.021755,0.029298,0.043296,0.071709", \
				        "0.018463,0.021510,0.025205,0.032230,0.045446,0.072608", \
				        "0.024366,0.027603,0.031307,0.038284,0.051116,0.076923", \
				        "0.032465,0.036019,0.039977,0.046959,0.059806,0.084353");
			}
			rise_transition(Timing_X2) {
				values ("0.012728,0.019288,0.027456,0.043495,0.076204,0.144122", \
				        "0.012720,0.019280,0.027452,0.043498,0.076199,0.144099", \
				        "0.012729,0.019288,0.027434,0.043454,0.076156,0.144120", \
				        "0.012850,0.019392,0.027533,0.043557,0.076144,0.144094", \
				        "0.013379,0.020017,0.028151,0.043992,0.076474,0.144200", \
				        "0.015053,0.021897,0.030025,0.045702,0.077488,0.144485", \
				        "0.019336,0.027062,0.035606,0.050848,0.081365,0.146587", \
				        "0.027284,0.036269,0.046522,0.063288,0.092048,0.154106");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.002627,0.001847,0.000872,-0.001080,-0.004966,-0.012743", \
				        "0.002619,0.001845,0.000875,-0.001085,-0.004976,-0.012754", \
				        "0.002634,0.001857,0.000872,-0.001094,-0.004960,-0.012747", \
				        "0.002737,0.001948,0.000955,-0.000979,-0.004868,-0.012636", \
				        "0.003100,0.002273,0.001259,-0.000708,-0.004597,-0.012350", \
				        "0.003911,0.003017,0.001951,-0.000057,-0.003970,-0.011762", \
				        "0.005667,0.004709,0.003560,0.001470,-0.002508,-0.010342", \
				        "0.009451,0.008422,0.007181,0.004930,0.000804,-0.007124");
			}
			rise_power(Power_X2) {
				values ("0.002987,0.003695,0.004656,0.006599,0.010485,0.018240", \
				        "0.002990,0.003695,0.004658,0.006605,0.010488,0.018240", \
				        "0.003008,0.003714,0.004676,0.006606,0.010485,0.018234", \
				        "0.003127,0.003816,0.004763,0.006692,0.010557,0.018298", \
				        "0.003415,0.004081,0.005013,0.006919,0.010768,0.018502", \
				        "0.004127,0.004770,0.005687,0.007557,0.011376,0.019064", \
				        "0.005863,0.006444,0.007320,0.009154,0.012907,0.020553", \
				        "0.009662,0.010156,0.010949,0.012693,0.016376,0.023915");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.003936,0.003136,0.002135,0.000194,-0.003703,-0.011462", \
				        "0.003926,0.003130,0.002132,0.000183,-0.003713,-0.011475", \
				        "0.003931,0.003147,0.002127,0.000183,-0.003713,-0.011483", \
				        "0.003990,0.003195,0.002190,0.000229,-0.003660,-0.011434", \
				        "0.004321,0.003492,0.002459,0.000496,-0.003396,-0.011152", \
				        "0.005110,0.004219,0.003142,0.001127,-0.002793,-0.010594", \
				        "0.006752,0.005794,0.004652,0.002555,-0.001430,-0.009274", \
				        "0.010143,0.009084,0.007878,0.005662,0.001549,-0.006382");
			}
			rise_power(Power_X2) {
				values ("0.002999,0.003700,0.004656,0.006606,0.010492,0.018244", \
				        "0.002991,0.003698,0.004656,0.006612,0.010489,0.018241", \
				        "0.002980,0.003685,0.004655,0.006608,0.010493,0.018242", \
				        "0.002994,0.003696,0.004659,0.006590,0.010471,0.018218", \
				        "0.003121,0.003803,0.004752,0.006662,0.010519,0.018258", \
				        "0.003560,0.004222,0.005137,0.007027,0.010861,0.018574", \
				        "0.004854,0.005479,0.006355,0.008198,0.011981,0.019645", \
				        "0.007972,0.008479,0.009298,0.011080,0.014793,0.022372");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.005101,0.004280,0.003268,0.001308,-0.002584,-0.010342", \
				        "0.005090,0.004263,0.003253,0.001299,-0.002597,-0.010358", \
				        "0.005079,0.004271,0.003250,0.001291,-0.002609,-0.010361", \
				        "0.005137,0.004323,0.003298,0.001340,-0.002560,-0.010332", \
				        "0.005411,0.004574,0.003543,0.001569,-0.002327,-0.010096", \
				        "0.006199,0.005292,0.004229,0.002202,-0.001724,-0.009521", \
				        "0.007818,0.006865,0.005738,0.003625,-0.000360,-0.008207", \
				        "0.011191,0.010169,0.008933,0.006727,0.002620,-0.005309");
			}
			rise_power(Power_X2) {
				values ("0.003006,0.003709,0.004685,0.006627,0.010507,0.018257", \
				        "0.002993,0.003696,0.004660,0.006610,0.010492,0.018241", \
				        "0.002985,0.003687,0.004656,0.006602,0.010488,0.018239", \
				        "0.002988,0.003691,0.004640,0.006593,0.010473,0.018222", \
				        "0.003049,0.003735,0.004685,0.006623,0.010497,0.018238", \
				        "0.003362,0.004025,0.004961,0.006860,0.010712,0.018433", \
				        "0.004489,0.005121,0.006015,0.007867,0.011673,0.019353", \
				        "0.007529,0.008080,0.008894,0.010681,0.014403,0.021993");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X2) {
				values ("0.006177,0.005341,0.004308,0.002333,-0.001562,-0.009324", \
				        "0.006168,0.005321,0.004292,0.002317,-0.001574,-0.009338", \
				        "0.006171,0.005325,0.004293,0.002323,-0.001575,-0.009336", \
				        "0.006215,0.005378,0.004341,0.002368,-0.001532,-0.009286", \
				        "0.006449,0.005607,0.004566,0.002577,-0.001321,-0.009103", \
				        "0.007231,0.006338,0.005236,0.003214,-0.000706,-0.008504", \
				        "0.008870,0.007916,0.006768,0.004670,0.000667,-0.007184", \
				        "0.012258,0.011232,0.010002,0.007790,0.003687,-0.004245");
			}
			rise_power(Power_X2) {
				values ("0.002999,0.003703,0.004674,0.006618,0.010504,0.018254", \
				        "0.003008,0.003706,0.004687,0.006623,0.010510,0.018260", \
				        "0.002981,0.003681,0.004651,0.006602,0.010485,0.018239", \
				        "0.002983,0.003695,0.004645,0.006585,0.010471,0.018220", \
				        "0.003003,0.003715,0.004653,0.006593,0.010471,0.018216", \
				        "0.003243,0.003922,0.004865,0.006786,0.010652,0.018387", \
				        "0.004249,0.004892,0.005797,0.007682,0.011504,0.019208", \
				        "0.007164,0.007725,0.008577,0.010375,0.014124,0.021748");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AND4_X4
 Cell Description	: Combinational cell (AND4_X4) with drive strength X4
*******************************************************************************************/

cell (AND4_X4) {

	area               	: 1.596000;

	cell_leakage_power 	: 24416.802500;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 17622.660000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 18144.390000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 16563.470000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 17059.890000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 17780.610000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 18252.680000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 16597.240000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 17850.700000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 25090.200000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 32636.750000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 24086.660000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 32966.040000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 25565.190000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 43442.560000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 25363.630000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 41646.170000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000663;
		fall_capacitance	: 0.000677;
		rise_capacitance	: 0.000648;
		fall_capacitance_range		(0.000600, 0.000760);
		rise_capacitance_range		(0.000560, 0.000799);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000011,0.000010,0.000009,0.000008,0.000008,0.000007,0.000005");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000004,0.000003,0.000003,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000604;
		fall_capacitance	: 0.000611;
		rise_capacitance	: 0.000597;
		fall_capacitance_range		(0.000534, 0.000679);
		rise_capacitance_range		(0.000507, 0.000721);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000022,0.000013,0.000008,0.000004,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000003,0.000003,0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000012,0.000011,0.000011,0.000010,0.000010,0.000010,0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000005,0.000004,0.000004,0.000004,0.000004,0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,0.000000,-0.000000");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000599;
		fall_capacitance	: 0.000599;
		rise_capacitance	: 0.000598;
		fall_capacitance_range		(0.000537, 0.000655);
		rise_capacitance_range		(0.000494, 0.000716);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000000,-0.000001,-0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000003,0.000000,-0.000002,-0.000003,-0.000005,-0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000000,-0.000001,-0.000002,-0.000002,-0.000003,-0.000005,-0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000604;
		fall_capacitance	: 0.000592;
		rise_capacitance	: 0.000616;
		fall_capacitance_range		(0.000540, 0.000641);
		rise_capacitance_range		(0.000504, 0.000719);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000001,-0.000001,-0.000003,-0.000004,-0.000005,-0.000007,-0.000010");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000002,0.000001,0.000000,-0.000000,-0.000002,-0.000003,-0.000007");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.061385,0.070991,0.079487,0.093349,0.116046,0.155035", \
				        "0.065029,0.074633,0.083167,0.096947,0.119673,0.158667", \
				        "0.072809,0.082403,0.090926,0.104793,0.127499,0.166576", \
				        "0.089376,0.098916,0.107311,0.121189,0.143936,0.183042", \
				        "0.118356,0.128703,0.137683,0.152069,0.175196,0.214390", \
				        "0.160248,0.172024,0.182551,0.198680,0.224169,0.265364", \
				        "0.226018,0.239499,0.251443,0.270403,0.299376,0.344607", \
				        "0.333913,0.349611,0.363548,0.386363,0.421261,0.474248");
			}
			cell_rise(Timing_X4) {
				values ("0.044288,0.056862,0.068732,0.089648,0.127246,0.199216", \
				        "0.047092,0.059685,0.071590,0.092406,0.130005,0.202002", \
				        "0.053115,0.065631,0.077532,0.098207,0.135641,0.207620", \
				        "0.063952,0.076192,0.087875,0.108525,0.145908,0.217802", \
				        "0.075459,0.088166,0.099818,0.120529,0.157957,0.229809", \
				        "0.082427,0.096759,0.109862,0.130910,0.168457,0.240110", \
				        "0.076593,0.093075,0.108104,0.132378,0.171489,0.243588", \
				        "0.038278,0.057103,0.074619,0.104368,0.150207,0.225385");
			}
			fall_transition(Timing_X4) {
				values ("0.011319,0.015466,0.019670,0.027186,0.041127,0.069167", \
				        "0.011322,0.015466,0.019677,0.027148,0.041136,0.069185", \
				        "0.011311,0.015465,0.019690,0.027186,0.041123,0.069150", \
				        "0.011414,0.015568,0.019775,0.027253,0.041195,0.069160", \
				        "0.014305,0.018147,0.021970,0.028982,0.042209,0.069764", \
				        "0.019090,0.023161,0.027109,0.034201,0.047155,0.072863", \
				        "0.026087,0.030529,0.034858,0.042396,0.055373,0.079765", \
				        "0.037905,0.042783,0.047683,0.056054,0.070166,0.094655");
			}
			rise_transition(Timing_X4) {
				values ("0.011373,0.019393,0.027556,0.043387,0.075224,0.141511", \
				        "0.011370,0.019370,0.027567,0.043377,0.075191,0.141513", \
				        "0.011173,0.019267,0.027461,0.043311,0.075096,0.141501", \
				        "0.011435,0.019315,0.027564,0.043402,0.075196,0.141524", \
				        "0.013505,0.020555,0.028381,0.044051,0.075778,0.141696", \
				        "0.017350,0.024606,0.031580,0.045976,0.076694,0.142382", \
				        "0.023884,0.031698,0.039476,0.052655,0.080579,0.144040", \
				        "0.035444,0.043329,0.052284,0.067490,0.092847,0.150897");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.078321,0.088469,0.097355,0.111632,0.135004,0.174674", \
				        "0.081958,0.092126,0.100946,0.115146,0.138464,0.178145", \
				        "0.089430,0.099570,0.108585,0.122796,0.146148,0.185814", \
				        "0.105716,0.115860,0.124687,0.139030,0.162417,0.202171", \
				        "0.138407,0.148816,0.157593,0.172023,0.195346,0.235083", \
				        "0.187340,0.199257,0.209769,0.225734,0.251064,0.292182", \
				        "0.261712,0.275512,0.287456,0.305816,0.334301,0.378717", \
				        "0.382548,0.398391,0.412031,0.434011,0.466706,0.516840");
			}
			cell_rise(Timing_X4) {
				values ("0.057246,0.069820,0.081673,0.102550,0.140173,0.212147", \
				        "0.059976,0.072541,0.084450,0.105297,0.142979,0.214920", \
				        "0.065080,0.077643,0.089562,0.110442,0.147995,0.219972", \
				        "0.074543,0.087141,0.099018,0.119830,0.157240,0.229179", \
				        "0.087122,0.100120,0.112171,0.133286,0.170864,0.242872", \
				        "0.096622,0.111111,0.124145,0.145920,0.184042,0.255959", \
				        "0.093710,0.110226,0.125664,0.150075,0.190137,0.262646", \
				        "0.060810,0.079594,0.096982,0.126896,0.172720,0.248739");
			}
			fall_transition(Timing_X4) {
				values ("0.012966,0.016971,0.021049,0.028546,0.042376,0.070266", \
				        "0.012967,0.016972,0.021051,0.028507,0.042354,0.070229", \
				        "0.012945,0.016957,0.021029,0.028554,0.042397,0.070241", \
				        "0.012969,0.016987,0.021067,0.028510,0.042402,0.070204", \
				        "0.014502,0.018131,0.021948,0.029194,0.042805,0.070482", \
				        "0.019486,0.023332,0.027048,0.033973,0.046784,0.072670", \
				        "0.026276,0.030440,0.034331,0.041411,0.053979,0.078705", \
				        "0.036644,0.041112,0.045395,0.052746,0.065888,0.089669");
			}
			rise_transition(Timing_X4) {
				values ("0.011391,0.019394,0.027578,0.043383,0.075221,0.141510", \
				        "0.011376,0.019401,0.027589,0.043372,0.075223,0.141482", \
				        "0.011384,0.019402,0.027571,0.043340,0.075166,0.141502", \
				        "0.011600,0.019584,0.027741,0.043475,0.075280,0.141517", \
				        "0.012894,0.020665,0.028701,0.044254,0.075714,0.141648", \
				        "0.016095,0.023960,0.031553,0.046344,0.076804,0.142215", \
				        "0.021602,0.030178,0.038411,0.052429,0.080801,0.143834", \
				        "0.030770,0.039757,0.049354,0.065202,0.091820,0.150462");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.093033,0.103601,0.112647,0.127408,0.151357,0.191632", \
				        "0.096540,0.107122,0.116202,0.130821,0.154743,0.195015", \
				        "0.104066,0.114635,0.123651,0.138388,0.162238,0.202488", \
				        "0.119871,0.130441,0.139722,0.154410,0.178382,0.218692", \
				        "0.153904,0.164379,0.173258,0.188011,0.211904,0.252218", \
				        "0.209407,0.221364,0.231566,0.247585,0.272669,0.313759", \
				        "0.291821,0.305622,0.317749,0.335679,0.364038,0.408226", \
				        "0.424759,0.440520,0.454040,0.475569,0.507583,0.556759");
			}
			cell_rise(Timing_X4) {
				values ("0.066070,0.078634,0.090547,0.111411,0.149016,0.220976", \
				        "0.068715,0.081287,0.093209,0.113957,0.151619,0.223587", \
				        "0.073155,0.085723,0.097649,0.118477,0.155968,0.227915", \
				        "0.080335,0.092944,0.104874,0.125764,0.163158,0.235090", \
				        "0.090016,0.103026,0.115189,0.136336,0.173899,0.245901", \
				        "0.097406,0.111634,0.124540,0.146573,0.184863,0.256973", \
				        "0.088998,0.105335,0.120817,0.145358,0.185970,0.258940", \
				        "0.044610,0.063467,0.081030,0.111254,0.157977,0.235063");
			}
			fall_transition(Timing_X4) {
				values ("0.014325,0.018244,0.022263,0.029739,0.043544,0.071254", \
				        "0.014325,0.018247,0.022268,0.029716,0.043544,0.071260", \
				        "0.014316,0.018242,0.022270,0.029747,0.043510,0.071269", \
				        "0.014311,0.018249,0.022254,0.029730,0.043541,0.071288", \
				        "0.014684,0.018502,0.022486,0.029907,0.043651,0.071336", \
				        "0.019678,0.023319,0.026959,0.033849,0.046752,0.072862", \
				        "0.026478,0.030447,0.034187,0.041011,0.053498,0.078361", \
				        "0.036208,0.040489,0.044516,0.051570,0.064211,0.088028");
			}
			rise_transition(Timing_X4) {
				values ("0.011375,0.019402,0.027584,0.043345,0.075228,0.141467", \
				        "0.011395,0.019395,0.027554,0.043368,0.075229,0.141501", \
				        "0.011388,0.019403,0.027584,0.043353,0.075197,0.141506", \
				        "0.011531,0.019533,0.027688,0.043405,0.075221,0.141522", \
				        "0.012365,0.020392,0.028517,0.044051,0.075586,0.141601", \
				        "0.014881,0.023071,0.031046,0.046157,0.076821,0.142083", \
				        "0.020126,0.029106,0.037596,0.052156,0.081020,0.143980", \
				        "0.029195,0.038781,0.048791,0.065196,0.092561,0.151275");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.105639,0.116645,0.125967,0.141165,0.165709,0.206655", \
				        "0.109166,0.120117,0.129529,0.144579,0.169111,0.210032", \
				        "0.116754,0.127716,0.137043,0.152205,0.176576,0.217539", \
				        "0.132451,0.143433,0.152970,0.168182,0.192647,0.233595", \
				        "0.166535,0.177429,0.186734,0.201870,0.226434,0.267383", \
				        "0.227682,0.239609,0.249716,0.265774,0.290901,0.332153", \
				        "0.317744,0.331551,0.343656,0.361694,0.389701,0.433923", \
				        "0.461990,0.477773,0.491150,0.512421,0.544520,0.593184");
			}
			cell_rise(Timing_X4) {
				values ("0.071246,0.083814,0.095682,0.116586,0.154173,0.226176", \
				        "0.073731,0.086296,0.098190,0.119047,0.156550,0.228513", \
				        "0.077510,0.090078,0.102011,0.122737,0.160279,0.232218", \
				        "0.082951,0.095548,0.107460,0.128281,0.165742,0.237697", \
				        "0.088939,0.101834,0.114006,0.135162,0.172737,0.244779", \
				        "0.092264,0.105917,0.118600,0.140440,0.178638,0.250815", \
				        "0.079156,0.094801,0.109517,0.133470,0.173964,0.247413", \
				        "0.022101,0.040491,0.057949,0.086912,0.133158,0.210783");
			}
			fall_transition(Timing_X4) {
				values ("0.015657,0.019528,0.023548,0.031049,0.044790,0.072405", \
				        "0.015657,0.019532,0.023531,0.031005,0.044838,0.072391", \
				        "0.015646,0.019544,0.023539,0.031059,0.044849,0.072376", \
				        "0.015639,0.019545,0.023535,0.031018,0.044839,0.072396", \
				        "0.015538,0.019480,0.023532,0.031022,0.044742,0.072376", \
				        "0.019900,0.023465,0.027047,0.033918,0.046815,0.073228", \
				        "0.026792,0.030615,0.034246,0.040974,0.053535,0.078395", \
				        "0.036220,0.040330,0.044191,0.050990,0.063528,0.087232");
			}
			rise_transition(Timing_X4) {
				values ("0.011379,0.019399,0.027561,0.043364,0.075129,0.141489", \
				        "0.011379,0.019398,0.027585,0.043332,0.075216,0.141491", \
				        "0.011395,0.019396,0.027577,0.043348,0.075217,0.141517", \
				        "0.011484,0.019469,0.027626,0.043397,0.075243,0.141516", \
				        "0.011953,0.020072,0.028240,0.043863,0.075405,0.141572", \
				        "0.013451,0.021764,0.029967,0.045431,0.076535,0.141973", \
				        "0.017734,0.026742,0.035307,0.050479,0.080322,0.144030", \
				        "0.026225,0.036108,0.046102,0.062704,0.091167,0.151594");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.004016,0.002054,0.000036,-0.003881,-0.011671,-0.027197", \
				        "0.004005,0.002050,0.000030,-0.003890,-0.011679,-0.027212", \
				        "0.004020,0.002056,0.000034,-0.003888,-0.011672,-0.027234", \
				        "0.004135,0.002151,0.000115,-0.003808,-0.011586,-0.027150", \
				        "0.004694,0.002603,0.000493,-0.003465,-0.011264,-0.026790", \
				        "0.005881,0.003623,0.001382,-0.002709,-0.010584,-0.026202", \
				        "0.008186,0.005767,0.003351,-0.000970,-0.009017,-0.024738", \
				        "0.012884,0.010318,0.007713,0.003010,-0.005410,-0.021374");
			}
			rise_power(Power_X4) {
				values ("0.003977,0.005579,0.007490,0.011362,0.019112,0.034612", \
				        "0.003972,0.005572,0.007481,0.011363,0.019117,0.034622", \
				        "0.003990,0.005587,0.007493,0.011368,0.019113,0.034612", \
				        "0.004169,0.005743,0.007630,0.011464,0.019186,0.034664", \
				        "0.004602,0.006110,0.007966,0.011751,0.019423,0.034855", \
				        "0.005598,0.006992,0.008780,0.012498,0.020108,0.035454", \
				        "0.007882,0.009033,0.010706,0.014330,0.021811,0.037042", \
				        "0.012714,0.013548,0.015032,0.018432,0.025717,0.040739");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.005455,0.003425,0.001357,-0.002576,-0.010371,-0.025892", \
				        "0.005454,0.003418,0.001347,-0.002587,-0.010378,-0.025910", \
				        "0.005454,0.003418,0.001354,-0.002592,-0.010394,-0.025923", \
				        "0.005519,0.003480,0.001399,-0.002557,-0.010353,-0.025916", \
				        "0.005947,0.003851,0.001729,-0.002240,-0.010052,-0.025604", \
				        "0.007136,0.004875,0.002630,-0.001484,-0.009376,-0.025000", \
				        "0.009352,0.006940,0.004514,0.000192,-0.007870,-0.023607", \
				        "0.013611,0.011039,0.008434,0.003791,-0.004580,-0.020538");
			}
			rise_power(Power_X4) {
				values ("0.003986,0.005585,0.007490,0.011377,0.019114,0.034615", \
				        "0.003988,0.005584,0.007488,0.011361,0.019116,0.034615", \
				        "0.003976,0.005575,0.007484,0.011366,0.019125,0.034615", \
				        "0.004024,0.005612,0.007504,0.011360,0.019098,0.034588", \
				        "0.004260,0.005789,0.007658,0.011476,0.019168,0.034639", \
				        "0.004920,0.006345,0.008173,0.011921,0.019570,0.034967", \
				        "0.006644,0.007871,0.009605,0.013261,0.020798,0.036090", \
				        "0.010543,0.011496,0.013035,0.016526,0.023909,0.039011");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.006743,0.004655,0.002539,-0.001427,-0.009229,-0.024771", \
				        "0.006727,0.004639,0.002529,-0.001442,-0.009245,-0.024786", \
				        "0.006730,0.004638,0.002522,-0.001445,-0.009258,-0.024794", \
				        "0.006768,0.004677,0.002569,-0.001407,-0.009219,-0.024775", \
				        "0.007089,0.004982,0.002839,-0.001163,-0.008988,-0.024562", \
				        "0.008252,0.005995,0.003736,-0.000383,-0.008287,-0.023918", \
				        "0.010466,0.008052,0.005636,0.001301,-0.006770,-0.022525", \
				        "0.014657,0.012101,0.009501,0.004873,-0.003484,-0.019442");
			}
			rise_power(Power_X4) {
				values ("0.003997,0.005588,0.007512,0.011386,0.019135,0.034622", \
				        "0.003984,0.005578,0.007490,0.011365,0.019118,0.034618", \
				        "0.003978,0.005582,0.007484,0.011366,0.019115,0.034612", \
				        "0.004002,0.005576,0.007496,0.011356,0.019104,0.034595", \
				        "0.004123,0.005679,0.007573,0.011412,0.019137,0.034612", \
				        "0.004615,0.006085,0.007932,0.011714,0.019386,0.034817", \
				        "0.006122,0.007422,0.009174,0.012869,0.020446,0.035773", \
				        "0.009928,0.010940,0.012500,0.016034,0.023435,0.038596");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X4) {
				values ("0.007933,0.005796,0.003643,-0.000358,-0.008181,-0.023737", \
				        "0.007912,0.005775,0.003635,-0.000375,-0.008194,-0.023753", \
				        "0.007921,0.005784,0.003630,-0.000371,-0.008188,-0.023755", \
				        "0.007957,0.005816,0.003674,-0.000329,-0.008157,-0.023723", \
				        "0.008206,0.006051,0.003912,-0.000128,-0.007970,-0.023562", \
				        "0.009325,0.007048,0.004786,0.000659,-0.007256,-0.022893", \
				        "0.011549,0.009135,0.006717,0.002371,-0.005719,-0.021480", \
				        "0.015742,0.013181,0.010586,0.005969,-0.002389,-0.018358");
			}
			rise_power(Power_X4) {
				values ("0.004002,0.005578,0.007505,0.011377,0.019132,0.034630", \
				        "0.003997,0.005598,0.007511,0.011388,0.019136,0.034635", \
				        "0.003973,0.005569,0.007482,0.011366,0.019118,0.034614", \
				        "0.003991,0.005579,0.007478,0.011353,0.019099,0.034597", \
				        "0.004043,0.005620,0.007517,0.011364,0.019099,0.034591", \
				        "0.004380,0.005906,0.007765,0.011590,0.019294,0.034767", \
				        "0.005684,0.007042,0.008850,0.012583,0.020218,0.035616", \
				        "0.009302,0.010391,0.012021,0.015586,0.023038,0.038258");
			}
		}
	}

}


/******************************************************************************************
 Module          	: ANTENNA_X1
 Cell Description	: Physical cell (ANTENNA_X1)
*******************************************************************************************/

cell (ANTENNA_X1) {

	area               	: 0.266000;
	dont_touch		: true;
	dont_use		: true;


	cell_leakage_power 	: 0.000182;

	leakage_power () {
		when      	: "!A";
		value      	: 0.000121;
	}
	leakage_power () {
		when      	: "A";
		value      	: 0.000242;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000116;
		fall_capacitance	: 0.000113;
		rise_capacitance	: 0.000118;
		fall_capacitance_range		(0.000107, 0.000118);
		rise_capacitance_range		(0.000118, 0.000118);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000001,0.000000,0.000000,0.000000,0.000000");
			}

		}
	}

}


/******************************************************************************************
 Module          	: AOI211_X1
 Cell Description	: Combinational cell (AOI211_X1) with drive strength X1
*******************************************************************************************/

cell (AOI211_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 8554.559125;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 5072.789000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 3515.048000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 3635.244000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 5874.292000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 11378.930000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 7879.352000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 7971.114000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 10249.280000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 5243.671000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 7878.924000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 7970.682000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 10249.020000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 11921.190000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 11712.190000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 11741.570000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 14579.650000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000597;
		fall_capacitance	: 0.000581;
		rise_capacitance	: 0.000613;
		fall_capacitance_range		(0.000486, 0.000654);
		rise_capacitance_range		(0.000532, 0.000714);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000013,0.000010,0.000008,0.000006,0.000005,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "B & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "B & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.000595;
		fall_capacitance	: 0.000550;
		rise_capacitance	: 0.000640;
		fall_capacitance_range		(0.000470, 0.000623);
		rise_capacitance_range		(0.000553, 0.000755);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000039,0.000029,0.000019,0.000012,0.000008,0.000005,0.000003");
			}

		}

		internal_power () {

			when      	: "A & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000655;
		fall_capacitance	: 0.000598;
		rise_capacitance	: 0.000712;
		fall_capacitance_range		(0.000525, 0.000704);
		rise_capacitance_range		(0.000616, 0.000897);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000013,0.000011,0.000009,0.000007,0.000005,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000637;
		fall_capacitance	: 0.000573;
		rise_capacitance	: 0.000700;
		fall_capacitance_range		(0.000514, 0.000647);
		rise_capacitance_range		(0.000584, 0.000864);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000018,0.000015,0.000012,0.000009,0.000006,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | B) | A)";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042944,0.045614,0.051011,0.061574,0.081956,0.121389", \
				        "0.046186,0.048763,0.054070,0.064690,0.085119,0.124525", \
				        "0.052919,0.055524,0.060657,0.071211,0.091558,0.130942", \
				        "0.067383,0.070030,0.075062,0.085097,0.105073,0.144310", \
				        "0.087336,0.090841,0.097610,0.110373,0.132970,0.171949", \
				        "0.108348,0.113160,0.122218,0.139394,0.169890,0.221388", \
				        "0.126836,0.132919,0.145151,0.167765,0.208341,0.277691", \
				        "0.133013,0.141713,0.157411,0.187339,0.240994,0.333047");
			}
			cell_rise(Timing_X1) {
				values ("0.112904,0.119647,0.133217,0.160113,0.213472,0.319850", \
				        "0.116631,0.123357,0.136900,0.163761,0.217146,0.323555", \
				        "0.123179,0.130001,0.143572,0.170439,0.223856,0.330294", \
				        "0.134704,0.141498,0.155114,0.181939,0.235375,0.341805", \
				        "0.154270,0.161372,0.175131,0.202066,0.255398,0.361828", \
				        "0.179378,0.187951,0.204189,0.234724,0.291643,0.398563", \
				        "0.211816,0.222514,0.241985,0.278884,0.345999,0.467059", \
				        "0.271302,0.284528,0.308324,0.353213,0.433039,0.573946");
			}
			fall_transition(Timing_X1) {
				values ("0.030774,0.033064,0.037529,0.045834,0.062329,0.095105", \
				        "0.030666,0.032932,0.037432,0.045823,0.062283,0.095154", \
				        "0.030042,0.032445,0.037004,0.045616,0.062195,0.095150", \
				        "0.032742,0.034583,0.038259,0.045957,0.061960,0.095093", \
				        "0.046284,0.048215,0.052008,0.058257,0.069528,0.096726", \
				        "0.067613,0.070193,0.075076,0.083692,0.098540,0.123261", \
				        "0.102081,0.105609,0.112209,0.123776,0.143937,0.177463", \
				        "0.160434,0.165248,0.174415,0.190384,0.217692,0.262452");
			}
			rise_transition(Timing_X1) {
				values ("0.064279,0.070242,0.082175,0.105765,0.152942,0.246902", \
				        "0.064273,0.070236,0.082193,0.105843,0.152929,0.246904", \
				        "0.064275,0.070248,0.082162,0.105850,0.152933,0.246876", \
				        "0.064285,0.070258,0.082202,0.105776,0.152934,0.246906", \
				        "0.066493,0.072016,0.083288,0.106097,0.152922,0.246894", \
				        "0.080636,0.085971,0.096657,0.117301,0.158615,0.247481", \
				        "0.109723,0.114935,0.125490,0.146552,0.188412,0.269976", \
				        "0.165757,0.170670,0.180612,0.201030,0.242851,0.327433");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.036963,0.039788,0.045404,0.056422,0.077432,0.117587", \
				        "0.040305,0.043020,0.048575,0.059602,0.080646,0.120764", \
				        "0.047444,0.050127,0.055411,0.066232,0.087107,0.127165", \
				        "0.062206,0.065048,0.070235,0.080586,0.100788,0.140505", \
				        "0.080855,0.084667,0.091793,0.105347,0.128660,0.168266", \
				        "0.099985,0.105126,0.114830,0.132717,0.164351,0.217094", \
				        "0.115340,0.121968,0.134783,0.158489,0.200588,0.271571", \
				        "0.116640,0.125622,0.142274,0.173463,0.228963,0.323399");
			}
			cell_rise(Timing_X1) {
				values ("0.124911,0.132737,0.148474,0.179728,0.241615,0.365051", \
				        "0.128578,0.136381,0.152110,0.183301,0.245259,0.368721", \
				        "0.135110,0.143046,0.158764,0.189958,0.251955,0.375443", \
				        "0.146598,0.154406,0.170167,0.201411,0.263360,0.386890", \
				        "0.165488,0.173623,0.189572,0.220718,0.282653,0.406158", \
				        "0.189845,0.199200,0.217345,0.251568,0.315878,0.439537", \
				        "0.221234,0.232724,0.253690,0.293570,0.367184,0.502205", \
				        "0.280914,0.294784,0.319691,0.366837,0.451736,0.604458");
			}
			fall_transition(Timing_X1) {
				values ("0.029763,0.032135,0.036694,0.045270,0.061934,0.094651", \
				        "0.029385,0.031725,0.036425,0.045043,0.061835,0.094639", \
				        "0.028421,0.030796,0.035688,0.044617,0.061642,0.094630", \
				        "0.032879,0.034494,0.038076,0.045250,0.061076,0.094423", \
				        "0.046976,0.048873,0.052547,0.058807,0.069803,0.096167", \
				        "0.068971,0.071437,0.076244,0.084528,0.099222,0.123573", \
				        "0.104910,0.108282,0.114572,0.125830,0.145409,0.178188", \
				        "0.165983,0.170718,0.179475,0.194931,0.221298,0.264795");
			}
			rise_transition(Timing_X1) {
				values ("0.069133,0.076096,0.090085,0.118004,0.173557,0.284315", \
				        "0.069135,0.076103,0.090171,0.117995,0.173552,0.284318", \
				        "0.069133,0.076115,0.090135,0.118021,0.173506,0.284327", \
				        "0.069158,0.076124,0.090119,0.118024,0.173532,0.284297", \
				        "0.070747,0.077359,0.090884,0.118122,0.173540,0.284327", \
				        "0.083045,0.089356,0.102193,0.126933,0.177346,0.284436", \
				        "0.109021,0.115319,0.128058,0.153291,0.203495,0.301450", \
				        "0.162034,0.167960,0.179824,0.204134,0.253695,0.354124");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037305,0.040130,0.046062,0.057013,0.077978,0.118130", \
				        "0.040642,0.043471,0.049081,0.060167,0.081167,0.121301", \
				        "0.047778,0.050523,0.055988,0.066710,0.087643,0.127706", \
				        "0.062583,0.065473,0.070821,0.080947,0.101268,0.141022", \
				        "0.081446,0.085282,0.092598,0.105979,0.129254,0.168773", \
				        "0.101025,0.106157,0.115940,0.133751,0.165213,0.217843", \
				        "0.117357,0.123886,0.136726,0.160282,0.202122,0.272878", \
				        "0.120700,0.129520,0.146083,0.176817,0.231866,0.325862");
			}
			cell_rise(Timing_X1) {
				values ("0.146034,0.153931,0.169634,0.200964,0.263157,0.386813", \
				        "0.149742,0.157611,0.173259,0.204591,0.266799,0.390471", \
				        "0.156239,0.164218,0.179979,0.211282,0.273488,0.397208", \
				        "0.167637,0.175573,0.191383,0.222769,0.284894,0.408698", \
				        "0.186812,0.194834,0.210736,0.242022,0.304181,0.427946", \
				        "0.214526,0.223517,0.240896,0.274214,0.337500,0.461317", \
				        "0.250427,0.261337,0.281186,0.319788,0.391725,0.524927", \
				        "0.315928,0.328954,0.352169,0.397316,0.479685,0.629914");
			}
			fall_transition(Timing_X1) {
				values ("0.037383,0.039506,0.043847,0.052449,0.069125,0.101813", \
				        "0.036949,0.039122,0.043454,0.052234,0.069020,0.101796", \
				        "0.035847,0.038109,0.042618,0.051697,0.068828,0.101748", \
				        "0.039674,0.041313,0.044805,0.052171,0.068256,0.101562", \
				        "0.056989,0.058224,0.061141,0.066367,0.076944,0.103299", \
				        "0.083719,0.085547,0.088929,0.095772,0.108644,0.131079", \
				        "0.125733,0.128212,0.133032,0.142041,0.158826,0.188708", \
				        "0.195679,0.199086,0.205744,0.218041,0.240383,0.279710");
			}
			rise_transition(Timing_X1) {
				values ("0.081174,0.088253,0.102470,0.130433,0.186312,0.297526", \
				        "0.081175,0.088253,0.102431,0.130491,0.186310,0.297508", \
				        "0.081178,0.088253,0.102464,0.130500,0.186319,0.297493", \
				        "0.081174,0.088260,0.102463,0.130482,0.186324,0.297516", \
				        "0.081797,0.088698,0.102638,0.130500,0.186286,0.297517", \
				        "0.092677,0.099196,0.112058,0.137030,0.188938,0.297563", \
				        "0.117184,0.123891,0.137127,0.162996,0.213727,0.312389", \
				        "0.167139,0.173596,0.186341,0.211982,0.263020,0.364656");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.038937,0.041436,0.046538,0.056498,0.076089,0.114623", \
				        "0.042266,0.044718,0.049730,0.059759,0.079404,0.117921", \
				        "0.048985,0.051450,0.056278,0.066336,0.085931,0.124398", \
				        "0.062457,0.065163,0.070314,0.080149,0.099508,0.137831", \
				        "0.079186,0.082889,0.089851,0.103147,0.126334,0.165458", \
				        "0.095568,0.100615,0.110119,0.128024,0.159553,0.212489", \
				        "0.106300,0.112882,0.125923,0.149865,0.192417,0.264151", \
				        "0.097859,0.107284,0.124565,0.156973,0.214334,0.310772");
			}
			cell_rise(Timing_X1) {
				values ("0.094880,0.101590,0.115238,0.142091,0.195444,0.301785", \
				        "0.098058,0.104798,0.118307,0.145210,0.198614,0.305022", \
				        "0.104473,0.111191,0.124569,0.151545,0.205000,0.311468", \
				        "0.116593,0.123409,0.136996,0.163883,0.217481,0.324051", \
				        "0.139941,0.147040,0.161048,0.188131,0.241741,0.348424", \
				        "0.173332,0.182875,0.200453,0.232972,0.291365,0.398206", \
				        "0.224343,0.236536,0.258533,0.299737,0.372751,0.497797", \
				        "0.312216,0.327193,0.354605,0.405765,0.496503,0.652560");
			}
			fall_transition(Timing_X1) {
				values ("0.026121,0.028346,0.032824,0.040916,0.057324,0.090167", \
				        "0.026115,0.028321,0.032746,0.040921,0.057255,0.090189", \
				        "0.025937,0.028165,0.032614,0.040818,0.057339,0.090173", \
				        "0.030384,0.031894,0.035297,0.042237,0.057496,0.090194", \
				        "0.043611,0.045588,0.049461,0.055996,0.067208,0.092958", \
				        "0.064453,0.067106,0.072138,0.080952,0.096145,0.121268", \
				        "0.099079,0.102647,0.109397,0.121241,0.141629,0.175334", \
				        "0.158393,0.163413,0.172735,0.189128,0.216791,0.261594");
			}
			rise_transition(Timing_X1) {
				values ("0.064283,0.070239,0.082211,0.105843,0.152901,0.246870", \
				        "0.064287,0.070254,0.082193,0.105758,0.152938,0.246876", \
				        "0.064289,0.070253,0.082207,0.105820,0.152935,0.246872", \
				        "0.064318,0.070264,0.082232,0.105750,0.152929,0.246874", \
				        "0.069163,0.074084,0.084676,0.106512,0.152903,0.246899", \
				        "0.091143,0.095730,0.105278,0.123350,0.161006,0.247448", \
				        "0.127370,0.132639,0.143058,0.163333,0.201945,0.275120", \
				        "0.183513,0.189586,0.201192,0.224463,0.269473,0.352766");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035285,0.037871,0.043132,0.053419,0.073340,0.112145", \
				        "0.038574,0.041118,0.046342,0.056633,0.076558,0.115365", \
				        "0.045431,0.047963,0.052974,0.063193,0.083051,0.121817", \
				        "0.058783,0.061673,0.066987,0.077165,0.096631,0.135226", \
				        "0.074466,0.078353,0.085766,0.099369,0.123227,0.162888", \
				        "0.089155,0.094487,0.104515,0.123001,0.155434,0.209189", \
				        "0.097234,0.104184,0.117695,0.142600,0.186298,0.259320", \
				        "0.084159,0.093998,0.111918,0.145516,0.204428,0.303047");
			}
			cell_rise(Timing_X1) {
				values ("0.107066,0.114829,0.130575,0.161800,0.223697,0.347129", \
				        "0.110242,0.117993,0.133660,0.164964,0.226911,0.350388", \
				        "0.116490,0.124322,0.139868,0.171181,0.233160,0.356748", \
				        "0.127936,0.135944,0.151679,0.182989,0.245109,0.368728", \
				        "0.149240,0.157342,0.173358,0.204725,0.266927,0.390670", \
				        "0.181332,0.191254,0.210292,0.245860,0.311122,0.434642", \
				        "0.231727,0.244343,0.267421,0.310720,0.388542,0.525646", \
				        "0.321221,0.336779,0.365004,0.418126,0.512397,0.676274");
			}
			fall_transition(Timing_X1) {
				values ("0.025721,0.027916,0.032382,0.040412,0.056642,0.089387", \
				        "0.025559,0.027734,0.032261,0.040346,0.056716,0.089386", \
				        "0.025166,0.027388,0.031807,0.040150,0.056627,0.089397", \
				        "0.030535,0.032027,0.035227,0.041692,0.056795,0.089335", \
				        "0.043856,0.045782,0.049666,0.056050,0.067128,0.092313", \
				        "0.064997,0.067590,0.072519,0.081182,0.096264,0.121182", \
				        "0.100214,0.103786,0.110369,0.122042,0.142068,0.175456", \
				        "0.160770,0.165647,0.174932,0.191098,0.218388,0.262570");
			}
			rise_transition(Timing_X1) {
				values ("0.069144,0.076098,0.090090,0.117965,0.173559,0.284318", \
				        "0.069141,0.076111,0.090135,0.117968,0.173553,0.284305", \
				        "0.069145,0.076109,0.090102,0.117988,0.173553,0.284309", \
				        "0.069201,0.076157,0.090207,0.117997,0.173554,0.284325", \
				        "0.072812,0.079069,0.091932,0.118439,0.173543,0.284300", \
				        "0.091478,0.097110,0.108846,0.131491,0.179104,0.284476", \
				        "0.124379,0.130411,0.142636,0.166409,0.213070,0.304540", \
				        "0.177448,0.184271,0.197278,0.223408,0.274264,0.371398");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035589,0.038240,0.043673,0.053864,0.073814,0.112599", \
				        "0.038874,0.041487,0.046904,0.057152,0.077002,0.115865", \
				        "0.045723,0.048292,0.053330,0.063716,0.083511,0.122296", \
				        "0.059128,0.062075,0.067490,0.077516,0.097091,0.135739", \
				        "0.075047,0.078962,0.086498,0.100083,0.123774,0.163330", \
				        "0.090109,0.095504,0.105597,0.123998,0.156274,0.209943", \
				        "0.099085,0.106031,0.119668,0.144320,0.187777,0.260622", \
				        "0.088198,0.097832,0.115701,0.148865,0.207320,0.305490");
			}
			cell_rise(Timing_X1) {
				values ("0.128159,0.135994,0.151753,0.183088,0.245253,0.368889", \
				        "0.131423,0.139192,0.154891,0.186267,0.248480,0.372177", \
				        "0.137718,0.145604,0.161146,0.192518,0.254752,0.378540", \
				        "0.149216,0.157202,0.172957,0.204353,0.266678,0.390562", \
				        "0.170875,0.178798,0.194728,0.226123,0.288521,0.412470", \
				        "0.207708,0.216811,0.234915,0.269006,0.332773,0.456439", \
				        "0.264139,0.275812,0.297372,0.338584,0.413911,0.548336", \
				        "0.360934,0.375619,0.401645,0.452326,0.542989,0.702978");
			}
			fall_transition(Timing_X1) {
				values ("0.031657,0.033853,0.038290,0.046719,0.063413,0.096265", \
				        "0.031491,0.033708,0.038189,0.046723,0.063421,0.096264", \
				        "0.031057,0.033308,0.037730,0.046530,0.063379,0.096267", \
				        "0.036249,0.037819,0.041040,0.048033,0.063426,0.096270", \
				        "0.053485,0.054830,0.057926,0.063566,0.073958,0.099168", \
				        "0.079697,0.081586,0.085157,0.092391,0.105687,0.128708", \
				        "0.121526,0.124094,0.129121,0.138414,0.155638,0.186058", \
				        "0.191908,0.195449,0.202314,0.215002,0.237985,0.277729");
			}
			rise_transition(Timing_X1) {
				values ("0.081172,0.088261,0.102429,0.130481,0.186311,0.297518", \
				        "0.081180,0.088255,0.102452,0.130494,0.186288,0.297527", \
				        "0.081180,0.088256,0.102476,0.130483,0.186325,0.297523", \
				        "0.081210,0.088242,0.102444,0.130487,0.186328,0.297511", \
				        "0.082840,0.089540,0.103130,0.130558,0.186320,0.297524", \
				        "0.099112,0.105083,0.117037,0.140382,0.190033,0.297553", \
				        "0.131343,0.137653,0.150323,0.174615,0.221866,0.314730", \
				        "0.183747,0.190789,0.204541,0.231450,0.283067,0.380834");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027537,0.030269,0.035875,0.046786,0.068610,0.112126", \
				        "0.030664,0.033346,0.038849,0.049898,0.071733,0.115240", \
				        "0.037148,0.039820,0.045142,0.056086,0.077837,0.121243", \
				        "0.046488,0.050053,0.056712,0.068808,0.090480,0.133704", \
				        "0.055516,0.060339,0.069267,0.085653,0.113612,0.159370", \
				        "0.060564,0.066925,0.079089,0.101041,0.138751,0.200378", \
				        "0.051980,0.061160,0.077600,0.107507,0.158420,0.241436", \
				        "0.011524,0.023273,0.046132,0.086550,0.155759,0.268345");
			}
			cell_rise(Timing_X1) {
				values ("0.055550,0.063366,0.079141,0.110558,0.172646,0.296186", \
				        "0.058610,0.066460,0.082161,0.113435,0.175551,0.299199", \
				        "0.065228,0.072984,0.088510,0.119668,0.181585,0.305018", \
				        "0.080585,0.087598,0.102329,0.132744,0.194146,0.317053", \
				        "0.110908,0.118484,0.133469,0.161265,0.220862,0.342302", \
				        "0.153348,0.163183,0.181920,0.216895,0.279179,0.396387", \
				        "0.217120,0.229888,0.252879,0.296506,0.374744,0.509903", \
				        "0.320427,0.335271,0.364931,0.418352,0.514681,0.683444");
			}
			fall_transition(Timing_X1) {
				values ("0.019861,0.022410,0.027437,0.036714,0.055303,0.092827", \
				        "0.019846,0.022309,0.027410,0.036748,0.055450,0.092855", \
				        "0.021064,0.023152,0.027589,0.036728,0.055442,0.092861", \
				        "0.028182,0.030063,0.033909,0.040341,0.056038,0.092870", \
				        "0.040942,0.043173,0.047534,0.055175,0.068666,0.096661", \
				        "0.062964,0.065749,0.071059,0.080473,0.097188,0.125781", \
				        "0.101322,0.104961,0.111813,0.124034,0.145124,0.180798", \
				        "0.168666,0.173660,0.182955,0.199643,0.227594,0.273215");
			}
			rise_transition(Timing_X1) {
				values ("0.066717,0.074598,0.089691,0.118007,0.173556,0.284321", \
				        "0.066175,0.074126,0.089422,0.118005,0.173562,0.284305", \
				        "0.064356,0.072673,0.088388,0.117772,0.173529,0.284324", \
				        "0.063139,0.070542,0.085693,0.116387,0.173505,0.284318", \
				        "0.071886,0.077483,0.089825,0.115552,0.171473,0.284322", \
				        "0.092446,0.099067,0.111287,0.134409,0.179951,0.282950", \
				        "0.126734,0.133780,0.147978,0.174549,0.223635,0.311963", \
				        "0.186610,0.194679,0.210187,0.240099,0.296967,0.400023");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032180,0.034861,0.040474,0.051414,0.073222,0.116769", \
				        "0.035011,0.037775,0.043278,0.054332,0.076062,0.119675", \
				        "0.040174,0.042992,0.048560,0.059544,0.081317,0.124915", \
				        "0.048463,0.051637,0.057850,0.069581,0.091646,0.135203", \
				        "0.058558,0.062614,0.070256,0.084385,0.109653,0.155154", \
				        "0.066351,0.071916,0.082468,0.101399,0.133963,0.188313", \
				        "0.062526,0.070794,0.085604,0.112267,0.157338,0.229719", \
				        "0.029366,0.040857,0.061842,0.099419,0.162725,0.263808");
			}
			cell_rise(Timing_X1) {
				values ("0.075821,0.083693,0.099458,0.130832,0.193041,0.316750", \
				        "0.078765,0.086655,0.102395,0.133703,0.195928,0.319699", \
				        "0.085150,0.093025,0.108747,0.139906,0.201970,0.325558", \
				        "0.099263,0.106806,0.122220,0.153041,0.214614,0.337712", \
				        "0.130912,0.137924,0.151976,0.180933,0.241376,0.363122", \
				        "0.179791,0.189255,0.206625,0.239583,0.299292,0.417306", \
				        "0.252493,0.264130,0.285869,0.327148,0.401973,0.532794", \
				        "0.369665,0.383333,0.410834,0.461033,0.552787,0.715970");
			}
			fall_transition(Timing_X1) {
				values ("0.019851,0.022251,0.027267,0.036670,0.055360,0.092869", \
				        "0.019831,0.022289,0.027261,0.036771,0.055404,0.092876", \
				        "0.020303,0.022640,0.027483,0.036610,0.055439,0.092883", \
				        "0.023869,0.026019,0.030434,0.038355,0.055811,0.092884", \
				        "0.032527,0.034476,0.038611,0.046395,0.061847,0.094749", \
				        "0.048990,0.051253,0.055600,0.063562,0.078601,0.108900", \
				        "0.077734,0.080380,0.085900,0.095605,0.112723,0.143566", \
				        "0.125753,0.129871,0.136990,0.150262,0.172918,0.210314");
			}
			rise_transition(Timing_X1) {
				values ("0.080392,0.087736,0.102378,0.130542,0.186285,0.297525", \
				        "0.080193,0.087581,0.102308,0.130489,0.186336,0.297525", \
				        "0.079431,0.086983,0.101943,0.130490,0.186337,0.297525", \
				        "0.076595,0.084243,0.100062,0.129950,0.186345,0.297524", \
				        "0.080541,0.087022,0.100269,0.127574,0.185433,0.297520", \
				        "0.100334,0.106887,0.119201,0.142288,0.190101,0.296129", \
				        "0.132532,0.139941,0.154891,0.182083,0.231248,0.320834", \
				        "0.183874,0.192819,0.210274,0.242715,0.302219,0.406915");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004087,0.004329,0.004824,0.005794,0.007728,0.011600", \
				        "0.004096,0.004335,0.004821,0.005799,0.007720,0.011606", \
				        "0.004077,0.004332,0.004815,0.005792,0.007738,0.011605", \
				        "0.004075,0.004323,0.004794,0.005769,0.007711,0.011591", \
				        "0.004061,0.004320,0.004796,0.005766,0.007711,0.011592", \
				        "0.004055,0.004305,0.004795,0.005773,0.007696,0.011586", \
				        "0.004431,0.004675,0.005112,0.006032,0.007922,0.011744", \
				        "0.006314,0.006477,0.006812,0.007559,0.009185,0.012744");
			}
			fall_power(Power_X1) {
				values ("0.003710,0.003464,0.002993,0.002033,0.000118,-0.003727", \
				        "0.003694,0.003452,0.002977,0.002024,0.000106,-0.003740", \
				        "0.003693,0.003444,0.002968,0.002013,0.000099,-0.003744", \
				        "0.003705,0.003462,0.002978,0.002025,0.000105,-0.003741", \
				        "0.003803,0.003549,0.003069,0.002098,0.000164,-0.003707", \
				        "0.004125,0.003877,0.003375,0.002375,0.000393,-0.003531", \
				        "0.005104,0.004819,0.004286,0.003223,0.001138,-0.002919", \
				        "0.007471,0.007167,0.006581,0.005435,0.003194,-0.001134");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003723,0.003972,0.004463,0.005431,0.007371,0.011241", \
				        "0.003719,0.003967,0.004465,0.005429,0.007368,0.011241", \
				        "0.003726,0.003963,0.004462,0.005433,0.007373,0.011240", \
				        "0.003712,0.003958,0.004445,0.005408,0.007350,0.011216", \
				        "0.003697,0.003948,0.004438,0.005406,0.007342,0.011216", \
				        "0.003678,0.003929,0.004420,0.005395,0.007339,0.011219", \
				        "0.004044,0.004256,0.004701,0.005630,0.007517,0.011356", \
				        "0.005830,0.005981,0.006330,0.007081,0.008716,0.012293");
			}
			fall_power(Power_X1) {
				values ("0.003598,0.003369,0.002895,0.001940,0.000022,-0.003817", \
				        "0.003596,0.003355,0.002879,0.001924,0.000013,-0.003829", \
				        "0.003593,0.003352,0.002869,0.001914,0.000002,-0.003835", \
				        "0.003597,0.003368,0.002879,0.001920,0.000005,-0.003838", \
				        "0.003684,0.003438,0.002965,0.001990,0.000052,-0.003811", \
				        "0.004002,0.003757,0.003246,0.002249,0.000266,-0.003647", \
				        "0.004939,0.004686,0.004134,0.003066,0.000980,-0.003078", \
				        "0.007263,0.006945,0.006373,0.005216,0.002968,-0.001361");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004710,0.004956,0.005448,0.006413,0.008352,0.012232", \
				        "0.004719,0.004954,0.005445,0.006416,0.008355,0.012227", \
				        "0.004697,0.004952,0.005449,0.006420,0.008361,0.012231", \
				        "0.004689,0.004940,0.005426,0.006395,0.008328,0.012208", \
				        "0.004688,0.004926,0.005420,0.006385,0.008329,0.012206", \
				        "0.004685,0.004926,0.005412,0.006387,0.008329,0.012205", \
				        "0.004982,0.005198,0.005667,0.006597,0.008503,0.012325", \
				        "0.006622,0.006802,0.007161,0.007956,0.009652,0.013251");
			}
			fall_power(Power_X1) {
				values ("0.003608,0.003371,0.002895,0.001941,0.000025,-0.003815", \
				        "0.003596,0.003358,0.002877,0.001930,0.000012,-0.003829", \
				        "0.003589,0.003348,0.002871,0.001914,0.000004,-0.003834", \
				        "0.003597,0.003361,0.002879,0.001924,0.000006,-0.003836", \
				        "0.003686,0.003438,0.002959,0.001990,0.000050,-0.003807", \
				        "0.003997,0.003749,0.003249,0.002244,0.000267,-0.003650", \
				        "0.004944,0.004671,0.004132,0.003064,0.000978,-0.003079", \
				        "0.007256,0.006959,0.006366,0.005209,0.002962,-0.001361");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & !C2";

			rise_power(Power_X1) {
				values ("0.003789,0.004049,0.004543,0.005512,0.007450,0.011325", \
				        "0.003794,0.004043,0.004533,0.005503,0.007438,0.011318", \
				        "0.003783,0.004012,0.004499,0.005468,0.007414,0.011293", \
				        "0.003752,0.003997,0.004478,0.005456,0.007401,0.011285", \
				        "0.003715,0.003977,0.004465,0.005440,0.007377,0.011273", \
				        "0.003815,0.004074,0.004547,0.005503,0.007431,0.011292", \
				        "0.004480,0.004693,0.005117,0.006009,0.007856,0.011615", \
				        "0.006384,0.006553,0.006900,0.007652,0.009298,0.012831");
			}
			fall_power(Power_X1) {
				values ("0.002776,0.002546,0.002067,0.001103,-0.000827,-0.004690", \
				        "0.002784,0.002543,0.002061,0.001102,-0.000826,-0.004683", \
				        "0.002789,0.002542,0.002062,0.001104,-0.000821,-0.004670", \
				        "0.002804,0.002560,0.002086,0.001116,-0.000809,-0.004666", \
				        "0.002904,0.002654,0.002175,0.001196,-0.000746,-0.004631", \
				        "0.003243,0.002985,0.002480,0.001472,-0.000519,-0.004453", \
				        "0.004178,0.003900,0.003365,0.002296,0.000205,-0.003861", \
				        "0.006393,0.006106,0.005518,0.004368,0.002147,-0.002180");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003428,0.003682,0.004179,0.005149,0.007084,0.010961", \
				        "0.003437,0.003672,0.004154,0.005144,0.007077,0.010960", \
				        "0.003413,0.003654,0.004142,0.005120,0.007057,0.010933", \
				        "0.003389,0.003629,0.004116,0.005097,0.007038,0.010915", \
				        "0.003367,0.003601,0.004093,0.005075,0.007020,0.010906", \
				        "0.003445,0.003682,0.004165,0.005123,0.007051,0.010918", \
				        "0.004037,0.004253,0.004687,0.005587,0.007431,0.011202", \
				        "0.005861,0.006043,0.006390,0.007150,0.008795,0.012346");
			}
			fall_power(Power_X1) {
				values ("0.002708,0.002470,0.001992,0.001033,-0.000893,-0.004748", \
				        "0.002714,0.002463,0.001987,0.001028,-0.000896,-0.004753", \
				        "0.002720,0.002462,0.001984,0.001026,-0.000893,-0.004749", \
				        "0.002716,0.002479,0.001998,0.001037,-0.000894,-0.004746", \
				        "0.002821,0.002566,0.002088,0.001108,-0.000834,-0.004714", \
				        "0.003108,0.002886,0.002377,0.001371,-0.000624,-0.004552", \
				        "0.004056,0.003778,0.003237,0.002166,0.000079,-0.003988", \
				        "0.006211,0.005915,0.005328,0.004181,0.001942,-0.002368");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004434,0.004675,0.005165,0.006133,0.008077,0.011944", \
				        "0.004426,0.004668,0.005161,0.006133,0.008071,0.011943", \
				        "0.004414,0.004645,0.005132,0.006105,0.008049,0.011923", \
				        "0.004386,0.004624,0.005109,0.006082,0.008023,0.011910", \
				        "0.004355,0.004598,0.005088,0.006063,0.008015,0.011895", \
				        "0.004441,0.004662,0.005146,0.006102,0.008044,0.011915", \
				        "0.004962,0.005170,0.005619,0.006529,0.008413,0.012182", \
				        "0.006662,0.006858,0.007225,0.008032,0.009729,0.013295");
			}
			fall_power(Power_X1) {
				values ("0.002720,0.002470,0.001991,0.001028,-0.000894,-0.004754", \
				        "0.002708,0.002464,0.001988,0.001025,-0.000901,-0.004759", \
				        "0.002705,0.002462,0.001978,0.001025,-0.000894,-0.004752", \
				        "0.002727,0.002481,0.001997,0.001039,-0.000889,-0.004749", \
				        "0.002824,0.002568,0.002083,0.001103,-0.000836,-0.004714", \
				        "0.003135,0.002888,0.002375,0.001369,-0.000620,-0.004551", \
				        "0.004046,0.003770,0.003235,0.002164,0.000074,-0.003990", \
				        "0.006204,0.005908,0.005327,0.004171,0.001935,-0.002370");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X1) {
				values ("0.000757,0.000522,0.000034,-0.000927,-0.002856,-0.006719", \
				        "0.000768,0.000533,0.000046,-0.000917,-0.002848,-0.006703", \
				        "0.000787,0.000554,0.000070,-0.000891,-0.002824,-0.006685", \
				        "0.000858,0.000612,0.000123,-0.000848,-0.002790,-0.006661", \
				        "0.001053,0.000796,0.000286,-0.000719,-0.002696,-0.006598", \
				        "0.001603,0.001306,0.000754,-0.000326,-0.002392,-0.006386", \
				        "0.002881,0.002565,0.001949,0.000761,-0.001486,-0.005709", \
				        "0.005696,0.005344,0.004669,0.003360,0.000874,-0.003768");
			}
			rise_power(Power_X1) {
				values ("0.002915,0.003163,0.003638,0.004610,0.006558,0.010431", \
				        "0.002913,0.003158,0.003643,0.004614,0.006548,0.010424", \
				        "0.002934,0.003181,0.003668,0.004637,0.006558,0.010408", \
				        "0.003025,0.003263,0.003743,0.004688,0.006609,0.010464", \
				        "0.003267,0.003484,0.003948,0.004872,0.006754,0.010583", \
				        "0.003794,0.004010,0.004448,0.005340,0.007173,0.010910", \
				        "0.004978,0.005170,0.005562,0.006402,0.008132,0.011745", \
				        "0.007662,0.007790,0.008109,0.008797,0.010347,0.013745");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X1) {
				values ("0.000760,0.000522,0.000039,-0.000930,-0.002859,-0.006725", \
				        "0.000755,0.000508,0.000032,-0.000930,-0.002854,-0.006722", \
				        "0.000779,0.000513,0.000032,-0.000931,-0.002861,-0.006732", \
				        "0.000767,0.000527,0.000048,-0.000923,-0.002853,-0.006724", \
				        "0.000885,0.000634,0.000138,-0.000841,-0.002789,-0.006672", \
				        "0.001286,0.001014,0.000474,-0.000571,-0.002592,-0.006534", \
				        "0.002314,0.002012,0.001424,0.000280,-0.001908,-0.006059", \
				        "0.004688,0.004355,0.003704,0.002437,0.000029,-0.004497");
			}
			rise_power(Power_X1) {
				values ("0.003875,0.004111,0.004596,0.005558,0.007503,0.011368", \
				        "0.003882,0.004114,0.004598,0.005564,0.007498,0.011374", \
				        "0.003880,0.004129,0.004617,0.005587,0.007516,0.011381", \
				        "0.003969,0.004218,0.004687,0.005646,0.007559,0.011408", \
				        "0.004205,0.004425,0.004904,0.005828,0.007712,0.011528", \
				        "0.004726,0.004953,0.005399,0.006301,0.008132,0.011867", \
				        "0.005882,0.006089,0.006513,0.007371,0.009128,0.012748", \
				        "0.008362,0.008562,0.008940,0.009729,0.011366,0.014812");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI211_X2
 Cell Description	: Combinational cell (AOI211_X2) with drive strength X2
*******************************************************************************************/

cell (AOI211_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 17952.631875;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 10727.060000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 7416.560000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 7664.920000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 12471.950000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 23866.970000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 16508.310000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 16698.700000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 21585.910000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 11082.910000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 16507.400000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 16697.780000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 21585.360000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 24727.010000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 24514.890000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 24575.350000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 30611.030000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001130;
		fall_capacitance	: 0.001087;
		rise_capacitance	: 0.001172;
		fall_capacitance_range		(0.000850, 0.001278);
		rise_capacitance_range		(0.001023, 0.001390);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000012,0.000007,0.000004,0.000002,0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000016,0.000010,0.000006,0.000004,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000035,0.000027,0.000020,0.000016,0.000012,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "B & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000015,0.000010,0.000006,0.000003,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "B & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000015,0.000010,0.000006,0.000003,0.000002,-0.000000,-0.000004");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001095;
		fall_capacitance	: 0.001002;
		rise_capacitance	: 0.001189;
		fall_capacitance_range		(0.000844, 0.001188);
		rise_capacitance_range		(0.000995, 0.001426);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000125,0.000101,0.000072,0.000047,0.000030,0.000021,0.000014,0.000008");
			}

		}

		internal_power () {

			when      	: "A & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000004");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001200;
		fall_capacitance	: 0.001082;
		rise_capacitance	: 0.001317;
		fall_capacitance_range		(0.000949, 0.001356);
		rise_capacitance_range		(0.001080, 0.001685);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000033,0.000027,0.000021,0.000015,0.000011,0.000008,0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000010,0.000006,0.000003,0.000002,-0.000000,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000010,0.000006,0.000003,0.000002,-0.000000,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001193;
		fall_capacitance	: 0.001051;
		rise_capacitance	: 0.001335;
		fall_capacitance_range		(0.000986, 0.001257);
		rise_capacitance_range		(0.001076, 0.001645);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000003,0.000002,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000004,0.000002,0.000001,-0.000001,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000049,0.000039,0.000029,0.000022,0.000015,0.000010,0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000003,0.000002,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | B) | A)";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.032403,0.036357,0.041593,0.051811,0.071386,0.109157", \
				        "0.035654,0.039536,0.044706,0.054973,0.074540,0.112293", \
				        "0.042562,0.046385,0.051396,0.061578,0.081051,0.118756", \
				        "0.055813,0.060194,0.065460,0.075579,0.094552,0.132074", \
				        "0.071131,0.076961,0.084181,0.097670,0.121042,0.159770", \
				        "0.086050,0.093887,0.103614,0.121568,0.153077,0.205476", \
				        "0.096419,0.106512,0.119434,0.143217,0.185063,0.255388", \
				        "0.091880,0.105670,0.122387,0.153725,0.208939,0.302118");
			}
			cell_rise(Timing_X2) {
				values ("0.085582,0.095609,0.108972,0.135313,0.187474,0.291459", \
				        "0.089191,0.099178,0.112533,0.138897,0.191099,0.295120", \
				        "0.095561,0.105648,0.118930,0.145307,0.197489,0.301588", \
				        "0.106613,0.116717,0.129956,0.156264,0.208409,0.312477", \
				        "0.123772,0.134855,0.149035,0.175649,0.227872,0.331905", \
				        "0.143350,0.156760,0.173784,0.205217,0.262812,0.368429", \
				        "0.171325,0.188233,0.208879,0.246896,0.314807,0.435637", \
				        "0.228701,0.249937,0.274983,0.321357,0.402112,0.542322");
			}
			fall_transition(Timing_X2) {
				values ("0.022428,0.025685,0.029920,0.037883,0.053783,0.085444", \
				        "0.022255,0.025531,0.029802,0.037838,0.053746,0.085456", \
				        "0.021749,0.025031,0.029271,0.037618,0.053718,0.085447", \
				        "0.027369,0.029817,0.032751,0.039148,0.053685,0.085415", \
				        "0.039322,0.042480,0.046544,0.053157,0.064463,0.088568", \
				        "0.058275,0.062521,0.067716,0.076874,0.092314,0.117411", \
				        "0.089689,0.095476,0.102632,0.114848,0.135637,0.169509", \
				        "0.143243,0.151586,0.161566,0.178688,0.206988,0.252120");
			}
			rise_transition(Timing_X2) {
				values ("0.045598,0.054296,0.065975,0.089140,0.135188,0.226996", \
				        "0.045594,0.054297,0.065954,0.089136,0.135192,0.227023", \
				        "0.045593,0.054287,0.065977,0.089135,0.135180,0.227021", \
				        "0.045646,0.054342,0.066056,0.089115,0.135198,0.227004", \
				        "0.050697,0.058309,0.068769,0.090201,0.135182,0.227015", \
				        "0.064872,0.072761,0.083316,0.103853,0.143656,0.228520", \
				        "0.095119,0.102137,0.112216,0.132510,0.173489,0.253847", \
				        "0.148724,0.155377,0.165090,0.185051,0.226204,0.309336");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027077,0.031276,0.036849,0.047481,0.067585,0.105975", \
				        "0.030499,0.034616,0.040108,0.050705,0.070780,0.109082", \
				        "0.038156,0.041945,0.047108,0.057410,0.077305,0.115526", \
				        "0.050697,0.055453,0.061067,0.071819,0.090955,0.128831", \
				        "0.064742,0.071024,0.078659,0.092928,0.117169,0.156675", \
				        "0.077655,0.086072,0.096336,0.115316,0.147894,0.201507", \
				        "0.084797,0.095702,0.109306,0.134314,0.177636,0.249608", \
				        "0.075323,0.089820,0.107473,0.140084,0.197271,0.292887");
			}
			cell_rise(Timing_X2) {
				values ("0.093644,0.105407,0.120884,0.151397,0.211921,0.332578", \
				        "0.097239,0.108919,0.124437,0.154938,0.215533,0.336204", \
				        "0.103602,0.115357,0.130810,0.161236,0.221885,0.342597", \
				        "0.114555,0.126272,0.141690,0.172056,0.232680,0.353412", \
				        "0.131246,0.143813,0.159945,0.190614,0.251100,0.371833", \
				        "0.150063,0.164853,0.183587,0.218515,0.283265,0.404581", \
				        "0.177735,0.195660,0.217634,0.258392,0.332395,0.466590", \
				        "0.235786,0.257792,0.284036,0.332537,0.418086,0.569385");
			}
			fall_transition(Timing_X2) {
				values ("0.021262,0.024674,0.029015,0.037359,0.053345,0.084956", \
				        "0.020652,0.024218,0.028667,0.037122,0.053280,0.084942", \
				        "0.020765,0.023970,0.028236,0.036573,0.053073,0.084849", \
				        "0.027677,0.030134,0.033140,0.038900,0.052986,0.084728", \
				        "0.039991,0.043109,0.047103,0.053635,0.064862,0.088242", \
				        "0.059694,0.063813,0.068952,0.077794,0.092816,0.117574", \
				        "0.092672,0.098213,0.105070,0.116940,0.137072,0.170168", \
				        "0.149050,0.157137,0.166789,0.183358,0.210589,0.254474");
			}
			rise_transition(Timing_X2) {
				values ("0.047833,0.058116,0.071934,0.099122,0.153418,0.261701", \
				        "0.047825,0.058145,0.071908,0.099083,0.153374,0.261686", \
				        "0.047835,0.058144,0.071882,0.099134,0.153357,0.261689", \
				        "0.047926,0.058191,0.071955,0.099124,0.153412,0.261700", \
				        "0.052117,0.061256,0.073946,0.099735,0.153418,0.261674", \
				        "0.064464,0.074001,0.086649,0.111213,0.159487,0.262300", \
				        "0.091806,0.100567,0.112746,0.137192,0.186267,0.282459", \
				        "0.143293,0.151486,0.163037,0.186777,0.235210,0.333625");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027400,0.031653,0.037298,0.047949,0.068063,0.106489", \
				        "0.030810,0.035018,0.040527,0.051147,0.071249,0.109586", \
				        "0.038418,0.042217,0.047441,0.057861,0.077772,0.116033", \
				        "0.051112,0.055939,0.061696,0.072211,0.091360,0.129311", \
				        "0.065393,0.071713,0.079572,0.093641,0.117746,0.157095", \
				        "0.078778,0.087192,0.097662,0.116364,0.148822,0.202277", \
				        "0.087016,0.097828,0.111473,0.136144,0.179204,0.250948", \
				        "0.080088,0.094073,0.111632,0.143687,0.200230,0.295349");
			}
			cell_rise(Timing_X2) {
				values ("0.110292,0.121987,0.137467,0.168066,0.228830,0.349663", \
				        "0.113921,0.125550,0.141041,0.171639,0.232426,0.353299", \
				        "0.120227,0.131929,0.147422,0.178014,0.238836,0.359758", \
				        "0.131093,0.142826,0.158233,0.188853,0.249630,0.370562", \
				        "0.149002,0.161041,0.176760,0.207370,0.268054,0.388983", \
				        "0.171001,0.185065,0.202982,0.236960,0.300599,0.421708", \
				        "0.202873,0.219508,0.240324,0.279677,0.352118,0.484683", \
				        "0.266320,0.286668,0.311034,0.357361,0.440473,0.589538");
			}
			fall_transition(Timing_X2) {
				values ("0.027395,0.030457,0.034773,0.042978,0.058877,0.090262", \
				        "0.026749,0.029998,0.034339,0.042767,0.058822,0.090248", \
				        "0.026534,0.029491,0.033744,0.042252,0.058618,0.090214", \
				        "0.033883,0.035686,0.038457,0.044581,0.058521,0.090037", \
				        "0.049529,0.051692,0.054721,0.060215,0.070302,0.093513", \
				        "0.073247,0.076203,0.079990,0.087310,0.100496,0.123503", \
				        "0.111681,0.115661,0.120905,0.130455,0.147952,0.178524", \
				        "0.176418,0.182166,0.189468,0.202727,0.226204,0.266371");
			}
			rise_transition(Timing_X2) {
				values ("0.057199,0.067628,0.081501,0.108956,0.163495,0.272163", \
				        "0.057196,0.067599,0.081538,0.108955,0.163495,0.272171", \
				        "0.057199,0.067582,0.081592,0.108878,0.163510,0.272166", \
				        "0.057202,0.067642,0.081601,0.108934,0.163511,0.272172", \
				        "0.059694,0.069413,0.082665,0.109213,0.163479,0.272155", \
				        "0.071784,0.081554,0.094440,0.119103,0.168219,0.272473", \
				        "0.096748,0.106402,0.119300,0.144527,0.194287,0.290848", \
				        "0.145463,0.154858,0.167522,0.192564,0.242393,0.341970");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.029482,0.033158,0.038048,0.047722,0.066552,0.103481", \
				        "0.032759,0.036400,0.041343,0.050964,0.069805,0.106771", \
				        "0.039605,0.043209,0.047963,0.057578,0.076343,0.113265", \
				        "0.051027,0.055591,0.061084,0.071207,0.089927,0.126646", \
				        "0.063272,0.069404,0.076873,0.090854,0.115026,0.154312", \
				        "0.073601,0.081960,0.092163,0.110942,0.143619,0.197460", \
				        "0.075892,0.086958,0.100985,0.126240,0.170220,0.243076", \
				        "0.055910,0.071172,0.089690,0.123919,0.183229,0.281269");
			}
			cell_rise(Timing_X2) {
				values ("0.070759,0.080737,0.094132,0.120373,0.172555,0.276510", \
				        "0.073864,0.083879,0.097155,0.123465,0.175745,0.279726", \
				        "0.080101,0.090134,0.103278,0.129620,0.181949,0.286045", \
				        "0.091996,0.102236,0.115592,0.141941,0.194272,0.298438", \
				        "0.112365,0.124155,0.139017,0.166162,0.218659,0.322877", \
				        "0.140271,0.155190,0.174065,0.208116,0.267872,0.373258", \
				        "0.186052,0.205352,0.228653,0.271354,0.345911,0.471764", \
				        "0.267057,0.291129,0.320029,0.373260,0.465868,0.622859");
			}
			fall_transition(Timing_X2) {
				values ("0.018635,0.021773,0.025848,0.033744,0.049596,0.081287", \
				        "0.018611,0.021795,0.025848,0.033740,0.049564,0.081243", \
				        "0.018940,0.021923,0.025863,0.033710,0.049585,0.081296", \
				        "0.025323,0.027821,0.030870,0.036712,0.050137,0.081259", \
				        "0.036811,0.040053,0.044134,0.051095,0.062750,0.085753", \
				        "0.055400,0.059777,0.065198,0.074508,0.090204,0.115669", \
				        "0.087037,0.092953,0.100270,0.112856,0.133777,0.167804", \
				        "0.141460,0.150115,0.160463,0.178058,0.206698,0.251919");
			}
			rise_transition(Timing_X2) {
				values ("0.045595,0.054271,0.065988,0.089129,0.135122,0.227018", \
				        "0.045586,0.054296,0.065986,0.089039,0.135142,0.227046", \
				        "0.045600,0.054304,0.065915,0.089060,0.135197,0.227030", \
				        "0.046016,0.054437,0.066110,0.089134,0.135166,0.227039", \
				        "0.055347,0.062001,0.071409,0.091237,0.135204,0.227041", \
				        "0.076408,0.083333,0.092918,0.111028,0.146725,0.228490", \
				        "0.109010,0.116940,0.127552,0.148198,0.187313,0.259932", \
				        "0.162076,0.170566,0.182209,0.205528,0.250904,0.334552");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.026163,0.030028,0.035131,0.045031,0.064107,0.101281", \
				        "0.029482,0.033262,0.038409,0.048284,0.067371,0.104525", \
				        "0.036621,0.040259,0.045148,0.054932,0.073931,0.111005", \
				        "0.047335,0.052136,0.057836,0.068535,0.087426,0.124342", \
				        "0.058406,0.064939,0.072922,0.087336,0.112049,0.152043", \
				        "0.066904,0.075761,0.086467,0.106104,0.139596,0.194382", \
				        "0.066580,0.078132,0.092724,0.118955,0.164256,0.238430", \
				        "0.041718,0.057714,0.077019,0.112433,0.173470,0.273671");
			}
			cell_rise(Timing_X2) {
				values ("0.078995,0.090593,0.106096,0.136611,0.197134,0.317759", \
				        "0.082090,0.093743,0.109177,0.139694,0.200318,0.320989", \
				        "0.088171,0.099906,0.115146,0.145726,0.206424,0.327187", \
				        "0.099317,0.111084,0.126572,0.157192,0.217944,0.338815", \
				        "0.118115,0.131213,0.147846,0.178895,0.239642,0.360562", \
				        "0.145171,0.160955,0.181177,0.217894,0.284014,0.405133", \
				        "0.191028,0.211051,0.235469,0.280140,0.359020,0.496080", \
				        "0.273878,0.298957,0.328702,0.383866,0.479860,0.644090");
			}
			fall_transition(Timing_X2) {
				values ("0.018184,0.021342,0.025346,0.033225,0.048921,0.080439", \
				        "0.017882,0.021153,0.025220,0.033207,0.048948,0.080449", \
				        "0.018531,0.021400,0.025118,0.032984,0.048930,0.080494", \
				        "0.025406,0.027930,0.031093,0.036498,0.049649,0.080481", \
				        "0.037024,0.040229,0.044367,0.051151,0.062683,0.085207", \
				        "0.055984,0.060235,0.065589,0.074680,0.090260,0.115541", \
				        "0.088066,0.094096,0.101222,0.113634,0.134294,0.167876", \
				        "0.143819,0.152401,0.162646,0.180035,0.208315,0.252961");
			}
			rise_transition(Timing_X2) {
				values ("0.047818,0.058115,0.071915,0.099097,0.153409,0.261691", \
				        "0.047826,0.058123,0.071871,0.099128,0.153378,0.261698", \
				        "0.047836,0.058155,0.071929,0.099127,0.153379,0.261685", \
				        "0.048231,0.058343,0.072004,0.099136,0.153406,0.261696", \
				        "0.055930,0.064298,0.076048,0.100594,0.153399,0.261690", \
				        "0.074186,0.082616,0.094340,0.116773,0.161758,0.262328", \
				        "0.104291,0.113415,0.125763,0.149550,0.196074,0.285796", \
				        "0.154403,0.164230,0.177314,0.203457,0.254287,0.350857");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.026424,0.030405,0.035509,0.045391,0.064536,0.101759", \
				        "0.029738,0.033654,0.038744,0.048650,0.067758,0.104948", \
				        "0.036878,0.040491,0.045368,0.055250,0.074322,0.111434", \
				        "0.047721,0.052594,0.058421,0.069047,0.087763,0.124835", \
				        "0.059020,0.065589,0.073653,0.088042,0.112637,0.152456", \
				        "0.068040,0.076856,0.087760,0.107168,0.140521,0.195113", \
				        "0.068691,0.080212,0.094794,0.120838,0.165770,0.239744", \
				        "0.046427,0.061848,0.081189,0.116012,0.176459,0.276153");
			}
			cell_rise(Timing_X2) {
				values ("0.095608,0.107212,0.122735,0.153320,0.214066,0.334867", \
				        "0.098816,0.110351,0.125785,0.156450,0.217235,0.338128", \
				        "0.104906,0.116542,0.131827,0.162474,0.223335,0.344329", \
				        "0.116031,0.127825,0.143305,0.174005,0.234902,0.355970", \
				        "0.136799,0.149102,0.164899,0.195649,0.256592,0.377724", \
				        "0.168205,0.182690,0.201789,0.236901,0.301421,0.422228", \
				        "0.219215,0.237519,0.260596,0.303011,0.379525,0.514164", \
				        "0.308732,0.331977,0.359509,0.412019,0.504668,0.665451");
			}
			fall_transition(Timing_X2) {
				values ("0.022797,0.025988,0.030076,0.038179,0.054169,0.085656", \
				        "0.022470,0.025753,0.029973,0.038206,0.054164,0.085665", \
				        "0.022965,0.025869,0.029860,0.037976,0.054140,0.085647", \
				        "0.031042,0.032949,0.035827,0.041494,0.054834,0.085650", \
				        "0.046258,0.048554,0.051770,0.057627,0.068071,0.090385", \
				        "0.069539,0.072615,0.076753,0.084188,0.097973,0.121479", \
				        "0.107742,0.111986,0.117455,0.127375,0.145323,0.176324", \
				        "0.172711,0.178930,0.186473,0.200274,0.224373,0.265084");
			}
			rise_transition(Timing_X2) {
				values ("0.057174,0.067616,0.081491,0.108950,0.163487,0.272172", \
				        "0.057206,0.067627,0.081583,0.108955,0.163457,0.272166", \
				        "0.057187,0.067622,0.081552,0.108945,0.163471,0.272172", \
				        "0.057301,0.067680,0.081526,0.108947,0.163503,0.272171", \
				        "0.062320,0.071251,0.083910,0.109519,0.163447,0.272151", \
				        "0.079776,0.088608,0.100569,0.123434,0.169883,0.272449", \
				        "0.109227,0.118848,0.131652,0.156087,0.203091,0.293581", \
				        "0.157934,0.168659,0.182718,0.209718,0.261332,0.358423");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020169,0.024242,0.029702,0.040453,0.061728,0.104133", \
				        "0.023310,0.027280,0.032764,0.043448,0.064761,0.107176", \
				        "0.029147,0.033648,0.039155,0.049777,0.070983,0.113262", \
				        "0.035528,0.041569,0.048846,0.061714,0.083560,0.125669", \
				        "0.040502,0.048690,0.058410,0.075837,0.104953,0.151384", \
				        "0.039834,0.050788,0.064143,0.087539,0.126749,0.189539", \
				        "0.023486,0.038829,0.056822,0.088767,0.141808,0.226461", \
				        "-0.027170,-0.006997,0.017632,0.060549,0.132630,0.247498");
			}
			cell_rise(Timing_X2) {
				values ("0.037600,0.049126,0.064632,0.095361,0.156070,0.276853", \
				        "0.040687,0.052107,0.067521,0.098224,0.158959,0.279751", \
				        "0.048015,0.058787,0.073863,0.104307,0.164793,0.285485", \
				        "0.064474,0.074642,0.088130,0.117436,0.177278,0.297297", \
				        "0.089320,0.102055,0.118053,0.146858,0.204141,0.322570", \
				        "0.125509,0.141273,0.161286,0.197840,0.261963,0.377000", \
				        "0.181852,0.202126,0.226506,0.271784,0.351834,0.488594", \
				        "0.275902,0.300749,0.331836,0.387529,0.485911,0.655772");
			}
			fall_transition(Timing_X2) {
				values ("0.013256,0.016904,0.021442,0.030668,0.048954,0.085737", \
				        "0.013313,0.016836,0.021492,0.030660,0.049042,0.085733", \
				        "0.016228,0.018819,0.022646,0.030633,0.048998,0.085684", \
				        "0.022901,0.025925,0.029849,0.036128,0.050491,0.085665", \
				        "0.034499,0.038080,0.042663,0.050666,0.064413,0.090732", \
				        "0.054835,0.059398,0.065104,0.074910,0.092036,0.120760", \
				        "0.090217,0.096424,0.103906,0.116874,0.138671,0.174652", \
				        "0.153358,0.161942,0.172146,0.189931,0.219104,0.265480");
			}
			rise_transition(Timing_X2) {
				values ("0.044726,0.056569,0.071405,0.099123,0.153424,0.261703", \
				        "0.043836,0.056004,0.071113,0.099063,0.153407,0.261676", \
				        "0.042154,0.054111,0.070008,0.098864,0.153410,0.261700", \
				        "0.044563,0.054466,0.068299,0.097199,0.153392,0.261698", \
				        "0.055812,0.064509,0.075902,0.099419,0.151691,0.261680", \
				        "0.074053,0.084147,0.096891,0.120387,0.164034,0.261459", \
				        "0.105812,0.116795,0.131134,0.158123,0.207710,0.294923", \
				        "0.163008,0.175025,0.191121,0.221301,0.278259,0.381253");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023600,0.027689,0.033114,0.043850,0.065195,0.107672", \
				        "0.026296,0.030335,0.035871,0.046579,0.067907,0.110462", \
				        "0.031022,0.035391,0.040940,0.051633,0.073016,0.115615", \
				        "0.037514,0.042679,0.049115,0.061048,0.082993,0.125709", \
				        "0.044002,0.050911,0.059185,0.074121,0.099938,0.145295", \
				        "0.045913,0.055665,0.067274,0.087633,0.121530,0.176553", \
				        "0.034236,0.047880,0.064269,0.092991,0.140213,0.214228", \
				        "-0.010986,0.008758,0.031772,0.072165,0.138533,0.242068");
			}
			cell_rise(Timing_X2) {
				values ("0.053224,0.064841,0.080398,0.111055,0.171835,0.292718", \
				        "0.056192,0.067805,0.083244,0.113871,0.174676,0.295565", \
				        "0.062868,0.074274,0.089591,0.120056,0.180654,0.301407", \
				        "0.077990,0.088626,0.103359,0.133288,0.193222,0.313363", \
				        "0.107400,0.118993,0.133983,0.161754,0.220237,0.338851", \
				        "0.149205,0.163962,0.182540,0.217140,0.278722,0.393480", \
				        "0.213593,0.232484,0.255143,0.298038,0.374873,0.507607", \
				        "0.322026,0.344285,0.373194,0.425357,0.518969,0.683556");
			}
			fall_transition(Timing_X2) {
				values ("0.013236,0.016803,0.021444,0.030658,0.049051,0.085631", \
				        "0.013238,0.016767,0.021507,0.030660,0.048995,0.085725", \
				        "0.014564,0.017668,0.021961,0.030632,0.049045,0.085706", \
				        "0.018619,0.021591,0.025640,0.033210,0.049735,0.085679", \
				        "0.027123,0.030080,0.034128,0.041466,0.056542,0.088289", \
				        "0.042328,0.046002,0.050573,0.058614,0.073570,0.103053", \
				        "0.068690,0.073209,0.079194,0.089420,0.107108,0.137783", \
				        "0.112194,0.119105,0.127158,0.141483,0.165274,0.203307");
			}
			rise_transition(Timing_X2) {
				values ("0.056003,0.067074,0.081394,0.108972,0.163514,0.272179", \
				        "0.055607,0.066859,0.081265,0.108963,0.163503,0.272177", \
				        "0.054150,0.065903,0.080825,0.108912,0.163488,0.272166", \
				        "0.053385,0.064059,0.078692,0.108213,0.163523,0.272174", \
				        "0.062140,0.070869,0.082888,0.108003,0.162215,0.272152", \
				        "0.079833,0.090194,0.102938,0.126614,0.171367,0.271493", \
				        "0.107948,0.120095,0.135405,0.163503,0.213576,0.301406", \
				        "0.154947,0.169241,0.187367,0.220623,0.280852,0.386057");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.006162,0.006871,0.007860,0.009802,0.013680,0.021427", \
				        "0.006146,0.006884,0.007854,0.009807,0.013680,0.021425", \
				        "0.006128,0.006875,0.007853,0.009792,0.013682,0.021425", \
				        "0.006127,0.006853,0.007830,0.009780,0.013642,0.021415", \
				        "0.006093,0.006817,0.007807,0.009749,0.013641,0.021405", \
				        "0.006189,0.006890,0.007850,0.009798,0.013655,0.021429", \
				        "0.007382,0.007998,0.008845,0.010621,0.014301,0.021881", \
				        "0.011939,0.012340,0.012943,0.014300,0.017396,0.024322");
			}
			fall_power(Power_X2) {
				values ("0.006239,0.005513,0.004560,0.002641,-0.001200,-0.008908", \
				        "0.006198,0.005488,0.004533,0.002619,-0.001216,-0.008915", \
				        "0.006218,0.005481,0.004526,0.002619,-0.001228,-0.008922", \
				        "0.006259,0.005535,0.004532,0.002656,-0.001206,-0.008904", \
				        "0.006507,0.005756,0.004795,0.002837,-0.001057,-0.008820", \
				        "0.007291,0.006528,0.005502,0.003470,-0.000531,-0.008419", \
				        "0.009508,0.008650,0.007557,0.005380,0.001141,-0.007072", \
				        "0.014663,0.013716,0.012522,0.010176,0.005604,-0.003173");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.005462,0.006198,0.007181,0.009123,0.012992,0.020749", \
				        "0.005467,0.006203,0.007179,0.009121,0.012996,0.020723", \
				        "0.005444,0.006186,0.007175,0.009110,0.012988,0.020744", \
				        "0.005444,0.006167,0.007148,0.009094,0.012964,0.020711", \
				        "0.005398,0.006141,0.007119,0.009066,0.012950,0.020718", \
				        "0.005454,0.006180,0.007151,0.009082,0.012964,0.020712", \
				        "0.006604,0.007224,0.008056,0.009841,0.013543,0.021133", \
				        "0.011010,0.011418,0.012027,0.013379,0.016486,0.023459");
			}
			fall_power(Power_X2) {
				values ("0.006073,0.005357,0.004391,0.002482,-0.001351,-0.009042", \
				        "0.006051,0.005331,0.004363,0.002459,-0.001368,-0.009065", \
				        "0.006042,0.005321,0.004360,0.002451,-0.001392,-0.009076", \
				        "0.006082,0.005361,0.004403,0.002482,-0.001363,-0.009075", \
				        "0.006315,0.005563,0.004598,0.002644,-0.001251,-0.009000", \
				        "0.007086,0.006314,0.005274,0.003245,-0.000757,-0.008635", \
				        "0.009240,0.008393,0.007280,0.005095,0.000853,-0.007358", \
				        "0.014268,0.013352,0.012137,0.009762,0.005164,-0.003640");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.007055,0.007793,0.008773,0.010708,0.014590,0.022340", \
				        "0.007067,0.007783,0.008770,0.010707,0.014587,0.022336", \
				        "0.007058,0.007775,0.008770,0.010701,0.014580,0.022331", \
				        "0.007031,0.007769,0.008732,0.010674,0.014558,0.022312", \
				        "0.007000,0.007736,0.008707,0.010655,0.014548,0.022302", \
				        "0.007043,0.007768,0.008741,0.010680,0.014550,0.022297", \
				        "0.008042,0.008675,0.009573,0.011370,0.015106,0.022719", \
				        "0.012202,0.012630,0.013289,0.014719,0.017942,0.024967");
			}
			fall_power(Power_X2) {
				values ("0.006064,0.005362,0.004399,0.002490,-0.001341,-0.009038", \
				        "0.006052,0.005335,0.004369,0.002463,-0.001371,-0.009068", \
				        "0.006045,0.005315,0.004356,0.002446,-0.001392,-0.009081", \
				        "0.006074,0.005353,0.004398,0.002483,-0.001366,-0.009071", \
				        "0.006310,0.005566,0.004593,0.002632,-0.001255,-0.008997", \
				        "0.007060,0.006307,0.005279,0.003246,-0.000758,-0.008625", \
				        "0.009237,0.008380,0.007278,0.005091,0.000849,-0.007351", \
				        "0.014250,0.013337,0.012124,0.009753,0.005153,-0.003636");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.005557,0.006300,0.007282,0.009223,0.013098,0.020845", \
				        "0.005543,0.006286,0.007256,0.009199,0.013077,0.020839", \
				        "0.005511,0.006233,0.007199,0.009162,0.013040,0.020788", \
				        "0.005445,0.006187,0.007171,0.009133,0.013033,0.020790", \
				        "0.005456,0.006179,0.007155,0.009108,0.012995,0.020759", \
				        "0.005826,0.006506,0.007445,0.009343,0.013170,0.020859", \
				        "0.007458,0.008071,0.008871,0.010599,0.014203,0.021649", \
				        "0.011803,0.012235,0.012860,0.014261,0.017418,0.024372");
			}
			fall_power(Power_X2) {
				values ("0.004708,0.003997,0.003035,0.001116,-0.002748,-0.010480", \
				        "0.004710,0.003993,0.003038,0.001116,-0.002739,-0.010463", \
				        "0.004701,0.003977,0.003038,0.001127,-0.002724,-0.010450", \
				        "0.004762,0.004051,0.003093,0.001174,-0.002700,-0.010422", \
				        "0.005022,0.004277,0.003307,0.001347,-0.002554,-0.010327", \
				        "0.005806,0.005053,0.004019,0.001979,-0.002039,-0.009941", \
				        "0.007909,0.007085,0.005987,0.003809,-0.000433,-0.008643", \
				        "0.012724,0.011824,0.010627,0.008282,0.003733,-0.005020");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.004864,0.005624,0.006601,0.008552,0.012423,0.020167", \
				        "0.004855,0.005595,0.006567,0.008529,0.012407,0.020152", \
				        "0.004818,0.005562,0.006524,0.008485,0.012375,0.020130", \
				        "0.004740,0.005519,0.006482,0.008445,0.012337,0.020102", \
				        "0.004733,0.005513,0.006456,0.008407,0.012303,0.020075", \
				        "0.005107,0.005771,0.006714,0.008612,0.012436,0.020146", \
				        "0.006654,0.007233,0.008063,0.009789,0.013402,0.020886", \
				        "0.010843,0.011265,0.011878,0.013283,0.016479,0.023437");
			}
			fall_power(Power_X2) {
				values ("0.004590,0.003869,0.002912,0.000992,-0.002868,-0.010596", \
				        "0.004584,0.003859,0.002900,0.000977,-0.002871,-0.010578", \
				        "0.004578,0.003853,0.002899,0.000986,-0.002872,-0.010585", \
				        "0.004622,0.003900,0.002953,0.001024,-0.002844,-0.010567", \
				        "0.004866,0.004138,0.003149,0.001185,-0.002717,-0.010489", \
				        "0.005651,0.004866,0.003833,0.001795,-0.002228,-0.010124", \
				        "0.007722,0.006862,0.005757,0.003567,-0.000674,-0.008880", \
				        "0.012344,0.011481,0.010258,0.007913,0.003352,-0.005378");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.006467,0.007233,0.008193,0.010140,0.014017,0.021760", \
				        "0.006456,0.007200,0.008168,0.010112,0.013992,0.021737", \
				        "0.006438,0.007152,0.008122,0.010068,0.013959,0.021716", \
				        "0.006377,0.007107,0.008083,0.010045,0.013931,0.021691", \
				        "0.006348,0.007077,0.008061,0.010005,0.013895,0.021659", \
				        "0.006622,0.007325,0.008285,0.010182,0.014029,0.021741", \
				        "0.008036,0.008649,0.009513,0.011291,0.014942,0.022450", \
				        "0.012027,0.012461,0.013169,0.014654,0.017930,0.024969");
			}
			fall_power(Power_X2) {
				values ("0.004589,0.003873,0.002906,0.000986,-0.002872,-0.010600", \
				        "0.004571,0.003868,0.002895,0.000978,-0.002882,-0.010593", \
				        "0.004571,0.003853,0.002889,0.000985,-0.002871,-0.010585", \
				        "0.004629,0.003894,0.002940,0.001024,-0.002838,-0.010568", \
				        "0.004864,0.004122,0.003141,0.001186,-0.002723,-0.010487", \
				        "0.005651,0.004867,0.003836,0.001787,-0.002228,-0.010125", \
				        "0.007717,0.006839,0.005750,0.003562,-0.000670,-0.008880", \
				        "0.012405,0.011460,0.010250,0.007888,0.003329,-0.005385");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X2) {
				values ("0.001331,0.000597,-0.000371,-0.002301,-0.006154,-0.013880", \
				        "0.001322,0.000612,-0.000352,-0.002273,-0.006120,-0.013849", \
				        "0.001383,0.000659,-0.000295,-0.002234,-0.006096,-0.013813", \
				        "0.001557,0.000805,-0.000170,-0.002126,-0.005998,-0.013768", \
				        "0.002065,0.001245,0.000190,-0.001841,-0.005812,-0.013633", \
				        "0.003304,0.002404,0.001251,-0.000972,-0.005154,-0.013174", \
				        "0.006101,0.005104,0.003833,0.001391,-0.003199,-0.011731", \
				        "0.012058,0.010972,0.009590,0.006887,0.001799,-0.007602");
			}
			rise_power(Power_X2) {
				values ("0.003983,0.004722,0.005698,0.007651,0.011529,0.019293", \
				        "0.003989,0.004719,0.005696,0.007643,0.011532,0.019273", \
				        "0.004047,0.004771,0.005750,0.007667,0.011545,0.019283", \
				        "0.004261,0.004965,0.005916,0.007815,0.011643,0.019339", \
				        "0.004767,0.005461,0.006372,0.008213,0.011973,0.019568", \
				        "0.005948,0.006576,0.007437,0.009195,0.012825,0.020251", \
				        "0.008587,0.009119,0.009835,0.011446,0.014869,0.022047", \
				        "0.014358,0.014716,0.015263,0.016518,0.019502,0.026210");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X2) {
				values ("0.001302,0.000577,-0.000385,-0.002303,-0.006158,-0.013892", \
				        "0.001289,0.000576,-0.000387,-0.002305,-0.006157,-0.013889", \
				        "0.001282,0.000568,-0.000390,-0.002313,-0.006167,-0.013893", \
				        "0.001356,0.000612,-0.000334,-0.002267,-0.006122,-0.013863", \
				        "0.001707,0.000932,-0.000101,-0.002082,-0.006004,-0.013767", \
				        "0.002666,0.001815,0.000699,-0.001446,-0.005549,-0.013481", \
				        "0.004971,0.004024,0.002807,0.000444,-0.004019,-0.012409", \
				        "0.010090,0.009031,0.007679,0.005071,0.000158,-0.009030");
			}
			rise_power(Power_X2) {
				values ("0.005515,0.006244,0.007226,0.009152,0.013041,0.020785", \
				        "0.005530,0.006243,0.007222,0.009163,0.013032,0.020781", \
				        "0.005579,0.006315,0.007260,0.009200,0.013065,0.020800", \
				        "0.005775,0.006493,0.007437,0.009350,0.013164,0.020860", \
				        "0.006311,0.006954,0.007898,0.009747,0.013496,0.021102", \
				        "0.007431,0.008087,0.008970,0.010744,0.014383,0.021821", \
				        "0.009900,0.010518,0.011331,0.013018,0.016466,0.023655", \
				        "0.015194,0.015687,0.016456,0.017980,0.021165,0.027982");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI211_X4
 Cell Description	: Combinational cell (AOI211_X4) with drive strength X4
*******************************************************************************************/

cell (AOI211_X4) {

	area               	: 2.394000;

	cell_leakage_power 	: 36360.826250;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 21948.670000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 15196.030000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 15692.710000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 25669.660000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 48228.370000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 33379.520000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 33760.250000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 43897.560000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 22660.380000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 33377.620000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 33758.340000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 43896.380000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 49454.020000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 49392.550000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 49513.470000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 61947.690000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002160;
		fall_capacitance	: 0.002079;
		rise_capacitance	: 0.002241;
		fall_capacitance_range		(0.001697, 0.002462);
		rise_capacitance_range		(0.001884, 0.002673);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000049,0.000030,0.000018,0.000010,0.000005,0.000001,-0.000003,-0.000010");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000064,0.000040,0.000024,0.000015,0.000009,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "!B & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000106,0.000079,0.000059,0.000044,0.000033,0.000026,0.000019,0.000011");
			}

		}

		internal_power () {

			when      	: "B & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000038,0.000023,0.000014,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "B & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000038,0.000023,0.000014,0.000008,0.000004,-0.000000,-0.000007");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.002189;
		fall_capacitance	: 0.002003;
		rise_capacitance	: 0.002374;
		fall_capacitance_range		(0.001670, 0.002409);
		rise_capacitance_range		(0.001968, 0.002857);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000008,0.000004,0.000001,-0.000000,-0.000003,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000256,0.000205,0.000146,0.000096,0.000063,0.000043,0.000030,0.000017");
			}

		}

		internal_power () {

			when      	: "A & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000005,0.000003,0.000002,-0.000002,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000004,0.000003,0.000001,-0.000002,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000005,0.000003,0.000002,-0.000002,-0.000008");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002306;
		fall_capacitance	: 0.002070;
		rise_capacitance	: 0.002541;
		fall_capacitance_range		(0.001775, 0.002675);
		rise_capacitance_range		(0.002020, 0.003277);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000100,0.000079,0.000062,0.000047,0.000034,0.000025,0.000019,0.000013");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000025,0.000015,0.000009,0.000004,0.000000,-0.000005,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000025,0.000015,0.000008,0.000004,0.000000,-0.000005,-0.000015");
			}

		}

		internal_power () {

			when      	: "A & B & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000018,0.000010,0.000004,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000014,0.000007,0.000003,-0.000000,-0.000003,-0.000008,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000016,0.000008,0.000003,-0.000000,-0.000004,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000017,0.000009,0.000004,0.000000,-0.000003,-0.000009,-0.000019");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002477;
		fall_capacitance	: 0.002204;
		rise_capacitance	: 0.002751;
		fall_capacitance_range		(0.001982, 0.002658);
		rise_capacitance_range		(0.002221, 0.003385);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000010,0.000005,0.000002,-0.000001,-0.000004,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000008,0.000004,0.000001,-0.000001,-0.000004,-0.000008,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000012,0.000007,0.000004,0.000002,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "A & B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000004,0.000002,-0.000000,-0.000003,-0.000008,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000009,0.000004,0.000001,-0.000001,-0.000004,-0.000010,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000113,0.000087,0.000066,0.000049,0.000034,0.000022,0.000012,0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000012,0.000007,0.000004,0.000002,-0.000001,-0.000006,-0.000015");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | B) | A)";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.029461,0.034167,0.039374,0.049441,0.068729,0.105924", \
				        "0.032716,0.037308,0.042576,0.052639,0.071842,0.109016", \
				        "0.039796,0.044202,0.049304,0.059268,0.078396,0.115467", \
				        "0.052288,0.057571,0.063009,0.073217,0.091884,0.128793", \
				        "0.066230,0.073229,0.080625,0.094347,0.117811,0.156478", \
				        "0.079179,0.088649,0.098433,0.116708,0.148368,0.200861", \
				        "0.086937,0.098989,0.112239,0.136222,0.178280,0.248717", \
				        "0.078485,0.095012,0.111916,0.143628,0.199162,0.292396");
			}
			cell_rise(Timing_X4) {
				values ("0.077659,0.089551,0.103017,0.129267,0.181493,0.285510", \
				        "0.081263,0.093065,0.106533,0.132827,0.185099,0.289119", \
				        "0.087620,0.099511,0.112888,0.139093,0.191394,0.295487", \
				        "0.098660,0.110565,0.123848,0.150115,0.202312,0.306473", \
				        "0.114818,0.128132,0.142511,0.169471,0.221751,0.325886", \
				        "0.133301,0.149316,0.166590,0.198442,0.256530,0.362431", \
				        "0.161086,0.180800,0.201843,0.240260,0.308612,0.429784", \
				        "0.217640,0.243227,0.268647,0.315616,0.396879,0.537314");
			}
			fall_transition(Timing_X4) {
				values ("0.020146,0.023909,0.027878,0.035834,0.051533,0.082767", \
				        "0.019891,0.023718,0.027803,0.035769,0.051504,0.082782", \
				        "0.019645,0.023296,0.027491,0.035527,0.051464,0.082751", \
				        "0.025744,0.028663,0.031698,0.037603,0.051604,0.082717", \
				        "0.037196,0.041005,0.044996,0.051685,0.063200,0.086473", \
				        "0.055317,0.060521,0.065899,0.075076,0.090564,0.115676", \
				        "0.086003,0.092862,0.100124,0.112619,0.133454,0.167201", \
				        "0.137999,0.148203,0.158360,0.175779,0.204224,0.249285");
			}
			rise_transition(Timing_X4) {
				values ("0.040486,0.050566,0.062328,0.085275,0.131377,0.223202", \
				        "0.040498,0.050562,0.062207,0.085401,0.131368,0.223163", \
				        "0.040489,0.050546,0.062318,0.085294,0.131367,0.223189", \
				        "0.040706,0.050655,0.062348,0.085372,0.131375,0.223195", \
				        "0.046513,0.055365,0.065595,0.086797,0.131414,0.223203", \
				        "0.060616,0.069668,0.080203,0.100798,0.140524,0.224885", \
				        "0.091112,0.099107,0.109030,0.129256,0.170169,0.250606", \
				        "0.144013,0.151513,0.161028,0.181067,0.222293,0.305481");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & !C1 & C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024233,0.029227,0.034774,0.045271,0.065068,0.102815", \
				        "0.027714,0.032538,0.038072,0.048491,0.068218,0.105890", \
				        "0.035592,0.039971,0.045105,0.055223,0.074790,0.112378", \
				        "0.047114,0.052875,0.058637,0.069409,0.088422,0.125656", \
				        "0.059708,0.067288,0.075176,0.089516,0.114027,0.153502", \
				        "0.070592,0.080807,0.091267,0.110386,0.143290,0.196998", \
				        "0.075035,0.088127,0.102123,0.127282,0.170928,0.243061", \
				        "0.061627,0.078992,0.096876,0.129945,0.187482,0.283264");
			}
			cell_rise(Timing_X4) {
				values ("0.084848,0.098616,0.114193,0.144736,0.205370,0.326105", \
				        "0.088368,0.102095,0.117720,0.148247,0.208953,0.329737", \
				        "0.094739,0.108558,0.123934,0.154495,0.215237,0.336058", \
				        "0.105594,0.119446,0.134820,0.165303,0.226015,0.346879", \
				        "0.121423,0.136415,0.152744,0.183605,0.244299,0.365173", \
				        "0.139247,0.156801,0.175807,0.211082,0.276309,0.397931", \
				        "0.166876,0.187717,0.210053,0.251272,0.325625,0.460234", \
				        "0.224254,0.250915,0.277430,0.326618,0.412589,0.564039");
			}
			fall_transition(Timing_X4) {
				values ("0.018819,0.022804,0.027073,0.035230,0.051080,0.082233", \
				        "0.018068,0.022326,0.026718,0.035065,0.051027,0.082245", \
				        "0.018870,0.022363,0.026437,0.034512,0.050803,0.082195", \
				        "0.026059,0.028914,0.032059,0.037557,0.051006,0.081998", \
				        "0.037877,0.041608,0.045661,0.052267,0.063513,0.086092", \
				        "0.056783,0.061843,0.067017,0.075957,0.091137,0.115883", \
				        "0.089071,0.095672,0.102672,0.114743,0.134825,0.167926", \
				        "0.143865,0.153921,0.163705,0.180478,0.207913,0.251646");
			}
			rise_transition(Timing_X4) {
				values ("0.042237,0.054213,0.068010,0.095124,0.149514,0.257952", \
				        "0.042242,0.054214,0.068023,0.095119,0.149548,0.257959", \
				        "0.042248,0.054187,0.067940,0.095215,0.149521,0.257957", \
				        "0.042426,0.054282,0.068025,0.095218,0.149544,0.257975", \
				        "0.047334,0.057974,0.070385,0.096074,0.149545,0.257965", \
				        "0.059699,0.070744,0.083360,0.107976,0.156168,0.258715", \
				        "0.087566,0.097544,0.109536,0.133895,0.182925,0.279332", \
				        "0.138821,0.148066,0.159441,0.183137,0.231640,0.330089");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & C1 & !C2";
			sdf_cond	   : "(B == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024525,0.029604,0.035160,0.045618,0.065470,0.103290", \
				        "0.028013,0.032901,0.038405,0.048828,0.068608,0.106335", \
				        "0.035865,0.040219,0.045422,0.055546,0.075187,0.112862", \
				        "0.047525,0.053370,0.059252,0.069911,0.088761,0.126116", \
				        "0.060373,0.067988,0.075983,0.090229,0.114567,0.153903", \
				        "0.071750,0.081891,0.092498,0.111457,0.144160,0.197725", \
				        "0.077390,0.090214,0.104136,0.129101,0.172440,0.244313", \
				        "0.066441,0.083295,0.100952,0.133434,0.190386,0.285624");
			}
			cell_rise(Timing_X4) {
				values ("0.101153,0.114819,0.130426,0.161048,0.221885,0.342797", \
				        "0.104691,0.118309,0.133949,0.164606,0.225480,0.346418", \
				        "0.111006,0.124755,0.140260,0.170903,0.231794,0.352779", \
				        "0.121874,0.135674,0.151050,0.181678,0.242534,0.363565", \
				        "0.139195,0.153558,0.169386,0.200030,0.260857,0.381860", \
				        "0.160389,0.176826,0.194999,0.229347,0.293371,0.414595", \
				        "0.192235,0.211458,0.232652,0.272252,0.345022,0.477954", \
				        "0.255254,0.279603,0.304294,0.351165,0.434557,0.583798");
			}
			fall_transition(Timing_X4) {
				values ("0.024637,0.028267,0.032442,0.040507,0.056151,0.087089", \
				        "0.023851,0.027690,0.032062,0.040315,0.056091,0.087091", \
				        "0.024247,0.027478,0.031686,0.039720,0.055875,0.087034", \
				        "0.032272,0.034370,0.036990,0.042637,0.056066,0.086859", \
				        "0.047196,0.049690,0.052945,0.058499,0.068590,0.090904", \
				        "0.070032,0.073618,0.077534,0.084857,0.098231,0.121334", \
				        "0.107580,0.112328,0.117617,0.127358,0.144922,0.175657", \
				        "0.170840,0.177657,0.185264,0.198748,0.222444,0.262680");
			}
			rise_transition(Timing_X4) {
				values ("0.050833,0.062975,0.077071,0.104445,0.159028,0.267827", \
				        "0.050820,0.063007,0.077022,0.104444,0.159038,0.267832", \
				        "0.050824,0.063007,0.077015,0.104463,0.159052,0.267811", \
				        "0.050886,0.063031,0.077030,0.104417,0.159049,0.267841", \
				        "0.054103,0.065253,0.078390,0.104795,0.159036,0.267831", \
				        "0.066083,0.077542,0.090536,0.115358,0.164267,0.268247", \
				        "0.091390,0.102436,0.115270,0.140563,0.190386,0.287187", \
				        "0.139491,0.150488,0.163115,0.188196,0.238120,0.337865");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.026706,0.030995,0.035936,0.045393,0.063909,0.100255", \
				        "0.029985,0.034255,0.039175,0.048646,0.067142,0.103466", \
				        "0.036953,0.041094,0.045890,0.055309,0.073745,0.110007", \
				        "0.047385,0.052850,0.058560,0.068941,0.087275,0.123353", \
				        "0.058301,0.065618,0.073304,0.087446,0.111628,0.151043", \
				        "0.066676,0.076726,0.087103,0.106172,0.138933,0.192857", \
				        "0.066117,0.079595,0.093744,0.119344,0.163669,0.236512", \
				        "0.042074,0.060508,0.079235,0.113856,0.173526,0.271695");
			}
			cell_rise(Timing_X4) {
				values ("0.065429,0.077287,0.090690,0.117011,0.169202,0.273205", \
				        "0.068540,0.080307,0.093619,0.120019,0.172276,0.276309", \
				        "0.074692,0.086617,0.099787,0.126106,0.178445,0.282632", \
				        "0.086525,0.098506,0.111832,0.138271,0.190652,0.294892", \
				        "0.105314,0.119790,0.134934,0.162449,0.215008,0.319298", \
				        "0.131314,0.149447,0.168918,0.203525,0.263964,0.369698", \
				        "0.175860,0.199032,0.222793,0.266144,0.341398,0.467971", \
				        "0.255198,0.284283,0.313739,0.367715,0.461141,0.618890");
			}
			fall_transition(Timing_X4) {
				values ("0.016487,0.020083,0.023990,0.031774,0.047389,0.078633", \
				        "0.016426,0.020051,0.023955,0.031776,0.047425,0.078644", \
				        "0.017145,0.020331,0.024232,0.031714,0.047424,0.078647", \
				        "0.023662,0.026652,0.029650,0.035294,0.048280,0.078668", \
				        "0.034603,0.038520,0.042727,0.049709,0.061348,0.083693", \
				        "0.052476,0.057813,0.063271,0.072626,0.088467,0.113929", \
				        "0.082788,0.090334,0.097840,0.110508,0.131574,0.165443", \
				        "0.135937,0.146517,0.157192,0.175071,0.203939,0.249078");
			}
			rise_transition(Timing_X4) {
				values ("0.040496,0.050585,0.062324,0.085403,0.131392,0.223203", \
				        "0.040485,0.050590,0.062245,0.085359,0.131398,0.223192", \
				        "0.040499,0.050599,0.062349,0.085393,0.131364,0.223187", \
				        "0.041340,0.050831,0.062405,0.085310,0.131395,0.223173", \
				        "0.051522,0.059276,0.068412,0.087892,0.131478,0.223187", \
				        "0.072214,0.080316,0.089985,0.108245,0.143725,0.224844", \
				        "0.103950,0.113068,0.123697,0.144530,0.183950,0.256895", \
				        "0.156098,0.165692,0.177367,0.200830,0.246444,0.330562");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023459,0.028010,0.033076,0.042804,0.061564,0.098098", \
				        "0.026801,0.031254,0.036326,0.046038,0.064759,0.101302", \
				        "0.033959,0.038290,0.043142,0.052698,0.071367,0.107791", \
				        "0.043618,0.049470,0.055293,0.066168,0.084890,0.121135", \
				        "0.053336,0.061122,0.069223,0.083975,0.108779,0.148833", \
				        "0.059815,0.070552,0.081542,0.101253,0.135051,0.189789", \
				        "0.056775,0.070546,0.085471,0.112088,0.157669,0.231931", \
				        "0.027555,0.046849,0.066418,0.102330,0.163812,0.264118");
			}
			cell_rise(Timing_X4) {
				values ("0.072730,0.086486,0.102087,0.132584,0.193193,0.313943", \
				        "0.075846,0.089520,0.104998,0.135552,0.196242,0.317044", \
				        "0.081810,0.095617,0.110961,0.141539,0.202321,0.323260", \
				        "0.092753,0.106673,0.122184,0.152827,0.213672,0.334683", \
				        "0.110257,0.126178,0.143178,0.174474,0.235305,0.356375", \
				        "0.135539,0.154821,0.175503,0.212793,0.279542,0.400977", \
				        "0.180287,0.204390,0.229339,0.274631,0.354167,0.491879", \
				        "0.261668,0.291879,0.322225,0.378219,0.474996,0.639956");
			}
			fall_transition(Timing_X4) {
				values ("0.015995,0.019605,0.023520,0.031240,0.046761,0.077874", \
				        "0.015598,0.019393,0.023350,0.031209,0.046763,0.077878", \
				        "0.016896,0.019893,0.023731,0.031007,0.046735,0.077840", \
				        "0.023764,0.026746,0.029853,0.035204,0.047799,0.077853", \
				        "0.034837,0.038703,0.042811,0.049652,0.061225,0.083188", \
				        "0.053081,0.058285,0.063668,0.072943,0.088437,0.113783", \
				        "0.084352,0.091513,0.098898,0.111394,0.132093,0.165625", \
				        "0.138349,0.148818,0.159474,0.177125,0.205616,0.250149");
			}
			rise_transition(Timing_X4) {
				values ("0.042238,0.054176,0.068001,0.095219,0.149519,0.257965", \
				        "0.042238,0.054202,0.067992,0.095133,0.149543,0.257974", \
				        "0.042251,0.054219,0.067984,0.095145,0.149549,0.257974", \
				        "0.042992,0.054487,0.068003,0.095235,0.149546,0.257972", \
				        "0.051456,0.061248,0.072657,0.097029,0.149576,0.257963", \
				        "0.069598,0.079469,0.091153,0.113686,0.158476,0.258732", \
				        "0.099220,0.109775,0.122033,0.146111,0.192773,0.282704", \
				        "0.148860,0.160050,0.173110,0.199278,0.250298,0.347201");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023716,0.028378,0.033383,0.043102,0.061914,0.098571", \
				        "0.027043,0.031580,0.036612,0.046355,0.065124,0.101794", \
				        "0.034226,0.038517,0.043397,0.052966,0.071729,0.108229", \
				        "0.044003,0.049907,0.055893,0.066647,0.085183,0.121598", \
				        "0.053986,0.061801,0.069991,0.084589,0.109344,0.149242", \
				        "0.060941,0.071632,0.082631,0.102289,0.135864,0.190520", \
				        "0.058631,0.072635,0.087578,0.113859,0.159162,0.233179", \
				        "0.032359,0.051077,0.070458,0.105838,0.166705,0.266502");
			}
			cell_rise(Timing_X4) {
				values ("0.089028,0.102690,0.118282,0.148903,0.209725,0.330612", \
				        "0.092182,0.105772,0.121280,0.151917,0.212779,0.333698", \
				        "0.098212,0.111918,0.127239,0.157945,0.218851,0.339901", \
				        "0.109258,0.123083,0.138594,0.169269,0.230225,0.351359", \
				        "0.129157,0.144028,0.160098,0.190921,0.251906,0.373080", \
				        "0.159103,0.176653,0.196057,0.231645,0.296700,0.417638", \
				        "0.208860,0.230921,0.254325,0.297324,0.374416,0.509646", \
				        "0.297175,0.324973,0.352968,0.406218,0.499497,0.660991");
			}
			fall_transition(Timing_X4) {
				values ("0.020377,0.023928,0.027951,0.035911,0.051537,0.082561", \
				        "0.019968,0.023682,0.027821,0.035861,0.051533,0.082546", \
				        "0.021051,0.024097,0.028044,0.035685,0.051509,0.082548", \
				        "0.029465,0.031763,0.034518,0.039768,0.052564,0.082535", \
				        "0.043884,0.046593,0.049902,0.055793,0.066263,0.087854", \
				        "0.066335,0.070017,0.074134,0.081851,0.095564,0.119260", \
				        "0.103288,0.108626,0.114193,0.124290,0.142318,0.173428", \
				        "0.167063,0.174195,0.182184,0.196217,0.220611,0.261387");
			}
			rise_transition(Timing_X4) {
				values ("0.050813,0.063009,0.077056,0.104376,0.159031,0.267832", \
				        "0.050830,0.063011,0.077018,0.104443,0.159022,0.267836", \
				        "0.050833,0.062981,0.076950,0.104397,0.159023,0.267838", \
				        "0.051000,0.063105,0.077073,0.104423,0.159053,0.267840", \
				        "0.057083,0.067314,0.079725,0.105330,0.159033,0.267832", \
				        "0.074284,0.084745,0.096903,0.119875,0.165949,0.268201", \
				        "0.102922,0.114464,0.127317,0.152045,0.199236,0.289904", \
				        "0.150884,0.163549,0.177677,0.204898,0.256775,0.354278");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.017626,0.022421,0.027829,0.038584,0.059924,0.102414", \
				        "0.020828,0.025531,0.030947,0.041660,0.063004,0.105465", \
				        "0.026156,0.031692,0.037409,0.047969,0.069163,0.111521", \
				        "0.031650,0.039050,0.046512,0.059836,0.081823,0.123928", \
				        "0.035425,0.045391,0.055492,0.073226,0.102762,0.149671", \
				        "0.032800,0.046387,0.060100,0.084147,0.123953,0.187330", \
				        "0.014098,0.032820,0.051468,0.084219,0.138115,0.223548", \
				        "-0.039611,-0.014834,0.010448,0.054420,0.127630,0.243626");
			}
			cell_rise(Timing_X4) {
				values ("0.032139,0.045577,0.061176,0.091935,0.152725,0.273619", \
				        "0.035344,0.048526,0.064055,0.094734,0.155545,0.276494", \
				        "0.043099,0.055264,0.070314,0.100774,0.161353,0.282184", \
				        "0.059125,0.071395,0.084738,0.113917,0.173789,0.293928", \
				        "0.081956,0.097630,0.114066,0.143477,0.200701,0.319163", \
				        "0.116374,0.135458,0.156001,0.193281,0.258267,0.373655", \
				        "0.170115,0.194641,0.219687,0.265841,0.346875,0.484801", \
				        "0.261008,0.291274,0.323115,0.379927,0.479560,0.650736");
			}
			fall_transition(Timing_X4) {
				values ("0.011188,0.015299,0.019867,0.029071,0.047444,0.084293", \
				        "0.011416,0.015258,0.019886,0.029046,0.047484,0.084250", \
				        "0.014644,0.017612,0.021141,0.029192,0.047463,0.084231", \
				        "0.021018,0.024696,0.028461,0.034979,0.049146,0.084212", \
				        "0.032232,0.036578,0.041261,0.049323,0.063258,0.089546", \
				        "0.051761,0.057467,0.063270,0.073351,0.090668,0.119719", \
				        "0.086166,0.093848,0.101634,0.114982,0.137058,0.173311", \
				        "0.147930,0.158409,0.168976,0.187282,0.216990,0.263828");
			}
			rise_transition(Timing_X4) {
				values ("0.038379,0.052405,0.067298,0.095188,0.149520,0.257972", \
				        "0.037314,0.051745,0.067089,0.095156,0.149511,0.257965", \
				        "0.036237,0.049883,0.065897,0.094934,0.149548,0.257975", \
				        "0.039952,0.050968,0.064545,0.093070,0.149477,0.257944", \
				        "0.051147,0.061470,0.073116,0.096097,0.147907,0.257974", \
				        "0.068915,0.080711,0.093634,0.117487,0.161153,0.257935", \
				        "0.099842,0.112873,0.127351,0.154618,0.204645,0.292260", \
				        "0.156356,0.170554,0.186815,0.217303,0.274640,0.378190");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.021797,0.026591,0.032031,0.042795,0.064141,0.106657", \
				        "0.024394,0.029193,0.034654,0.045428,0.066890,0.109467", \
				        "0.028752,0.034040,0.039563,0.050393,0.071921,0.114596", \
				        "0.034483,0.040821,0.047450,0.059536,0.081786,0.124596", \
				        "0.039563,0.048181,0.056812,0.072204,0.098376,0.144075", \
				        "0.039442,0.051530,0.063669,0.084733,0.119298,0.174937", \
				        "0.024512,0.041638,0.058855,0.088532,0.136847,0.211824", \
				        "-0.024668,-0.0001251,0.023828,0.065597,0.133447,0.238457");
			}
			cell_rise(Timing_X4) {
				values ("0.047163,0.060848,0.076385,0.107134,0.167946,0.288883", \
				        "0.050169,0.063745,0.079265,0.109957,0.170790,0.291727", \
				        "0.056936,0.070260,0.085641,0.116116,0.176761,0.297567", \
				        "0.072964,0.084828,0.099460,0.129302,0.189305,0.309505", \
				        "0.100549,0.114783,0.130006,0.158009,0.216391,0.334941", \
				        "0.140780,0.158345,0.177392,0.212554,0.274821,0.389663", \
				        "0.202838,0.225395,0.248576,0.292121,0.369728,0.503446", \
				        "0.308398,0.335553,0.364843,0.417867,0.512495,0.678160");
			}
			fall_transition(Timing_X4) {
				values ("0.011178,0.015285,0.019873,0.029077,0.047488,0.084280", \
				        "0.011219,0.015275,0.019877,0.029094,0.047481,0.084290", \
				        "0.012708,0.016305,0.020374,0.029150,0.047485,0.084289", \
				        "0.016733,0.020114,0.024126,0.031720,0.048294,0.084231", \
				        "0.025005,0.028585,0.032570,0.039938,0.055108,0.086936", \
				        "0.039843,0.044219,0.048853,0.057043,0.072077,0.101738", \
				        "0.065271,0.070954,0.077145,0.087670,0.105528,0.136386", \
				        "0.107666,0.116053,0.124376,0.139148,0.163325,0.201722");
			}
			rise_transition(Timing_X4) {
				values ("0.049348,0.062454,0.076751,0.104443,0.159037,0.267843", \
				        "0.048872,0.062184,0.076672,0.104476,0.159023,0.267828", \
				        "0.047086,0.061137,0.076203,0.104368,0.159027,0.267818", \
				        "0.047362,0.059620,0.074098,0.103557,0.159051,0.267809", \
				        "0.056707,0.067224,0.079014,0.103885,0.157696,0.267847", \
				        "0.073681,0.085963,0.098940,0.123076,0.167783,0.267287", \
				        "0.100007,0.114740,0.130509,0.159118,0.209900,0.298083", \
				        "0.145019,0.162313,0.181067,0.215101,0.276201,0.382269");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & !C2";

			rise_power(Power_X4) {
				values ("0.010623,0.012357,0.014285,0.018200,0.025945,0.041428", \
				        "0.010617,0.012331,0.014272,0.018179,0.025936,0.041439", \
				        "0.010613,0.012316,0.014257,0.018139,0.025908,0.041412", \
				        "0.010557,0.012288,0.014219,0.018127,0.025881,0.041407", \
				        "0.010485,0.012187,0.014162,0.018062,0.025832,0.041354", \
				        "0.010714,0.012394,0.014313,0.018178,0.025910,0.041391", \
				        "0.013533,0.014885,0.016501,0.020006,0.027337,0.042426", \
				        "0.023027,0.023935,0.025061,0.027704,0.033786,0.047550");
			}
			fall_power(Power_X4) {
				values ("0.012410,0.010719,0.008796,0.004978,-0.002696,-0.018118", \
				        "0.012373,0.010682,0.008759,0.004939,-0.002730,-0.018139", \
				        "0.012362,0.010668,0.008761,0.004927,-0.002756,-0.018151", \
				        "0.012433,0.010741,0.008866,0.005010,-0.002698,-0.018133", \
				        "0.012953,0.011219,0.009285,0.005375,-0.002417,-0.017948", \
				        "0.014637,0.012811,0.010760,0.006690,-0.001323,-0.017127", \
				        "0.019176,0.017182,0.014976,0.010607,0.002081,-0.014342", \
				        "0.029673,0.027551,0.025096,0.020364,0.011178,-0.006438");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.009583,0.011295,0.013260,0.017143,0.024889,0.040393", \
				        "0.009577,0.011274,0.013230,0.017129,0.024887,0.040399", \
				        "0.009544,0.011266,0.013218,0.017121,0.024867,0.040384", \
				        "0.009556,0.011227,0.013178,0.017066,0.024819,0.040340", \
				        "0.009424,0.011142,0.013099,0.017012,0.024777,0.040298", \
				        "0.009620,0.011301,0.013216,0.017080,0.024829,0.040338", \
				        "0.012297,0.013632,0.015275,0.018779,0.026115,0.041269", \
				        "0.021529,0.022392,0.023539,0.026148,0.032314,0.046122");
			}
			fall_power(Power_X4) {
				values ("0.012099,0.010414,0.008483,0.004665,-0.002997,-0.018394", \
				        "0.012037,0.010355,0.008440,0.004610,-0.003044,-0.018438", \
				        "0.012018,0.010327,0.008427,0.004600,-0.003076,-0.018478", \
				        "0.012092,0.010417,0.008531,0.004675,-0.003029,-0.018456", \
				        "0.012594,0.010852,0.008913,0.004991,-0.002792,-0.018305", \
				        "0.014205,0.012387,0.010323,0.006227,-0.001771,-0.017544", \
				        "0.018691,0.016676,0.014429,0.010037,0.001515,-0.014928", \
				        "0.028976,0.026798,0.024333,0.019543,0.010304,-0.007308");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.012579,0.014272,0.016242,0.020119,0.027867,0.043374", \
				        "0.012547,0.014269,0.016240,0.020101,0.027871,0.043364", \
				        "0.012531,0.014249,0.016211,0.020096,0.027849,0.043370", \
				        "0.012513,0.014207,0.016160,0.020043,0.027803,0.043330", \
				        "0.012384,0.014143,0.016088,0.019993,0.027762,0.043279", \
				        "0.012577,0.014265,0.016197,0.020076,0.027819,0.043330", \
				        "0.014884,0.016324,0.018041,0.021630,0.029055,0.044231", \
				        "0.023569,0.024605,0.025855,0.028680,0.034993,0.048954");
			}
			fall_power(Power_X4) {
				values ("0.012068,0.010413,0.008485,0.004657,-0.003005,-0.018391", \
				        "0.012046,0.010354,0.008435,0.004607,-0.003053,-0.018420", \
				        "0.012003,0.010332,0.008429,0.004588,-0.003084,-0.018476", \
				        "0.012111,0.010423,0.008508,0.004668,-0.003032,-0.018479", \
				        "0.012573,0.010847,0.008899,0.004981,-0.002803,-0.018276", \
				        "0.014218,0.012389,0.010315,0.006237,-0.001781,-0.017546", \
				        "0.018615,0.016645,0.014429,0.010021,0.001508,-0.014923", \
				        "0.028940,0.026757,0.024319,0.019529,0.010298,-0.007330");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & !C2";

			rise_power(Power_X4) {
				values ("0.009479,0.011177,0.013124,0.017002,0.024756,0.040247", \
				        "0.009383,0.011124,0.013073,0.016973,0.024730,0.040222", \
				        "0.009331,0.011040,0.012996,0.016917,0.024669,0.040188", \
				        "0.009211,0.010938,0.012917,0.016830,0.024631,0.040147", \
				        "0.009276,0.010916,0.012853,0.016774,0.024546,0.040109", \
				        "0.010076,0.011650,0.013532,0.017283,0.024941,0.040311", \
				        "0.013659,0.014938,0.016518,0.019934,0.027117,0.041962", \
				        "0.022519,0.023494,0.024693,0.027408,0.033659,0.047503");
			}
			fall_power(Power_X4) {
				values ("0.009392,0.007689,0.005763,0.001928,-0.005780,-0.021259", \
				        "0.009368,0.007685,0.005764,0.001935,-0.005759,-0.021218", \
				        "0.009396,0.007692,0.005790,0.001953,-0.005756,-0.021193", \
				        "0.009497,0.007820,0.005912,0.002062,-0.005670,-0.021149", \
				        "0.010086,0.008331,0.006371,0.002447,-0.005369,-0.020945", \
				        "0.011808,0.009962,0.007881,0.003778,-0.004289,-0.020116", \
				        "0.016163,0.014191,0.011949,0.007577,-0.000953,-0.017432", \
				        "0.025937,0.023831,0.021418,0.016697,0.007540,-0.010027");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.008420,0.010122,0.012092,0.015980,0.023719,0.039222", \
				        "0.008425,0.010064,0.012044,0.015926,0.023685,0.039186", \
				        "0.008267,0.009993,0.011951,0.015865,0.023633,0.039156", \
				        "0.008187,0.009900,0.011862,0.015778,0.023584,0.039107", \
				        "0.008141,0.009854,0.011807,0.015713,0.023497,0.039056", \
				        "0.008922,0.010493,0.012387,0.016165,0.023798,0.039225", \
				        "0.012287,0.013617,0.015220,0.018618,0.025838,0.040745", \
				        "0.020980,0.021885,0.023072,0.025827,0.032129,0.046023");
			}
			fall_power(Power_X4) {
				values ("0.009119,0.007430,0.005511,0.001665,-0.006033,-0.021505", \
				        "0.009103,0.007411,0.005494,0.001650,-0.006035,-0.021493", \
				        "0.009111,0.007407,0.005525,0.001680,-0.006038,-0.021474", \
				        "0.009204,0.007538,0.005639,0.001777,-0.005963,-0.021426", \
				        "0.009787,0.008003,0.006065,0.002134,-0.005686,-0.021256", \
				        "0.011442,0.009627,0.007528,0.003417,-0.004647,-0.020480", \
				        "0.015762,0.013738,0.011494,0.007081,-0.001433,-0.017884", \
				        "0.025290,0.023111,0.020681,0.015943,0.006784,-0.010753");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.011402,0.013143,0.015084,0.018964,0.026718,0.042205", \
				        "0.011386,0.013069,0.015043,0.018925,0.026676,0.042182", \
				        "0.011296,0.013008,0.014961,0.018863,0.026626,0.042153", \
				        "0.011204,0.012900,0.014878,0.018789,0.026573,0.042107", \
				        "0.011191,0.012857,0.014818,0.018713,0.026512,0.042046", \
				        "0.011818,0.013405,0.015313,0.019108,0.026768,0.042225", \
				        "0.014776,0.016215,0.017908,0.021431,0.028726,0.043705", \
				        "0.023055,0.024073,0.025436,0.028348,0.034855,0.048889");
			}
			fall_power(Power_X4) {
				values ("0.009070,0.007454,0.005522,0.001676,-0.006034,-0.021507", \
				        "0.009086,0.007422,0.005499,0.001661,-0.006026,-0.021493", \
				        "0.009099,0.007408,0.005522,0.001671,-0.006028,-0.021470", \
				        "0.009216,0.007529,0.005620,0.001770,-0.005952,-0.021425", \
				        "0.009764,0.008011,0.006062,0.002113,-0.005695,-0.021244", \
				        "0.011440,0.009591,0.007519,0.003402,-0.004652,-0.020480", \
				        "0.015706,0.013706,0.011484,0.007074,-0.001444,-0.017909", \
				        "0.025196,0.023074,0.020657,0.015909,0.006759,-0.010758");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X4) {
				values ("0.002870,0.001168,-0.000731,-0.004575,-0.012297,-0.027762", \
				        "0.002885,0.001216,-0.000704,-0.004535,-0.012249,-0.027694", \
				        "0.003050,0.001318,-0.000600,-0.004471,-0.012184,-0.027627", \
				        "0.003420,0.001651,-0.000313,-0.004242,-0.012014,-0.027526", \
				        "0.004518,0.002564,0.000446,-0.003638,-0.011599,-0.027252", \
				        "0.007081,0.004951,0.002632,-0.001851,-0.010250,-0.026307", \
				        "0.012765,0.010426,0.007885,0.002919,-0.006301,-0.023430", \
				        "0.024799,0.022231,0.019385,0.013975,0.003764,-0.015112");
			}
			rise_power(Power_X4) {
				values ("0.006610,0.008344,0.010316,0.014214,0.021962,0.037486", \
				        "0.006623,0.008361,0.010303,0.014199,0.021970,0.037496", \
				        "0.006776,0.008460,0.010390,0.014249,0.021997,0.037499", \
				        "0.007226,0.008844,0.010745,0.014534,0.022178,0.037590", \
				        "0.008286,0.009849,0.011665,0.015320,0.022815,0.038051", \
				        "0.010721,0.012110,0.013794,0.017300,0.024556,0.039413", \
				        "0.016092,0.017182,0.018650,0.021825,0.028636,0.043009", \
				        "0.027791,0.028522,0.029563,0.032030,0.037962,0.051341");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X4) {
				values ("0.002821,0.001157,-0.000760,-0.004576,-0.012314,-0.027776", \
				        "0.002769,0.001149,-0.000781,-0.004608,-0.012327,-0.027788", \
				        "0.002759,0.001103,-0.000795,-0.004631,-0.012343,-0.027819", \
				        "0.002948,0.001217,-0.000710,-0.004567,-0.012268,-0.027723", \
				        "0.003686,0.001829,-0.000219,-0.004212,-0.012035,-0.027557", \
				        "0.005679,0.003651,0.001422,-0.002898,-0.011129,-0.026987", \
				        "0.010385,0.008133,0.005672,0.000931,-0.008039,-0.024835", \
				        "0.020811,0.018273,0.015537,0.010256,0.000341,-0.018066");
			}
			rise_power(Power_X4) {
				values ("0.009534,0.011233,0.013174,0.017070,0.024803,0.040293", \
				        "0.009539,0.011222,0.013166,0.017054,0.024810,0.040310", \
				        "0.009649,0.011349,0.013267,0.017131,0.024836,0.040344", \
				        "0.010093,0.011705,0.013613,0.017405,0.025053,0.040474", \
				        "0.011163,0.012715,0.014547,0.018228,0.025739,0.040952", \
				        "0.013438,0.014955,0.016683,0.020247,0.027505,0.042386", \
				        "0.018466,0.019844,0.021458,0.024788,0.031715,0.046049", \
				        "0.029119,0.030295,0.031759,0.034770,0.041164,0.054695");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI21_X1
 Cell Description	: Combinational cell (AOI21_X1) with drive strength X1
*******************************************************************************************/

cell (AOI21_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 7169.836375;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 3037.538000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 3429.729000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 3216.344000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 7770.029000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 9352.026000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 7770.445000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 11096.040000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 11686.540000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000506;
		fall_capacitance	: 0.000490;
		rise_capacitance	: 0.000522;
		fall_capacitance_range		(0.000412, 0.000564);
		rise_capacitance_range		(0.000442, 0.000617);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000011,0.000008,0.000005,0.000004,0.000002,0.000000");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000636;
		fall_capacitance	: 0.000605;
		rise_capacitance	: 0.000667;
		fall_capacitance_range		(0.000526, 0.000722);
		rise_capacitance_range		(0.000567, 0.000824);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000010,0.000008,0.000007,0.000005,0.000004,0.000003,0.000002");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000542;
		fall_capacitance	: 0.000500;
		rise_capacitance	: 0.000585;
		fall_capacitance_range		(0.000435, 0.000583);
		rise_capacitance_range		(0.000490, 0.000708);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000012,0.000009,0.000007,0.000005,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(A | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029036,0.031559,0.036709,0.046795,0.066421,0.104915", \
				        "0.032310,0.034813,0.039860,0.049932,0.069701,0.108161", \
				        "0.039261,0.041736,0.046640,0.056641,0.076239,0.114669", \
				        "0.050912,0.054013,0.059858,0.070490,0.089926,0.128125", \
				        "0.063351,0.067648,0.075595,0.090184,0.115310,0.155933", \
				        "0.074407,0.080087,0.090837,0.110416,0.144368,0.199934", \
				        "0.078526,0.086018,0.100331,0.126440,0.171728,0.246762", \
				        "0.063062,0.073405,0.092412,0.127100,0.187440,0.287481");
			}
			cell_rise(Timing_X1) {
				values ("0.058186,0.063467,0.074030,0.094814,0.136178,0.218707", \
				        "0.062034,0.067285,0.077809,0.098591,0.140073,0.222573", \
				        "0.069383,0.074670,0.085177,0.105960,0.147415,0.230020", \
				        "0.083070,0.088467,0.099011,0.119886,0.161461,0.244121", \
				        "0.103822,0.110799,0.123564,0.146576,0.188461,0.271164", \
				        "0.131040,0.140277,0.157032,0.186977,0.238699,0.325956", \
				        "0.174530,0.185517,0.207179,0.245582,0.311997,0.422054", \
				        "0.246529,0.261770,0.288813,0.338078,0.422487,0.562586");
			}
			fall_transition(Timing_X1) {
				values ("0.019596,0.021800,0.026095,0.034272,0.050678,0.083514", \
				        "0.019484,0.021722,0.026069,0.034307,0.050709,0.083465", \
				        "0.019823,0.021811,0.026096,0.034174,0.050668,0.083522", \
				        "0.026449,0.028193,0.031379,0.037253,0.051249,0.083452", \
				        "0.038318,0.040562,0.044866,0.051900,0.063825,0.087709", \
				        "0.057216,0.060211,0.065729,0.075415,0.091595,0.117598", \
				        "0.088854,0.093006,0.100563,0.113562,0.135173,0.170361", \
				        "0.143779,0.149609,0.160015,0.178028,0.207455,0.254107");
			}
			rise_transition(Timing_X1) {
				values ("0.034330,0.039056,0.048532,0.067125,0.104397,0.178591", \
				        "0.034325,0.039060,0.048514,0.067214,0.104393,0.178624", \
				        "0.034349,0.039063,0.048640,0.067094,0.104356,0.178635", \
				        "0.035516,0.039797,0.048835,0.067250,0.104338,0.178614", \
				        "0.046159,0.049891,0.057262,0.071666,0.105039,0.178622", \
				        "0.066105,0.070204,0.078382,0.093461,0.122085,0.183212", \
				        "0.097503,0.102053,0.111407,0.129058,0.162177,0.222429", \
				        "0.148185,0.153340,0.163764,0.184378,0.223632,0.294961");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025689,0.028347,0.033737,0.044144,0.064158,0.102950", \
				        "0.029071,0.031685,0.036936,0.047303,0.067352,0.106126", \
				        "0.036435,0.038926,0.043872,0.054047,0.073884,0.112604", \
				        "0.047361,0.050724,0.056767,0.067978,0.087613,0.126046", \
				        "0.058801,0.063314,0.071712,0.086903,0.112569,0.153882", \
				        "0.068074,0.074074,0.085376,0.105812,0.140601,0.197166", \
				        "0.069076,0.077108,0.092098,0.119263,0.165984,0.242395", \
				        "0.048673,0.059389,0.079239,0.115240,0.177385,0.279736");
			}
			cell_rise(Timing_X1) {
				values ("0.069295,0.076090,0.089593,0.116258,0.169454,0.275518", \
				        "0.073107,0.079854,0.093275,0.120027,0.173294,0.279412", \
				        "0.080212,0.087014,0.100459,0.127173,0.180460,0.286608", \
				        "0.092640,0.099515,0.113125,0.139879,0.193268,0.299519", \
				        "0.112310,0.120325,0.135406,0.163132,0.216433,0.322727", \
				        "0.139068,0.149056,0.167576,0.201253,0.261427,0.369156", \
				        "0.183055,0.195061,0.218056,0.259261,0.331991,0.457793", \
				        "0.258485,0.274384,0.302817,0.354558,0.444003,0.595640");
			}
			fall_transition(Timing_X1) {
				values ("0.019021,0.021242,0.025686,0.033918,0.050339,0.082938", \
				        "0.018616,0.020984,0.025552,0.033852,0.050305,0.082929", \
				        "0.019464,0.021403,0.025465,0.033563,0.050235,0.082956", \
				        "0.026707,0.028432,0.031849,0.037187,0.050898,0.082880", \
				        "0.038816,0.041019,0.045155,0.052167,0.063906,0.087313", \
				        "0.058361,0.061254,0.066710,0.076008,0.091914,0.117683", \
				        "0.091164,0.095188,0.102483,0.115090,0.136278,0.170821", \
				        "0.148137,0.153778,0.164079,0.181598,0.210292,0.256034");
			}
			rise_transition(Timing_X1) {
				values ("0.040882,0.047003,0.059270,0.083628,0.132174,0.229263", \
				        "0.040871,0.047019,0.059333,0.083629,0.132173,0.229268", \
				        "0.040892,0.046971,0.059233,0.083526,0.132191,0.229273", \
				        "0.041445,0.047260,0.059439,0.083620,0.132191,0.229275", \
				        "0.049748,0.054768,0.064930,0.086021,0.132282,0.229266", \
				        "0.067016,0.072310,0.082995,0.103456,0.143177,0.230939", \
				        "0.096052,0.101547,0.113003,0.135005,0.177806,0.259486", \
				        "0.144332,0.150437,0.162815,0.186979,0.233800,0.323004");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025985,0.028698,0.034092,0.044522,0.064569,0.103357", \
				        "0.029344,0.032072,0.037272,0.047797,0.067792,0.106612", \
				        "0.036690,0.039176,0.044219,0.054412,0.074327,0.113061", \
				        "0.047753,0.051139,0.057398,0.068469,0.087991,0.126532", \
				        "0.059441,0.064032,0.072527,0.087649,0.113151,0.154299", \
				        "0.069178,0.075242,0.086662,0.106882,0.141529,0.197921", \
				        "0.071134,0.079204,0.094201,0.121158,0.167525,0.243713", \
				        "0.053628,0.063820,0.083486,0.118856,0.180424,0.282253");
			}
			cell_rise(Timing_X1) {
				values ("0.086989,0.093797,0.107388,0.134253,0.187741,0.294124", \
				        "0.090828,0.097624,0.111150,0.138106,0.191596,0.298031", \
				        "0.097982,0.104807,0.118277,0.145267,0.198791,0.305239", \
				        "0.110420,0.117334,0.130970,0.158001,0.211596,0.318125", \
				        "0.132558,0.140000,0.154200,0.181221,0.234787,0.341372", \
				        "0.164406,0.173577,0.190633,0.222590,0.280806,0.387728", \
				        "0.214757,0.225311,0.246632,0.285255,0.355292,0.478280", \
				        "0.298266,0.312470,0.338518,0.386790,0.472422,0.619975");
			}
			fall_transition(Timing_X1) {
				values ("0.024358,0.026650,0.031281,0.039939,0.056885,0.089796", \
				        "0.023938,0.026412,0.031014,0.039832,0.056838,0.089799", \
				        "0.024506,0.026550,0.030915,0.039473,0.056769,0.089790", \
				        "0.033134,0.034409,0.037204,0.042913,0.057398,0.089747", \
				        "0.050171,0.051392,0.054345,0.060212,0.070712,0.094161", \
				        "0.075520,0.077336,0.080931,0.088305,0.101944,0.125462", \
				        "0.116042,0.118662,0.123737,0.133117,0.150726,0.181864", \
				        "0.184471,0.188157,0.195019,0.207924,0.231211,0.271841");
			}
			rise_transition(Timing_X1) {
				values ("0.051118,0.057356,0.069905,0.094276,0.143150,0.240623", \
				        "0.051098,0.057351,0.069896,0.094349,0.143132,0.240627", \
				        "0.051107,0.057322,0.069889,0.094286,0.143159,0.240656", \
				        "0.051185,0.057370,0.069797,0.094293,0.143132,0.240648", \
				        "0.056521,0.061760,0.072832,0.095370,0.143148,0.240656", \
				        "0.073231,0.078828,0.089835,0.110700,0.151453,0.241568", \
				        "0.101323,0.107376,0.119328,0.142000,0.185442,0.267441", \
				        "0.148545,0.154999,0.168417,0.193540,0.241353,0.331371");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.020853,0.023597,0.029113,0.040095,0.061941,0.105389", \
				        "0.023967,0.026662,0.032202,0.043175,0.064938,0.108428", \
				        "0.029903,0.032956,0.038501,0.049337,0.071083,0.114422", \
				        "0.036492,0.040586,0.048022,0.061299,0.083682,0.126816", \
				        "0.041691,0.047199,0.057320,0.075285,0.105112,0.152461", \
				        "0.041169,0.048730,0.062415,0.086552,0.126783,0.190983", \
				        "0.025724,0.035872,0.054477,0.087153,0.141389,0.227850", \
				        "-0.024204,-0.010445,0.014413,0.058226,0.131490,0.248376");
			}
			cell_rise(Timing_X1) {
				values ("0.041828,0.048649,0.062257,0.089038,0.142382,0.248549", \
				        "0.044972,0.051805,0.065285,0.092143,0.145429,0.251627", \
				        "0.051989,0.058669,0.072016,0.098643,0.151723,0.257830", \
				        "0.067795,0.074160,0.086787,0.112774,0.165343,0.270927", \
				        "0.091899,0.100322,0.115784,0.143187,0.194265,0.298559", \
				        "0.127547,0.137766,0.157408,0.192791,0.253713,0.357393", \
				        "0.183280,0.196304,0.220535,0.264912,0.342256,0.471888", \
				        "0.275690,0.292302,0.322907,0.378003,0.474195,0.637969");
			}
			fall_transition(Timing_X1) {
				values ("0.014601,0.017114,0.021943,0.031216,0.050122,0.087547", \
				        "0.014556,0.017008,0.021747,0.031353,0.050124,0.087554", \
				        "0.017292,0.019077,0.023028,0.031392,0.050137,0.087543", \
				        "0.024357,0.026397,0.030445,0.036828,0.051432,0.087553", \
				        "0.036350,0.038774,0.043468,0.051584,0.065489,0.092417", \
				        "0.057023,0.060175,0.065894,0.075876,0.093383,0.122563", \
				        "0.093077,0.097160,0.104769,0.117943,0.140079,0.176920", \
				        "0.157219,0.162748,0.173019,0.190974,0.220453,0.267696");
			}
			rise_transition(Timing_X1) {
				values ("0.040584,0.046931,0.059392,0.083641,0.132149,0.229259", \
				        "0.040327,0.046774,0.059363,0.083672,0.132190,0.229273", \
				        "0.039357,0.045978,0.059044,0.083681,0.132192,0.229268", \
				        "0.042276,0.047595,0.058903,0.083035,0.132189,0.229274", \
				        "0.054377,0.059465,0.069215,0.088161,0.132000,0.229268", \
				        "0.073611,0.079710,0.091538,0.112581,0.149469,0.231575", \
				        "0.105442,0.112782,0.126397,0.151851,0.197437,0.273721", \
				        "0.163840,0.171456,0.187165,0.216275,0.270417,0.365838");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025489,0.028248,0.033816,0.044727,0.066525,0.110034", \
				        "0.028337,0.031074,0.036587,0.047500,0.069337,0.112842", \
				        "0.033299,0.036242,0.041906,0.052795,0.074556,0.118099", \
				        "0.040165,0.043637,0.050180,0.062403,0.084812,0.128363", \
				        "0.047023,0.051705,0.060233,0.075558,0.101899,0.148157", \
				        "0.049334,0.056054,0.068013,0.088951,0.123727,0.179932", \
				        "0.038212,0.047450,0.064463,0.093979,0.142382,0.218069", \
				        "-0.005713,0.007668,0.031266,0.072683,0.140495,0.246172");
			}
			cell_rise(Timing_X1) {
				values ("0.058949,0.065727,0.079297,0.106240,0.159725,0.266118", \
				        "0.062010,0.068847,0.082353,0.109209,0.162762,0.269171", \
				        "0.068866,0.075597,0.089086,0.115842,0.169126,0.275439", \
				        "0.083674,0.090238,0.103477,0.129927,0.182763,0.288624", \
				        "0.112826,0.120282,0.134254,0.159931,0.211706,0.316352", \
				        "0.155129,0.164226,0.182258,0.215089,0.272730,0.375250", \
				        "0.219243,0.231495,0.253592,0.295070,0.368556,0.493289", \
				        "0.326938,0.341744,0.369527,0.420550,0.511318,0.668888");
			}
			fall_transition(Timing_X1) {
				values ("0.014548,0.017031,0.021834,0.031197,0.050122,0.087550", \
				        "0.014549,0.016984,0.021807,0.031334,0.050052,0.087472", \
				        "0.015613,0.017834,0.022361,0.031343,0.050122,0.087548", \
				        "0.019740,0.021841,0.026071,0.033842,0.050761,0.087567", \
				        "0.028464,0.030529,0.034727,0.042251,0.057569,0.089855", \
				        "0.044324,0.046736,0.051352,0.059568,0.074729,0.104791", \
				        "0.071751,0.074690,0.080606,0.090742,0.108568,0.139827", \
				        "0.117340,0.121640,0.129632,0.143743,0.167471,0.205858");
			}
			rise_transition(Timing_X1) {
				values ("0.051050,0.057311,0.069865,0.094346,0.143132,0.240640", \
				        "0.051027,0.057282,0.069820,0.094319,0.143134,0.240650", \
				        "0.050801,0.057141,0.069808,0.094374,0.143160,0.240656", \
				        "0.050622,0.056634,0.069063,0.094138,0.143125,0.240646", \
				        "0.060449,0.065347,0.075214,0.096323,0.142762,0.240629", \
				        "0.080093,0.086105,0.097742,0.118641,0.156265,0.241743", \
				        "0.109071,0.116876,0.131401,0.157841,0.203505,0.279643", \
				        "0.156966,0.165994,0.184122,0.216380,0.273724,0.371074");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002536,0.002786,0.003273,0.004242,0.006181,0.010060", \
				        "0.002527,0.002776,0.003261,0.004230,0.006179,0.010062", \
				        "0.002513,0.002751,0.003241,0.004214,0.006157,0.010032", \
				        "0.002492,0.002732,0.003219,0.004196,0.006149,0.010029", \
				        "0.002470,0.002724,0.003209,0.004183,0.006130,0.010024", \
				        "0.002663,0.002895,0.003355,0.004294,0.006210,0.010064", \
				        "0.003446,0.003638,0.004044,0.004893,0.006693,0.010430", \
				        "0.005560,0.005708,0.006007,0.006692,0.008250,0.011701");
			}
			fall_power(Power_X1) {
				values ("0.002295,0.002059,0.001578,0.000624,-0.001307,-0.005168", \
				        "0.002292,0.002051,0.001570,0.000616,-0.001313,-0.005173", \
				        "0.002294,0.002053,0.001571,0.000613,-0.001311,-0.005170", \
				        "0.002322,0.002080,0.001600,0.000639,-0.001297,-0.005163", \
				        "0.002439,0.002196,0.001710,0.000724,-0.001232,-0.005122", \
				        "0.002838,0.002568,0.002050,0.001026,-0.000986,-0.004940", \
				        "0.003847,0.003557,0.003001,0.001902,-0.000228,-0.004341", \
				        "0.006173,0.005867,0.005253,0.004058,0.001761,-0.002628");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X1) {
				values ("0.002218,0.002466,0.002954,0.003928,0.005860,0.009740", \
				        "0.002218,0.002457,0.002943,0.003919,0.005860,0.009735", \
				        "0.002195,0.002436,0.002920,0.003899,0.005843,0.009709", \
				        "0.002155,0.002408,0.002899,0.003881,0.005827,0.009712", \
				        "0.002151,0.002398,0.002888,0.003861,0.005807,0.009695", \
				        "0.002303,0.002534,0.003004,0.003955,0.005868,0.009724", \
				        "0.003033,0.003227,0.003636,0.004493,0.006317,0.010057", \
				        "0.005056,0.005188,0.005495,0.006182,0.007759,0.011246");
			}
			fall_power(Power_X1) {
				values ("0.002240,0.001998,0.001515,0.000560,-0.001364,-0.005224", \
				        "0.002232,0.001992,0.001503,0.000552,-0.001375,-0.005231", \
				        "0.002230,0.001986,0.001501,0.000548,-0.001376,-0.005230", \
				        "0.002251,0.002013,0.001529,0.000567,-0.001367,-0.005228", \
				        "0.002367,0.002118,0.001629,0.000646,-0.001310,-0.005193", \
				        "0.002736,0.002472,0.001953,0.000927,-0.001082,-0.005028", \
				        "0.003714,0.003428,0.002861,0.001764,-0.000364,-0.004467", \
				        "0.005954,0.005639,0.005030,0.003829,0.001532,-0.002850");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X1) {
				values ("0.003210,0.003453,0.003953,0.004918,0.006857,0.010730", \
				        "0.003189,0.003444,0.003940,0.004913,0.006848,0.010732", \
				        "0.003185,0.003430,0.003916,0.004891,0.006828,0.010698", \
				        "0.003168,0.003410,0.003891,0.004870,0.006816,0.010695", \
				        "0.003147,0.003387,0.003883,0.004855,0.006802,0.010681", \
				        "0.003258,0.003504,0.003977,0.004939,0.006857,0.010720", \
				        "0.003902,0.004113,0.004549,0.005431,0.007271,0.011036", \
				        "0.005786,0.005949,0.006295,0.007032,0.008663,0.012186");
			}
			fall_power(Power_X1) {
				values ("0.002242,0.002000,0.001523,0.000566,-0.001360,-0.005220", \
				        "0.002232,0.001989,0.001511,0.000553,-0.001373,-0.005230", \
				        "0.002229,0.001988,0.001507,0.000548,-0.001373,-0.005231", \
				        "0.002250,0.002009,0.001531,0.000564,-0.001362,-0.005229", \
				        "0.002365,0.002118,0.001625,0.000643,-0.001309,-0.005189", \
				        "0.002732,0.002471,0.001952,0.000927,-0.001082,-0.005031", \
				        "0.003697,0.003418,0.002857,0.001761,-0.000366,-0.004470", \
				        "0.005943,0.005626,0.005014,0.003821,0.001526,-0.002852");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X1) {
				values ("0.000628,0.000388,-0.000102,-0.001057,-0.002995,-0.006854", \
				        "0.000631,0.000394,-0.000094,-0.001055,-0.002985,-0.006849", \
				        "0.000650,0.000407,-0.000074,-0.001037,-0.002969,-0.006832", \
				        "0.000716,0.000470,-0.000020,-0.001001,-0.002942,-0.006822", \
				        "0.000923,0.000661,0.000138,-0.000876,-0.002857,-0.006770", \
				        "0.001489,0.001189,0.000615,-0.000488,-0.002567,-0.006565", \
				        "0.002798,0.002464,0.001820,0.000597,-0.001687,-0.005928", \
				        "0.005640,0.005264,0.004548,0.003187,0.000625,-0.004060");
			}
			rise_power(Power_X1) {
				values ("0.001896,0.002135,0.002618,0.003594,0.005532,0.009408", \
				        "0.001879,0.002129,0.002619,0.003594,0.005532,0.009409", \
				        "0.001911,0.002158,0.002640,0.003602,0.005536,0.009410", \
				        "0.002004,0.002240,0.002713,0.003659,0.005567,0.009438", \
				        "0.002240,0.002458,0.002920,0.003843,0.005720,0.009534", \
				        "0.002776,0.002986,0.003414,0.004299,0.006128,0.009850", \
				        "0.004015,0.004193,0.004558,0.005356,0.007072,0.010673", \
				        "0.006769,0.006898,0.007160,0.007788,0.009286,0.012644");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X1) {
				values ("0.000623,0.000383,-0.000102,-0.001066,-0.002998,-0.006862", \
				        "0.000620,0.000382,-0.000107,-0.001069,-0.002997,-0.006861", \
				        "0.000616,0.000375,-0.000111,-0.001077,-0.003006,-0.006875", \
				        "0.000623,0.000386,-0.000096,-0.001064,-0.002998,-0.006871", \
				        "0.000744,0.000481,-0.000017,-0.000998,-0.002946,-0.006828", \
				        "0.001147,0.000864,0.000321,-0.000743,-0.002773,-0.006716", \
				        "0.002191,0.001876,0.001265,0.000091,-0.002121,-0.006277", \
				        "0.004589,0.004245,0.003552,0.002235,-0.000228,-0.004800");
			}
			rise_power(Power_X1) {
				values ("0.002871,0.003101,0.003576,0.004545,0.006480,0.010356", \
				        "0.002864,0.003098,0.003582,0.004546,0.006476,0.010356", \
				        "0.002877,0.003116,0.003598,0.004561,0.006494,0.010366", \
				        "0.002958,0.003192,0.003667,0.004622,0.006541,0.010392", \
				        "0.003167,0.003404,0.003870,0.004797,0.006680,0.010500", \
				        "0.003708,0.003913,0.004356,0.005254,0.007092,0.010819", \
				        "0.004841,0.005050,0.005470,0.006313,0.008057,0.011662", \
				        "0.007345,0.007518,0.007893,0.008661,0.010275,0.013690");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI21_X2
 Cell Description	: Combinational cell (AOI21_X2) with drive strength X2
*******************************************************************************************/

cell (AOI21_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 15009.783500;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 6406.893000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 7245.347000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 6778.898000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 16288.130000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 19563.870000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 16289.010000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 23043.370000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 24462.750000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000927;
		fall_capacitance	: 0.000894;
		rise_capacitance	: 0.000959;
		fall_capacitance_range		(0.000773, 0.001063);
		rise_capacitance_range		(0.000813, 0.001149);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000044,0.000031,0.000022,0.000016,0.000011,0.000008,0.000003");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001024;
		fall_capacitance	: 0.000957;
		rise_capacitance	: 0.001090;
		fall_capacitance_range		(0.000814, 0.001223);
		rise_capacitance_range		(0.000882, 0.001389);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000009,0.000005,0.000003,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000011,0.000009,0.000007,0.000005");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001013;
		fall_capacitance	: 0.000920;
		rise_capacitance	: 0.001106;
		fall_capacitance_range		(0.000833, 0.001131);
		rise_capacitance_range		(0.000917, 0.001347);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000040,0.000031,0.000023,0.000017,0.000013,0.000009,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(A | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023068,0.026807,0.031762,0.041418,0.060193,0.097022", \
				        "0.026346,0.030055,0.034989,0.044645,0.063420,0.100242", \
				        "0.033334,0.037065,0.041760,0.051359,0.070035,0.106750", \
				        "0.042530,0.047586,0.053649,0.064777,0.083645,0.120141", \
				        "0.051718,0.058564,0.066774,0.081806,0.107209,0.147924", \
				        "0.058187,0.067446,0.078583,0.098651,0.132952,0.188652", \
				        "0.056485,0.068461,0.083331,0.110043,0.155909,0.230857", \
				        "0.032974,0.049212,0.068818,0.104418,0.165362,0.265226");
			}
			cell_rise(Timing_X2) {
				values ("0.046045,0.053819,0.064149,0.084438,0.124835,0.205397", \
				        "0.049837,0.057554,0.067893,0.088164,0.128600,0.209205", \
				        "0.057032,0.064830,0.074916,0.095267,0.135812,0.216447", \
				        "0.069929,0.078282,0.088725,0.109114,0.149594,0.230293", \
				        "0.087096,0.098233,0.111502,0.135149,0.176687,0.257398", \
				        "0.111045,0.125485,0.142823,0.173415,0.225586,0.312494", \
				        "0.151821,0.169602,0.191590,0.230637,0.297174,0.406745", \
				        "0.219467,0.243352,0.271140,0.321210,0.405838,0.545233");
			}
			fall_transition(Timing_X2) {
				values ("0.014787,0.017967,0.021995,0.029826,0.045597,0.077209", \
				        "0.014556,0.017808,0.021893,0.029785,0.045608,0.077223", \
				        "0.016157,0.018692,0.022302,0.029743,0.045577,0.077222", \
				        "0.022930,0.025639,0.028805,0.034271,0.046920,0.077191", \
				        "0.033603,0.037166,0.041509,0.048741,0.060807,0.082873", \
				        "0.050994,0.055773,0.061507,0.071398,0.087651,0.113672", \
				        "0.080591,0.087201,0.095101,0.108364,0.130117,0.165013", \
				        "0.132372,0.141854,0.152949,0.171386,0.201005,0.247267");
			}
			rise_transition(Timing_X2) {
				values ("0.025778,0.032708,0.042111,0.060262,0.096473,0.168991", \
				        "0.025789,0.032694,0.041991,0.060260,0.096523,0.168993", \
				        "0.025834,0.032686,0.042150,0.060251,0.096423,0.168953", \
				        "0.028768,0.034472,0.042797,0.060324,0.096495,0.168985", \
				        "0.039874,0.045468,0.052994,0.066613,0.097893,0.168992", \
				        "0.058350,0.064499,0.072787,0.088061,0.116536,0.174903", \
				        "0.087210,0.094085,0.103560,0.121481,0.154792,0.214850", \
				        "0.135583,0.143055,0.153624,0.174387,0.213733,0.284887");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020190,0.024148,0.029298,0.039193,0.058233,0.095302", \
				        "0.023663,0.027442,0.032547,0.042441,0.061453,0.098466", \
				        "0.030668,0.034628,0.039492,0.049200,0.068041,0.104918", \
				        "0.039124,0.044532,0.050905,0.062431,0.081689,0.118342", \
				        "0.047170,0.054481,0.063206,0.078721,0.104835,0.146117", \
				        "0.051977,0.061630,0.073353,0.094312,0.129474,0.186082", \
				        "0.047070,0.059764,0.075317,0.103176,0.150310,0.226722", \
				        "0.018415,0.035366,0.055919,0.092766,0.155531,0.257673");
			}
			cell_rise(Timing_X2) {
				values ("0.054186,0.064159,0.077346,0.103395,0.155307,0.258893", \
				        "0.057938,0.067811,0.080973,0.107078,0.159056,0.262651", \
				        "0.064726,0.074757,0.087830,0.113885,0.165915,0.269607", \
				        "0.076546,0.086798,0.100143,0.126176,0.178252,0.281992", \
				        "0.093031,0.105636,0.121045,0.149173,0.201311,0.305025", \
				        "0.116811,0.132497,0.151410,0.185467,0.245646,0.351789", \
				        "0.158751,0.177528,0.201004,0.242630,0.315126,0.439649", \
				        "0.229782,0.254599,0.283886,0.336348,0.425824,0.576080");
			}
			fall_transition(Timing_X2) {
				values ("0.014152,0.017363,0.021528,0.029413,0.045158,0.076651", \
				        "0.013786,0.017115,0.021293,0.029358,0.045155,0.076640", \
				        "0.016206,0.018542,0.022118,0.029412,0.045097,0.076647", \
				        "0.023181,0.025831,0.029122,0.034269,0.046575,0.076582", \
				        "0.034099,0.037561,0.041943,0.049037,0.060918,0.082589", \
				        "0.052134,0.056773,0.062458,0.071929,0.087957,0.113673", \
				        "0.082794,0.089325,0.097017,0.109902,0.131108,0.165419", \
				        "0.136652,0.145943,0.156866,0.174922,0.203848,0.249189");
			}
			rise_transition(Timing_X2) {
				values ("0.030322,0.039282,0.051311,0.075061,0.122467,0.217290", \
				        "0.030323,0.039289,0.051333,0.074994,0.122438,0.217288", \
				        "0.030356,0.039277,0.051393,0.075040,0.122476,0.217262", \
				        "0.032187,0.040234,0.051618,0.075035,0.122426,0.217293", \
				        "0.041409,0.048962,0.059001,0.078787,0.122825,0.217278", \
				        "0.057694,0.065585,0.076315,0.096556,0.135668,0.219827", \
				        "0.084794,0.093077,0.104447,0.126459,0.169015,0.249773", \
				        "0.130895,0.139879,0.152291,0.176507,0.223037,0.311324");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020456,0.024484,0.029607,0.039534,0.058612,0.095753", \
				        "0.023923,0.027707,0.032942,0.042743,0.061798,0.098859", \
				        "0.030959,0.034963,0.039762,0.049469,0.068385,0.105396", \
				        "0.039561,0.045010,0.051469,0.062920,0.082012,0.118777", \
				        "0.047865,0.055216,0.064040,0.079475,0.105381,0.146559", \
				        "0.053180,0.062861,0.074693,0.095374,0.130421,0.186829", \
				        "0.049364,0.062001,0.077615,0.105056,0.151903,0.228033", \
				        "0.023758,0.040116,0.060397,0.096497,0.158581,0.260167");
			}
			cell_rise(Timing_X2) {
				values ("0.067958,0.078002,0.091241,0.117461,0.169612,0.273428", \
				        "0.071726,0.081676,0.094910,0.121171,0.173342,0.277200", \
				        "0.078552,0.088616,0.101743,0.127974,0.180239,0.284154", \
				        "0.090603,0.100709,0.114074,0.140355,0.192605,0.296562", \
				        "0.110275,0.121893,0.136425,0.163422,0.215612,0.319580", \
				        "0.138430,0.152709,0.170300,0.202669,0.261113,0.366240", \
				        "0.185538,0.202376,0.224202,0.263486,0.333629,0.455813", \
				        "0.263939,0.286150,0.313014,0.362403,0.448414,0.595335");
			}
			fall_transition(Timing_X2) {
				values ("0.018302,0.021592,0.025856,0.034206,0.050265,0.081739", \
				        "0.017861,0.021241,0.025692,0.034113,0.050244,0.081731", \
				        "0.019971,0.022472,0.026178,0.034039,0.050185,0.081717", \
				        "0.029448,0.031381,0.034120,0.039000,0.051650,0.081694", \
				        "0.044441,0.046701,0.049937,0.055873,0.066421,0.087677", \
				        "0.067314,0.070350,0.074351,0.081931,0.095906,0.119695", \
				        "0.104840,0.109013,0.114488,0.124421,0.142519,0.174005", \
				        "0.169062,0.174953,0.182515,0.196262,0.220454,0.261528");
			}
			rise_transition(Timing_X2) {
				values ("0.038209,0.047352,0.059524,0.083456,0.131029,0.226226", \
				        "0.038213,0.047349,0.059502,0.083440,0.131070,0.226243", \
				        "0.038200,0.047345,0.059515,0.083405,0.131077,0.226241", \
				        "0.038760,0.047492,0.059577,0.083439,0.131077,0.226237", \
				        "0.046544,0.054300,0.064614,0.085650,0.131097,0.226247", \
				        "0.062130,0.070536,0.081553,0.102280,0.141839,0.227995", \
				        "0.088315,0.097433,0.109412,0.131975,0.175066,0.256130", \
				        "0.132948,0.143074,0.156449,0.181649,0.229041,0.317950");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.016732,0.020837,0.026203,0.036967,0.058235,0.100709", \
				        "0.019889,0.023847,0.029297,0.039982,0.061265,0.103693", \
				        "0.024716,0.029684,0.035539,0.046205,0.067408,0.109714", \
				        "0.029283,0.035966,0.043820,0.057468,0.079944,0.122027", \
				        "0.031762,0.040775,0.051390,0.069777,0.100090,0.147669", \
				        "0.027578,0.039746,0.054157,0.078988,0.119815,0.184274", \
				        "0.006939,0.023574,0.043014,0.076654,0.131688,0.218454", \
				        "-0.049124,-0.027301,-0.001305,0.043638,0.117948,0.235236");
			}
			cell_rise(Timing_X2) {
				values ("0.032408,0.042458,0.055759,0.081964,0.133963,0.237647", \
				        "0.035564,0.045546,0.058723,0.084979,0.137006,0.240712", \
				        "0.042882,0.052489,0.065502,0.091454,0.143251,0.246896", \
				        "0.057552,0.067875,0.080390,0.105593,0.156783,0.259840", \
				        "0.078295,0.091597,0.107647,0.135790,0.185914,0.287536", \
				        "0.110257,0.126476,0.146635,0.182715,0.244181,0.346602", \
				        "0.161173,0.182067,0.206971,0.251898,0.329590,0.459080", \
				        "0.248260,0.274222,0.305841,0.361802,0.458439,0.621387");
			}
			fall_transition(Timing_X2) {
				values ("0.010728,0.014282,0.018892,0.028040,0.046492,0.083197", \
				        "0.011100,0.014420,0.018887,0.028044,0.046463,0.083219", \
				        "0.014603,0.017280,0.020871,0.028442,0.046454,0.083223", \
				        "0.021084,0.024221,0.028367,0.034820,0.048409,0.083250", \
				        "0.032341,0.036157,0.040917,0.049117,0.063016,0.089048", \
				        "0.051761,0.056711,0.062788,0.072983,0.090515,0.119639", \
				        "0.085865,0.092566,0.100546,0.114056,0.136439,0.173128", \
				        "0.147391,0.156439,0.167128,0.185664,0.215617,0.262940");
			}
			rise_transition(Timing_X2) {
				values ("0.029974,0.039253,0.051357,0.075082,0.122468,0.217274", \
				        "0.029618,0.039063,0.051366,0.075091,0.122482,0.217278", \
				        "0.029351,0.038386,0.051107,0.075055,0.122475,0.217276", \
				        "0.034572,0.041599,0.051925,0.074672,0.122469,0.217263", \
				        "0.045673,0.053630,0.063704,0.081495,0.122989,0.217266", \
				        "0.063067,0.072580,0.084614,0.105972,0.142503,0.220719", \
				        "0.093641,0.104379,0.118118,0.143685,0.189303,0.265358", \
				        "0.150258,0.162062,0.177654,0.206792,0.260530,0.355211");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020190,0.024289,0.029744,0.040396,0.061728,0.104186", \
				        "0.022885,0.026966,0.032335,0.043100,0.064391,0.106915", \
				        "0.027194,0.031725,0.037373,0.048056,0.069407,0.111989", \
				        "0.032475,0.038079,0.044872,0.057152,0.079368,0.122103", \
				        "0.036550,0.044271,0.053331,0.069028,0.095684,0.141534", \
				        "0.034925,0.045790,0.058465,0.080204,0.115677,0.171904", \
				        "0.018127,0.033352,0.051295,0.081918,0.131267,0.207392", \
				        "-0.033532,-0.011782,0.012984,0.055840,0.124950,0.231256");
			}
			cell_rise(Timing_X2) {
				values ("0.045610,0.055608,0.068876,0.095154,0.147292,0.251101", \
				        "0.048725,0.058708,0.071914,0.098165,0.150294,0.254124", \
				        "0.055635,0.065545,0.078670,0.104702,0.156677,0.260394", \
				        "0.071246,0.080524,0.093265,0.118869,0.170298,0.273496", \
				        "0.096506,0.108458,0.123085,0.149310,0.199485,0.301335", \
				        "0.134022,0.148781,0.167389,0.201134,0.259685,0.360559", \
				        "0.193317,0.212224,0.234982,0.277187,0.351324,0.476531", \
				        "0.294956,0.318116,0.346848,0.398687,0.490093,0.647393");
			}
			fall_transition(Timing_X2) {
				values ("0.010722,0.014305,0.018930,0.028045,0.046468,0.083239", \
				        "0.010844,0.014301,0.018892,0.028065,0.046469,0.083200", \
				        "0.012500,0.015564,0.019640,0.028250,0.046431,0.083197", \
				        "0.016782,0.019722,0.023699,0.031154,0.047425,0.083248", \
				        "0.025198,0.028291,0.032264,0.039756,0.054615,0.086012", \
				        "0.040190,0.043903,0.048676,0.056990,0.071907,0.101369", \
				        "0.065558,0.070513,0.076674,0.087258,0.105269,0.136246", \
				        "0.107956,0.115128,0.123648,0.138566,0.162780,0.201397");
			}
			rise_transition(Timing_X2) {
				values ("0.038168,0.047327,0.059523,0.083381,0.131078,0.226218", \
				        "0.038105,0.047307,0.059549,0.083460,0.131019,0.226246", \
				        "0.037565,0.047098,0.059483,0.083479,0.131053,0.226236", \
				        "0.039683,0.047730,0.059258,0.083304,0.131067,0.226216", \
				        "0.050567,0.058350,0.067979,0.087360,0.131065,0.226233", \
				        "0.067630,0.077401,0.089425,0.110749,0.147429,0.228497", \
				        "0.093762,0.106003,0.120928,0.147713,0.193849,0.269679", \
				        "0.139020,0.153473,0.171766,0.204252,0.261574,0.358638");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !B2";

			rise_power(Power_X2) {
				values ("0.004282,0.005028,0.006004,0.007948,0.011831,0.019591", \
				        "0.004268,0.004980,0.005972,0.007910,0.011808,0.019554", \
				        "0.004232,0.004949,0.005933,0.007893,0.011780,0.019537", \
				        "0.004175,0.004923,0.005906,0.007865,0.011757,0.019521", \
				        "0.004216,0.004954,0.005921,0.007867,0.011746,0.019517", \
				        "0.004769,0.005419,0.006332,0.008184,0.011985,0.019674", \
				        "0.006660,0.007193,0.007955,0.009600,0.013134,0.020529", \
				        "0.011356,0.011699,0.012224,0.013504,0.016496,0.023330");
			}
			fall_power(Power_X2) {
				values ("0.003728,0.002999,0.002038,0.000125,-0.003736,-0.011474", \
				        "0.003716,0.002990,0.002030,0.000114,-0.003742,-0.011481", \
				        "0.003719,0.002990,0.002041,0.000122,-0.003737,-0.011470", \
				        "0.003796,0.003072,0.002106,0.000186,-0.003702,-0.011440", \
				        "0.004097,0.003341,0.002355,0.000381,-0.003547,-0.011345", \
				        "0.004993,0.004190,0.003133,0.001057,-0.003003,-0.010940", \
				        "0.007240,0.006357,0.005214,0.002974,-0.001341,-0.009629", \
				        "0.012208,0.011256,0.010011,0.007583,0.002911,-0.005969");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X2) {
				values ("0.003711,0.004458,0.005423,0.007362,0.011240,0.018986", \
				        "0.003681,0.004417,0.005395,0.007342,0.011221,0.018977", \
				        "0.003646,0.004378,0.005358,0.007303,0.011193,0.018951", \
				        "0.003592,0.004339,0.005320,0.007284,0.011175,0.018945", \
				        "0.003615,0.004350,0.005327,0.007272,0.011154,0.018923", \
				        "0.004104,0.004763,0.005683,0.007552,0.011362,0.019043", \
				        "0.005901,0.006414,0.007186,0.008856,0.012423,0.019841", \
				        "0.010368,0.010717,0.011253,0.012552,0.015580,0.022457");
			}
			fall_power(Power_X2) {
				values ("0.003627,0.002908,0.001936,0.000015,-0.003845,-0.011573", \
				        "0.003611,0.002886,0.001922,-0.000003,-0.003856,-0.011577", \
				        "0.003603,0.002884,0.001934,0.000008,-0.003854,-0.011565", \
				        "0.003677,0.002952,0.001996,0.000065,-0.003818,-0.011554", \
				        "0.003959,0.003203,0.002213,0.000240,-0.003682,-0.011468", \
				        "0.004828,0.004019,0.002955,0.000879,-0.003165,-0.011109", \
				        "0.006990,0.006101,0.004951,0.002710,-0.001600,-0.009877", \
				        "0.011783,0.010813,0.009567,0.007122,0.002457,-0.006402");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X2) {
				values ("0.005277,0.006036,0.007008,0.008943,0.012820,0.020569", \
				        "0.005273,0.006008,0.006985,0.008925,0.012795,0.020554", \
				        "0.005242,0.005977,0.006939,0.008882,0.012783,0.020537", \
				        "0.005191,0.005923,0.006917,0.008867,0.012760,0.020517", \
				        "0.005194,0.005931,0.006914,0.008850,0.012737,0.020501", \
				        "0.005616,0.006295,0.007217,0.009103,0.012925,0.020613", \
				        "0.007222,0.007785,0.008603,0.010317,0.013921,0.021392", \
				        "0.011448,0.011865,0.012469,0.013868,0.017017,0.023971");
			}
			fall_power(Power_X2) {
				values ("0.003626,0.002907,0.001941,0.000013,-0.003845,-0.011574", \
				        "0.003611,0.002888,0.001925,-0.000005,-0.003858,-0.011573", \
				        "0.003611,0.002889,0.001926,0.000002,-0.003855,-0.011567", \
				        "0.003676,0.002943,0.001981,0.000054,-0.003816,-0.011555", \
				        "0.003958,0.003204,0.002210,0.000232,-0.003688,-0.011464", \
				        "0.004820,0.004010,0.002951,0.000876,-0.003178,-0.011107", \
				        "0.006976,0.006091,0.004938,0.002703,-0.001608,-0.009878", \
				        "0.011723,0.010788,0.009540,0.007117,0.002443,-0.006400");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X2) {
				values ("0.001042,0.000320,-0.000646,-0.002571,-0.006433,-0.014163", \
				        "0.001050,0.000333,-0.000634,-0.002555,-0.006417,-0.014153", \
				        "0.001097,0.000367,-0.000590,-0.002527,-0.006397,-0.014123", \
				        "0.001256,0.000498,-0.000481,-0.002437,-0.006332,-0.014086", \
				        "0.001753,0.000923,-0.000137,-0.002179,-0.006143,-0.013975", \
				        "0.003002,0.002074,0.000895,-0.001334,-0.005534,-0.013551", \
				        "0.005805,0.004764,0.003453,0.000963,-0.003668,-0.012201", \
				        "0.011751,0.010603,0.009155,0.006374,0.001192,-0.008274");
			}
			rise_power(Power_X2) {
				values ("0.003058,0.003796,0.004777,0.006729,0.010615,0.018374", \
				        "0.003059,0.003800,0.004781,0.006715,0.010607,0.018365", \
				        "0.003123,0.003852,0.004818,0.006747,0.010618,0.018363", \
				        "0.003341,0.004029,0.004973,0.006867,0.010698,0.018410", \
				        "0.003847,0.004513,0.005412,0.007248,0.011002,0.018622", \
				        "0.005031,0.005622,0.006459,0.008207,0.011834,0.019277", \
				        "0.007727,0.008180,0.008874,0.010436,0.013824,0.021004", \
				        "0.013565,0.013865,0.014342,0.015538,0.018422,0.025086");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X2) {
				values ("0.001033,0.000311,-0.000653,-0.002564,-0.006442,-0.014169", \
				        "0.001018,0.000304,-0.000657,-0.002583,-0.006442,-0.014175", \
				        "0.001007,0.000293,-0.000675,-0.002592,-0.006459,-0.014190", \
				        "0.001075,0.000335,-0.000631,-0.002560,-0.006427,-0.014171", \
				        "0.001384,0.000593,-0.000428,-0.002413,-0.006325,-0.014095", \
				        "0.002325,0.001456,0.000320,-0.001825,-0.005924,-0.013842", \
				        "0.004638,0.003661,0.002393,-0.000002,-0.004494,-0.012878", \
				        "0.009744,0.008646,0.007230,0.004540,-0.000482,-0.009719");
			}
			rise_power(Power_X2) {
				values ("0.004612,0.005319,0.006292,0.008238,0.012112,0.019863", \
				        "0.004605,0.005320,0.006296,0.008230,0.012108,0.019862", \
				        "0.004651,0.005371,0.006346,0.008263,0.012129,0.019865", \
				        "0.004837,0.005557,0.006494,0.008387,0.012213,0.019925", \
				        "0.005335,0.006016,0.006923,0.008769,0.012530,0.020155", \
				        "0.006469,0.007102,0.007962,0.009738,0.013377,0.020827", \
				        "0.008905,0.009508,0.010306,0.011960,0.015416,0.022603", \
				        "0.014143,0.014641,0.015392,0.016879,0.020056,0.026819");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI21_X4
 Cell Description	: Combinational cell (AOI21_X4) with drive strength X4
*******************************************************************************************/

cell (AOI21_X4) {

	area               	: 1.862000;

	cell_leakage_power 	: 30293.712500;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 13061.100000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 14853.600000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 13805.160000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 32939.110000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 39374.940000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 32940.800000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 46086.720000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 49288.270000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001763;
		fall_capacitance	: 0.001686;
		rise_capacitance	: 0.001839;
		fall_capacitance_range		(0.001414, 0.002058);
		rise_capacitance_range		(0.001577, 0.002220);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000133,0.000098,0.000069,0.000048,0.000035,0.000026,0.000018,0.000009");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002176;
		fall_capacitance	: 0.002037;
		rise_capacitance	: 0.002315;
		fall_capacitance_range		(0.001723, 0.002591);
		rise_capacitance_range		(0.001927, 0.002896);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000010,0.000005,0.000002,-0.000001,-0.000004,-0.000009,-0.000018");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000017,0.000010,0.000006,0.000002,-0.000001,-0.000006,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000054,0.000042,0.000032,0.000025,0.000020,0.000016,0.000012");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002018;
		fall_capacitance	: 0.001841;
		rise_capacitance	: 0.002196;
		fall_capacitance_range		(0.001614, 0.002271);
		rise_capacitance_range		(0.001807, 0.002678);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000012,0.000007,0.000004,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000010,0.000005,0.000002,-0.000001,-0.000004,-0.000009,-0.000018");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000102,0.000074,0.000054,0.000038,0.000026,0.000018,0.000010,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(A | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.021455,0.025844,0.030761,0.040226,0.058688,0.094914", \
				        "0.024774,0.029043,0.033990,0.043449,0.061870,0.098087", \
				        "0.031633,0.036053,0.040841,0.050172,0.068481,0.104563", \
				        "0.040058,0.046116,0.052188,0.063315,0.082108,0.117989", \
				        "0.048363,0.056395,0.064681,0.079733,0.105183,0.145716", \
				        "0.053422,0.064344,0.075500,0.095700,0.129884,0.185435", \
				        "0.049591,0.063788,0.078809,0.105636,0.151380,0.226073", \
				        "0.022922,0.042238,0.061903,0.097558,0.158407,0.257949");
			}
			cell_rise(Timing_X4) {
				values ("0.043155,0.052282,0.062682,0.082995,0.123429,0.204014", \
				        "0.046952,0.056013,0.066389,0.086739,0.127215,0.207880", \
				        "0.054066,0.063265,0.073371,0.093824,0.134342,0.215065", \
				        "0.066600,0.076628,0.087051,0.107438,0.148042,0.228809", \
				        "0.082887,0.096079,0.109566,0.133430,0.175144,0.255929", \
				        "0.105766,0.122953,0.140581,0.171440,0.223890,0.311076", \
				        "0.146093,0.167317,0.189483,0.228743,0.295458,0.405239", \
				        "0.213117,0.241400,0.269475,0.319762,0.404601,0.544116");
			}
			fall_transition(Timing_X4) {
				values ("0.013461,0.017042,0.020935,0.028702,0.044286,0.075460", \
				        "0.013230,0.016896,0.020850,0.028683,0.044269,0.075445", \
				        "0.015265,0.017968,0.021582,0.028652,0.044271,0.075466", \
				        "0.021806,0.025007,0.028372,0.033705,0.045841,0.075438", \
				        "0.032087,0.036288,0.040635,0.047994,0.060010,0.081609", \
				        "0.048915,0.054713,0.060506,0.070302,0.086611,0.112486", \
				        "0.077940,0.085794,0.093712,0.106984,0.128744,0.163373", \
				        "0.128568,0.139922,0.151158,0.169719,0.199288,0.245317");
			}
			rise_transition(Timing_X4) {
				values ("0.023496,0.031566,0.040931,0.059037,0.095370,0.167827", \
				        "0.023506,0.031581,0.040916,0.059118,0.095387,0.167867", \
				        "0.023583,0.031579,0.040769,0.059053,0.095303,0.167850", \
				        "0.027143,0.033573,0.041872,0.059164,0.095379,0.167867", \
				        "0.038150,0.044628,0.052083,0.065729,0.096781,0.167860", \
				        "0.056281,0.063420,0.071802,0.087055,0.115708,0.173960", \
				        "0.084635,0.092684,0.102111,0.120125,0.153590,0.213848", \
				        "0.132845,0.141283,0.151806,0.172606,0.211990,0.283312");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018635,0.023242,0.028344,0.038077,0.056795,0.093233", \
				        "0.022160,0.026581,0.031624,0.041305,0.059972,0.096379", \
				        "0.028903,0.033626,0.038628,0.048043,0.066585,0.102874", \
				        "0.036636,0.043060,0.049576,0.061112,0.080215,0.116243", \
				        "0.043676,0.052323,0.061200,0.076745,0.102727,0.143908", \
				        "0.046895,0.058594,0.070372,0.091258,0.126472,0.182843", \
				        "0.040050,0.055022,0.070849,0.098657,0.145865,0.221951", \
				        "0.008155,0.028348,0.048896,0.085925,0.148635,0.250422");
			}
			cell_rise(Timing_X4) {
				values ("0.050480,0.062161,0.075467,0.101537,0.153471,0.257107", \
				        "0.054205,0.065825,0.079111,0.105237,0.157231,0.260920", \
				        "0.060955,0.072682,0.085718,0.111897,0.164019,0.267749", \
				        "0.072585,0.084700,0.097964,0.124070,0.176149,0.279989", \
				        "0.088212,0.103106,0.118732,0.147056,0.199287,0.303083", \
				        "0.111059,0.129683,0.148839,0.183150,0.243579,0.349904", \
				        "0.152496,0.174991,0.198526,0.240472,0.313135,0.437832", \
				        "0.222928,0.252632,0.282000,0.334818,0.424366,0.574748");
			}
			fall_transition(Timing_X4) {
				values ("0.012782,0.016510,0.020471,0.028310,0.043848,0.074884", \
				        "0.012518,0.016169,0.020288,0.028248,0.043841,0.074875", \
				        "0.015395,0.017914,0.021255,0.028292,0.043770,0.074912", \
				        "0.022047,0.025193,0.028508,0.033677,0.045465,0.074844", \
				        "0.032600,0.036719,0.041107,0.048245,0.060075,0.081331", \
				        "0.050094,0.055664,0.061339,0.070927,0.086864,0.112513", \
				        "0.080190,0.087951,0.095644,0.108577,0.129747,0.163883", \
				        "0.132949,0.144101,0.155131,0.173271,0.202171,0.247243");
			}
			rise_transition(Timing_X4) {
				values ("0.027318,0.037814,0.049927,0.073623,0.121022,0.215906", \
				        "0.027322,0.037794,0.049943,0.073604,0.121041,0.215871", \
				        "0.027360,0.037806,0.049839,0.073541,0.121012,0.215900", \
				        "0.029767,0.038895,0.050253,0.073620,0.121032,0.215863", \
				        "0.038971,0.047839,0.057938,0.077576,0.121407,0.215864", \
				        "0.055090,0.064265,0.075016,0.095383,0.134570,0.218534", \
				        "0.081788,0.091531,0.102875,0.124987,0.167604,0.248561", \
				        "0.127708,0.138071,0.150461,0.174694,0.221303,0.309740");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018907,0.023568,0.028629,0.038368,0.057149,0.093691", \
				        "0.022372,0.026872,0.031940,0.041595,0.060310,0.096825", \
				        "0.029208,0.033984,0.038891,0.048295,0.066933,0.103351", \
				        "0.037085,0.043597,0.050150,0.061540,0.080517,0.116687", \
				        "0.044399,0.053097,0.061941,0.077448,0.103313,0.144375", \
				        "0.048191,0.059792,0.071639,0.092368,0.127387,0.183610", \
				        "0.042481,0.057325,0.073032,0.100627,0.147446,0.223281", \
				        "0.013784,0.033277,0.053360,0.089737,0.151750,0.252945");
			}
			cell_rise(Timing_X4) {
				values ("0.064528,0.076304,0.089612,0.115876,0.168079,0.271962", \
				        "0.068262,0.079969,0.093248,0.119578,0.171835,0.275769", \
				        "0.075077,0.086829,0.099940,0.126289,0.178610,0.282633", \
				        "0.087034,0.098846,0.112214,0.138491,0.190754,0.294872", \
				        "0.106148,0.119798,0.134462,0.161634,0.213865,0.317922", \
				        "0.133558,0.150427,0.168153,0.200710,0.259377,0.364651", \
				        "0.180373,0.200454,0.222271,0.261735,0.331996,0.454327", \
				        "0.258489,0.284930,0.311777,0.361422,0.447378,0.594382");
			}
			fall_transition(Timing_X4) {
				values ("0.017053,0.020745,0.024884,0.033022,0.048777,0.079780", \
				        "0.016651,0.020377,0.024716,0.032966,0.048761,0.079770", \
				        "0.019321,0.021961,0.025576,0.032928,0.048705,0.079765", \
				        "0.028643,0.030836,0.033541,0.038239,0.050411,0.079733", \
				        "0.043037,0.045625,0.049011,0.054938,0.065477,0.086219", \
				        "0.065457,0.069009,0.073054,0.080714,0.094557,0.118369", \
				        "0.102499,0.107371,0.112740,0.122712,0.140805,0.172205", \
				        "0.165909,0.172757,0.180441,0.194176,0.218326,0.259224");
			}
			rise_transition(Timing_X4) {
				values ("0.035038,0.045717,0.058063,0.081913,0.129596,0.224861", \
				        "0.035039,0.045726,0.057935,0.081867,0.129601,0.224872", \
				        "0.035050,0.045687,0.058007,0.081928,0.129598,0.224882", \
				        "0.035787,0.045941,0.058045,0.081870,0.129548,0.224876", \
				        "0.043789,0.053027,0.063241,0.084277,0.129630,0.224883", \
				        "0.059092,0.068978,0.080138,0.100991,0.140630,0.226679", \
				        "0.084740,0.095501,0.107622,0.130320,0.173589,0.254942", \
				        "0.128587,0.140818,0.154257,0.179553,0.227137,0.316338");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.014996,0.019829,0.025184,0.035877,0.057170,0.099584", \
				        "0.018204,0.022869,0.028271,0.038943,0.060220,0.102569", \
				        "0.022524,0.028497,0.034529,0.045155,0.066368,0.108562", \
				        "0.026480,0.034515,0.042493,0.056372,0.078904,0.120921", \
				        "0.028062,0.038920,0.049632,0.068313,0.098832,0.146593", \
				        "0.022582,0.037333,0.051945,0.077123,0.118219,0.182916", \
				        "0.0003214,0.020380,0.040118,0.074192,0.129611,0.216736", \
				        "-0.057720,-0.031506,-0.005128,0.040336,0.115207,0.232971");
			}
			cell_rise(Timing_X4) {
				values ("0.029157,0.040927,0.054254,0.080471,0.132566,0.236293", \
				        "0.032366,0.044007,0.057211,0.083497,0.135519,0.239323", \
				        "0.039872,0.050938,0.064004,0.089951,0.141846,0.245505", \
				        "0.053799,0.066223,0.078891,0.104047,0.155312,0.258439", \
				        "0.073510,0.089386,0.105702,0.134169,0.184425,0.286095", \
				        "0.103978,0.123614,0.144088,0.180540,0.242442,0.345156", \
				        "0.153760,0.178395,0.203706,0.249063,0.327297,0.457344", \
				        "0.238437,0.269566,0.301649,0.358197,0.455509,0.619097");
			}
			fall_transition(Timing_X4) {
				values ("0.009415,0.013559,0.018095,0.027241,0.045681,0.082402", \
				        "0.010003,0.013594,0.018082,0.027243,0.045644,0.082489", \
				        "0.013544,0.016783,0.020019,0.027745,0.045664,0.082443", \
				        "0.019836,0.023578,0.027497,0.034155,0.047690,0.082510", \
				        "0.030737,0.035347,0.040225,0.048428,0.062363,0.088465", \
				        "0.049634,0.055662,0.061811,0.072142,0.089813,0.119028", \
				        "0.083035,0.091183,0.099324,0.113036,0.135519,0.172390", \
				        "0.143725,0.154510,0.165469,0.184237,0.214445,0.261988");
			}
			rise_transition(Timing_X4) {
				values ("0.026906,0.037727,0.049960,0.073542,0.121041,0.215881", \
				        "0.026437,0.037628,0.049919,0.073634,0.121035,0.215904", \
				        "0.026610,0.036934,0.049586,0.073627,0.121035,0.215883", \
				        "0.032423,0.040443,0.050753,0.073105,0.121020,0.215907", \
				        "0.042898,0.052481,0.062611,0.080349,0.121691,0.215878", \
				        "0.059962,0.071165,0.083290,0.104864,0.141566,0.219519", \
				        "0.089747,0.102711,0.116591,0.142269,0.188117,0.264412", \
				        "0.146322,0.160162,0.175855,0.205126,0.259085,0.354060");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019378,0.024154,0.029541,0.040250,0.061572,0.104002", \
				        "0.022010,0.026795,0.032193,0.042938,0.064294,0.106794", \
				        "0.026014,0.031428,0.037049,0.047861,0.069273,0.111882", \
				        "0.030682,0.037472,0.044388,0.056705,0.079115,0.121872", \
				        "0.033764,0.043176,0.052445,0.068409,0.095192,0.141193", \
				        "0.030589,0.043830,0.056824,0.078961,0.114792,0.171290", \
				        "0.011526,0.030239,0.048586,0.079783,0.129699,0.206297", \
				        "-0.042846,-0.016504,0.008908,0.052449,0.122353,0.229395");
			}
			cell_rise(Timing_X4) {
				values ("0.042630,0.054377,0.067690,0.093988,0.146192,0.250086", \
				        "0.045760,0.057479,0.070738,0.096995,0.149211,0.253111", \
				        "0.052768,0.064301,0.077444,0.103575,0.155633,0.259427", \
				        "0.068331,0.079364,0.092100,0.117740,0.169204,0.272483", \
				        "0.092883,0.107020,0.121761,0.148205,0.198419,0.300308", \
				        "0.129185,0.146922,0.165712,0.199660,0.258500,0.359551", \
				        "0.187962,0.209771,0.232842,0.275326,0.349776,0.475374", \
				        "0.287454,0.315094,0.344034,0.396291,0.488151,0.645911");
			}
			fall_transition(Timing_X4) {
				values ("0.009392,0.013543,0.018089,0.027292,0.045687,0.082495", \
				        "0.009570,0.013555,0.018063,0.027281,0.045619,0.082448", \
				        "0.011320,0.014828,0.018816,0.027424,0.045678,0.082491", \
				        "0.015508,0.018933,0.022720,0.030364,0.046644,0.082501", \
				        "0.023781,0.027438,0.031342,0.038880,0.053774,0.085292", \
				        "0.038481,0.042943,0.047732,0.056027,0.071035,0.100640", \
				        "0.063427,0.069358,0.075595,0.086324,0.104405,0.135435", \
				        "0.105198,0.113651,0.122241,0.137339,0.161742,0.200453");
			}
			rise_transition(Timing_X4) {
				values ("0.034978,0.045717,0.057960,0.081940,0.129603,0.224880", \
				        "0.034915,0.045684,0.057948,0.081947,0.129578,0.224866", \
				        "0.034296,0.045463,0.057783,0.081933,0.129599,0.224852", \
				        "0.036959,0.046309,0.057782,0.081780,0.129602,0.224849", \
				        "0.047649,0.057005,0.066748,0.086058,0.129629,0.224880", \
				        "0.063926,0.075669,0.087851,0.109464,0.146260,0.227233", \
				        "0.088983,0.103583,0.118796,0.145983,0.192493,0.268630", \
				        "0.132597,0.150126,0.168760,0.201749,0.259696,0.357301");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !B2";

			rise_power(Power_X4) {
				values ("0.007784,0.009488,0.011458,0.015349,0.023097,0.038600", \
				        "0.007721,0.009421,0.011385,0.015300,0.023071,0.038557", \
				        "0.007645,0.009366,0.011322,0.015239,0.023018,0.038545", \
				        "0.007573,0.009290,0.011248,0.015167,0.022965,0.038487", \
				        "0.007715,0.009369,0.011305,0.015186,0.022960,0.038477", \
				        "0.008880,0.010351,0.012168,0.015869,0.023449,0.038786", \
				        "0.012849,0.014030,0.015510,0.018776,0.025822,0.040592", \
				        "0.022415,0.023177,0.024220,0.026719,0.032699,0.046275");
			}
			fall_power(Power_X4) {
				values ("0.007446,0.005766,0.003835,-0.000020,-0.007739,-0.023199", \
				        "0.007411,0.005734,0.003819,-0.000033,-0.007733,-0.023197", \
				        "0.007439,0.005746,0.003845,-0.000012,-0.007719,-0.023168", \
				        "0.007596,0.005905,0.004006,0.000124,-0.007632,-0.023124", \
				        "0.008240,0.006464,0.004489,0.000537,-0.007323,-0.022920", \
				        "0.010095,0.008204,0.006091,0.001924,-0.006206,-0.022098", \
				        "0.014696,0.012629,0.010322,0.005836,-0.002823,-0.019421", \
				        "0.024812,0.022576,0.020061,0.015191,0.005827,-0.011987");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X4) {
				values ("0.006822,0.008533,0.010510,0.014380,0.022153,0.037643", \
				        "0.006758,0.008476,0.010442,0.014342,0.022105,0.037608", \
				        "0.006716,0.008411,0.010374,0.014284,0.022057,0.037561", \
				        "0.006611,0.008323,0.010303,0.014205,0.021995,0.037539", \
				        "0.006659,0.008374,0.010320,0.014211,0.021977,0.037509", \
				        "0.007738,0.009267,0.011078,0.014807,0.022401,0.037757", \
				        "0.011515,0.012715,0.014215,0.017494,0.024585,0.039426", \
				        "0.020681,0.021464,0.022513,0.025032,0.031083,0.044767");
			}
			fall_power(Power_X4) {
				values ("0.007249,0.005559,0.003628,-0.000221,-0.007930,-0.023395", \
				        "0.007217,0.005530,0.003604,-0.000244,-0.007939,-0.023401", \
				        "0.007238,0.005522,0.003639,-0.000223,-0.007944,-0.023399", \
				        "0.007358,0.005662,0.003763,-0.000112,-0.007863,-0.023348", \
				        "0.007973,0.006194,0.004230,0.000260,-0.007590,-0.023176", \
				        "0.009756,0.007869,0.005596,0.001575,-0.006543,-0.022414", \
				        "0.014210,0.012118,0.009821,0.005307,-0.003340,-0.019914", \
				        "0.023949,0.021691,0.019170,0.014284,0.004915,-0.012849");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X4) {
				values ("0.009945,0.011664,0.013603,0.017494,0.025247,0.040743", \
				        "0.009891,0.011598,0.013547,0.017441,0.025206,0.040715", \
				        "0.009834,0.011525,0.013474,0.017394,0.025173,0.040686", \
				        "0.009755,0.011439,0.013430,0.017333,0.025106,0.040650", \
				        "0.009785,0.011473,0.013426,0.017325,0.025086,0.040634", \
				        "0.010609,0.012231,0.014079,0.017849,0.025477,0.040875", \
				        "0.014005,0.015320,0.016911,0.020369,0.027572,0.042472", \
				        "0.022722,0.023644,0.024843,0.027583,0.033845,0.047703");
			}
			fall_power(Power_X4) {
				values ("0.007260,0.005561,0.003628,-0.000223,-0.007932,-0.023395", \
				        "0.007207,0.005528,0.003606,-0.000246,-0.007937,-0.023389", \
				        "0.007221,0.005529,0.003633,-0.000231,-0.007947,-0.023389", \
				        "0.007357,0.005657,0.003743,-0.000134,-0.007858,-0.023340", \
				        "0.007967,0.006189,0.004206,0.000248,-0.007600,-0.023178", \
				        "0.009750,0.007860,0.005730,0.001567,-0.006559,-0.022422", \
				        "0.014169,0.012088,0.009788,0.005294,-0.003356,-0.019920", \
				        "0.023869,0.021632,0.019124,0.014245,0.004885,-0.012857");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X4) {
				values ("0.002332,0.000637,-0.001273,-0.005132,-0.012866,-0.028324", \
				        "0.002337,0.000664,-0.001258,-0.005111,-0.012823,-0.028284", \
				        "0.002450,0.000739,-0.001190,-0.005048,-0.012780,-0.028226", \
				        "0.002801,0.001014,-0.000948,-0.004873,-0.012640,-0.028158", \
				        "0.003856,0.001891,-0.000240,-0.004332,-0.012288,-0.027938", \
				        "0.006421,0.004218,0.001860,-0.002631,-0.011041,-0.027092", \
				        "0.012089,0.009664,0.007012,0.001989,-0.007287,-0.024379", \
				        "0.024072,0.021374,0.018454,0.012855,0.002453,-0.016505");
			}
			rise_power(Power_X4) {
				values ("0.005394,0.007112,0.009088,0.012992,0.020763,0.036268", \
				        "0.005396,0.007103,0.009070,0.012981,0.020743,0.036258", \
				        "0.005529,0.007219,0.009149,0.013004,0.020757,0.036260", \
				        "0.005969,0.007574,0.009474,0.013261,0.020926,0.036354", \
				        "0.007023,0.008537,0.010365,0.014023,0.021522,0.036761", \
				        "0.009401,0.010793,0.012448,0.015936,0.023177,0.038065", \
				        "0.014888,0.015917,0.017295,0.020401,0.027161,0.041507", \
				        "0.026685,0.027333,0.028280,0.030633,0.036403,0.049676");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X4) {
				values ("0.002294,0.000602,-0.001298,-0.005153,-0.012875,-0.028354", \
				        "0.002258,0.000593,-0.001326,-0.005162,-0.012894,-0.028359", \
				        "0.002220,0.000555,-0.001357,-0.005191,-0.012919,-0.028413", \
				        "0.002331,0.000631,-0.001293,-0.005143,-0.012855,-0.028361", \
				        "0.003000,0.001153,-0.000895,-0.004869,-0.012678,-0.028201", \
				        "0.004935,0.002870,0.000621,-0.003699,-0.011900,-0.027703", \
				        "0.009636,0.007306,0.004773,-0.000041,-0.009037,-0.025789", \
				        "0.019944,0.017333,0.014470,0.009093,-0.000983,-0.019478");
			}
			rise_power(Power_X4) {
				values ("0.008419,0.010114,0.012060,0.015953,0.023704,0.039200", \
				        "0.008415,0.010123,0.012063,0.015944,0.023691,0.039200", \
				        "0.008529,0.010224,0.012138,0.015998,0.023734,0.039206", \
				        "0.008938,0.010572,0.012455,0.016248,0.023906,0.039328", \
				        "0.009928,0.011509,0.013324,0.017023,0.024527,0.039768", \
				        "0.012201,0.013685,0.015410,0.018956,0.026232,0.041130", \
				        "0.017191,0.018524,0.020111,0.023423,0.030318,0.044683", \
				        "0.027682,0.028876,0.030304,0.033273,0.039618,0.053154");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI221_X1
 Cell Description	: Combinational cell (AOI221_X1) with drive strength X1
*******************************************************************************************/

cell (AOI221_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 11545.631125;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 4110.790000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 3667.058000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 4281.636000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 7990.157000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 10417.180000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 7990.587000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 9855.851000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 11725.200000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 10417.190000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 8002.928000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 10588.030000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 12326.030000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 16723.120000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 12326.460000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 14211.260000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 16099.260000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 4281.645000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 8002.490000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 4452.564000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 12325.060000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 10588.040000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 12326.020000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 14210.190000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 16098.790000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 11953.610000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 11773.370000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 16275.140000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 16096.420000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 16276.540000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 16096.920000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 17574.000000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 20396.660000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000594;
		fall_capacitance	: 0.000549;
		rise_capacitance	: 0.000639;
		fall_capacitance_range		(0.000469, 0.000641);
		rise_capacitance_range		(0.000555, 0.000747);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000003,0.000002,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000040,0.000030,0.000020,0.000014,0.000009,0.000007,0.000004");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000040,0.000030,0.000020,0.000014,0.000009,0.000007,0.000004");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000003,0.000002,0.000002,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000003,0.000002,0.000002,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000036,0.000026,0.000018,0.000012,0.000009,0.000006,0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000636;
		fall_capacitance	: 0.000623;
		rise_capacitance	: 0.000649;
		fall_capacitance_range		(0.000516, 0.000728);
		rise_capacitance_range		(0.000564, 0.000772);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000010,0.000008,0.000006,0.000005,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000001,0.000000,-0.000000,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000656;
		fall_capacitance	: 0.000632;
		rise_capacitance	: 0.000681;
		fall_capacitance_range		(0.000528, 0.000717);
		rise_capacitance_range		(0.000600, 0.000777);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000012,0.000009,0.000007,0.000006,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000013,0.000010,0.000008,0.000006,0.000005,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000012,0.000009,0.000007,0.000006,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000012,0.000009,0.000007,0.000006,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000648;
		fall_capacitance	: 0.000592;
		rise_capacitance	: 0.000704;
		fall_capacitance_range		(0.000510, 0.000732);
		rise_capacitance_range		(0.000592, 0.000891);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000014,0.000012,0.000009,0.000007,0.000005,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000014,0.000011,0.000009,0.000006,0.000005,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000002,0.000001,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000002,0.000001,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000014,0.000012,0.000009,0.000007,0.000005,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000658;
		fall_capacitance	: 0.000592;
		rise_capacitance	: 0.000724;
		fall_capacitance_range		(0.000520, 0.000697);
		rise_capacitance_range		(0.000606, 0.000883);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000019,0.000015,0.000012,0.000009,0.000006,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000019,0.000015,0.000012,0.000009,0.000006,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000018,0.000015,0.000011,0.000008,0.000006,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | A) | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032791,0.035461,0.040966,0.051085,0.070931,0.109705", \
				        "0.036140,0.038803,0.044039,0.054450,0.074208,0.113023", \
				        "0.043048,0.045622,0.050639,0.060874,0.080775,0.119497", \
				        "0.055990,0.059045,0.064746,0.074989,0.094323,0.132960", \
				        "0.070670,0.074879,0.082745,0.096645,0.120744,0.160609", \
				        "0.084667,0.090217,0.100847,0.119555,0.152242,0.206585", \
				        "0.093041,0.100256,0.114019,0.138964,0.182888,0.256471", \
				        "0.086085,0.095834,0.113727,0.146833,0.204963,0.302457");
			}
			cell_rise(Timing_X1) {
				values ("0.140683,0.148523,0.164324,0.195784,0.258162,0.382045", \
				        "0.143925,0.151813,0.167553,0.199057,0.261438,0.385397", \
				        "0.150291,0.158165,0.173706,0.205196,0.267683,0.391681", \
				        "0.161453,0.169597,0.185364,0.216865,0.279423,0.403472", \
				        "0.183118,0.191049,0.207026,0.238422,0.301021,0.425198", \
				        "0.222206,0.231003,0.248719,0.282112,0.345299,0.469169", \
				        "0.282512,0.294128,0.315130,0.355190,0.429017,0.561785", \
				        "0.384866,0.399301,0.424145,0.473438,0.561704,0.719616");
			}
			fall_transition(Timing_X1) {
				values ("0.037261,0.039086,0.043026,0.051305,0.067661,0.100227", \
				        "0.037123,0.038755,0.042887,0.051291,0.067652,0.100229", \
				        "0.036990,0.038750,0.042714,0.051157,0.067595,0.100225", \
				        "0.042920,0.043950,0.046862,0.053379,0.067865,0.100229", \
				        "0.061448,0.062562,0.064918,0.069588,0.079175,0.103645", \
				        "0.090484,0.091998,0.095166,0.101055,0.112800,0.134280", \
				        "0.117335,0.119924,0.125124,0.134643,0.166017,0.194071", \
				        "0.185420,0.188837,0.195940,0.208881,0.232248,0.272786");
			}
			rise_transition(Timing_X1) {
				values ("0.086463,0.093689,0.108041,0.136238,0.192499,0.304153", \
				        "0.086472,0.093699,0.108052,0.136316,0.192466,0.304154", \
				        "0.086465,0.093677,0.108003,0.136304,0.192484,0.304138", \
				        "0.086469,0.093694,0.108020,0.136283,0.192462,0.304149", \
				        "0.087346,0.094315,0.108321,0.136339,0.192481,0.304146", \
				        "0.101886,0.108102,0.120258,0.144351,0.195269,0.304187", \
				        "0.132829,0.139612,0.152459,0.177528,0.225421,0.319622", \
				        "0.183701,0.191355,0.205605,0.233361,0.285750,0.384481");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !C1 & !C2 | !B1 & !B2 & !C2 | !B1 & !B2 & !C1";
			sdf_cond	   : "(B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032474,0.035152,0.040558,0.050642,0.070518,0.109181", \
				        "0.035769,0.038355,0.043553,0.053919,0.073758,0.112440", \
				        "0.042649,0.045197,0.050226,0.060468,0.080219,0.118887", \
				        "0.055470,0.058459,0.064138,0.074459,0.093846,0.132316", \
				        "0.069956,0.074142,0.081873,0.095892,0.120077,0.160037", \
				        "0.084122,0.089593,0.099997,0.118725,0.151467,0.205841", \
				        "0.093041,0.100256,0.114019,0.138964,0.182738,0.255943", \
				        "0.086085,0.095834,0.113727,0.146833,0.204963,0.302457");
			}
			cell_rise(Timing_X1) {
				values ("0.098078,0.104476,0.117487,0.143132,0.194146,0.295610", \
				        "0.101592,0.107971,0.120933,0.146591,0.197628,0.299137", \
				        "0.108256,0.114667,0.127440,0.153164,0.204244,0.305807", \
				        "0.119960,0.126572,0.139568,0.165313,0.216436,0.318065", \
				        "0.141858,0.148633,0.161925,0.187717,0.238875,0.340539", \
				        "0.174239,0.182269,0.198458,0.228514,0.283838,0.385878", \
				        "0.223379,0.234024,0.253655,0.290508,0.357185,0.474616", \
				        "0.305975,0.319598,0.343616,0.389649,0.471246,0.613163");
			}
			fall_transition(Timing_X1) {
				values ("0.028482,0.030761,0.035176,0.043686,0.060460,0.093367", \
				        "0.028318,0.030557,0.035086,0.043636,0.060458,0.093371", \
				        "0.028144,0.030341,0.034719,0.043418,0.060395,0.093384", \
				        "0.034582,0.036071,0.039102,0.045680,0.060676,0.093353", \
				        "0.051446,0.052774,0.055840,0.061580,0.072227,0.096826", \
				        "0.076827,0.078757,0.082526,0.089942,0.103503,0.126912", \
				        "0.117335,0.119924,0.125124,0.134643,0.152215,0.183216", \
				        "0.185420,0.188837,0.195940,0.208881,0.232248,0.272786");
			}
			rise_transition(Timing_X1) {
				values ("0.059756,0.065669,0.077470,0.100717,0.146995,0.239203", \
				        "0.059758,0.065691,0.077579,0.100739,0.146964,0.239205", \
				        "0.059755,0.065686,0.077448,0.100744,0.146971,0.239194", \
				        "0.059823,0.065733,0.077530,0.100701,0.146998,0.239203", \
				        "0.064222,0.069365,0.079958,0.101645,0.146984,0.239213", \
				        "0.081915,0.086961,0.097213,0.116649,0.155140,0.240272", \
				        "0.112185,0.117900,0.128715,0.149651,0.189865,0.266714", \
				        "0.162395,0.168672,0.180828,0.204188,0.248479,0.332116");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032513,0.035194,0.040608,0.050685,0.070556,0.109220", \
				        "0.035850,0.038431,0.043621,0.053999,0.073835,0.112517", \
				        "0.042760,0.045314,0.050336,0.060583,0.080335,0.119003", \
				        "0.055622,0.058607,0.064278,0.074589,0.093980,0.132454", \
				        "0.070048,0.074245,0.081981,0.096012,0.120196,0.160159", \
				        "0.083618,0.089115,0.099628,0.118474,0.151352,0.205834", \
				        "0.090188,0.097555,0.111596,0.136946,0.181330,0.255134", \
				        "0.076643,0.086688,0.105107,0.139214,0.198823,0.298179");
			}
			cell_rise(Timing_X1) {
				values ("0.119364,0.127213,0.142983,0.174283,0.236525,0.360176", \
				        "0.122611,0.130477,0.146232,0.177534,0.239786,0.363469", \
				        "0.128906,0.136777,0.152367,0.183688,0.246023,0.369764", \
				        "0.140080,0.148136,0.163965,0.195366,0.257723,0.381565", \
				        "0.161643,0.169542,0.185535,0.216938,0.279341,0.403284", \
				        "0.196915,0.206215,0.224730,0.259394,0.323626,0.447266", \
				        "0.251937,0.264137,0.286042,0.327998,0.403980,0.539202", \
				        "0.346924,0.361994,0.388675,0.440195,0.531886,0.693086");
			}
			fall_transition(Timing_X1) {
				values ("0.028482,0.030768,0.035223,0.043687,0.060462,0.093366", \
				        "0.028323,0.030561,0.035056,0.043637,0.060456,0.093370", \
				        "0.028135,0.030334,0.034715,0.043430,0.060401,0.093381", \
				        "0.034504,0.036006,0.039059,0.045621,0.060669,0.093351", \
				        "0.051406,0.052735,0.055787,0.061529,0.072167,0.096795", \
				        "0.077096,0.079055,0.082722,0.090123,0.103588,0.126920", \
				        "0.118402,0.120949,0.126072,0.135523,0.152991,0.183683", \
				        "0.187952,0.191291,0.198403,0.211385,0.234634,0.274891");
			}
			rise_transition(Timing_X1) {
				values ("0.074398,0.081561,0.095721,0.123787,0.179673,0.290888", \
				        "0.074412,0.081560,0.095804,0.123792,0.179651,0.290898", \
				        "0.074397,0.081562,0.095791,0.123761,0.179678,0.290899", \
				        "0.074421,0.081576,0.095828,0.123767,0.179688,0.290886", \
				        "0.076659,0.083319,0.096754,0.123935,0.179649,0.290898", \
				        "0.093536,0.099663,0.111737,0.135016,0.184023,0.290963", \
				        "0.124838,0.131560,0.144192,0.168917,0.216346,0.309137", \
				        "0.176015,0.183387,0.197371,0.224638,0.276595,0.374862");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2 & !C2 | B1 & !B2 & !C1";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032791,0.035461,0.040966,0.051085,0.070931,0.109705", \
				        "0.036140,0.038803,0.044039,0.054450,0.074208,0.113023", \
				        "0.043048,0.045622,0.050639,0.060874,0.080775,0.119497", \
				        "0.055990,0.059045,0.064746,0.074989,0.094323,0.132960", \
				        "0.070670,0.074879,0.082745,0.096645,0.120744,0.160609", \
				        "0.084667,0.090217,0.100847,0.119555,0.152242,0.206585", \
				        "0.092291,0.099674,0.113650,0.138823,0.182888,0.256471", \
				        "0.081584,0.091297,0.109559,0.142983,0.201978,0.300799");
			}
			cell_rise(Timing_X1) {
				values ("0.140683,0.148523,0.164324,0.195784,0.258162,0.382045", \
				        "0.143925,0.151813,0.167553,0.199057,0.261438,0.385397", \
				        "0.150291,0.158165,0.173706,0.205196,0.267683,0.391681", \
				        "0.161453,0.169597,0.185364,0.216865,0.279423,0.403472", \
				        "0.183118,0.191049,0.207026,0.238422,0.301021,0.425198", \
				        "0.222206,0.231003,0.248719,0.282112,0.345299,0.469169", \
				        "0.282512,0.294128,0.315130,0.355190,0.429017,0.561785", \
				        "0.384866,0.399301,0.424145,0.473438,0.561704,0.719616");
			}
			fall_transition(Timing_X1) {
				values ("0.037261,0.039086,0.043026,0.051305,0.067661,0.100227", \
				        "0.037123,0.038755,0.042887,0.051291,0.067652,0.100229", \
				        "0.036990,0.038750,0.042714,0.051157,0.067595,0.100225", \
				        "0.042920,0.043950,0.046862,0.053379,0.067865,0.100229", \
				        "0.061448,0.062562,0.064918,0.069588,0.079175,0.103645", \
				        "0.090484,0.091998,0.095166,0.101055,0.112800,0.134280", \
				        "0.137434,0.139385,0.143361,0.150984,0.166017,0.194071", \
				        "0.215897,0.218399,0.223712,0.233938,0.253511,0.289734");
			}
			rise_transition(Timing_X1) {
				values ("0.086463,0.093689,0.108041,0.136238,0.192499,0.304153", \
				        "0.086472,0.093699,0.108052,0.136316,0.192466,0.304154", \
				        "0.086465,0.093677,0.108003,0.136304,0.192484,0.304138", \
				        "0.086469,0.093694,0.108020,0.136283,0.192462,0.304149", \
				        "0.087346,0.094315,0.108321,0.136339,0.192481,0.304146", \
				        "0.101886,0.108102,0.120258,0.144351,0.195269,0.304187", \
				        "0.132829,0.139612,0.152459,0.177528,0.225421,0.319622", \
				        "0.183701,0.191355,0.205605,0.233361,0.285750,0.384481");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.047882,0.051037,0.057312,0.069753,0.093508,0.139280", \
				        "0.050809,0.053845,0.060135,0.072588,0.096392,0.142156", \
				        "0.056903,0.060021,0.066030,0.078393,0.102170,0.147891", \
				        "0.070473,0.073453,0.079236,0.091104,0.114472,0.160035", \
				        "0.090385,0.094363,0.101754,0.115893,0.140607,0.185269", \
				        "0.110887,0.116046,0.125988,0.144611,0.177577,0.233492", \
				        "0.127337,0.133810,0.146830,0.171156,0.214743,0.289077", \
				        "0.128673,0.138000,0.154710,0.186429,0.243298,0.340892");
			}
			cell_rise(Timing_X1) {
				values ("0.106557,0.113388,0.127100,0.153978,0.207490,0.313897", \
				        "0.110280,0.116972,0.130632,0.157684,0.211239,0.317734", \
				        "0.117190,0.124059,0.137635,0.164613,0.218276,0.324865", \
				        "0.129459,0.136334,0.150056,0.177007,0.230567,0.337215", \
				        "0.149963,0.157020,0.170972,0.197965,0.251522,0.358159", \
				        "0.176033,0.184458,0.200837,0.231590,0.288652,0.395661", \
				        "0.212296,0.222521,0.242102,0.278948,0.345593,0.466083", \
				        "0.278870,0.292591,0.316443,0.361392,0.440601,0.579930");
			}
			fall_transition(Timing_X1) {
				values ("0.035543,0.038208,0.043399,0.053083,0.071968,0.109675", \
				        "0.035410,0.038040,0.043205,0.053006,0.071907,0.109667", \
				        "0.034795,0.037516,0.042912,0.052781,0.071919,0.109615", \
				        "0.036162,0.038465,0.043112,0.052312,0.071448,0.109619", \
				        "0.048916,0.051167,0.055455,0.062757,0.076749,0.110035", \
				        "0.070648,0.073450,0.078832,0.088193,0.104684,0.132769", \
				        "0.106000,0.109598,0.116741,0.129315,0.151131,0.187471", \
				        "0.164750,0.170354,0.179960,0.197273,0.226581,0.274733");
			}
			rise_transition(Timing_X1) {
				values ("0.058745,0.064647,0.076499,0.100208,0.147297,0.241209", \
				        "0.058744,0.064640,0.076593,0.100130,0.147312,0.241220", \
				        "0.058749,0.064658,0.076526,0.100179,0.147275,0.241226", \
				        "0.058773,0.064683,0.076622,0.100198,0.147309,0.241209", \
				        "0.061338,0.066823,0.077815,0.100490,0.147285,0.241235", \
				        "0.075304,0.080715,0.091391,0.112080,0.153217,0.241877", \
				        "0.104738,0.109809,0.120052,0.140860,0.182615,0.264275", \
				        "0.161807,0.166356,0.175984,0.195976,0.237029,0.320753");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.040807,0.044138,0.050740,0.063639,0.088157,0.134756", \
				        "0.043845,0.047057,0.053614,0.066546,0.091054,0.137628", \
				        "0.050300,0.053528,0.059814,0.072504,0.096842,0.143366", \
				        "0.064544,0.067691,0.073665,0.085601,0.109298,0.155466", \
				        "0.082968,0.087238,0.095255,0.109927,0.135734,0.180810", \
				        "0.101388,0.106951,0.117421,0.136958,0.171213,0.228516", \
				        "0.114340,0.121311,0.135176,0.160675,0.205885,0.282157", \
				        "0.110099,0.120015,0.137476,0.170642,0.229662,0.330028");
			}
			cell_rise(Timing_X1) {
				values ("0.117547,0.125472,0.141377,0.172634,0.234691,0.358237", \
				        "0.121229,0.129024,0.144970,0.176284,0.238465,0.362089", \
				        "0.128093,0.136057,0.151850,0.183168,0.245444,0.369153", \
				        "0.140230,0.148202,0.164121,0.195405,0.257620,0.381404", \
				        "0.160245,0.168311,0.184319,0.215615,0.277844,0.401613", \
				        "0.185702,0.195165,0.213370,0.247712,0.312257,0.435986", \
				        "0.221656,0.232595,0.253605,0.293385,0.366542,0.501070", \
				        "0.288932,0.303246,0.328249,0.375542,0.459683,0.610761");
			}
			fall_transition(Timing_X1) {
				values ("0.034267,0.037033,0.042459,0.052232,0.071499,0.109088", \
				        "0.033888,0.036688,0.042197,0.052023,0.071423,0.109095", \
				        "0.032688,0.035579,0.041213,0.051627,0.071158,0.109077", \
				        "0.035844,0.037934,0.042566,0.051353,0.070424,0.108830", \
				        "0.049585,0.051743,0.056031,0.063135,0.076680,0.109184", \
				        "0.072123,0.074824,0.080078,0.089195,0.105382,0.133005", \
				        "0.109249,0.112669,0.119529,0.131748,0.152840,0.188330", \
				        "0.171196,0.176483,0.185857,0.202584,0.230814,0.277527");
			}
			rise_transition(Timing_X1) {
				values ("0.063017,0.069996,0.084039,0.111876,0.167447,0.278257", \
				        "0.063012,0.069994,0.083955,0.111812,0.167450,0.278278", \
				        "0.063028,0.069988,0.084035,0.111862,0.167457,0.278277", \
				        "0.063066,0.070014,0.084069,0.111851,0.167413,0.278279", \
				        "0.064981,0.071572,0.084950,0.112068,0.167455,0.278266", \
				        "0.077217,0.083656,0.096377,0.121181,0.171421,0.278431", \
				        "0.103493,0.109776,0.122189,0.147228,0.197243,0.295344", \
				        "0.157864,0.163572,0.175186,0.199014,0.247718,0.347262");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.041246,0.044611,0.051369,0.064343,0.088802,0.135454", \
				        "0.044276,0.047499,0.054204,0.067172,0.091576,0.138214", \
				        "0.050718,0.054032,0.060406,0.073114,0.097449,0.143985", \
				        "0.064946,0.068185,0.074238,0.086121,0.109831,0.156102", \
				        "0.083697,0.087984,0.096037,0.110708,0.136331,0.181424", \
				        "0.102472,0.108090,0.118722,0.138092,0.172187,0.229343", \
				        "0.116428,0.123478,0.137281,0.162595,0.207491,0.283561", \
				        "0.114529,0.124178,0.141579,0.174253,0.232755,0.332658");
			}
			cell_rise(Timing_X1) {
				values ("0.138059,0.146006,0.161883,0.193251,0.255524,0.379271", \
				        "0.141809,0.149644,0.165540,0.196962,0.259284,0.383115", \
				        "0.148694,0.156661,0.172437,0.203889,0.266316,0.390220", \
				        "0.160744,0.168778,0.184705,0.216110,0.278515,0.402518", \
				        "0.180978,0.188962,0.204906,0.236300,0.298730,0.422719", \
				        "0.209632,0.218659,0.236259,0.269797,0.333241,0.457054", \
				        "0.249930,0.260108,0.280125,0.318584,0.390189,0.522982", \
				        "0.323075,0.336480,0.359764,0.404892,0.486494,0.635146");
			}
			fall_transition(Timing_X1) {
				values ("0.043973,0.046269,0.051075,0.060740,0.079706,0.117047", \
				        "0.043602,0.045873,0.050766,0.060556,0.079615,0.117029", \
				        "0.042239,0.044684,0.049910,0.060059,0.079409,0.116972", \
				        "0.044868,0.046692,0.050932,0.059732,0.078601,0.116791", \
				        "0.060585,0.062085,0.065317,0.071567,0.084793,0.117131", \
				        "0.087611,0.089588,0.093546,0.100981,0.115244,0.140983", \
				        "0.130687,0.133346,0.138542,0.148330,0.166580,0.199121", \
				        "0.201950,0.205558,0.212759,0.226105,0.250202,0.292670");
			}
			rise_transition(Timing_X1) {
				values ("0.074385,0.081550,0.095776,0.123804,0.179674,0.290871", \
				        "0.074399,0.081531,0.095754,0.123766,0.179651,0.290894", \
				        "0.074399,0.081540,0.095743,0.123797,0.179684,0.290878", \
				        "0.074409,0.081526,0.095802,0.123796,0.179691,0.290881", \
				        "0.075235,0.082150,0.096080,0.123831,0.179636,0.290902", \
				        "0.086256,0.092905,0.105841,0.130783,0.182471,0.290931", \
				        "0.110659,0.117480,0.130465,0.156311,0.206970,0.305795", \
				        "0.161790,0.168190,0.180842,0.206021,0.256301,0.357231");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.052559,0.055724,0.062025,0.074356,0.098159,0.143912", \
				        "0.055308,0.058497,0.064723,0.077015,0.100793,0.146578", \
				        "0.060369,0.063595,0.069819,0.082243,0.105949,0.151735", \
				        "0.070625,0.073813,0.080124,0.092336,0.116020,0.161800", \
				        "0.087246,0.090905,0.097759,0.111021,0.135731,0.181628", \
				        "0.107823,0.112318,0.121033,0.137304,0.166658,0.218365", \
				        "0.125516,0.131683,0.143367,0.165263,0.203907,0.269363", \
				        "0.129271,0.137981,0.153639,0.183106,0.235373,0.323521");
			}
			cell_rise(Timing_X1) {
				values ("0.123967,0.130803,0.144405,0.171420,0.224995,0.331609", \
				        "0.127847,0.134646,0.148156,0.175178,0.228796,0.335467", \
				        "0.134973,0.141871,0.155390,0.182354,0.236025,0.342697", \
				        "0.147406,0.154298,0.167949,0.194970,0.248609,0.355289", \
				        "0.168331,0.175223,0.188991,0.216080,0.269786,0.376494", \
				        "0.198009,0.205960,0.221578,0.251476,0.307353,0.414130", \
				        "0.238690,0.248798,0.267195,0.302452,0.367484,0.486012", \
				        "0.318685,0.330855,0.352609,0.394394,0.469727,0.605161");
			}
			fall_transition(Timing_X1) {
				values ("0.035479,0.038106,0.043291,0.053010,0.072028,0.109630", \
				        "0.035429,0.038025,0.043353,0.053025,0.071927,0.109679", \
				        "0.035167,0.037816,0.043130,0.052843,0.071964,0.109634", \
				        "0.035452,0.038002,0.043169,0.052725,0.071727,0.109638", \
				        "0.041429,0.043801,0.048585,0.057303,0.074077,0.109983", \
				        "0.055921,0.058395,0.063041,0.071744,0.088056,0.120339", \
				        "0.082804,0.085470,0.091176,0.101194,0.119151,0.151714", \
				        "0.126598,0.130764,0.138313,0.151815,0.175075,0.213970");
			}
			rise_transition(Timing_X1) {
				values ("0.068873,0.074915,0.086997,0.110762,0.158109,0.252377", \
				        "0.068890,0.074912,0.086923,0.110753,0.158112,0.252374", \
				        "0.068898,0.074937,0.086907,0.110781,0.158062,0.252382", \
				        "0.068894,0.074953,0.086986,0.110773,0.158113,0.252388", \
				        "0.070165,0.075941,0.087488,0.110829,0.158057,0.252382", \
				        "0.083058,0.088564,0.099292,0.120139,0.162468,0.252698", \
				        "0.109642,0.115267,0.126318,0.148218,0.190715,0.272837", \
				        "0.156986,0.162904,0.174381,0.197035,0.241384,0.328082");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.045499,0.048863,0.055387,0.068299,0.092797,0.139402", \
				        "0.048311,0.051664,0.058120,0.070977,0.095459,0.142048", \
				        "0.053519,0.056933,0.063483,0.076242,0.100594,0.147197", \
				        "0.064142,0.067495,0.074046,0.086563,0.110784,0.157244", \
				        "0.080316,0.084131,0.091356,0.105209,0.130500,0.177086", \
				        "0.099087,0.104017,0.113233,0.130349,0.160746,0.213548", \
				        "0.113661,0.120125,0.132602,0.155687,0.196032,0.263267", \
				        "0.111377,0.120775,0.137413,0.168481,0.223110,0.314060");
			}
			cell_rise(Timing_X1) {
				values ("0.137950,0.145834,0.161608,0.192920,0.255100,0.378805", \
				        "0.141777,0.149650,0.165317,0.196677,0.258922,0.382675", \
				        "0.148845,0.156842,0.172535,0.203843,0.266128,0.389925", \
				        "0.161188,0.169183,0.185002,0.216367,0.278631,0.402476", \
				        "0.181516,0.189452,0.205404,0.236792,0.299111,0.422968", \
				        "0.210209,0.219223,0.236706,0.270272,0.333731,0.457491", \
				        "0.250029,0.260825,0.280722,0.319169,0.390785,0.523523", \
				        "0.329870,0.342720,0.365669,0.409991,0.490635,0.638150");
			}
			fall_transition(Timing_X1) {
				values ("0.034161,0.036906,0.042298,0.052330,0.071437,0.109144", \
				        "0.034005,0.036768,0.042175,0.052196,0.071461,0.109069", \
				        "0.033445,0.036206,0.041722,0.051820,0.071224,0.109101", \
				        "0.034285,0.036780,0.042022,0.051710,0.070897,0.108981", \
				        "0.041203,0.043497,0.048244,0.056737,0.073425,0.109276", \
				        "0.056639,0.059064,0.063646,0.072069,0.088047,0.120047", \
				        "0.084685,0.087240,0.092774,0.102544,0.120099,0.151999", \
				        "0.130486,0.134454,0.141927,0.155001,0.177579,0.215485");
			}
			rise_transition(Timing_X1) {
				values ("0.074958,0.082048,0.096267,0.124321,0.180207,0.291493", \
				        "0.074960,0.082046,0.096228,0.124325,0.180200,0.291481", \
				        "0.074964,0.082021,0.096251,0.124329,0.180230,0.291483", \
				        "0.074959,0.082061,0.096268,0.124322,0.180246,0.291489", \
				        "0.075795,0.082628,0.096573,0.124339,0.180203,0.291516", \
				        "0.086731,0.093305,0.106179,0.131303,0.183015,0.291535", \
				        "0.110316,0.117177,0.130433,0.156553,0.207403,0.306359", \
				        "0.154921,0.161902,0.175484,0.202130,0.254289,0.356838");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.045918,0.049316,0.056002,0.068851,0.093414,0.140009", \
				        "0.048736,0.052134,0.058796,0.071584,0.096023,0.142687", \
				        "0.053934,0.057369,0.064017,0.076908,0.101215,0.147824", \
				        "0.064541,0.067977,0.074477,0.087085,0.111362,0.157869", \
				        "0.080850,0.084684,0.092110,0.105825,0.131131,0.177700", \
				        "0.099853,0.104837,0.114124,0.131236,0.161514,0.214236", \
				        "0.115083,0.121509,0.134057,0.156991,0.197153,0.264258", \
				        "0.114121,0.123259,0.140032,0.170860,0.225115,0.315781");
			}
			cell_rise(Timing_X1) {
				values ("0.158541,0.166469,0.182255,0.213744,0.276051,0.399908", \
				        "0.162413,0.170316,0.185977,0.217481,0.279804,0.403723", \
				        "0.169521,0.177505,0.193186,0.224643,0.287034,0.410984", \
				        "0.181874,0.189849,0.205679,0.237162,0.299556,0.423554", \
				        "0.202170,0.210120,0.226045,0.257558,0.320037,0.444086", \
				        "0.233338,0.242066,0.259028,0.291875,0.354661,0.478593", \
				        "0.276858,0.287186,0.306383,0.343727,0.414093,0.545275", \
				        "0.361115,0.373389,0.395007,0.437828,0.516662,0.662120");
			}
			fall_transition(Timing_X1) {
				values ("0.043920,0.046324,0.051031,0.060721,0.079708,0.117018", \
				        "0.043759,0.046086,0.050863,0.060642,0.079650,0.117034", \
				        "0.043154,0.045483,0.050481,0.060354,0.079531,0.116997", \
				        "0.043714,0.045852,0.050593,0.060054,0.079111,0.116895", \
				        "0.051237,0.053135,0.057267,0.065201,0.081693,0.117158", \
				        "0.068869,0.070738,0.074411,0.081904,0.096904,0.128012", \
				        "0.101022,0.103100,0.107312,0.115484,0.131040,0.161197", \
				        "0.153728,0.156776,0.162556,0.173148,0.192616,0.227410");
			}
			rise_transition(Timing_X1) {
				values ("0.086501,0.093650,0.107969,0.136279,0.192500,0.304153", \
				        "0.086492,0.093647,0.107999,0.136310,0.192476,0.304134", \
				        "0.086502,0.093675,0.108034,0.136264,0.192495,0.304158", \
				        "0.086505,0.093665,0.108027,0.136271,0.192469,0.304166", \
				        "0.086780,0.093842,0.108114,0.136306,0.192493,0.304131", \
				        "0.096143,0.102879,0.115815,0.141392,0.194280,0.304175", \
				        "0.119128,0.126189,0.139600,0.166129,0.217296,0.317045", \
				        "0.162299,0.169603,0.183525,0.210858,0.263777,0.367099");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025224,0.027945,0.033489,0.044499,0.066285,0.109760", \
				        "0.028336,0.031021,0.036572,0.047584,0.069383,0.112866", \
				        "0.034723,0.037506,0.042764,0.053718,0.075499,0.118844", \
				        "0.043179,0.046883,0.053801,0.066304,0.088107,0.131257", \
				        "0.051154,0.056176,0.065508,0.082193,0.110714,0.156962", \
				        "0.055550,0.062099,0.074627,0.097001,0.135248,0.197430", \
				        "0.047615,0.057014,0.073767,0.103968,0.155170,0.238339", \
				        "0.011436,0.023600,0.046386,0.086751,0.155641,0.267580");
			}
			cell_rise(Timing_X1) {
				values ("0.046178,0.052607,0.065593,0.091285,0.142210,0.243581", \
				        "0.049242,0.055704,0.068620,0.094241,0.145124,0.246455", \
				        "0.055979,0.062315,0.075094,0.100532,0.151283,0.252516", \
				        "0.071520,0.077285,0.089160,0.113926,0.164181,0.264938", \
				        "0.097083,0.104314,0.118274,0.143478,0.191789,0.291189", \
				        "0.133147,0.142240,0.159803,0.192185,0.248950,0.347275", \
				        "0.187575,0.199572,0.221225,0.261604,0.333257,0.455678", \
				        "0.275809,0.290316,0.318107,0.368260,0.457205,0.610737");
			}
			fall_transition(Timing_X1) {
				values ("0.017870,0.020325,0.025399,0.034708,0.053308,0.090751", \
				        "0.017808,0.020371,0.025180,0.034664,0.053320,0.090801", \
				        "0.019468,0.021559,0.025707,0.034539,0.053292,0.090798", \
				        "0.026691,0.028687,0.032528,0.038881,0.054363,0.090757", \
				        "0.039079,0.041397,0.045953,0.053654,0.067264,0.094884", \
				        "0.060531,0.063324,0.068799,0.078342,0.095400,0.124265", \
				        "0.097657,0.101439,0.108436,0.120904,0.142303,0.178493", \
				        "0.163197,0.168241,0.177752,0.194601,0.222891,0.269084");
			}
			rise_transition(Timing_X1) {
				values ("0.049384,0.055673,0.067862,0.090989,0.137041,0.228899", \
				        "0.048974,0.055360,0.067715,0.090976,0.137021,0.228914", \
				        "0.047532,0.054203,0.067037,0.090876,0.136990,0.228881", \
				        "0.049000,0.054457,0.065958,0.089644,0.136951,0.228890", \
				        "0.060605,0.065367,0.074579,0.093561,0.136156,0.228906", \
				        "0.080677,0.086457,0.097252,0.117083,0.152709,0.231115", \
				        "0.114432,0.120669,0.133210,0.156603,0.199322,0.273292", \
				        "0.174546,0.181553,0.195659,0.222278,0.272243,0.362171");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025185,0.027922,0.033464,0.044453,0.066247,0.109744", \
				        "0.028312,0.031014,0.036539,0.047522,0.069355,0.112853", \
				        "0.034737,0.037517,0.042832,0.053717,0.075501,0.118854", \
				        "0.043274,0.046949,0.053861,0.066347,0.088143,0.131297", \
				        "0.051148,0.056202,0.065537,0.082229,0.110753,0.157000", \
				        "0.054715,0.061318,0.073954,0.096538,0.134991,0.197323", \
				        "0.043931,0.053592,0.070610,0.101394,0.153336,0.237307", \
				        "0.000780,0.012944,0.036781,0.078206,0.148757,0.262766");
			}
			cell_rise(Timing_X1) {
				values ("0.050061,0.057824,0.073539,0.104967,0.167164,0.290755", \
				        "0.053160,0.060944,0.076533,0.107916,0.170065,0.293683", \
				        "0.059970,0.067575,0.083053,0.114116,0.176042,0.299507", \
				        "0.075998,0.082610,0.097080,0.127222,0.188615,0.311527", \
				        "0.104817,0.112650,0.128077,0.156157,0.215446,0.336810", \
				        "0.145432,0.155529,0.174788,0.210575,0.273777,0.390972", \
				        "0.206944,0.220141,0.243796,0.288247,0.367532,0.504101", \
				        "0.307553,0.323113,0.353374,0.407890,0.505584,0.675846");
			}
			fall_transition(Timing_X1) {
				values ("0.017849,0.020309,0.025340,0.034698,0.053309,0.090742", \
				        "0.017786,0.020353,0.025198,0.034548,0.053323,0.090809", \
				        "0.019435,0.021537,0.025937,0.034521,0.053290,0.090805", \
				        "0.026624,0.028626,0.032478,0.038841,0.054343,0.090759", \
				        "0.039024,0.041344,0.045894,0.053601,0.067224,0.094867", \
				        "0.060622,0.063435,0.068929,0.078504,0.095518,0.124304", \
				        "0.098160,0.101997,0.109064,0.121547,0.143002,0.179029", \
				        "0.164344,0.169579,0.179259,0.196354,0.224826,0.270996");
			}
			rise_transition(Timing_X1) {
				values ("0.059616,0.067734,0.083043,0.111782,0.167462,0.278274", \
				        "0.059041,0.067259,0.082686,0.111641,0.167470,0.278251", \
				        "0.057145,0.065694,0.081802,0.111370,0.167445,0.278278", \
				        "0.057132,0.064344,0.079260,0.109743,0.167355,0.278280", \
				        "0.067144,0.072868,0.084603,0.109900,0.165283,0.278278", \
				        "0.087156,0.093931,0.106371,0.129702,0.174886,0.277010", \
				        "0.120676,0.127795,0.142290,0.169145,0.218659,0.307254", \
				        "0.179752,0.187663,0.203569,0.233865,0.291239,0.394982");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025424,0.028261,0.033844,0.044918,0.066788,0.110325", \
				        "0.028571,0.031341,0.036914,0.047924,0.069844,0.113341", \
				        "0.035007,0.037777,0.043072,0.054059,0.075972,0.119426", \
				        "0.043662,0.047448,0.054413,0.066819,0.088535,0.131826", \
				        "0.051781,0.056908,0.066345,0.082963,0.111386,0.157471", \
				        "0.055780,0.062473,0.075159,0.097665,0.135903,0.198142", \
				        "0.046284,0.055784,0.072873,0.103350,0.154971,0.238727", \
				        "0.006050,0.018235,0.041402,0.082261,0.152124,0.265515");
			}
			cell_rise(Timing_X1) {
				values ("0.071083,0.079010,0.094866,0.126330,0.188737,0.312582", \
				        "0.074101,0.082014,0.097784,0.129268,0.191582,0.315513", \
				        "0.080502,0.088328,0.104120,0.135411,0.197561,0.321333", \
				        "0.094353,0.102026,0.117391,0.148260,0.209973,0.333306", \
				        "0.125473,0.132836,0.147255,0.175844,0.236462,0.358416", \
				        "0.171843,0.181151,0.199291,0.233136,0.293938,0.412028", \
				        "0.239810,0.251942,0.274219,0.316680,0.393089,0.525986", \
				        "0.348528,0.363334,0.391102,0.443126,0.537152,0.703392");
			}
			fall_transition(Timing_X1) {
				values ("0.022703,0.025575,0.030867,0.041076,0.060644,0.098468", \
				        "0.022653,0.025440,0.030899,0.041059,0.060664,0.098468", \
				        "0.024197,0.026571,0.031281,0.041020,0.060631,0.098465", \
				        "0.033318,0.035054,0.038716,0.045347,0.061583,0.098480", \
				        "0.050651,0.052122,0.055559,0.062201,0.074855,0.102584", \
				        "0.078415,0.080266,0.083845,0.091506,0.106233,0.132829", \
				        "0.124825,0.126973,0.131672,0.140728,0.158348,0.190812", \
				        "0.204067,0.206952,0.212837,0.224790,0.247326,0.287854");
			}
			rise_transition(Timing_X1) {
				values ("0.073741,0.081338,0.096124,0.124347,0.180239,0.291488", \
				        "0.073515,0.081147,0.096042,0.124353,0.180237,0.291515", \
				        "0.072691,0.080486,0.095619,0.124293,0.180247,0.291495", \
				        "0.070012,0.077790,0.093482,0.123626,0.180235,0.291490", \
				        "0.075397,0.081544,0.094724,0.121624,0.179144,0.291489", \
				        "0.095421,0.102128,0.114590,0.137835,0.184859,0.290131", \
				        "0.128812,0.136484,0.150997,0.178062,0.227256,0.316357", \
				        "0.186785,0.194894,0.211889,0.242769,0.300716,0.404270");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029837,0.032549,0.038126,0.049041,0.070892,0.114391", \
				        "0.032651,0.035383,0.040906,0.051877,0.073729,0.117197", \
				        "0.037716,0.040575,0.046039,0.057191,0.078908,0.122496", \
				        "0.045504,0.048738,0.055094,0.066960,0.089152,0.132734", \
				        "0.054512,0.058812,0.066697,0.081170,0.106842,0.152610", \
				        "0.061070,0.066907,0.077839,0.097324,0.130466,0.185379", \
				        "0.056790,0.065193,0.080503,0.107746,0.153419,0.226389", \
				        "0.025568,0.037422,0.058684,0.096726,0.160247,0.261369");
			}
			cell_rise(Timing_X1) {
				values ("0.062028,0.068517,0.081470,0.107182,0.158233,0.259716", \
				        "0.065033,0.071515,0.084408,0.110118,0.161103,0.262595", \
				        "0.071510,0.077985,0.090848,0.116385,0.167229,0.268650", \
				        "0.085813,0.092064,0.104595,0.129811,0.180226,0.281189", \
				        "0.115329,0.121829,0.134733,0.158631,0.207885,0.307539", \
				        "0.157206,0.165794,0.182004,0.212363,0.266502,0.363761", \
				        "0.220143,0.231228,0.251255,0.289278,0.357606,0.475743", \
				        "0.323092,0.335984,0.361598,0.408254,0.492316,0.640164");
			}
			fall_transition(Timing_X1) {
				values ("0.017818,0.020287,0.025269,0.034522,0.053389,0.090793", \
				        "0.017832,0.020306,0.025322,0.034692,0.053388,0.090790", \
				        "0.018459,0.020762,0.025564,0.034695,0.053317,0.090797", \
				        "0.022231,0.024305,0.028771,0.036678,0.053847,0.090778", \
				        "0.030934,0.032934,0.037068,0.044661,0.060077,0.092879", \
				        "0.047093,0.049422,0.053850,0.061789,0.076949,0.107213", \
				        "0.075276,0.077926,0.083471,0.093341,0.110709,0.141755", \
				        "0.121637,0.125823,0.133231,0.146819,0.169791,0.207544");
			}
			rise_transition(Timing_X1) {
				values ("0.059420,0.065524,0.077510,0.100804,0.146994,0.239209", \
				        "0.059295,0.065431,0.077418,0.100722,0.146948,0.239203", \
				        "0.058761,0.065025,0.077199,0.100767,0.146947,0.239195", \
				        "0.057681,0.063610,0.075693,0.100273,0.146966,0.239179", \
				        "0.066397,0.070966,0.080926,0.101491,0.146042,0.239199", \
				        "0.086260,0.092168,0.102868,0.122717,0.159085,0.240263", \
				        "0.117016,0.123904,0.137248,0.161569,0.204715,0.278609", \
				        "0.167178,0.175533,0.191461,0.220867,0.274018,0.366316");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029793,0.032549,0.038029,0.048997,0.070862,0.114370", \
				        "0.032619,0.035422,0.040827,0.051845,0.073703,0.117183", \
				        "0.037718,0.040581,0.046220,0.057162,0.078908,0.122502", \
				        "0.045590,0.048796,0.055151,0.067054,0.089193,0.132777", \
				        "0.054647,0.058967,0.066827,0.081287,0.106939,0.152684", \
				        "0.060955,0.066787,0.077778,0.097302,0.130499,0.185433", \
				        "0.054984,0.063461,0.078984,0.106533,0.152611,0.225994", \
				        "0.018532,0.030749,0.052468,0.091303,0.156036,0.258541");
			}
			cell_rise(Timing_X1) {
				values ("0.069528,0.077426,0.093176,0.124611,0.186859,0.310562", \
				        "0.072486,0.080405,0.096086,0.127492,0.189695,0.313469", \
				        "0.078914,0.086818,0.102532,0.133696,0.195738,0.319304", \
				        "0.093313,0.100764,0.116079,0.146819,0.208386,0.331461", \
				        "0.124968,0.132114,0.146438,0.174935,0.235285,0.356898", \
				        "0.171761,0.181494,0.199322,0.233021,0.293524,0.411195", \
				        "0.242265,0.254429,0.276518,0.318561,0.394356,0.526439", \
				        "0.357013,0.370994,0.399154,0.450236,0.543141,0.707703");
			}
			fall_transition(Timing_X1) {
				values ("0.017792,0.020210,0.025320,0.034516,0.053380,0.090802", \
				        "0.017805,0.020222,0.025306,0.034684,0.053391,0.090798", \
				        "0.018431,0.020737,0.025442,0.034670,0.053326,0.090804", \
				        "0.022201,0.024272,0.028740,0.036691,0.053833,0.090783", \
				        "0.030882,0.032864,0.037019,0.044606,0.060045,0.092868", \
				        "0.047002,0.049363,0.053802,0.061764,0.076927,0.107190", \
				        "0.075374,0.077984,0.083621,0.093460,0.110917,0.141913", \
				        "0.122138,0.126398,0.133835,0.147500,0.170604,0.208326");
			}
			rise_transition(Timing_X1) {
				values ("0.073158,0.080661,0.095488,0.123842,0.179654,0.290905", \
				        "0.072897,0.080450,0.095331,0.123740,0.179691,0.290892", \
				        "0.072028,0.079766,0.094964,0.123717,0.179697,0.290890", \
				        "0.069561,0.077091,0.092760,0.123033,0.179684,0.290894", \
				        "0.074982,0.081125,0.094145,0.121155,0.178545,0.290893", \
				        "0.094536,0.101302,0.113767,0.137209,0.184339,0.289510", \
				        "0.125567,0.133312,0.148455,0.176122,0.225913,0.315508", \
				        "0.175505,0.184676,0.202496,0.235455,0.295791,0.401317");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.030035,0.032839,0.038415,0.049483,0.071278,0.114893", \
				        "0.032870,0.035633,0.041262,0.052349,0.074140,0.117809", \
				        "0.037963,0.040837,0.046324,0.057512,0.079405,0.123053", \
				        "0.045883,0.049155,0.055463,0.067489,0.089588,0.133338", \
				        "0.055124,0.059466,0.067525,0.081920,0.107463,0.153163", \
				        "0.061710,0.067577,0.078696,0.098175,0.131233,0.186072", \
				        "0.056473,0.064963,0.080455,0.107903,0.153750,0.226963", \
				        "0.021570,0.033564,0.055277,0.093843,0.158158,0.260330");
			}
			cell_rise(Timing_X1) {
				values ("0.090814,0.098710,0.114539,0.146054,0.208497,0.332404", \
				        "0.093782,0.101698,0.117444,0.148950,0.211333,0.335320", \
				        "0.100053,0.107946,0.123767,0.155081,0.217307,0.341162", \
				        "0.113601,0.121447,0.136937,0.168023,0.229823,0.353280", \
				        "0.144253,0.150941,0.165516,0.195468,0.256372,0.378532", \
				        "0.196544,0.205411,0.222413,0.254447,0.313335,0.432373", \
				        "0.272907,0.284444,0.305210,0.345604,0.418973,0.547789", \
				        "0.394648,0.407886,0.434510,0.483710,0.573567,0.734498");
			}
			fall_transition(Timing_X1) {
				values ("0.022651,0.025431,0.030895,0.041055,0.060648,0.098469", \
				        "0.022657,0.025482,0.030876,0.041063,0.060637,0.098465", \
				        "0.023245,0.025840,0.030959,0.041067,0.060625,0.098456", \
				        "0.027893,0.030094,0.034553,0.043245,0.061122,0.098460", \
				        "0.039212,0.040803,0.044540,0.052083,0.067492,0.100522", \
				        "0.060079,0.061698,0.064877,0.071643,0.085765,0.115225", \
				        "0.094768,0.096481,0.100487,0.107938,0.122758,0.151513", \
				        "0.151719,0.154005,0.159024,0.168982,0.187736,0.221404");
			}
			rise_transition(Timing_X1) {
				values ("0.086026,0.093380,0.107996,0.136308,0.192502,0.304147", \
				        "0.085954,0.093302,0.107992,0.136341,0.192466,0.304164", \
				        "0.085572,0.093048,0.107774,0.136302,0.192468,0.304173", \
				        "0.083597,0.091515,0.106898,0.136050,0.192476,0.304166", \
				        "0.085115,0.091575,0.105510,0.133622,0.192081,0.304168", \
				        "0.103270,0.109984,0.122252,0.145690,0.194935,0.303009", \
				        "0.135609,0.143450,0.158199,0.185556,0.234649,0.325041", \
				        "0.186490,0.195512,0.213544,0.246334,0.306111,0.410836");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.002501,0.002255,0.001777,0.000811,-0.001111,-0.004975", \
				        "0.002497,0.002250,0.001773,0.000811,-0.001112,-0.004972", \
				        "0.002495,0.002256,0.001772,0.000817,-0.001107,-0.004962", \
				        "0.002525,0.002286,0.001808,0.000839,-0.001090,-0.004953", \
				        "0.002640,0.002392,0.001901,0.000917,-0.001035,-0.004912", \
				        "0.003019,0.002757,0.002244,0.001220,-0.000789,-0.004732", \
				        "0.004064,0.003775,0.003222,0.002128,0.000008,-0.004102", \
				        "0.006440,0.006145,0.005545,0.004365,0.002083,-0.002301");
			}
			rise_power(Power_X1) {
				values ("0.004940,0.005197,0.005695,0.006668,0.008599,0.012477", \
				        "0.004948,0.005190,0.005690,0.006659,0.008592,0.012464", \
				        "0.004931,0.005171,0.005647,0.006622,0.008568,0.012440", \
				        "0.004906,0.005156,0.005637,0.006614,0.008553,0.012425", \
				        "0.004881,0.005132,0.005623,0.006591,0.008538,0.012422", \
				        "0.004961,0.005203,0.005685,0.006643,0.008580,0.012442", \
				        "0.005468,0.005695,0.006159,0.007079,0.008946,0.012737", \
				        "0.007151,0.007372,0.007732,0.008553,0.010256,0.013856");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !C1 & !C2 | !B1 & !B2 & !C2 | !B1 & !B2 & !C1";

			rise_power(Power_X1) {
				values ("0.004130,0.004386,0.004882,0.005853,0.007791,0.011659", \
				        "0.004126,0.004382,0.004873,0.005840,0.007776,0.011656", \
				        "0.004115,0.004353,0.004839,0.005813,0.007757,0.011636", \
				        "0.004096,0.004338,0.004825,0.005796,0.007739,0.011635", \
				        "0.004083,0.004323,0.004809,0.005784,0.007727,0.011617", \
				        "0.004205,0.004431,0.004912,0.005864,0.007791,0.011661", \
				        "0.004864,0.005072,0.005511,0.006401,0.008249,0.012007", \
				        "0.006863,0.007027,0.007376,0.008136,0.009761,0.013276");
			}
			fall_power(Power_X1) {
				values ("0.002501,0.002249,0.001772,0.000808,-0.001117,-0.004980", \
				        "0.002482,0.002242,0.001765,0.000805,-0.001126,-0.004977", \
				        "0.002483,0.002241,0.001759,0.000801,-0.001118,-0.004977", \
				        "0.002506,0.002271,0.001787,0.000822,-0.001109,-0.004963", \
				        "0.002621,0.002386,0.001892,0.000905,-0.001045,-0.004925", \
				        "0.003019,0.002757,0.002244,0.001220,-0.000789,-0.004740", \
				        "0.004064,0.003775,0.003222,0.002128,0.000008,-0.004102", \
				        "0.006440,0.006145,0.005545,0.004365,0.002083,-0.002301");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | !B1 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003952,0.004216,0.004702,0.005671,0.007602,0.011482", \
				        "0.003949,0.004203,0.004697,0.005667,0.007603,0.011482", \
				        "0.003946,0.004185,0.004665,0.005635,0.007581,0.011461", \
				        "0.003915,0.004167,0.004648,0.005621,0.007564,0.011447", \
				        "0.003886,0.004141,0.004625,0.005603,0.007549,0.011436", \
				        "0.003984,0.004225,0.004706,0.005664,0.007591,0.011451", \
				        "0.004568,0.004781,0.005221,0.006125,0.007977,0.011754", \
				        "0.006339,0.006514,0.006882,0.007667,0.009345,0.012901");
			}
			fall_power(Power_X1) {
				values ("0.002496,0.002255,0.001773,0.000811,-0.001111,-0.004975", \
				        "0.002497,0.002250,0.001769,0.000811,-0.001112,-0.004972", \
				        "0.002476,0.002254,0.001772,0.000815,-0.001107,-0.004962", \
				        "0.002524,0.002286,0.001803,0.000836,-0.001092,-0.004953", \
				        "0.002636,0.002386,0.001901,0.000917,-0.001035,-0.004912", \
				        "0.002997,0.002740,0.002226,0.001210,-0.000796,-0.004743", \
				        "0.003929,0.003667,0.003125,0.002044,-0.000063,-0.004149", \
				        "0.006141,0.005850,0.005254,0.004093,0.001842,-0.002500");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2 & !C2 | B1 & !B2 & !C1";

			rise_power(Power_X1) {
				values ("0.004940,0.005197,0.005695,0.006668,0.008599,0.012477", \
				        "0.004948,0.005190,0.005690,0.006659,0.008592,0.012464", \
				        "0.004931,0.005171,0.005647,0.006622,0.008568,0.012440", \
				        "0.004906,0.005156,0.005637,0.006614,0.008553,0.012425", \
				        "0.004881,0.005132,0.005623,0.006591,0.008538,0.012422", \
				        "0.004961,0.005203,0.005685,0.006643,0.008580,0.012442", \
				        "0.005468,0.005695,0.006159,0.007079,0.008946,0.012737", \
				        "0.007151,0.007372,0.007732,0.008553,0.010256,0.013856");
			}
			fall_power(Power_X1) {
				values ("0.002499,0.002254,0.001777,0.000811,-0.001112,-0.004979", \
				        "0.002495,0.002250,0.001773,0.000811,-0.001115,-0.004980", \
				        "0.002495,0.002256,0.001771,0.000817,-0.001107,-0.004965", \
				        "0.002525,0.002285,0.001808,0.000839,-0.001090,-0.004954", \
				        "0.002640,0.002392,0.001898,0.000917,-0.001037,-0.004913", \
				        "0.002992,0.002731,0.002230,0.001212,-0.000797,-0.004732", \
				        "0.003938,0.003662,0.003118,0.002038,-0.000064,-0.004156", \
				        "0.006123,0.005830,0.005245,0.004085,0.001835,-0.002487");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & !C2";

			rise_power(Power_X1) {
				values ("0.003837,0.004081,0.004568,0.005542,0.007485,0.011359", \
				        "0.003821,0.004068,0.004563,0.005536,0.007482,0.011365", \
				        "0.003808,0.004065,0.004563,0.005536,0.007487,0.011366", \
				        "0.003794,0.004042,0.004522,0.005500,0.007451,0.011342", \
				        "0.003779,0.004027,0.004513,0.005489,0.007437,0.011318", \
				        "0.003804,0.004045,0.004531,0.005498,0.007436,0.011322", \
				        "0.004323,0.004542,0.004973,0.005875,0.007730,0.011537", \
				        "0.006476,0.006638,0.006972,0.007691,0.009261,0.012751");
			}
			fall_power(Power_X1) {
				values ("0.003882,0.003640,0.003161,0.002207,0.000294,-0.003540", \
				        "0.003864,0.003627,0.003148,0.002195,0.000282,-0.003558", \
				        "0.003861,0.003619,0.003139,0.002185,0.000272,-0.003559", \
				        "0.003873,0.003629,0.003149,0.002191,0.000277,-0.003562", \
				        "0.003963,0.003725,0.003241,0.002266,0.000336,-0.003529", \
				        "0.004316,0.004051,0.003560,0.002559,0.000577,-0.003342", \
				        "0.005359,0.005077,0.004537,0.003472,0.001383,-0.002693", \
				        "0.007881,0.007597,0.007008,0.005847,0.003595,-0.000772");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003504,0.003754,0.004240,0.005212,0.007151,0.011029", \
				        "0.003493,0.003737,0.004232,0.005206,0.007154,0.011031", \
				        "0.003476,0.003740,0.004231,0.005212,0.007158,0.011041", \
				        "0.003468,0.003708,0.004193,0.005172,0.007118,0.011001", \
				        "0.003443,0.003690,0.004183,0.005155,0.007102,0.010988", \
				        "0.003464,0.003704,0.004187,0.005157,0.007096,0.010983", \
				        "0.003948,0.004160,0.004591,0.005497,0.007360,0.011170", \
				        "0.006026,0.006172,0.006499,0.007215,0.008800,0.012314");
			}
			fall_power(Power_X1) {
				values ("0.003781,0.003546,0.003067,0.002118,0.000204,-0.003634", \
				        "0.003770,0.003528,0.003053,0.002102,0.000188,-0.003645", \
				        "0.003760,0.003519,0.003040,0.002087,0.000178,-0.003653", \
				        "0.003765,0.003526,0.003045,0.002091,0.000178,-0.003667", \
				        "0.003849,0.003608,0.003128,0.002159,0.000226,-0.003635", \
				        "0.004196,0.003938,0.003435,0.002431,0.000453,-0.003465", \
				        "0.005213,0.004926,0.004380,0.003311,0.001216,-0.002855", \
				        "0.007691,0.007394,0.006793,0.005624,0.003353,-0.001014");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004462,0.004702,0.005195,0.006167,0.008094,0.011980", \
				        "0.004449,0.004688,0.005180,0.006154,0.008093,0.011974", \
				        "0.004432,0.004688,0.005189,0.006165,0.008099,0.011991", \
				        "0.004417,0.004658,0.005142,0.006123,0.008067,0.011955", \
				        "0.004397,0.004644,0.005136,0.006110,0.008053,0.011942", \
				        "0.004409,0.004659,0.005140,0.006106,0.008042,0.011930", \
				        "0.004827,0.005043,0.005495,0.006415,0.008299,0.012118", \
				        "0.006756,0.006935,0.007289,0.008040,0.009674,0.013231");
			}
			fall_power(Power_X1) {
				values ("0.003777,0.003541,0.003073,0.002120,0.000207,-0.003628", \
				        "0.003765,0.003529,0.003057,0.002104,0.000189,-0.003639", \
				        "0.003758,0.003519,0.003042,0.002092,0.000184,-0.003650", \
				        "0.003766,0.003525,0.003049,0.002093,0.000175,-0.003658", \
				        "0.003853,0.003609,0.003126,0.002155,0.000226,-0.003630", \
				        "0.004195,0.003939,0.003434,0.002430,0.000444,-0.003462", \
				        "0.005203,0.004919,0.004380,0.003308,0.001212,-0.002855", \
				        "0.007688,0.007390,0.006790,0.005619,0.003345,-0.001014");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004800,0.005043,0.005531,0.006491,0.008428,0.012310", \
				        "0.004790,0.005037,0.005526,0.006491,0.008428,0.012303", \
				        "0.004786,0.005037,0.005537,0.006505,0.008442,0.012310", \
				        "0.004769,0.005020,0.005505,0.006473,0.008409,0.012299", \
				        "0.004766,0.005009,0.005493,0.006468,0.008412,0.012292", \
				        "0.004780,0.005024,0.005511,0.006479,0.008414,0.012295", \
				        "0.005216,0.005436,0.005901,0.006822,0.008705,0.012512", \
				        "0.007138,0.007317,0.007715,0.008525,0.010213,0.013760");
			}
			fall_power(Power_X1) {
				values ("0.003861,0.003629,0.003165,0.002207,0.000285,-0.003555", \
				        "0.003869,0.003623,0.003149,0.002187,0.000271,-0.003572", \
				        "0.003827,0.003614,0.003136,0.002173,0.000248,-0.003604", \
				        "0.003912,0.003609,0.003133,0.002169,0.000244,-0.003603", \
				        "0.003887,0.003636,0.003159,0.002199,0.000277,-0.003581", \
				        "0.004064,0.003823,0.003332,0.002350,0.000397,-0.003486", \
				        "0.004815,0.004522,0.004005,0.002966,0.000933,-0.003066", \
				        "0.006745,0.006486,0.005904,0.004778,0.002582,-0.001658");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004468,0.004714,0.005203,0.006171,0.008100,0.011976", \
				        "0.004468,0.004703,0.005196,0.006164,0.008101,0.011972", \
				        "0.004466,0.004710,0.005205,0.006178,0.008112,0.011985", \
				        "0.004449,0.004697,0.005176,0.006140,0.008083,0.011963", \
				        "0.004439,0.004689,0.005166,0.006134,0.008079,0.011956", \
				        "0.004441,0.004690,0.005173,0.006140,0.008071,0.011959", \
				        "0.004842,0.005076,0.005523,0.006446,0.008329,0.012149", \
				        "0.006655,0.006873,0.007256,0.008070,0.009762,0.013313");
			}
			fall_power(Power_X1) {
				values ("0.003779,0.003545,0.003068,0.002112,0.000196,-0.003649", \
				        "0.003757,0.003528,0.003049,0.002096,0.000178,-0.003667", \
				        "0.003750,0.003527,0.003033,0.002069,0.000151,-0.003698", \
				        "0.003737,0.003503,0.003030,0.002067,0.000145,-0.003706", \
				        "0.003773,0.003531,0.003055,0.002094,0.000169,-0.003681", \
				        "0.003953,0.003714,0.003218,0.002236,0.000285,-0.003594", \
				        "0.004652,0.004387,0.003864,0.002830,0.000795,-0.003201", \
				        "0.006592,0.006314,0.005729,0.004593,0.002389,-0.001853");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005418,0.005651,0.006143,0.007118,0.009051,0.012922", \
				        "0.005423,0.005650,0.006140,0.007112,0.009046,0.012925", \
				        "0.005407,0.005652,0.006148,0.007121,0.009057,0.012929", \
				        "0.005393,0.005635,0.006115,0.007087,0.009030,0.012909", \
				        "0.005385,0.005625,0.006114,0.007083,0.009031,0.012905", \
				        "0.005379,0.005628,0.006119,0.007091,0.009026,0.012905", \
				        "0.005750,0.005979,0.006447,0.007380,0.009276,0.013097", \
				        "0.007486,0.007678,0.008086,0.008920,0.010649,0.014226");
			}
			fall_power(Power_X1) {
				values ("0.003775,0.003539,0.003070,0.002110,0.000198,-0.003648", \
				        "0.003755,0.003530,0.003055,0.002094,0.000180,-0.003666", \
				        "0.003752,0.003514,0.003038,0.002072,0.000153,-0.003695", \
				        "0.003756,0.003509,0.003028,0.002069,0.000146,-0.003703", \
				        "0.003769,0.003529,0.003053,0.002094,0.000173,-0.003677", \
				        "0.003960,0.003705,0.003218,0.002237,0.000285,-0.003594", \
				        "0.004662,0.004389,0.003861,0.002829,0.000790,-0.003199", \
				        "0.006595,0.006310,0.005725,0.004593,0.002386,-0.001855");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & !B2 & C2";

			rise_power(Power_X1) {
				values ("0.002694,0.002935,0.003418,0.004390,0.006334,0.010207", \
				        "0.002693,0.002940,0.003425,0.004396,0.006329,0.010214", \
				        "0.002709,0.002959,0.003446,0.004410,0.006338,0.010217", \
				        "0.002811,0.003046,0.003527,0.004475,0.006384,0.010244", \
				        "0.003060,0.003291,0.003750,0.004675,0.006549,0.010362", \
				        "0.003646,0.003860,0.004284,0.005173,0.006990,0.010721", \
				        "0.004970,0.005149,0.005527,0.006338,0.008047,0.011625", \
				        "0.007930,0.008072,0.008344,0.008985,0.010481,0.013812");
			}
			fall_power(Power_X1) {
				values ("0.000764,0.000519,0.000034,-0.000928,-0.002850,-0.006718", \
				        "0.000766,0.000533,0.000045,-0.000919,-0.002846,-0.006711", \
				        "0.000782,0.000542,0.000069,-0.000895,-0.002824,-0.006687", \
				        "0.000853,0.000609,0.000125,-0.000854,-0.002797,-0.006667", \
				        "0.001072,0.000812,0.000296,-0.000717,-0.002696,-0.006603", \
				        "0.001672,0.001376,0.000810,-0.000289,-0.002367,-0.006378", \
				        "0.003074,0.002755,0.002121,0.000901,-0.001389,-0.005645", \
				        "0.006164,0.005793,0.005092,0.003734,0.001181,-0.003541");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & B2 & C2";

			rise_power(Power_X1) {
				values ("0.002516,0.002757,0.003236,0.004210,0.006152,0.010029", \
				        "0.002513,0.002763,0.003241,0.004213,0.006154,0.010028", \
				        "0.002534,0.002772,0.003268,0.004230,0.006160,0.010030", \
				        "0.002624,0.002868,0.003344,0.004288,0.006199,0.010064", \
				        "0.002868,0.003094,0.003553,0.004476,0.006352,0.010173", \
				        "0.003416,0.003624,0.004063,0.004948,0.006776,0.010499", \
				        "0.004622,0.004807,0.005200,0.006016,0.007760,0.011351", \
				        "0.007336,0.007459,0.007764,0.008439,0.009971,0.013363");
			}
			fall_power(Power_X1) {
				values ("0.000762,0.000521,0.000031,-0.000926,-0.002854,-0.006718", \
				        "0.000763,0.000531,0.000047,-0.000918,-0.002843,-0.006710", \
				        "0.000790,0.000549,0.000069,-0.000891,-0.002823,-0.006683", \
				        "0.000865,0.000618,0.000130,-0.000848,-0.002787,-0.006659", \
				        "0.001080,0.000815,0.000300,-0.000714,-0.002691,-0.006599", \
				        "0.001643,0.001348,0.000787,-0.000304,-0.002379,-0.006379", \
				        "0.002947,0.002629,0.002005,0.000802,-0.001466,-0.005699", \
				        "0.005785,0.005439,0.004754,0.003430,0.000921,-0.003732");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & B1 & !B2 & C2";

			rise_power(Power_X1) {
				values ("0.003506,0.003749,0.004223,0.005196,0.007139,0.011017", \
				        "0.003501,0.003747,0.004229,0.005201,0.007140,0.011023", \
				        "0.003526,0.003768,0.004250,0.005218,0.007149,0.011019", \
				        "0.003597,0.003846,0.004318,0.005273,0.007194,0.011059", \
				        "0.003814,0.004045,0.004514,0.005441,0.007340,0.011159", \
				        "0.004329,0.004540,0.004989,0.005893,0.007728,0.011480", \
				        "0.005474,0.005657,0.006077,0.006926,0.008681,0.012314", \
				        "0.008059,0.008227,0.008543,0.009267,0.010856,0.014273");
			}
			fall_power(Power_X1) {
				values ("0.000761,0.000521,0.000033,-0.000921,-0.002855,-0.006721", \
				        "0.000768,0.000532,0.000050,-0.000913,-0.002844,-0.006712", \
				        "0.000791,0.000545,0.000076,-0.000889,-0.002825,-0.006683", \
				        "0.000863,0.000617,0.000136,-0.000847,-0.002783,-0.006665", \
				        "0.001064,0.000804,0.000294,-0.000718,-0.002693,-0.006596", \
				        "0.001606,0.001315,0.000761,-0.000316,-0.002387,-0.006392", \
				        "0.002859,0.002552,0.001945,0.000764,-0.001483,-0.005700", \
				        "0.005669,0.005324,0.004658,0.003354,0.000869,-0.003753");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & !B2 & C1";

			rise_power(Power_X1) {
				values ("0.003616,0.003855,0.004343,0.005310,0.007243,0.011124", \
				        "0.003620,0.003862,0.004344,0.005311,0.007244,0.011116", \
				        "0.003636,0.003874,0.004362,0.005327,0.007257,0.011124", \
				        "0.003732,0.003966,0.004439,0.005391,0.007297,0.011159", \
				        "0.003971,0.004201,0.004669,0.005589,0.007471,0.011288", \
				        "0.004562,0.004759,0.005201,0.006090,0.007918,0.011650", \
				        "0.005792,0.006017,0.006421,0.007267,0.009009,0.012597", \
				        "0.008552,0.008727,0.009092,0.009866,0.011459,0.014847");
			}
			fall_power(Power_X1) {
				values ("0.000757,0.000519,0.000034,-0.000934,-0.002859,-0.006721", \
				        "0.000750,0.000479,0.000035,-0.000925,-0.002855,-0.006718", \
				        "0.000742,0.000500,0.000026,-0.000938,-0.002865,-0.006728", \
				        "0.000754,0.000520,0.000039,-0.000926,-0.002861,-0.006725", \
				        "0.000881,0.000629,0.000132,-0.000852,-0.002803,-0.006680", \
				        "0.001324,0.001046,0.000497,-0.000559,-0.002600,-0.006547", \
				        "0.002471,0.002156,0.001552,0.000372,-0.001849,-0.006021", \
				        "0.005084,0.004748,0.004059,0.002746,0.000268,-0.004340");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & B2 & C1";

			rise_power(Power_X1) {
				values ("0.003447,0.003676,0.004158,0.005133,0.007064,0.010936", \
				        "0.003439,0.003682,0.004162,0.005130,0.007068,0.010942", \
				        "0.003456,0.003694,0.004183,0.005145,0.007077,0.010950", \
				        "0.003555,0.003779,0.004258,0.005214,0.007127,0.011001", \
				        "0.003782,0.004004,0.004475,0.005397,0.007283,0.011095", \
				        "0.004300,0.004522,0.004972,0.005866,0.007702,0.011424", \
				        "0.005470,0.005682,0.006100,0.006947,0.008698,0.012309", \
				        "0.007983,0.008166,0.008549,0.009326,0.010962,0.014384");
			}
			fall_power(Power_X1) {
				values ("0.000755,0.000519,0.000032,-0.000931,-0.002861,-0.006726", \
				        "0.000752,0.000514,0.000030,-0.000931,-0.002859,-0.006722", \
				        "0.000746,0.000510,0.000029,-0.000934,-0.002861,-0.006724", \
				        "0.000766,0.000527,0.000046,-0.000920,-0.002854,-0.006720", \
				        "0.000900,0.000640,0.000143,-0.000841,-0.002793,-0.006671", \
				        "0.001322,0.001041,0.000498,-0.000558,-0.002594,-0.006535", \
				        "0.002374,0.002069,0.001471,0.000317,-0.001888,-0.006043", \
				        "0.004777,0.004441,0.003781,0.002507,0.000079,-0.004464");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & B1 & !B2 & C1";

			rise_power(Power_X1) {
				values ("0.004429,0.004667,0.005142,0.006113,0.008055,0.011919", \
				        "0.004422,0.004674,0.005149,0.006115,0.008055,0.011928", \
				        "0.004441,0.004684,0.005166,0.006132,0.008067,0.011928", \
				        "0.004523,0.004762,0.005228,0.006185,0.008106,0.011964", \
				        "0.004729,0.004953,0.005422,0.006366,0.008253,0.012083", \
				        "0.005236,0.005452,0.005907,0.006813,0.008662,0.012404", \
				        "0.006351,0.006578,0.006999,0.007864,0.009637,0.013263", \
				        "0.008804,0.009009,0.009397,0.010197,0.011848,0.015312");
			}
			fall_power(Power_X1) {
				values ("0.000761,0.000519,0.000035,-0.000929,-0.002858,-0.006722", \
				        "0.000752,0.000515,0.000034,-0.000929,-0.002762,-0.006721", \
				        "0.000752,0.000511,0.000029,-0.000929,-0.002861,-0.006728", \
				        "0.000766,0.000527,0.000049,-0.000919,-0.002853,-0.006720", \
				        "0.000895,0.000640,0.000138,-0.000844,-0.002792,-0.006669", \
				        "0.001283,0.001013,0.000479,-0.000567,-0.002595,-0.006541", \
				        "0.002315,0.002019,0.001431,0.000282,-0.001904,-0.006049", \
				        "0.004689,0.004357,0.003711,0.002446,0.000033,-0.004489");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI221_X2
 Cell Description	: Combinational cell (AOI221_X2) with drive strength X2
*******************************************************************************************/

cell (AOI221_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 24110.208063;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 8638.283000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 7730.159000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 8994.048000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 16737.600000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 21778.740000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 16738.520000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 20487.110000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 24538.860000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 21778.750000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 16763.920000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 22134.520000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 25771.370000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 34918.230000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 25772.290000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 29560.990000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 33650.980000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 8994.072000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 16763.000000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 9350.016000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 25769.310000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 22134.530000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 25771.370000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 29558.700000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 33649.950000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 24793.450000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 24640.510000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 33797.590000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 33647.900000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 33800.580000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 33648.920000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 36603.950000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 42608.440000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001101;
		fall_capacitance	: 0.001015;
		rise_capacitance	: 0.001187;
		fall_capacitance_range		(0.000851, 0.001224);
		rise_capacitance_range		(0.000998, 0.001417);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000009,0.000007,0.000007,0.000006,0.000005,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000123,0.000099,0.000072,0.000049,0.000033,0.000023,0.000016,0.000010");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000123,0.000099,0.000072,0.000049,0.000033,0.000023,0.000016,0.000010");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000010,0.000008,0.000008,0.000007,0.000006,0.000005,0.000002");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000010,0.000008,0.000008,0.000007,0.000006,0.000005,0.000002");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000115,0.000089,0.000062,0.000042,0.000029,0.000021,0.000015,0.000009");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001188;
		fall_capacitance	: 0.001172;
		rise_capacitance	: 0.001205;
		fall_capacitance_range		(0.000984, 0.001387);
		rise_capacitance_range		(0.001055, 0.001479);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000016,0.000010,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000012,0.000010,0.000008,0.000007,0.000006,0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000012,0.000010,0.000008,0.000007,0.000006,0.000004");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000016,0.000011,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000034,0.000026,0.000020,0.000015,0.000011,0.000008,0.000003");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000016,0.000010,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000013,0.000007,0.000004,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000012,0.000007,0.000004,0.000002,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000012,0.000007,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000013,0.000007,0.000004,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000012,0.000010,0.000008,0.000007,0.000006,0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000013,0.000007,0.000004,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000013,0.000007,0.000004,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001221;
		fall_capacitance	: 0.001175;
		rise_capacitance	: 0.001268;
		fall_capacitance_range		(0.000938, 0.001352);
		rise_capacitance_range		(0.001086, 0.001474);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000031,0.000024,0.000019,0.000015,0.000012,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000015,0.000010,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000015,0.000010,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000033,0.000026,0.000020,0.000015,0.000011,0.000008,0.000003");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000016,0.000011,0.000007,0.000004,0.000002,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000031,0.000024,0.000019,0.000015,0.000012,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000011,0.000007,0.000004,0.000002,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000031,0.000024,0.000019,0.000015,0.000012,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001194;
		fall_capacitance	: 0.001080;
		rise_capacitance	: 0.001308;
		fall_capacitance_range		(0.000949, 0.001409);
		rise_capacitance_range		(0.001054, 0.001681);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000034,0.000028,0.000021,0.000015,0.000011,0.000008,0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000010,0.000006,0.000004,0.000002,0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000033,0.000026,0.000019,0.000014,0.000010,0.000008,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000014,0.000010,0.000007,0.000005,0.000003,0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000011,0.000007,0.000004,0.000002,0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000011,0.000007,0.000004,0.000002,0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000034,0.000028,0.000021,0.000015,0.000011,0.000008,0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004,-0.000008");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001197;
		fall_capacitance	: 0.001057;
		rise_capacitance	: 0.001337;
		fall_capacitance_range		(0.000922, 0.001319);
		rise_capacitance_range		(0.001101, 0.001648);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000048,0.000038,0.000029,0.000021,0.000015,0.000010,0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000009,0.000006,0.000005,0.000004,0.000002,-0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000048,0.000038,0.000029,0.000021,0.000015,0.000010,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000000,-0.000001,-0.000003,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000048,0.000037,0.000028,0.000020,0.000015,0.000010,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | A) | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025878,0.029889,0.034844,0.044733,0.063713,0.100941", \
				        "0.029194,0.033099,0.038091,0.047907,0.066965,0.104147", \
				        "0.036328,0.039972,0.044835,0.054572,0.073591,0.110682", \
				        "0.046951,0.051893,0.057818,0.068422,0.087071,0.124095", \
				        "0.057985,0.064754,0.072835,0.087292,0.111858,0.151787", \
				        "0.067159,0.076017,0.087071,0.106352,0.139720,0.194394", \
				        "0.069189,0.080736,0.095131,0.120863,0.165364,0.239238", \
				        "0.053548,0.068814,0.087528,0.121556,0.180641,0.278499");
			}
			cell_rise(Timing_X2) {
				values ("0.110151,0.121765,0.137336,0.167965,0.228867,0.349867", \
				        "0.113327,0.124965,0.140436,0.171154,0.232084,0.353097", \
				        "0.119476,0.131068,0.146323,0.177058,0.238069,0.359162", \
				        "0.130335,0.142188,0.157646,0.188386,0.249455,0.370602", \
				        "0.151805,0.163557,0.179191,0.209884,0.270965,0.392233", \
				        "0.186502,0.200305,0.218617,0.252666,0.315901,0.436698", \
				        "0.242168,0.259758,0.281508,0.322492,0.397016,0.529634", \
				        "0.337662,0.359769,0.385724,0.436355,0.526193,0.684190");
			}
			fall_transition(Timing_X2) {
				values ("0.028269,0.030909,0.034913,0.042733,0.058351,0.089702", \
				        "0.027989,0.030663,0.034825,0.042683,0.058330,0.089705", \
				        "0.028810,0.031112,0.034913,0.042565,0.058321,0.089704", \
				        "0.037060,0.038458,0.041030,0.046299,0.059209,0.089696", \
				        "0.053754,0.055589,0.058265,0.063289,0.072674,0.094660", \
				        "0.079997,0.082461,0.085784,0.092107,0.104422,0.126575", \
				        "0.105368,0.109653,0.115194,0.125204,0.143447,0.183577", \
				        "0.168843,0.174740,0.182555,0.196370,0.220741,0.261853");
			}
			rise_transition(Timing_X2) {
				values ("0.065061,0.075639,0.089685,0.117212,0.172107,0.281101", \
				        "0.065043,0.075633,0.089705,0.117263,0.172109,0.281114", \
				        "0.065064,0.075656,0.089746,0.117197,0.172098,0.281125", \
				        "0.065091,0.075667,0.089754,0.117257,0.172103,0.281124", \
				        "0.068161,0.077822,0.090942,0.117485,0.172089,0.281120", \
				        "0.084707,0.093919,0.106151,0.129296,0.177014,0.281208", \
				        "0.113569,0.123616,0.136637,0.161589,0.208998,0.300368", \
				        "0.161366,0.172681,0.187088,0.214755,0.266957,0.364636");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !C1 & !C2 | !B1 & !B2 & !C2 | !B1 & !B2 & !C1";
			sdf_cond	   : "(B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025552,0.029458,0.034507,0.044346,0.063318,0.100460", \
				        "0.028848,0.032677,0.037700,0.047510,0.066517,0.103639", \
				        "0.035939,0.039581,0.044428,0.054131,0.073096,0.110098", \
				        "0.046402,0.051283,0.057236,0.067920,0.086619,0.123527", \
				        "0.057295,0.063968,0.072079,0.086570,0.111246,0.151255", \
				        "0.066771,0.075505,0.086351,0.105678,0.139026,0.193689", \
				        "0.069189,0.080736,0.095131,0.120863,0.165364,0.238834", \
				        "0.053548,0.068814,0.087528,0.121556,0.180641,0.278499");
			}
			cell_rise(Timing_X2) {
				values ("0.076926,0.086446,0.099201,0.124231,0.174003,0.273130", \
				        "0.080332,0.089833,0.102497,0.127567,0.177416,0.276554", \
				        "0.086788,0.096301,0.108816,0.134002,0.183883,0.283085", \
				        "0.098132,0.107888,0.120617,0.145739,0.195628,0.294891", \
				        "0.117997,0.128657,0.142404,0.168066,0.217989,0.317298", \
				        "0.146180,0.159103,0.175883,0.206641,0.262466,0.363030", \
				        "0.191518,0.208138,0.228525,0.266197,0.333444,0.450650", \
				        "0.268486,0.289623,0.314710,0.362015,0.444660,0.586656");
			}
			fall_transition(Timing_X2) {
				values ("0.021535,0.024730,0.028903,0.037099,0.053034,0.084566", \
				        "0.021253,0.024559,0.028764,0.037039,0.053030,0.084569", \
				        "0.022085,0.024941,0.028905,0.036872,0.053016,0.084573", \
				        "0.030421,0.032412,0.035287,0.040726,0.053954,0.084559", \
				        "0.045338,0.047652,0.050906,0.056871,0.067428,0.089568", \
				        "0.068089,0.071232,0.075286,0.083059,0.096952,0.120748", \
				        "0.105368,0.109653,0.115194,0.125204,0.143447,0.174827", \
				        "0.168843,0.174740,0.182555,0.196370,0.220741,0.261853");
			}
			rise_transition(Timing_X2) {
				values ("0.044666,0.053320,0.064898,0.087555,0.132735,0.222814", \
				        "0.044662,0.053286,0.064844,0.087576,0.132691,0.222784", \
				        "0.044672,0.053280,0.064983,0.087595,0.132764,0.222790", \
				        "0.044983,0.053477,0.064922,0.087601,0.132690,0.222798", \
				        "0.052477,0.059642,0.069511,0.089562,0.132843,0.222810", \
				        "0.069422,0.076975,0.087238,0.106440,0.143606,0.224825", \
				        "0.097583,0.106050,0.117045,0.137857,0.177800,0.253706", \
				        "0.145126,0.154556,0.166804,0.190142,0.234237,0.317077");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025321,0.029144,0.034203,0.044034,0.062997,0.100042", \
				        "0.028681,0.032416,0.037480,0.047254,0.066217,0.103262", \
				        "0.035790,0.039455,0.044287,0.053956,0.072833,0.109799", \
				        "0.046180,0.051022,0.056775,0.067579,0.086437,0.123198", \
				        "0.056690,0.063382,0.071423,0.086024,0.110784,0.150965", \
				        "0.064941,0.073756,0.084610,0.104308,0.137954,0.192927", \
				        "0.063617,0.075521,0.090178,0.116691,0.162202,0.236632", \
				        "0.038214,0.054442,0.073915,0.109590,0.170886,0.271350");
			}
			cell_rise(Timing_X2) {
				values ("0.077586,0.089128,0.104600,0.135108,0.195639,0.316297", \
				        "0.080675,0.092257,0.107725,0.138238,0.198871,0.319518", \
				        "0.086721,0.098339,0.113593,0.144187,0.204866,0.325637", \
				        "0.097489,0.109353,0.124856,0.155437,0.216170,0.337080", \
				        "0.116135,0.129158,0.145890,0.177000,0.237734,0.358664", \
				        "0.142751,0.158690,0.178874,0.215853,0.282077,0.403245", \
				        "0.188839,0.209286,0.233500,0.278304,0.357151,0.494300", \
				        "0.271384,0.296483,0.326709,0.381865,0.478008,0.642432");
			}
			fall_transition(Timing_X2) {
				values ("0.017312,0.020483,0.024459,0.032357,0.048106,0.079671", \
				        "0.017051,0.020247,0.024358,0.032309,0.048102,0.079660", \
				        "0.017999,0.020759,0.024378,0.032145,0.048086,0.079644", \
				        "0.024943,0.027426,0.030689,0.036002,0.048975,0.079663", \
				        "0.036417,0.039658,0.043796,0.050645,0.062255,0.084648", \
				        "0.055379,0.059665,0.065023,0.074167,0.089718,0.115097", \
				        "0.087527,0.093422,0.100699,0.113077,0.133706,0.167341", \
				        "0.142967,0.151656,0.162031,0.179454,0.207824,0.252461");
			}
			rise_transition(Timing_X2) {
				values ("0.046962,0.057175,0.070920,0.098146,0.152467,0.260781", \
				        "0.046971,0.057180,0.070899,0.098168,0.152421,0.260754", \
				        "0.046977,0.057186,0.070871,0.098139,0.152431,0.260779", \
				        "0.047284,0.057368,0.070977,0.098172,0.152466,0.260786", \
				        "0.055129,0.063628,0.075149,0.099778,0.152495,0.260784", \
				        "0.073264,0.081866,0.093462,0.116064,0.160976,0.261443", \
				        "0.103021,0.112313,0.124554,0.148614,0.195184,0.285081", \
				        "0.152636,0.162560,0.175751,0.202120,0.253040,0.349799");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 | B1 & !B2 & !C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025878,0.029889,0.034844,0.044733,0.063713,0.100941", \
				        "0.029194,0.033099,0.038091,0.047907,0.066965,0.104147", \
				        "0.036328,0.039972,0.044835,0.054572,0.073591,0.110682", \
				        "0.046951,0.051893,0.057818,0.068422,0.087071,0.124095", \
				        "0.057985,0.064754,0.072835,0.087292,0.111858,0.151787", \
				        "0.067159,0.076017,0.087071,0.106352,0.139720,0.194394", \
				        "0.068058,0.079788,0.094353,0.120414,0.165249,0.239238", \
				        "0.048596,0.063614,0.082597,0.117017,0.177023,0.276346");
			}
			cell_rise(Timing_X2) {
				values ("0.110151,0.121765,0.137336,0.167965,0.228867,0.349867", \
				        "0.113327,0.124965,0.140436,0.171154,0.232084,0.353097", \
				        "0.119476,0.131068,0.146323,0.177058,0.238069,0.359162", \
				        "0.130335,0.142188,0.157646,0.188386,0.249455,0.370602", \
				        "0.151805,0.163557,0.179191,0.209884,0.270965,0.392233", \
				        "0.186502,0.200305,0.218617,0.252666,0.315901,0.436698", \
				        "0.242168,0.259758,0.281508,0.322492,0.397016,0.529634", \
				        "0.337662,0.359769,0.385724,0.436355,0.526193,0.684190");
			}
			fall_transition(Timing_X2) {
				values ("0.028269,0.030909,0.034913,0.042733,0.058351,0.089702", \
				        "0.027989,0.030663,0.034825,0.042683,0.058330,0.089705", \
				        "0.028810,0.031112,0.034913,0.042565,0.058321,0.089704", \
				        "0.037060,0.038458,0.041030,0.046299,0.059209,0.089696", \
				        "0.053754,0.055589,0.058265,0.063289,0.072674,0.094660", \
				        "0.079997,0.082461,0.085784,0.092107,0.104422,0.126575", \
				        "0.123364,0.126455,0.130723,0.138923,0.154734,0.183577", \
				        "0.196367,0.200364,0.206421,0.217556,0.238425,0.275776");
			}
			rise_transition(Timing_X2) {
				values ("0.065061,0.075639,0.089685,0.117212,0.172107,0.281101", \
				        "0.065043,0.075633,0.089705,0.117263,0.172109,0.281114", \
				        "0.065064,0.075656,0.089746,0.117197,0.172098,0.281125", \
				        "0.065091,0.075667,0.089754,0.117257,0.172103,0.281124", \
				        "0.068161,0.077822,0.090942,0.117485,0.172089,0.281120", \
				        "0.084707,0.093919,0.106151,0.129296,0.177014,0.281208", \
				        "0.113569,0.123616,0.136637,0.161589,0.208998,0.300368", \
				        "0.161366,0.172681,0.187088,0.214755,0.266957,0.364636");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.038556,0.043240,0.049446,0.061441,0.084492,0.128848", \
				        "0.041471,0.046021,0.052258,0.064282,0.087285,0.131638", \
				        "0.047675,0.052252,0.058209,0.070249,0.093203,0.137411", \
				        "0.060871,0.065652,0.071393,0.082941,0.105461,0.149587", \
				        "0.076901,0.083269,0.091031,0.105746,0.131095,0.174914", \
				        "0.092439,0.100653,0.110999,0.130296,0.164231,0.220878", \
				        "0.101972,0.113003,0.126641,0.151810,0.196374,0.271645", \
				        "0.095830,0.110265,0.127714,0.160577,0.218697,0.317379");
			}
			cell_rise(Timing_X2) {
				values ("0.084464,0.094633,0.108096,0.134393,0.186706,0.290715", \
				        "0.088092,0.098141,0.111587,0.137987,0.190357,0.294462", \
				        "0.094756,0.104890,0.118247,0.144682,0.197119,0.301309", \
				        "0.106464,0.116618,0.129963,0.156301,0.208642,0.312890", \
				        "0.124371,0.135504,0.149689,0.176377,0.228709,0.332922", \
				        "0.146263,0.159296,0.176137,0.207376,0.264655,0.370099", \
				        "0.178969,0.195621,0.215859,0.253233,0.320138,0.439705", \
				        "0.243860,0.265090,0.289899,0.335830,0.415436,0.553593");
			}
			fall_transition(Timing_X2) {
				values ("0.027637,0.031485,0.036433,0.045821,0.064340,0.101192", \
				        "0.027468,0.031372,0.036310,0.045693,0.064283,0.101197", \
				        "0.026646,0.030725,0.035825,0.045524,0.064257,0.101147", \
				        "0.030627,0.033532,0.037691,0.045967,0.063955,0.101103", \
				        "0.042789,0.046282,0.050715,0.058161,0.071595,0.102416", \
				        "0.062719,0.067171,0.072835,0.082642,0.099470,0.127690", \
				        "0.095029,0.101376,0.108989,0.122109,0.144414,0.181131", \
				        "0.150251,0.159221,0.169623,0.187773,0.217947,0.266522");
			}
			rise_transition(Timing_X2) {
				values ("0.044498,0.053152,0.064835,0.087863,0.133965,0.225716", \
				        "0.044501,0.053118,0.064837,0.087860,0.133971,0.225711", \
				        "0.044510,0.053150,0.064918,0.087874,0.133944,0.225730", \
				        "0.044647,0.053256,0.064942,0.087950,0.133969,0.225716", \
				        "0.049620,0.057225,0.067589,0.089006,0.133961,0.225725", \
				        "0.063671,0.071524,0.082053,0.102441,0.142218,0.227141", \
				        "0.094276,0.101087,0.110865,0.130999,0.171666,0.251922", \
				        "0.148486,0.155126,0.164635,0.184337,0.224796,0.306916");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.032282,0.037243,0.043752,0.056309,0.079964,0.125009", \
				        "0.035341,0.040177,0.046684,0.059163,0.082795,0.127785", \
				        "0.042086,0.046763,0.052935,0.065221,0.088692,0.133524", \
				        "0.055174,0.060319,0.066486,0.078345,0.101077,0.145678", \
				        "0.069758,0.076647,0.085057,0.100278,0.126705,0.171118", \
				        "0.083066,0.091996,0.103005,0.123272,0.158364,0.216419", \
				        "0.089178,0.100951,0.115454,0.141862,0.188047,0.265242", \
				        "0.077413,0.092626,0.111039,0.145423,0.205663,0.307025");
			}
			cell_rise(Timing_X2) {
				values ("0.092504,0.104324,0.119882,0.150473,0.211161,0.331890", \
				        "0.096060,0.107755,0.123295,0.153957,0.214766,0.335582", \
				        "0.102661,0.114483,0.129966,0.160593,0.221481,0.342395", \
				        "0.114251,0.126019,0.141530,0.172037,0.232848,0.353887", \
				        "0.131806,0.144422,0.160481,0.191239,0.251983,0.372942", \
				        "0.153097,0.167535,0.186167,0.220805,0.285299,0.406529", \
				        "0.185891,0.203493,0.225069,0.265233,0.338108,0.471194", \
				        "0.251779,0.273996,0.299833,0.348049,0.432337,0.581573");
			}
			fall_transition(Timing_X2) {
				values ("0.026388,0.030455,0.035528,0.045144,0.063790,0.100607", \
				        "0.025908,0.030043,0.035249,0.044956,0.063775,0.100538", \
				        "0.025142,0.029191,0.034391,0.044466,0.063547,0.100549", \
				        "0.030763,0.033634,0.037461,0.045310,0.062909,0.100375", \
				        "0.043468,0.046910,0.051186,0.058574,0.071706,0.101849", \
				        "0.064270,0.068594,0.074104,0.083545,0.100070,0.127791", \
				        "0.098286,0.104395,0.111741,0.124457,0.145990,0.181898", \
				        "0.156700,0.165487,0.175506,0.193080,0.222124,0.269248");
			}
			rise_transition(Timing_X2) {
				values ("0.046966,0.057195,0.070927,0.098146,0.152424,0.260786", \
				        "0.046966,0.057203,0.070883,0.098166,0.152425,0.260782", \
				        "0.046982,0.057222,0.070987,0.098171,0.152409,0.260776", \
				        "0.047123,0.057318,0.071017,0.098130,0.152466,0.260785", \
				        "0.051210,0.060395,0.073000,0.098765,0.152440,0.260761", \
				        "0.063591,0.073022,0.085618,0.110099,0.158340,0.261337", \
				        "0.091299,0.099891,0.111799,0.135934,0.184687,0.280920", \
				        "0.143747,0.151831,0.163260,0.186672,0.234394,0.331729");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.032686,0.037750,0.044306,0.056875,0.080525,0.125619", \
				        "0.035739,0.040685,0.047211,0.059724,0.083360,0.128365", \
				        "0.042438,0.047232,0.053369,0.065773,0.089237,0.134138", \
				        "0.055623,0.060834,0.067187,0.078766,0.101593,0.146278", \
				        "0.070490,0.077389,0.085865,0.101095,0.127329,0.171688", \
				        "0.084350,0.093233,0.104333,0.124420,0.159364,0.217232", \
				        "0.091602,0.103213,0.117670,0.143831,0.189723,0.266633", \
				        "0.082376,0.097227,0.115356,0.149116,0.208796,0.309646");
			}
			cell_rise(Timing_X2) {
				values ("0.108600,0.120371,0.135949,0.166594,0.227409,0.348266", \
				        "0.112226,0.123853,0.139429,0.170089,0.231006,0.351947", \
				        "0.118761,0.130569,0.146092,0.176824,0.237786,0.358839", \
				        "0.130308,0.142052,0.157540,0.188200,0.249158,0.370277", \
				        "0.148904,0.160975,0.176723,0.207382,0.268261,0.389389", \
				        "0.173061,0.186744,0.204657,0.238494,0.301915,0.422911", \
				        "0.209711,0.226067,0.246571,0.285408,0.356874,0.488430", \
				        "0.281211,0.301550,0.325706,0.371731,0.453577,0.600685");
			}
			fall_transition(Timing_X2) {
				values ("0.034167,0.037624,0.042334,0.051687,0.070047,0.106472", \
				        "0.033632,0.037172,0.042035,0.051523,0.069957,0.106435", \
				        "0.032761,0.036239,0.041110,0.051031,0.069787,0.106416", \
				        "0.037985,0.040401,0.043955,0.051698,0.069269,0.106248", \
				        "0.053324,0.055794,0.059141,0.065550,0.077811,0.107708", \
				        "0.077789,0.081062,0.085289,0.093181,0.107876,0.133986", \
				        "0.117429,0.121884,0.127568,0.137978,0.156938,0.190369", \
				        "0.183916,0.190006,0.197963,0.212308,0.237680,0.281203");
			}
			rise_transition(Timing_X2) {
				values ("0.055728,0.066170,0.080040,0.107487,0.161991,0.270645", \
				        "0.055729,0.066196,0.080135,0.107431,0.162014,0.270647", \
				        "0.055731,0.066186,0.080032,0.107459,0.162022,0.270630", \
				        "0.055789,0.066219,0.080156,0.107436,0.162024,0.270663", \
				        "0.058304,0.068039,0.081246,0.107683,0.161994,0.270643", \
				        "0.070213,0.080077,0.092889,0.117521,0.166648,0.270935", \
				        "0.095606,0.105106,0.117748,0.142755,0.192245,0.288855", \
				        "0.145476,0.154842,0.167268,0.191855,0.240955,0.339507");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042049,0.046798,0.052937,0.064972,0.088010,0.132369", \
				        "0.044621,0.049372,0.055556,0.067544,0.090546,0.134960", \
				        "0.049575,0.054360,0.060558,0.072503,0.095477,0.139939", \
				        "0.059405,0.064229,0.070453,0.082542,0.105428,0.149836", \
				        "0.073741,0.079397,0.086396,0.099807,0.124458,0.169404", \
				        "0.089471,0.096993,0.106062,0.122979,0.152864,0.204530", \
				        "0.100968,0.110654,0.122992,0.145766,0.185492,0.251709", \
				        "0.095480,0.109252,0.125756,0.156433,0.210113,0.299554");
			}
			cell_rise(Timing_X2) {
				values ("0.098004,0.108101,0.121423,0.147820,0.200160,0.304294", \
				        "0.101804,0.111823,0.125101,0.151467,0.203846,0.308019", \
				        "0.108643,0.118772,0.131978,0.158383,0.210853,0.315039", \
				        "0.120502,0.130628,0.143928,0.170247,0.222642,0.326906", \
				        "0.139764,0.150379,0.164077,0.190564,0.242934,0.347176", \
				        "0.164611,0.176954,0.192998,0.223383,0.279614,0.384442", \
				        "0.202601,0.218099,0.236953,0.272691,0.337862,0.455624", \
				        "0.281178,0.300125,0.322696,0.365184,0.440749,0.574836");
			}
			fall_transition(Timing_X2) {
				values ("0.027618,0.031402,0.036391,0.045769,0.064364,0.101132", \
				        "0.027546,0.031368,0.036359,0.045726,0.064268,0.101198", \
				        "0.027175,0.031030,0.036139,0.045603,0.064283,0.101181", \
				        "0.028570,0.032051,0.036750,0.045913,0.064173,0.101141", \
				        "0.035112,0.038481,0.043055,0.051471,0.067675,0.102048", \
				        "0.049179,0.052922,0.057704,0.066163,0.082195,0.113642", \
				        "0.073917,0.078539,0.084497,0.094988,0.113160,0.145313", \
				        "0.114224,0.121050,0.129172,0.143546,0.167466,0.206644");
			}
			rise_transition(Timing_X2) {
				values ("0.052356,0.061179,0.072961,0.096236,0.142406,0.234562", \
				        "0.052355,0.061173,0.072976,0.096222,0.142461,0.234567", \
				        "0.052356,0.061179,0.072940,0.096163,0.142445,0.234535", \
				        "0.052400,0.061199,0.072986,0.096122,0.142457,0.234562", \
				        "0.055768,0.063733,0.074577,0.096674,0.142460,0.234560", \
				        "0.069352,0.077421,0.088063,0.108837,0.149148,0.235513", \
				        "0.095661,0.103835,0.114640,0.136031,0.177869,0.258666", \
				        "0.140148,0.148815,0.160311,0.182871,0.226720,0.312044");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.035787,0.040804,0.047289,0.059782,0.083454,0.128523", \
				        "0.038423,0.043421,0.049898,0.062370,0.086014,0.131101", \
				        "0.043647,0.048628,0.055086,0.067352,0.090951,0.136066", \
				        "0.053550,0.058677,0.065191,0.077605,0.100908,0.145938", \
				        "0.067215,0.073189,0.080646,0.094675,0.119874,0.165493", \
				        "0.081056,0.089057,0.098769,0.116597,0.147551,0.200235", \
				        "0.088841,0.099317,0.112579,0.136647,0.178071,0.246110", \
				        "0.077484,0.092250,0.109912,0.142245,0.198344,0.290554");
			}
			cell_rise(Timing_X2) {
				values ("0.108340,0.120016,0.135509,0.166107,0.226847,0.347698", \
				        "0.112114,0.123720,0.139115,0.169779,0.230569,0.351494", \
				        "0.118906,0.130663,0.146035,0.176589,0.237433,0.358392", \
				        "0.130624,0.142340,0.157806,0.188355,0.249157,0.370123", \
				        "0.149336,0.161373,0.177081,0.207759,0.268547,0.389559", \
				        "0.173281,0.187097,0.204942,0.238828,0.302263,0.423257", \
				        "0.210818,0.227339,0.247601,0.286263,0.357626,0.489038", \
				        "0.289950,0.309869,0.333508,0.378407,0.458915,0.604458");
			}
			fall_transition(Timing_X2) {
				values ("0.026362,0.030379,0.035606,0.045097,0.063817,0.100600", \
				        "0.026136,0.030154,0.035397,0.045018,0.063791,0.100523", \
				        "0.025666,0.029672,0.034959,0.044788,0.063681,0.100566", \
				        "0.027768,0.031302,0.035980,0.045099,0.063367,0.100465", \
				        "0.035091,0.038414,0.042867,0.051065,0.067162,0.101263", \
				        "0.049942,0.053638,0.058236,0.066652,0.082257,0.113256", \
				        "0.075892,0.080392,0.086164,0.096323,0.113993,0.145504", \
				        "0.118210,0.124803,0.132772,0.146634,0.169920,0.208113");
			}
			rise_transition(Timing_X2) {
				values ("0.056133,0.066557,0.080466,0.107895,0.162476,0.271211", \
				        "0.056136,0.066566,0.080432,0.107866,0.162486,0.271221", \
				        "0.056136,0.066560,0.080491,0.107868,0.162510,0.271226", \
				        "0.056185,0.066589,0.080479,0.107862,0.162512,0.271224", \
				        "0.058681,0.068417,0.081581,0.108132,0.162479,0.271212", \
				        "0.070525,0.080358,0.093180,0.117878,0.167111,0.271503", \
				        "0.094161,0.104128,0.117072,0.142634,0.192502,0.289339", \
				        "0.136534,0.146890,0.160399,0.186780,0.238080,0.338667");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.036197,0.041272,0.047916,0.060341,0.084021,0.129138", \
				        "0.038826,0.043885,0.050488,0.062892,0.086542,0.131670", \
				        "0.044029,0.049079,0.055529,0.067929,0.091477,0.136680", \
				        "0.053960,0.059116,0.065737,0.078025,0.101445,0.146540", \
				        "0.067741,0.073771,0.081377,0.095271,0.120460,0.166047", \
				        "0.081940,0.089889,0.099711,0.117475,0.148312,0.200941", \
				        "0.090203,0.100866,0.114155,0.138032,0.179248,0.247096", \
				        "0.080497,0.095088,0.112598,0.144698,0.200423,0.292302");
			}
			cell_rise(Timing_X2) {
				values ("0.124430,0.136128,0.151550,0.182229,0.243091,0.364076", \
				        "0.128229,0.139850,0.155278,0.185897,0.246827,0.367847", \
				        "0.135000,0.146794,0.162100,0.192771,0.253707,0.374769", \
				        "0.146718,0.158471,0.173930,0.204572,0.265495,0.386587", \
				        "0.165782,0.177581,0.193201,0.223907,0.284846,0.405975", \
				        "0.192469,0.205701,0.222974,0.256186,0.318688,0.439651", \
				        "0.233064,0.248747,0.268248,0.305873,0.376066,0.506149", \
				        "0.316316,0.335160,0.357400,0.400764,0.479456,0.623242");
			}
			fall_transition(Timing_X2) {
				values ("0.034152,0.037617,0.042380,0.051681,0.070030,0.106460", \
				        "0.033911,0.037392,0.042191,0.051588,0.069995,0.106446", \
				        "0.033374,0.036857,0.041747,0.051327,0.069881,0.106432", \
				        "0.035213,0.038361,0.042729,0.051649,0.069641,0.106347", \
				        "0.043444,0.046087,0.050029,0.057762,0.073323,0.107166", \
				        "0.060518,0.063352,0.067079,0.074456,0.089083,0.119333", \
				        "0.090450,0.093783,0.098332,0.106778,0.122615,0.152536", \
				        "0.138836,0.143672,0.150062,0.161502,0.181979,0.217495");
			}
			rise_transition(Timing_X2) {
				values ("0.065078,0.075649,0.089666,0.117204,0.172081,0.281095", \
				        "0.065066,0.075640,0.089676,0.117261,0.172076,0.281103", \
				        "0.065049,0.075647,0.089628,0.117279,0.172086,0.281120", \
				        "0.065068,0.075649,0.089624,0.117231,0.172097,0.281121", \
				        "0.066497,0.076606,0.090157,0.117316,0.172078,0.281108", \
				        "0.077760,0.087796,0.100628,0.125517,0.175634,0.281230", \
				        "0.100409,0.110756,0.124039,0.150039,0.200268,0.297458", \
				        "0.141830,0.152642,0.166488,0.193445,0.245428,0.346731");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.019875,0.023969,0.029414,0.040166,0.061454,0.103888", \
				        "0.022996,0.026960,0.032375,0.043164,0.064470,0.106916", \
				        "0.028685,0.033255,0.038829,0.049393,0.070648,0.112975", \
				        "0.034904,0.040978,0.048261,0.061270,0.083216,0.125345", \
				        "0.039860,0.048058,0.057847,0.075326,0.104520,0.151076", \
				        "0.040053,0.050916,0.064166,0.087474,0.126568,0.189323", \
				        "0.026491,0.041615,0.059341,0.090796,0.143195,0.227143", \
				        "-0.017070,0.002594,0.026590,0.068554,0.139097,0.252033");
			}
			cell_rise(Timing_X2) {
				values ("0.034843,0.044399,0.057129,0.082284,0.132067,0.231132", \
				        "0.037923,0.047384,0.060032,0.085174,0.134975,0.234075", \
				        "0.045043,0.054070,0.066530,0.091330,0.140979,0.239976", \
				        "0.060100,0.069421,0.080908,0.104824,0.153807,0.252252", \
				        "0.081775,0.093490,0.108106,0.134181,0.181592,0.278549", \
				        "0.113532,0.128093,0.146354,0.179598,0.237324,0.334920", \
				        "0.162819,0.181618,0.204168,0.245469,0.317934,0.440775", \
				        "0.244519,0.267742,0.296594,0.348108,0.438101,0.591610");
			}
			fall_transition(Timing_X2) {
				values ("0.012950,0.016526,0.021125,0.030365,0.048670,0.085492", \
				        "0.013046,0.016565,0.021145,0.030369,0.048751,0.085489", \
				        "0.016057,0.018620,0.022385,0.030397,0.048673,0.085448", \
				        "0.022732,0.025729,0.029606,0.035989,0.050275,0.085408", \
				        "0.034215,0.037852,0.042415,0.050470,0.064265,0.090537", \
				        "0.054343,0.058883,0.064622,0.074438,0.091662,0.120533", \
				        "0.089257,0.095471,0.102863,0.115869,0.137642,0.173849", \
				        "0.151655,0.159983,0.170070,0.187669,0.216781,0.263238");
			}
			rise_transition(Timing_X2) {
				values ("0.036243,0.045466,0.057244,0.079973,0.124906,0.214718", \
				        "0.035659,0.045086,0.057097,0.079971,0.124957,0.214760", \
				        "0.034716,0.043896,0.056513,0.079879,0.124882,0.214728", \
				        "0.038820,0.046070,0.056577,0.078818,0.124914,0.214748", \
				        "0.050362,0.057752,0.067372,0.084937,0.124920,0.214741", \
				        "0.068583,0.077364,0.088485,0.108573,0.144052,0.218512", \
				        "0.100559,0.110188,0.122863,0.146378,0.189294,0.263122", \
				        "0.158898,0.169618,0.183809,0.210484,0.260275,0.349672");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.019842,0.023916,0.029374,0.040131,0.061428,0.103874", \
				        "0.022978,0.026979,0.032395,0.043143,0.064465,0.106916", \
				        "0.028719,0.033284,0.038822,0.049406,0.070661,0.113000", \
				        "0.035018,0.041070,0.048325,0.061338,0.083263,0.125393", \
				        "0.039781,0.048028,0.057837,0.075344,0.104555,0.151118", \
				        "0.038889,0.049878,0.063291,0.086885,0.126249,0.189187", \
				        "0.022136,0.037685,0.055804,0.087882,0.141135,0.225982", \
				        "-0.028924,-0.008630,0.016194,0.059366,0.131653,0.246872");
			}
			cell_rise(Timing_X2) {
				values ("0.037360,0.048768,0.064266,0.095010,0.155742,0.276526", \
				        "0.040460,0.051781,0.067142,0.097808,0.158559,0.279398", \
				        "0.047712,0.058486,0.073492,0.103881,0.164405,0.285112", \
				        "0.064073,0.074289,0.087766,0.116974,0.176853,0.296881", \
				        "0.088611,0.101363,0.117484,0.146466,0.203748,0.322145", \
				        "0.124377,0.140393,0.160420,0.197217,0.261471,0.376570", \
				        "0.180363,0.200811,0.225377,0.270774,0.350990,0.488072", \
				        "0.273941,0.298855,0.330148,0.386078,0.484785,0.654948");
			}
			fall_transition(Timing_X2) {
				values ("0.012937,0.016546,0.021104,0.030361,0.048684,0.085501", \
				        "0.013024,0.016585,0.021147,0.030361,0.048760,0.085495", \
				        "0.016020,0.018584,0.022386,0.030387,0.048756,0.085452", \
				        "0.022667,0.025655,0.029572,0.035925,0.050207,0.085414", \
				        "0.034152,0.037818,0.042381,0.050432,0.064231,0.090524", \
				        "0.054440,0.058980,0.064782,0.074608,0.091799,0.120595", \
				        "0.089708,0.096041,0.103489,0.116562,0.138391,0.174460", \
				        "0.152660,0.161290,0.171547,0.189438,0.218706,0.265251");
			}
			rise_transition(Timing_X2) {
				values ("0.043479,0.055346,0.070296,0.098039,0.152439,0.260782", \
				        "0.042683,0.054806,0.070010,0.097987,0.152475,0.260781", \
				        "0.041127,0.053067,0.068904,0.097794,0.152469,0.260785", \
				        "0.043911,0.053584,0.067341,0.096170,0.152424,0.260788", \
				        "0.055072,0.063850,0.075222,0.098596,0.150755,0.260768", \
				        "0.073279,0.083479,0.096195,0.119742,0.163312,0.260578", \
				        "0.104913,0.115813,0.130317,0.157335,0.207026,0.294283", \
				        "0.161947,0.174075,0.190106,0.220415,0.277479,0.380572");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020081,0.024246,0.029609,0.040410,0.061805,0.104378", \
				        "0.023208,0.027196,0.032632,0.043417,0.064870,0.107403", \
				        "0.029011,0.033626,0.039120,0.049722,0.071068,0.113539", \
				        "0.035443,0.041594,0.048908,0.061815,0.083618,0.125928", \
				        "0.040483,0.048742,0.058724,0.076046,0.105144,0.151590", \
				        "0.040120,0.051170,0.064613,0.088088,0.127229,0.190033", \
				        "0.024825,0.040080,0.058277,0.089990,0.142862,0.227414", \
				        "-0.022582,-0.002996,0.021225,0.063616,0.135143,0.249664");
			}
			cell_rise(Timing_X2) {
				values ("0.053672,0.065364,0.080853,0.111693,0.172592,0.293615", \
				        "0.056591,0.068238,0.083740,0.114476,0.175403,0.296476", \
				        "0.063091,0.074539,0.089941,0.120471,0.181225,0.302177", \
				        "0.077959,0.088595,0.103398,0.133342,0.193532,0.313901", \
				        "0.106548,0.118391,0.133480,0.161422,0.220133,0.339016", \
				        "0.146893,0.161773,0.180720,0.215757,0.277819,0.393014", \
				        "0.208406,0.227237,0.250374,0.293976,0.371625,0.505628", \
				        "0.309043,0.332367,0.361338,0.414751,0.510127,0.676950");
			}
			fall_transition(Timing_X2) {
				values ("0.016615,0.020730,0.025787,0.035678,0.054475,0.091284", \
				        "0.016675,0.020619,0.025801,0.035703,0.054487,0.091279", \
				        "0.019841,0.022764,0.026955,0.035774,0.054480,0.091242", \
				        "0.029194,0.031677,0.035123,0.041299,0.056024,0.091271", \
				        "0.044961,0.047354,0.050867,0.057820,0.070393,0.096348", \
				        "0.070535,0.073484,0.077546,0.085374,0.100373,0.127245", \
				        "0.113852,0.117487,0.122531,0.132292,0.150655,0.183720", \
				        "0.188554,0.193364,0.199924,0.212876,0.236825,0.278556");
			}
			rise_transition(Timing_X2) {
				values ("0.054810,0.065991,0.080400,0.107866,0.162504,0.271217", \
				        "0.054474,0.065741,0.080308,0.107919,0.162483,0.271223", \
				        "0.053134,0.064850,0.079838,0.107865,0.162486,0.271222", \
				        "0.052369,0.063067,0.077696,0.107129,0.162512,0.271227", \
				        "0.061538,0.070180,0.081982,0.107045,0.161209,0.271199", \
				        "0.079703,0.089957,0.102779,0.126234,0.170653,0.270558", \
				        "0.110793,0.122455,0.137108,0.164441,0.213921,0.301176", \
				        "0.166421,0.179189,0.196290,0.227277,0.284995,0.388058");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023294,0.027402,0.032875,0.043576,0.064921,0.107428", \
				        "0.025949,0.030007,0.035509,0.046275,0.067620,0.110202", \
				        "0.030561,0.034973,0.040465,0.051257,0.072669,0.115313", \
				        "0.036803,0.042038,0.048539,0.060568,0.082588,0.125360", \
				        "0.043039,0.050050,0.058408,0.073443,0.099407,0.144897", \
				        "0.045123,0.054898,0.066547,0.087000,0.120987,0.176131", \
				        "0.035032,0.048590,0.064929,0.093517,0.140452,0.214233", \
				        "-0.005183,0.014278,0.036975,0.076756,0.142128,0.244523");
			}
			cell_rise(Timing_X2) {
				values ("0.047083,0.056620,0.069311,0.094457,0.144286,0.243419", \
				        "0.050075,0.059611,0.072252,0.097357,0.147200,0.246350", \
				        "0.056783,0.066148,0.078712,0.103635,0.153306,0.252333", \
				        "0.072001,0.080670,0.092690,0.117106,0.166221,0.264714", \
				        "0.097740,0.108433,0.121946,0.146566,0.194091,0.291185", \
				        "0.134771,0.148146,0.165084,0.196472,0.251719,0.347774", \
				        "0.191832,0.209167,0.229985,0.268927,0.338250,0.457230", \
				        "0.288364,0.309057,0.335579,0.383406,0.468506,0.616611");
			}
			fall_transition(Timing_X2) {
				values ("0.012940,0.016541,0.021185,0.030355,0.048759,0.085390", \
				        "0.012969,0.016463,0.021116,0.030361,0.048689,0.085474", \
				        "0.014314,0.017391,0.021692,0.030341,0.048756,0.085477", \
				        "0.018360,0.021332,0.025289,0.032977,0.049439,0.085405", \
				        "0.026908,0.029858,0.033925,0.041262,0.056340,0.088089", \
				        "0.042045,0.045694,0.050302,0.058326,0.073332,0.102861", \
				        "0.068051,0.072666,0.078574,0.088830,0.106594,0.137384", \
				        "0.110950,0.117813,0.125893,0.140255,0.164066,0.202188");
			}
			rise_transition(Timing_X2) {
				values ("0.044270,0.053166,0.064881,0.087572,0.132729,0.222807", \
				        "0.044072,0.053058,0.064841,0.087642,0.132760,0.222793", \
				        "0.043008,0.052449,0.064526,0.087505,0.132758,0.222806", \
				        "0.044288,0.052349,0.063585,0.086961,0.132739,0.222773", \
				        "0.054922,0.062222,0.071534,0.090504,0.132239,0.222820", \
				        "0.072541,0.081573,0.092698,0.113004,0.148550,0.225369", \
				        "0.100137,0.111010,0.124711,0.149566,0.193215,0.267138", \
				        "0.147352,0.160404,0.176699,0.206509,0.259840,0.352034");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023269,0.027379,0.032800,0.043536,0.064891,0.107415", \
				        "0.025931,0.030078,0.035496,0.046238,0.067604,0.110198", \
				        "0.030582,0.034991,0.040564,0.051268,0.072684,0.115334", \
				        "0.036919,0.042139,0.048638,0.060640,0.082647,0.125417", \
				        "0.043180,0.050203,0.058594,0.073570,0.099510,0.144980", \
				        "0.044788,0.054607,0.066345,0.086885,0.120971,0.176170", \
				        "0.032533,0.046377,0.062991,0.091951,0.139425,0.213705", \
				        "-0.013257,0.006711,0.029973,0.070697,0.137397,0.241335");
			}
			cell_rise(Timing_X2) {
				values ("0.052252,0.063866,0.079327,0.109987,0.170755,0.291585", \
				        "0.055202,0.066795,0.082200,0.112844,0.173585,0.294446", \
				        "0.061879,0.073282,0.088591,0.118993,0.179569,0.300273", \
				        "0.077226,0.087631,0.102319,0.132170,0.192138,0.312199", \
				        "0.106238,0.117901,0.132878,0.160784,0.219190,0.337661", \
				        "0.147475,0.162446,0.181069,0.215913,0.277610,0.392334", \
				        "0.211401,0.230342,0.253250,0.296305,0.373253,0.506299", \
				        "0.319193,0.341548,0.370613,0.422910,0.516885,0.681735");
			}
			fall_transition(Timing_X2) {
				values ("0.012929,0.016508,0.021145,0.030351,0.048766,0.085398", \
				        "0.012947,0.016486,0.021195,0.030352,0.048696,0.085481", \
				        "0.014291,0.017366,0.021665,0.030340,0.048758,0.085484", \
				        "0.018323,0.021296,0.025278,0.032949,0.049459,0.085414", \
				        "0.026845,0.029783,0.033750,0.041209,0.056296,0.088075", \
				        "0.041936,0.045638,0.050258,0.058318,0.073328,0.102844", \
				        "0.068169,0.072774,0.078669,0.089083,0.106837,0.137575", \
				        "0.111421,0.118403,0.126558,0.141067,0.164920,0.203066");
			}
			rise_transition(Timing_X2) {
				values ("0.054267,0.065446,0.079880,0.107474,0.162016,0.270653", \
				        "0.053882,0.065193,0.079745,0.107503,0.162009,0.270651", \
				        "0.052474,0.064267,0.079166,0.107423,0.162023,0.270647", \
				        "0.052022,0.062549,0.077139,0.106604,0.162042,0.270661", \
				        "0.061116,0.069817,0.081675,0.106675,0.160685,0.270653", \
				        "0.078507,0.089059,0.101860,0.125571,0.170188,0.270009", \
				        "0.106507,0.118607,0.134099,0.162279,0.212463,0.300258", \
				        "0.153142,0.167562,0.185694,0.219074,0.279528,0.384857");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023506,0.027692,0.033092,0.043852,0.065287,0.107949", \
				        "0.026184,0.030270,0.035778,0.046530,0.067999,0.110701", \
				        "0.030840,0.035299,0.040769,0.051598,0.073096,0.115866", \
				        "0.037260,0.042511,0.049004,0.060961,0.082997,0.125952", \
				        "0.043689,0.050752,0.059181,0.074084,0.099952,0.145485", \
				        "0.045679,0.055470,0.067368,0.087748,0.121694,0.176824", \
				        "0.034117,0.047946,0.064595,0.093386,0.140639,0.214698", \
				        "-0.009694,0.009835,0.033010,0.073382,0.139618,0.243157");
			}
			cell_rise(Timing_X2) {
				values ("0.068797,0.080491,0.095987,0.126711,0.187625,0.308689", \
				        "0.071690,0.083362,0.098836,0.129563,0.190472,0.311569", \
				        "0.078152,0.089685,0.105109,0.135664,0.196391,0.317355", \
				        "0.092084,0.103384,0.118441,0.148624,0.208827,0.329241", \
				        "0.122783,0.133784,0.148085,0.176446,0.235572,0.354542", \
				        "0.168447,0.182502,0.200269,0.233570,0.293466,0.408796", \
				        "0.237268,0.255270,0.276879,0.318410,0.393218,0.523475", \
				        "0.351094,0.372192,0.399780,0.450094,0.541334,0.703189");
			}
			fall_transition(Timing_X2) {
				values ("0.016617,0.020659,0.025743,0.035670,0.054484,0.091252", \
				        "0.016641,0.020621,0.025751,0.035702,0.054473,0.091261", \
				        "0.018101,0.021476,0.026266,0.035719,0.054491,0.091254", \
				        "0.023339,0.026308,0.030271,0.038360,0.055245,0.091272", \
				        "0.034552,0.036820,0.040389,0.047449,0.062210,0.093837", \
				        "0.053823,0.056351,0.059709,0.066518,0.080276,0.109007", \
				        "0.085720,0.088773,0.092921,0.100965,0.116280,0.145049", \
				        "0.138261,0.142266,0.147883,0.158768,0.178724,0.213405");
			}
			rise_transition(Timing_X2) {
				values ("0.064522,0.075398,0.089670,0.117304,0.172074,0.281116", \
				        "0.064376,0.075289,0.089602,0.117288,0.172082,0.281118", \
				        "0.063808,0.074930,0.089464,0.117309,0.172104,0.281096", \
				        "0.061710,0.072863,0.088067,0.116943,0.172113,0.281123", \
				        "0.067732,0.076754,0.089611,0.115725,0.171444,0.281104", \
				        "0.085859,0.096080,0.108689,0.132083,0.177976,0.280258", \
				        "0.114601,0.126779,0.141943,0.169865,0.219510,0.307477", \
				        "0.161744,0.176035,0.194422,0.227692,0.287798,0.392545");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("0.004295,0.003571,0.002609,0.000680,-0.003176,-0.010897", \
				        "0.004293,0.003564,0.002604,0.000683,-0.003173,-0.010892", \
				        "0.004295,0.003573,0.002619,0.000695,-0.003160,-0.010872", \
				        "0.004366,0.003643,0.002689,0.000756,-0.003114,-0.010849", \
				        "0.004638,0.003890,0.002908,0.000939,-0.002976,-0.010758", \
				        "0.005548,0.004745,0.003697,0.001620,-0.002432,-0.010355", \
				        "0.007829,0.006964,0.005825,0.003617,-0.000696,-0.008961", \
				        "0.012971,0.012027,0.010778,0.008389,0.003744,-0.005110");
			}
			rise_power(Power_X2) {
				values ("0.007820,0.008547,0.009544,0.011476,0.015362,0.023102", \
				        "0.007808,0.008537,0.009513,0.011449,0.015327,0.023082", \
				        "0.007781,0.008491,0.009464,0.011408,0.015301,0.023051", \
				        "0.007718,0.008462,0.009431,0.011380,0.015276,0.023030", \
				        "0.007714,0.008427,0.009412,0.011356,0.015238,0.023011", \
				        "0.007978,0.008678,0.009643,0.011537,0.015379,0.023089", \
				        "0.009303,0.009949,0.010836,0.012625,0.016306,0.023822", \
				        "0.013159,0.013640,0.014358,0.015918,0.019234,0.026317");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !C1 & !C2 | !B1 & !B2 & !C2 | !B1 & !B2 & !C1";

			rise_power(Power_X2) {
				values ("0.006522,0.007280,0.008250,0.010188,0.014037,0.021816", \
				        "0.006514,0.007242,0.008221,0.010157,0.014039,0.021799", \
				        "0.006497,0.007206,0.008164,0.010138,0.014019,0.021777", \
				        "0.006420,0.007168,0.008146,0.010104,0.013995,0.021762", \
				        "0.006430,0.007173,0.008140,0.010080,0.013985,0.021735", \
				        "0.006803,0.007506,0.008457,0.010341,0.014163,0.021864", \
				        "0.008519,0.009098,0.009923,0.011654,0.015265,0.022713", \
				        "0.013005,0.013433,0.014070,0.015454,0.018605,0.025529");
			}
			fall_power(Power_X2) {
				values ("0.004279,0.003559,0.002583,0.000666,-0.003192,-0.010915", \
				        "0.004270,0.003543,0.002578,0.000660,-0.003192,-0.010910", \
				        "0.004272,0.003569,0.002590,0.000665,-0.003189,-0.010917", \
				        "0.004329,0.003604,0.002646,0.000718,-0.003142,-0.010871", \
				        "0.004625,0.003879,0.002888,0.000912,-0.003008,-0.010780", \
				        "0.005548,0.004745,0.003697,0.001620,-0.002432,-0.010355", \
				        "0.007829,0.006964,0.005825,0.003617,-0.000696,-0.008961", \
				        "0.012971,0.012027,0.010778,0.008389,0.003744,-0.005110");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.004705,0.005469,0.006445,0.008368,0.012257,0.020013", \
				        "0.004686,0.005430,0.006416,0.008358,0.012235,0.019986", \
				        "0.004636,0.005391,0.006358,0.008322,0.012203,0.019966", \
				        "0.004607,0.005343,0.006325,0.008285,0.012187,0.019948", \
				        "0.004592,0.005325,0.006296,0.008252,0.012140,0.019905", \
				        "0.004973,0.005656,0.006584,0.008485,0.012297,0.019997", \
				        "0.006593,0.007168,0.007969,0.009692,0.013310,0.020762", \
				        "0.010794,0.011209,0.011833,0.013228,0.016394,0.023368");
			}
			fall_power(Power_X2) {
				values ("0.004293,0.003564,0.002609,0.000680,-0.003176,-0.010897", \
				        "0.004293,0.003564,0.002604,0.000683,-0.003177,-0.010892", \
				        "0.004295,0.003573,0.002617,0.000695,-0.003160,-0.010872", \
				        "0.004366,0.003643,0.002689,0.000756,-0.003114,-0.010849", \
				        "0.004632,0.003885,0.002908,0.000939,-0.002976,-0.010758", \
				        "0.005489,0.004685,0.003659,0.001582,-0.002448,-0.010362", \
				        "0.007586,0.006727,0.005607,0.003412,-0.000856,-0.009085", \
				        "0.012291,0.011372,0.010163,0.007789,0.003218,-0.005550");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 | B1 & !B2 & !C2";

			rise_power(Power_X2) {
				values ("0.007820,0.008547,0.009544,0.011476,0.015362,0.023102", \
				        "0.007808,0.008537,0.009513,0.011449,0.015327,0.023082", \
				        "0.007781,0.008491,0.009464,0.011408,0.015301,0.023051", \
				        "0.007718,0.008462,0.009431,0.011380,0.015276,0.023030", \
				        "0.007714,0.008427,0.009412,0.011356,0.015238,0.023011", \
				        "0.007978,0.008678,0.009643,0.011537,0.015379,0.023089", \
				        "0.009303,0.009949,0.010836,0.012625,0.016306,0.023822", \
				        "0.013159,0.013640,0.014358,0.015918,0.019234,0.026317");
			}
			fall_power(Power_X2) {
				values ("0.004295,0.003571,0.002602,0.000680,-0.003178,-0.010907", \
				        "0.004290,0.003564,0.002596,0.000683,-0.003173,-0.010898", \
				        "0.004290,0.003568,0.002619,0.000695,-0.003162,-0.010894", \
				        "0.004359,0.003630,0.002669,0.000753,-0.003115,-0.010852", \
				        "0.004638,0.003890,0.002908,0.000931,-0.002985,-0.010766", \
				        "0.005470,0.004686,0.003641,0.001581,-0.002455,-0.010359", \
				        "0.007541,0.006702,0.005591,0.003398,-0.000859,-0.009089", \
				        "0.012244,0.011326,0.010120,0.007763,0.003193,-0.005560");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.006208,0.006940,0.007930,0.009874,0.013756,0.021493", \
				        "0.006183,0.006897,0.007902,0.009850,0.013749,0.021511", \
				        "0.006140,0.006904,0.007874,0.009826,0.013730,0.021498", \
				        "0.006119,0.006851,0.007825,0.009753,0.013680,0.021457", \
				        "0.006061,0.006821,0.007797,0.009758,0.013641,0.021426", \
				        "0.006223,0.006948,0.007906,0.009833,0.013690,0.021443", \
				        "0.007738,0.008314,0.009133,0.010859,0.014510,0.022055", \
				        "0.012710,0.013127,0.013732,0.015033,0.018045,0.024879");
			}
			fall_power(Power_X2) {
				values ("0.006632,0.005919,0.004955,0.003042,-0.000793,-0.008485", \
				        "0.006608,0.005885,0.004925,0.003017,-0.000819,-0.008503", \
				        "0.006594,0.005879,0.004908,0.003000,-0.000832,-0.008515", \
				        "0.006626,0.005906,0.004949,0.003030,-0.000811,-0.008503", \
				        "0.006856,0.006129,0.005162,0.003209,-0.000676,-0.008423", \
				        "0.007709,0.006901,0.005899,0.003868,-0.000126,-0.008009", \
				        "0.009979,0.009154,0.008045,0.005869,0.001625,-0.006599", \
				        "0.015445,0.014531,0.013314,0.010940,0.006336,-0.002491");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.005573,0.006312,0.007304,0.009255,0.013127,0.020889", \
				        "0.005550,0.006302,0.007279,0.009233,0.013114,0.020887", \
				        "0.005519,0.006272,0.007251,0.009201,0.013101,0.020860", \
				        "0.005485,0.006241,0.007203,0.009160,0.013055,0.020836", \
				        "0.005447,0.006183,0.007161,0.009123,0.013016,0.020797", \
				        "0.005576,0.006303,0.007256,0.009181,0.013046,0.020797", \
				        "0.006998,0.007581,0.008400,0.010138,0.013799,0.021349", \
				        "0.011827,0.012227,0.012802,0.014125,0.017173,0.024029");
			}
			fall_power(Power_X2) {
				values ("0.006472,0.005747,0.004784,0.002880,-0.000953,-0.008633", \
				        "0.006439,0.005717,0.004756,0.002849,-0.000980,-0.008666", \
				        "0.006400,0.005695,0.004731,0.002824,-0.001005,-0.008669", \
				        "0.006450,0.005724,0.004759,0.002843,-0.000987,-0.008685", \
				        "0.006681,0.005937,0.004954,0.003009,-0.000875,-0.008612", \
				        "0.007480,0.006700,0.005673,0.003636,-0.000365,-0.008239", \
				        "0.009733,0.008881,0.007767,0.005578,0.001321,-0.006893", \
				        "0.015071,0.014158,0.012919,0.010513,0.005885,-0.002949");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.007123,0.007832,0.008823,0.010775,0.014651,0.022407", \
				        "0.007093,0.007822,0.008810,0.010757,0.014640,0.022397", \
				        "0.007066,0.007799,0.008781,0.010736,0.014628,0.022403", \
				        "0.007017,0.007745,0.008730,0.010678,0.014583,0.022349", \
				        "0.006955,0.007720,0.008694,0.010645,0.014541,0.022313", \
				        "0.007093,0.007809,0.008771,0.010714,0.014572,0.022320", \
				        "0.008330,0.008950,0.009804,0.011589,0.015276,0.022851", \
				        "0.012913,0.013366,0.014000,0.015411,0.018529,0.025474");
			}
			fall_power(Power_X2) {
				values ("0.006471,0.005752,0.004789,0.002882,-0.000951,-0.008633", \
				        "0.006442,0.005722,0.004756,0.002848,-0.000978,-0.008657", \
				        "0.006430,0.005700,0.004736,0.002830,-0.001000,-0.008675", \
				        "0.006454,0.005735,0.004771,0.002856,-0.000982,-0.008678", \
				        "0.006667,0.005930,0.004958,0.003008,-0.000876,-0.008609", \
				        "0.007480,0.006701,0.005665,0.003635,-0.000355,-0.008233", \
				        "0.009728,0.008875,0.007764,0.005573,0.001316,-0.006891", \
				        "0.015066,0.014130,0.012911,0.010501,0.005888,-0.002959");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.007727,0.008454,0.009429,0.011370,0.015237,0.022988", \
				        "0.007741,0.008453,0.009420,0.011371,0.015241,0.022992", \
				        "0.007702,0.008441,0.009423,0.011366,0.015241,0.023009", \
				        "0.007693,0.008425,0.009381,0.011321,0.015210,0.022974", \
				        "0.007660,0.008404,0.009363,0.011319,0.015195,0.022963", \
				        "0.007774,0.008487,0.009461,0.011394,0.015249,0.023000", \
				        "0.009035,0.009695,0.010562,0.012360,0.016057,0.023594", \
				        "0.013454,0.013979,0.014717,0.016271,0.019547,0.026514");
			}
			fall_power(Power_X2) {
				values ("0.006616,0.005910,0.004951,0.003033,-0.000808,-0.008511", \
				        "0.006611,0.005884,0.004922,0.003001,-0.000850,-0.008554", \
				        "0.006588,0.005863,0.004902,0.002975,-0.000879,-0.008597", \
				        "0.006570,0.005856,0.004900,0.002979,-0.000878,-0.008587", \
				        "0.006667,0.005939,0.004986,0.003055,-0.000807,-0.008537", \
				        "0.007165,0.006420,0.005422,0.003443,-0.000492,-0.008291", \
				        "0.008865,0.008041,0.006973,0.004867,0.000725,-0.007342", \
				        "0.013203,0.012299,0.011121,0.008806,0.004345,-0.004262");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.007111,0.007837,0.008815,0.010747,0.014624,0.022359", \
				        "0.007105,0.007826,0.008807,0.010742,0.014614,0.022374", \
				        "0.007072,0.007828,0.008817,0.010743,0.014629,0.022382", \
				        "0.007066,0.007808,0.008761,0.010712,0.014593,0.022350", \
				        "0.007028,0.007786,0.008742,0.010679,0.014569,0.022334", \
				        "0.007119,0.007858,0.008824,0.010750,0.014605,0.022362", \
				        "0.008321,0.008961,0.009835,0.011647,0.015340,0.022908", \
				        "0.012550,0.013114,0.013839,0.015405,0.018689,0.025676");
			}
			fall_power(Power_X2) {
				values ("0.006457,0.005749,0.004788,0.002868,-0.000965,-0.008659", \
				        "0.006428,0.005730,0.004754,0.002833,-0.001006,-0.008716", \
				        "0.006395,0.005693,0.004727,0.002802,-0.001046,-0.008763", \
				        "0.006392,0.005681,0.004729,0.002803,-0.001058,-0.008757", \
				        "0.006487,0.005750,0.004798,0.002873,-0.000998,-0.008713", \
				        "0.006962,0.006216,0.005216,0.003226,-0.000701,-0.008490", \
				        "0.008628,0.007797,0.006722,0.004568,0.000468,-0.007588", \
				        "0.012889,0.011993,0.010799,0.008474,0.003966,-0.004637");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.008635,0.009351,0.010331,0.012271,0.016139,0.023883", \
				        "0.008610,0.009345,0.010318,0.012261,0.016131,0.023885", \
				        "0.008607,0.009350,0.010320,0.012260,0.016148,0.023881", \
				        "0.008593,0.009312,0.010278,0.012226,0.016115,0.023862", \
				        "0.008550,0.009289,0.010269,0.012213,0.016087,0.023850", \
				        "0.008620,0.009354,0.010320,0.012268,0.016119,0.023864", \
				        "0.009692,0.010387,0.011280,0.013101,0.016845,0.024425", \
				        "0.013842,0.014376,0.015161,0.016741,0.020099,0.027122");
			}
			fall_power(Power_X2) {
				values ("0.006458,0.005745,0.004790,0.002873,-0.000958,-0.008658", \
				        "0.006437,0.005727,0.004756,0.002837,-0.001009,-0.008709", \
				        "0.006412,0.005691,0.004728,0.002796,-0.001043,-0.008763", \
				        "0.006390,0.005681,0.004732,0.002809,-0.001048,-0.008757", \
				        "0.006489,0.005760,0.004797,0.002867,-0.000990,-0.008707", \
				        "0.006964,0.006209,0.005214,0.003229,-0.000700,-0.008515", \
				        "0.008615,0.007793,0.006711,0.004597,0.000452,-0.007588", \
				        "0.012875,0.011998,0.010784,0.008458,0.003958,-0.004639");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & !B2 & C2";

			rise_power(Power_X2) {
				values ("0.004173,0.004915,0.005891,0.007843,0.011724,0.019481", \
				        "0.004177,0.004916,0.005890,0.007842,0.011725,0.019482", \
				        "0.004257,0.004978,0.005943,0.007863,0.011723,0.019471", \
				        "0.004463,0.005168,0.006106,0.007997,0.011830,0.019545", \
				        "0.005024,0.005693,0.006589,0.008424,0.012167,0.019782", \
				        "0.006272,0.006885,0.007727,0.009482,0.013094,0.020503", \
				        "0.009167,0.009654,0.010373,0.011924,0.015284,0.022438", \
				        "0.015471,0.015816,0.016324,0.017535,0.020392,0.026958");
			}
			fall_power(Power_X2) {
				values ("0.001320,0.000592,-0.000373,-0.002294,-0.006151,-0.013872", \
				        "0.001317,0.000616,-0.000349,-0.002271,-0.006130,-0.013844", \
				        "0.001370,0.000654,-0.000306,-0.002241,-0.006100,-0.013816", \
				        "0.001541,0.000794,-0.000182,-0.002143,-0.006021,-0.013777", \
				        "0.002064,0.001251,0.000180,-0.001845,-0.005818,-0.013645", \
				        "0.003413,0.002490,0.001321,-0.000914,-0.005125,-0.013152", \
				        "0.006434,0.005425,0.004112,0.001626,-0.003025,-0.011611", \
				        "0.012912,0.011783,0.010337,0.007587,0.002376,-0.007176");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & B2 & C2";

			rise_power(Power_X2) {
				values ("0.003874,0.004616,0.005594,0.007541,0.011427,0.019184", \
				        "0.003868,0.004618,0.005590,0.007533,0.011431,0.019187", \
				        "0.003934,0.004670,0.005637,0.007569,0.011438,0.019188", \
				        "0.004156,0.004860,0.005803,0.007700,0.011522,0.019230", \
				        "0.004666,0.005350,0.006258,0.008102,0.011841,0.019478", \
				        "0.005851,0.006486,0.007310,0.009081,0.012710,0.020149", \
				        "0.008474,0.008987,0.009725,0.011324,0.014748,0.021930", \
				        "0.014285,0.014602,0.015150,0.016407,0.019389,0.026082");
			}
			fall_power(Power_X2) {
				values ("0.001313,0.000595,-0.000364,-0.002295,-0.006149,-0.013874", \
				        "0.001314,0.000613,-0.000356,-0.002269,-0.006130,-0.013847", \
				        "0.001395,0.000652,-0.000295,-0.002234,-0.006088,-0.013811", \
				        "0.001556,0.000811,-0.000166,-0.002127,-0.006012,-0.013756", \
				        "0.002067,0.001253,0.000197,-0.001840,-0.005809,-0.013632", \
				        "0.003323,0.002420,0.001264,-0.000955,-0.005146,-0.013164", \
				        "0.006114,0.005125,0.003852,0.001397,-0.003189,-0.011732", \
				        "0.012098,0.011004,0.009600,0.006908,0.001821,-0.007595");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & B1 & !B2 & C2";

			rise_power(Power_X2) {
				values ("0.005471,0.006193,0.007170,0.009123,0.013010,0.020761", \
				        "0.005465,0.006209,0.007164,0.009120,0.013002,0.020761", \
				        "0.005479,0.006253,0.007220,0.009152,0.013014,0.020773", \
				        "0.005680,0.006399,0.007356,0.009267,0.013101,0.020811", \
				        "0.006167,0.006860,0.007778,0.009648,0.013399,0.021030", \
				        "0.007273,0.007911,0.008786,0.010567,0.014244,0.021698", \
				        "0.009748,0.010307,0.011097,0.012759,0.016218,0.023440", \
				        "0.015346,0.015755,0.016359,0.017679,0.020774,0.027560");
			}
			fall_power(Power_X2) {
				values ("0.001297,0.000600,-0.000372,-0.002292,-0.006151,-0.013880", \
				        "0.001331,0.000617,-0.000349,-0.002267,-0.006131,-0.013850", \
				        "0.001384,0.000666,-0.000296,-0.002232,-0.006090,-0.013819", \
				        "0.001557,0.000811,-0.000172,-0.002126,-0.006005,-0.013770", \
				        "0.002024,0.001228,0.000191,-0.001839,-0.005809,-0.013635", \
				        "0.003237,0.002346,0.001206,-0.000983,-0.005163,-0.013182", \
				        "0.005968,0.005000,0.003745,0.001332,-0.003229,-0.011740", \
				        "0.011858,0.010806,0.009426,0.006759,0.001717,-0.007642");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & !B2 & C1";

			rise_power(Power_X2) {
				values ("0.005671,0.006379,0.007335,0.009281,0.013161,0.020916", \
				        "0.005643,0.006369,0.007345,0.009289,0.013164,0.020919", \
				        "0.005668,0.006409,0.007386,0.009321,0.013183,0.020913", \
				        "0.005919,0.006625,0.007563,0.009464,0.013280,0.020998", \
				        "0.006474,0.007119,0.008050,0.009894,0.013637,0.021250", \
				        "0.007692,0.008353,0.009200,0.010966,0.014592,0.022019", \
				        "0.010384,0.010981,0.011790,0.013425,0.016852,0.023991", \
				        "0.016148,0.016645,0.017380,0.018869,0.022005,0.028712");
			}
			fall_power(Power_X2) {
				values ("0.001299,0.000586,-0.000377,-0.002299,-0.006157,-0.013883", \
				        "0.001249,0.000569,-0.000387,-0.002307,-0.006163,-0.013890", \
				        "0.001258,0.000560,-0.000390,-0.002312,-0.006175,-0.013898", \
				        "0.001337,0.000605,-0.000358,-0.002285,-0.006141,-0.013876", \
				        "0.001695,0.000900,-0.000122,-0.002112,-0.006015,-0.013786", \
				        "0.002729,0.001854,0.000734,-0.001436,-0.005553,-0.013490", \
				        "0.005274,0.004263,0.003019,0.000612,-0.003890,-0.012350", \
				        "0.010872,0.009732,0.008340,0.005648,0.000602,-0.008720");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & B2 & C1";

			rise_power(Power_X2) {
				values ("0.005344,0.006083,0.007037,0.008987,0.012865,0.020619", \
				        "0.005353,0.006079,0.007043,0.009000,0.012855,0.020600", \
				        "0.005406,0.006126,0.007089,0.009019,0.012888,0.020628", \
				        "0.005596,0.006317,0.007259,0.009164,0.013001,0.020689", \
				        "0.006126,0.006807,0.007721,0.009565,0.013319,0.020932", \
				        "0.007266,0.007919,0.008784,0.010570,0.014200,0.021641", \
				        "0.009735,0.010361,0.011164,0.012827,0.016296,0.023485", \
				        "0.015041,0.015580,0.016288,0.017798,0.021019,0.027784");
			}
			fall_power(Power_X2) {
				values ("0.001297,0.000595,-0.000375,-0.002300,-0.006167,-0.013888", \
				        "0.001288,0.000579,-0.000390,-0.002303,-0.006156,-0.013881", \
				        "0.001285,0.000572,-0.000388,-0.002310,-0.006157,-0.013879", \
				        "0.001361,0.000629,-0.000335,-0.002262,-0.006124,-0.013840", \
				        "0.001715,0.000928,-0.000093,-0.002089,-0.006004,-0.013769", \
				        "0.002689,0.001822,0.000714,-0.001437,-0.005551,-0.013475", \
				        "0.004999,0.004050,0.002840,0.000465,-0.004011,-0.012403", \
				        "0.010126,0.009080,0.007716,0.005101,0.000161,-0.009021");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & B1 & !B2 & C1";

			rise_power(Power_X2) {
				values ("0.006899,0.007664,0.008624,0.010566,0.014435,0.022190", \
				        "0.006913,0.007653,0.008618,0.010565,0.014444,0.022191", \
				        "0.006993,0.007701,0.008666,0.010604,0.014470,0.022210", \
				        "0.007154,0.007868,0.008814,0.010720,0.014549,0.022261", \
				        "0.007614,0.008314,0.009238,0.011105,0.014869,0.022498", \
				        "0.008710,0.009381,0.010267,0.012071,0.015732,0.023210", \
				        "0.011125,0.011729,0.012562,0.014273,0.017787,0.024998", \
				        "0.016316,0.016853,0.017603,0.019170,0.022410,0.029258");
			}
			fall_power(Power_X2) {
				values ("0.001308,0.000585,-0.000371,-0.002294,-0.006155,-0.013883", \
				        "0.001293,0.000578,-0.000383,-0.002297,-0.006164,-0.013884", \
				        "0.001285,0.000567,-0.000386,-0.002303,-0.006166,-0.013897", \
				        "0.001358,0.000634,-0.000339,-0.002266,-0.006123,-0.013868", \
				        "0.001708,0.000915,-0.000107,-0.002086,-0.006002,-0.013773", \
				        "0.002614,0.001770,0.000665,-0.001470,-0.005555,-0.013477", \
				        "0.004881,0.003948,0.002742,0.000403,-0.004049,-0.012405", \
				        "0.009952,0.008942,0.007583,0.004984,0.000085,-0.009067");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI221_X4
 Cell Description	: Combinational cell (AOI221_X4) with drive strength X4
*******************************************************************************************/

cell (AOI221_X4) {

	area               	: 3.192000;

	cell_leakage_power 	: 48471.336250;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 17523.890000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 15823.230000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 18235.440000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 33838.020000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 43804.730000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 33839.940000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 40974.160000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 49440.480000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 43804.710000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 33890.640000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 44516.210000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 51905.450000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 70083.560000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 51907.370000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 59121.810000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 67664.620000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 18235.490000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 33888.920000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 18947.360000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 51901.470000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 44516.330000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 51905.640000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 59117.310000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 67662.650000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 49586.890000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 49643.810000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 67595.110000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 67658.490000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 67601.140000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 67660.640000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 73207.700000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 85579.550000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002068;
		fall_capacitance	: 0.001890;
		rise_capacitance	: 0.002247;
		fall_capacitance_range		(0.001584, 0.002324);
		rise_capacitance_range		(0.001840, 0.002722);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000013,0.000006,0.000002,-0.000000,-0.000003,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000017,0.000013,0.000011,0.000009,0.000007,0.000004,-0.000002");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000251,0.000201,0.000145,0.000095,0.000062,0.000043,0.000029,0.000016");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000251,0.000201,0.000145,0.000095,0.000062,0.000043,0.000029,0.000016");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000018,0.000014,0.000012,0.000010,0.000008,0.000005,-0.000001");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000018,0.000014,0.000012,0.000010,0.000008,0.000005,-0.000001");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000233,0.000178,0.000123,0.000081,0.000056,0.000040,0.000028,0.000016");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002385;
		fall_capacitance	: 0.002353;
		rise_capacitance	: 0.002416;
		fall_capacitance_range		(0.001994, 0.002792);
		rise_capacitance_range		(0.002047, 0.002976);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000067,0.000042,0.000026,0.000016,0.000010,0.000004,-0.000001,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000041,0.000030,0.000024,0.000021,0.000018,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000041,0.000030,0.000024,0.000021,0.000018,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000068,0.000043,0.000027,0.000017,0.000010,0.000005,-0.000001,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000107,0.000077,0.000057,0.000042,0.000031,0.000023,0.000016,0.000005");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000042,0.000026,0.000016,0.000010,0.000004,-0.000001,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000035,0.000019,0.000009,0.000003,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000056,0.000033,0.000019,0.000011,0.000005,0.000000,-0.000005,-0.000014");
			}

		}

		internal_power () {

			when      	: "A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000034,0.000018,0.000009,0.000003,-0.000001,-0.000007,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000035,0.000019,0.000010,0.000004,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000041,0.000030,0.000024,0.000020,0.000018,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000036,0.000019,0.000009,0.000003,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000036,0.000019,0.000009,0.000003,-0.000001,-0.000006,-0.000015");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002553;
		fall_capacitance	: 0.002463;
		rise_capacitance	: 0.002643;
		fall_capacitance_range		(0.001978, 0.002819);
		rise_capacitance_range		(0.002248, 0.003061);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000022,0.000011,0.000005,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000078,0.000053,0.000038,0.000028,0.000021,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000031,0.000021,0.000013,0.000008,0.000004,-0.000002,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000031,0.000021,0.000013,0.000008,0.000004,-0.000002,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000087,0.000066,0.000051,0.000039,0.000030,0.000023,0.000015,0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000032,0.000022,0.000014,0.000009,0.000004,-0.000001,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000078,0.000053,0.000038,0.000028,0.000021,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000023,0.000014,0.000008,0.000004,-0.000000,-0.000005,-0.000014");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000078,0.000053,0.000038,0.000028,0.000021,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000022,0.000011,0.000005,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & !B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000022,0.000011,0.000005,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000020,0.000011,0.000005,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000022,0.000011,0.000005,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002510;
		fall_capacitance	: 0.002275;
		rise_capacitance	: 0.002745;
		fall_capacitance_range		(0.001937, 0.002958);
		rise_capacitance_range		(0.002267, 0.003483);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000011,0.000005,0.000002,-0.000001,-0.000003,-0.000008,-0.000017");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000013,0.000007,0.000003,-0.000000,-0.000004,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000087,0.000071,0.000058,0.000045,0.000034,0.000025,0.000019,0.000013");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000020,0.000013,0.000007,0.000004,-0.000000,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000086,0.000070,0.000055,0.000041,0.000031,0.000023,0.000018,0.000012");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000027,0.000019,0.000013,0.000008,0.000004,-0.000001,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000013,0.000007,0.000003,-0.000000,-0.000004,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000021,0.000013,0.000008,0.000004,-0.000000,-0.000005,-0.000015");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000013,0.000007,0.000003,-0.000000,-0.000004,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000021,0.000013,0.000007,0.000004,-0.000000,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000013,0.000006,0.000002,-0.000002,-0.000005,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000087,0.000071,0.000058,0.000045,0.000034,0.000025,0.000019,0.000013");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000015,0.000008,0.000004,0.000001,-0.000003,-0.000007,-0.000016");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002334;
		fall_capacitance	: 0.002063;
		rise_capacitance	: 0.002605;
		fall_capacitance_range		(0.001792, 0.002601);
		rise_capacitance_range		(0.002084, 0.003250);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000014,0.000007,0.000003,-0.000000,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000016,0.000009,0.000005,0.000002,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000127,0.000093,0.000070,0.000051,0.000035,0.000023,0.000012,0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000013,0.000007,0.000003,0.000000,-0.000003,-0.000008,-0.000016");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000014,0.000007,0.000003,-0.000000,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000016,0.000009,0.000005,0.000002,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000020,0.000013,0.000009,0.000007,0.000003,-0.000002,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000012,0.000006,0.000002,-0.000000,-0.000003,-0.000008,-0.000017");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & !C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000016,0.000009,0.000005,0.000002,-0.000001,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000127,0.000093,0.000070,0.000051,0.000035,0.000023,0.000012,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000013,0.000006,0.000002,-0.000002,-0.000005,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000014,0.000007,0.000003,-0.000000,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000126,0.000092,0.000068,0.000048,0.000032,0.000021,0.000012,0.000000");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((C1 & C2) | A) | (B1 & B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027882,0.032171,0.036971,0.046445,0.064913,0.101191", \
				        "0.031178,0.035379,0.040247,0.049730,0.068197,0.104477", \
				        "0.038123,0.042248,0.047049,0.056399,0.074814,0.110989", \
				        "0.048973,0.054355,0.059868,0.070056,0.088337,0.124362", \
				        "0.060468,0.067597,0.075082,0.088999,0.112963,0.152044", \
				        "0.069529,0.079409,0.089635,0.108281,0.140713,0.194246", \
				        "0.070213,0.083162,0.097063,0.122240,0.166056,0.238338", \
				        "0.048961,0.066539,0.084924,0.118674,0.177142,0.274145");
			}
			cell_rise(Timing_X4) {
				values ("0.109947,0.123592,0.139121,0.169844,0.230846,0.352025", \
				        "0.113215,0.126758,0.142312,0.173053,0.234074,0.355248", \
				        "0.119278,0.132906,0.148192,0.179008,0.240089,0.361360", \
				        "0.130347,0.144091,0.159658,0.190331,0.251497,0.372834", \
				        "0.151630,0.165560,0.181172,0.211959,0.273162,0.394567", \
				        "0.186508,0.202776,0.220842,0.254783,0.318026,0.439002", \
				        "0.242327,0.262437,0.284525,0.325038,0.399511,0.531981", \
				        "0.338604,0.364013,0.389836,0.440234,0.529854,0.687374");
			}
			fall_transition(Timing_X4) {
				values ("0.017487,0.021068,0.024964,0.032749,0.048335,0.079559", \
				        "0.017442,0.021042,0.024966,0.032743,0.048345,0.079553", \
				        "0.018006,0.021266,0.024959,0.032692,0.048350,0.079571", \
				        "0.024522,0.027435,0.030432,0.036039,0.049119,0.079548", \
				        "0.035755,0.039545,0.043614,0.050505,0.062029,0.084414", \
				        "0.054085,0.059181,0.064450,0.073714,0.089340,0.114603", \
				        "0.085439,0.092270,0.099575,0.111980,0.132759,0.166347", \
				        "0.168530,0.175406,0.182914,0.196519,0.220503,0.250254");
			}
			rise_transition(Timing_X4) {
				values ("0.063802,0.076149,0.090341,0.117921,0.172879,0.282168", \
				        "0.063806,0.076137,0.090340,0.117968,0.172923,0.282172", \
				        "0.063811,0.076129,0.090247,0.117901,0.172896,0.282176", \
				        "0.063840,0.076151,0.090350,0.117896,0.172906,0.282186", \
				        "0.066960,0.078148,0.091498,0.118109,0.172867,0.282167", \
				        "0.083264,0.093952,0.106335,0.129613,0.177675,0.282276", \
				        "0.111803,0.123679,0.136811,0.161739,0.209337,0.301033", \
				        "0.159452,0.172655,0.187179,0.214829,0.267140,0.365040");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024892,0.029442,0.034452,0.044125,0.062890,0.099440", \
				        "0.028191,0.032682,0.037693,0.047371,0.066078,0.102722", \
				        "0.035361,0.039562,0.044401,0.053964,0.072611,0.109142", \
				        "0.045592,0.051301,0.057115,0.067711,0.086148,0.122500", \
				        "0.056285,0.063886,0.071914,0.086199,0.110608,0.150171", \
				        "0.064971,0.075194,0.085868,0.105012,0.137964,0.192011", \
				        "0.066481,0.079818,0.094089,0.119479,0.163465,0.236153", \
				        "0.048961,0.066539,0.084924,0.118674,0.177142,0.274032");
			}
			cell_rise(Timing_X4) {
				values ("0.077338,0.088559,0.101274,0.126402,0.176328,0.275632", \
				        "0.080799,0.091963,0.104682,0.129763,0.179727,0.279090", \
				        "0.087242,0.098465,0.110958,0.136200,0.186224,0.285649", \
				        "0.098765,0.110077,0.122763,0.147950,0.197982,0.297507", \
				        "0.118389,0.131056,0.144730,0.170357,0.220431,0.319962", \
				        "0.146550,0.162008,0.178548,0.209164,0.264926,0.365623", \
				        "0.192101,0.211321,0.231893,0.269184,0.336325,0.453400", \
				        "0.270060,0.294524,0.319384,0.366395,0.448719,0.590275");
			}
			fall_transition(Timing_X4) {
				values ("0.021569,0.025116,0.029159,0.037128,0.052762,0.083743", \
				        "0.021231,0.024918,0.029027,0.037087,0.052760,0.083745", \
				        "0.022131,0.025243,0.029032,0.036888,0.052732,0.083742", \
				        "0.030448,0.032720,0.035226,0.040773,0.053701,0.083737", \
				        "0.045157,0.047806,0.051157,0.056928,0.067255,0.088899", \
				        "0.067833,0.071484,0.075544,0.083084,0.096716,0.120219", \
				        "0.104873,0.110024,0.115340,0.125269,0.143178,0.174183", \
				        "0.168530,0.175406,0.182914,0.196519,0.220503,0.261032");
			}
			rise_transition(Timing_X4) {
				values ("0.043835,0.053964,0.065655,0.088255,0.133526,0.223703", \
				        "0.043834,0.053950,0.065595,0.088290,0.133526,0.223713", \
				        "0.043837,0.053974,0.065650,0.088320,0.133527,0.223688", \
				        "0.044119,0.054095,0.065702,0.088315,0.133460,0.223687", \
				        "0.051484,0.059886,0.069734,0.090188,0.133554,0.223724", \
				        "0.068169,0.077109,0.087364,0.106622,0.144034,0.225597", \
				        "0.096242,0.106062,0.117075,0.138011,0.177992,0.254126", \
				        "0.143481,0.154495,0.166699,0.190044,0.234278,0.317214");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & !C1 & !C2 | !B1 & !B2 & !C1";
			sdf_cond	   : "(B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027882,0.032171,0.036971,0.046445,0.064913,0.101191", \
				        "0.031178,0.035379,0.040247,0.049730,0.068197,0.104477", \
				        "0.038123,0.042248,0.047049,0.056399,0.074814,0.110989", \
				        "0.048973,0.054355,0.059868,0.070056,0.088337,0.124362", \
				        "0.060468,0.067597,0.075082,0.088999,0.112963,0.152044", \
				        "0.069529,0.079409,0.089635,0.108281,0.140713,0.194246", \
				        "0.070213,0.083162,0.097063,0.122240,0.166056,0.238338", \
				        "0.047195,0.065174,0.083522,0.117645,0.176675,0.274145");
			}
			cell_rise(Timing_X4) {
				values ("0.068451,0.080289,0.093701,0.119983,0.172293,0.276462", \
				        "0.071604,0.083357,0.096785,0.123142,0.175511,0.279754", \
				        "0.077823,0.089616,0.102858,0.129261,0.181685,0.285986", \
				        "0.089660,0.101605,0.114921,0.141345,0.193876,0.298283", \
				        "0.109493,0.123519,0.138417,0.165609,0.218216,0.322655", \
				        "0.136916,0.154513,0.173524,0.207579,0.267428,0.373012", \
				        "0.182800,0.205396,0.228703,0.271425,0.345904,0.471770", \
				        "0.264224,0.292510,0.321290,0.374518,0.466993,0.623843");
			}
			fall_transition(Timing_X4) {
				values ("0.017487,0.021068,0.024964,0.032749,0.048335,0.079559", \
				        "0.017442,0.021042,0.024966,0.032743,0.048345,0.079553", \
				        "0.018006,0.021266,0.024959,0.032692,0.048350,0.079571", \
				        "0.024522,0.027435,0.030432,0.036039,0.049119,0.079548", \
				        "0.035755,0.039545,0.043614,0.050505,0.062029,0.084414", \
				        "0.054085,0.059181,0.064450,0.073714,0.089340,0.114603", \
				        "0.085439,0.092270,0.099575,0.111980,0.132759,0.166347", \
				        "0.139090,0.149356,0.159635,0.177048,0.205536,0.250254");
			}
			rise_transition(Timing_X4) {
				values ("0.043981,0.054079,0.065837,0.088963,0.135137,0.227123", \
				        "0.043955,0.054087,0.065830,0.088994,0.135164,0.227105", \
				        "0.043969,0.054091,0.065826,0.088998,0.135122,0.227140", \
				        "0.044388,0.054171,0.065835,0.088947,0.135116,0.227154", \
				        "0.053939,0.061760,0.071128,0.091130,0.135160,0.227155", \
				        "0.074839,0.082984,0.092587,0.110770,0.146658,0.228578", \
				        "0.107048,0.116246,0.126855,0.147619,0.186920,0.259827", \
				        "0.159663,0.169455,0.181033,0.204542,0.249991,0.333818");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024668,0.029149,0.034189,0.043868,0.062578,0.099099", \
				        "0.028024,0.032420,0.037462,0.047130,0.065838,0.102300", \
				        "0.035202,0.039425,0.044280,0.053818,0.072416,0.108793", \
				        "0.045326,0.051010,0.056680,0.067348,0.085944,0.122154", \
				        "0.055619,0.063211,0.071180,0.085618,0.110102,0.149854", \
				        "0.062923,0.073343,0.083997,0.103511,0.136822,0.191169", \
				        "0.060468,0.074323,0.088918,0.115119,0.160081,0.233801", \
				        "0.032932,0.051669,0.070905,0.106272,0.167027,0.266592");
			}
			cell_rise(Timing_X4) {
				values ("0.076438,0.090186,0.105694,0.136270,0.196964,0.317823", \
				        "0.079600,0.093276,0.108854,0.139401,0.200158,0.321054", \
				        "0.085561,0.099360,0.114702,0.145345,0.206133,0.327145", \
				        "0.096532,0.110456,0.125989,0.156564,0.217469,0.338630", \
				        "0.114917,0.130414,0.147152,0.178287,0.239165,0.360336", \
				        "0.141489,0.160180,0.180442,0.217232,0.283496,0.404859", \
				        "0.187429,0.210940,0.235375,0.280053,0.358902,0.496040", \
				        "0.270669,0.300182,0.329841,0.385024,0.480857,0.645021");
			}
			fall_transition(Timing_X4) {
				values ("0.016979,0.020600,0.024493,0.032220,0.047702,0.078773", \
				        "0.016643,0.020375,0.024333,0.032171,0.047702,0.078749", \
				        "0.017685,0.020802,0.024611,0.031981,0.047687,0.078765", \
				        "0.024613,0.027478,0.030524,0.035887,0.048612,0.078763", \
				        "0.035979,0.039691,0.043789,0.050520,0.061913,0.083923", \
				        "0.054608,0.059630,0.064958,0.074013,0.089346,0.114459", \
				        "0.086125,0.093449,0.100522,0.112839,0.133203,0.166511", \
				        "0.141519,0.151732,0.161858,0.179103,0.207190,0.251301");
			}
			rise_transition(Timing_X4) {
				values ("0.045787,0.057794,0.071535,0.098781,0.153255,0.261815", \
				        "0.045790,0.057756,0.071584,0.098837,0.153218,0.261815", \
				        "0.045791,0.057799,0.071631,0.098833,0.153277,0.261809", \
				        "0.046205,0.057951,0.071685,0.098872,0.153268,0.261816", \
				        "0.054056,0.063942,0.075698,0.100305,0.153261,0.261794", \
				        "0.072147,0.082087,0.093838,0.116445,0.161611,0.262445", \
				        "0.101941,0.112581,0.124878,0.148924,0.195675,0.285755", \
				        "0.151698,0.163073,0.176182,0.202426,0.253411,0.350338");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 | B1 & !B2 & !C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.025226,0.029799,0.034767,0.044504,0.063242,0.099939", \
				        "0.028537,0.033044,0.038048,0.047738,0.066504,0.103200", \
				        "0.035744,0.039908,0.044756,0.054373,0.073119,0.109701", \
				        "0.046128,0.051873,0.057625,0.068151,0.086574,0.123039", \
				        "0.056908,0.064607,0.072506,0.086754,0.111174,0.150688", \
				        "0.065208,0.075584,0.086341,0.105475,0.138569,0.192680", \
				        "0.065061,0.078582,0.093179,0.118791,0.163209,0.236404", \
				        "0.043595,0.060986,0.079726,0.113737,0.173220,0.271654");
			}
			cell_rise(Timing_X4) {
				values ("0.109947,0.123592,0.139121,0.169844,0.230846,0.352025", \
				        "0.113215,0.126758,0.142312,0.173053,0.234074,0.355248", \
				        "0.119278,0.132906,0.148192,0.179008,0.240089,0.361360", \
				        "0.130347,0.144091,0.159658,0.190331,0.251497,0.372834", \
				        "0.151630,0.165560,0.181172,0.211959,0.273162,0.394567", \
				        "0.186508,0.202776,0.220842,0.254783,0.318026,0.439002", \
				        "0.242327,0.262437,0.284525,0.325038,0.399511,0.531981", \
				        "0.338604,0.364013,0.389836,0.440234,0.529854,0.687374");
			}
			fall_transition(Timing_X4) {
				values ("0.027672,0.030874,0.034675,0.042307,0.057649,0.088460", \
				        "0.027339,0.030693,0.034563,0.042281,0.057640,0.088470", \
				        "0.028220,0.030996,0.034539,0.042104,0.057626,0.088463", \
				        "0.036532,0.038292,0.040508,0.045885,0.058560,0.088448", \
				        "0.053031,0.055207,0.057847,0.062800,0.072108,0.093578", \
				        "0.079008,0.081815,0.085076,0.091472,0.103631,0.125619", \
				        "0.121707,0.125519,0.129770,0.137973,0.153641,0.182318", \
				        "0.194061,0.199124,0.205086,0.216211,0.237021,0.274035");
			}
			rise_transition(Timing_X4) {
				values ("0.063802,0.076149,0.090341,0.117921,0.172879,0.282168", \
				        "0.063806,0.076137,0.090340,0.117968,0.172923,0.282172", \
				        "0.063811,0.076129,0.090247,0.117901,0.172896,0.282176", \
				        "0.063840,0.076151,0.090350,0.117896,0.172906,0.282186", \
				        "0.066960,0.078148,0.091498,0.118109,0.172867,0.282167", \
				        "0.083264,0.093952,0.106335,0.129613,0.177675,0.282276", \
				        "0.111803,0.123679,0.136811,0.161739,0.209337,0.301033", \
				        "0.159452,0.172655,0.187179,0.214829,0.267140,0.365040");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.037760,0.043327,0.049549,0.061567,0.084635,0.129079", \
				        "0.040697,0.046169,0.052412,0.064432,0.087494,0.131883", \
				        "0.046915,0.052353,0.058422,0.070448,0.093391,0.137712", \
				        "0.060103,0.065714,0.071657,0.083055,0.105639,0.149847", \
				        "0.075985,0.083522,0.091278,0.105973,0.131330,0.175170", \
				        "0.091440,0.101194,0.111466,0.130763,0.164645,0.221256", \
				        "0.101226,0.113604,0.127379,0.152486,0.197028,0.272331", \
				        "0.094310,0.111220,0.128593,0.161570,0.219727,0.318402");
			}
			cell_rise(Timing_X4) {
				values ("0.085454,0.097434,0.110959,0.137356,0.189726,0.293949", \
				        "0.089039,0.100913,0.114446,0.140851,0.193334,0.297653", \
				        "0.095608,0.107595,0.120950,0.147417,0.199920,0.304404", \
				        "0.107163,0.119161,0.132413,0.158780,0.211262,0.315772", \
				        "0.124881,0.137881,0.151949,0.178707,0.231138,0.335612", \
				        "0.145848,0.161364,0.178273,0.209500,0.266908,0.372575", \
				        "0.177985,0.196939,0.217311,0.254778,0.321937,0.441852", \
				        "0.241088,0.265829,0.290822,0.336836,0.416644,0.555101");
			}
			fall_transition(Timing_X4) {
				values ("0.027163,0.031587,0.036400,0.045817,0.064431,0.101445", \
				        "0.027018,0.031475,0.036294,0.045809,0.064408,0.101486", \
				        "0.026165,0.030878,0.035998,0.045607,0.064398,0.101478", \
				        "0.030161,0.033548,0.037647,0.046044,0.064080,0.101456", \
				        "0.042241,0.046325,0.050639,0.058094,0.071654,0.102692", \
				        "0.061783,0.067174,0.072831,0.082647,0.099471,0.127820", \
				        "0.094316,0.101360,0.108963,0.122134,0.144445,0.181263", \
				        "0.148634,0.159163,0.169536,0.187758,0.218013,0.266662");
			}
			rise_transition(Timing_X4) {
				values ("0.043957,0.054059,0.065913,0.089005,0.135119,0.227149", \
				        "0.043992,0.054102,0.065909,0.088948,0.135160,0.227153", \
				        "0.043963,0.054105,0.065908,0.088990,0.135160,0.227151", \
				        "0.044081,0.054161,0.065919,0.088983,0.135154,0.227152", \
				        "0.049092,0.057955,0.068393,0.089991,0.135179,0.227149", \
				        "0.063116,0.072225,0.082728,0.103300,0.143199,0.228481", \
				        "0.093777,0.101877,0.111762,0.131859,0.172711,0.253087", \
				        "0.148674,0.156444,0.165768,0.185429,0.225963,0.308143");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031320,0.037232,0.043857,0.056363,0.080034,0.125188", \
				        "0.034381,0.040182,0.046768,0.059235,0.082893,0.127978", \
				        "0.041241,0.046713,0.053065,0.065341,0.088795,0.133741", \
				        "0.054233,0.060359,0.066586,0.078396,0.101176,0.145894", \
				        "0.068855,0.076807,0.085220,0.100426,0.126869,0.171338", \
				        "0.081907,0.092396,0.103398,0.123667,0.158724,0.216764", \
				        "0.087797,0.101580,0.116119,0.142459,0.188632,0.265865", \
				        "0.075678,0.093463,0.111840,0.146313,0.206591,0.308018");
			}
			cell_rise(Timing_X4) {
				values ("0.093396,0.107292,0.122930,0.153539,0.214329,0.335298", \
				        "0.096870,0.110710,0.126378,0.157069,0.217938,0.339000", \
				        "0.103439,0.117346,0.132774,0.163534,0.224432,0.345684", \
				        "0.114935,0.128758,0.144141,0.174736,0.235681,0.356913", \
				        "0.132240,0.146941,0.163039,0.193754,0.254606,0.375823", \
				        "0.152692,0.169788,0.188405,0.223112,0.287700,0.409205", \
				        "0.184754,0.204848,0.226543,0.266852,0.340019,0.473428", \
				        "0.248731,0.274507,0.300671,0.348932,0.433493,0.583077");
			}
			fall_transition(Timing_X4) {
				values ("0.025956,0.030604,0.035570,0.045212,0.063958,0.100911", \
				        "0.025422,0.030254,0.035313,0.045008,0.063914,0.100893", \
				        "0.024635,0.029359,0.034504,0.044609,0.063693,0.100819", \
				        "0.030291,0.033671,0.037396,0.045274,0.063164,0.100646", \
				        "0.042917,0.046887,0.051161,0.058516,0.071786,0.102109", \
				        "0.063290,0.068629,0.074091,0.083561,0.100071,0.127924", \
				        "0.097492,0.104398,0.111772,0.124502,0.146027,0.182013", \
				        "0.155124,0.165446,0.175465,0.193072,0.222175,0.269378");
			}
			rise_transition(Timing_X4) {
				values ("0.045783,0.057800,0.071588,0.098853,0.153280,0.261788", \
				        "0.045792,0.057825,0.071634,0.098837,0.153274,0.261819", \
				        "0.045804,0.057823,0.071620,0.098836,0.153276,0.261795", \
				        "0.045922,0.057850,0.071645,0.098858,0.153225,0.261809", \
				        "0.050053,0.060751,0.073420,0.099406,0.153276,0.261817", \
				        "0.062314,0.073343,0.085945,0.110503,0.159016,0.262337", \
				        "0.089984,0.100113,0.112091,0.136425,0.185348,0.281784", \
				        "0.142808,0.152410,0.163705,0.187198,0.235047,0.332618");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A & B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031740,0.037773,0.044352,0.056863,0.080598,0.125840", \
				        "0.034825,0.040683,0.047261,0.059749,0.083472,0.128651", \
				        "0.041620,0.047130,0.053514,0.065819,0.089329,0.134399", \
				        "0.054722,0.060905,0.067211,0.078842,0.101703,0.146499", \
				        "0.069623,0.077590,0.086068,0.101249,0.127524,0.171939", \
				        "0.083256,0.093699,0.104779,0.124861,0.159778,0.217635", \
				        "0.090723,0.103967,0.118496,0.144536,0.190400,0.267353", \
				        "0.081040,0.098380,0.116427,0.150281,0.209947,0.310808");
			}
			cell_rise(Timing_X4) {
				values ("0.110631,0.124385,0.139999,0.170709,0.231674,0.352797", \
				        "0.114157,0.127818,0.143482,0.174259,0.235301,0.356511", \
				        "0.120633,0.134452,0.149953,0.180788,0.241865,0.363179", \
				        "0.132046,0.145832,0.161209,0.191990,0.253046,0.374450", \
				        "0.150478,0.164527,0.180280,0.210979,0.271954,0.393333", \
				        "0.174053,0.190251,0.208045,0.241923,0.305392,0.426680", \
				        "0.210224,0.228856,0.249525,0.288289,0.359975,0.491801", \
				        "0.280246,0.303551,0.328081,0.374023,0.456072,0.603452");
			}
			fall_transition(Timing_X4) {
				values ("0.034071,0.038092,0.042798,0.052094,0.070438,0.106973", \
				        "0.033512,0.037687,0.042506,0.051921,0.070364,0.106963", \
				        "0.032548,0.036665,0.041746,0.051461,0.070172,0.106936", \
				        "0.037911,0.040711,0.044279,0.052060,0.069637,0.106787", \
				        "0.053182,0.056038,0.059400,0.065807,0.078115,0.108181", \
				        "0.077585,0.081446,0.085638,0.093483,0.108139,0.134336", \
				        "0.117402,0.122423,0.128057,0.138407,0.157314,0.190784", \
				        "0.183597,0.190768,0.198657,0.212955,0.238274,0.281734");
			}
			rise_transition(Timing_X4) {
				values ("0.054982,0.067192,0.081135,0.108679,0.163350,0.272302", \
				        "0.054988,0.067196,0.081214,0.108660,0.163352,0.272302", \
				        "0.054966,0.067198,0.081211,0.108681,0.163366,0.272304", \
				        "0.055024,0.067224,0.081231,0.108675,0.163348,0.272293", \
				        "0.057482,0.068831,0.082073,0.108894,0.163355,0.272295", \
				        "0.069233,0.080740,0.093631,0.118371,0.167750,0.272529", \
				        "0.094380,0.105624,0.118439,0.143633,0.193333,0.290211", \
				        "0.144363,0.155431,0.167879,0.192700,0.241951,0.340841");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.042050,0.047627,0.053817,0.065875,0.088923,0.133370", \
				        "0.044609,0.050140,0.056341,0.068413,0.091450,0.135969", \
				        "0.049526,0.055131,0.061267,0.073295,0.096371,0.140949", \
				        "0.059174,0.064906,0.071183,0.083276,0.106288,0.150824", \
				        "0.073412,0.079959,0.087021,0.100472,0.125242,0.170314", \
				        "0.088751,0.097554,0.106602,0.123615,0.153591,0.205368", \
				        "0.099257,0.110998,0.123493,0.146292,0.186112,0.252543", \
				        "0.093345,0.109432,0.126077,0.156835,0.210756,0.300461");
			}
			cell_rise(Timing_X4) {
				values ("0.098688,0.110468,0.123859,0.150265,0.202731,0.306995", \
				        "0.102456,0.114117,0.127526,0.153965,0.206472,0.310794", \
				        "0.109201,0.121022,0.134310,0.160795,0.213248,0.317609", \
				        "0.120899,0.132704,0.146051,0.172365,0.224848,0.329218", \
				        "0.140030,0.152394,0.166065,0.192519,0.244962,0.349370", \
				        "0.164060,0.178702,0.194763,0.225198,0.281457,0.386462", \
				        "0.201724,0.219168,0.238209,0.274021,0.339390,0.457369", \
				        "0.278668,0.300894,0.323347,0.366034,0.441740,0.576082");
			}
			fall_transition(Timing_X4) {
				values ("0.027137,0.031589,0.036457,0.045801,0.064436,0.101443", \
				        "0.027074,0.031507,0.036449,0.045788,0.064431,0.101498", \
				        "0.026730,0.031229,0.036182,0.045712,0.064409,0.101462", \
				        "0.028095,0.032142,0.036798,0.045868,0.064313,0.101471", \
				        "0.034444,0.038379,0.042995,0.051307,0.067770,0.102330", \
				        "0.048392,0.052747,0.057447,0.065968,0.082120,0.113818", \
				        "0.072831,0.078394,0.084312,0.094863,0.113058,0.145374", \
				        "0.112941,0.120711,0.129028,0.143339,0.167366,0.206683");
			}
			rise_transition(Timing_X4) {
				values ("0.051403,0.061679,0.073435,0.096820,0.143155,0.235434", \
				        "0.051407,0.061661,0.073444,0.096801,0.143152,0.235443", \
				        "0.051396,0.061673,0.073458,0.096855,0.143174,0.235426", \
				        "0.051433,0.061668,0.073509,0.096817,0.143187,0.235425", \
				        "0.054809,0.064052,0.075009,0.097317,0.143147,0.235433", \
				        "0.068303,0.077754,0.088508,0.109265,0.149761,0.236328", \
				        "0.094613,0.104078,0.114962,0.136478,0.178468,0.259352", \
				        "0.138836,0.149183,0.160606,0.183209,0.227273,0.312739");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.035588,0.041542,0.048011,0.060600,0.084317,0.129502", \
				        "0.038220,0.044106,0.050607,0.063157,0.086875,0.132077", \
				        "0.043392,0.049260,0.055667,0.068106,0.091755,0.137024", \
				        "0.053167,0.059226,0.065880,0.078186,0.101735,0.146882", \
				        "0.066536,0.073669,0.081186,0.095281,0.120580,0.166373", \
				        "0.080016,0.089449,0.099236,0.117108,0.148196,0.201035", \
				        "0.087026,0.099746,0.112922,0.137124,0.178652,0.246863", \
				        "0.074930,0.092298,0.110082,0.142575,0.198878,0.291387");
			}
			cell_rise(Timing_X4) {
				values ("0.108911,0.122548,0.138074,0.168683,0.229530,0.350512", \
				        "0.112611,0.126194,0.141628,0.172364,0.233256,0.354274", \
				        "0.119345,0.133025,0.148455,0.179105,0.240016,0.361095", \
				        "0.130991,0.144656,0.160064,0.190643,0.251535,0.372650", \
				        "0.149492,0.163574,0.179304,0.209908,0.270743,0.391848", \
				        "0.172788,0.188988,0.206834,0.240777,0.304258,0.425419", \
				        "0.209770,0.228420,0.248871,0.287664,0.359221,0.490845", \
				        "0.287178,0.310498,0.334106,0.379126,0.459883,0.605682");
			}
			fall_transition(Timing_X4) {
				values ("0.025911,0.030573,0.035588,0.045229,0.063944,0.100909", \
				        "0.025693,0.030363,0.035451,0.045093,0.063924,0.100878", \
				        "0.025218,0.029872,0.035024,0.044877,0.063791,0.100876", \
				        "0.027248,0.031384,0.035982,0.045045,0.063565,0.100762", \
				        "0.034427,0.038331,0.042716,0.051015,0.067252,0.101585", \
				        "0.049312,0.053444,0.058048,0.066454,0.082148,0.113400", \
				        "0.074736,0.080227,0.085988,0.096200,0.113892,0.145556", \
				        "0.116931,0.124498,0.132599,0.146516,0.169834,0.208145");
			}
			rise_transition(Timing_X4) {
				values ("0.054444,0.066626,0.080580,0.108135,0.162754,0.271686", \
				        "0.054459,0.066643,0.080547,0.108119,0.162767,0.271687", \
				        "0.054455,0.066657,0.080548,0.108128,0.162749,0.271681", \
				        "0.054500,0.066656,0.080624,0.108090,0.162797,0.271667", \
				        "0.057033,0.068374,0.081567,0.108359,0.162792,0.271684", \
				        "0.068724,0.080258,0.093105,0.117887,0.167279,0.271946", \
				        "0.092137,0.103833,0.116893,0.142638,0.192660,0.289679", \
				        "0.134121,0.146364,0.159968,0.186536,0.238067,0.339006");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A & B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036019,0.042021,0.048545,0.061104,0.084882,0.130149", \
				        "0.038625,0.044562,0.051129,0.063676,0.087440,0.132709", \
				        "0.043795,0.049729,0.056089,0.068608,0.092316,0.137674", \
				        "0.053594,0.059685,0.066229,0.078650,0.102282,0.147511", \
				        "0.067128,0.074289,0.081853,0.095816,0.121170,0.166970", \
				        "0.080908,0.090306,0.100204,0.118010,0.148989,0.201778", \
				        "0.088715,0.101305,0.114578,0.138580,0.179901,0.247921", \
				        "0.078232,0.095109,0.112970,0.145149,0.201084,0.293234");
			}
			cell_rise(Timing_X4) {
				values ("0.126065,0.139692,0.155221,0.185897,0.246865,0.368007", \
				        "0.129763,0.143353,0.158864,0.189567,0.250616,0.371779", \
				        "0.136500,0.150202,0.165544,0.196350,0.257338,0.378568", \
				        "0.148089,0.161786,0.177209,0.207860,0.268889,0.390107", \
				        "0.167047,0.180783,0.196445,0.227154,0.288093,0.409350", \
				        "0.193180,0.208752,0.226030,0.259216,0.321758,0.442908", \
				        "0.233426,0.251191,0.270961,0.308518,0.378867,0.509073", \
				        "0.315350,0.337199,0.359471,0.402844,0.481750,0.625741");
			}
			fall_transition(Timing_X4) {
				values ("0.034030,0.038097,0.042785,0.052074,0.070418,0.106975", \
				        "0.033809,0.037895,0.042657,0.052007,0.070381,0.106956", \
				        "0.033243,0.037351,0.042214,0.051736,0.070280,0.106938", \
				        "0.035054,0.038723,0.043037,0.051925,0.069999,0.106881", \
				        "0.043160,0.046335,0.050175,0.058000,0.073660,0.107666", \
				        "0.060332,0.063516,0.067210,0.074583,0.089209,0.119691", \
				        "0.089952,0.094089,0.098534,0.106988,0.122749,0.152877", \
				        "0.138471,0.144183,0.150543,0.161903,0.182309,0.217886");
			}
			rise_transition(Timing_X4) {
				values ("0.063806,0.076143,0.090274,0.117922,0.172924,0.282183", \
				        "0.063804,0.076163,0.090273,0.117969,0.172923,0.282182", \
				        "0.063803,0.076132,0.090176,0.117933,0.172895,0.282188", \
				        "0.063815,0.076153,0.090209,0.117912,0.172925,0.282181", \
				        "0.065159,0.076993,0.090579,0.118060,0.172917,0.282185", \
				        "0.076271,0.088009,0.100976,0.125912,0.176304,0.282278", \
				        "0.098577,0.110836,0.124212,0.150370,0.200845,0.298292", \
				        "0.139570,0.152347,0.166364,0.193546,0.245813,0.347541");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018933,0.023711,0.029116,0.039882,0.061144,0.103548", \
				        "0.022063,0.026773,0.032207,0.042880,0.064216,0.106620", \
				        "0.027657,0.033036,0.038556,0.049173,0.070369,0.112669", \
				        "0.033590,0.040778,0.048096,0.061175,0.082951,0.125035", \
				        "0.038303,0.047906,0.057663,0.075121,0.104261,0.150775", \
				        "0.037800,0.050753,0.063977,0.087257,0.126324,0.189021", \
				        "0.023661,0.041322,0.059099,0.090533,0.142916,0.226806", \
				        "-0.020811,0.002457,0.026270,0.068230,0.138671,0.251595");
			}
			cell_rise(Timing_X4) {
				values ("0.033004,0.044190,0.056991,0.082132,0.132024,0.231268", \
				        "0.036138,0.047186,0.059931,0.085026,0.134925,0.234205", \
				        "0.043423,0.053869,0.066287,0.091216,0.140978,0.240154", \
				        "0.058573,0.069353,0.080810,0.104728,0.153838,0.252447", \
				        "0.079679,0.093602,0.108156,0.134180,0.181567,0.278722", \
				        "0.111204,0.128228,0.146546,0.179733,0.237465,0.335097", \
				        "0.159887,0.181866,0.204441,0.245810,0.318273,0.441134", \
				        "0.240928,0.268347,0.297096,0.348664,0.438623,0.592208");
			}
			fall_transition(Timing_X4) {
				values ("0.012442,0.016636,0.021132,0.030338,0.048658,0.085468", \
				        "0.012520,0.016550,0.021113,0.030308,0.048680,0.085470", \
				        "0.015636,0.018581,0.022244,0.030389,0.048697,0.085407", \
				        "0.022228,0.025736,0.029491,0.035870,0.050184,0.085412", \
				        "0.033683,0.037852,0.042389,0.050434,0.064185,0.090498", \
				        "0.053496,0.058933,0.064646,0.074439,0.091641,0.120516", \
				        "0.088236,0.095481,0.102911,0.115859,0.137641,0.173823", \
				        "0.150393,0.160096,0.170161,0.187729,0.216780,0.263221");
			}
			rise_transition(Timing_X4) {
				values ("0.034755,0.045632,0.057640,0.080285,0.125222,0.215153", \
				        "0.034046,0.045200,0.057411,0.080277,0.125281,0.215136", \
				        "0.033221,0.043934,0.056654,0.080172,0.125297,0.215176", \
				        "0.037683,0.046086,0.056585,0.078938,0.125244,0.215163", \
				        "0.049071,0.057712,0.067291,0.084974,0.125126,0.215173", \
				        "0.067183,0.077279,0.088405,0.108539,0.144072,0.218780", \
				        "0.098626,0.110050,0.122626,0.146208,0.189203,0.263150", \
				        "0.156250,0.168834,0.183244,0.210000,0.259945,0.349472");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & !B1 & B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018898,0.023684,0.029063,0.039841,0.061114,0.103529", \
				        "0.022063,0.026769,0.032179,0.042858,0.064201,0.106623", \
				        "0.027693,0.033058,0.038600,0.049176,0.070380,0.112687", \
				        "0.033695,0.040869,0.048180,0.061235,0.082993,0.125082", \
				        "0.038215,0.047863,0.057637,0.075138,0.104298,0.150814", \
				        "0.036610,0.049721,0.063119,0.086664,0.125996,0.188888", \
				        "0.019247,0.037359,0.055557,0.087636,0.140848,0.225647", \
				        "-0.032811,-0.008769,0.015890,0.059029,0.131301,0.246435");
			}
			cell_rise(Timing_X4) {
				values ("0.035151,0.048463,0.064019,0.094795,0.155627,0.276689", \
				        "0.038306,0.051476,0.066910,0.097586,0.158447,0.279513", \
				        "0.045850,0.058195,0.073215,0.103665,0.164352,0.285286", \
				        "0.062277,0.074166,0.087642,0.116828,0.176781,0.297100", \
				        "0.086235,0.101444,0.117510,0.146411,0.203736,0.322358", \
				        "0.121928,0.140507,0.160635,0.197353,0.261602,0.376810", \
				        "0.177263,0.201126,0.225719,0.271210,0.351427,0.488507", \
				        "0.270210,0.299706,0.330845,0.386817,0.485505,0.655770");
			}
			fall_transition(Timing_X4) {
				values ("0.012411,0.016577,0.021127,0.030334,0.048673,0.085479", \
				        "0.012541,0.016482,0.021099,0.030266,0.048678,0.085479", \
				        "0.015601,0.018596,0.022189,0.030431,0.048692,0.085413", \
				        "0.022164,0.025669,0.029460,0.035824,0.050170,0.085415", \
				        "0.033624,0.037802,0.042353,0.050397,0.064147,0.090485", \
				        "0.053550,0.059030,0.064768,0.074600,0.091776,0.120577", \
				        "0.088627,0.095992,0.103524,0.116553,0.138374,0.174422", \
				        "0.151264,0.161352,0.171634,0.189467,0.218761,0.265221");
			}
			rise_transition(Timing_X4) {
				values ("0.041686,0.055695,0.070727,0.098694,0.153279,0.261809", \
				        "0.040786,0.055139,0.070476,0.098687,0.153277,0.261814", \
				        "0.039361,0.053325,0.069287,0.098454,0.153269,0.261787", \
				        "0.042440,0.053791,0.067762,0.096609,0.153217,0.261820", \
				        "0.053822,0.064019,0.075485,0.098983,0.151439,0.261824", \
				        "0.072002,0.083664,0.096449,0.120052,0.163798,0.261485", \
				        "0.103285,0.116238,0.130580,0.157685,0.207447,0.294893", \
				        "0.160101,0.174202,0.190459,0.220747,0.277905,0.381161");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A & B1 & !B2 & C2";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019146,0.023917,0.029331,0.040085,0.061486,0.104039", \
				        "0.022261,0.026992,0.032403,0.043124,0.064532,0.107138", \
				        "0.027999,0.033377,0.038838,0.049431,0.070762,0.113218", \
				        "0.034131,0.041385,0.048634,0.061571,0.083354,0.125597", \
				        "0.038892,0.048558,0.058441,0.075735,0.104858,0.151277", \
				        "0.037894,0.050974,0.064417,0.087778,0.126936,0.189715", \
				        "0.021898,0.039741,0.057964,0.089691,0.142541,0.227045", \
				        "-0.026482,-0.003327,0.020772,0.063218,0.134678,0.249167");
			}
			cell_rise(Timing_X4) {
				values ("0.051184,0.064841,0.080461,0.111300,0.172252,0.293415", \
				        "0.054134,0.067752,0.083312,0.114093,0.175078,0.296275", \
				        "0.060681,0.074066,0.089500,0.120095,0.180956,0.302025", \
				        "0.076066,0.088152,0.102961,0.132971,0.193228,0.313760", \
				        "0.104122,0.118229,0.133230,0.161103,0.219853,0.338882", \
				        "0.144421,0.161720,0.180655,0.215609,0.277660,0.392881", \
				        "0.205227,0.227214,0.250413,0.294020,0.371694,0.505649", \
				        "0.305254,0.332778,0.361482,0.415040,0.510369,0.677247");
			}
			fall_transition(Timing_X4) {
				values ("0.016113,0.020700,0.025747,0.035438,0.054066,0.090860", \
				        "0.016204,0.020602,0.025727,0.035423,0.054074,0.090856", \
				        "0.019558,0.022745,0.026829,0.035510,0.054083,0.090818", \
				        "0.028596,0.031471,0.034838,0.040912,0.055608,0.090825", \
				        "0.043875,0.046765,0.050387,0.057316,0.069910,0.095911", \
				        "0.068959,0.072567,0.076732,0.084633,0.099755,0.126770", \
				        "0.111876,0.116126,0.121280,0.131207,0.149808,0.183075", \
				        "0.185577,0.191421,0.198154,0.211369,0.235638,0.277636");
			}
			rise_transition(Timing_X4) {
				values ("0.052824,0.065970,0.080445,0.108128,0.162770,0.271689", \
				        "0.052421,0.065685,0.080350,0.108112,0.162807,0.271691", \
				        "0.050821,0.064736,0.079921,0.108019,0.162808,0.271684", \
				        "0.050322,0.062826,0.077641,0.107168,0.162794,0.271691", \
				        "0.059657,0.069972,0.081836,0.107032,0.161405,0.271691", \
				        "0.077975,0.089686,0.102589,0.126094,0.170706,0.270926", \
				        "0.108492,0.122195,0.136852,0.164283,0.213880,0.301361", \
				        "0.163630,0.178851,0.195998,0.227079,0.284925,0.388143");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023300,0.028120,0.033534,0.044291,0.065589,0.108070", \
				        "0.025915,0.030690,0.036179,0.046919,0.068335,0.110870", \
				        "0.030444,0.035586,0.041047,0.051889,0.073330,0.115978", \
				        "0.036515,0.042667,0.049158,0.061103,0.083249,0.125967", \
				        "0.042288,0.050605,0.058994,0.074072,0.099986,0.145460", \
				        "0.043830,0.055368,0.067029,0.087472,0.121471,0.176616", \
				        "0.032640,0.048784,0.065191,0.093800,0.140777,0.214597", \
				        "-0.008666,0.014350,0.036943,0.076805,0.142218,0.244666");
			}
			cell_rise(Timing_X4) {
				values ("0.046107,0.057281,0.070024,0.095236,0.145165,0.244528", \
				        "0.049159,0.060285,0.073003,0.098187,0.148144,0.247494", \
				        "0.055828,0.066853,0.079431,0.104465,0.154258,0.253515", \
				        "0.071430,0.081414,0.093443,0.117971,0.167206,0.265927", \
				        "0.096964,0.109580,0.122982,0.147434,0.195056,0.292359", \
				        "0.133984,0.149617,0.166618,0.197759,0.252905,0.348998", \
				        "0.191484,0.211141,0.231872,0.270723,0.339973,0.458762", \
				        "0.287297,0.311847,0.338009,0.385802,0.470738,0.618747");
			}
			fall_transition(Timing_X4) {
				values ("0.012418,0.016582,0.021134,0.030314,0.048667,0.085447", \
				        "0.012416,0.016589,0.021126,0.030323,0.048685,0.085470", \
				        "0.013810,0.017390,0.021591,0.030346,0.048684,0.085383", \
				        "0.017831,0.021264,0.025208,0.032817,0.049366,0.085452", \
				        "0.026295,0.029746,0.033708,0.041045,0.056193,0.088035", \
				        "0.041504,0.045661,0.050242,0.058195,0.073126,0.102766", \
				        "0.067326,0.072750,0.078685,0.088842,0.106510,0.137268", \
				        "0.110230,0.118130,0.126133,0.140368,0.164104,0.202111");
			}
			rise_transition(Timing_X4) {
				values ("0.043331,0.053767,0.065513,0.088234,0.133487,0.223729", \
				        "0.043073,0.053644,0.065380,0.088335,0.133484,0.223734", \
				        "0.041867,0.052997,0.065199,0.088241,0.133516,0.223714", \
				        "0.043255,0.052720,0.064124,0.087637,0.133464,0.223701", \
				        "0.053718,0.062342,0.071712,0.090805,0.132913,0.223712", \
				        "0.071165,0.081636,0.092786,0.113125,0.148829,0.226101", \
				        "0.097779,0.110911,0.124625,0.149606,0.193363,0.267430", \
				        "0.144101,0.159338,0.176054,0.206056,0.259673,0.352120");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & !B1 & B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023287,0.028080,0.033518,0.044253,0.065560,0.108054", \
				        "0.025919,0.030711,0.036155,0.046892,0.068319,0.110866", \
				        "0.030465,0.035646,0.041080,0.051864,0.073323,0.115998", \
				        "0.036635,0.042772,0.049247,0.061171,0.083304,0.126023", \
				        "0.042460,0.050760,0.059139,0.074204,0.100091,0.145545", \
				        "0.043524,0.055116,0.066861,0.087382,0.121468,0.176660", \
				        "0.030220,0.046604,0.063294,0.092268,0.139791,0.214089", \
				        "-0.016814,0.006835,0.029970,0.070756,0.137524,0.241515");
			}
			cell_rise(Timing_X4) {
				values ("0.050982,0.064586,0.080097,0.110854,0.171758,0.292870", \
				        "0.054017,0.067567,0.083029,0.113758,0.174675,0.295775", \
				        "0.060734,0.074047,0.089416,0.119915,0.180651,0.301625", \
				        "0.076415,0.088507,0.103215,0.133136,0.193241,0.313598", \
				        "0.105207,0.119072,0.133979,0.161741,0.220303,0.339086", \
				        "0.146832,0.164007,0.182705,0.217289,0.278870,0.393734", \
				        "0.210597,0.232573,0.255314,0.298303,0.375172,0.508010", \
				        "0.318187,0.344738,0.373386,0.425713,0.519449,0.684214");
			}
			fall_transition(Timing_X4) {
				values ("0.012375,0.016560,0.021125,0.030314,0.048674,0.085455", \
				        "0.012419,0.016568,0.021112,0.030314,0.048692,0.085478", \
				        "0.013785,0.017403,0.021586,0.030344,0.048659,0.085389", \
				        "0.017795,0.021273,0.025204,0.032787,0.049358,0.085459", \
				        "0.026214,0.029687,0.033644,0.040976,0.056152,0.088020", \
				        "0.041367,0.045572,0.050178,0.058170,0.073114,0.102746", \
				        "0.067347,0.072831,0.078756,0.089037,0.106736,0.137452", \
				        "0.110649,0.118704,0.126764,0.141121,0.164921,0.202961");
			}
			rise_transition(Timing_X4) {
				values ("0.053277,0.066436,0.080876,0.108623,0.163366,0.272287", \
				        "0.052870,0.066170,0.080743,0.108614,0.163375,0.272298", \
				        "0.051287,0.065230,0.080269,0.108542,0.163376,0.272290", \
				        "0.050869,0.063364,0.078072,0.107707,0.163360,0.272305", \
				        "0.059901,0.070179,0.082228,0.107540,0.161980,0.272305", \
				        "0.077505,0.089524,0.102330,0.126140,0.171041,0.271524", \
				        "0.104674,0.119083,0.134549,0.162857,0.213156,0.301283", \
				        "0.150602,0.167415,0.185945,0.219517,0.280224,0.385800");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A & B1 & !B2 & C1";
			sdf_cond	   : "(A == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023507,0.028346,0.033761,0.044516,0.065941,0.108550", \
				        "0.026127,0.030942,0.036408,0.047164,0.068709,0.111374", \
				        "0.030725,0.035904,0.041316,0.052158,0.073705,0.116527", \
				        "0.036961,0.043139,0.049548,0.061475,0.083646,0.126524", \
				        "0.042969,0.051280,0.059696,0.074606,0.100501,0.146042", \
				        "0.044394,0.055969,0.067758,0.088193,0.122161,0.177308", \
				        "0.031830,0.048131,0.064847,0.093629,0.140977,0.215053", \
				        "-0.013315,0.009823,0.032935,0.073365,0.139710,0.243292");
			}
			cell_rise(Timing_X4) {
				values ("0.067422,0.081050,0.096591,0.127390,0.188396,0.309606", \
				        "0.070397,0.084012,0.099524,0.130264,0.191292,0.312500", \
				        "0.076715,0.090326,0.105773,0.136411,0.197246,0.318361", \
				        "0.090936,0.104045,0.119124,0.149404,0.209666,0.330273", \
				        "0.121601,0.134656,0.148839,0.177265,0.236446,0.355592", \
				        "0.167686,0.183735,0.201560,0.234648,0.294409,0.409897", \
				        "0.236310,0.256967,0.278595,0.319979,0.394730,0.524743", \
				        "0.349819,0.374897,0.401886,0.452317,0.543469,0.705120");
			}
			fall_transition(Timing_X4) {
				values ("0.016106,0.020664,0.025725,0.035433,0.054071,0.090863", \
				        "0.016116,0.020652,0.025706,0.035424,0.054070,0.090857", \
				        "0.017627,0.021477,0.026180,0.035462,0.054080,0.090818", \
				        "0.022777,0.026067,0.030158,0.037924,0.054801,0.090849", \
				        "0.033628,0.036313,0.039925,0.046835,0.061688,0.093378", \
				        "0.052582,0.055538,0.059016,0.065850,0.079624,0.108464", \
				        "0.084152,0.087773,0.091997,0.100080,0.115492,0.144411", \
				        "0.136241,0.140993,0.146668,0.157660,0.177791,0.212626");
			}
			rise_transition(Timing_X4) {
				values ("0.063160,0.075909,0.090133,0.118007,0.172927,0.282163", \
				        "0.062975,0.075810,0.090149,0.117930,0.172927,0.282193", \
				        "0.062273,0.075426,0.090005,0.117928,0.172909,0.282187", \
				        "0.060092,0.073228,0.088556,0.117633,0.172923,0.282185", \
				        "0.066171,0.076854,0.089749,0.116218,0.172257,0.282187", \
				        "0.084284,0.096076,0.108761,0.132186,0.178431,0.281242", \
				        "0.112263,0.126714,0.141908,0.170008,0.219768,0.308049", \
				        "0.158621,0.175328,0.194110,0.227579,0.287975,0.392993");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X4) {
				values ("0.009285,0.007582,0.005651,0.001803,-0.005907,-0.021375", \
				        "0.009254,0.007577,0.005655,0.001821,-0.005886,-0.021349", \
				        "0.009269,0.007603,0.005691,0.001837,-0.005858,-0.021300", \
				        "0.009440,0.007716,0.005825,0.001961,-0.005776,-0.021235", \
				        "0.009968,0.008222,0.006277,0.002350,-0.005474,-0.021042", \
				        "0.011676,0.009822,0.007759,0.003661,-0.004399,-0.020215", \
				        "0.016078,0.014085,0.011832,0.007413,-0.001078,-0.017550", \
				        "0.026415,0.024233,0.021783,0.017007,0.007728,-0.009991");
			}
			rise_power(Power_X4) {
				values ("0.015633,0.017349,0.019315,0.023187,0.030933,0.046460", \
				        "0.015588,0.017317,0.019269,0.023141,0.030900,0.046409", \
				        "0.015517,0.017237,0.019157,0.023086,0.030849,0.046382", \
				        "0.015444,0.017161,0.019121,0.023018,0.030805,0.046317", \
				        "0.015411,0.017088,0.019053,0.022952,0.030743,0.046258", \
				        "0.015908,0.017584,0.019476,0.023282,0.030988,0.046447", \
				        "0.018542,0.020097,0.021867,0.025456,0.032841,0.047842", \
				        "0.026223,0.027514,0.028959,0.032048,0.038718,0.052899");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.012933,0.014667,0.016608,0.020475,0.028219,0.043734", \
				        "0.012882,0.014593,0.016541,0.020436,0.028185,0.043694", \
				        "0.012827,0.014515,0.016455,0.020354,0.028139,0.043669", \
				        "0.012699,0.014428,0.016403,0.020306,0.028090,0.043619", \
				        "0.012685,0.014397,0.016345,0.020261,0.028022,0.043577", \
				        "0.013433,0.015090,0.016960,0.020740,0.028398,0.043817", \
				        "0.016771,0.018158,0.019872,0.023331,0.030555,0.045470", \
				        "0.025822,0.026936,0.028154,0.030982,0.037325,0.051122");
			}
			fall_power(Power_X4) {
				values ("0.008964,0.007287,0.005365,0.001509,-0.006190,-0.021645", \
				        "0.008946,0.007258,0.005330,0.001490,-0.006204,-0.021665", \
				        "0.008927,0.007256,0.005332,0.001490,-0.006202,-0.021627", \
				        "0.009058,0.007362,0.005440,0.001602,-0.006140,-0.021603", \
				        "0.009653,0.007896,0.005940,0.001981,-0.005837,-0.021373", \
				        "0.011484,0.009630,0.007514,0.003403,-0.004722,-0.020577", \
				        "0.016078,0.014085,0.011832,0.007379,-0.001213,-0.017762", \
				        "0.026415,0.024233,0.021783,0.017007,0.007728,-0.009991");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & !C1 & !C2 | !B1 & !B2 & !C1";

			rise_power(Power_X4) {
				values ("0.010703,0.012387,0.014335,0.018211,0.025970,0.041463", \
				        "0.010641,0.012329,0.014276,0.018159,0.025917,0.041421", \
				        "0.010480,0.012262,0.014216,0.018121,0.025881,0.041395", \
				        "0.010436,0.012164,0.014129,0.018042,0.025830,0.041364", \
				        "0.010426,0.012147,0.014087,0.018004,0.025763,0.041302", \
				        "0.011257,0.012833,0.014701,0.018474,0.026118,0.041519", \
				        "0.014726,0.016025,0.017640,0.021070,0.028258,0.043166", \
				        "0.023494,0.024455,0.025692,0.028474,0.034775,0.048646");
			}
			fall_power(Power_X4) {
				values ("0.009285,0.007582,0.005651,0.001803,-0.005907,-0.021375", \
				        "0.009254,0.007577,0.005655,0.001821,-0.005886,-0.021349", \
				        "0.009269,0.007603,0.005691,0.001837,-0.005858,-0.021300", \
				        "0.009440,0.007716,0.005825,0.001961,-0.005776,-0.021235", \
				        "0.009968,0.008222,0.006277,0.002350,-0.005474,-0.021042", \
				        "0.011676,0.009822,0.007759,0.003661,-0.004399,-0.020215", \
				        "0.016000,0.014031,0.011794,0.007413,-0.001078,-0.017550", \
				        "0.025718,0.023620,0.021207,0.016499,0.007380,-0.010156");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.009479,0.011224,0.013170,0.017035,0.024797,0.040288", \
				        "0.009432,0.011164,0.013110,0.017006,0.024763,0.040259", \
				        "0.009368,0.011077,0.013043,0.016936,0.024707,0.040227", \
				        "0.009248,0.010974,0.012950,0.016854,0.024647,0.040181", \
				        "0.009250,0.010934,0.012908,0.016814,0.024576,0.040113", \
				        "0.009962,0.011531,0.013443,0.017210,0.024866,0.040297", \
				        "0.013242,0.014569,0.016193,0.019639,0.026864,0.041809", \
				        "0.021782,0.022725,0.023976,0.026754,0.033102,0.047037");
			}
			fall_power(Power_X4) {
				values ("0.008987,0.007315,0.005394,0.001556,-0.006141,-0.021602", \
				        "0.008996,0.007306,0.005390,0.001552,-0.006158,-0.021588", \
				        "0.009012,0.007307,0.005418,0.001576,-0.006139,-0.021572", \
				        "0.009089,0.007429,0.005533,0.001678,-0.006061,-0.021528", \
				        "0.009613,0.007926,0.005960,0.002030,-0.005795,-0.021342", \
				        "0.011321,0.009491,0.007396,0.003303,-0.004750,-0.020589", \
				        "0.015524,0.013565,0.011328,0.006944,-0.001574,-0.018021", \
				        "0.025034,0.022896,0.020472,0.015747,0.006604,-0.010898");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 | B1 & !B2 & !C2";

			rise_power(Power_X4) {
				values ("0.015633,0.017349,0.019315,0.023187,0.030933,0.046460", \
				        "0.015588,0.017317,0.019269,0.023141,0.030900,0.046409", \
				        "0.015517,0.017237,0.019157,0.023086,0.030849,0.046382", \
				        "0.015444,0.017161,0.019121,0.023018,0.030805,0.046317", \
				        "0.015411,0.017088,0.019053,0.022952,0.030743,0.046258", \
				        "0.015908,0.017584,0.019476,0.023282,0.030988,0.046447", \
				        "0.018542,0.020097,0.021867,0.025456,0.032841,0.047842", \
				        "0.026223,0.027514,0.028959,0.032048,0.038718,0.052899");
			}
			fall_power(Power_X4) {
				values ("0.009003,0.007321,0.005391,0.001547,-0.006152,-0.021627", \
				        "0.008989,0.007304,0.005380,0.001534,-0.006166,-0.021612", \
				        "0.008970,0.007290,0.005380,0.001560,-0.006147,-0.021581", \
				        "0.009112,0.007430,0.005502,0.001667,-0.006059,-0.021490", \
				        "0.009663,0.007894,0.005936,0.002008,-0.005804,-0.021332", \
				        "0.011271,0.009462,0.007393,0.003294,-0.004771,-0.020580", \
				        "0.015484,0.013525,0.011295,0.006925,-0.001583,-0.018016", \
				        "0.024948,0.022798,0.020396,0.015692,0.006571,-0.010901");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & !C2";

			rise_power(Power_X4) {
				values ("0.012452,0.014151,0.016096,0.020006,0.027758,0.043270", \
				        "0.012393,0.014087,0.016058,0.019975,0.027734,0.043267", \
				        "0.012335,0.014069,0.016003,0.019926,0.027706,0.043241", \
				        "0.012272,0.013994,0.015921,0.019845,0.027637,0.043178", \
				        "0.012192,0.013894,0.015870,0.019776,0.027566,0.043076", \
				        "0.012420,0.014116,0.016020,0.019888,0.027611,0.043114", \
				        "0.015415,0.016717,0.018376,0.021857,0.029157,0.044269", \
				        "0.025298,0.026258,0.027407,0.030062,0.036133,0.049797");
			}
			fall_power(Power_X4) {
				values ("0.013342,0.011681,0.009793,0.005942,-0.001725,-0.017126", \
				        "0.013318,0.011634,0.009739,0.005906,-0.001771,-0.017158", \
				        "0.013299,0.011610,0.009694,0.005877,-0.001802,-0.017182", \
				        "0.013394,0.011690,0.009771,0.005937,-0.001760,-0.017171", \
				        "0.013829,0.012143,0.010202,0.006296,-0.001473,-0.016995", \
				        "0.015548,0.013734,0.011678,0.007613,-0.000385,-0.016152", \
				        "0.020195,0.018194,0.015997,0.011627,0.003136,-0.013295", \
				        "0.031073,0.028949,0.026511,0.021778,0.012577,-0.005095");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.011246,0.012949,0.014911,0.018826,0.026593,0.042085", \
				        "0.011192,0.012908,0.014875,0.018784,0.026563,0.042080", \
				        "0.011113,0.012871,0.014832,0.018726,0.026528,0.042044", \
				        "0.011068,0.012790,0.014742,0.018648,0.026447,0.041985", \
				        "0.010986,0.012708,0.014684,0.018587,0.026364,0.041907", \
				        "0.011260,0.012869,0.014800,0.018664,0.026406,0.041905", \
				        "0.013999,0.015312,0.016993,0.020493,0.027810,0.042960", \
				        "0.023625,0.024558,0.025726,0.028371,0.034482,0.048224");
			}
			fall_power(Power_X4) {
				values ("0.013024,0.011336,0.009426,0.005610,-0.002041,-0.017429", \
				        "0.012980,0.011281,0.009372,0.005551,-0.002100,-0.017478", \
				        "0.012949,0.011253,0.009347,0.005530,-0.002145,-0.017510", \
				        "0.013007,0.011318,0.009412,0.005573,-0.002108,-0.017504", \
				        "0.013481,0.011742,0.009798,0.005892,-0.001880,-0.017370", \
				        "0.015108,0.013277,0.011214,0.007147,-0.000848,-0.016604", \
				        "0.019610,0.017662,0.015424,0.011032,0.002519,-0.013892", \
				        "0.030345,0.028180,0.025713,0.020921,0.011668,-0.006013");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A & B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.014428,0.016133,0.018069,0.021963,0.029734,0.045232", \
				        "0.014357,0.016103,0.018030,0.021945,0.029700,0.045257", \
				        "0.014271,0.016044,0.018003,0.021905,0.029674,0.045214", \
				        "0.014256,0.015954,0.017918,0.021807,0.029591,0.045160", \
				        "0.014164,0.015869,0.017844,0.021761,0.029521,0.045068", \
				        "0.014294,0.015986,0.017942,0.021807,0.029556,0.045069", \
				        "0.016723,0.018171,0.019892,0.023493,0.030910,0.046082", \
				        "0.025876,0.026893,0.028185,0.030982,0.037302,0.051228");
			}
			fall_power(Power_X4) {
				values ("0.013017,0.011356,0.009423,0.005601,-0.002053,-0.017434", \
				        "0.012969,0.011293,0.009365,0.005537,-0.002110,-0.017475", \
				        "0.012940,0.011253,0.009349,0.005507,-0.002144,-0.017509", \
				        "0.012989,0.011333,0.009397,0.005571,-0.002120,-0.017517", \
				        "0.013464,0.011736,0.009787,0.005883,-0.001884,-0.017365", \
				        "0.015096,0.013277,0.011212,0.007149,-0.000857,-0.016593", \
				        "0.019637,0.017642,0.015415,0.011023,0.002504,-0.013895", \
				        "0.030300,0.028140,0.025690,0.020894,0.011655,-0.006012");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & !C2";

			rise_power(Power_X4) {
				values ("0.015329,0.017006,0.018944,0.022833,0.030593,0.046105", \
				        "0.015283,0.016980,0.018938,0.022826,0.030595,0.046089", \
				        "0.015259,0.017011,0.018932,0.022828,0.030575,0.046087", \
				        "0.015231,0.016949,0.018868,0.022770,0.030524,0.046069", \
				        "0.015194,0.016902,0.018847,0.022744,0.030502,0.046050", \
				        "0.015328,0.017023,0.018986,0.022851,0.030586,0.046078", \
				        "0.017877,0.019334,0.021087,0.024706,0.032136,0.047240", \
				        "0.026603,0.027898,0.029378,0.032490,0.039016,0.052971");
			}
			fall_power(Power_X4) {
				values ("0.013333,0.011694,0.009778,0.005928,-0.001751,-0.017165", \
				        "0.013310,0.011625,0.009717,0.005864,-0.001838,-0.017270", \
				        "0.013289,0.011592,0.009671,0.005805,-0.001906,-0.017362", \
				        "0.013214,0.011564,0.009658,0.005812,-0.001897,-0.017329", \
				        "0.013432,0.011715,0.009812,0.005944,-0.001774,-0.017233", \
				        "0.014416,0.012655,0.010655,0.006697,-0.001158,-0.016769", \
				        "0.017755,0.015884,0.013740,0.009504,0.001253,-0.014865", \
				        "0.026497,0.024388,0.022035,0.017421,0.008472,-0.008729");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.014149,0.015834,0.017776,0.021638,0.029391,0.044900", \
				        "0.014105,0.015810,0.017751,0.021627,0.029382,0.044900", \
				        "0.014070,0.015802,0.017768,0.021636,0.029389,0.044905", \
				        "0.014090,0.015771,0.017627,0.021593,0.029372,0.044894", \
				        "0.014011,0.015716,0.017662,0.021554,0.029319,0.044832", \
				        "0.014128,0.015802,0.017758,0.021678,0.029355,0.044860", \
				        "0.016432,0.017975,0.019736,0.023344,0.030766,0.045928", \
				        "0.024899,0.026219,0.027682,0.030920,0.037420,0.051408");
			}
			fall_power(Power_X4) {
				values ("0.013007,0.011338,0.009415,0.005590,-0.002075,-0.017477", \
				        "0.012980,0.011282,0.009358,0.005510,-0.002165,-0.017582", \
				        "0.012915,0.011230,0.009311,0.005463,-0.002248,-0.017691", \
				        "0.012889,0.011215,0.009315,0.005456,-0.002246,-0.017676", \
				        "0.013047,0.011348,0.009426,0.005576,-0.002141,-0.017591", \
				        "0.013974,0.012238,0.010240,0.006280,-0.001559,-0.017172", \
				        "0.017250,0.015408,0.013252,0.009009,0.000726,-0.015391", \
				        "0.025889,0.023778,0.021385,0.016718,0.007725,-0.009478");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A & B1 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.017293,0.018981,0.020897,0.024777,0.032543,0.048045", \
				        "0.017254,0.018961,0.020896,0.024780,0.032543,0.048047", \
				        "0.017228,0.018935,0.020901,0.024780,0.032521,0.048056", \
				        "0.017202,0.018896,0.020839,0.024729,0.032491,0.048000", \
				        "0.017173,0.018846,0.020808,0.024715,0.032462,0.047992", \
				        "0.017245,0.018973,0.020900,0.024762,0.032506,0.047998", \
				        "0.019376,0.020921,0.022720,0.026387,0.033851,0.049045", \
				        "0.027531,0.028820,0.030382,0.033588,0.040310,0.054383");
			}
			fall_power(Power_X4) {
				values ("0.013000,0.011341,0.009416,0.005579,-0.002078,-0.017474", \
				        "0.012967,0.011291,0.009363,0.005507,-0.002161,-0.017575", \
				        "0.012920,0.011236,0.009304,0.005451,-0.002243,-0.017691", \
				        "0.012874,0.011215,0.009294,0.005454,-0.002253,-0.017675", \
				        "0.013034,0.011344,0.009420,0.005562,-0.002141,-0.017574", \
				        "0.013990,0.012232,0.010235,0.006276,-0.001555,-0.017158", \
				        "0.017321,0.015402,0.013229,0.008997,0.000725,-0.015366", \
				        "0.025852,0.023733,0.021357,0.016687,0.007708,-0.009486");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & !B2 & C2";

			rise_power(Power_X4) {
				values ("0.008047,0.009761,0.011717,0.015631,0.023393,0.038893", \
				        "0.008014,0.009751,0.011705,0.015602,0.023359,0.038891", \
				        "0.008167,0.009848,0.011794,0.015652,0.023417,0.038887", \
				        "0.008620,0.010249,0.012150,0.015938,0.023582,0.039009", \
				        "0.009714,0.011277,0.013102,0.016772,0.024253,0.039472", \
				        "0.012320,0.013691,0.015380,0.018853,0.026080,0.040957", \
				        "0.018062,0.019220,0.020638,0.023752,0.030497,0.044781", \
				        "0.030765,0.031513,0.032528,0.034940,0.040653,0.053845");
			}
			fall_power(Power_X4) {
				values ("0.002732,0.001044,-0.000876,-0.004724,-0.012437,-0.027900", \
				        "0.002763,0.001091,-0.000850,-0.004669,-0.012397,-0.027845", \
				        "0.002850,0.001159,-0.000761,-0.004619,-0.012345,-0.027785", \
				        "0.003199,0.001455,-0.000493,-0.004413,-0.012178,-0.027680", \
				        "0.004285,0.002359,0.000256,-0.003828,-0.011764,-0.027421", \
				        "0.006981,0.004841,0.002503,-0.001964,-0.010368,-0.026442", \
				        "0.013057,0.010688,0.008083,0.003104,-0.006190,-0.023359", \
				        "0.026010,0.023400,0.020512,0.014978,0.004587,-0.014498");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & !B1 & B2 & C2";

			rise_power(Power_X4) {
				values ("0.007763,0.009474,0.011419,0.015326,0.023093,0.038601", \
				        "0.007752,0.009483,0.011418,0.015315,0.023063,0.038589", \
				        "0.007926,0.009568,0.011501,0.015315,0.023092,0.038600", \
				        "0.008298,0.009956,0.011833,0.015629,0.023282,0.038711", \
				        "0.009366,0.010933,0.012751,0.016440,0.023932,0.039174", \
				        "0.011743,0.013166,0.014865,0.018390,0.025649,0.040532", \
				        "0.017001,0.018174,0.019663,0.022855,0.029714,0.044070", \
				        "0.028615,0.029410,0.030495,0.033022,0.039004,0.052422");
			}
			fall_power(Power_X4) {
				values ("0.002728,0.001047,-0.000872,-0.004735,-0.012429,-0.027888", \
				        "0.002754,0.001089,-0.000840,-0.004673,-0.012393,-0.027847", \
				        "0.002878,0.001172,-0.000744,-0.004610,-0.012319,-0.027762", \
				        "0.003241,0.001482,-0.000471,-0.004389,-0.012152,-0.027660", \
				        "0.004282,0.002361,0.000266,-0.003815,-0.011755,-0.027386", \
				        "0.006793,0.004680,0.002381,-0.002065,-0.010432,-0.026480", \
				        "0.012398,0.010094,0.007549,0.002661,-0.006536,-0.023602", \
				        "0.024369,0.021850,0.019040,0.013646,0.003488,-0.015333");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A & B1 & !B2 & C2";

			rise_power(Power_X4) {
				values ("0.010794,0.012453,0.014428,0.018330,0.026099,0.041594", \
				        "0.010755,0.012440,0.014410,0.018311,0.026067,0.041609", \
				        "0.010825,0.012534,0.014474,0.018350,0.026100,0.041596", \
				        "0.011206,0.012867,0.014782,0.018587,0.026263,0.041686", \
				        "0.012177,0.013772,0.015628,0.019322,0.026881,0.042142", \
				        "0.014404,0.015883,0.017654,0.021222,0.028537,0.043471", \
				        "0.019359,0.020671,0.022248,0.025550,0.032521,0.046977", \
				        "0.030607,0.031535,0.032742,0.035454,0.041618,0.055182");
			}
			fall_power(Power_X4) {
				values ("0.002723,0.001054,-0.000876,-0.004715,-0.012446,-0.027887", \
				        "0.002740,0.001112,-0.000822,-0.004671,-0.012382,-0.027841", \
				        "0.002884,0.001189,-0.000739,-0.004605,-0.012314,-0.027768", \
				        "0.003235,0.001476,-0.000474,-0.004390,-0.012152,-0.027659", \
				        "0.004207,0.002307,0.000236,-0.003819,-0.011770,-0.027392", \
				        "0.006630,0.004570,0.002276,-0.002111,-0.010446,-0.026483", \
				        "0.012134,0.009860,0.007351,0.002506,-0.006606,-0.023608", \
				        "0.023918,0.021466,0.018714,0.013379,0.003283,-0.015433");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & !B2 & C1";

			rise_power(Power_X4) {
				values ("0.011062,0.012750,0.014722,0.018618,0.026377,0.041862", \
				        "0.011090,0.012768,0.014727,0.018605,0.026363,0.041868", \
				        "0.011187,0.012886,0.014835,0.018669,0.026401,0.041899", \
				        "0.011630,0.013289,0.015156,0.018969,0.026601,0.042030", \
				        "0.012714,0.014309,0.016133,0.019819,0.027308,0.042540", \
				        "0.015195,0.016712,0.018423,0.021955,0.029212,0.044080", \
				        "0.020629,0.021979,0.023591,0.026870,0.033748,0.048023", \
				        "0.032135,0.033334,0.034735,0.037714,0.044027,0.057433");
			}
			fall_power(Power_X4) {
				values ("0.002703,0.001035,-0.000919,-0.004737,-0.012449,-0.027911", \
				        "0.002653,0.000999,-0.000923,-0.004735,-0.012473,-0.027923", \
				        "0.002633,0.000972,-0.000953,-0.004781,-0.012496,-0.027954", \
				        "0.002731,0.001032,-0.000881,-0.004730,-0.012445,-0.027891", \
				        "0.003474,0.001593,-0.000440,-0.004413,-0.012222,-0.027729", \
				        "0.005483,0.003478,0.001228,-0.003085,-0.011307,-0.027150", \
				        "0.010544,0.008247,0.005780,0.000974,-0.008060,-0.024913", \
				        "0.021722,0.019183,0.016395,0.011010,0.000945,-0.017691");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & !B1 & B2 & C1";

			rise_power(Power_X4) {
				values ("0.010828,0.012500,0.014424,0.018331,0.026067,0.041555", \
				        "0.010811,0.012493,0.014445,0.018319,0.026070,0.041570", \
				        "0.010907,0.012632,0.014536,0.018390,0.026107,0.041607", \
				        "0.011332,0.012981,0.014869,0.018666,0.026319,0.041730", \
				        "0.012378,0.013969,0.015796,0.019486,0.026978,0.042216", \
				        "0.014682,0.016170,0.017919,0.021488,0.028746,0.043651", \
				        "0.019597,0.021041,0.022650,0.026007,0.032939,0.047295", \
				        "0.030207,0.031402,0.032890,0.035932,0.042344,0.055928");
			}
			fall_power(Power_X4) {
				values ("0.002704,0.001028,-0.000896,-0.004743,-0.012460,-0.027897", \
				        "0.002660,0.001003,-0.000919,-0.004756,-0.012466,-0.027923", \
				        "0.002628,0.000968,-0.000934,-0.004768,-0.012480,-0.027945", \
				        "0.002763,0.001078,-0.000851,-0.004700,-0.012414,-0.027892", \
				        "0.003454,0.001644,-0.000395,-0.004366,-0.012178,-0.027697", \
				        "0.005416,0.003413,0.001188,-0.003098,-0.011298,-0.027132", \
				        "0.010068,0.007834,0.005378,0.000672,-0.008237,-0.025007", \
				        "0.020320,0.017861,0.015144,0.009926,0.000067,-0.018295");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A & B1 & !B2 & C1";

			rise_power(Power_X4) {
				values ("0.013811,0.015474,0.017422,0.021316,0.029064,0.044586", \
				        "0.013813,0.015502,0.017430,0.021309,0.029060,0.044580", \
				        "0.013900,0.015573,0.017508,0.021376,0.029103,0.044603", \
				        "0.014305,0.015890,0.017800,0.021620,0.029295,0.044704", \
				        "0.015185,0.016795,0.018668,0.022391,0.029931,0.045185", \
				        "0.017406,0.018931,0.020716,0.024299,0.031627,0.046564", \
				        "0.022209,0.023653,0.025309,0.028724,0.035741,0.050196", \
				        "0.032551,0.033902,0.035361,0.038487,0.045004,0.058733");
			}
			fall_power(Power_X4) {
				values ("0.002700,0.001037,-0.000890,-0.004734,-0.012458,-0.027902", \
				        "0.002656,0.001029,-0.000917,-0.004738,-0.012468,-0.027929", \
				        "0.002633,0.000976,-0.000934,-0.004763,-0.012479,-0.027953", \
				        "0.002762,0.001069,-0.000857,-0.004697,-0.012416,-0.027883", \
				        "0.003411,0.001605,-0.000416,-0.004367,-0.012176,-0.027687", \
				        "0.005290,0.003305,0.001111,-0.003148,-0.011311,-0.027140", \
				        "0.009841,0.007648,0.005223,0.000552,-0.008318,-0.025034", \
				        "0.019981,0.017609,0.014885,0.009724,-0.000076,-0.018369");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI222_X1
 Cell Description	: Combinational cell (AOI222_X1) with drive strength X1
*******************************************************************************************/

cell (AOI222_X1) {

	area               	: 2.128000;

	cell_leakage_power 	: 14280.824031;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 3148.711000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 3319.537000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 3319.532000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 3490.419000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 9455.318000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 10093.480000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 9626.149000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 14393.610000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 9455.332000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 9626.141000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 11986.040000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 16307.580000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 15761.560000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 14394.700000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 16308.970000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 17634.580000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 9455.312000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 9626.148000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 9626.143000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 9797.042000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 15761.530000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 14416.920000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 15932.340000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 18717.060000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 15761.550000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 15932.330000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 16308.960000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 20630.500000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 22067.260000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 18718.150000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 20631.900000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 21958.130000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 3319.526000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 3490.418000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 3490.424000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 3661.366000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 9626.137000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 14415.830000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 9797.059000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 18715.250000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 9626.146000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 9797.045000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 16307.570000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 20628.380000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 15932.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 18717.070000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 20630.510000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 21957.330000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 9908.563000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 14219.000000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 14252.570000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 18572.430000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 14220.080000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 17548.680000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 18574.240000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 21921.540000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 14253.640000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 18574.240000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 17576.890000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 21928.350000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 18575.310000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 21922.330000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 21929.140000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 26220.410000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000660;
		fall_capacitance	: 0.000608;
		rise_capacitance	: 0.000713;
		fall_capacitance_range		(0.000540, 0.000712);
		rise_capacitance_range		(0.000595, 0.000905);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002,-0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000625;
		fall_capacitance	: 0.000560;
		rise_capacitance	: 0.000691;
		fall_capacitance_range		(0.000491, 0.000637);
		rise_capacitance_range		(0.000565, 0.000852);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000662;
		fall_capacitance	: 0.000629;
		rise_capacitance	: 0.000696;
		fall_capacitance_range		(0.000543, 0.000726);
		rise_capacitance_range		(0.000608, 0.000821);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000676;
		fall_capacitance	: 0.000633;
		rise_capacitance	: 0.000720;
		fall_capacitance_range		(0.000533, 0.000719);
		rise_capacitance_range		(0.000635, 0.000832);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000689;
		fall_capacitance	: 0.000674;
		rise_capacitance	: 0.000704;
		fall_capacitance_range		(0.000567, 0.000774);
		rise_capacitance_range		(0.000625, 0.000810);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000010,0.000007,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000718;
		fall_capacitance	: 0.000692;
		rise_capacitance	: 0.000744;
		fall_capacitance_range		(0.000572, 0.000776);
		rise_capacitance_range		(0.000660, 0.000831);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000009,0.000007,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) | (B1 & B2)) | (C1 & C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027138,0.030080,0.035502,0.046568,0.068425,0.112128", \
				        "0.030250,0.033125,0.038532,0.049567,0.071465,0.115079", \
				        "0.036780,0.039392,0.044793,0.055768,0.077650,0.121162", \
				        "0.046446,0.050115,0.056883,0.068793,0.090252,0.133720", \
				        "0.055965,0.060955,0.070231,0.086145,0.113879,0.159385", \
				        "0.062081,0.068442,0.080940,0.102477,0.139854,0.201144", \
				        "0.056690,0.065616,0.081834,0.110952,0.160957,0.243372", \
				        "0.025491,0.037097,0.058820,0.097583,0.164513,0.274612");
			}
			cell_rise(Timing_X1) {
				values ("0.093857,0.101834,0.117807,0.149464,0.212193,0.336540", \
				        "0.097046,0.104972,0.120803,0.152495,0.215204,0.339616", \
				        "0.103610,0.111401,0.127260,0.158806,0.221427,0.345741", \
				        "0.117301,0.125114,0.140685,0.171939,0.234196,0.358094", \
				        "0.148786,0.155343,0.169710,0.199489,0.260852,0.383592", \
				        "0.204741,0.213075,0.229410,0.260268,0.317707,0.437184", \
				        "0.283733,0.294779,0.315102,0.354497,0.426208,0.552823", \
				        "0.404900,0.418339,0.443916,0.492282,0.581095,0.740815");
			}
			fall_transition(Timing_X1) {
				values ("0.035194,0.037278,0.042411,0.052201,0.071379,0.109069", \
				        "0.035188,0.037269,0.042394,0.052209,0.071378,0.109066", \
				        "0.036322,0.038262,0.042810,0.052132,0.071360,0.109052", \
				        "0.044752,0.046131,0.049214,0.055974,0.072106,0.109058", \
				        "0.064067,0.065335,0.067923,0.073492,0.084747,0.112809", \
				        "0.096120,0.097480,0.100346,0.106355,0.118889,0.143284", \
				        "0.128572,0.130553,0.135085,0.143814,0.175857,0.204989", \
				        "0.209194,0.211817,0.217195,0.228437,0.250097,0.289837");
			}
			rise_transition(Timing_X1) {
				values ("0.096024,0.103911,0.119474,0.148689,0.205617,0.317709", \
				        "0.095797,0.103694,0.119283,0.148640,0.205560,0.317682", \
				        "0.095075,0.103011,0.118727,0.148453,0.205536,0.317710", \
				        "0.091989,0.100490,0.116811,0.147492,0.205453,0.317709", \
				        "0.091370,0.098593,0.113498,0.143132,0.204101,0.317692", \
				        "0.109920,0.116313,0.128668,0.152421,0.203914,0.315123", \
				        "0.145603,0.153164,0.167292,0.193821,0.242200,0.333879", \
				        "0.204501,0.212643,0.229777,0.260602,0.318177,0.420715");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !B2 & !C2 | A2 & !B1 & !C1";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026620,0.029353,0.034911,0.045853,0.067623,0.111110", \
				        "0.029736,0.032422,0.037961,0.048874,0.070650,0.114124", \
				        "0.036272,0.038931,0.044202,0.055108,0.076821,0.120172", \
				        "0.045695,0.049221,0.055882,0.067936,0.089529,0.132669", \
				        "0.054806,0.059661,0.068556,0.084880,0.112762,0.158444", \
				        "0.060071,0.066352,0.078495,0.100364,0.138015,0.199567", \
				        "0.051510,0.060714,0.077076,0.106929,0.157750,0.240657", \
				        "0.011131,0.023134,0.045752,0.085981,0.155003,0.267557");
			}
			cell_rise(Timing_X1) {
				values ("0.048229,0.055398,0.070292,0.101504,0.163903,0.287736", \
				        "0.051551,0.058649,0.073573,0.104541,0.166924,0.290819", \
				        "0.059020,0.065925,0.080460,0.111065,0.173223,0.296936", \
				        "0.076318,0.082436,0.095818,0.124860,0.186228,0.309406", \
				        "0.107213,0.114520,0.129084,0.155599,0.213658,0.335234", \
				        "0.150722,0.160245,0.178648,0.213003,0.274214,0.389840", \
				        "0.215444,0.228144,0.250864,0.294131,0.371427,0.505329", \
				        "0.319691,0.334740,0.364039,0.417108,0.512831,0.680644");
			}
			fall_transition(Timing_X1) {
				values ("0.019688,0.022167,0.027212,0.036591,0.055249,0.092637", \
				        "0.019632,0.022123,0.027155,0.036484,0.055263,0.092672", \
				        "0.020883,0.022936,0.027515,0.036459,0.055239,0.092687", \
				        "0.028046,0.029936,0.033756,0.040205,0.055919,0.092647", \
				        "0.040655,0.042926,0.047348,0.054960,0.068462,0.096456", \
				        "0.062453,0.065182,0.070580,0.080075,0.096885,0.125559", \
				        "0.100468,0.104164,0.111055,0.123353,0.144630,0.180477", \
				        "0.167792,0.172739,0.182145,0.198799,0.226817,0.272693");
			}
			rise_transition(Timing_X1) {
				values ("0.062553,0.071463,0.088420,0.119883,0.177760,0.289031", \
				        "0.061799,0.070736,0.087880,0.119596,0.177772,0.289026", \
				        "0.059830,0.068906,0.086349,0.118714,0.177625,0.289021", \
				        "0.059934,0.067607,0.083419,0.115794,0.176957,0.289018", \
				        "0.070751,0.076169,0.088302,0.114987,0.172768,0.288874", \
				        "0.092594,0.099104,0.111237,0.134306,0.180555,0.285517", \
				        "0.127624,0.134644,0.148764,0.175133,0.223990,0.313111", \
				        "0.187863,0.195581,0.211355,0.241179,0.297886,0.400865");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026865,0.029609,0.035283,0.046214,0.068051,0.111596", \
				        "0.029998,0.032758,0.038241,0.049319,0.071169,0.114637", \
				        "0.036534,0.039177,0.044534,0.055483,0.077356,0.120687", \
				        "0.046070,0.049663,0.056428,0.068429,0.089896,0.133212", \
				        "0.055420,0.060300,0.069442,0.085536,0.113358,0.158930", \
				        "0.061091,0.067458,0.079783,0.101475,0.138967,0.200390", \
				        "0.053732,0.062836,0.079304,0.108858,0.159409,0.242060", \
				        "0.016091,0.027895,0.050233,0.089920,0.158330,0.270309");
			}
			cell_rise(Timing_X1) {
				values ("0.068118,0.075877,0.091497,0.123019,0.185545,0.309572", \
				        "0.071332,0.079027,0.094578,0.126058,0.188535,0.312665", \
				        "0.078217,0.085723,0.101184,0.132442,0.194829,0.318774", \
				        "0.093255,0.100421,0.115246,0.145820,0.207702,0.331192", \
				        "0.126634,0.133564,0.147216,0.174500,0.234691,0.356876", \
				        "0.175986,0.184803,0.202283,0.234781,0.293793,0.410965", \
				        "0.247218,0.258905,0.280455,0.321795,0.396411,0.526836", \
				        "0.359388,0.373775,0.400763,0.451642,0.543893,0.707797");
			}
			fall_transition(Timing_X1) {
				values ("0.024824,0.027559,0.032915,0.043055,0.062555,0.100386", \
				        "0.024783,0.027630,0.032893,0.043039,0.062552,0.100386", \
				        "0.025954,0.028247,0.033207,0.042993,0.062562,0.100374", \
				        "0.034559,0.036345,0.040050,0.046871,0.063312,0.100378", \
				        "0.051738,0.053263,0.056748,0.063413,0.076055,0.104155", \
				        "0.079411,0.081282,0.085148,0.092782,0.107464,0.133977", \
				        "0.125800,0.128005,0.132824,0.141994,0.159709,0.192161", \
				        "0.205565,0.208267,0.214390,0.226361,0.248913,0.289393");
			}
			rise_transition(Timing_X1) {
				values ("0.079172,0.087541,0.103664,0.133653,0.190765,0.302245", \
				        "0.078720,0.087087,0.103357,0.133554,0.190716,0.302239", \
				        "0.077376,0.085769,0.102173,0.133037,0.190649,0.302259", \
				        "0.074208,0.082418,0.098983,0.131138,0.190365,0.302263", \
				        "0.079226,0.085651,0.099487,0.127675,0.187338,0.302206", \
				        "0.100784,0.107188,0.119499,0.142425,0.191112,0.298949", \
				        "0.135899,0.143402,0.157360,0.183977,0.232594,0.322602", \
				        "0.195287,0.203173,0.219901,0.250136,0.307402,0.410171");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2 & !C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026876,0.029641,0.035285,0.046219,0.068046,0.111574", \
				        "0.030003,0.032759,0.038243,0.049324,0.071153,0.114615", \
				        "0.036518,0.039162,0.044492,0.055461,0.077328,0.120644", \
				        "0.045991,0.049585,0.056345,0.068361,0.089847,0.133147", \
				        "0.055315,0.060195,0.069343,0.085428,0.113253,0.158851", \
				        "0.061596,0.067947,0.080125,0.101730,0.139076,0.200382", \
				        "0.056690,0.065616,0.081834,0.110952,0.160895,0.242871", \
				        "0.025491,0.037097,0.058820,0.097583,0.164513,0.274612");
			}
			cell_rise(Timing_X1) {
				values ("0.066827,0.073364,0.086441,0.112399,0.163744,0.265631", \
				        "0.070034,0.076513,0.089518,0.115475,0.166819,0.268753", \
				        "0.076707,0.083162,0.096071,0.121888,0.173127,0.274925", \
				        "0.091049,0.097353,0.109894,0.135300,0.186169,0.287595", \
				        "0.122371,0.128517,0.140805,0.164032,0.213640,0.313955", \
				        "0.167262,0.175199,0.190836,0.220163,0.272816,0.369561", \
				        "0.231452,0.242311,0.261682,0.298913,0.365968,0.482469", \
				        "0.332317,0.345160,0.370055,0.416007,0.499389,0.646746");
			}
			fall_transition(Timing_X1) {
				values ("0.025335,0.028083,0.033453,0.043675,0.063354,0.101351", \
				        "0.025286,0.028109,0.033378,0.043571,0.063317,0.101350", \
				        "0.026429,0.028729,0.033770,0.043557,0.063305,0.101346", \
				        "0.035207,0.036914,0.040624,0.047433,0.064065,0.101360", \
				        "0.052850,0.054301,0.057635,0.064304,0.076881,0.105129", \
				        "0.081234,0.083074,0.086665,0.094181,0.108630,0.135040", \
				        "0.128572,0.130553,0.135085,0.143814,0.161064,0.193235", \
				        "0.209194,0.211817,0.217195,0.228437,0.250097,0.289837");
			}
			rise_transition(Timing_X1) {
				values ("0.067400,0.073891,0.086503,0.110377,0.157020,0.249521", \
				        "0.067140,0.073671,0.086291,0.110275,0.156975,0.249538", \
				        "0.066266,0.072914,0.085782,0.110121,0.156943,0.249523", \
				        "0.063910,0.070374,0.083553,0.109001,0.156816,0.249519", \
				        "0.070771,0.075669,0.086234,0.108150,0.154797,0.249514", \
				        "0.092699,0.098221,0.108752,0.128025,0.165204,0.248854", \
				        "0.127284,0.133832,0.146448,0.169629,0.211570,0.284874", \
				        "0.186653,0.193970,0.208867,0.236045,0.286485,0.375811");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027138,0.030080,0.035502,0.046568,0.068425,0.112128", \
				        "0.030250,0.033125,0.038532,0.049567,0.071465,0.115079", \
				        "0.036780,0.039392,0.044793,0.055768,0.077650,0.121162", \
				        "0.046446,0.050115,0.056883,0.068793,0.090252,0.133720", \
				        "0.055965,0.060955,0.070231,0.086145,0.113879,0.159385", \
				        "0.062081,0.068442,0.080940,0.102477,0.139854,0.201144", \
				        "0.055893,0.064923,0.081364,0.110694,0.160957,0.243372", \
				        "0.021473,0.033002,0.054742,0.093789,0.161543,0.272895");
			}
			cell_rise(Timing_X1) {
				values ("0.093857,0.101834,0.117807,0.149464,0.212193,0.336540", \
				        "0.097046,0.104972,0.120803,0.152495,0.215204,0.339616", \
				        "0.103610,0.111401,0.127260,0.158806,0.221427,0.345741", \
				        "0.117301,0.125114,0.140685,0.171939,0.234196,0.358094", \
				        "0.148786,0.155343,0.169710,0.199489,0.260852,0.383592", \
				        "0.204741,0.213075,0.229410,0.260268,0.317707,0.437184", \
				        "0.283733,0.294779,0.315102,0.354497,0.426208,0.552823", \
				        "0.404900,0.418339,0.443916,0.492282,0.581095,0.740815");
			}
			fall_transition(Timing_X1) {
				values ("0.035194,0.037278,0.042411,0.052201,0.071379,0.109069", \
				        "0.035188,0.037269,0.042394,0.052209,0.071378,0.109066", \
				        "0.036322,0.038262,0.042810,0.052132,0.071360,0.109052", \
				        "0.044752,0.046131,0.049214,0.055974,0.072106,0.109058", \
				        "0.064067,0.065335,0.067923,0.073492,0.084747,0.112809", \
				        "0.096120,0.097480,0.100346,0.106355,0.118889,0.143284", \
				        "0.150181,0.151346,0.154552,0.161294,0.175857,0.204989", \
				        "0.241414,0.242933,0.246509,0.254759,0.272418,0.307724");
			}
			rise_transition(Timing_X1) {
				values ("0.096024,0.103911,0.119474,0.148689,0.205617,0.317709", \
				        "0.095797,0.103694,0.119283,0.148640,0.205560,0.317682", \
				        "0.095075,0.103011,0.118727,0.148453,0.205536,0.317710", \
				        "0.091989,0.100490,0.116811,0.147492,0.205453,0.317709", \
				        "0.091370,0.098593,0.113498,0.143132,0.204101,0.317692", \
				        "0.109920,0.116313,0.128668,0.152421,0.203914,0.315123", \
				        "0.145603,0.153164,0.167292,0.193821,0.242200,0.333879", \
				        "0.204501,0.212643,0.229777,0.260602,0.318177,0.420715");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034078,0.036890,0.042529,0.053449,0.075365,0.119056", \
				        "0.036833,0.039699,0.045297,0.056252,0.078165,0.121932", \
				        "0.041740,0.044634,0.050335,0.061341,0.083291,0.127102", \
				        "0.049739,0.053100,0.059506,0.071223,0.093448,0.137361", \
				        "0.059630,0.063900,0.071854,0.085972,0.111335,0.156965", \
				        "0.067608,0.073278,0.084140,0.103152,0.135658,0.190218", \
				        "0.064514,0.072697,0.087798,0.114348,0.159452,0.231818", \
				        "0.033032,0.044530,0.065552,0.102915,0.165858,0.266788");
			}
			cell_rise(Timing_X1) {
				values ("0.114426,0.122282,0.138323,0.169946,0.232729,0.357166", \
				        "0.117550,0.125458,0.141326,0.172966,0.235745,0.360210", \
				        "0.124205,0.131926,0.147834,0.179407,0.242061,0.366392", \
				        "0.137699,0.145693,0.161286,0.192670,0.254952,0.378911", \
				        "0.167495,0.174587,0.189797,0.220263,0.281725,0.404650", \
				        "0.227661,0.236002,0.251349,0.280828,0.338511,0.458551", \
				        "0.315437,0.326099,0.345141,0.382691,0.451802,0.574755", \
				        "0.449183,0.461157,0.486028,0.532208,0.617552,0.772227");
			}
			fall_transition(Timing_X1) {
				values ("0.035232,0.037519,0.042456,0.052245,0.071362,0.109057", \
				        "0.035241,0.037474,0.042410,0.052194,0.071364,0.109078", \
				        "0.035605,0.037796,0.042504,0.052243,0.071367,0.109073", \
				        "0.039546,0.041478,0.045521,0.054007,0.071752,0.109062", \
				        "0.050850,0.052385,0.055594,0.062753,0.077640,0.110900", \
				        "0.073613,0.074969,0.077739,0.083608,0.096610,0.125476", \
				        "0.113954,0.115005,0.117844,0.123639,0.136177,0.163028", \
				        "0.180782,0.182135,0.185107,0.192077,0.206989,0.236690");
			}
			rise_transition(Timing_X1) {
				values ("0.108435,0.116208,0.131401,0.160636,0.217702,0.330312", \
				        "0.108296,0.116110,0.131370,0.160611,0.217717,0.330317", \
				        "0.107901,0.115747,0.131068,0.160532,0.217714,0.330274", \
				        "0.106177,0.114255,0.130040,0.160084,0.217656,0.330292", \
				        "0.102820,0.110342,0.125708,0.156465,0.216930,0.330301", \
				        "0.117334,0.123763,0.135897,0.161677,0.214966,0.328715", \
				        "0.152492,0.159943,0.174274,0.200933,0.249230,0.343149", \
				        "0.206044,0.214992,0.232539,0.264692,0.323641,0.427111");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033809,0.036614,0.042293,0.053317,0.074968,0.118600", \
				        "0.036554,0.039452,0.044994,0.056067,0.077865,0.121423", \
				        "0.041475,0.044379,0.050014,0.061017,0.082891,0.126540", \
				        "0.049424,0.052718,0.059108,0.070852,0.093046,0.136827", \
				        "0.059187,0.063397,0.071266,0.085446,0.110919,0.156494", \
				        "0.066864,0.072484,0.083269,0.102356,0.134970,0.189550", \
				        "0.063084,0.071239,0.086299,0.113047,0.158274,0.230815", \
				        "0.029766,0.041398,0.062572,0.100265,0.163647,0.264935");
			}
			cell_rise(Timing_X1) {
				values ("0.092778,0.100653,0.116598,0.148263,0.211017,0.335327", \
				        "0.095918,0.103846,0.119630,0.151308,0.213973,0.338416", \
				        "0.102569,0.110463,0.126282,0.157743,0.220322,0.344569", \
				        "0.116684,0.124580,0.140044,0.171200,0.233346,0.357138", \
				        "0.148859,0.155248,0.169600,0.199296,0.260484,0.382995", \
				        "0.205500,0.214390,0.230343,0.261002,0.318182,0.437320", \
				        "0.287556,0.298448,0.318623,0.357481,0.428532,0.554312", \
				        "0.414757,0.427194,0.453238,0.500807,0.588556,0.746516");
			}
			fall_transition(Timing_X1) {
				values ("0.025260,0.027998,0.033441,0.043680,0.063316,0.101359", \
				        "0.025246,0.028032,0.033411,0.043589,0.063318,0.101350", \
				        "0.025664,0.028247,0.033402,0.043565,0.063325,0.101355", \
				        "0.029832,0.032074,0.036813,0.045418,0.063646,0.101350", \
				        "0.040777,0.042445,0.046265,0.053981,0.069730,0.103218", \
				        "0.061795,0.063427,0.066586,0.073565,0.087712,0.117519", \
				        "0.097625,0.099169,0.102994,0.110358,0.124954,0.153703", \
				        "0.156427,0.158807,0.163414,0.172882,0.191027,0.224112");
			}
			rise_transition(Timing_X1) {
				values ("0.094632,0.102724,0.118349,0.147856,0.204830,0.317070", \
				        "0.094458,0.102530,0.118180,0.147756,0.204814,0.317092", \
				        "0.093714,0.101841,0.117611,0.147586,0.204791,0.317097", \
				        "0.090625,0.099338,0.115738,0.146638,0.204649,0.317097", \
				        "0.090203,0.097592,0.112411,0.142264,0.203280,0.317080", \
				        "0.108429,0.114936,0.127224,0.151347,0.203103,0.314527", \
				        "0.142337,0.149714,0.164612,0.191551,0.240479,0.332908", \
				        "0.194274,0.203388,0.220920,0.253626,0.313298,0.417646");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B2 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033584,0.036292,0.041855,0.052730,0.074504,0.118010", \
				        "0.036316,0.039125,0.044592,0.055562,0.077312,0.120884", \
				        "0.041239,0.044074,0.049703,0.060666,0.082488,0.126096", \
				        "0.049142,0.052369,0.058654,0.070495,0.092656,0.136335", \
				        "0.058780,0.062958,0.070707,0.084970,0.110401,0.156067", \
				        "0.066228,0.071800,0.082500,0.101592,0.134366,0.188941", \
				        "0.061806,0.070025,0.084964,0.111855,0.157242,0.229924", \
				        "0.027300,0.038976,0.060134,0.098059,0.161777,0.263370");
			}
			cell_rise(Timing_X1) {
				values ("0.067103,0.074748,0.090390,0.121790,0.184285,0.308261", \
				        "0.070311,0.077992,0.093543,0.124815,0.187300,0.311344", \
				        "0.077327,0.084892,0.100258,0.131411,0.193706,0.317536", \
				        "0.092761,0.099992,0.114661,0.145138,0.206863,0.330168", \
				        "0.126856,0.133623,0.147190,0.174401,0.234384,0.356243", \
				        "0.177301,0.186359,0.203402,0.235700,0.294288,0.411101", \
				        "0.251466,0.263066,0.284371,0.325165,0.399000,0.528377", \
				        "0.369967,0.383333,0.410802,0.460680,0.551682,0.713739");
			}
			fall_transition(Timing_X1) {
				values ("0.019642,0.022121,0.027130,0.036534,0.055099,0.092637", \
				        "0.019637,0.022099,0.027029,0.036440,0.055259,0.092694", \
				        "0.020051,0.022376,0.027127,0.036546,0.055234,0.092643", \
				        "0.023454,0.025627,0.030064,0.038032,0.055565,0.092695", \
				        "0.031802,0.033855,0.038055,0.045916,0.061501,0.094478", \
				        "0.047995,0.050304,0.054684,0.062784,0.077948,0.108442", \
				        "0.076657,0.079175,0.084758,0.094520,0.111801,0.142841", \
				        "0.124591,0.128724,0.135831,0.149135,0.171918,0.209377");
			}
			rise_transition(Timing_X1) {
				values ("0.077731,0.086148,0.102425,0.132751,0.189885,0.301549", \
				        "0.077264,0.085771,0.102078,0.132599,0.189861,0.301569", \
				        "0.075922,0.084535,0.101008,0.132089,0.189811,0.301554", \
				        "0.072992,0.081273,0.097751,0.130157,0.189490,0.301564", \
				        "0.077926,0.084524,0.098335,0.126742,0.186473,0.301509", \
				        "0.098969,0.105631,0.117876,0.141156,0.190184,0.298278", \
				        "0.131630,0.139030,0.154065,0.181339,0.230704,0.321467", \
				        "0.182353,0.191529,0.209009,0.241794,0.301716,0.406764");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034078,0.036890,0.042529,0.053449,0.075365,0.119056", \
				        "0.036833,0.039699,0.045297,0.056252,0.078165,0.121932", \
				        "0.041740,0.044634,0.050335,0.061341,0.083291,0.127102", \
				        "0.049739,0.053100,0.059506,0.071223,0.093448,0.137361", \
				        "0.059630,0.063900,0.071854,0.085972,0.111335,0.156965", \
				        "0.067608,0.073278,0.084140,0.103152,0.135658,0.190218", \
				        "0.064514,0.072697,0.087798,0.114348,0.159452,0.231818", \
				        "0.033032,0.044530,0.065552,0.102915,0.165858,0.266788");
			}
			cell_rise(Timing_X1) {
				values ("0.114426,0.122282,0.138323,0.169946,0.232729,0.357166", \
				        "0.117550,0.125458,0.141326,0.172966,0.235745,0.360210", \
				        "0.124205,0.131926,0.147834,0.179407,0.242061,0.366392", \
				        "0.137699,0.145693,0.161286,0.192670,0.254952,0.378911", \
				        "0.167495,0.174587,0.189797,0.220263,0.281725,0.404650", \
				        "0.227661,0.236002,0.251349,0.280828,0.338511,0.458551", \
				        "0.315437,0.326099,0.345141,0.382691,0.451802,0.574755", \
				        "0.449183,0.461157,0.486028,0.532208,0.617552,0.772227");
			}
			fall_transition(Timing_X1) {
				values ("0.035232,0.037519,0.042456,0.052245,0.071362,0.109057", \
				        "0.035241,0.037474,0.042410,0.052194,0.071364,0.109078", \
				        "0.035605,0.037796,0.042504,0.052243,0.071367,0.109073", \
				        "0.039546,0.041478,0.045521,0.054007,0.071752,0.109062", \
				        "0.050850,0.052385,0.055594,0.062753,0.077640,0.110900", \
				        "0.073613,0.074969,0.077739,0.083608,0.096610,0.125476", \
				        "0.113954,0.115005,0.117844,0.123639,0.136177,0.163028", \
				        "0.180782,0.182135,0.185107,0.192077,0.206989,0.236690");
			}
			rise_transition(Timing_X1) {
				values ("0.108435,0.116208,0.131401,0.160636,0.217702,0.330312", \
				        "0.108296,0.116110,0.131370,0.160611,0.217717,0.330317", \
				        "0.107901,0.115747,0.131068,0.160532,0.217714,0.330274", \
				        "0.106177,0.114255,0.130040,0.160084,0.217656,0.330292", \
				        "0.102820,0.110342,0.125708,0.156465,0.216930,0.330301", \
				        "0.117334,0.123763,0.135897,0.161677,0.214966,0.328715", \
				        "0.152492,0.159943,0.174274,0.200933,0.249230,0.343149", \
				        "0.206044,0.214992,0.232539,0.264692,0.323641,0.427111");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042475,0.045765,0.052289,0.064265,0.087743,0.133001", \
				        "0.045563,0.048694,0.055350,0.067185,0.090590,0.135972", \
				        "0.051814,0.054931,0.061145,0.073236,0.096641,0.141896", \
				        "0.065365,0.068593,0.074356,0.085903,0.108918,0.154119", \
				        "0.083504,0.087611,0.095547,0.109899,0.134942,0.179400", \
				        "0.100994,0.106673,0.117132,0.136114,0.169796,0.226580", \
				        "0.112817,0.119540,0.133295,0.158289,0.203092,0.279361", \
				        "0.107151,0.116689,0.134249,0.167254,0.226080,0.326231");
			}
			cell_rise(Timing_X1) {
				values ("0.162184,0.170155,0.186052,0.217620,0.280158,0.404236", \
				        "0.165454,0.173350,0.189227,0.220868,0.283459,0.407585", \
				        "0.171698,0.179757,0.195471,0.227118,0.289803,0.414098", \
				        "0.183684,0.191660,0.207577,0.239254,0.302049,0.426411", \
				        "0.205737,0.213918,0.229928,0.261449,0.324251,0.448720", \
				        "0.247231,0.255785,0.272854,0.305467,0.368270,0.492463", \
				        "0.311393,0.322184,0.342731,0.381592,0.453892,0.584960", \
				        "0.423039,0.436737,0.460787,0.508363,0.594227,0.748571");
			}
			fall_transition(Timing_X1) {
				values ("0.050519,0.052694,0.057103,0.066160,0.084461,0.121539", \
				        "0.050395,0.052620,0.057011,0.066109,0.084448,0.121507", \
				        "0.049496,0.051846,0.056663,0.065975,0.084388,0.121544", \
				        "0.052066,0.053861,0.057693,0.066034,0.084017,0.121467", \
				        "0.068080,0.069533,0.072364,0.077933,0.090786,0.122348", \
				        "0.097741,0.099477,0.102921,0.109527,0.122538,0.147114", \
				        "0.125690,0.128521,0.134134,0.144354,0.177415,0.208018", \
				        "0.195199,0.199176,0.206588,0.220554,0.245709,0.289190");
			}
			rise_transition(Timing_X1) {
				values ("0.096251,0.103507,0.117910,0.146427,0.202867,0.314827", \
				        "0.096208,0.103527,0.117967,0.146406,0.202882,0.314812", \
				        "0.096209,0.103526,0.117923,0.146412,0.202866,0.314829", \
				        "0.096146,0.103524,0.117910,0.146411,0.202851,0.314833", \
				        "0.096502,0.103716,0.118142,0.146440,0.202886,0.314812", \
				        "0.108080,0.114350,0.126643,0.151988,0.204455,0.314863", \
				        "0.140060,0.146785,0.159467,0.184366,0.232209,0.327708", \
				        "0.194759,0.202052,0.215667,0.242388,0.293605,0.391454");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042074,0.045267,0.051701,0.063736,0.087083,0.132276", \
				        "0.045128,0.048199,0.054606,0.066693,0.090007,0.135316", \
				        "0.051325,0.054427,0.060558,0.072630,0.095942,0.141088", \
				        "0.064840,0.067957,0.073729,0.085272,0.108247,0.153326", \
				        "0.082743,0.086836,0.094681,0.109047,0.134254,0.178655", \
				        "0.100325,0.105881,0.116207,0.135233,0.168922,0.225763", \
				        "0.112817,0.119540,0.133295,0.158289,0.202879,0.278772", \
				        "0.107151,0.116689,0.134249,0.167254,0.226080,0.326231");
			}
			cell_rise(Timing_X1) {
				values ("0.116121,0.122670,0.135750,0.161517,0.212666,0.314305", \
				        "0.119586,0.126023,0.139119,0.164925,0.216137,0.317883", \
				        "0.126278,0.132891,0.145788,0.171648,0.222928,0.324743", \
				        "0.138932,0.145538,0.158526,0.184454,0.235822,0.337717", \
				        "0.161787,0.168567,0.181771,0.207634,0.258930,0.360902", \
				        "0.197922,0.205675,0.221168,0.250285,0.304316,0.406148", \
				        "0.251410,0.261023,0.280064,0.315622,0.380659,0.496121", \
				        "0.343018,0.356140,0.379039,0.423520,0.502390,0.640924");
			}
			fall_transition(Timing_X1) {
				values ("0.041410,0.043622,0.048265,0.057565,0.076228,0.113568", \
				        "0.041301,0.043502,0.048179,0.057519,0.076220,0.113528", \
				        "0.040413,0.042783,0.047774,0.057372,0.076160,0.113533", \
				        "0.043093,0.044891,0.048973,0.057479,0.075825,0.113507", \
				        "0.058146,0.059745,0.063172,0.069578,0.082643,0.114406", \
				        "0.083985,0.086150,0.090265,0.098159,0.112820,0.139110", \
				        "0.125690,0.128521,0.134134,0.144354,0.163199,0.196641", \
				        "0.195199,0.199176,0.206588,0.220554,0.245709,0.289190");
			}
			rise_transition(Timing_X1) {
				values ("0.067107,0.073010,0.084878,0.108271,0.154708,0.247154", \
				        "0.067103,0.073018,0.084886,0.108226,0.154715,0.247132", \
				        "0.067125,0.073012,0.084908,0.108255,0.154666,0.247156", \
				        "0.067169,0.073064,0.084986,0.108262,0.154701,0.247135", \
				        "0.069546,0.074920,0.086150,0.108612,0.154710,0.247143", \
				        "0.086191,0.091373,0.101606,0.121034,0.160749,0.247722", \
				        "0.117929,0.123612,0.134210,0.154864,0.194774,0.271497", \
				        "0.172414,0.178411,0.189814,0.212077,0.255096,0.337334");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A2 & B2 & C1 & !C2 | !A1 & B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042475,0.045765,0.052289,0.064265,0.087743,0.133001", \
				        "0.045563,0.048694,0.055350,0.067185,0.090590,0.135972", \
				        "0.051814,0.054931,0.061145,0.073236,0.096641,0.141896", \
				        "0.065365,0.068593,0.074356,0.085903,0.108918,0.154119", \
				        "0.083504,0.087611,0.095547,0.109899,0.134942,0.179400", \
				        "0.100994,0.106673,0.117132,0.136114,0.169796,0.226580", \
				        "0.112263,0.119087,0.133081,0.158231,0.203092,0.279361", \
				        "0.102331,0.111898,0.129834,0.163135,0.222797,0.324324");
			}
			cell_rise(Timing_X1) {
				values ("0.162184,0.170155,0.186052,0.217620,0.280158,0.404236", \
				        "0.165454,0.173350,0.189227,0.220868,0.283459,0.407585", \
				        "0.171698,0.179757,0.195471,0.227118,0.289803,0.414098", \
				        "0.183684,0.191660,0.207577,0.239254,0.302049,0.426411", \
				        "0.205737,0.213918,0.229928,0.261449,0.324251,0.448720", \
				        "0.247231,0.255785,0.272854,0.305467,0.368270,0.492463", \
				        "0.311393,0.322184,0.342731,0.381592,0.453892,0.584960", \
				        "0.423039,0.436737,0.460787,0.508363,0.594227,0.748571");
			}
			fall_transition(Timing_X1) {
				values ("0.050519,0.052694,0.057103,0.066160,0.084461,0.121539", \
				        "0.050395,0.052620,0.057011,0.066109,0.084448,0.121507", \
				        "0.049496,0.051846,0.056663,0.065975,0.084388,0.121544", \
				        "0.052066,0.053861,0.057693,0.066034,0.084017,0.121467", \
				        "0.068080,0.069533,0.072364,0.077933,0.090786,0.122348", \
				        "0.097741,0.099477,0.102921,0.109527,0.122538,0.147114", \
				        "0.145772,0.148079,0.152536,0.160982,0.177415,0.208018", \
				        "0.225620,0.228535,0.234459,0.245909,0.267456,0.306796");
			}
			rise_transition(Timing_X1) {
				values ("0.096251,0.103507,0.117910,0.146427,0.202867,0.314827", \
				        "0.096208,0.103527,0.117967,0.146406,0.202882,0.314812", \
				        "0.096209,0.103526,0.117923,0.146412,0.202866,0.314829", \
				        "0.096146,0.103524,0.117910,0.146411,0.202851,0.314833", \
				        "0.096502,0.103716,0.118142,0.146440,0.202886,0.314812", \
				        "0.108080,0.114350,0.126643,0.151988,0.204455,0.314863", \
				        "0.140060,0.146785,0.159467,0.184366,0.232209,0.327708", \
				        "0.194759,0.202052,0.215667,0.242388,0.293605,0.391454");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2 & !C1 & C2 | !A1 & A2 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042087,0.045275,0.051672,0.063748,0.087092,0.132321", \
				        "0.045154,0.048213,0.054625,0.066761,0.090063,0.135370", \
				        "0.051422,0.054540,0.060517,0.072718,0.096046,0.141211", \
				        "0.064962,0.068090,0.073916,0.085406,0.108378,0.153468", \
				        "0.082850,0.086949,0.094793,0.109155,0.134372,0.178791", \
				        "0.099875,0.105498,0.115857,0.135001,0.168809,0.225745", \
				        "0.110040,0.116865,0.130874,0.156233,0.201401,0.277878", \
				        "0.097293,0.107347,0.125216,0.159156,0.219423,0.321523");
			}
			cell_rise(Timing_X1) {
				values ("0.140583,0.148623,0.164566,0.196046,0.258472,0.382380", \
				        "0.143813,0.151715,0.167701,0.199248,0.261750,0.385716", \
				        "0.150053,0.158116,0.173881,0.205450,0.268084,0.392207", \
				        "0.161939,0.170017,0.185938,0.217597,0.280255,0.404506", \
				        "0.184044,0.192160,0.208281,0.239819,0.302487,0.426785", \
				        "0.222882,0.231743,0.249557,0.283260,0.346523,0.470547", \
				        "0.281532,0.293135,0.314499,0.355082,0.429364,0.562631", \
				        "0.386730,0.401362,0.426663,0.476287,0.565027,0.722553");
			}
			fall_transition(Timing_X1) {
				values ("0.041442,0.043648,0.048321,0.057606,0.076252,0.113595", \
				        "0.041312,0.043501,0.048218,0.057552,0.076235,0.113537", \
				        "0.040429,0.042838,0.047813,0.057383,0.076172,0.113535", \
				        "0.043034,0.044835,0.048948,0.057483,0.075835,0.113510", \
				        "0.058094,0.059670,0.063117,0.069511,0.082601,0.114404", \
				        "0.084162,0.086332,0.090421,0.098287,0.112891,0.139123", \
				        "0.126708,0.129547,0.135151,0.145272,0.163956,0.197139", \
				        "0.197889,0.201669,0.209291,0.223234,0.248297,0.291454");
			}
			rise_transition(Timing_X1) {
				values ("0.084137,0.091306,0.105548,0.133835,0.189982,0.301569", \
				        "0.084126,0.091312,0.105540,0.133840,0.189983,0.301566", \
				        "0.084136,0.091309,0.105607,0.133771,0.190003,0.301561", \
				        "0.084127,0.091318,0.105640,0.133781,0.190008,0.301550", \
				        "0.084943,0.091863,0.105863,0.133962,0.189986,0.301569", \
				        "0.099332,0.105637,0.117697,0.141754,0.192726,0.301612", \
				        "0.132167,0.138672,0.151154,0.175616,0.223110,0.316917", \
				        "0.187607,0.194510,0.207866,0.233995,0.284750,0.381836");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.051037,0.054267,0.060539,0.072674,0.096137,0.141408", \
				        "0.054093,0.057278,0.063485,0.075753,0.099119,0.144445", \
				        "0.059270,0.062510,0.068756,0.080945,0.104304,0.149594", \
				        "0.069148,0.072477,0.078678,0.090899,0.114443,0.159827", \
				        "0.084687,0.088391,0.095678,0.109048,0.133683,0.179553", \
				        "0.102493,0.107420,0.116561,0.133361,0.163206,0.215389", \
				        "0.115384,0.121665,0.134233,0.157079,0.197030,0.264091", \
				        "0.110591,0.119684,0.136488,0.167406,0.221930,0.312981");
			}
			cell_rise(Timing_X1) {
				values ("0.187654,0.195619,0.211439,0.243119,0.305766,0.430085", \
				        "0.190994,0.198953,0.214679,0.246369,0.309050,0.433371", \
				        "0.197532,0.205536,0.221224,0.252844,0.315582,0.440025", \
				        "0.209658,0.217749,0.233566,0.265286,0.328113,0.452559", \
				        "0.232175,0.240010,0.256106,0.287712,0.350604,0.475159", \
				        "0.275148,0.283508,0.300032,0.331850,0.394705,0.519057", \
				        "0.346509,0.357050,0.375883,0.413368,0.483384,0.611949", \
				        "0.470299,0.482827,0.505622,0.550532,0.632607,0.782524");
			}
			fall_transition(Timing_X1) {
				values ("0.050426,0.052655,0.057099,0.066169,0.084455,0.121531", \
				        "0.050379,0.052601,0.057039,0.066137,0.084450,0.121537", \
				        "0.050106,0.052360,0.056811,0.066050,0.084400,0.121535", \
				        "0.050694,0.052799,0.057217,0.066056,0.084291,0.121532", \
				        "0.057872,0.059753,0.063479,0.071164,0.087085,0.122047", \
				        "0.076462,0.078192,0.081698,0.088465,0.102733,0.133245", \
				        "0.111916,0.113768,0.117484,0.124625,0.138789,0.167687", \
				        "0.149180,0.152240,0.158214,0.169056,0.189061,0.224400");
			}
			rise_transition(Timing_X1) {
				values ("0.109863,0.117371,0.132005,0.160823,0.217722,0.330297", \
				        "0.109868,0.117369,0.131984,0.160822,0.217721,0.330306", \
				        "0.109867,0.117389,0.132004,0.160823,0.217719,0.330309", \
				        "0.109866,0.117398,0.131985,0.160815,0.217692,0.330304", \
				        "0.109971,0.117472,0.131967,0.160825,0.217727,0.330293", \
				        "0.117880,0.124632,0.137691,0.164226,0.218431,0.330322", \
				        "0.148913,0.155745,0.168793,0.194083,0.242497,0.340592", \
				        "0.198656,0.206068,0.221005,0.249083,0.302056,0.401631");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.050292,0.053353,0.059519,0.071679,0.095056,0.140282", \
				        "0.053329,0.056484,0.062496,0.074679,0.098082,0.143336", \
				        "0.058508,0.061687,0.067874,0.079823,0.103170,0.148450", \
				        "0.068403,0.071638,0.077937,0.090008,0.113358,0.158673", \
				        "0.083751,0.087341,0.094419,0.107814,0.132582,0.178344", \
				        "0.101028,0.105925,0.114846,0.131741,0.161768,0.214053", \
				        "0.112284,0.118926,0.131475,0.154524,0.194823,0.262132", \
				        "0.102173,0.111507,0.128722,0.160493,0.216294,0.308785");
			}
			cell_rise(Timing_X1) {
				values ("0.144524,0.152526,0.168347,0.199938,0.262419,0.386431", \
				        "0.147846,0.155789,0.171576,0.203150,0.265673,0.389692", \
				        "0.154322,0.162275,0.178071,0.209565,0.272189,0.396294", \
				        "0.166417,0.174461,0.190328,0.221960,0.284644,0.408856", \
				        "0.188824,0.196754,0.212736,0.244445,0.307117,0.431414", \
				        "0.227636,0.237189,0.254508,0.288095,0.351214,0.475333", \
				        "0.289575,0.301076,0.321633,0.361845,0.435292,0.567908", \
				        "0.401587,0.414383,0.441018,0.488823,0.575591,0.731556");
			}
			fall_transition(Timing_X1) {
				values ("0.033143,0.035711,0.040841,0.050340,0.069019,0.106485", \
				        "0.033091,0.035655,0.040803,0.050265,0.068962,0.106405", \
				        "0.032834,0.035411,0.040536,0.050157,0.068890,0.106477", \
				        "0.033523,0.035929,0.040895,0.050242,0.068816,0.106458", \
				        "0.039838,0.042091,0.046776,0.055128,0.071591,0.107010", \
				        "0.054968,0.057256,0.061817,0.070092,0.086037,0.118002", \
				        "0.082953,0.085471,0.090929,0.100683,0.118179,0.150089", \
				        "0.129206,0.133423,0.140494,0.153605,0.176227,0.214287");
			}
			rise_transition(Timing_X1) {
				values ("0.086576,0.093839,0.108153,0.136517,0.192845,0.304504", \
				        "0.086576,0.093838,0.108180,0.136507,0.192849,0.304510", \
				        "0.086586,0.093805,0.108156,0.136514,0.192835,0.304516", \
				        "0.086568,0.093831,0.108118,0.136516,0.192834,0.304508", \
				        "0.087225,0.094266,0.108445,0.136601,0.192862,0.304491", \
				        "0.101152,0.107293,0.119446,0.143892,0.195268,0.304565", \
				        "0.132756,0.139394,0.152153,0.177030,0.224827,0.319289", \
				        "0.181417,0.189193,0.203396,0.231297,0.284098,0.382793");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.050666,0.053749,0.060146,0.072176,0.095576,0.140784", \
				        "0.053668,0.056781,0.063061,0.075124,0.098543,0.143778", \
				        "0.058773,0.061997,0.068127,0.080332,0.103625,0.148913", \
				        "0.068629,0.071933,0.078131,0.090320,0.113763,0.159101", \
				        "0.084012,0.087650,0.094830,0.108288,0.132948,0.178764", \
				        "0.101610,0.106548,0.115624,0.132415,0.162313,0.214523", \
				        "0.114752,0.121198,0.133750,0.156432,0.196282,0.263290", \
				        "0.110591,0.119684,0.136488,0.167406,0.221930,0.312981");
			}
			cell_rise(Timing_X1) {
				values ("0.136661,0.143121,0.156174,0.182051,0.233450,0.335392", \
				        "0.140162,0.146650,0.159643,0.185547,0.236963,0.338919", \
				        "0.147158,0.153693,0.166576,0.192460,0.243902,0.345929", \
				        "0.159840,0.166541,0.179611,0.205511,0.257009,0.359084", \
				        "0.183176,0.189633,0.202873,0.228830,0.280346,0.382484", \
				        "0.223030,0.230483,0.245145,0.273217,0.325912,0.427852", \
				        "0.283483,0.293239,0.310493,0.344400,0.406942,0.519667", \
				        "0.389092,0.400726,0.422057,0.463347,0.538049,0.671712");
			}
			fall_transition(Timing_X1) {
				values ("0.041362,0.043639,0.048308,0.057605,0.076227,0.113553", \
				        "0.041304,0.043591,0.048241,0.057582,0.076239,0.113578", \
				        "0.041023,0.043298,0.048021,0.057479,0.076191,0.113588", \
				        "0.041651,0.043822,0.048392,0.057442,0.076052,0.113576", \
				        "0.048611,0.050563,0.054639,0.062670,0.078900,0.114086", \
				        "0.065593,0.067536,0.071390,0.078879,0.093994,0.125259", \
				        "0.097209,0.099259,0.103775,0.112106,0.127924,0.158366", \
				        "0.149180,0.152240,0.158214,0.169056,0.189061,0.224400");
			}
			rise_transition(Timing_X1) {
				values ("0.078051,0.084161,0.096179,0.119939,0.166780,0.259726", \
				        "0.078054,0.084161,0.096267,0.119943,0.166778,0.259750", \
				        "0.078055,0.084149,0.096261,0.119920,0.166791,0.259746", \
				        "0.078063,0.084174,0.096290,0.119923,0.166794,0.259750", \
				        "0.079018,0.084888,0.096632,0.120100,0.166773,0.259773", \
				        "0.093267,0.098863,0.109130,0.129149,0.170865,0.259935", \
				        "0.123648,0.129515,0.140635,0.162076,0.202682,0.280578", \
				        "0.170900,0.177534,0.190317,0.214628,0.260112,0.344822");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.051037,0.054267,0.060539,0.072674,0.096137,0.141408", \
				        "0.054093,0.057278,0.063485,0.075753,0.099119,0.144445", \
				        "0.059270,0.062510,0.068756,0.080945,0.104304,0.149594", \
				        "0.069148,0.072477,0.078678,0.090899,0.114443,0.159827", \
				        "0.084687,0.088391,0.095678,0.109048,0.133683,0.179553", \
				        "0.102493,0.107420,0.116561,0.133361,0.163206,0.215389", \
				        "0.115384,0.121665,0.134233,0.157079,0.197030,0.264091", \
				        "0.107547,0.116981,0.133903,0.165161,0.220403,0.312317");
			}
			cell_rise(Timing_X1) {
				values ("0.187654,0.195619,0.211439,0.243119,0.305766,0.430085", \
				        "0.190994,0.198953,0.214679,0.246369,0.309050,0.433371", \
				        "0.197532,0.205536,0.221224,0.252844,0.315582,0.440025", \
				        "0.209658,0.217749,0.233566,0.265286,0.328113,0.452559", \
				        "0.232175,0.240010,0.256106,0.287712,0.350604,0.475159", \
				        "0.275148,0.283508,0.300032,0.331850,0.394705,0.519057", \
				        "0.346509,0.357050,0.375883,0.413368,0.483384,0.611949", \
				        "0.470299,0.482827,0.505622,0.550532,0.632607,0.782524");
			}
			fall_transition(Timing_X1) {
				values ("0.050426,0.052655,0.057099,0.066169,0.084455,0.121531", \
				        "0.050379,0.052601,0.057039,0.066137,0.084450,0.121537", \
				        "0.050106,0.052360,0.056811,0.066050,0.084400,0.121535", \
				        "0.050694,0.052799,0.057217,0.066056,0.084291,0.121532", \
				        "0.057872,0.059753,0.063479,0.071164,0.087085,0.122047", \
				        "0.076462,0.078192,0.081698,0.088465,0.102733,0.133245", \
				        "0.111916,0.113768,0.117484,0.124625,0.138789,0.167687", \
				        "0.171458,0.173600,0.178466,0.187482,0.204903,0.237342");
			}
			rise_transition(Timing_X1) {
				values ("0.109863,0.117371,0.132005,0.160823,0.217722,0.330297", \
				        "0.109868,0.117369,0.131984,0.160822,0.217721,0.330306", \
				        "0.109867,0.117389,0.132004,0.160823,0.217719,0.330309", \
				        "0.109866,0.117398,0.131985,0.160815,0.217692,0.330304", \
				        "0.109971,0.117472,0.131967,0.160825,0.217727,0.330293", \
				        "0.117880,0.124632,0.137691,0.164226,0.218431,0.330322", \
				        "0.148913,0.155745,0.168793,0.194083,0.242497,0.340592", \
				        "0.198656,0.206068,0.221005,0.249083,0.302056,0.401631");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.057630,0.060935,0.067421,0.080316,0.104918,0.151826", \
				        "0.060557,0.063740,0.070221,0.083120,0.107846,0.154716", \
				        "0.066673,0.069851,0.076121,0.088997,0.113598,0.160473", \
				        "0.079905,0.083047,0.089175,0.101607,0.125835,0.172522", \
				        "0.104304,0.107906,0.115065,0.128241,0.152104,0.197598", \
				        "0.130995,0.135859,0.145097,0.162588,0.194186,0.248087", \
				        "0.155196,0.160986,0.173416,0.196404,0.237896,0.309645", \
				        "0.165844,0.174805,0.190138,0.220083,0.274439,0.368777");
			}
			cell_rise(Timing_X1) {
				values ("0.198556,0.206510,0.222448,0.254148,0.316847,0.441138", \
				        "0.202375,0.210240,0.226223,0.257879,0.320648,0.444973", \
				        "0.209592,0.217532,0.233357,0.265084,0.327915,0.452297", \
				        "0.222389,0.230517,0.246539,0.278250,0.341126,0.465605", \
				        "0.245004,0.252971,0.269006,0.300643,0.363435,0.487922", \
				        "0.281206,0.289518,0.306175,0.338158,0.400888,0.525349", \
				        "0.328379,0.337880,0.356725,0.393307,0.462542,0.592437", \
				        "0.401124,0.413173,0.435122,0.477795,0.556831,0.703379");
			}
			fall_transition(Timing_X1) {
				values ("0.044469,0.047163,0.052520,0.062275,0.081436,0.119268", \
				        "0.044289,0.047012,0.052426,0.062216,0.081440,0.119229", \
				        "0.043715,0.046482,0.051837,0.061887,0.081307,0.119239", \
				        "0.042786,0.045408,0.050781,0.060770,0.080799,0.119119", \
				        "0.054172,0.056313,0.060670,0.067545,0.083243,0.118548", \
				        "0.077162,0.079819,0.084839,0.093923,0.109892,0.137441", \
				        "0.114304,0.117661,0.124433,0.136438,0.157483,0.192965", \
				        "0.175322,0.180385,0.189535,0.205995,0.234386,0.281551");
			}
			rise_transition(Timing_X1) {
				values ("0.097686,0.105025,0.119570,0.148200,0.204834,0.317086", \
				        "0.097683,0.105017,0.119536,0.148171,0.204864,0.317064", \
				        "0.097681,0.105047,0.119520,0.148196,0.204836,0.317107", \
				        "0.097697,0.105021,0.119558,0.148225,0.204849,0.317084", \
				        "0.097786,0.105105,0.119646,0.148201,0.204876,0.317063", \
				        "0.103425,0.110213,0.123682,0.150560,0.205437,0.317092", \
				        "0.125828,0.133103,0.146918,0.173483,0.225078,0.326482", \
				        "0.174884,0.181757,0.195366,0.221831,0.274342,0.377077");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.057630,0.060935,0.067421,0.080316,0.104918,0.151826", \
				        "0.060557,0.063740,0.070221,0.083120,0.107846,0.154716", \
				        "0.066673,0.069851,0.076121,0.088997,0.113598,0.160473", \
				        "0.079905,0.083047,0.089175,0.101607,0.125835,0.172522", \
				        "0.104304,0.107906,0.115065,0.128241,0.152104,0.197598", \
				        "0.130995,0.135859,0.145097,0.162588,0.194186,0.248087", \
				        "0.155196,0.160986,0.173416,0.196404,0.237896,0.309645", \
				        "0.165844,0.174805,0.190138,0.220083,0.274439,0.368777");
			}
			cell_rise(Timing_X1) {
				values ("0.136748,0.143656,0.157374,0.184489,0.238195,0.344744", \
				        "0.140488,0.147342,0.161153,0.188309,0.242037,0.348650", \
				        "0.147757,0.154576,0.168282,0.195441,0.249271,0.355982", \
				        "0.160717,0.167741,0.181571,0.208686,0.262481,0.369313", \
				        "0.183640,0.190569,0.204367,0.231457,0.285136,0.391890", \
				        "0.215819,0.223886,0.239585,0.269153,0.324574,0.431367", \
				        "0.253480,0.263544,0.282448,0.318056,0.383406,0.502303", \
				        "0.312895,0.326172,0.349395,0.393608,0.471996,0.611489");
			}
			fall_transition(Timing_X1) {
				values ("0.044469,0.047163,0.052520,0.062275,0.081436,0.119268", \
				        "0.044289,0.047012,0.052426,0.062216,0.081440,0.119229", \
				        "0.043715,0.046482,0.051837,0.061887,0.081307,0.119239", \
				        "0.042786,0.045408,0.050781,0.060770,0.080799,0.119119", \
				        "0.054172,0.056313,0.060670,0.067545,0.083243,0.118548", \
				        "0.077162,0.079819,0.084839,0.093923,0.109892,0.137441", \
				        "0.114304,0.117661,0.124433,0.136438,0.157483,0.192965", \
				        "0.175322,0.180385,0.189535,0.205995,0.234386,0.281551");
			}
			rise_transition(Timing_X1) {
				values ("0.068756,0.074658,0.086449,0.110208,0.157469,0.251508", \
				        "0.068752,0.074665,0.086547,0.110220,0.157463,0.251508", \
				        "0.068769,0.074705,0.086544,0.110232,0.157451,0.251509", \
				        "0.068776,0.074666,0.086519,0.110189,0.157459,0.251508", \
				        "0.069470,0.075313,0.086892,0.110288,0.157439,0.251499", \
				        "0.081184,0.086581,0.097118,0.117777,0.160723,0.251659", \
				        "0.108812,0.114007,0.124696,0.146053,0.188275,0.270094", \
				        "0.169662,0.174369,0.183708,0.203504,0.244475,0.328114");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A2 & !B1 & !B2 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.049315,0.052936,0.059918,0.073592,0.099184,0.147426", \
				        "0.052328,0.055817,0.062950,0.076528,0.102112,0.150298", \
				        "0.058850,0.062336,0.069047,0.082451,0.107965,0.156092", \
				        "0.073605,0.076690,0.082861,0.095619,0.120374,0.168160", \
				        "0.097447,0.101340,0.109001,0.122870,0.147465,0.193452", \
				        "0.123436,0.128626,0.138435,0.156653,0.189165,0.244281", \
				        "0.147483,0.153497,0.166461,0.190096,0.232592,0.305590", \
				        "0.158857,0.167565,0.183737,0.214157,0.269325,0.364844");
			}
			cell_rise(Timing_X1) {
				values ("0.146624,0.153259,0.166509,0.192514,0.243958,0.346012", \
				        "0.150506,0.157088,0.170289,0.196281,0.247790,0.349883", \
				        "0.157936,0.164504,0.177617,0.203669,0.255223,0.357406", \
				        "0.171652,0.178440,0.191643,0.217711,0.269235,0.371488", \
				        "0.196734,0.203347,0.216689,0.242711,0.294174,0.396414", \
				        "0.233952,0.241626,0.256214,0.284206,0.336866,0.439069", \
				        "0.279196,0.287941,0.305750,0.339365,0.401397,0.514561", \
				        "0.345382,0.357449,0.379272,0.421077,0.495783,0.629132");
			}
			fall_transition(Timing_X1) {
				values ("0.053977,0.056476,0.061298,0.070975,0.089981,0.127452", \
				        "0.053523,0.056005,0.060889,0.070748,0.089872,0.127408", \
				        "0.051989,0.054707,0.059862,0.070092,0.089529,0.127323", \
				        "0.051956,0.054172,0.058823,0.068330,0.088413,0.126977", \
				        "0.065548,0.067186,0.070468,0.076704,0.091449,0.125957", \
				        "0.092643,0.094747,0.098654,0.106158,0.120057,0.145685", \
				        "0.135562,0.138301,0.143657,0.153421,0.171609,0.203921", \
				        "0.205473,0.209279,0.216429,0.229839,0.254331,0.296992");
			}
			rise_transition(Timing_X1) {
				values ("0.068855,0.074764,0.086621,0.109969,0.156493,0.249037", \
				        "0.068860,0.074759,0.086552,0.109931,0.156452,0.249078", \
				        "0.068877,0.074781,0.086496,0.109879,0.156449,0.249069", \
				        "0.068901,0.074796,0.086532,0.109976,0.156503,0.249054", \
				        "0.069508,0.075325,0.086971,0.110168,0.156509,0.249070", \
				        "0.080252,0.085605,0.096226,0.116751,0.159452,0.249263", \
				        "0.105937,0.111920,0.123029,0.144656,0.186651,0.267323", \
				        "0.162043,0.167687,0.178335,0.199848,0.242119,0.325671");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A2 & B1 & !B2 & C2 | !A1 & B1 & !B2 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.048152,0.051760,0.058840,0.072556,0.098000,0.146304", \
				        "0.051234,0.054768,0.061942,0.075489,0.100975,0.149213", \
				        "0.057821,0.061289,0.068061,0.081327,0.106857,0.154980", \
				        "0.072567,0.075713,0.081760,0.094632,0.119251,0.167065", \
				        "0.096001,0.100007,0.107790,0.121720,0.146379,0.192336", \
				        "0.121045,0.126421,0.136459,0.154744,0.187515,0.242964", \
				        "0.143736,0.150138,0.163146,0.186965,0.229944,0.303497", \
				        "0.152960,0.161857,0.178052,0.208615,0.264231,0.360837");
			}
			cell_rise(Timing_X1) {
				values ("0.198556,0.206510,0.222448,0.254148,0.316847,0.441138", \
				        "0.202375,0.210240,0.226223,0.257879,0.320648,0.444973", \
				        "0.209592,0.217532,0.233357,0.265084,0.327915,0.452297", \
				        "0.222389,0.230517,0.246539,0.278250,0.341126,0.465605", \
				        "0.245004,0.252971,0.269006,0.300643,0.363435,0.487922", \
				        "0.281206,0.289518,0.306175,0.338158,0.400888,0.525349", \
				        "0.328379,0.337880,0.356725,0.393307,0.462542,0.592437", \
				        "0.401124,0.413173,0.435122,0.477795,0.556831,0.703379");
			}
			fall_transition(Timing_X1) {
				values ("0.063905,0.066332,0.070958,0.080333,0.098923,0.136028", \
				        "0.063436,0.065909,0.070610,0.080070,0.098779,0.135979", \
				        "0.061930,0.064582,0.069541,0.079348,0.098458,0.135857", \
				        "0.062259,0.064437,0.068773,0.077755,0.097306,0.135515", \
				        "0.076681,0.078055,0.080747,0.086569,0.100735,0.134583", \
				        "0.107974,0.109564,0.112715,0.118814,0.130941,0.154819", \
				        "0.157943,0.159931,0.163932,0.171845,0.187215,0.216425", \
				        "0.238863,0.241462,0.247182,0.257626,0.278106,0.315887");
			}
			rise_transition(Timing_X1) {
				values ("0.097686,0.105025,0.119570,0.148200,0.204834,0.317086", \
				        "0.097683,0.105017,0.119536,0.148171,0.204864,0.317064", \
				        "0.097681,0.105047,0.119520,0.148196,0.204836,0.317107", \
				        "0.097697,0.105021,0.119558,0.148225,0.204849,0.317084", \
				        "0.097786,0.105105,0.119646,0.148201,0.204876,0.317063", \
				        "0.103425,0.110213,0.123682,0.150560,0.205437,0.317092", \
				        "0.125828,0.133103,0.146918,0.173483,0.225078,0.326482", \
				        "0.174884,0.181757,0.195366,0.221831,0.274342,0.377077");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & !A2 & !B1 & B2 & C2 | !A1 & A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.047721,0.051242,0.058282,0.071965,0.097551,0.145688", \
				        "0.050789,0.054258,0.061250,0.074827,0.100372,0.148570", \
				        "0.057358,0.060797,0.067502,0.080748,0.106258,0.154309", \
				        "0.072173,0.075286,0.081333,0.094031,0.118692,0.166421", \
				        "0.095349,0.099288,0.106981,0.121027,0.145834,0.191721", \
				        "0.119940,0.125285,0.135249,0.153725,0.186590,0.242192", \
				        "0.141659,0.148027,0.161015,0.185099,0.228357,0.302147", \
				        "0.148349,0.157461,0.173905,0.204927,0.261183,0.358199");
			}
			cell_rise(Timing_X1) {
				values ("0.172194,0.180212,0.196188,0.227651,0.290112,0.414036", \
				        "0.176008,0.183924,0.199890,0.231398,0.293936,0.417940", \
				        "0.183193,0.191136,0.207024,0.238593,0.301181,0.425247", \
				        "0.196089,0.204155,0.220195,0.251731,0.314369,0.438517", \
				        "0.218731,0.226716,0.242727,0.274161,0.336680,0.460822", \
				        "0.253036,0.261725,0.278842,0.311441,0.374201,0.498307", \
				        "0.295513,0.305295,0.324964,0.362635,0.433342,0.564881", \
				        "0.361469,0.374211,0.397449,0.442054,0.523414,0.672382");
			}
			fall_transition(Timing_X1) {
				values ("0.052332,0.054827,0.059749,0.069622,0.088847,0.126464", \
				        "0.051885,0.054384,0.059382,0.069401,0.088681,0.126431", \
				        "0.050396,0.053138,0.058399,0.068701,0.088329,0.126324", \
				        "0.050935,0.053173,0.057729,0.067159,0.087228,0.125947", \
				        "0.065252,0.066805,0.070118,0.076336,0.090767,0.125045", \
				        "0.092753,0.094832,0.098651,0.106119,0.119974,0.145418", \
				        "0.136830,0.139501,0.144689,0.154365,0.172176,0.204183", \
				        "0.209176,0.212649,0.219912,0.232928,0.256911,0.298823");
			}
			rise_transition(Timing_X1) {
				values ("0.084158,0.091293,0.105585,0.133799,0.190005,0.301585", \
				        "0.084170,0.091322,0.105633,0.133854,0.189977,0.301558", \
				        "0.084179,0.091314,0.105642,0.133842,0.190011,0.301564", \
				        "0.084177,0.091331,0.105631,0.133853,0.190018,0.301550", \
				        "0.084436,0.091556,0.105796,0.133849,0.190024,0.301554", \
				        "0.092431,0.099023,0.111874,0.137779,0.191205,0.301592", \
				        "0.115232,0.122402,0.135762,0.161939,0.213137,0.313024", \
				        "0.167869,0.174431,0.187037,0.212499,0.263399,0.364728");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.062316,0.065655,0.072156,0.084968,0.109565,0.156471", \
				        "0.065088,0.068394,0.074964,0.087634,0.112207,0.159119", \
				        "0.070149,0.073500,0.079981,0.092876,0.117389,0.164285", \
				        "0.080379,0.083717,0.090256,0.102949,0.127461,0.174343", \
				        "0.099187,0.102730,0.109505,0.122750,0.147481,0.194148", \
				        "0.124448,0.128655,0.136812,0.152433,0.180966,0.232199", \
				        "0.150026,0.155303,0.166075,0.186665,0.223590,0.286948", \
				        "0.163040,0.171357,0.185798,0.213350,0.262830,0.347691");
			}
			cell_rise(Timing_X1) {
				values ("0.219141,0.227145,0.243018,0.274692,0.337361,0.461689", \
				        "0.223112,0.231078,0.246851,0.278516,0.341195,0.465552", \
				        "0.230527,0.238560,0.254256,0.285928,0.348635,0.473002", \
				        "0.243729,0.251723,0.267674,0.299328,0.362119,0.486518", \
				        "0.266329,0.274340,0.290364,0.322018,0.384719,0.509132", \
				        "0.303714,0.311708,0.327925,0.359710,0.422387,0.546813", \
				        "0.353485,0.363254,0.381587,0.417458,0.485691,0.614189", \
				        "0.433941,0.445277,0.466235,0.507507,0.584734,0.728898");
			}
			fall_transition(Timing_X1) {
				values ("0.044404,0.047096,0.052517,0.062325,0.081395,0.119300", \
				        "0.044338,0.047031,0.052424,0.062265,0.081469,0.119264", \
				        "0.044059,0.046729,0.052088,0.062115,0.081298,0.119276", \
				        "0.043379,0.046063,0.051474,0.061499,0.081061,0.119215", \
				        "0.047973,0.050418,0.055382,0.064149,0.082033,0.119035", \
				        "0.061792,0.064318,0.069084,0.077822,0.094553,0.127560", \
				        "0.089188,0.091867,0.097336,0.107154,0.124995,0.157746", \
				        "0.134791,0.138458,0.145791,0.158766,0.181317,0.219719");
			}
			rise_transition(Timing_X1) {
				values ("0.109855,0.117382,0.132003,0.160786,0.217738,0.330280", \
				        "0.109932,0.117379,0.131938,0.160813,0.217726,0.330306", \
				        "0.109866,0.117400,0.131959,0.160799,0.217734,0.330293", \
				        "0.109850,0.117380,0.131991,0.160778,0.217739,0.330285", \
				        "0.109914,0.117438,0.132025,0.160802,0.217715,0.330306", \
				        "0.113904,0.120965,0.134774,0.162343,0.217972,0.330311", \
				        "0.136139,0.143253,0.157176,0.183974,0.235637,0.338262", \
				        "0.180207,0.187486,0.201889,0.229645,0.283528,0.387542");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.062316,0.065655,0.072156,0.084968,0.109565,0.156471", \
				        "0.065088,0.068394,0.074964,0.087634,0.112207,0.159119", \
				        "0.070149,0.073500,0.079981,0.092876,0.117389,0.164285", \
				        "0.080379,0.083717,0.090256,0.102949,0.127461,0.174343", \
				        "0.099187,0.102730,0.109505,0.122750,0.147481,0.194148", \
				        "0.124448,0.128655,0.136812,0.152433,0.180966,0.232199", \
				        "0.150026,0.155303,0.166075,0.186665,0.223590,0.286948", \
				        "0.163040,0.171357,0.185798,0.213350,0.262830,0.347691");
			}
			cell_rise(Timing_X1) {
				values ("0.154315,0.161258,0.174915,0.201982,0.255702,0.362378", \
				        "0.158236,0.165108,0.178677,0.205831,0.259565,0.366295", \
				        "0.165638,0.172598,0.186107,0.213204,0.266995,0.373768", \
				        "0.178975,0.185914,0.199554,0.226703,0.280527,0.387315", \
				        "0.201706,0.208659,0.222598,0.249657,0.303421,0.410209", \
				        "0.237017,0.244670,0.259684,0.288515,0.343055,0.449864", \
				        "0.279150,0.288646,0.306626,0.340970,0.404828,0.521895", \
				        "0.349208,0.360952,0.382636,0.424287,0.499689,0.635627");
			}
			fall_transition(Timing_X1) {
				values ("0.044404,0.047096,0.052517,0.062325,0.081395,0.119300", \
				        "0.044338,0.047031,0.052424,0.062265,0.081469,0.119264", \
				        "0.044059,0.046729,0.052088,0.062115,0.081298,0.119276", \
				        "0.043379,0.046063,0.051474,0.061499,0.081061,0.119215", \
				        "0.047973,0.050418,0.055382,0.064149,0.082033,0.119035", \
				        "0.061792,0.064318,0.069084,0.077822,0.094553,0.127560", \
				        "0.089188,0.091867,0.097336,0.107154,0.124995,0.157746", \
				        "0.134791,0.138458,0.145791,0.158766,0.181317,0.219719");
			}
			rise_transition(Timing_X1) {
				values ("0.078940,0.084955,0.097003,0.120839,0.168253,0.262647", \
				        "0.078936,0.084977,0.096958,0.120843,0.168232,0.262653", \
				        "0.078944,0.084980,0.096972,0.120836,0.168282,0.262634", \
				        "0.078932,0.084957,0.096947,0.120824,0.168284,0.262654", \
				        "0.079259,0.085213,0.097159,0.120832,0.168250,0.262651", \
				        "0.089152,0.094636,0.105348,0.126460,0.170474,0.262704", \
				        "0.115233,0.120912,0.132033,0.154039,0.196713,0.279027", \
				        "0.167481,0.173424,0.184261,0.206318,0.249967,0.335942");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A2 & !B1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.054013,0.057611,0.064661,0.078152,0.103816,0.152047", \
				        "0.056850,0.060441,0.067496,0.080879,0.106449,0.154708", \
				        "0.062086,0.065744,0.072768,0.086240,0.111710,0.159897", \
				        "0.073083,0.076520,0.083413,0.096627,0.121910,0.169934", \
				        "0.092023,0.095749,0.103122,0.116804,0.142255,0.189829", \
				        "0.116615,0.121179,0.129988,0.146274,0.175674,0.228000", \
				        "0.141065,0.146882,0.158309,0.179697,0.217760,0.282541", \
				        "0.153464,0.161952,0.177207,0.205541,0.256278,0.342780");
			}
			cell_rise(Timing_X1) {
				values ("0.163523,0.170118,0.183283,0.209236,0.260740,0.362871", \
				        "0.167486,0.174008,0.187079,0.213041,0.264585,0.366723", \
				        "0.175030,0.181602,0.194682,0.220622,0.272161,0.374374", \
				        "0.189120,0.195754,0.208846,0.234907,0.286419,0.388617", \
				        "0.214112,0.220803,0.234095,0.260102,0.311586,0.413821", \
				        "0.253868,0.261012,0.275173,0.302455,0.354475,0.456651", \
				        "0.302801,0.311503,0.328613,0.360997,0.421697,0.533217", \
				        "0.378761,0.389925,0.410209,0.449772,0.521887,0.652185");
			}
			fall_transition(Timing_X1) {
				values ("0.053934,0.056461,0.061368,0.071019,0.089973,0.127448", \
				        "0.053732,0.056219,0.061168,0.070918,0.089931,0.127428", \
				        "0.052981,0.055496,0.060479,0.070456,0.089716,0.127377", \
				        "0.052313,0.054777,0.059743,0.069508,0.089053,0.127170", \
				        "0.058007,0.060073,0.064439,0.072690,0.090096,0.126731", \
				        "0.074206,0.076246,0.080213,0.087919,0.103492,0.135490", \
				        "0.105705,0.107875,0.112173,0.120474,0.136219,0.166989", \
				        "0.157858,0.160634,0.166627,0.177247,0.196834,0.231887");
			}
			rise_transition(Timing_X1) {
				values ("0.078518,0.084588,0.096616,0.120178,0.166984,0.259840", \
				        "0.078523,0.084586,0.096545,0.120124,0.166919,0.259878", \
				        "0.078523,0.084584,0.096564,0.120113,0.166927,0.259875", \
				        "0.078568,0.084589,0.096576,0.120157,0.166942,0.259848", \
				        "0.078853,0.084888,0.096839,0.120252,0.166992,0.259870", \
				        "0.087818,0.093374,0.104081,0.125289,0.169004,0.259951", \
				        "0.113021,0.119160,0.130445,0.152506,0.194810,0.275988", \
				        "0.162630,0.168916,0.180667,0.203779,0.248011,0.333372");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A2 & B1 & !B2 & C1 | !A1 & B1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.052881,0.056474,0.063735,0.077111,0.102745,0.150913", \
				        "0.055728,0.059341,0.066475,0.079766,0.105340,0.153615", \
				        "0.060982,0.064570,0.071932,0.085201,0.110569,0.158754", \
				        "0.071985,0.075483,0.082196,0.095599,0.120736,0.168830", \
				        "0.090832,0.094550,0.101901,0.115614,0.141181,0.188726", \
				        "0.114575,0.119361,0.128414,0.144696,0.174243,0.226733", \
				        "0.137316,0.143792,0.155415,0.177084,0.215431,0.280767", \
				        "0.147266,0.155677,0.171550,0.200347,0.251847,0.339237");
			}
			cell_rise(Timing_X1) {
				values ("0.219141,0.227145,0.243018,0.274692,0.337361,0.461689", \
				        "0.223112,0.231078,0.246851,0.278516,0.341195,0.465552", \
				        "0.230527,0.238560,0.254256,0.285928,0.348635,0.473002", \
				        "0.243729,0.251723,0.267674,0.299328,0.362119,0.486518", \
				        "0.266329,0.274340,0.290364,0.322018,0.384719,0.509132", \
				        "0.303714,0.311708,0.327925,0.359710,0.422387,0.546813", \
				        "0.353485,0.363254,0.381587,0.417458,0.485691,0.614189", \
				        "0.433941,0.445277,0.466235,0.507507,0.584734,0.728898");
			}
			fall_transition(Timing_X1) {
				values ("0.063793,0.066288,0.071009,0.080313,0.098930,0.136006", \
				        "0.063587,0.066047,0.070774,0.080176,0.098837,0.135992", \
				        "0.062851,0.065327,0.070172,0.079755,0.098625,0.135892", \
				        "0.062391,0.064785,0.069536,0.078879,0.097952,0.135717", \
				        "0.068526,0.070497,0.074427,0.082229,0.099170,0.135290", \
				        "0.086696,0.088398,0.091934,0.098851,0.113349,0.144198", \
				        "0.122738,0.124260,0.127808,0.134662,0.148622,0.177462", \
				        "0.182742,0.184924,0.189498,0.198024,0.214628,0.246293");
			}
			rise_transition(Timing_X1) {
				values ("0.109855,0.117382,0.132003,0.160786,0.217738,0.330280", \
				        "0.109932,0.117379,0.131938,0.160813,0.217726,0.330306", \
				        "0.109866,0.117400,0.131959,0.160799,0.217734,0.330293", \
				        "0.109850,0.117380,0.131991,0.160778,0.217739,0.330285", \
				        "0.109914,0.117438,0.132025,0.160802,0.217715,0.330306", \
				        "0.113904,0.120965,0.134774,0.162343,0.217972,0.330311", \
				        "0.136139,0.143253,0.157176,0.183974,0.235637,0.338262", \
				        "0.180207,0.187486,0.201889,0.229645,0.283528,0.387542");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & !A2 & !B1 & B2 & C1 | !A1 & A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.052409,0.055975,0.063032,0.076501,0.102111,0.150278", \
				        "0.055252,0.058819,0.065761,0.079190,0.104748,0.152980", \
				        "0.060539,0.064122,0.071233,0.084540,0.109948,0.158112", \
				        "0.071560,0.075010,0.081763,0.094988,0.120137,0.168207", \
				        "0.090301,0.093990,0.101311,0.114992,0.140564,0.188081", \
				        "0.113829,0.118582,0.127476,0.143936,0.173544,0.226037", \
				        "0.135900,0.142452,0.154003,0.175805,0.214352,0.279807", \
				        "0.144583,0.153188,0.169027,0.198023,0.249875,0.337586");
			}
			cell_rise(Timing_X1) {
				values ("0.192840,0.200827,0.216644,0.248183,0.310681,0.434705", \
				        "0.196730,0.204714,0.220513,0.251996,0.314538,0.438568", \
				        "0.204115,0.212144,0.227831,0.259363,0.321936,0.446017", \
				        "0.217348,0.225364,0.241325,0.272817,0.335396,0.459519", \
				        "0.239819,0.247976,0.264008,0.295484,0.357991,0.482146", \
				        "0.276254,0.284520,0.301140,0.333162,0.395702,0.519843", \
				        "0.321828,0.331621,0.350647,0.387388,0.456885,0.586906", \
				        "0.396494,0.408273,0.430221,0.472931,0.552059,0.698356");
			}
			fall_transition(Timing_X1) {
				values ("0.052256,0.054823,0.059813,0.069636,0.088848,0.126459", \
				        "0.052057,0.054605,0.059583,0.069502,0.088734,0.126426", \
				        "0.051325,0.053901,0.058999,0.069097,0.088555,0.126340", \
				        "0.050973,0.053458,0.058443,0.068227,0.087878,0.126152", \
				        "0.057182,0.059260,0.063461,0.071826,0.089128,0.125767", \
				        "0.073862,0.075856,0.079899,0.087505,0.102937,0.134781", \
				        "0.106263,0.108195,0.112507,0.120645,0.136310,0.166783", \
				        "0.159639,0.162336,0.168295,0.178743,0.198035,0.232660");
			}
			rise_transition(Timing_X1) {
				values ("0.096189,0.103513,0.117869,0.146409,0.202854,0.314828", \
				        "0.096189,0.103535,0.117949,0.146363,0.202885,0.314809", \
				        "0.096176,0.103542,0.117945,0.146377,0.202881,0.314798", \
				        "0.096181,0.103538,0.117950,0.146358,0.202879,0.314819", \
				        "0.096302,0.103626,0.117950,0.146418,0.202839,0.314836", \
				        "0.102372,0.109099,0.122402,0.149142,0.203534,0.314835", \
				        "0.124916,0.132019,0.145670,0.172233,0.223671,0.324589", \
				        "0.170708,0.178020,0.191823,0.218992,0.271922,0.375026");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.000761,0.000519,0.000037,-0.000929,-0.002858,-0.006719", \
				        "0.000765,0.000524,0.000043,-0.000919,-0.002851,-0.006706", \
				        "0.000786,0.000547,0.000088,-0.000895,-0.002832,-0.006687", \
				        "0.000857,0.000623,0.000133,-0.000848,-0.002790,-0.006667", \
				        "0.001057,0.000809,0.000294,-0.000715,-0.002692,-0.006596", \
				        "0.001610,0.001332,0.000763,-0.000311,-0.002376,-0.006372", \
				        "0.002914,0.002622,0.002002,0.000818,-0.001431,-0.005657", \
				        "0.005913,0.005561,0.004888,0.003568,0.001057,-0.003594");
			}
			rise_power(Power_X1) {
				values ("0.005082,0.005326,0.005811,0.006792,0.008721,0.012620", \
				        "0.005079,0.005329,0.005810,0.006786,0.008727,0.012617", \
				        "0.005107,0.005347,0.005829,0.006794,0.008736,0.012613", \
				        "0.005160,0.005408,0.005886,0.006851,0.008779,0.012646", \
				        "0.005349,0.005588,0.006066,0.007009,0.008907,0.012749", \
				        "0.005823,0.006052,0.006514,0.007431,0.009289,0.013063", \
				        "0.006901,0.007120,0.007545,0.008424,0.010220,0.013884", \
				        "0.009338,0.009524,0.009900,0.010681,0.012333,0.015813");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !B2 & !C2 | A2 & !B1 & !C1";

			rise_power(Power_X1) {
				values ("0.002997,0.003235,0.003720,0.004692,0.006630,0.010505", \
				        "0.002990,0.003226,0.003726,0.004690,0.006629,0.010502", \
				        "0.003011,0.003259,0.003742,0.004704,0.006638,0.010516", \
				        "0.003091,0.003338,0.003819,0.004772,0.006683,0.010541", \
				        "0.003343,0.003573,0.004029,0.004955,0.006842,0.010657", \
				        "0.003877,0.004094,0.004534,0.005427,0.007256,0.010992", \
				        "0.005062,0.005266,0.005661,0.006489,0.008225,0.011848", \
				        "0.007699,0.007866,0.008186,0.008871,0.010445,0.013848");
			}
			fall_power(Power_X1) {
				values ("0.000756,0.000519,0.000033,-0.000932,-0.002861,-0.006719", \
				        "0.000765,0.000523,0.000043,-0.000924,-0.002852,-0.006706", \
				        "0.000786,0.000547,0.000065,-0.000899,-0.002832,-0.006693", \
				        "0.000857,0.000623,0.000123,-0.000851,-0.002792,-0.006667", \
				        "0.001048,0.000809,0.000294,-0.000715,-0.002692,-0.006598", \
				        "0.001610,0.001332,0.000763,-0.000317,-0.002380,-0.006373", \
				        "0.002877,0.002579,0.001960,0.000772,-0.001481,-0.005699", \
				        "0.005700,0.005320,0.004672,0.003362,0.000874,-0.003755");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.003986,0.004229,0.004708,0.005675,0.007621,0.011495", \
				        "0.003987,0.004226,0.004706,0.005676,0.007616,0.011497", \
				        "0.003993,0.004252,0.004726,0.005691,0.007624,0.011499", \
				        "0.004074,0.004318,0.004791,0.005750,0.007669,0.011538", \
				        "0.004284,0.004521,0.004989,0.005922,0.007815,0.011638", \
				        "0.004792,0.005008,0.005470,0.006369,0.008215,0.011962", \
				        "0.005919,0.006139,0.006546,0.007398,0.009168,0.012788", \
				        "0.008486,0.008653,0.008985,0.009723,0.011322,0.014775");
			}
			fall_power(Power_X1) {
				values ("0.000755,0.000513,0.000026,-0.000932,-0.002859,-0.006723", \
				        "0.000763,0.000524,0.000043,-0.000922,-0.002855,-0.006714", \
				        "0.000786,0.000539,0.000088,-0.000896,-0.002833,-0.006687", \
				        "0.000857,0.000613,0.000133,-0.000848,-0.002791,-0.006667", \
				        "0.001057,0.000798,0.000293,-0.000716,-0.002693,-0.006596", \
				        "0.001581,0.001292,0.000743,-0.000326,-0.002383,-0.006376", \
				        "0.002820,0.002513,0.001906,0.000728,-0.001502,-0.005697", \
				        "0.005588,0.005241,0.004580,0.003286,0.000823,-0.003779");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2 & !C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004272,0.004524,0.005003,0.005981,0.007915,0.011796", \
				        "0.004270,0.004517,0.005004,0.005977,0.007920,0.011804", \
				        "0.004299,0.004538,0.005020,0.005988,0.007927,0.011803", \
				        "0.004362,0.004611,0.005087,0.006046,0.007969,0.011833", \
				        "0.004593,0.004815,0.005285,0.006223,0.008116,0.011946", \
				        "0.005128,0.005333,0.005783,0.006689,0.008534,0.012285", \
				        "0.006319,0.006541,0.006940,0.007790,0.009545,0.013176", \
				        "0.009103,0.009268,0.009605,0.010326,0.011897,0.015307");
			}
			fall_power(Power_X1) {
				values ("0.000758,0.000516,0.000032,-0.000929,-0.002863,-0.006724", \
				        "0.000759,0.000522,0.000042,-0.000923,-0.002854,-0.006715", \
				        "0.000773,0.000539,0.000065,-0.000898,-0.002838,-0.006694", \
				        "0.000853,0.000607,0.000126,-0.000852,-0.002797,-0.006670", \
				        "0.001051,0.000795,0.000280,-0.000722,-0.002698,-0.006603", \
				        "0.001596,0.001310,0.000763,-0.000311,-0.002376,-0.006372", \
				        "0.002914,0.002622,0.002002,0.000818,-0.001431,-0.005657", \
				        "0.005913,0.005561,0.004888,0.003568,0.001057,-0.003594");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005082,0.005326,0.005811,0.006792,0.008721,0.012620", \
				        "0.005079,0.005329,0.005810,0.006786,0.008727,0.012617", \
				        "0.005107,0.005347,0.005829,0.006794,0.008736,0.012613", \
				        "0.005160,0.005408,0.005886,0.006851,0.008779,0.012646", \
				        "0.005349,0.005588,0.006066,0.007009,0.008907,0.012749", \
				        "0.005823,0.006052,0.006514,0.007431,0.009289,0.013063", \
				        "0.006901,0.007120,0.007545,0.008424,0.010220,0.013884", \
				        "0.009338,0.009524,0.009900,0.010681,0.012333,0.015813");
			}
			fall_power(Power_X1) {
				values ("0.000761,0.000518,0.000037,-0.000930,-0.002858,-0.006728", \
				        "0.000759,0.000524,0.000043,-0.000919,-0.002851,-0.006717", \
				        "0.000782,0.000537,0.000069,-0.000895,-0.002832,-0.006700", \
				        "0.000855,0.000616,0.000131,-0.000850,-0.002790,-0.006675", \
				        "0.001053,0.000790,0.000289,-0.000716,-0.002695,-0.006598", \
				        "0.001550,0.001270,0.000729,-0.000332,-0.002388,-0.006378", \
				        "0.002752,0.002450,0.001850,0.000695,-0.001514,-0.005716", \
				        "0.005470,0.005141,0.004485,0.003212,0.000772,-0.003805");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.000759,0.000516,0.000036,-0.000937,-0.002865,-0.006732", \
				        "0.000748,0.000505,0.000023,-0.000940,-0.002868,-0.006734", \
				        "0.000732,0.000496,0.000013,-0.000950,-0.002878,-0.006744", \
				        "0.000735,0.000499,0.000022,-0.000938,-0.002873,-0.006735", \
				        "0.000842,0.000594,0.000100,-0.000872,-0.002818,-0.006685", \
				        "0.001237,0.000968,0.000431,-0.000614,-0.002631,-0.006555", \
				        "0.002274,0.001971,0.001375,0.000230,-0.001952,-0.006094", \
				        "0.004628,0.004303,0.003648,0.002382,-0.000024,-0.004548");
			}
			rise_power(Power_X1) {
				values ("0.005958,0.006185,0.006664,0.007636,0.009579,0.013468", \
				        "0.005946,0.006184,0.006672,0.007637,0.009575,0.013464", \
				        "0.005967,0.006200,0.006688,0.007656,0.009597,0.013473", \
				        "0.006031,0.006282,0.006750,0.007709,0.009640,0.013516", \
				        "0.006244,0.006460,0.006939,0.007881,0.009788,0.013623", \
				        "0.006713,0.006944,0.007395,0.008314,0.010175,0.013940", \
				        "0.007797,0.008031,0.008450,0.009336,0.011136,0.014789", \
				        "0.010149,0.010380,0.010792,0.011616,0.013308,0.016808");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004971,0.005212,0.005681,0.006653,0.008593,0.012479", \
				        "0.004966,0.005200,0.005685,0.006656,0.008596,0.012485", \
				        "0.004970,0.005223,0.005702,0.006673,0.008607,0.012489", \
				        "0.005032,0.005296,0.005778,0.006734,0.008648,0.012526", \
				        "0.005267,0.005501,0.005973,0.006911,0.008809,0.012643", \
				        "0.005774,0.006000,0.006452,0.007363,0.009213,0.012982", \
				        "0.006901,0.007116,0.007539,0.008409,0.010187,0.013836", \
				        "0.009327,0.009523,0.009917,0.010729,0.012401,0.015869");
			}
			fall_power(Power_X1) {
				values ("0.000751,0.000512,0.000036,-0.000937,-0.002869,-0.006732", \
				        "0.000734,0.000503,0.000023,-0.000940,-0.002870,-0.006735", \
				        "0.000732,0.000487,0.000013,-0.000950,-0.002880,-0.006744", \
				        "0.000729,0.000494,0.000022,-0.000938,-0.002873,-0.006735", \
				        "0.000835,0.000590,0.000099,-0.000876,-0.002818,-0.006685", \
				        "0.001212,0.000943,0.000414,-0.000625,-0.002637,-0.006555", \
				        "0.002198,0.001909,0.001329,0.000198,-0.001975,-0.006109", \
				        "0.004516,0.004209,0.003571,0.002326,-0.000072,-0.004566");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B2 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !C1";

			rise_power(Power_X1) {
				values ("0.003866,0.004106,0.004581,0.005543,0.007486,0.011361", \
				        "0.003856,0.004106,0.004579,0.005549,0.007484,0.011366", \
				        "0.003873,0.004125,0.004605,0.005572,0.007500,0.011380", \
				        "0.003968,0.004210,0.004680,0.005640,0.007553,0.011413", \
				        "0.004208,0.004438,0.004896,0.005830,0.007717,0.011534", \
				        "0.004754,0.004967,0.005410,0.006312,0.008146,0.011887", \
				        "0.005913,0.006116,0.006538,0.007390,0.009144,0.012752", \
				        "0.008415,0.008586,0.008977,0.009757,0.011399,0.014838");
			}
			fall_power(Power_X1) {
				values ("0.000752,0.000511,0.000028,-0.000937,-0.002865,-0.006733", \
				        "0.000742,0.000505,0.000022,-0.000945,-0.002868,-0.006742", \
				        "0.000726,0.000496,0.000010,-0.000956,-0.002883,-0.006750", \
				        "0.000735,0.000491,0.000016,-0.000945,-0.002874,-0.006738", \
				        "0.000842,0.000594,0.000100,-0.000877,-0.002821,-0.006689", \
				        "0.001237,0.000968,0.000431,-0.000614,-0.002631,-0.006566", \
				        "0.002274,0.001971,0.001375,0.000230,-0.001952,-0.006094", \
				        "0.004628,0.004303,0.003648,0.002382,-0.000024,-0.004548");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005958,0.006185,0.006664,0.007636,0.009579,0.013468", \
				        "0.005946,0.006184,0.006672,0.007637,0.009575,0.013464", \
				        "0.005967,0.006200,0.006688,0.007656,0.009597,0.013473", \
				        "0.006031,0.006282,0.006750,0.007709,0.009640,0.013516", \
				        "0.006244,0.006460,0.006939,0.007881,0.009788,0.013623", \
				        "0.006713,0.006944,0.007395,0.008314,0.010175,0.013940", \
				        "0.007797,0.008031,0.008450,0.009336,0.011136,0.014789", \
				        "0.010149,0.010380,0.010792,0.011616,0.013308,0.016808");
			}
			fall_power(Power_X1) {
				values ("0.000759,0.000516,0.000030,-0.000937,-0.002867,-0.006735", \
				        "0.000748,0.000502,0.000022,-0.000940,-0.002871,-0.006734", \
				        "0.000727,0.000490,0.000012,-0.000952,-0.002878,-0.006744", \
				        "0.000733,0.000499,0.000022,-0.000940,-0.002873,-0.006738", \
				        "0.000831,0.000588,0.000098,-0.000872,-0.002819,-0.006691", \
				        "0.001194,0.000925,0.000406,-0.000628,-0.002637,-0.006570", \
				        "0.002169,0.001869,0.001290,0.000161,-0.001989,-0.006107", \
				        "0.004462,0.004145,0.003502,0.002268,-0.000114,-0.004593");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X1) {
				values ("0.003071,0.002833,0.002353,0.001394,-0.000526,-0.004377", \
				        "0.003069,0.002828,0.002350,0.001392,-0.000530,-0.004379", \
				        "0.003080,0.002835,0.002351,0.001398,-0.000525,-0.004370", \
				        "0.003093,0.002858,0.002372,0.001414,-0.000514,-0.004362", \
				        "0.003203,0.002954,0.002471,0.001491,-0.000453,-0.004323", \
				        "0.003566,0.003310,0.002803,0.001791,-0.000209,-0.004147", \
				        "0.004615,0.004338,0.003789,0.002712,0.000603,-0.003485", \
				        "0.007110,0.006814,0.006214,0.005047,0.002774,-0.001600");
			}
			rise_power(Power_X1) {
				values ("0.005711,0.005962,0.006457,0.007431,0.009368,0.013251", \
				        "0.005703,0.005956,0.006449,0.007428,0.009370,0.013257", \
				        "0.005677,0.005941,0.006423,0.007398,0.009320,0.013232", \
				        "0.005662,0.005905,0.006388,0.007364,0.009312,0.013200", \
				        "0.005639,0.005885,0.006366,0.007341,0.009295,0.013185", \
				        "0.005682,0.005923,0.006405,0.007377,0.009307,0.013181", \
				        "0.006131,0.006369,0.006828,0.007754,0.009646,0.013445", \
				        "0.007873,0.008069,0.008456,0.009280,0.011003,0.014599");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.004901,0.005151,0.005650,0.006630,0.008563,0.012448", \
				        "0.004901,0.005145,0.005642,0.006620,0.008557,0.012443", \
				        "0.004875,0.005122,0.005606,0.006575,0.008537,0.012416", \
				        "0.004841,0.005088,0.005568,0.006551,0.008502,0.012394", \
				        "0.004811,0.005067,0.005551,0.006531,0.008476,0.012373", \
				        "0.004897,0.005139,0.005623,0.006585,0.008516,0.012396", \
				        "0.005503,0.005726,0.006171,0.007071,0.008933,0.012714", \
				        "0.007582,0.007752,0.008106,0.008877,0.010515,0.014039");
			}
			fall_power(Power_X1) {
				values ("0.003060,0.002833,0.002347,0.001390,-0.000526,-0.004387", \
				        "0.003066,0.002819,0.002343,0.001386,-0.000538,-0.004383", \
				        "0.003073,0.002817,0.002339,0.001383,-0.000538,-0.004382", \
				        "0.003083,0.002837,0.002357,0.001397,-0.000530,-0.004383", \
				        "0.003187,0.002947,0.002460,0.001480,-0.000467,-0.004338", \
				        "0.003566,0.003310,0.002803,0.001791,-0.000209,-0.004153", \
				        "0.004615,0.004338,0.003789,0.002712,0.000603,-0.003485", \
				        "0.007110,0.006814,0.006214,0.005047,0.002774,-0.001600");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A2 & B2 & C1 & !C2 | !A1 & B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005711,0.005962,0.006457,0.007431,0.009368,0.013251", \
				        "0.005703,0.005956,0.006449,0.007428,0.009370,0.013257", \
				        "0.005677,0.005941,0.006423,0.007398,0.009320,0.013232", \
				        "0.005662,0.005905,0.006388,0.007364,0.009312,0.013200", \
				        "0.005639,0.005885,0.006366,0.007341,0.009295,0.013185", \
				        "0.005682,0.005923,0.006405,0.007377,0.009307,0.013181", \
				        "0.006131,0.006369,0.006828,0.007754,0.009646,0.013445", \
				        "0.007873,0.008069,0.008456,0.009280,0.011003,0.014599");
			}
			fall_power(Power_X1) {
				values ("0.003071,0.002830,0.002353,0.001394,-0.000530,-0.004377", \
				        "0.003056,0.002828,0.002350,0.001392,-0.000531,-0.004379", \
				        "0.003074,0.002828,0.002351,0.001398,-0.000525,-0.004376", \
				        "0.003091,0.002851,0.002372,0.001414,-0.000515,-0.004362", \
				        "0.003195,0.002954,0.002471,0.001491,-0.000453,-0.004323", \
				        "0.003537,0.003296,0.002772,0.001776,-0.000219,-0.004147", \
				        "0.004499,0.004232,0.003674,0.002621,0.000534,-0.003541", \
				        "0.006794,0.006495,0.005891,0.004760,0.002521,-0.001812");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2 & !C1 & C2 | !A1 & A2 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004729,0.004975,0.005476,0.006444,0.008385,0.012259", \
				        "0.004716,0.004964,0.005458,0.006437,0.008381,0.012268", \
				        "0.004690,0.004943,0.005429,0.006409,0.008355,0.012241", \
				        "0.004666,0.004914,0.005396,0.006375,0.008324,0.012216", \
				        "0.004639,0.004888,0.005374,0.006350,0.008299,0.012188", \
				        "0.004685,0.004938,0.005420,0.006386,0.008320,0.012203", \
				        "0.005207,0.005415,0.005882,0.006797,0.008672,0.012456", \
				        "0.007041,0.007227,0.007592,0.008388,0.010080,0.013648");
			}
			fall_power(Power_X1) {
				values ("0.003070,0.002828,0.002351,0.001393,-0.000529,-0.004380", \
				        "0.003069,0.002828,0.002350,0.001392,-0.000530,-0.004379", \
				        "0.003080,0.002835,0.002348,0.001397,-0.000525,-0.004370", \
				        "0.003093,0.002858,0.002372,0.001414,-0.000514,-0.004366", \
				        "0.003203,0.002949,0.002469,0.001491,-0.000453,-0.004327", \
				        "0.003548,0.003297,0.002789,0.001779,-0.000217,-0.004147", \
				        "0.004523,0.004233,0.003696,0.002623,0.000532,-0.003541", \
				        "0.006799,0.006510,0.005914,0.004764,0.002522,-0.001817");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X1) {
				values ("0.003075,0.002835,0.002366,0.001401,-0.000530,-0.004390", \
				        "0.003065,0.002825,0.002350,0.001393,-0.000536,-0.004393", \
				        "0.003061,0.002822,0.002338,0.001377,-0.000551,-0.004411", \
				        "0.003056,0.002810,0.002333,0.001370,-0.000562,-0.004423", \
				        "0.003081,0.002826,0.002349,0.001391,-0.000536,-0.004397", \
				        "0.003239,0.002995,0.002498,0.001518,-0.000435,-0.004319", \
				        "0.003938,0.003662,0.003143,0.002100,0.000060,-0.003933", \
				        "0.005863,0.005568,0.005001,0.003866,0.001669,-0.002572");
			}
			rise_power(Power_X1) {
				values ("0.006785,0.007036,0.007527,0.008507,0.010447,0.014324", \
				        "0.006778,0.007026,0.007523,0.008497,0.010440,0.014335", \
				        "0.006764,0.007013,0.007501,0.008477,0.010419,0.014309", \
				        "0.006743,0.007001,0.007477,0.008450,0.010399,0.014277", \
				        "0.006729,0.006975,0.007469,0.008440,0.010394,0.014287", \
				        "0.006773,0.007011,0.007498,0.008468,0.010405,0.014292", \
				        "0.007218,0.007447,0.007906,0.008849,0.010727,0.014557", \
				        "0.008879,0.009083,0.009497,0.010364,0.012126,0.015740");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004914,0.005154,0.005646,0.006619,0.008563,0.012437", \
				        "0.004906,0.005145,0.005642,0.006612,0.008552,0.012424", \
				        "0.004884,0.005125,0.005623,0.006596,0.008539,0.012414", \
				        "0.004868,0.005108,0.005595,0.006570,0.008507,0.012395", \
				        "0.004856,0.005096,0.005576,0.006551,0.008500,0.012387", \
				        "0.004889,0.005141,0.005621,0.006586,0.008520,0.012401", \
				        "0.005425,0.005643,0.006093,0.007014,0.008877,0.012676", \
				        "0.007206,0.007398,0.007811,0.008635,0.010343,0.013919");
			}
			fall_power(Power_X1) {
				values ("0.003072,0.002831,0.002354,0.001401,-0.000530,-0.004390", \
				        "0.003050,0.002825,0.002347,0.001393,-0.000536,-0.004393", \
				        "0.003061,0.002822,0.002338,0.001376,-0.000552,-0.004411", \
				        "0.003053,0.002810,0.002333,0.001367,-0.000562,-0.004423", \
				        "0.003081,0.002823,0.002349,0.001388,-0.000536,-0.004397", \
				        "0.003239,0.002995,0.002498,0.001517,-0.000435,-0.004319", \
				        "0.003882,0.003622,0.003105,0.002073,0.000040,-0.003945", \
				        "0.005653,0.005379,0.004805,0.003692,0.001513,-0.002697");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";

			rise_power(Power_X1) {
				values ("0.005975,0.006222,0.006720,0.007691,0.009633,0.013513", \
				        "0.005972,0.006219,0.006712,0.007685,0.009632,0.013518", \
				        "0.005972,0.006201,0.006689,0.007658,0.009604,0.013491", \
				        "0.005917,0.006185,0.006668,0.007638,0.009588,0.013483", \
				        "0.005911,0.006159,0.006657,0.007627,0.009575,0.013472", \
				        "0.005978,0.006227,0.006712,0.007679,0.009615,0.013495", \
				        "0.006552,0.006789,0.007228,0.008160,0.010029,0.013814", \
				        "0.008462,0.008666,0.009075,0.009908,0.011623,0.015188");
			}
			fall_power(Power_X1) {
				values ("0.003063,0.002831,0.002366,0.001391,-0.000534,-0.004400", \
				        "0.003056,0.002824,0.002347,0.001384,-0.000546,-0.004407", \
				        "0.003046,0.002812,0.002328,0.001365,-0.000566,-0.004425", \
				        "0.003029,0.002797,0.002315,0.001354,-0.000577,-0.004441", \
				        "0.003053,0.002807,0.002329,0.001368,-0.000559,-0.004414", \
				        "0.003221,0.002989,0.002490,0.001506,-0.000448,-0.004334", \
				        "0.003938,0.003662,0.003143,0.002100,0.000060,-0.003933", \
				        "0.005863,0.005568,0.005001,0.003866,0.001669,-0.002572");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.006785,0.007036,0.007527,0.008507,0.010447,0.014324", \
				        "0.006778,0.007026,0.007523,0.008497,0.010440,0.014335", \
				        "0.006764,0.007013,0.007501,0.008477,0.010419,0.014309", \
				        "0.006743,0.007001,0.007477,0.008450,0.010399,0.014277", \
				        "0.006729,0.006975,0.007469,0.008440,0.010394,0.014287", \
				        "0.006773,0.007011,0.007498,0.008468,0.010405,0.014292", \
				        "0.007218,0.007447,0.007906,0.008849,0.010727,0.014557", \
				        "0.008879,0.009083,0.009497,0.010364,0.012126,0.015740");
			}
			fall_power(Power_X1) {
				values ("0.003075,0.002835,0.002358,0.001395,-0.000536,-0.004397", \
				        "0.003065,0.002824,0.002350,0.001393,-0.000537,-0.004398", \
				        "0.003058,0.002818,0.002337,0.001377,-0.000551,-0.004414", \
				        "0.003056,0.002810,0.002328,0.001370,-0.000565,-0.004426", \
				        "0.003059,0.002826,0.002346,0.001391,-0.000542,-0.004397", \
				        "0.003232,0.002988,0.002497,0.001518,-0.000442,-0.004320", \
				        "0.003877,0.003617,0.003102,0.002069,0.000034,-0.003944", \
				        "0.005645,0.005370,0.004789,0.003678,0.001506,-0.002691");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X1) {
				values ("0.005083,0.004841,0.004371,0.003431,0.001525,-0.002296", \
				        "0.005065,0.004833,0.004359,0.003411,0.001514,-0.002305", \
				        "0.005068,0.004823,0.004346,0.003399,0.001505,-0.002316", \
				        "0.005068,0.004830,0.004349,0.003404,0.001500,-0.002319", \
				        "0.005134,0.004902,0.004427,0.003467,0.001541,-0.002297", \
				        "0.005443,0.005202,0.004702,0.003716,0.001764,-0.002129", \
				        "0.006381,0.006109,0.005588,0.004546,0.002491,-0.001529", \
				        "0.008788,0.008504,0.007925,0.006798,0.004579,0.000298");
			}
			rise_power(Power_X1) {
				values ("0.006419,0.006667,0.007145,0.008125,0.010067,0.013953", \
				        "0.006407,0.006646,0.007134,0.008112,0.010057,0.013945", \
				        "0.006393,0.006640,0.007128,0.008119,0.010056,0.013950", \
				        "0.006377,0.006631,0.007122,0.008100,0.010047,0.013939", \
				        "0.006366,0.006619,0.007102,0.008077,0.010021,0.013915", \
				        "0.006356,0.006605,0.007090,0.008067,0.010008,0.013903", \
				        "0.006503,0.006755,0.007231,0.008190,0.010110,0.013983", \
				        "0.007846,0.008044,0.008451,0.009292,0.011056,0.014740");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";

			rise_power(Power_X1) {
				values ("0.004615,0.004871,0.005346,0.006322,0.008259,0.012134", \
				        "0.004606,0.004841,0.005329,0.006315,0.008253,0.012133", \
				        "0.004593,0.004841,0.005328,0.006305,0.008250,0.012145", \
				        "0.004578,0.004827,0.005321,0.006298,0.008243,0.012131", \
				        "0.004570,0.004811,0.005297,0.006276,0.008217,0.012105", \
				        "0.004564,0.004806,0.005289,0.006259,0.008199,0.012087", \
				        "0.004805,0.005030,0.005487,0.006428,0.008332,0.012173", \
				        "0.006485,0.006661,0.007017,0.007792,0.009471,0.013067");
			}
			fall_power(Power_X1) {
				values ("0.005083,0.004841,0.004371,0.003431,0.001525,-0.002296", \
				        "0.005065,0.004833,0.004359,0.003411,0.001514,-0.002305", \
				        "0.005068,0.004823,0.004346,0.003399,0.001505,-0.002316", \
				        "0.005068,0.004830,0.004349,0.003404,0.001500,-0.002319", \
				        "0.005134,0.004902,0.004427,0.003467,0.001541,-0.002297", \
				        "0.005443,0.005202,0.004702,0.003716,0.001764,-0.002129", \
				        "0.006381,0.006109,0.005588,0.004546,0.002491,-0.001529", \
				        "0.008788,0.008504,0.007925,0.006798,0.004579,0.000298");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A2 & !B1 & !B2 & C2";

			rise_power(Power_X1) {
				values ("0.005486,0.005733,0.006211,0.007186,0.009129,0.013006", \
				        "0.005469,0.005708,0.006201,0.007176,0.009120,0.013000", \
				        "0.005456,0.005704,0.006197,0.007176,0.009123,0.013008", \
				        "0.005444,0.005687,0.006185,0.007164,0.009102,0.012993", \
				        "0.005435,0.005676,0.006164,0.007135,0.009083,0.012963", \
				        "0.005411,0.005664,0.006149,0.007125,0.009073,0.012959", \
				        "0.005639,0.005875,0.006344,0.007294,0.009203,0.013047", \
				        "0.007250,0.007410,0.007795,0.008600,0.010309,0.013911");
			}
			fall_power(Power_X1) {
				values ("0.004999,0.004760,0.004293,0.003352,0.001452,-0.002361", \
				        "0.004983,0.004748,0.004280,0.003337,0.001440,-0.002381", \
				        "0.004985,0.004747,0.004265,0.003325,0.001432,-0.002386", \
				        "0.004993,0.004749,0.004271,0.003325,0.001426,-0.002395", \
				        "0.005059,0.004820,0.004341,0.003382,0.001465,-0.002371", \
				        "0.005367,0.005118,0.004620,0.003635,0.001675,-0.002212", \
				        "0.006317,0.006032,0.005515,0.004465,0.002410,-0.001621", \
				        "0.008737,0.008453,0.007867,0.006726,0.004512,0.000208");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A2 & B1 & !B2 & C2 | !A1 & B1 & !B2 & C2";

			rise_power(Power_X1) {
				values ("0.006419,0.006667,0.007145,0.008125,0.010067,0.013953", \
				        "0.006407,0.006646,0.007134,0.008112,0.010057,0.013945", \
				        "0.006393,0.006640,0.007128,0.008119,0.010056,0.013950", \
				        "0.006377,0.006631,0.007122,0.008100,0.010047,0.013939", \
				        "0.006366,0.006619,0.007102,0.008077,0.010021,0.013915", \
				        "0.006356,0.006605,0.007090,0.008067,0.010008,0.013903", \
				        "0.006503,0.006755,0.007231,0.008190,0.010110,0.013983", \
				        "0.007846,0.008044,0.008451,0.009292,0.011056,0.014740");
			}
			fall_power(Power_X1) {
				values ("0.004921,0.004694,0.004229,0.003287,0.001395,-0.002427", \
				        "0.004914,0.004684,0.004216,0.003273,0.001378,-0.002438", \
				        "0.004907,0.004675,0.004198,0.003259,0.001368,-0.002445", \
				        "0.004905,0.004675,0.004199,0.003257,0.001363,-0.002456", \
				        "0.004984,0.004740,0.004265,0.003309,0.001398,-0.002440", \
				        "0.005264,0.005019,0.004524,0.003541,0.001585,-0.002292", \
				        "0.006179,0.005904,0.005379,0.004332,0.002282,-0.001732", \
				        "0.008508,0.008237,0.007654,0.006514,0.004305,0.000014");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & !A2 & !B1 & B2 & C2 | !A1 & A2 & !B1 & B2 & C2";

			rise_power(Power_X1) {
				values ("0.005314,0.005560,0.006045,0.007017,0.008957,0.012842", \
				        "0.005306,0.005543,0.006031,0.007006,0.008950,0.012839", \
				        "0.005297,0.005540,0.006024,0.007004,0.008942,0.012829", \
				        "0.005272,0.005527,0.006017,0.006997,0.008939,0.012828", \
				        "0.005269,0.005514,0.005998,0.006969,0.008914,0.012802", \
				        "0.005252,0.005500,0.005983,0.006959,0.008900,0.012789", \
				        "0.005436,0.005670,0.006141,0.007090,0.009003,0.012870", \
				        "0.006898,0.007072,0.007471,0.008282,0.010003,0.013652");
			}
			fall_power(Power_X1) {
				values ("0.004939,0.004693,0.004225,0.003286,0.001392,-0.002427", \
				        "0.004921,0.004683,0.004218,0.003277,0.001379,-0.002431", \
				        "0.004916,0.004673,0.004207,0.003260,0.001366,-0.002443", \
				        "0.004907,0.004681,0.004203,0.003258,0.001360,-0.002455", \
				        "0.004986,0.004741,0.004264,0.003308,0.001397,-0.002445", \
				        "0.005272,0.005024,0.004524,0.003541,0.001586,-0.002292", \
				        "0.006191,0.005910,0.005382,0.004334,0.002287,-0.001734", \
				        "0.008530,0.008235,0.007659,0.006516,0.004304,0.000013");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X1) {
				values ("0.005063,0.004848,0.004375,0.003420,0.001514,-0.002317", \
				        "0.005061,0.004831,0.004358,0.003402,0.001495,-0.002337", \
				        "0.005050,0.004821,0.004344,0.003386,0.001472,-0.002363", \
				        "0.005050,0.004815,0.004337,0.003383,0.001470,-0.002369", \
				        "0.005076,0.004837,0.004357,0.003403,0.001486,-0.002351", \
				        "0.005237,0.004992,0.004507,0.003536,0.001601,-0.002262", \
				        "0.005886,0.005613,0.005098,0.004086,0.002080,-0.001878", \
				        "0.007697,0.007440,0.006878,0.005783,0.003624,-0.000554");
			}
			rise_power(Power_X1) {
				values ("0.007369,0.007608,0.008092,0.009066,0.011009,0.014898", \
				        "0.007364,0.007597,0.008085,0.009059,0.011002,0.014883", \
				        "0.007355,0.007607,0.008087,0.009062,0.011004,0.014894", \
				        "0.007350,0.007597,0.008090,0.009061,0.011007,0.014895", \
				        "0.007345,0.007594,0.008077,0.009049,0.010994,0.014879", \
				        "0.007336,0.007578,0.008071,0.009046,0.010991,0.014876", \
				        "0.007465,0.007715,0.008193,0.009163,0.011090,0.014953", \
				        "0.008678,0.008902,0.009334,0.010223,0.012024,0.015741");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";

			rise_power(Power_X1) {
				values ("0.005578,0.005827,0.006300,0.007271,0.009206,0.013084", \
				        "0.005569,0.005815,0.006294,0.007268,0.009202,0.013081", \
				        "0.005570,0.005809,0.006290,0.007267,0.009206,0.013082", \
				        "0.005565,0.005813,0.006297,0.007274,0.009207,0.013090", \
				        "0.005567,0.005800,0.006285,0.007260,0.009194,0.013077", \
				        "0.005545,0.005786,0.006280,0.007249,0.009189,0.013062", \
				        "0.005746,0.005963,0.006440,0.007400,0.009306,0.013144", \
				        "0.007179,0.007400,0.007809,0.008658,0.010405,0.014047");
			}
			fall_power(Power_X1) {
				values ("0.005063,0.004848,0.004375,0.003420,0.001514,-0.002317", \
				        "0.005061,0.004831,0.004358,0.003402,0.001495,-0.002337", \
				        "0.005050,0.004821,0.004344,0.003386,0.001472,-0.002363", \
				        "0.005050,0.004815,0.004337,0.003383,0.001470,-0.002369", \
				        "0.005076,0.004837,0.004357,0.003403,0.001486,-0.002351", \
				        "0.005237,0.004992,0.004507,0.003536,0.001601,-0.002262", \
				        "0.005886,0.005613,0.005098,0.004086,0.002080,-0.001878", \
				        "0.007697,0.007440,0.006878,0.005783,0.003624,-0.000554");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A2 & !B1 & !B2 & C1";

			rise_power(Power_X1) {
				values ("0.006443,0.006691,0.007170,0.008145,0.010083,0.013965", \
				        "0.006431,0.006667,0.007162,0.008136,0.010075,0.013953", \
				        "0.006424,0.006676,0.007165,0.008132,0.010078,0.013962", \
				        "0.006424,0.006676,0.007156,0.008130,0.010067,0.013947", \
				        "0.006410,0.006661,0.007144,0.008114,0.010061,0.013942", \
				        "0.006401,0.006653,0.007143,0.008112,0.010058,0.013930", \
				        "0.006603,0.006829,0.007303,0.008259,0.010173,0.014029", \
				        "0.007981,0.008185,0.008610,0.009474,0.011251,0.014908");
			}
			fall_power(Power_X1) {
				values ("0.004987,0.004760,0.004290,0.003340,0.001432,-0.002397", \
				        "0.004965,0.004745,0.004278,0.003317,0.001419,-0.002412", \
				        "0.004968,0.004735,0.004261,0.003302,0.001398,-0.002439", \
				        "0.004958,0.004724,0.004256,0.003299,0.001388,-0.002445", \
				        "0.004992,0.004749,0.004269,0.003322,0.001411,-0.002429", \
				        "0.005150,0.004907,0.004421,0.003450,0.001514,-0.002347", \
				        "0.005797,0.005533,0.005020,0.004003,0.001990,-0.001969", \
				        "0.007657,0.007381,0.006822,0.005712,0.003537,-0.000642");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A2 & B1 & !B2 & C1 | !A1 & B1 & !B2 & C1";

			rise_power(Power_X1) {
				values ("0.007369,0.007608,0.008092,0.009066,0.011009,0.014898", \
				        "0.007364,0.007597,0.008085,0.009059,0.011002,0.014883", \
				        "0.007355,0.007607,0.008087,0.009062,0.011004,0.014894", \
				        "0.007350,0.007597,0.008090,0.009061,0.011007,0.014895", \
				        "0.007345,0.007594,0.008077,0.009049,0.010994,0.014879", \
				        "0.007336,0.007578,0.008071,0.009046,0.010991,0.014876", \
				        "0.007465,0.007715,0.008193,0.009163,0.011090,0.014953", \
				        "0.008678,0.008902,0.009334,0.010223,0.012024,0.015741");
			}
			fall_power(Power_X1) {
				values ("0.004915,0.004698,0.004226,0.003275,0.001376,-0.002452", \
				        "0.004910,0.004680,0.004208,0.003261,0.001356,-0.002470", \
				        "0.004897,0.004669,0.004194,0.003236,0.001330,-0.002494", \
				        "0.004888,0.004660,0.004183,0.003232,0.001324,-0.002507", \
				        "0.004922,0.004677,0.004198,0.003254,0.001344,-0.002490", \
				        "0.005071,0.004829,0.004345,0.003373,0.001437,-0.002415", \
				        "0.005680,0.005425,0.004910,0.003895,0.001891,-0.002055", \
				        "0.007482,0.007210,0.006645,0.005539,0.003387,-0.000792");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & !A2 & !B1 & B2 & C1 | !A1 & A2 & !B1 & B2 & C1";

			rise_power(Power_X1) {
				values ("0.006258,0.006514,0.006992,0.007967,0.009910,0.013790", \
				        "0.006258,0.006506,0.006983,0.007958,0.009898,0.013781", \
				        "0.006262,0.006504,0.006979,0.007960,0.009892,0.013784", \
				        "0.006257,0.006501,0.006995,0.007960,0.009905,0.013785", \
				        "0.006246,0.006490,0.006970,0.007948,0.009889,0.013765", \
				        "0.006246,0.006479,0.006967,0.007942,0.009882,0.013772", \
				        "0.006385,0.006623,0.007098,0.008064,0.009983,0.013847", \
				        "0.007685,0.007892,0.008299,0.009179,0.010966,0.014647");
			}
			fall_power(Power_X1) {
				values ("0.004921,0.004694,0.004226,0.003277,0.001373,-0.002450", \
				        "0.004905,0.004681,0.004208,0.003260,0.001357,-0.002469", \
				        "0.004904,0.004672,0.004193,0.003237,0.001331,-0.002502", \
				        "0.004886,0.004660,0.004187,0.003231,0.001323,-0.002505", \
				        "0.004916,0.004677,0.004200,0.003250,0.001344,-0.002494", \
				        "0.005069,0.004829,0.004344,0.003367,0.001436,-0.002418", \
				        "0.005691,0.005430,0.004915,0.003900,0.001889,-0.002060", \
				        "0.007494,0.007215,0.006655,0.005539,0.003387,-0.000789");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI222_X2
 Cell Description	: Combinational cell (AOI222_X2) with drive strength X2
*******************************************************************************************/

cell (AOI222_X2) {

	area               	: 2.394000;

	cell_leakage_power 	: 29717.369594;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 6549.226000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 6904.996000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 6904.986000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 7260.880000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 19690.170000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 20976.110000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 20045.920000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 29936.560000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 19690.200000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 20045.950000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 24859.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 33864.090000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 32830.320000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 29938.900000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 33867.060000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 36728.620000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 19690.160000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 20045.910000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 20045.900000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 20401.840000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 32830.250000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 29984.320000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 33185.960000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 38944.790000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 32830.300000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 33186.010000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 33867.020000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 42871.210000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 45969.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 38947.130000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 42874.190000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 45737.030000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 6904.968000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 7260.862000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 7260.851000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 7616.885000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 20045.890000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 29982.010000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 20401.820000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 38940.920000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 20045.920000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 20401.860000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 33864.060000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 42866.700000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 33185.990000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 38944.810000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 42871.220000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 45735.350000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 20593.410000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 29574.860000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 29643.900000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 38644.480000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 29577.120000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 36548.370000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 38648.310000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 45657.860000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 29646.190000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 38648.330000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 36609.830000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 45676.060000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 38650.600000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 45659.560000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 45677.750000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 54619.660000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001194;
		fall_capacitance	: 0.001078;
		rise_capacitance	: 0.001311;
		fall_capacitance_range		(0.000922, 0.001338);
		rise_capacitance_range		(0.001089, 0.001690);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000016,0.000011,0.000007,0.000004,0.000002,-0.000000,-0.000003,-0.000008");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001188;
		fall_capacitance	: 0.001055;
		rise_capacitance	: 0.001322;
		fall_capacitance_range		(0.000928, 0.001255);
		rise_capacitance_range		(0.001090, 0.001644);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000003,0.000002,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001202;
		fall_capacitance	: 0.001137;
		rise_capacitance	: 0.001267;
		fall_capacitance_range		(0.000957, 0.001351);
		rise_capacitance_range		(0.001083, 0.001548);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000011,0.000007,0.000004,0.000003,0.000002,0.000000,-0.000002,-0.000006");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001193;
		fall_capacitance	: 0.001106;
		rise_capacitance	: 0.001280;
		fall_capacitance_range		(0.000915, 0.001277);
		rise_capacitance_range		(0.001068, 0.001510);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000003,0.000002,0.000000,-0.000002,-0.000006");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001214;
		fall_capacitance	: 0.001193;
		rise_capacitance	: 0.001235;
		fall_capacitance_range		(0.001010, 0.001403);
		rise_capacitance_range		(0.001092, 0.001494);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000028,0.000019,0.000013,0.000009,0.000006,0.000003,0.000001,-0.000004");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001231;
		fall_capacitance	: 0.001180;
		rise_capacitance	: 0.001281;
		fall_capacitance_range		(0.000987, 0.001349);
		rise_capacitance_range		(0.001094, 0.001478);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000026,0.000018,0.000012,0.000008,0.000006,0.000003,0.000001,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) | (B1 & B2)) | (C1 & C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022386,0.026544,0.031850,0.042666,0.064110,0.106733", \
				        "0.025530,0.029572,0.034967,0.045727,0.067125,0.109807", \
				        "0.031846,0.036132,0.041393,0.051996,0.073335,0.115864", \
				        "0.039570,0.045328,0.052306,0.064545,0.085918,0.128311", \
				        "0.046514,0.054308,0.063655,0.080206,0.108455,0.154001", \
				        "0.048785,0.059188,0.072055,0.094194,0.132133,0.193781", \
				        "0.038849,0.052914,0.069754,0.099647,0.150336,0.233044", \
				        "0.001445,0.019525,0.042049,0.081848,0.149824,0.260379");
			}
			cell_rise(Timing_X2) {
				values ("0.076791,0.088396,0.103978,0.134925,0.196158,0.317554", \
				        "0.079732,0.091392,0.107016,0.137916,0.199150,0.320569", \
				        "0.086199,0.097781,0.113264,0.144068,0.205177,0.326507", \
				        "0.100213,0.111467,0.126643,0.157017,0.217713,0.338631", \
				        "0.132312,0.142469,0.156090,0.184647,0.244316,0.363927", \
				        "0.181481,0.195014,0.211885,0.243872,0.301755,0.417691", \
				        "0.253582,0.270601,0.291442,0.331778,0.404685,0.532577", \
				        "0.366726,0.387251,0.413834,0.462993,0.553032,0.713496");
			}
			fall_transition(Timing_X2) {
				values ("0.027693,0.031112,0.036021,0.045541,0.064169,0.100959", \
				        "0.027619,0.031093,0.036069,0.045565,0.064156,0.100951", \
				        "0.029938,0.032544,0.036852,0.045531,0.064169,0.100936", \
				        "0.039468,0.041301,0.044244,0.050236,0.065371,0.100958", \
				        "0.057679,0.059569,0.062429,0.068024,0.079174,0.105576", \
				        "0.088029,0.089971,0.092968,0.099222,0.112165,0.136829", \
				        "0.120858,0.123958,0.128563,0.137543,0.155096,0.196688", \
				        "0.198253,0.202493,0.208117,0.219792,0.242056,0.282290");
			}
			rise_transition(Timing_X2) {
				values ("0.076249,0.087635,0.102583,0.130789,0.186077,0.295470", \
				        "0.075972,0.087417,0.102427,0.130744,0.186078,0.295455", \
				        "0.075101,0.086691,0.101854,0.130598,0.186069,0.295469", \
				        "0.071915,0.083884,0.099983,0.129777,0.185987,0.295469", \
				        "0.075285,0.085152,0.098977,0.126590,0.184698,0.295470", \
				        "0.095062,0.104808,0.117115,0.140129,0.188066,0.293433", \
				        "0.127972,0.139410,0.153765,0.180476,0.228925,0.317320", \
				        "0.184164,0.197018,0.214056,0.245048,0.302427,0.404365");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !B2 & !C2 | A2 & !B1 & !C1";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021930,0.025941,0.031316,0.042090,0.063357,0.105755", \
				        "0.025067,0.029035,0.034467,0.045168,0.066410,0.108824", \
				        "0.031297,0.035525,0.040844,0.051448,0.072629,0.114904", \
				        "0.038790,0.044454,0.051391,0.063811,0.085267,0.127317", \
				        "0.045272,0.052943,0.062201,0.078932,0.107336,0.153096", \
				        "0.046585,0.056874,0.069498,0.092084,0.130325,0.192213", \
				        "0.032906,0.047370,0.064487,0.095231,0.146933,0.230317", \
				        "-0.014511,0.004499,0.028021,0.069476,0.139736,0.252958");
			}
			cell_rise(Timing_X2) {
				values ("0.039262,0.049956,0.064995,0.095601,0.156544,0.277458", \
				        "0.042556,0.053173,0.067999,0.098558,0.159477,0.280455", \
				        "0.050217,0.060367,0.074777,0.104867,0.165581,0.286433", \
				        "0.067728,0.076949,0.089956,0.118444,0.178430,0.298627", \
				        "0.094859,0.106591,0.121742,0.149124,0.205664,0.324220", \
				        "0.133591,0.148813,0.167805,0.203001,0.265151,0.378900", \
				        "0.193374,0.212761,0.236145,0.280070,0.358123,0.492458", \
				        "0.291256,0.314837,0.344901,0.398907,0.495315,0.662838");
			}
			fall_transition(Timing_X2) {
				values ("0.015294,0.018914,0.023520,0.032752,0.051156,0.087731", \
				        "0.015233,0.018912,0.023521,0.032730,0.051059,0.087793", \
				        "0.017627,0.020414,0.024357,0.032707,0.051116,0.087770", \
				        "0.024612,0.027537,0.031319,0.037418,0.052308,0.087810", \
				        "0.036443,0.039973,0.044478,0.052223,0.065731,0.092461", \
				        "0.057190,0.061507,0.067058,0.076769,0.093671,0.122209", \
				        "0.093441,0.099370,0.106483,0.119150,0.140630,0.176303", \
				        "0.158023,0.166116,0.175918,0.193060,0.221564,0.267512");
			}
			rise_transition(Timing_X2) {
				values ("0.049007,0.061906,0.078023,0.107686,0.163265,0.271683", \
				        "0.048167,0.061107,0.077509,0.107543,0.163233,0.271712", \
				        "0.046399,0.059138,0.076007,0.106859,0.163185,0.271711", \
				        "0.048631,0.058997,0.073785,0.104140,0.162791,0.271711", \
				        "0.060703,0.069239,0.080442,0.105147,0.159514,0.271643", \
				        "0.080654,0.090466,0.102714,0.125726,0.169952,0.269799", \
				        "0.113575,0.124201,0.138407,0.164832,0.213679,0.300908", \
				        "0.171799,0.183709,0.199378,0.229133,0.285503,0.387675");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022165,0.026257,0.031658,0.042444,0.063770,0.106326", \
				        "0.025296,0.029314,0.034704,0.045496,0.066792,0.109344", \
				        "0.031581,0.035857,0.041130,0.051731,0.073013,0.115447", \
				        "0.039183,0.044944,0.051884,0.064257,0.085613,0.127837", \
				        "0.045918,0.053619,0.063070,0.079661,0.107938,0.153569", \
				        "0.047695,0.058048,0.070857,0.093207,0.131303,0.193036", \
				        "0.035314,0.049599,0.066766,0.097201,0.148627,0.231740", \
				        "-0.008903,0.009618,0.032720,0.073511,0.143099,0.255686");
			}
			cell_rise(Timing_X2) {
				values ("0.054673,0.066062,0.081445,0.112242,0.173275,0.294408", \
				        "0.057767,0.069115,0.084452,0.115168,0.176264,0.297419", \
				        "0.064675,0.075770,0.090919,0.121439,0.182315,0.303386", \
				        "0.080416,0.090590,0.104939,0.134673,0.195008,0.315548", \
				        "0.111486,0.122467,0.136775,0.163503,0.221954,0.341014", \
				        "0.154839,0.169063,0.187125,0.220722,0.280926,0.395274", \
				        "0.219888,0.238002,0.260160,0.302451,0.378154,0.509608", \
				        "0.324535,0.346778,0.374908,0.426648,0.520051,0.684418");
			}
			fall_transition(Timing_X2) {
				values ("0.019314,0.023289,0.028267,0.038083,0.056776,0.093505", \
				        "0.019243,0.023207,0.028334,0.038082,0.056769,0.093526", \
				        "0.021648,0.024722,0.029168,0.038020,0.056774,0.093518", \
				        "0.030703,0.033194,0.036449,0.042782,0.057994,0.093514", \
				        "0.046321,0.048862,0.052521,0.059242,0.071745,0.098167", \
				        "0.071853,0.074904,0.079018,0.087011,0.101974,0.128651", \
				        "0.115400,0.119148,0.124257,0.134090,0.152447,0.185332", \
				        "0.190584,0.195670,0.202294,0.215185,0.238973,0.280456");
			}
			rise_transition(Timing_X2) {
				values ("0.061853,0.073944,0.089315,0.118034,0.173241,0.282062", \
				        "0.061275,0.073469,0.088989,0.117961,0.173241,0.282088", \
				        "0.059599,0.072073,0.087978,0.117565,0.173259,0.282091", \
				        "0.058154,0.069538,0.085040,0.115889,0.173098,0.282095", \
				        "0.067100,0.075574,0.088013,0.114289,0.170370,0.282049", \
				        "0.086999,0.096822,0.109242,0.132142,0.177716,0.280008", \
				        "0.119734,0.130926,0.145162,0.171845,0.220503,0.308024", \
				        "0.176824,0.189129,0.205762,0.236056,0.292956,0.395078");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2 & !C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022176,0.026261,0.031674,0.042441,0.063765,0.106302", \
				        "0.025298,0.029314,0.034706,0.045491,0.066788,0.109283", \
				        "0.031552,0.035832,0.041106,0.051711,0.072987,0.115399", \
				        "0.039073,0.044813,0.051793,0.064187,0.085581,0.127760", \
				        "0.045859,0.053544,0.062981,0.079566,0.107845,0.153482", \
				        "0.048516,0.058717,0.071383,0.093582,0.131481,0.193060", \
				        "0.038849,0.052914,0.069754,0.099647,0.150336,0.232669", \
				        "0.001445,0.019525,0.042049,0.081848,0.149824,0.260379");
			}
			cell_rise(Timing_X2) {
				values ("0.055361,0.064941,0.077750,0.103128,0.153282,0.252807", \
				        "0.058434,0.068003,0.080739,0.106126,0.156315,0.255849", \
				        "0.065031,0.074581,0.087211,0.112418,0.162460,0.261960", \
				        "0.079956,0.088820,0.101067,0.125747,0.175363,0.274399", \
				        "0.108911,0.118695,0.131433,0.154794,0.202887,0.300699", \
				        "0.148645,0.161543,0.177658,0.207785,0.261266,0.356547", \
				        "0.208117,0.224438,0.244427,0.282227,0.350018,0.467167", \
				        "0.302518,0.322398,0.348070,0.394836,0.479046,0.626445");
			}
			fall_transition(Timing_X2) {
				values ("0.019774,0.023860,0.029063,0.039131,0.058178,0.095147", \
				        "0.019733,0.023728,0.029075,0.039134,0.058178,0.095150", \
				        "0.022109,0.025268,0.029903,0.039099,0.058187,0.095151", \
				        "0.031677,0.034103,0.037311,0.043828,0.059421,0.095149", \
				        "0.048457,0.050739,0.054242,0.060885,0.073257,0.099820", \
				        "0.075525,0.078188,0.081932,0.089537,0.104105,0.130455", \
				        "0.120858,0.123958,0.128563,0.137543,0.155096,0.187388", \
				        "0.198253,0.202493,0.208117,0.219792,0.242056,0.282290");
			}
			rise_transition(Timing_X2) {
				values ("0.053702,0.063060,0.075252,0.098227,0.143706,0.234066", \
				        "0.053418,0.062825,0.075040,0.098227,0.143706,0.234066", \
				        "0.052317,0.062071,0.074468,0.098063,0.143665,0.234058", \
				        "0.051424,0.060393,0.072717,0.097083,0.143601,0.234057", \
				        "0.061212,0.068298,0.077975,0.098195,0.142122,0.234055", \
				        "0.081109,0.089703,0.100372,0.119794,0.155576,0.234935", \
				        "0.113431,0.123448,0.136240,0.159598,0.201721,0.274453", \
				        "0.170594,0.182157,0.196992,0.224269,0.274480,0.363266");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022386,0.026544,0.031850,0.042666,0.064110,0.106733", \
				        "0.025530,0.029572,0.034967,0.045727,0.067125,0.109807", \
				        "0.031846,0.036132,0.041393,0.051996,0.073335,0.115864", \
				        "0.039570,0.045328,0.052306,0.064545,0.085918,0.128311", \
				        "0.046514,0.054308,0.063655,0.080206,0.108455,0.154001", \
				        "0.048785,0.059188,0.072055,0.094194,0.132133,0.193781", \
				        "0.037728,0.051854,0.069026,0.099132,0.150215,0.233044", \
				        "-0.002483,0.015223,0.037663,0.077668,0.146375,0.258325");
			}
			cell_rise(Timing_X2) {
				values ("0.076791,0.088396,0.103978,0.134925,0.196158,0.317554", \
				        "0.079732,0.091392,0.107016,0.137916,0.199150,0.320569", \
				        "0.086199,0.097781,0.113264,0.144068,0.205177,0.326507", \
				        "0.100213,0.111467,0.126643,0.157017,0.217713,0.338631", \
				        "0.132312,0.142469,0.156090,0.184647,0.244316,0.363927", \
				        "0.181481,0.195014,0.211885,0.243872,0.301755,0.417691", \
				        "0.253582,0.270601,0.291442,0.331778,0.404685,0.532577", \
				        "0.366726,0.387251,0.413834,0.462993,0.553032,0.713496");
			}
			fall_transition(Timing_X2) {
				values ("0.027693,0.031112,0.036021,0.045541,0.064169,0.100959", \
				        "0.027619,0.031093,0.036069,0.045565,0.064156,0.100951", \
				        "0.029938,0.032544,0.036852,0.045531,0.064169,0.100936", \
				        "0.039468,0.041301,0.044244,0.050236,0.065371,0.100958", \
				        "0.057679,0.059569,0.062429,0.068024,0.079174,0.105576", \
				        "0.088029,0.089971,0.092968,0.099222,0.112165,0.136829", \
				        "0.139285,0.141258,0.144569,0.151784,0.166964,0.196688", \
				        "0.225704,0.228453,0.232435,0.241386,0.260217,0.296708");
			}
			rise_transition(Timing_X2) {
				values ("0.076249,0.087635,0.102583,0.130789,0.186077,0.295470", \
				        "0.075972,0.087417,0.102427,0.130744,0.186078,0.295455", \
				        "0.075101,0.086691,0.101854,0.130598,0.186069,0.295469", \
				        "0.071915,0.083884,0.099983,0.129777,0.185987,0.295469", \
				        "0.075285,0.085152,0.098977,0.126590,0.184698,0.295470", \
				        "0.095062,0.104808,0.117115,0.140129,0.188066,0.293433", \
				        "0.127972,0.139410,0.153765,0.180476,0.228925,0.317320", \
				        "0.184164,0.197018,0.214056,0.245048,0.302427,0.404365");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.028146,0.032358,0.037681,0.048411,0.069827,0.112517", \
				        "0.030751,0.034995,0.040359,0.051110,0.072609,0.115422", \
				        "0.035459,0.039741,0.045224,0.056069,0.077583,0.120489", \
				        "0.042337,0.047490,0.053821,0.065499,0.087450,0.130498", \
				        "0.049961,0.056719,0.064764,0.079201,0.104666,0.149965", \
				        "0.054148,0.063240,0.074570,0.094160,0.127230,0.181721", \
				        "0.046226,0.059131,0.074737,0.102089,0.147827,0.220658", \
				        "0.010982,0.028824,0.050580,0.088544,0.151895,0.252388");
			}
			cell_rise(Timing_X2) {
				values ("0.093973,0.105581,0.121175,0.152126,0.213395,0.334893", \
				        "0.097000,0.108675,0.124157,0.155038,0.216412,0.337860", \
				        "0.103486,0.115108,0.130591,0.161386,0.222519,0.343923", \
				        "0.117254,0.128747,0.144047,0.174550,0.235250,0.356183", \
				        "0.148343,0.158172,0.172730,0.202179,0.262043,0.381747", \
				        "0.203120,0.216084,0.231962,0.262398,0.319180,0.435844", \
				        "0.283030,0.299194,0.319042,0.357462,0.427725,0.552055", \
				        "0.408579,0.427301,0.452974,0.499822,0.586270,0.741948");
			}
			fall_transition(Timing_X2) {
				values ("0.027642,0.031009,0.035981,0.045531,0.064152,0.100961", \
				        "0.027666,0.031130,0.036010,0.045513,0.064159,0.100958", \
				        "0.028493,0.031602,0.036297,0.045541,0.064159,0.100953", \
				        "0.033356,0.035914,0.039879,0.047646,0.064714,0.100955", \
				        "0.044829,0.046946,0.050160,0.056835,0.071258,0.103219", \
				        "0.067009,0.068812,0.071563,0.077367,0.090080,0.118329", \
				        "0.086799,0.089841,0.093965,0.101976,0.128735,0.155498", \
				        "0.139796,0.143813,0.149289,0.159954,0.179525,0.213879");
			}
			rise_transition(Timing_X2) {
				values ("0.086660,0.097857,0.112580,0.140882,0.196414,0.306230", \
				        "0.086506,0.097751,0.112511,0.140896,0.196410,0.306282", \
				        "0.086072,0.097418,0.112283,0.140843,0.196426,0.306244", \
				        "0.083716,0.095712,0.111171,0.140412,0.196368,0.306239", \
				        "0.083678,0.094141,0.108512,0.137195,0.195703,0.306247", \
				        "0.101308,0.111035,0.123340,0.146919,0.196846,0.304650", \
				        "0.133159,0.144718,0.159451,0.186381,0.234796,0.324753", \
				        "0.182599,0.196591,0.214239,0.246933,0.306185,0.409436");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !B2 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027928,0.032023,0.037408,0.048132,0.069476,0.112049", \
				        "0.030510,0.034656,0.040134,0.050810,0.072231,0.114946", \
				        "0.035160,0.039457,0.044926,0.055706,0.077225,0.120006", \
				        "0.041917,0.046997,0.053412,0.065111,0.087015,0.129952", \
				        "0.049341,0.056054,0.064152,0.078649,0.104172,0.149420", \
				        "0.053581,0.062711,0.073966,0.093543,0.126634,0.181088", \
				        "0.046226,0.059131,0.074737,0.102089,0.147657,0.220188", \
				        "0.010982,0.028824,0.050580,0.088544,0.151895,0.252388");
			}
			cell_rise(Timing_X2) {
				values ("0.059197,0.068637,0.081306,0.106690,0.157050,0.256906", \
				        "0.062490,0.071883,0.084459,0.109872,0.160191,0.260007", \
				        "0.069552,0.078761,0.091281,0.116455,0.166651,0.266372", \
				        "0.084897,0.093731,0.105668,0.130318,0.179980,0.279236", \
				        "0.116479,0.125700,0.137667,0.160107,0.208004,0.305990", \
				        "0.161200,0.173126,0.188359,0.216850,0.268336,0.362399", \
				        "0.227218,0.242616,0.261440,0.297491,0.362758,0.476381", \
				        "0.333585,0.352197,0.376182,0.420616,0.501200,0.643797");
			}
			fall_transition(Timing_X2) {
				values ("0.019305,0.023233,0.028319,0.038025,0.056759,0.093524", \
				        "0.019315,0.023234,0.028359,0.038030,0.056760,0.093491", \
				        "0.020171,0.023749,0.028596,0.038094,0.056759,0.093534", \
				        "0.024939,0.027984,0.032280,0.040223,0.057334,0.093523", \
				        "0.035571,0.038034,0.041704,0.048887,0.063808,0.095789", \
				        "0.054744,0.057218,0.060679,0.067669,0.081519,0.110561", \
				        "0.086799,0.089841,0.093965,0.101976,0.117178,0.146029", \
				        "0.139796,0.143813,0.149289,0.159954,0.179525,0.213879");
			}
			rise_transition(Timing_X2) {
				values ("0.058507,0.068324,0.081075,0.105069,0.151220,0.241924", \
				        "0.058171,0.067990,0.080766,0.104939,0.151215,0.241943", \
				        "0.057030,0.067046,0.080093,0.104602,0.151201,0.241930", \
				        "0.055356,0.064827,0.077642,0.103156,0.150909,0.241940", \
				        "0.063872,0.070861,0.081115,0.102614,0.148400,0.241817", \
				        "0.083803,0.092482,0.102982,0.122482,0.159224,0.241147", \
				        "0.113930,0.124334,0.137521,0.161516,0.203903,0.277094", \
				        "0.162145,0.174575,0.190729,0.219959,0.272532,0.363533");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2 & C1 & !C2 | A1 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027916,0.032041,0.037408,0.048164,0.069491,0.112130", \
				        "0.030515,0.034703,0.040091,0.050803,0.072221,0.114968", \
				        "0.035202,0.039492,0.044947,0.055748,0.077303,0.120061", \
				        "0.042032,0.047105,0.053457,0.065222,0.087084,0.130012", \
				        "0.049519,0.056209,0.064314,0.078809,0.104299,0.149517", \
				        "0.053370,0.062523,0.073847,0.093500,0.126651,0.181145", \
				        "0.044004,0.057134,0.072923,0.100715,0.146756,0.219732", \
				        "0.003258,0.021662,0.043887,0.082740,0.147389,0.249398");
			}
			cell_rise(Timing_X2) {
				values ("0.071423,0.083022,0.098537,0.129346,0.190467,0.311702", \
				        "0.074506,0.086123,0.101565,0.132366,0.193454,0.314676", \
				        "0.081273,0.092719,0.108072,0.138680,0.199592,0.320771", \
				        "0.095807,0.106958,0.121850,0.152085,0.212474,0.333080", \
				        "0.128683,0.138904,0.152433,0.180419,0.239619,0.358821", \
				        "0.178203,0.191562,0.208415,0.240260,0.298240,0.413376", \
				        "0.251389,0.268440,0.289236,0.329336,0.402096,0.529594", \
				        "0.369498,0.389532,0.416276,0.465199,0.554439,0.713615");
			}
			fall_transition(Timing_X2) {
				values ("0.019303,0.023275,0.028320,0.038031,0.056761,0.093527", \
				        "0.019315,0.023232,0.028273,0.038086,0.056759,0.093506", \
				        "0.020158,0.023743,0.028597,0.038086,0.056765,0.093536", \
				        "0.024901,0.027943,0.032244,0.040233,0.057328,0.093528", \
				        "0.035526,0.037991,0.041636,0.048824,0.063773,0.095781", \
				        "0.054709,0.057228,0.060687,0.067682,0.081517,0.110538", \
				        "0.087011,0.090034,0.094239,0.102262,0.117424,0.146225", \
				        "0.140569,0.144661,0.150123,0.160797,0.180422,0.214730");
			}
			rise_transition(Timing_X2) {
				values ("0.073340,0.084907,0.099942,0.128366,0.183555,0.292884", \
				        "0.073022,0.084645,0.099768,0.128295,0.183589,0.292859", \
				        "0.072015,0.083874,0.099184,0.128116,0.183571,0.292851", \
				        "0.069026,0.080922,0.096932,0.127095,0.183514,0.292890", \
				        "0.073456,0.083121,0.096650,0.124185,0.181934,0.292847", \
				        "0.092759,0.102783,0.115065,0.138154,0.185926,0.290802", \
				        "0.123353,0.135071,0.149994,0.177298,0.226243,0.315039", \
				        "0.171719,0.185673,0.203479,0.236303,0.295883,0.399899");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2 & !C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027928,0.032051,0.037444,0.048136,0.069474,0.112039", \
				        "0.030523,0.034715,0.040084,0.050819,0.072251,0.114952", \
				        "0.035183,0.039481,0.044955,0.055738,0.077244,0.120017", \
				        "0.041937,0.047029,0.053380,0.065123,0.087025,0.129953", \
				        "0.049323,0.056015,0.064108,0.078624,0.104150,0.149396", \
				        "0.053343,0.062532,0.073786,0.093415,0.126539,0.181018", \
				        "0.045786,0.058704,0.074356,0.101799,0.147451,0.220046", \
				        "0.010204,0.028230,0.049923,0.088041,0.151503,0.252116");
			}
			cell_rise(Timing_X2) {
				values ("0.069293,0.078894,0.091681,0.117064,0.167259,0.266915", \
				        "0.072423,0.082013,0.094734,0.120070,0.170328,0.270013", \
				        "0.078956,0.088605,0.101246,0.126496,0.176591,0.276168", \
				        "0.093201,0.102590,0.115060,0.139971,0.189644,0.288785", \
				        "0.124226,0.133305,0.145277,0.168582,0.217307,0.315238", \
				        "0.169580,0.181704,0.196671,0.225235,0.276562,0.371400", \
				        "0.236760,0.252043,0.270821,0.306673,0.371659,0.485101", \
				        "0.344748,0.362748,0.386970,0.430879,0.511086,0.653433");
			}
			fall_transition(Timing_X2) {
				values ("0.019786,0.023828,0.029086,0.039096,0.058162,0.095141", \
				        "0.019777,0.023852,0.029073,0.039099,0.058167,0.095150", \
				        "0.020624,0.024347,0.029362,0.039047,0.058176,0.095131", \
				        "0.025604,0.028733,0.033107,0.041235,0.058746,0.095152", \
				        "0.036956,0.039297,0.042941,0.050202,0.065280,0.097432", \
				        "0.057422,0.059711,0.062948,0.069677,0.083349,0.112299", \
				        "0.091484,0.093983,0.097736,0.105250,0.119841,0.148166", \
				        "0.146760,0.150343,0.155118,0.164896,0.183508,0.216909");
			}
			rise_transition(Timing_X2) {
				values ("0.061981,0.071143,0.083182,0.106423,0.152063,0.242850", \
				        "0.061858,0.071048,0.083136,0.106376,0.152100,0.242855", \
				        "0.061285,0.070690,0.082917,0.106362,0.152104,0.242856", \
				        "0.059355,0.068759,0.081506,0.105866,0.152091,0.242858", \
				        "0.065754,0.073259,0.083796,0.105311,0.150818,0.242850", \
				        "0.085652,0.094260,0.104807,0.124342,0.161140,0.242943", \
				        "0.115746,0.126126,0.139504,0.163544,0.205952,0.278883", \
				        "0.163947,0.176828,0.192763,0.222278,0.275174,0.366204");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.028146,0.032358,0.037681,0.048411,0.069827,0.112517", \
				        "0.030751,0.034995,0.040359,0.051110,0.072609,0.115422", \
				        "0.035459,0.039741,0.045224,0.056069,0.077583,0.120489", \
				        "0.042337,0.047490,0.053821,0.065499,0.087450,0.130498", \
				        "0.049961,0.056719,0.064764,0.079201,0.104666,0.149965", \
				        "0.054148,0.063240,0.074570,0.094160,0.127230,0.181721", \
				        "0.045480,0.058532,0.074272,0.102002,0.147827,0.220658", \
				        "0.006558,0.024671,0.046674,0.085154,0.149457,0.251084");
			}
			cell_rise(Timing_X2) {
				values ("0.093973,0.105581,0.121175,0.152126,0.213395,0.334893", \
				        "0.097000,0.108675,0.124157,0.155038,0.216412,0.337860", \
				        "0.103486,0.115108,0.130591,0.161386,0.222519,0.343923", \
				        "0.117254,0.128747,0.144047,0.174550,0.235250,0.356183", \
				        "0.148343,0.158172,0.172730,0.202179,0.262043,0.381747", \
				        "0.203120,0.216084,0.231962,0.262398,0.319180,0.435844", \
				        "0.283030,0.299194,0.319042,0.357462,0.427725,0.552055", \
				        "0.408579,0.427301,0.452974,0.499822,0.586270,0.741948");
			}
			fall_transition(Timing_X2) {
				values ("0.027642,0.031009,0.035981,0.045531,0.064152,0.100961", \
				        "0.027666,0.031130,0.036010,0.045513,0.064159,0.100958", \
				        "0.028493,0.031602,0.036297,0.045541,0.064159,0.100953", \
				        "0.033356,0.035914,0.039879,0.047646,0.064714,0.100955", \
				        "0.044829,0.046946,0.050160,0.056835,0.071258,0.103219", \
				        "0.067009,0.068812,0.071563,0.077367,0.090080,0.118329", \
				        "0.105201,0.106894,0.109822,0.115846,0.128735,0.155498", \
				        "0.167872,0.170041,0.173387,0.180952,0.196820,0.227403");
			}
			rise_transition(Timing_X2) {
				values ("0.086660,0.097857,0.112580,0.140882,0.196414,0.306230", \
				        "0.086506,0.097751,0.112511,0.140896,0.196410,0.306282", \
				        "0.086072,0.097418,0.112283,0.140843,0.196426,0.306244", \
				        "0.083716,0.095712,0.111171,0.140412,0.196368,0.306239", \
				        "0.083678,0.094141,0.108512,0.137195,0.195703,0.306247", \
				        "0.101308,0.111035,0.123340,0.146919,0.196846,0.304650", \
				        "0.133159,0.144718,0.159451,0.186381,0.234796,0.324753", \
				        "0.182599,0.196591,0.214239,0.246933,0.306185,0.409436");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034991,0.039821,0.045883,0.057546,0.080185,0.124250", \
				        "0.038050,0.042643,0.048809,0.060503,0.083151,0.127226", \
				        "0.044347,0.048934,0.054803,0.066524,0.089168,0.133165", \
				        "0.057071,0.062078,0.068131,0.079233,0.101467,0.145341", \
				        "0.071509,0.078216,0.086457,0.101111,0.126863,0.170648", \
				        "0.084443,0.093226,0.104085,0.123753,0.158190,0.215693", \
				        "0.089936,0.101284,0.115586,0.141413,0.186914,0.264008", \
				        "0.077128,0.091979,0.110314,0.144272,0.204311,0.305493");
			}
			cell_rise(Timing_X2) {
				values ("0.131016,0.142711,0.158290,0.189106,0.250174,0.371363", \
				        "0.134145,0.145772,0.161314,0.192156,0.253334,0.374606", \
				        "0.140235,0.151965,0.167389,0.198253,0.259474,0.380893", \
				        "0.151610,0.163470,0.178993,0.209925,0.271248,0.392771", \
				        "0.173513,0.185255,0.200937,0.231768,0.293026,0.414603", \
				        "0.211475,0.224851,0.242372,0.275448,0.337556,0.458687", \
				        "0.272069,0.288510,0.309358,0.348866,0.421603,0.552168", \
				        "0.379046,0.399862,0.424536,0.472938,0.559575,0.713510");
			}
			fall_transition(Timing_X2) {
				values ("0.040132,0.043323,0.047700,0.056517,0.074455,0.110874", \
				        "0.039973,0.043260,0.047625,0.056474,0.074445,0.110871", \
				        "0.039264,0.042675,0.047189,0.056363,0.074428,0.110865", \
				        "0.044012,0.046394,0.049943,0.057303,0.074299,0.110851", \
				        "0.060381,0.062637,0.065593,0.071338,0.083158,0.112769", \
				        "0.087878,0.090612,0.094282,0.101179,0.114761,0.139808", \
				        "0.115442,0.119960,0.125871,0.136456,0.155859,0.198819", \
				        "0.181372,0.187851,0.195646,0.210370,0.236191,0.280312");
			}
			rise_transition(Timing_X2) {
				values ("0.075917,0.086630,0.100777,0.128436,0.183605,0.292880", \
				        "0.075918,0.086593,0.100785,0.128497,0.183601,0.292871", \
				        "0.075924,0.086591,0.100712,0.128458,0.183605,0.292878", \
				        "0.075943,0.086618,0.100806,0.128440,0.183568,0.292873", \
				        "0.077298,0.087509,0.101159,0.128637,0.183600,0.292914", \
				        "0.092275,0.101709,0.113800,0.137314,0.186828,0.292901", \
				        "0.122932,0.132789,0.145455,0.170033,0.217240,0.309344", \
				        "0.174536,0.185166,0.198918,0.225479,0.276358,0.372885");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034605,0.039322,0.045373,0.057200,0.079724,0.123612", \
				        "0.037652,0.042159,0.048350,0.060038,0.082588,0.126494", \
				        "0.043888,0.048416,0.054259,0.066026,0.088561,0.132378", \
				        "0.056516,0.061441,0.067552,0.078662,0.100866,0.144584", \
				        "0.070749,0.077392,0.085588,0.100400,0.126155,0.169977", \
				        "0.084063,0.092565,0.103334,0.122973,0.157397,0.214906", \
				        "0.089936,0.101284,0.115586,0.141413,0.186914,0.263580", \
				        "0.077128,0.091979,0.110314,0.144272,0.204311,0.305493");
			}
			cell_rise(Timing_X2) {
				values ("0.094414,0.103971,0.116766,0.141927,0.191882,0.291220", \
				        "0.097740,0.107311,0.120152,0.145365,0.195401,0.294794", \
				        "0.104277,0.113898,0.126513,0.151759,0.201926,0.301399", \
				        "0.116251,0.126083,0.138782,0.164113,0.214268,0.313821", \
				        "0.138111,0.148360,0.161482,0.186846,0.236909,0.336502", \
				        "0.170049,0.182292,0.198188,0.227741,0.282083,0.382038", \
				        "0.220156,0.235740,0.255179,0.291236,0.356509,0.471451", \
				        "0.308435,0.328384,0.351889,0.397042,0.476446,0.614446");
			}
			fall_transition(Timing_X2) {
				values ("0.033186,0.036435,0.041025,0.050104,0.068280,0.104906", \
				        "0.033052,0.036373,0.040942,0.050078,0.068285,0.104909", \
				        "0.032316,0.035760,0.040501,0.049936,0.068270,0.104908", \
				        "0.037293,0.039768,0.043405,0.051010,0.068131,0.104891", \
				        "0.052121,0.054693,0.058167,0.064695,0.077105,0.106830", \
				        "0.076132,0.079618,0.083940,0.092019,0.107064,0.133543", \
				        "0.115442,0.119960,0.125871,0.136456,0.155859,0.189778", \
				        "0.181372,0.187851,0.195646,0.210370,0.236191,0.280312");
			}
			rise_transition(Timing_X2) {
				values ("0.053124,0.061776,0.073501,0.096237,0.141568,0.231830", \
				        "0.053119,0.061819,0.073465,0.096162,0.141564,0.231834", \
				        "0.053125,0.061832,0.073451,0.096216,0.141581,0.231817", \
				        "0.053243,0.061923,0.073444,0.096212,0.141576,0.231839", \
				        "0.058027,0.065598,0.076035,0.097278,0.141597,0.231837", \
				        "0.075033,0.082804,0.092941,0.112177,0.150012,0.233051", \
				        "0.105471,0.113590,0.124165,0.144641,0.184072,0.259685", \
				        "0.156597,0.165523,0.177151,0.199438,0.242216,0.323534");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A2 & B2 & C1 & !C2 | !A1 & B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034991,0.039821,0.045883,0.057546,0.080185,0.124250", \
				        "0.038050,0.042643,0.048809,0.060503,0.083151,0.127226", \
				        "0.044347,0.048934,0.054803,0.066524,0.089168,0.133165", \
				        "0.057071,0.062078,0.068131,0.079233,0.101467,0.145341", \
				        "0.071509,0.078216,0.086457,0.101111,0.126863,0.170648", \
				        "0.084443,0.093226,0.104085,0.123753,0.158190,0.215693", \
				        "0.088975,0.100435,0.114894,0.141010,0.186877,0.264008", \
				        "0.071481,0.086272,0.104866,0.139400,0.200369,0.303120");
			}
			cell_rise(Timing_X2) {
				values ("0.131016,0.142711,0.158290,0.189106,0.250174,0.371363", \
				        "0.134145,0.145772,0.161314,0.192156,0.253334,0.374606", \
				        "0.140235,0.151965,0.167389,0.198253,0.259474,0.380893", \
				        "0.151610,0.163470,0.178993,0.209925,0.271248,0.392771", \
				        "0.173513,0.185255,0.200937,0.231768,0.293026,0.414603", \
				        "0.211475,0.224851,0.242372,0.275448,0.337556,0.458687", \
				        "0.272069,0.288510,0.309358,0.348866,0.421603,0.552168", \
				        "0.379046,0.399862,0.424536,0.472938,0.559575,0.713510");
			}
			fall_transition(Timing_X2) {
				values ("0.040132,0.043323,0.047700,0.056517,0.074455,0.110874", \
				        "0.039973,0.043260,0.047625,0.056474,0.074445,0.110871", \
				        "0.039264,0.042675,0.047189,0.056363,0.074428,0.110865", \
				        "0.044012,0.046394,0.049943,0.057303,0.074299,0.110851", \
				        "0.060381,0.062637,0.065593,0.071338,0.083158,0.112769", \
				        "0.087878,0.090612,0.094282,0.101179,0.114761,0.139808", \
				        "0.132742,0.136363,0.141082,0.150112,0.167375,0.198819", \
				        "0.207673,0.212620,0.219215,0.231527,0.254223,0.294740");
			}
			rise_transition(Timing_X2) {
				values ("0.075917,0.086630,0.100777,0.128436,0.183605,0.292880", \
				        "0.075918,0.086593,0.100785,0.128497,0.183601,0.292871", \
				        "0.075924,0.086591,0.100712,0.128458,0.183605,0.292878", \
				        "0.075943,0.086618,0.100806,0.128440,0.183568,0.292873", \
				        "0.077298,0.087509,0.101159,0.128637,0.183600,0.292914", \
				        "0.092275,0.101709,0.113800,0.137314,0.186828,0.292901", \
				        "0.122932,0.132789,0.145455,0.170033,0.217240,0.309344", \
				        "0.174536,0.185166,0.198918,0.225479,0.276358,0.372885");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2 & !C1 & C2 | !A1 & A2 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034633,0.039342,0.045389,0.057208,0.079729,0.123650", \
				        "0.037687,0.042217,0.048355,0.060100,0.082673,0.126580", \
				        "0.044010,0.048533,0.054448,0.066147,0.088698,0.132513", \
				        "0.056660,0.061593,0.067663,0.078806,0.100991,0.144717", \
				        "0.070811,0.077467,0.085671,0.100496,0.126275,0.170104", \
				        "0.083224,0.091995,0.102842,0.122633,0.157217,0.214862", \
				        "0.086461,0.098070,0.112695,0.138979,0.185150,0.262542", \
				        "0.066004,0.081419,0.100285,0.135270,0.196956,0.300303");
			}
			cell_rise(Timing_X2) {
				values ("0.114282,0.126010,0.141626,0.172276,0.233238,0.354343", \
				        "0.117305,0.129031,0.144708,0.175475,0.236486,0.357640", \
				        "0.123378,0.135173,0.150631,0.181453,0.242585,0.363808", \
				        "0.134763,0.146634,0.162266,0.193153,0.254327,0.375722", \
				        "0.156582,0.168418,0.184140,0.214994,0.276101,0.397524", \
				        "0.191342,0.205325,0.223518,0.257579,0.320642,0.441645", \
				        "0.247314,0.264910,0.286614,0.327648,0.402074,0.534535", \
				        "0.348814,0.370812,0.396831,0.447111,0.535902,0.692921");
			}
			fall_transition(Timing_X2) {
				values ("0.033205,0.036464,0.041053,0.050137,0.068310,0.104914", \
				        "0.033067,0.036401,0.040991,0.050092,0.068303,0.104918", \
				        "0.032325,0.035748,0.040528,0.049953,0.068289,0.104914", \
				        "0.037233,0.039730,0.043385,0.051009,0.068093,0.104908", \
				        "0.052084,0.054662,0.058136,0.064648,0.077066,0.106821", \
				        "0.076523,0.079839,0.084169,0.092215,0.107171,0.133564", \
				        "0.116595,0.121060,0.126909,0.137464,0.156747,0.190348", \
				        "0.184090,0.190342,0.198496,0.213186,0.238999,0.282723");
			}
			rise_transition(Timing_X2) {
				values ("0.066565,0.077161,0.091198,0.118743,0.173534,0.282475", \
				        "0.066577,0.077156,0.091150,0.118714,0.173537,0.282469", \
				        "0.066570,0.077165,0.091144,0.118651,0.173559,0.282449", \
				        "0.066608,0.077206,0.091255,0.118658,0.173515,0.282460", \
				        "0.069167,0.079054,0.092192,0.119012,0.173563,0.282474", \
				        "0.085723,0.095029,0.107072,0.130030,0.178054,0.282578", \
				        "0.117055,0.126595,0.138988,0.163224,0.210051,0.301145", \
				        "0.169288,0.179531,0.192906,0.218939,0.269314,0.365256");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042178,0.046954,0.053094,0.064787,0.087415,0.131453", \
				        "0.045065,0.049816,0.055939,0.067599,0.090250,0.134435", \
				        "0.050113,0.054876,0.060958,0.072729,0.095342,0.139520", \
				        "0.059409,0.064368,0.070631,0.082471,0.105173,0.149387", \
				        "0.072769,0.078453,0.085817,0.099186,0.123807,0.168813", \
				        "0.086102,0.093907,0.103419,0.120735,0.151037,0.203185", \
				        "0.092316,0.102690,0.115950,0.139621,0.180569,0.248373", \
				        "0.079679,0.094032,0.111557,0.143565,0.199441,0.291587");
			}
			cell_rise(Timing_X2) {
				values ("0.152625,0.164215,0.179767,0.210702,0.271874,0.393296", \
				        "0.155892,0.167513,0.182940,0.213907,0.275085,0.396532", \
				        "0.162214,0.173965,0.189357,0.220241,0.281413,0.402922", \
				        "0.173931,0.185764,0.201226,0.232181,0.293508,0.415041", \
				        "0.195919,0.207556,0.223192,0.254166,0.315555,0.437166", \
				        "0.236641,0.249945,0.266514,0.298696,0.360082,0.481374", \
				        "0.304531,0.320515,0.339543,0.377486,0.447732,0.575784", \
				        "0.423932,0.441939,0.466343,0.511755,0.594364,0.743879");
			}
			fall_transition(Timing_X2) {
				values ("0.040057,0.043310,0.047689,0.056499,0.074451,0.110884", \
				        "0.040003,0.043249,0.047658,0.056495,0.074454,0.110871", \
				        "0.039741,0.043010,0.047486,0.056431,0.074434,0.110892", \
				        "0.041267,0.044276,0.048533,0.056948,0.074385,0.110879", \
				        "0.049392,0.052056,0.055752,0.062940,0.078279,0.111923", \
				        "0.067923,0.070409,0.073808,0.080448,0.094434,0.124224", \
				        "0.088958,0.104356,0.108262,0.115593,0.130042,0.158798", \
				        "0.137772,0.142596,0.149016,0.160491,0.181068,0.216746");
			}
			rise_transition(Timing_X2) {
				values ("0.087695,0.098519,0.112815,0.140895,0.196419,0.306285", \
				        "0.087697,0.098543,0.112838,0.140897,0.196419,0.306218", \
				        "0.087699,0.098531,0.112750,0.140921,0.196382,0.306283", \
				        "0.087681,0.098543,0.112776,0.140938,0.196408,0.306222", \
				        "0.088103,0.098786,0.112932,0.140905,0.196414,0.306243", \
				        "0.100696,0.110158,0.122329,0.147157,0.198400,0.306298", \
				        "0.129823,0.139970,0.152977,0.178215,0.225995,0.319994", \
				        "0.175231,0.186985,0.201726,0.229918,0.282792,0.381399");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.041492,0.046112,0.052118,0.063831,0.086415,0.130291", \
				        "0.044377,0.048997,0.055014,0.066701,0.089297,0.133231", \
				        "0.049427,0.054087,0.060106,0.071778,0.094367,0.138356", \
				        "0.058676,0.063553,0.069802,0.081661,0.104238,0.148263", \
				        "0.071817,0.077427,0.084606,0.098113,0.122809,0.167702", \
				        "0.084525,0.092328,0.101684,0.119126,0.149638,0.201821", \
				        "0.089421,0.099925,0.112949,0.136913,0.178258,0.246382", \
				        "0.069768,0.084629,0.102653,0.135768,0.193089,0.286971");
			}
			cell_rise(Timing_X2) {
				values ("0.117727,0.129376,0.144918,0.175741,0.236690,0.357900", \
				        "0.120929,0.132604,0.148037,0.178878,0.239955,0.361200", \
				        "0.127222,0.138995,0.154446,0.185169,0.246326,0.367569", \
				        "0.138917,0.150713,0.166268,0.197124,0.258352,0.379712", \
				        "0.160673,0.172614,0.188259,0.219211,0.280384,0.401827", \
				        "0.196022,0.210595,0.228246,0.262205,0.324975,0.446104", \
				        "0.255705,0.273186,0.294158,0.334533,0.408043,0.539757", \
				        "0.364704,0.384832,0.411811,0.460232,0.547560,0.702198");
			}
			fall_transition(Timing_X2) {
				values ("0.026259,0.029932,0.034785,0.043928,0.062339,0.099073", \
				        "0.026196,0.029885,0.034830,0.043995,0.062333,0.099114", \
				        "0.025952,0.029620,0.034551,0.043821,0.062317,0.099098", \
				        "0.027639,0.030958,0.035450,0.044339,0.062265,0.099040", \
				        "0.034427,0.037668,0.042092,0.050142,0.066193,0.100148", \
				        "0.049291,0.052748,0.057374,0.065540,0.081125,0.112126", \
				        "0.075721,0.079956,0.085550,0.095612,0.113137,0.144628", \
				        "0.119097,0.125599,0.133298,0.146942,0.170052,0.208249");
			}
			rise_transition(Timing_X2) {
				values ("0.068929,0.079519,0.093558,0.121216,0.176242,0.285378", \
				        "0.068930,0.079507,0.093463,0.121257,0.176243,0.285372", \
				        "0.068922,0.079515,0.093518,0.121257,0.176191,0.285377", \
				        "0.068965,0.079528,0.093564,0.121264,0.176248,0.285380", \
				        "0.071177,0.081061,0.094378,0.121402,0.176201,0.285359", \
				        "0.087398,0.096568,0.108594,0.131915,0.180454,0.285482", \
				        "0.116618,0.126606,0.139477,0.164223,0.211590,0.303315", \
				        "0.161096,0.172829,0.187175,0.215293,0.267980,0.365976");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.041814,0.046501,0.052577,0.064295,0.086879,0.130818", \
				        "0.044651,0.049285,0.055409,0.067124,0.089735,0.133732", \
				        "0.049656,0.054340,0.060502,0.072128,0.094749,0.138796", \
				        "0.058875,0.063809,0.070164,0.081886,0.104584,0.148654", \
				        "0.072071,0.077741,0.085055,0.098500,0.123148,0.168075", \
				        "0.085271,0.093041,0.102555,0.119897,0.150230,0.202329", \
				        "0.092316,0.102575,0.115683,0.139207,0.180021,0.247660", \
				        "0.079679,0.094032,0.111557,0.143565,0.199441,0.291587");
			}
			cell_rise(Timing_X2) {
				values ("0.111844,0.121400,0.134213,0.159490,0.209677,0.309256", \
				        "0.115328,0.124866,0.137529,0.162889,0.213108,0.312741", \
				        "0.122095,0.131714,0.144298,0.169600,0.219857,0.319574", \
				        "0.134342,0.144049,0.156847,0.182182,0.232495,0.332216", \
				        "0.157070,0.166735,0.179652,0.205041,0.255303,0.355094", \
				        "0.193122,0.204836,0.219712,0.248172,0.301068,0.400697", \
				        "0.250792,0.265582,0.283114,0.317308,0.380015,0.492250", \
				        "0.352672,0.370384,0.392364,0.434103,0.509168,0.642322");
			}
			fall_transition(Timing_X2) {
				values ("0.033118,0.036480,0.041010,0.050099,0.068302,0.104915", \
				        "0.033060,0.036394,0.040975,0.050096,0.068295,0.104910", \
				        "0.032813,0.036148,0.040792,0.050008,0.068273,0.104911", \
				        "0.034466,0.037517,0.041872,0.050566,0.068238,0.104928", \
				        "0.042141,0.044913,0.048898,0.056519,0.072205,0.105965", \
				        "0.059018,0.061890,0.065734,0.073054,0.087793,0.118202", \
				        "0.088958,0.092407,0.097055,0.105495,0.121395,0.151542", \
				        "0.137772,0.142596,0.149016,0.160491,0.181068,0.216746");
			}
			rise_transition(Timing_X2) {
				values ("0.062552,0.071445,0.083185,0.106392,0.152096,0.242844", \
				        "0.062555,0.071430,0.083196,0.106354,0.152075,0.242857", \
				        "0.062561,0.071437,0.083289,0.106323,0.152083,0.242868", \
				        "0.062607,0.071464,0.083203,0.106292,0.152072,0.242869", \
				        "0.065156,0.073414,0.084479,0.106734,0.152023,0.242848", \
				        "0.081087,0.089163,0.099381,0.119018,0.158335,0.243513", \
				        "0.109158,0.117873,0.129127,0.150518,0.190875,0.267321", \
				        "0.152542,0.162807,0.175685,0.200093,0.245613,0.329682");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042178,0.046954,0.053094,0.064787,0.087415,0.131453", \
				        "0.045065,0.049816,0.055939,0.067599,0.090250,0.134435", \
				        "0.050113,0.054876,0.060958,0.072729,0.095342,0.139520", \
				        "0.059409,0.064368,0.070631,0.082471,0.105173,0.149387", \
				        "0.072769,0.078453,0.085817,0.099186,0.123807,0.168813", \
				        "0.086102,0.093907,0.103419,0.120735,0.151037,0.203185", \
				        "0.092262,0.102690,0.115950,0.139621,0.180569,0.248373", \
				        "0.075660,0.090252,0.108161,0.140659,0.197268,0.290519");
			}
			cell_rise(Timing_X2) {
				values ("0.152625,0.164215,0.179767,0.210702,0.271874,0.393296", \
				        "0.155892,0.167513,0.182940,0.213907,0.275085,0.396532", \
				        "0.162214,0.173965,0.189357,0.220241,0.281413,0.402922", \
				        "0.173931,0.185764,0.201226,0.232181,0.293508,0.415041", \
				        "0.195919,0.207556,0.223192,0.254166,0.315555,0.437166", \
				        "0.236641,0.249945,0.266514,0.298696,0.360082,0.481374", \
				        "0.304531,0.320515,0.339543,0.377486,0.447732,0.575784", \
				        "0.423932,0.441939,0.466343,0.511755,0.594364,0.743879");
			}
			fall_transition(Timing_X2) {
				values ("0.040057,0.043310,0.047689,0.056499,0.074451,0.110884", \
				        "0.040003,0.043249,0.047658,0.056495,0.074454,0.110871", \
				        "0.039741,0.043010,0.047486,0.056431,0.074434,0.110892", \
				        "0.041267,0.044276,0.048533,0.056948,0.074385,0.110879", \
				        "0.049392,0.052056,0.055752,0.062940,0.078279,0.111923", \
				        "0.067923,0.070409,0.073808,0.080448,0.094434,0.124224", \
				        "0.101594,0.104356,0.108262,0.115593,0.130042,0.158798", \
				        "0.156852,0.160715,0.166023,0.175745,0.193959,0.227143");
			}
			rise_transition(Timing_X2) {
				values ("0.087695,0.098519,0.112815,0.140895,0.196419,0.306285", \
				        "0.087697,0.098543,0.112838,0.140897,0.196419,0.306218", \
				        "0.087699,0.098531,0.112750,0.140921,0.196382,0.306283", \
				        "0.087681,0.098543,0.112776,0.140938,0.196408,0.306222", \
				        "0.088103,0.098786,0.112932,0.140905,0.196414,0.306243", \
				        "0.100696,0.110158,0.122329,0.147157,0.198400,0.306298", \
				        "0.129823,0.139970,0.152977,0.178215,0.225995,0.319994", \
				        "0.175231,0.186985,0.201726,0.229918,0.282792,0.381399");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.047271,0.052111,0.058423,0.070812,0.094535,0.139776", \
				        "0.050187,0.054901,0.061258,0.073729,0.097426,0.142600", \
				        "0.056258,0.061043,0.067220,0.079576,0.103212,0.148319", \
				        "0.070237,0.074639,0.080369,0.092189,0.115438,0.160414", \
				        "0.090425,0.096324,0.103686,0.117408,0.141690,0.185643", \
				        "0.111705,0.119174,0.128778,0.146998,0.179297,0.234074", \
				        "0.127895,0.138211,0.150862,0.174722,0.217155,0.289898", \
				        "0.130217,0.143535,0.159866,0.190721,0.246301,0.341838");
			}
			cell_rise(Timing_X2) {
				values ("0.161401,0.173194,0.188813,0.219765,0.281024,0.402470", \
				        "0.165158,0.176824,0.192434,0.223418,0.284725,0.406238", \
				        "0.172066,0.183776,0.199278,0.230309,0.291654,0.413275", \
				        "0.184238,0.196107,0.211694,0.242646,0.304034,0.425760", \
				        "0.205380,0.217158,0.232898,0.263775,0.325091,0.446761", \
				        "0.237138,0.250104,0.266900,0.299013,0.360618,0.482222", \
				        "0.278806,0.294085,0.313035,0.349804,0.419015,0.548030", \
				        "0.351869,0.370090,0.392107,0.435166,0.513921,0.658828");
			}
			fall_transition(Timing_X2) {
				values ("0.035336,0.039292,0.044353,0.053752,0.072452,0.109434", \
				        "0.035158,0.039117,0.044180,0.053673,0.072396,0.109425", \
				        "0.034292,0.038493,0.043737,0.053466,0.072360,0.109442", \
				        "0.035442,0.038908,0.043574,0.052733,0.071785,0.109286", \
				        "0.047936,0.051268,0.055535,0.062680,0.076709,0.109571", \
				        "0.069306,0.073435,0.078699,0.087952,0.104258,0.131928", \
				        "0.103614,0.109335,0.116437,0.128897,0.150384,0.186193", \
				        "0.161253,0.169460,0.179078,0.196207,0.225281,0.272866");
			}
			rise_transition(Timing_X2) {
				values ("0.078205,0.089088,0.103331,0.131235,0.186532,0.296113", \
				        "0.078217,0.089090,0.103316,0.131232,0.186544,0.296129", \
				        "0.078209,0.089093,0.103309,0.131240,0.186545,0.296129", \
				        "0.078271,0.089075,0.103254,0.131199,0.186548,0.296111", \
				        "0.078506,0.089272,0.103460,0.131227,0.186513,0.296115", \
				        "0.087478,0.097520,0.110415,0.135854,0.188144,0.296162", \
				        "0.110220,0.120487,0.134049,0.160153,0.210742,0.308840", \
				        "0.159795,0.169730,0.182969,0.208700,0.259572,0.359810");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.047271,0.052111,0.058423,0.070812,0.094535,0.139776", \
				        "0.050187,0.054901,0.061258,0.073729,0.097426,0.142600", \
				        "0.056258,0.061043,0.067220,0.079576,0.103212,0.148319", \
				        "0.070237,0.074639,0.080369,0.092189,0.115438,0.160414", \
				        "0.090425,0.096324,0.103686,0.117408,0.141690,0.185643", \
				        "0.111705,0.119174,0.128778,0.146998,0.179297,0.234074", \
				        "0.127895,0.138211,0.150862,0.174722,0.217155,0.289898", \
				        "0.130217,0.143535,0.159866,0.190721,0.246301,0.341838");
			}
			cell_rise(Timing_X2) {
				values ("0.109805,0.120010,0.133551,0.159931,0.212275,0.316390", \
				        "0.113431,0.123568,0.137077,0.163617,0.216030,0.320218", \
				        "0.120416,0.130567,0.143837,0.170389,0.222874,0.327176", \
				        "0.132887,0.143075,0.156534,0.182883,0.235361,0.339747", \
				        "0.153980,0.164529,0.178173,0.204565,0.256966,0.361237", \
				        "0.180421,0.192943,0.209075,0.239023,0.294750,0.399447", \
				        "0.213346,0.229125,0.248533,0.284697,0.350364,0.468706", \
				        "0.273251,0.293388,0.317229,0.362101,0.440710,0.578622");
			}
			fall_transition(Timing_X2) {
				values ("0.035336,0.039292,0.044353,0.053752,0.072452,0.109434", \
				        "0.035158,0.039117,0.044180,0.053673,0.072396,0.109425", \
				        "0.034292,0.038493,0.043737,0.053466,0.072360,0.109442", \
				        "0.035442,0.038908,0.043574,0.052733,0.071785,0.109286", \
				        "0.047936,0.051268,0.055535,0.062680,0.076709,0.109571", \
				        "0.069306,0.073435,0.078699,0.087952,0.104258,0.131928", \
				        "0.103614,0.109335,0.116437,0.128897,0.150384,0.186193", \
				        "0.161253,0.169460,0.179078,0.196207,0.225281,0.272866");
			}
			rise_transition(Timing_X2) {
				values ("0.054358,0.063010,0.074717,0.097840,0.143940,0.235787", \
				        "0.054366,0.063063,0.074718,0.097793,0.143895,0.235792", \
				        "0.054375,0.063058,0.074690,0.097772,0.143931,0.235765", \
				        "0.054411,0.063074,0.074614,0.097858,0.143881,0.235795", \
				        "0.056657,0.064720,0.075702,0.098151,0.143961,0.235797", \
				        "0.069915,0.077839,0.088384,0.108699,0.149289,0.236360", \
				        "0.098871,0.106239,0.116514,0.137119,0.178224,0.258455", \
				        "0.158869,0.165394,0.174542,0.193640,0.233466,0.315142");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A2 & !B1 & !B2 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.040355,0.045627,0.052521,0.065599,0.090162,0.136520", \
				        "0.043414,0.048540,0.055519,0.068512,0.093051,0.139339", \
				        "0.049993,0.055037,0.061647,0.074515,0.098939,0.145152", \
				        "0.064931,0.069735,0.075630,0.087538,0.111287,0.157218", \
				        "0.084529,0.090880,0.098813,0.113090,0.138144,0.182575", \
				        "0.105246,0.113309,0.123490,0.142271,0.175449,0.231187", \
				        "0.121616,0.132085,0.145492,0.169790,0.213116,0.286916", \
				        "0.124976,0.138461,0.155093,0.186416,0.242657,0.339170");
			}
			cell_rise(Timing_X2) {
				values ("0.118748,0.128502,0.141451,0.166803,0.217022,0.316728", \
				        "0.122450,0.132139,0.145047,0.170443,0.220717,0.320501", \
				        "0.129602,0.139359,0.152208,0.177616,0.227930,0.327822", \
				        "0.143064,0.152856,0.165729,0.191091,0.241426,0.341348", \
				        "0.166478,0.176389,0.189466,0.214892,0.265114,0.364999", \
				        "0.198011,0.209643,0.224699,0.253033,0.305863,0.405889", \
				        "0.236772,0.251547,0.269658,0.303868,0.366258,0.479159", \
				        "0.302407,0.320889,0.343096,0.385520,0.460590,0.593009");
			}
			fall_transition(Timing_X2) {
				values ("0.043426,0.047001,0.051708,0.061070,0.079504,0.116086", \
				        "0.042896,0.046514,0.051345,0.060828,0.079415,0.116072", \
				        "0.041174,0.045052,0.050288,0.060217,0.079122,0.115987", \
				        "0.043689,0.046540,0.050721,0.059438,0.078057,0.115702", \
				        "0.058481,0.060968,0.064255,0.070500,0.083547,0.115700", \
				        "0.083723,0.086891,0.090883,0.098713,0.112984,0.138770", \
				        "0.123636,0.127950,0.133614,0.143862,0.162573,0.195573", \
				        "0.189501,0.195657,0.203328,0.217441,0.242700,0.286139");
			}
			rise_transition(Timing_X2) {
				values ("0.054572,0.063220,0.074777,0.097673,0.143162,0.233571", \
				        "0.054598,0.063242,0.074892,0.097670,0.143162,0.233523", \
				        "0.054598,0.063240,0.074869,0.097693,0.143153,0.233552", \
				        "0.054642,0.063304,0.074921,0.097732,0.143083,0.233563", \
				        "0.056376,0.064577,0.075738,0.098070,0.143138,0.233562", \
				        "0.068778,0.077011,0.087662,0.107764,0.148055,0.234102", \
				        "0.095391,0.103720,0.114588,0.135737,0.176849,0.255952", \
				        "0.150976,0.159004,0.169489,0.190396,0.231521,0.313201");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A2 & B1 & !B2 & C2 | !A1 & B1 & !B2 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.039424,0.044700,0.051585,0.064601,0.089132,0.135589", \
				        "0.042493,0.047724,0.054597,0.067574,0.092023,0.138374", \
				        "0.049164,0.054291,0.060775,0.073483,0.097917,0.144197", \
				        "0.063943,0.068865,0.074799,0.086529,0.110300,0.156207", \
				        "0.082984,0.089570,0.097569,0.111918,0.137119,0.181587", \
				        "0.102818,0.111101,0.121636,0.140512,0.173835,0.229981", \
				        "0.117857,0.128594,0.142111,0.166627,0.210470,0.284857", \
				        "0.119186,0.132555,0.149555,0.180861,0.237536,0.335005");
			}
			cell_rise(Timing_X2) {
				values ("0.161401,0.173194,0.188813,0.219765,0.281024,0.402470", \
				        "0.165158,0.176824,0.192434,0.223418,0.284725,0.406238", \
				        "0.172066,0.183776,0.199278,0.230309,0.291654,0.413275", \
				        "0.184238,0.196107,0.211694,0.242646,0.304034,0.425760", \
				        "0.205380,0.217158,0.232898,0.263775,0.325091,0.446761", \
				        "0.237138,0.250104,0.266900,0.299013,0.360618,0.482222", \
				        "0.278806,0.294085,0.313035,0.349804,0.419015,0.548030", \
				        "0.351869,0.370090,0.392107,0.435166,0.513921,0.658828");
			}
			fall_transition(Timing_X2) {
				values ("0.051806,0.055298,0.059811,0.068863,0.086971,0.123224", \
				        "0.051265,0.054800,0.059439,0.068625,0.086850,0.123201", \
				        "0.049673,0.053456,0.058366,0.067974,0.086558,0.123123", \
				        "0.052487,0.055202,0.059088,0.067363,0.085476,0.122804", \
				        "0.068781,0.070812,0.073453,0.078679,0.091352,0.122893", \
				        "0.098239,0.100537,0.103813,0.110110,0.122656,0.146517", \
				        "0.145013,0.148257,0.152402,0.160647,0.176699,0.206608", \
				        "0.221678,0.226149,0.232076,0.243148,0.264341,0.303171");
			}
			rise_transition(Timing_X2) {
				values ("0.078205,0.089088,0.103331,0.131235,0.186532,0.296113", \
				        "0.078217,0.089090,0.103316,0.131232,0.186544,0.296129", \
				        "0.078209,0.089093,0.103309,0.131240,0.186545,0.296129", \
				        "0.078271,0.089075,0.103254,0.131199,0.186548,0.296111", \
				        "0.078506,0.089272,0.103460,0.131227,0.186513,0.296115", \
				        "0.087478,0.097520,0.110415,0.135854,0.188144,0.296162", \
				        "0.110220,0.120487,0.134049,0.160153,0.210742,0.308840", \
				        "0.159795,0.169730,0.182969,0.208700,0.259572,0.359810");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & !A2 & !B1 & B2 & C2 | !A1 & A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.038998,0.044195,0.051103,0.064068,0.088619,0.134969", \
				        "0.042054,0.047224,0.054099,0.067037,0.091532,0.137795", \
				        "0.048778,0.053772,0.060285,0.073106,0.097380,0.143580", \
				        "0.063514,0.068354,0.074359,0.086114,0.109841,0.155645", \
				        "0.082333,0.088853,0.096822,0.111299,0.136565,0.180999", \
				        "0.101772,0.109955,0.120387,0.139401,0.172928,0.229188", \
				        "0.115592,0.126492,0.139981,0.164745,0.208855,0.283517", \
				        "0.114231,0.128134,0.145222,0.177095,0.234442,0.332474");
			}
			cell_rise(Timing_X2) {
				values ("0.138822,0.150599,0.166204,0.196955,0.257902,0.378968", \
				        "0.142487,0.154157,0.169773,0.200575,0.261596,0.382700", \
				        "0.149364,0.161087,0.176587,0.207422,0.268514,0.389756", \
				        "0.161626,0.173483,0.189066,0.219822,0.280896,0.402201", \
				        "0.182695,0.194603,0.210242,0.240987,0.301970,0.423228", \
				        "0.212038,0.225244,0.242550,0.275366,0.337562,0.458748", \
				        "0.248909,0.264925,0.284798,0.322690,0.393283,0.523826", \
				        "0.315674,0.335029,0.358513,0.403598,0.484742,0.631862");
			}
			fall_transition(Timing_X2) {
				values ("0.041994,0.045607,0.050436,0.059892,0.078487,0.115172", \
				        "0.041467,0.045138,0.050062,0.059705,0.078391,0.115160", \
				        "0.039931,0.043780,0.049030,0.059033,0.078072,0.115045", \
				        "0.043038,0.045756,0.049926,0.058506,0.077051,0.114767", \
				        "0.058208,0.060657,0.063959,0.070131,0.082992,0.114825", \
				        "0.083823,0.086987,0.091092,0.098712,0.112916,0.138516", \
				        "0.125027,0.129256,0.134691,0.144767,0.163247,0.195815", \
				        "0.193346,0.199124,0.206846,0.220639,0.245317,0.288011");
			}
			rise_transition(Timing_X2) {
				values ("0.066590,0.077186,0.091200,0.118653,0.173528,0.282471", \
				        "0.066601,0.077154,0.091208,0.118710,0.173548,0.282467", \
				        "0.066595,0.077181,0.091185,0.118706,0.173514,0.282471", \
				        "0.066612,0.077181,0.091212,0.118739,0.173516,0.282466", \
				        "0.067412,0.077738,0.091562,0.118800,0.173539,0.282457", \
				        "0.077918,0.087838,0.100565,0.125315,0.176146,0.282543", \
				        "0.101785,0.111761,0.124805,0.150330,0.200352,0.297370", \
				        "0.154922,0.164238,0.176460,0.201009,0.250306,0.348991");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.050799,0.055650,0.061975,0.074380,0.098047,0.143334", \
				        "0.053353,0.058300,0.064627,0.076972,0.100601,0.145917", \
				        "0.058336,0.063252,0.069623,0.081951,0.105554,0.150890", \
				        "0.068495,0.073363,0.079678,0.091946,0.115521,0.160759", \
				        "0.085219,0.090554,0.097384,0.110549,0.135041,0.180337", \
				        "0.105765,0.112492,0.121055,0.137039,0.165899,0.216791", \
				        "0.124027,0.132744,0.144097,0.165512,0.203306,0.267386", \
				        "0.127260,0.139901,0.155225,0.183897,0.234785,0.320968");
			}
			cell_rise(Timing_X2) {
				values ("0.177030,0.188759,0.204258,0.235190,0.296384,0.417778", \
				        "0.180931,0.192549,0.208010,0.238958,0.300154,0.421584", \
				        "0.188099,0.199764,0.215091,0.246088,0.307198,0.428680", \
				        "0.200571,0.212352,0.227841,0.258764,0.319971,0.441492", \
				        "0.221889,0.233654,0.249246,0.280114,0.341330,0.462822", \
				        "0.255234,0.267721,0.284135,0.315769,0.377042,0.498536", \
				        "0.299648,0.314605,0.332904,0.368965,0.437167,0.564906", \
				        "0.381178,0.398379,0.419364,0.460696,0.537284,0.679677");
			}
			fall_transition(Timing_X2) {
				values ("0.035316,0.039210,0.044374,0.053784,0.072464,0.109466", \
				        "0.035234,0.039128,0.044303,0.053747,0.072495,0.109404", \
				        "0.034818,0.038802,0.043940,0.053630,0.072429,0.109433", \
				        "0.034974,0.038729,0.043792,0.053344,0.072177,0.109407", \
				        "0.040657,0.044124,0.048970,0.057545,0.074212,0.109619", \
				        "0.054604,0.058273,0.063034,0.071545,0.087842,0.119818", \
				        "0.080481,0.084803,0.090442,0.100481,0.118311,0.150538", \
				        "0.122786,0.128971,0.136723,0.150193,0.173346,0.211937");
			}
			rise_transition(Timing_X2) {
				values ("0.087696,0.098526,0.112844,0.140865,0.196376,0.306237", \
				        "0.087711,0.098524,0.112848,0.140863,0.196405,0.306250", \
				        "0.087709,0.098552,0.112865,0.140942,0.196391,0.306268", \
				        "0.087701,0.098520,0.112770,0.140929,0.196403,0.306259", \
				        "0.087844,0.098632,0.112829,0.140926,0.196399,0.306214", \
				        "0.095431,0.105349,0.118402,0.144437,0.197506,0.306291", \
				        "0.117477,0.127960,0.141687,0.168081,0.218857,0.317566", \
				        "0.160819,0.171585,0.185688,0.212897,0.265541,0.367378");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.050799,0.055650,0.061975,0.074380,0.098047,0.143334", \
				        "0.053353,0.058300,0.064627,0.076972,0.100601,0.145917", \
				        "0.058336,0.063252,0.069623,0.081951,0.105554,0.150890", \
				        "0.068495,0.073363,0.079678,0.091946,0.115521,0.160759", \
				        "0.085219,0.090554,0.097384,0.110549,0.135041,0.180337", \
				        "0.105765,0.112492,0.121055,0.137039,0.165899,0.216791", \
				        "0.124027,0.132744,0.144097,0.165512,0.203306,0.267386", \
				        "0.127260,0.139901,0.155225,0.183897,0.234785,0.320968");
			}
			cell_rise(Timing_X2) {
				values ("0.123312,0.133391,0.146805,0.173247,0.225675,0.329907", \
				        "0.127156,0.137196,0.150487,0.177078,0.229520,0.333759", \
				        "0.134303,0.144355,0.157619,0.184055,0.236577,0.340839", \
				        "0.146912,0.157009,0.170466,0.196787,0.249277,0.353619", \
				        "0.168460,0.178720,0.192250,0.218713,0.271084,0.375389", \
				        "0.197852,0.209783,0.225194,0.254489,0.309267,0.413728", \
				        "0.234949,0.249880,0.268228,0.303219,0.367425,0.484174", \
				        "0.306970,0.325343,0.347188,0.389183,0.464337,0.598718");
			}
			fall_transition(Timing_X2) {
				values ("0.035316,0.039210,0.044374,0.053784,0.072464,0.109466", \
				        "0.035234,0.039128,0.044303,0.053747,0.072495,0.109404", \
				        "0.034818,0.038802,0.043940,0.053630,0.072429,0.109433", \
				        "0.034974,0.038729,0.043792,0.053344,0.072177,0.109407", \
				        "0.040657,0.044124,0.048970,0.057545,0.074212,0.109619", \
				        "0.054604,0.058273,0.063034,0.071545,0.087842,0.119818", \
				        "0.080481,0.084803,0.090442,0.100481,0.118311,0.150538", \
				        "0.122786,0.128971,0.136723,0.150193,0.173346,0.211937");
			}
			rise_transition(Timing_X2) {
				values ("0.062230,0.071042,0.082775,0.106093,0.152412,0.244559", \
				        "0.062223,0.071034,0.082763,0.106093,0.152355,0.244550", \
				        "0.062224,0.071015,0.082803,0.106065,0.152390,0.244559", \
				        "0.062239,0.071024,0.082716,0.106045,0.152402,0.244533", \
				        "0.063541,0.071890,0.083319,0.106241,0.152400,0.244564", \
				        "0.075924,0.083990,0.094645,0.115127,0.156650,0.244849", \
				        "0.102292,0.110530,0.121432,0.142848,0.184691,0.265247", \
				        "0.152599,0.160916,0.171818,0.193453,0.236289,0.320707");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A2 & !B1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.043890,0.049175,0.055983,0.069132,0.093646,0.140059", \
				        "0.046521,0.051819,0.058776,0.071635,0.096236,0.142653", \
				        "0.051728,0.056985,0.063845,0.076765,0.101209,0.147680", \
				        "0.062469,0.067645,0.074376,0.086974,0.111263,0.157506", \
				        "0.079053,0.084827,0.092204,0.105853,0.130984,0.177118", \
				        "0.098982,0.106236,0.115374,0.132056,0.161731,0.213625", \
				        "0.116207,0.125729,0.137732,0.159839,0.198715,0.264040", \
				        "0.119269,0.132249,0.148291,0.177703,0.229671,0.317265");
			}
			cell_rise(Timing_X2) {
				values ("0.131605,0.141215,0.154107,0.179457,0.229670,0.329432", \
				        "0.135479,0.145063,0.157832,0.183183,0.233450,0.333241", \
				        "0.142808,0.152481,0.165203,0.190553,0.240809,0.340654", \
				        "0.156476,0.166160,0.178968,0.204304,0.254540,0.354403", \
				        "0.180162,0.189876,0.202916,0.228280,0.278469,0.378328", \
				        "0.214213,0.225339,0.239866,0.267577,0.319539,0.419380", \
				        "0.256898,0.270827,0.288242,0.321290,0.382425,0.493820", \
				        "0.333006,0.350328,0.370791,0.410780,0.482906,0.612117");
			}
			fall_transition(Timing_X2) {
				values ("0.043432,0.047054,0.051766,0.061048,0.079502,0.116091", \
				        "0.043178,0.046767,0.051506,0.060942,0.079443,0.116052", \
				        "0.042290,0.045997,0.050928,0.060566,0.079276,0.116019", \
				        "0.042713,0.046107,0.050886,0.060086,0.078687,0.115872", \
				        "0.049663,0.052623,0.056779,0.064607,0.080958,0.115963", \
				        "0.065961,0.068926,0.072778,0.080322,0.095380,0.126376", \
				        "0.095918,0.099218,0.103768,0.112164,0.128056,0.158377", \
				        "0.144424,0.149137,0.155465,0.166611,0.186898,0.222404");
			}
			rise_transition(Timing_X2) {
				values ("0.062030,0.070828,0.082579,0.105632,0.151251,0.241944", \
				        "0.062027,0.070840,0.082579,0.105624,0.151257,0.241941", \
				        "0.062034,0.070836,0.082566,0.105629,0.151273,0.241944", \
				        "0.062076,0.070875,0.082583,0.105566,0.151279,0.241929", \
				        "0.063045,0.071594,0.083013,0.105739,0.151248,0.241946", \
				        "0.074774,0.082999,0.093650,0.113880,0.155171,0.242262", \
				        "0.099812,0.108632,0.119846,0.141549,0.183076,0.262433", \
				        "0.147768,0.156843,0.168612,0.191372,0.234817,0.318636");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A2 & B1 & !B2 & C1 | !A1 & B1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042951,0.048310,0.055153,0.068137,0.092639,0.139145", \
				        "0.045594,0.050879,0.057820,0.070673,0.095228,0.141661", \
				        "0.050828,0.056128,0.062931,0.075731,0.100196,0.146718", \
				        "0.061511,0.066784,0.073560,0.085917,0.110255,0.156553", \
				        "0.077941,0.083729,0.091106,0.104747,0.129937,0.176083", \
				        "0.097059,0.104440,0.113871,0.130575,0.160372,0.212465", \
				        "0.112993,0.122533,0.134752,0.157161,0.196422,0.262314", \
				        "0.112848,0.125991,0.142562,0.172321,0.225081,0.313676");
			}
			cell_rise(Timing_X2) {
				values ("0.177030,0.188759,0.204258,0.235190,0.296384,0.417778", \
				        "0.180931,0.192549,0.208010,0.238958,0.300154,0.421584", \
				        "0.188099,0.199764,0.215091,0.246088,0.307198,0.428680", \
				        "0.200571,0.212352,0.227841,0.258764,0.319971,0.441492", \
				        "0.221889,0.233654,0.249246,0.280114,0.341330,0.462822", \
				        "0.255234,0.267721,0.284135,0.315769,0.377042,0.498536", \
				        "0.299648,0.314605,0.332904,0.368965,0.437167,0.564906", \
				        "0.381178,0.398379,0.419364,0.460696,0.537284,0.679677");
			}
			fall_transition(Timing_X2) {
				values ("0.051779,0.055294,0.059805,0.068866,0.086966,0.123238", \
				        "0.051514,0.055017,0.059565,0.068742,0.086890,0.123201", \
				        "0.050700,0.054281,0.058981,0.068338,0.086704,0.123149", \
				        "0.051273,0.054583,0.059099,0.067950,0.086151,0.122957", \
				        "0.058926,0.061612,0.065372,0.072737,0.088592,0.123115", \
				        "0.077390,0.079813,0.083237,0.089819,0.103853,0.133837", \
				        "0.111888,0.114451,0.118018,0.124909,0.138968,0.167440", \
				        "0.168533,0.171889,0.176788,0.185797,0.203053,0.235231");
			}
			rise_transition(Timing_X2) {
				values ("0.087696,0.098526,0.112844,0.140865,0.196376,0.306237", \
				        "0.087711,0.098524,0.112848,0.140863,0.196405,0.306250", \
				        "0.087709,0.098552,0.112865,0.140942,0.196391,0.306268", \
				        "0.087701,0.098520,0.112770,0.140929,0.196403,0.306259", \
				        "0.087844,0.098632,0.112829,0.140926,0.196399,0.306214", \
				        "0.095431,0.105349,0.118402,0.144437,0.197506,0.306291", \
				        "0.117477,0.127960,0.141687,0.168081,0.218857,0.317566", \
				        "0.160819,0.171585,0.185688,0.212897,0.265541,0.367378");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & !A2 & !B1 & B2 & C1 | !A1 & A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042529,0.047798,0.054550,0.067631,0.092183,0.138530", \
				        "0.045167,0.050429,0.057252,0.070235,0.094681,0.141085", \
				        "0.050408,0.055655,0.062337,0.075264,0.099668,0.146096", \
				        "0.061097,0.066263,0.072917,0.085497,0.109715,0.155946", \
				        "0.077436,0.083167,0.090525,0.104218,0.129421,0.175496", \
				        "0.096253,0.103624,0.112926,0.129820,0.159711,0.211787", \
				        "0.111352,0.121122,0.133264,0.155849,0.195320,0.261350", \
				        "0.109922,0.123292,0.139761,0.169995,0.223102,0.312008");
			}
			cell_rise(Timing_X2) {
				values ("0.154578,0.166228,0.181782,0.212505,0.273535,0.394667", \
				        "0.158429,0.170013,0.185534,0.216246,0.277291,0.398468", \
				        "0.165580,0.177207,0.192555,0.223332,0.284377,0.405614", \
				        "0.178034,0.189771,0.205309,0.236032,0.297076,0.418359", \
				        "0.199346,0.211107,0.226705,0.257429,0.318443,0.439683", \
				        "0.230665,0.243435,0.260319,0.292568,0.354157,0.475396", \
				        "0.270888,0.286246,0.305363,0.342419,0.411917,0.541158", \
				        "0.347395,0.365579,0.387544,0.430451,0.508973,0.653271");
			}
			fall_transition(Timing_X2) {
				values ("0.041969,0.045665,0.050452,0.059903,0.078485,0.115156", \
				        "0.041709,0.045400,0.050213,0.059786,0.078413,0.115165", \
				        "0.040915,0.044662,0.049651,0.059393,0.078240,0.115094", \
				        "0.041645,0.045055,0.049798,0.059038,0.077667,0.114921", \
				        "0.049010,0.051941,0.056061,0.063916,0.080183,0.115077", \
				        "0.065703,0.068638,0.072507,0.079917,0.094882,0.125763", \
				        "0.096360,0.099643,0.104029,0.112352,0.128106,0.158188", \
				        "0.146377,0.150922,0.157284,0.168217,0.188168,0.223206");
			}
			rise_transition(Timing_X2) {
				values ("0.075927,0.086629,0.100731,0.128459,0.183603,0.292852", \
				        "0.075936,0.086630,0.100752,0.128481,0.183598,0.292876", \
				        "0.075989,0.086620,0.100701,0.128448,0.183588,0.292848", \
				        "0.075952,0.086642,0.100753,0.128465,0.183589,0.292870", \
				        "0.076337,0.086901,0.100932,0.128498,0.183582,0.292865", \
				        "0.085703,0.095626,0.108437,0.133663,0.185442,0.292939", \
				        "0.108235,0.118567,0.131975,0.158058,0.208521,0.306194", \
				        "0.153382,0.163768,0.177397,0.203978,0.255672,0.356582");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.001313,0.000592,-0.000377,-0.002294,-0.006159,-0.013885", \
				        "0.001321,0.000628,-0.000358,-0.002282,-0.006140,-0.013868", \
				        "0.001388,0.000650,-0.000298,-0.002231,-0.006104,-0.013825", \
				        "0.001543,0.000797,-0.000172,-0.002130,-0.006013,-0.013767", \
				        "0.002007,0.001208,0.000173,-0.001837,-0.005811,-0.013620", \
				        "0.003211,0.002330,0.001191,-0.000984,-0.005145,-0.013164", \
				        "0.006052,0.005086,0.003836,0.001423,-0.003142,-0.011647", \
				        "0.012323,0.011258,0.009871,0.007194,0.002108,-0.007321");
			}
			rise_power(Power_X2) {
				values ("0.008555,0.009275,0.010238,0.012190,0.016075,0.023842", \
				        "0.008525,0.009278,0.010239,0.012187,0.016071,0.023848", \
				        "0.008574,0.009312,0.010270,0.012218,0.016093,0.023856", \
				        "0.008737,0.009446,0.010411,0.012325,0.016175,0.023909", \
				        "0.009162,0.009854,0.010781,0.012659,0.016461,0.024111", \
				        "0.010152,0.010835,0.011738,0.013560,0.017255,0.024763", \
				        "0.012458,0.013083,0.013912,0.015643,0.019187,0.026472", \
				        "0.017664,0.018184,0.018889,0.020388,0.023607,0.030505");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !B2 & !C2 | A2 & !B1 & !C1";

			rise_power(Power_X2) {
				values ("0.005030,0.005751,0.006702,0.008670,0.012553,0.020296", \
				        "0.005010,0.005755,0.006721,0.008677,0.012552,0.020304", \
				        "0.005069,0.005814,0.006770,0.008716,0.012567,0.020302", \
				        "0.005272,0.005994,0.006935,0.008839,0.012667,0.020402", \
				        "0.005790,0.006465,0.007387,0.009225,0.012988,0.020604", \
				        "0.006948,0.007553,0.008444,0.010212,0.013843,0.021307", \
				        "0.009505,0.010037,0.010790,0.012424,0.015869,0.023067", \
				        "0.015138,0.015526,0.016101,0.017433,0.020461,0.027229");
			}
			fall_power(Power_X2) {
				values ("0.001310,0.000585,-0.000385,-0.002310,-0.006164,-0.013888", \
				        "0.001321,0.000604,-0.000364,-0.002288,-0.006144,-0.013868", \
				        "0.001375,0.000648,-0.000308,-0.002235,-0.006110,-0.013825", \
				        "0.001543,0.000797,-0.000172,-0.002134,-0.006020,-0.013767", \
				        "0.002007,0.001208,0.000173,-0.001837,-0.005811,-0.013620", \
				        "0.003211,0.002328,0.001186,-0.001001,-0.005160,-0.013167", \
				        "0.005933,0.004977,0.003711,0.001300,-0.003253,-0.011747", \
				        "0.011851,0.010767,0.009388,0.006728,0.001690,-0.007667");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.006604,0.007329,0.008285,0.010229,0.014126,0.021877", \
				        "0.006568,0.007314,0.008290,0.010229,0.014111,0.021858", \
				        "0.006636,0.007357,0.008327,0.010267,0.014137,0.021880", \
				        "0.006806,0.007525,0.008472,0.010380,0.014221,0.021940", \
				        "0.007284,0.007957,0.008898,0.010750,0.014532,0.022155", \
				        "0.008373,0.009006,0.009898,0.011692,0.015360,0.022840", \
				        "0.010797,0.011376,0.012163,0.013847,0.017358,0.024586", \
				        "0.016257,0.016683,0.017331,0.018734,0.021867,0.028672");
			}
			fall_power(Power_X2) {
				values ("0.001296,0.000589,-0.000377,-0.002303,-0.006159,-0.013885", \
				        "0.001319,0.000628,-0.000358,-0.002285,-0.006140,-0.013871", \
				        "0.001388,0.000647,-0.000306,-0.002240,-0.006107,-0.013833", \
				        "0.001539,0.000792,-0.000181,-0.002130,-0.006013,-0.013776", \
				        "0.001993,0.001198,0.000169,-0.001851,-0.005819,-0.013624", \
				        "0.003127,0.002263,0.001140,-0.001022,-0.005167,-0.013166", \
				        "0.005785,0.004858,0.003613,0.001235,-0.003293,-0.011752", \
				        "0.011622,0.010588,0.009226,0.006594,0.001588,-0.007709");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2 & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.007279,0.008000,0.008970,0.010919,0.014797,0.022582", \
				        "0.007283,0.007992,0.008970,0.010918,0.014803,0.022577", \
				        "0.007300,0.008037,0.008993,0.010941,0.014808,0.022578", \
				        "0.007493,0.008193,0.009150,0.011050,0.014904,0.022631", \
				        "0.007940,0.008634,0.009576,0.011435,0.015227,0.022860", \
				        "0.009076,0.009740,0.010620,0.012407,0.016092,0.023562", \
				        "0.011691,0.012264,0.013067,0.014724,0.018205,0.025431", \
				        "0.017625,0.018068,0.018693,0.020050,0.023107,0.029872");
			}
			fall_power(Power_X2) {
				values ("0.001313,0.000592,-0.000378,-0.002302,-0.006161,-0.013890", \
				        "0.001308,0.000604,-0.000359,-0.002284,-0.006145,-0.013875", \
				        "0.001332,0.000647,-0.000310,-0.002248,-0.006114,-0.013837", \
				        "0.001517,0.000784,-0.000198,-0.002142,-0.006027,-0.013773", \
				        "0.001976,0.001194,0.000167,-0.001857,-0.005816,-0.013634", \
				        "0.003203,0.002330,0.001191,-0.000984,-0.005145,-0.013164", \
				        "0.006052,0.005086,0.003836,0.001423,-0.003142,-0.011647", \
				        "0.012323,0.011258,0.009871,0.007194,0.002108,-0.007321");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.008555,0.009275,0.010238,0.012190,0.016075,0.023842", \
				        "0.008525,0.009278,0.010239,0.012187,0.016071,0.023848", \
				        "0.008574,0.009312,0.010270,0.012218,0.016093,0.023856", \
				        "0.008737,0.009446,0.010411,0.012325,0.016175,0.023909", \
				        "0.009162,0.009854,0.010781,0.012659,0.016461,0.024111", \
				        "0.010152,0.010835,0.011738,0.013560,0.017255,0.024763", \
				        "0.012458,0.013083,0.013912,0.015643,0.019187,0.026472", \
				        "0.017664,0.018184,0.018889,0.020388,0.023607,0.030505");
			}
			fall_power(Power_X2) {
				values ("0.001308,0.000584,-0.000377,-0.002294,-0.006164,-0.013895", \
				        "0.001320,0.000605,-0.000368,-0.002282,-0.006141,-0.013872", \
				        "0.001375,0.000650,-0.000298,-0.002231,-0.006104,-0.013840", \
				        "0.001535,0.000781,-0.000180,-0.002130,-0.006013,-0.013780", \
				        "0.001971,0.001190,0.000172,-0.001853,-0.005813,-0.013644", \
				        "0.003083,0.002204,0.001108,-0.001040,-0.005176,-0.013177", \
				        "0.005667,0.004735,0.003509,0.001160,-0.003318,-0.011768", \
				        "0.011370,0.010378,0.009043,0.006438,0.001485,-0.007770");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.001305,0.000581,-0.000374,-0.002304,-0.006167,-0.013901", \
				        "0.001279,0.000567,-0.000401,-0.002319,-0.006178,-0.013907", \
				        "0.001258,0.000542,-0.000420,-0.002338,-0.006190,-0.013926", \
				        "0.001280,0.000567,-0.000390,-0.002311,-0.006159,-0.013896", \
				        "0.001554,0.000802,-0.000190,-0.002155,-0.006056,-0.013793", \
				        "0.002446,0.001602,0.000516,-0.001593,-0.005637,-0.013537", \
				        "0.004814,0.003880,0.002663,0.000313,-0.004121,-0.012469", \
				        "0.010178,0.009165,0.007829,0.005201,0.000247,-0.008965");
			}
			rise_power(Power_X2) {
				values ("0.010056,0.010746,0.011726,0.013674,0.017564,0.025335", \
				        "0.010046,0.010778,0.011731,0.013670,0.017570,0.025335", \
				        "0.010064,0.010813,0.011775,0.013718,0.017598,0.025357", \
				        "0.010240,0.010967,0.011909,0.013835,0.017684,0.025419", \
				        "0.010669,0.011353,0.012296,0.014185,0.017996,0.025653", \
				        "0.011682,0.012381,0.013277,0.015106,0.018813,0.026319", \
				        "0.014020,0.014655,0.015500,0.017260,0.020818,0.028100", \
				        "0.019037,0.019578,0.020411,0.022019,0.025361,0.032297");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !B2 & !C1";

			rise_power(Power_X2) {
				values ("0.008098,0.008832,0.009784,0.011724,0.015611,0.023377", \
				        "0.008099,0.008825,0.009779,0.011734,0.015598,0.023360", \
				        "0.008177,0.008910,0.009839,0.011767,0.015631,0.023386", \
				        "0.008313,0.009044,0.009997,0.011911,0.015742,0.023472", \
				        "0.008833,0.009511,0.010440,0.012308,0.016098,0.023715", \
				        "0.009991,0.010665,0.011552,0.013350,0.017015,0.024472", \
				        "0.012619,0.013231,0.014070,0.015759,0.019217,0.026425", \
				        "0.018186,0.018755,0.019521,0.021072,0.024288,0.031068");
			}
			fall_power(Power_X2) {
				values ("0.001291,0.000574,-0.000392,-0.002320,-0.006170,-0.013907", \
				        "0.001263,0.000550,-0.000412,-0.002334,-0.006192,-0.013907", \
				        "0.001241,0.000522,-0.000440,-0.002357,-0.006211,-0.013943", \
				        "0.001254,0.000542,-0.000415,-0.002334,-0.006186,-0.013920", \
				        "0.001520,0.000756,-0.000229,-0.002189,-0.006077,-0.013823", \
				        "0.002446,0.001596,0.000516,-0.001594,-0.005652,-0.013548", \
				        "0.004814,0.003880,0.002663,0.000313,-0.004121,-0.012472", \
				        "0.010178,0.009165,0.007829,0.005201,0.000247,-0.008965");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2 & C1 & !C2 | A1 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.008092,0.008816,0.009784,0.011726,0.015602,0.023363", \
				        "0.008101,0.008821,0.009790,0.011731,0.015602,0.023351", \
				        "0.008141,0.008867,0.009837,0.011765,0.015630,0.023381", \
				        "0.008307,0.009023,0.009981,0.011889,0.015731,0.023485", \
				        "0.008786,0.009480,0.010414,0.012268,0.016048,0.023687", \
				        "0.009869,0.010525,0.011437,0.013246,0.016913,0.024383", \
				        "0.012258,0.012895,0.013728,0.015446,0.018961,0.026190", \
				        "0.017426,0.017932,0.018727,0.020310,0.023581,0.030425");
			}
			fall_power(Power_X2) {
				values ("0.001299,0.000574,-0.000386,-0.002304,-0.006176,-0.013903", \
				        "0.001279,0.000567,-0.000403,-0.002324,-0.006181,-0.013913", \
				        "0.001258,0.000542,-0.000424,-0.002341,-0.006195,-0.013926", \
				        "0.001279,0.000567,-0.000397,-0.002320,-0.006161,-0.013896", \
				        "0.001554,0.000802,-0.000190,-0.002155,-0.006056,-0.013799", \
				        "0.002438,0.001602,0.000506,-0.001593,-0.005637,-0.013537", \
				        "0.004598,0.003713,0.002501,0.000193,-0.004205,-0.012523", \
				        "0.009555,0.008581,0.007248,0.004691,-0.000151,-0.009256");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2 & !C1 & !C2";

			rise_power(Power_X2) {
				values ("0.008771,0.009488,0.010421,0.012394,0.016301,0.024052", \
				        "0.008766,0.009502,0.010454,0.012396,0.016287,0.024063", \
				        "0.008815,0.009539,0.010497,0.012437,0.016295,0.024073", \
				        "0.008928,0.009692,0.010652,0.012564,0.016412,0.024133", \
				        "0.009462,0.010161,0.011084,0.012953,0.016735,0.024386", \
				        "0.010579,0.011269,0.012154,0.013968,0.017659,0.025128", \
				        "0.013181,0.013795,0.014630,0.016338,0.019847,0.027073", \
				        "0.018759,0.019276,0.020073,0.021615,0.024876,0.031672");
			}
			fall_power(Power_X2) {
				values ("0.001277,0.000581,-0.000385,-0.002309,-0.006167,-0.013901", \
				        "0.001266,0.000558,-0.000401,-0.002325,-0.006179,-0.013913", \
				        "0.001241,0.000523,-0.000428,-0.002344,-0.006197,-0.013950", \
				        "0.001262,0.000550,-0.000395,-0.002326,-0.006179,-0.013911", \
				        "0.001526,0.000770,-0.000223,-0.002186,-0.006078,-0.013819", \
				        "0.002431,0.001593,0.000506,-0.001598,-0.005661,-0.013546", \
				        "0.004791,0.003845,0.002641,0.000306,-0.004135,-0.012469", \
				        "0.010163,0.009138,0.007788,0.005168,0.000217,-0.008972");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.010056,0.010746,0.011726,0.013674,0.017564,0.025335", \
				        "0.010046,0.010778,0.011731,0.013670,0.017570,0.025335", \
				        "0.010064,0.010813,0.011775,0.013718,0.017598,0.025357", \
				        "0.010240,0.010967,0.011909,0.013835,0.017684,0.025419", \
				        "0.010669,0.011353,0.012296,0.014185,0.017996,0.025653", \
				        "0.011682,0.012381,0.013277,0.015106,0.018813,0.026319", \
				        "0.014020,0.014655,0.015500,0.017260,0.020818,0.028100", \
				        "0.019037,0.019578,0.020411,0.022019,0.025361,0.032297");
			}
			fall_power(Power_X2) {
				values ("0.001305,0.000577,-0.000374,-0.002308,-0.006169,-0.013908", \
				        "0.001268,0.000555,-0.000402,-0.002319,-0.006178,-0.013915", \
				        "0.001242,0.000534,-0.000420,-0.002338,-0.006190,-0.013933", \
				        "0.001280,0.000566,-0.000390,-0.002311,-0.006159,-0.013904", \
				        "0.001542,0.000787,-0.000204,-0.002164,-0.006058,-0.013793", \
				        "0.002364,0.001546,0.000472,-0.001611,-0.005650,-0.013538", \
				        "0.004507,0.003593,0.002415,0.000122,-0.004242,-0.012546", \
				        "0.009397,0.008403,0.007109,0.004572,-0.000263,-0.009307");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X2) {
				values ("0.005327,0.004597,0.003634,0.001715,-0.002139,-0.009848", \
				        "0.005316,0.004597,0.003629,0.001711,-0.002138,-0.009845", \
				        "0.005319,0.004593,0.003631,0.001720,-0.002122,-0.009836", \
				        "0.005373,0.004657,0.003694,0.001765,-0.002095,-0.009816", \
				        "0.005603,0.004878,0.003902,0.001948,-0.001960,-0.009712", \
				        "0.006500,0.005701,0.004664,0.002612,-0.001419,-0.009328", \
				        "0.008789,0.007940,0.006821,0.004618,0.000343,-0.007906", \
				        "0.014108,0.013182,0.011952,0.009563,0.004950,-0.003883");
			}
			rise_power(Power_X2) {
				values ("0.009376,0.010112,0.011098,0.013055,0.016919,0.024698", \
				        "0.009331,0.010099,0.011074,0.013031,0.016909,0.024669", \
				        "0.009302,0.010037,0.011004,0.012969,0.016874,0.024631", \
				        "0.009216,0.009984,0.010947,0.012909,0.016805,0.024591", \
				        "0.009204,0.009952,0.010920,0.012874,0.016763,0.024561", \
				        "0.009391,0.010116,0.011083,0.013002,0.016864,0.024593", \
				        "0.010637,0.011315,0.012203,0.014010,0.017730,0.025283", \
				        "0.014691,0.015164,0.015880,0.017452,0.020811,0.027896");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.008093,0.008834,0.009813,0.011758,0.015635,0.023390", \
				        "0.008047,0.008803,0.009790,0.011736,0.015621,0.023382", \
				        "0.008005,0.008739,0.009713,0.011668,0.015573,0.023345", \
				        "0.007960,0.008688,0.009656,0.011623,0.015527,0.023305", \
				        "0.007924,0.008655,0.009632,0.011588,0.015477,0.023263", \
				        "0.008208,0.008933,0.009891,0.011786,0.015636,0.023368", \
				        "0.009790,0.010414,0.011261,0.013021,0.016683,0.024174", \
				        "0.014450,0.014915,0.015587,0.017033,0.020208,0.027136");
			}
			fall_power(Power_X2) {
				values ("0.005288,0.004577,0.003621,0.001699,-0.002151,-0.009862", \
				        "0.005297,0.004569,0.003609,0.001691,-0.002168,-0.009867", \
				        "0.005279,0.004566,0.003606,0.001690,-0.002157,-0.009860", \
				        "0.005342,0.004621,0.003669,0.001731,-0.002131,-0.009850", \
				        "0.005603,0.004863,0.003888,0.001921,-0.001988,-0.009757", \
				        "0.006500,0.005701,0.004664,0.002612,-0.001419,-0.009328", \
				        "0.008789,0.007940,0.006821,0.004618,0.000343,-0.007906", \
				        "0.014108,0.013182,0.011952,0.009563,0.004950,-0.003883");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A2 & B2 & C1 & !C2 | !A1 & B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.009376,0.010112,0.011098,0.013055,0.016919,0.024698", \
				        "0.009331,0.010099,0.011074,0.013031,0.016909,0.024669", \
				        "0.009302,0.010037,0.011004,0.012969,0.016874,0.024631", \
				        "0.009216,0.009984,0.010947,0.012909,0.016805,0.024591", \
				        "0.009204,0.009952,0.010920,0.012874,0.016763,0.024561", \
				        "0.009391,0.010116,0.011083,0.013002,0.016864,0.024593", \
				        "0.010637,0.011315,0.012203,0.014010,0.017730,0.025283", \
				        "0.014691,0.015164,0.015880,0.017452,0.020811,0.027896");
			}
			fall_power(Power_X2) {
				values ("0.005327,0.004597,0.003634,0.001715,-0.002139,-0.009848", \
				        "0.005313,0.004576,0.003625,0.001709,-0.002138,-0.009845", \
				        "0.005319,0.004584,0.003628,0.001720,-0.002122,-0.009836", \
				        "0.005368,0.004657,0.003694,0.001765,-0.002095,-0.009816", \
				        "0.005600,0.004877,0.003896,0.001940,-0.001963,-0.009712", \
				        "0.006416,0.005636,0.004600,0.002577,-0.001435,-0.009335", \
				        "0.008531,0.007686,0.006589,0.004402,0.000178,-0.008023", \
				        "0.013370,0.012472,0.011235,0.008943,0.004396,-0.004352");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2 & !C1 & C2 | !A1 & A2 & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.007806,0.008554,0.009535,0.011472,0.015360,0.023109", \
				        "0.007781,0.008531,0.009510,0.011461,0.015350,0.023109", \
				        "0.007732,0.008474,0.009442,0.011399,0.015292,0.023070", \
				        "0.007679,0.008411,0.009383,0.011347,0.015250,0.023028", \
				        "0.007622,0.008374,0.009349,0.011308,0.015198,0.022975", \
				        "0.007865,0.008574,0.009531,0.011449,0.015312,0.023046", \
				        "0.009212,0.009856,0.010722,0.012520,0.016196,0.023732", \
				        "0.013380,0.013873,0.014565,0.016079,0.019350,0.026400");
			}
			fall_power(Power_X2) {
				values ("0.005295,0.004592,0.003627,0.001712,-0.002143,-0.009849", \
				        "0.005316,0.004597,0.003629,0.001711,-0.002140,-0.009847", \
				        "0.005318,0.004593,0.003631,0.001719,-0.002129,-0.009837", \
				        "0.005373,0.004656,0.003691,0.001762,-0.002100,-0.009830", \
				        "0.005603,0.004878,0.003902,0.001948,-0.001960,-0.009723", \
				        "0.006425,0.005647,0.004617,0.002580,-0.001436,-0.009331", \
				        "0.008543,0.007692,0.006593,0.004418,0.000182,-0.008021", \
				        "0.013403,0.012507,0.011299,0.008956,0.004410,-0.004338");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X2) {
				values ("0.005322,0.004604,0.003641,0.001716,-0.002144,-0.009868", \
				        "0.005312,0.004587,0.003626,0.001703,-0.002158,-0.009878", \
				        "0.005283,0.004573,0.003600,0.001678,-0.002182,-0.009911", \
				        "0.005257,0.004550,0.003592,0.001670,-0.002199,-0.009928", \
				        "0.005336,0.004591,0.003644,0.001717,-0.002137,-0.009861", \
				        "0.005768,0.005030,0.004021,0.002046,-0.001880,-0.009677", \
				        "0.007412,0.006591,0.005508,0.003391,-0.000748,-0.008802", \
				        "0.011607,0.010723,0.009529,0.007217,0.002741,-0.005850");
			}
			rise_power(Power_X2) {
				values ("0.011247,0.012000,0.012979,0.014921,0.018801,0.026567", \
				        "0.011232,0.011983,0.012955,0.014908,0.018786,0.026539", \
				        "0.011220,0.011944,0.012917,0.014863,0.018750,0.026522", \
				        "0.011173,0.011916,0.012878,0.014829,0.018716,0.026488", \
				        "0.011141,0.011875,0.012850,0.014802,0.018700,0.026491", \
				        "0.011305,0.012052,0.013008,0.014934,0.018803,0.026550", \
				        "0.012541,0.013192,0.014093,0.015937,0.019670,0.027222", \
				        "0.016224,0.016808,0.017657,0.019354,0.022796,0.029929");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.008128,0.008862,0.009859,0.011801,0.015673,0.023428", \
				        "0.008104,0.008858,0.009841,0.011785,0.015657,0.023429", \
				        "0.008088,0.008831,0.009797,0.011741,0.015632,0.023396", \
				        "0.008040,0.008795,0.009751,0.011697,0.015590,0.023361", \
				        "0.008006,0.008751,0.009726,0.011681,0.015563,0.023340", \
				        "0.008211,0.008959,0.009908,0.011827,0.015664,0.023414", \
				        "0.009608,0.010259,0.011137,0.012935,0.016609,0.024132", \
				        "0.013558,0.014118,0.014923,0.016534,0.019886,0.026946");
			}
			fall_power(Power_X2) {
				values ("0.005322,0.004604,0.003635,0.001715,-0.002150,-0.009880", \
				        "0.005292,0.004587,0.003621,0.001693,-0.002158,-0.009885", \
				        "0.005269,0.004573,0.003597,0.001672,-0.002185,-0.009920", \
				        "0.005257,0.004542,0.003590,0.001667,-0.002202,-0.009929", \
				        "0.005336,0.004591,0.003642,0.001717,-0.002137,-0.009861", \
				        "0.005767,0.005030,0.004021,0.002046,-0.001880,-0.009679", \
				        "0.007274,0.006462,0.005401,0.003303,-0.000811,-0.008849", \
				        "0.011123,0.010241,0.009092,0.006802,0.002403,-0.006125");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";

			rise_power(Power_X2) {
				values ("0.009967,0.010718,0.011700,0.013643,0.017521,0.025285", \
				        "0.009946,0.010702,0.011680,0.013624,0.017510,0.025269", \
				        "0.009926,0.010665,0.011624,0.013576,0.017470,0.025244", \
				        "0.009903,0.010634,0.011596,0.013547,0.017449,0.025217", \
				        "0.009878,0.010599,0.011577,0.013513,0.017419,0.025200", \
				        "0.010134,0.010848,0.011800,0.013742,0.017568,0.025306", \
				        "0.011576,0.012280,0.013129,0.014939,0.018621,0.026133", \
				        "0.015817,0.016401,0.017195,0.018798,0.022170,0.029203");
			}
			fall_power(Power_X2) {
				values ("0.005302,0.004591,0.003634,0.001701,-0.002162,-0.009881", \
				        "0.005303,0.004565,0.003612,0.001680,-0.002174,-0.009898", \
				        "0.005255,0.004539,0.003578,0.001650,-0.002215,-0.009943", \
				        "0.005223,0.004512,0.003558,0.001638,-0.002234,-0.009959", \
				        "0.005299,0.004555,0.003608,0.001686,-0.002178,-0.009897", \
				        "0.005760,0.005004,0.004007,0.002028,-0.001904,-0.009700", \
				        "0.007412,0.006591,0.005508,0.003391,-0.000748,-0.008802", \
				        "0.011607,0.010723,0.009529,0.007217,0.002741,-0.005850");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.011247,0.012000,0.012979,0.014921,0.018801,0.026567", \
				        "0.011232,0.011983,0.012955,0.014908,0.018786,0.026539", \
				        "0.011220,0.011944,0.012917,0.014863,0.018750,0.026522", \
				        "0.011173,0.011916,0.012878,0.014829,0.018716,0.026488", \
				        "0.011141,0.011875,0.012850,0.014802,0.018700,0.026491", \
				        "0.011305,0.012052,0.013008,0.014934,0.018803,0.026550", \
				        "0.012541,0.013192,0.014093,0.015937,0.019670,0.027222", \
				        "0.016224,0.016808,0.017657,0.019354,0.022796,0.029929");
			}
			fall_power(Power_X2) {
				values ("0.005302,0.004591,0.003641,0.001716,-0.002144,-0.009868", \
				        "0.005312,0.004563,0.003626,0.001703,-0.002158,-0.009878", \
				        "0.005283,0.004565,0.003600,0.001678,-0.002182,-0.009911", \
				        "0.005242,0.004550,0.003592,0.001670,-0.002199,-0.009928", \
				        "0.005319,0.004580,0.003644,0.001716,-0.002146,-0.009863", \
				        "0.005768,0.005012,0.004018,0.002037,-0.001884,-0.009677", \
				        "0.007265,0.006453,0.005389,0.003291,-0.000815,-0.008838", \
				        "0.011082,0.010217,0.009058,0.006782,0.002373,-0.006133");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X2) {
				values ("0.008615,0.007894,0.006936,0.005034,0.001223,-0.006437", \
				        "0.008589,0.007868,0.006912,0.005009,0.001195,-0.006461", \
				        "0.008555,0.007847,0.006889,0.004991,0.001178,-0.006477", \
				        "0.008602,0.007872,0.006906,0.005007,0.001187,-0.006487", \
				        "0.008774,0.008052,0.007096,0.005163,0.001291,-0.006414", \
				        "0.009510,0.008739,0.007733,0.005742,0.001792,-0.006037", \
				        "0.011564,0.010768,0.009703,0.007576,0.003408,-0.004706", \
				        "0.016789,0.015914,0.014739,0.012419,0.007917,-0.000780");
			}
			rise_power(Power_X2) {
				values ("0.010754,0.011501,0.012477,0.014423,0.018304,0.026064", \
				        "0.010735,0.011474,0.012456,0.014410,0.018296,0.026062", \
				        "0.010722,0.011456,0.012440,0.014399,0.018279,0.026067", \
				        "0.010652,0.011415,0.012388,0.014345,0.018241,0.026012", \
				        "0.010646,0.011387,0.012363,0.014312,0.018208,0.025991", \
				        "0.010636,0.011383,0.012353,0.014298,0.018187,0.025967", \
				        "0.011254,0.011947,0.012869,0.014749,0.018555,0.026237", \
				        "0.014741,0.015317,0.016049,0.017650,0.021027,0.028240");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";

			rise_power(Power_X2) {
				values ("0.007649,0.008372,0.009334,0.011303,0.015186,0.022936", \
				        "0.007599,0.008338,0.009320,0.011278,0.015161,0.022923", \
				        "0.007574,0.008324,0.009302,0.011258,0.015153,0.022921", \
				        "0.007551,0.008295,0.009261,0.011229,0.015114,0.022888", \
				        "0.007523,0.008271,0.009242,0.011187,0.015078,0.022849", \
				        "0.007534,0.008266,0.009238,0.011179,0.015064,0.022825", \
				        "0.008448,0.009070,0.009951,0.011772,0.015517,0.023163", \
				        "0.012691,0.013128,0.013802,0.015222,0.018403,0.025411");
			}
			fall_power(Power_X2) {
				values ("0.008615,0.007894,0.006936,0.005034,0.001223,-0.006437", \
				        "0.008589,0.007868,0.006912,0.005009,0.001195,-0.006461", \
				        "0.008555,0.007847,0.006889,0.004991,0.001178,-0.006477", \
				        "0.008602,0.007872,0.006906,0.005007,0.001187,-0.006487", \
				        "0.008774,0.008052,0.007096,0.005163,0.001291,-0.006414", \
				        "0.009510,0.008739,0.007733,0.005742,0.001792,-0.006037", \
				        "0.011564,0.010768,0.009703,0.007576,0.003408,-0.004706", \
				        "0.016789,0.015914,0.014739,0.012419,0.007917,-0.000780");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A2 & !B1 & !B2 & C2";

			rise_power(Power_X2) {
				values ("0.009166,0.009876,0.010877,0.012814,0.016695,0.024461", \
				        "0.009115,0.009848,0.010845,0.012790,0.016675,0.024445", \
				        "0.009097,0.009837,0.010830,0.012783,0.016677,0.024454", \
				        "0.009065,0.009811,0.010773,0.012706,0.016624,0.024402", \
				        "0.009034,0.009784,0.010750,0.012706,0.016598,0.024371", \
				        "0.009038,0.009778,0.010747,0.012700,0.016575,0.024346", \
				        "0.009847,0.010520,0.011419,0.013270,0.017017,0.024674", \
				        "0.013889,0.014384,0.015075,0.016574,0.019843,0.026910");
			}
			fall_power(Power_X2) {
				values ("0.008463,0.007763,0.006808,0.004915,0.001099,-0.006551", \
				        "0.008420,0.007731,0.006779,0.004889,0.001075,-0.006584", \
				        "0.008421,0.007718,0.006756,0.004868,0.001058,-0.006602", \
				        "0.008454,0.007738,0.006780,0.004880,0.001062,-0.006607", \
				        "0.008619,0.007912,0.006952,0.005017,0.001159,-0.006547", \
				        "0.009367,0.008612,0.007594,0.005597,0.001636,-0.006183", \
				        "0.011485,0.010647,0.009585,0.007448,0.003259,-0.004865", \
				        "0.016733,0.015855,0.014659,0.012316,0.007793,-0.000931");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A2 & B1 & !B2 & C2 | !A1 & B1 & !B2 & C2";

			rise_power(Power_X2) {
				values ("0.010754,0.011501,0.012477,0.014423,0.018304,0.026064", \
				        "0.010735,0.011474,0.012456,0.014410,0.018296,0.026062", \
				        "0.010722,0.011456,0.012440,0.014399,0.018279,0.026067", \
				        "0.010652,0.011415,0.012388,0.014345,0.018241,0.026012", \
				        "0.010646,0.011387,0.012363,0.014312,0.018208,0.025991", \
				        "0.010636,0.011383,0.012353,0.014298,0.018187,0.025967", \
				        "0.011254,0.011947,0.012869,0.014749,0.018555,0.026237", \
				        "0.014741,0.015317,0.016049,0.017650,0.021027,0.028240");
			}
			fall_power(Power_X2) {
				values ("0.008338,0.007642,0.006704,0.004805,0.000999,-0.006654", \
				        "0.008331,0.007615,0.006670,0.004778,0.000968,-0.006684", \
				        "0.008299,0.007595,0.006645,0.004752,0.000947,-0.006698", \
				        "0.008331,0.007614,0.006664,0.004761,0.000945,-0.006728", \
				        "0.008492,0.007780,0.006817,0.004882,0.001032,-0.006670", \
				        "0.009198,0.008419,0.007425,0.005414,0.001481,-0.006322", \
				        "0.011220,0.010417,0.009333,0.007202,0.003032,-0.005082", \
				        "0.016314,0.015437,0.014235,0.011900,0.007380,-0.001299");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & !A2 & !B1 & B2 & C2 | !A1 & A2 & !B1 & B2 & C2";

			rise_power(Power_X2) {
				values ("0.008799,0.009537,0.010526,0.012467,0.016344,0.024109", \
				        "0.008773,0.009511,0.010505,0.012454,0.016332,0.024101", \
				        "0.008754,0.009498,0.010488,0.012446,0.016333,0.024098", \
				        "0.008738,0.009462,0.010441,0.012390,0.016286,0.024052", \
				        "0.008690,0.009441,0.010408,0.012362,0.016252,0.024130", \
				        "0.008686,0.009432,0.010406,0.012354,0.016231,0.023996", \
				        "0.009399,0.010068,0.010987,0.012832,0.016616,0.024273", \
				        "0.013199,0.013715,0.014395,0.015916,0.019220,0.026326");
			}
			fall_power(Power_X2) {
				values ("0.008347,0.007650,0.006699,0.004803,0.000999,-0.006648", \
				        "0.008344,0.007623,0.006673,0.004777,0.000973,-0.006677", \
				        "0.008325,0.007597,0.006645,0.004748,0.000941,-0.006711", \
				        "0.008336,0.007617,0.006661,0.004760,0.000948,-0.006715", \
				        "0.008506,0.007785,0.006816,0.004886,0.001029,-0.006672", \
				        "0.009210,0.008433,0.007431,0.005431,0.001480,-0.006325", \
				        "0.011266,0.010422,0.009343,0.007204,0.003035,-0.005085", \
				        "0.016370,0.015438,0.014250,0.011913,0.007389,-0.001295");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X2) {
				values ("0.008600,0.007879,0.006930,0.005016,0.001201,-0.006472", \
				        "0.008576,0.007870,0.006904,0.004987,0.001159,-0.006521", \
				        "0.008555,0.007842,0.006888,0.004962,0.001125,-0.006571", \
				        "0.008520,0.007829,0.006870,0.004962,0.001127,-0.006570", \
				        "0.008624,0.007891,0.006947,0.005016,0.001171,-0.006521", \
				        "0.009035,0.008295,0.007316,0.005362,0.001459,-0.006309", \
				        "0.010558,0.009757,0.008707,0.006638,0.002576,-0.005419", \
				        "0.014653,0.013767,0.012621,0.010373,0.005984,-0.002494");
			}
			rise_power(Power_X2) {
				values ("0.012273,0.012965,0.013953,0.015895,0.019774,0.027545", \
				        "0.012213,0.012962,0.013944,0.015877,0.019770,0.027523", \
				        "0.012214,0.012970,0.013941,0.015890,0.019768,0.027526", \
				        "0.012213,0.012931,0.013903,0.015863,0.019746,0.027523", \
				        "0.012216,0.012942,0.013896,0.015849,0.019740,0.027512", \
				        "0.012206,0.012933,0.013907,0.015844,0.019728,0.027502", \
				        "0.012717,0.013443,0.014381,0.016279,0.020093,0.027789", \
				        "0.015914,0.016571,0.017368,0.019085,0.022588,0.029854");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";

			rise_power(Power_X2) {
				values ("0.009137,0.009888,0.010853,0.012783,0.016661,0.024422", \
				        "0.009119,0.009850,0.010831,0.012767,0.016644,0.024388", \
				        "0.009103,0.009837,0.010827,0.012766,0.016653,0.024401", \
				        "0.009096,0.009829,0.010807,0.012748,0.016631,0.024387", \
				        "0.009082,0.009824,0.010786,0.012731,0.016614,0.024373", \
				        "0.009083,0.009812,0.010795,0.012738,0.016611,0.024373", \
				        "0.009781,0.010519,0.011409,0.013274,0.017040,0.024691", \
				        "0.013621,0.014119,0.014902,0.016531,0.019911,0.027026");
			}
			fall_power(Power_X2) {
				values ("0.008600,0.007879,0.006930,0.005016,0.001201,-0.006472", \
				        "0.008576,0.007870,0.006904,0.004987,0.001159,-0.006521", \
				        "0.008555,0.007842,0.006888,0.004962,0.001125,-0.006571", \
				        "0.008520,0.007829,0.006870,0.004962,0.001127,-0.006570", \
				        "0.008624,0.007891,0.006947,0.005016,0.001171,-0.006521", \
				        "0.009035,0.008295,0.007316,0.005362,0.001459,-0.006309", \
				        "0.010558,0.009757,0.008707,0.006638,0.002576,-0.005419", \
				        "0.014653,0.013767,0.012621,0.010373,0.005984,-0.002494");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A2 & !B1 & !B2 & C1";

			rise_power(Power_X2) {
				values ("0.010656,0.011366,0.012359,0.014281,0.018172,0.025930", \
				        "0.010638,0.011359,0.012345,0.014275,0.018164,0.025913", \
				        "0.010622,0.011363,0.012352,0.014292,0.018171,0.025922", \
				        "0.010612,0.011329,0.012305,0.014259,0.018132,0.025890", \
				        "0.010587,0.011350,0.012298,0.014234,0.018130,0.025896", \
				        "0.010598,0.011341,0.012292,0.014238,0.018134,0.025888", \
				        "0.011261,0.011971,0.012900,0.014775,0.018574,0.026197", \
				        "0.014875,0.015484,0.016244,0.017916,0.021351,0.028492");
			}
			fall_power(Power_X2) {
				values ("0.008454,0.007754,0.006804,0.004893,0.001074,-0.006595", \
				        "0.008436,0.007730,0.006773,0.004862,0.001036,-0.006646", \
				        "0.008409,0.007705,0.006748,0.004834,0.001001,-0.006690", \
				        "0.008392,0.007689,0.006747,0.004831,0.000992,-0.006695", \
				        "0.008473,0.007752,0.006800,0.004882,0.001039,-0.006658", \
				        "0.008899,0.008168,0.007173,0.005212,0.001306,-0.006440", \
				        "0.010412,0.009648,0.008579,0.006508,0.002423,-0.005573", \
				        "0.014566,0.013687,0.012541,0.010265,0.005851,-0.002649");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A2 & B1 & !B2 & C1 | !A1 & B1 & !B2 & C1";

			rise_power(Power_X2) {
				values ("0.012273,0.012965,0.013953,0.015895,0.019774,0.027545", \
				        "0.012213,0.012962,0.013944,0.015877,0.019770,0.027523", \
				        "0.012214,0.012970,0.013941,0.015890,0.019768,0.027526", \
				        "0.012213,0.012931,0.013903,0.015863,0.019746,0.027523", \
				        "0.012216,0.012942,0.013896,0.015849,0.019740,0.027512", \
				        "0.012206,0.012933,0.013907,0.015844,0.019728,0.027502", \
				        "0.012717,0.013443,0.014381,0.016279,0.020093,0.027789", \
				        "0.015914,0.016571,0.017368,0.019085,0.022588,0.029854");
			}
			fall_power(Power_X2) {
				values ("0.008360,0.007648,0.006697,0.004791,0.000966,-0.006697", \
				        "0.008312,0.007620,0.006666,0.004756,0.000936,-0.006740", \
				        "0.008299,0.007591,0.006633,0.004718,0.000893,-0.006800", \
				        "0.008277,0.007578,0.006631,0.004720,0.000882,-0.006802", \
				        "0.008371,0.007634,0.006676,0.004763,0.000914,-0.006766", \
				        "0.008743,0.008015,0.007043,0.005076,0.001171,-0.006577", \
				        "0.010215,0.009423,0.008375,0.006302,0.002231,-0.005739", \
				        "0.014218,0.013352,0.012207,0.009941,0.005536,-0.002944");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & !A2 & !B1 & B2 & C1 | !A1 & A2 & !B1 & B2 & C1";

			rise_power(Power_X2) {
				values ("0.010308,0.011033,0.012006,0.013953,0.017826,0.025564", \
				        "0.010335,0.011023,0.012000,0.013941,0.017821,0.025572", \
				        "0.010279,0.011015,0.012002,0.013938,0.017813,0.025582", \
				        "0.010275,0.011001,0.011968,0.013920,0.017791,0.025570", \
				        "0.010246,0.010982,0.011959,0.013904,0.017793,0.025547", \
				        "0.010251,0.010984,0.011955,0.013895,0.017770,0.025547", \
				        "0.010834,0.011549,0.012473,0.014367,0.018136,0.025812", \
				        "0.014256,0.014814,0.015627,0.017299,0.020745,0.027958");
			}
			fall_power(Power_X2) {
				values ("0.008344,0.007631,0.006694,0.004791,0.000972,-0.006691", \
				        "0.008329,0.007613,0.006659,0.004755,0.000932,-0.006739", \
				        "0.008307,0.007593,0.006628,0.004717,0.000892,-0.006800", \
				        "0.008284,0.007578,0.006622,0.004714,0.000884,-0.006800", \
				        "0.008355,0.007615,0.006678,0.004765,0.000921,-0.006761", \
				        "0.008758,0.008004,0.007041,0.005076,0.001177,-0.006572", \
				        "0.010228,0.009443,0.008381,0.006308,0.002237,-0.005758", \
				        "0.014233,0.013382,0.012219,0.009946,0.005540,-0.002976");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI222_X4
 Cell Description	: Combinational cell (AOI222_X4) with drive strength X4
*******************************************************************************************/

cell (AOI222_X4) {

	area               	: 3.724000;

	cell_leakage_power 	: 59434.594063;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 13098.460000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 13809.960000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 13809.970000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 14521.710000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 39380.380000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 41952.160000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 40091.850000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 59873.060000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 39380.220000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 40091.670000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 49719.770000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 67727.960000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 65660.410000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 59877.570000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 67734.040000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 73456.920000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 39380.340000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 40091.800000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 40091.840000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 40803.670000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 65660.550000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 59968.570000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 66371.980000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 77889.510000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 65660.430000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 66371.800000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 67733.970000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 85742.180000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 91938.410000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 77894.020000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 85748.270000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 91473.740000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 13809.940000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 14521.690000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 14521.710000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 15233.730000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 40091.820000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 59963.840000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 40803.670000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 77881.660000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 40091.660000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 40803.480000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 67727.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 85732.960000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 66371.760000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 77889.300000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 85742.190000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 91470.210000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 41186.790000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 59149.550000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 59287.740000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 77288.760000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 59154.220000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 73096.550000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 77296.580000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 91315.490000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 59292.220000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 77296.360000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 73219.400000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 91351.710000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 77301.040000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 91318.770000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 91355.220000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 109238.900000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002473;
		fall_capacitance	: 0.002245;
		rise_capacitance	: 0.002700;
		fall_capacitance_range		(0.001914, 0.002909);
		rise_capacitance_range		(0.002212, 0.003455);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000034,0.000023,0.000015,0.000009,0.000005,0.000001,-0.000005,-0.000015");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002304;
		fall_capacitance	: 0.002035;
		rise_capacitance	: 0.002573;
		fall_capacitance_range		(0.001786, 0.002489);
		rise_capacitance_range		(0.002065, 0.003223);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000030,0.000017,0.000010,0.000006,0.000003,-0.000000,-0.000005,-0.000015");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002315;
		fall_capacitance	: 0.002193;
		rise_capacitance	: 0.002437;
		fall_capacitance_range		(0.001870, 0.002636);
		rise_capacitance_range		(0.002045, 0.003025);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000030,0.000018,0.000012,0.000008,0.000005,0.000002,-0.000002,-0.000010");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002525;
		fall_capacitance	: 0.002347;
		rise_capacitance	: 0.002703;
		fall_capacitance_range		(0.001996, 0.002702);
		rise_capacitance_range		(0.002305, 0.003144);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000020,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000002,-0.000011");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002316;
		fall_capacitance	: 0.002269;
		rise_capacitance	: 0.002364;
		fall_capacitance_range		(0.001842, 0.002715);
		rise_capacitance_range		(0.002011, 0.002902);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000070,0.000046,0.000030,0.000020,0.000013,0.000008,0.000002,-0.000007");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002553;
		fall_capacitance	: 0.002452;
		rise_capacitance	: 0.002654;
		fall_capacitance_range		(0.002040, 0.002819);
		rise_capacitance_range		(0.002250, 0.003065);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000051,0.000036,0.000025,0.000018,0.000012,0.000007,0.000002,-0.000007");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) | (B1 & B2)) | (C1 & C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020243,0.025031,0.030474,0.041286,0.062828,0.105794", \
				        "0.023359,0.028086,0.033573,0.044352,0.065923,0.108825", \
				        "0.029319,0.034638,0.039960,0.050623,0.072108,0.114899", \
				        "0.036059,0.043121,0.050231,0.062977,0.084693,0.127277", \
				        "0.041589,0.051182,0.060790,0.077818,0.106711,0.152984", \
				        "0.042147,0.054762,0.067949,0.090875,0.129734,0.192265", \
				        "0.029932,0.047088,0.064510,0.095269,0.147042,0.230855", \
				        "-0.009858,0.012072,0.035242,0.076098,0.145396,0.257415");
			}
			cell_rise(Timing_X4) {
				values ("0.064627,0.078340,0.093930,0.124892,0.186027,0.307494", \
				        "0.067745,0.081293,0.096850,0.127813,0.189015,0.310480", \
				        "0.074284,0.087706,0.103164,0.133946,0.195011,0.316443", \
				        "0.088716,0.101629,0.116637,0.146952,0.207547,0.328448", \
				        "0.120391,0.133092,0.147067,0.174825,0.234208,0.353739", \
				        "0.166129,0.182243,0.199903,0.232794,0.292188,0.407596", \
				        "0.233554,0.254047,0.275802,0.317234,0.391901,0.521942", \
				        "0.341490,0.366950,0.393876,0.444799,0.536638,0.699444");
			}
			fall_transition(Timing_X4) {
				values ("0.023612,0.027796,0.032631,0.042030,0.060584,0.097492", \
				        "0.023654,0.027806,0.032610,0.042041,0.060574,0.097480", \
				        "0.026594,0.029614,0.033587,0.042153,0.060578,0.097484", \
				        "0.036317,0.038549,0.041435,0.047273,0.061973,0.097472", \
				        "0.053495,0.055825,0.058798,0.064686,0.076189,0.102334", \
				        "0.082229,0.084754,0.087998,0.094611,0.108151,0.133606", \
				        "0.111886,0.116059,0.121187,0.131189,0.149851,0.192352", \
				        "0.184948,0.190735,0.197410,0.210436,0.234505,0.276644");
			}
			rise_transition(Timing_X4) {
				values ("0.064773,0.078345,0.093232,0.121554,0.176848,0.286251", \
				        "0.064446,0.078067,0.092991,0.121545,0.176812,0.286230", \
				        "0.063284,0.077233,0.092596,0.121382,0.176839,0.286226", \
				        "0.060617,0.074366,0.090151,0.120515,0.176783,0.286242", \
				        "0.067101,0.077746,0.090995,0.118077,0.175231,0.286255", \
				        "0.086121,0.097973,0.110663,0.133853,0.180559,0.284425", \
				        "0.117831,0.131554,0.146159,0.173316,0.222353,0.310643", \
				        "0.172975,0.188314,0.205696,0.236953,0.294762,0.397511");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !C1 & !C2 | A2 & !B1 & !B2 & !C1";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019792,0.024573,0.030020,0.040805,0.062150,0.104781", \
				        "0.022923,0.027630,0.033069,0.043818,0.065228,0.107841", \
				        "0.028719,0.033970,0.039435,0.050086,0.071414,0.113894", \
				        "0.035098,0.042125,0.049376,0.062245,0.084002,0.126282", \
				        "0.040244,0.049696,0.059326,0.076606,0.105623,0.152028", \
				        "0.040684,0.053215,0.066243,0.089287,0.128146,0.190728", \
				        "0.027382,0.044763,0.062222,0.093328,0.145405,0.229104", \
				        "-0.015833,0.006853,0.030466,0.072015,0.142069,0.254728");
			}
			cell_rise(Timing_X4) {
				values ("0.032304,0.043189,0.055943,0.081206,0.131265,0.230751", \
				        "0.035701,0.046368,0.058998,0.084207,0.134273,0.233803", \
				        "0.043404,0.053410,0.065579,0.090537,0.140451,0.239862", \
				        "0.059007,0.069531,0.080624,0.104246,0.153476,0.252337", \
				        "0.081200,0.094596,0.108877,0.134409,0.181350,0.278742", \
				        "0.113638,0.130316,0.148267,0.181018,0.238130,0.335129", \
				        "0.163475,0.185120,0.207276,0.248162,0.320033,0.442186", \
				        "0.245797,0.272587,0.301098,0.352074,0.441479,0.594404");
			}
			fall_transition(Timing_X4) {
				values ("0.013147,0.017337,0.021881,0.031153,0.049576,0.086572", \
				        "0.013232,0.017328,0.021864,0.031123,0.049646,0.086585", \
				        "0.016207,0.019197,0.022869,0.031193,0.049641,0.086493", \
				        "0.022871,0.026370,0.030127,0.036478,0.051026,0.086569", \
				        "0.034304,0.038565,0.043106,0.051074,0.064838,0.091478", \
				        "0.054386,0.059676,0.065412,0.075213,0.092415,0.121300", \
				        "0.089394,0.096570,0.103857,0.116793,0.138532,0.174736", \
				        "0.152058,0.161657,0.171616,0.189043,0.217896,0.264355");
			}
			rise_transition(Timing_X4) {
				values ("0.035700,0.047334,0.059881,0.083276,0.128587,0.218673", \
				        "0.034934,0.046660,0.059473,0.083086,0.128571,0.218672", \
				        "0.034058,0.045226,0.058410,0.082815,0.128531,0.218640", \
				        "0.038563,0.047142,0.058042,0.081021,0.128399,0.218674", \
				        "0.050624,0.059098,0.068523,0.086524,0.127495,0.218642", \
				        "0.069070,0.079230,0.090198,0.110096,0.145727,0.221440", \
				        "0.101120,0.112337,0.124938,0.148382,0.191116,0.265058", \
				        "0.159126,0.171689,0.185927,0.212571,0.262314,0.351660");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019772,0.024578,0.029972,0.040766,0.062120,0.104759", \
				        "0.022905,0.027613,0.033085,0.043775,0.065203,0.107818", \
				        "0.028738,0.033983,0.039466,0.050079,0.071412,0.113900", \
				        "0.035199,0.042202,0.049426,0.062291,0.084036,0.126316", \
				        "0.040208,0.049703,0.059341,0.076642,0.105668,0.152066", \
				        "0.039649,0.052323,0.065529,0.088762,0.127851,0.190615", \
				        "0.023198,0.041016,0.058807,0.090523,0.143407,0.227970", \
				        "-0.027567,-0.004157,0.020253,0.062972,0.134794,0.249612");
			}
			cell_rise(Timing_X4) {
				values ("0.033374,0.045862,0.061003,0.091676,0.152792,0.274158", \
				        "0.036864,0.049062,0.063960,0.094600,0.155733,0.277126", \
				        "0.044862,0.056339,0.070730,0.100908,0.161817,0.283073", \
				        "0.061870,0.073282,0.085949,0.114514,0.174616,0.295190", \
				        "0.086988,0.101462,0.117146,0.145307,0.201858,0.320764", \
				        "0.123726,0.141971,0.161575,0.197646,0.260980,0.375427", \
				        "0.180595,0.204085,0.228137,0.273031,0.352377,0.488370", \
				        "0.275118,0.303899,0.334783,0.390037,0.487953,0.657271");
			}
			fall_transition(Timing_X4) {
				values ("0.013123,0.017348,0.021883,0.031154,0.049575,0.086583", \
				        "0.013216,0.017268,0.021913,0.031083,0.049626,0.086598", \
				        "0.016183,0.019173,0.022798,0.031182,0.049616,0.086498", \
				        "0.022814,0.026322,0.030070,0.036450,0.051006,0.086572", \
				        "0.034220,0.038486,0.043054,0.051023,0.064794,0.091462", \
				        "0.054332,0.059673,0.065458,0.075306,0.092513,0.121336", \
				        "0.089557,0.096887,0.104266,0.117295,0.139188,0.175296", \
				        "0.152707,0.162640,0.172776,0.190561,0.219666,0.266213");
			}
			rise_transition(Timing_X4) {
				values ("0.041175,0.056310,0.072406,0.102241,0.157781,0.266601", \
				        "0.040293,0.055502,0.072032,0.102027,0.157767,0.266616", \
				        "0.039045,0.053600,0.070366,0.101391,0.157698,0.266623", \
				        "0.042818,0.054338,0.068798,0.098674,0.157401,0.266633", \
				        "0.055185,0.065213,0.076578,0.100647,0.154444,0.266595", \
				        "0.074038,0.085691,0.098326,0.121738,0.165897,0.265188", \
				        "0.106118,0.118798,0.133199,0.160039,0.209492,0.297345", \
				        "0.163477,0.177582,0.193520,0.223673,0.280602,0.383642");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2 | A2 & B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020243,0.025031,0.030474,0.041286,0.062828,0.105794", \
				        "0.023359,0.028086,0.033573,0.044352,0.065923,0.108825", \
				        "0.029319,0.034638,0.039960,0.050623,0.072108,0.114899", \
				        "0.036059,0.043121,0.050231,0.062977,0.084693,0.127277", \
				        "0.041589,0.051182,0.060790,0.077818,0.106711,0.152984", \
				        "0.042147,0.054762,0.067949,0.090875,0.129734,0.192265", \
				        "0.028720,0.045921,0.063658,0.094588,0.146831,0.230855", \
				        "-0.013375,0.007798,0.030883,0.071859,0.141898,0.255240");
			}
			cell_rise(Timing_X4) {
				values ("0.064627,0.078340,0.093930,0.124892,0.186027,0.307494", \
				        "0.067745,0.081293,0.096850,0.127813,0.189015,0.310480", \
				        "0.074284,0.087706,0.103164,0.133946,0.195011,0.316443", \
				        "0.088716,0.101629,0.116637,0.146952,0.207547,0.328448", \
				        "0.120391,0.133092,0.147067,0.174825,0.234208,0.353739", \
				        "0.166129,0.182243,0.199903,0.232794,0.292188,0.407596", \
				        "0.233554,0.254047,0.275802,0.317234,0.391901,0.521942", \
				        "0.341490,0.366950,0.393876,0.444799,0.536638,0.699444");
			}
			fall_transition(Timing_X4) {
				values ("0.023612,0.027796,0.032631,0.042030,0.060584,0.097492", \
				        "0.023654,0.027806,0.032610,0.042041,0.060574,0.097480", \
				        "0.026594,0.029614,0.033587,0.042153,0.060578,0.097484", \
				        "0.036317,0.038549,0.041435,0.047273,0.061973,0.097472", \
				        "0.053495,0.055825,0.058798,0.064686,0.076189,0.102334", \
				        "0.082229,0.084754,0.087998,0.094611,0.108151,0.133606", \
				        "0.131019,0.133697,0.137363,0.145277,0.161459,0.192352", \
				        "0.213703,0.217305,0.221966,0.232032,0.252329,0.290628");
			}
			rise_transition(Timing_X4) {
				values ("0.064773,0.078345,0.093232,0.121554,0.176848,0.286251", \
				        "0.064446,0.078067,0.092991,0.121545,0.176812,0.286230", \
				        "0.063284,0.077233,0.092596,0.121382,0.176839,0.286226", \
				        "0.060617,0.074366,0.090151,0.120515,0.176783,0.286242", \
				        "0.067101,0.077746,0.090995,0.118077,0.175231,0.286255", \
				        "0.086121,0.097973,0.110663,0.133853,0.180559,0.284425", \
				        "0.117831,0.131554,0.146159,0.173316,0.222353,0.310643", \
				        "0.172975,0.188314,0.205696,0.236953,0.294762,0.397511");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2 & !C1 & !C2 | A2 & !B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020031,0.024883,0.030275,0.041061,0.062545,0.105304", \
				        "0.023147,0.027925,0.033313,0.044075,0.065586,0.108326", \
				        "0.029003,0.034315,0.039699,0.050360,0.071775,0.114424", \
				        "0.035526,0.042591,0.049783,0.062607,0.084347,0.126790", \
				        "0.040916,0.050443,0.060102,0.077242,0.106196,0.152486", \
				        "0.041873,0.054401,0.067527,0.090391,0.129102,0.191548", \
				        "0.029932,0.047088,0.064510,0.095269,0.147042,0.230512", \
				        "-0.009858,0.012072,0.035242,0.076098,0.145396,0.257415");
			}
			cell_rise(Timing_X4) {
				values ("0.045280,0.056505,0.069321,0.094669,0.144756,0.244337", \
				        "0.048435,0.059525,0.072317,0.097615,0.147764,0.247350", \
				        "0.055300,0.066165,0.078773,0.103946,0.153934,0.253440", \
				        "0.071121,0.080924,0.092819,0.117346,0.166807,0.265823", \
				        "0.097005,0.109408,0.122696,0.146901,0.194414,0.292101", \
				        "0.133673,0.149084,0.166047,0.197152,0.252190,0.348150", \
				        "0.188488,0.208522,0.229359,0.268474,0.337979,0.457224", \
				        "0.277570,0.302504,0.328891,0.377455,0.463702,0.613395");
			}
			fall_transition(Timing_X4) {
				values ("0.017038,0.021629,0.026635,0.036319,0.055025,0.091975", \
				        "0.017089,0.021559,0.026632,0.036328,0.055051,0.091979", \
				        "0.020198,0.023490,0.027562,0.036428,0.055048,0.091959", \
				        "0.029211,0.032042,0.035505,0.041654,0.056470,0.091971", \
				        "0.044360,0.047372,0.051064,0.057964,0.070562,0.096883", \
				        "0.069338,0.072893,0.077132,0.085122,0.100344,0.127479", \
				        "0.111886,0.116059,0.121187,0.131189,0.149851,0.183347", \
				        "0.184948,0.190735,0.197410,0.210436,0.234505,0.276644");
			}
			rise_transition(Timing_X4) {
				values ("0.044725,0.055711,0.067760,0.090941,0.136266,0.226596", \
				        "0.044330,0.055386,0.067692,0.090891,0.136284,0.226585", \
				        "0.042781,0.054431,0.067167,0.090720,0.136290,0.226623", \
				        "0.043868,0.053753,0.065455,0.089528,0.136198,0.226591", \
				        "0.055081,0.063549,0.072865,0.092168,0.134982,0.226598", \
				        "0.073818,0.083988,0.094978,0.114829,0.150412,0.228337", \
				        "0.105131,0.117079,0.129871,0.153564,0.196223,0.269666", \
				        "0.161477,0.174962,0.190132,0.217484,0.267898,0.357259");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024724,0.029590,0.034921,0.045800,0.067372,0.110330", \
				        "0.027332,0.032139,0.037600,0.048432,0.070051,0.113099", \
				        "0.031975,0.037139,0.042557,0.053410,0.075116,0.118246", \
				        "0.038407,0.044534,0.050880,0.062823,0.085067,0.128287", \
				        "0.045080,0.053251,0.061509,0.076282,0.102151,0.147896", \
				        "0.047576,0.058887,0.070496,0.090617,0.124410,0.179554", \
				        "0.037494,0.053202,0.069410,0.097587,0.144342,0.218195", \
				        "-0.0008429,0.021228,0.043609,0.082743,0.147419,0.249300");
			}
			cell_rise(Timing_X4) {
				values ("0.080190,0.093850,0.109384,0.140295,0.201512,0.322984", \
				        "0.083253,0.096845,0.112379,0.143300,0.204512,0.325990", \
				        "0.089804,0.103258,0.118792,0.149592,0.210624,0.332007", \
				        "0.103614,0.117102,0.132242,0.162730,0.223292,0.344232", \
				        "0.135731,0.147624,0.161505,0.190512,0.250126,0.369732", \
				        "0.186770,0.202050,0.218727,0.250115,0.307752,0.423945", \
				        "0.261611,0.281229,0.301560,0.341208,0.413310,0.539851", \
				        "0.381935,0.405197,0.431200,0.479496,0.567751,0.725799");
			}
			fall_transition(Timing_X4) {
				values ("0.023612,0.027773,0.032614,0.042038,0.060585,0.097481", \
				        "0.023611,0.027783,0.032605,0.042042,0.060579,0.097496", \
				        "0.024848,0.028641,0.033004,0.042057,0.060577,0.097466", \
				        "0.030077,0.033097,0.036892,0.044367,0.061257,0.097480", \
				        "0.041562,0.043902,0.047096,0.053564,0.068065,0.099917", \
				        "0.062759,0.065040,0.067866,0.073836,0.086717,0.115131", \
				        "0.084606,0.088164,0.092437,0.100556,0.124633,0.152142", \
				        "0.136343,0.141122,0.146786,0.157711,0.177815,0.212766");
			}
			rise_transition(Timing_X4) {
				values ("0.074828,0.087964,0.102696,0.130993,0.186436,0.296182", \
				        "0.074633,0.087832,0.102620,0.130894,0.186439,0.296182", \
				        "0.073950,0.087373,0.102260,0.130871,0.186407,0.296174", \
				        "0.071017,0.085178,0.100928,0.130418,0.186406,0.296161", \
				        "0.073854,0.085566,0.099484,0.127520,0.185587,0.296192", \
				        "0.092213,0.104019,0.116400,0.139756,0.188434,0.294532", \
				        "0.122363,0.136359,0.151312,0.178877,0.227961,0.317328", \
				        "0.170311,0.186778,0.205132,0.238098,0.297904,0.402095");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2 | A1 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024473,0.029376,0.034723,0.045529,0.067039,0.109805", \
				        "0.027077,0.031970,0.037325,0.048128,0.069710,0.112584", \
				        "0.031705,0.036884,0.042276,0.053166,0.074794,0.117804", \
				        "0.038074,0.044181,0.050604,0.062519,0.084657,0.127773", \
				        "0.044600,0.052724,0.061057,0.075889,0.101758,0.147393", \
				        "0.046690,0.058060,0.069692,0.089940,0.123788,0.178923", \
				        "0.035250,0.051259,0.067697,0.096190,0.143208,0.217179", \
				        "-0.008636,0.013985,0.036895,0.076917,0.142856,0.246252");
			}
			cell_rise(Timing_X4) {
				values ("0.063632,0.077253,0.092794,0.123710,0.184854,0.306314", \
				        "0.066739,0.080306,0.095807,0.126677,0.187889,0.309324", \
				        "0.073542,0.086886,0.102308,0.133012,0.193989,0.315343", \
				        "0.088353,0.101225,0.116084,0.146347,0.206799,0.327611", \
				        "0.120605,0.133113,0.147069,0.174737,0.233943,0.353257", \
				        "0.167522,0.183610,0.200956,0.233648,0.292692,0.407820", \
				        "0.237586,0.258150,0.279475,0.320424,0.394427,0.523583", \
				        "0.352411,0.376671,0.404088,0.453922,0.544471,0.705426");
			}
			fall_transition(Timing_X4) {
				values ("0.016982,0.021534,0.026601,0.036300,0.055046,0.092007", \
				        "0.016991,0.021544,0.026595,0.036306,0.055049,0.091969", \
				        "0.018325,0.022290,0.027018,0.036329,0.055026,0.091967", \
				        "0.023355,0.026769,0.030882,0.038675,0.055722,0.092018", \
				        "0.034093,0.036896,0.040475,0.047469,0.062467,0.094408", \
				        "0.052876,0.055919,0.059499,0.066424,0.080254,0.109360", \
				        "0.084519,0.088097,0.092462,0.100615,0.116106,0.145260", \
				        "0.136604,0.141634,0.147281,0.158388,0.178620,0.213562");
			}
			rise_transition(Timing_X4) {
				values ("0.064526,0.078083,0.093046,0.121527,0.176877,0.286352", \
				        "0.064182,0.077819,0.092871,0.121514,0.176877,0.286351", \
				        "0.063006,0.077014,0.092328,0.121328,0.176863,0.286355", \
				        "0.060505,0.074192,0.089962,0.120332,0.176801,0.286367", \
				        "0.066941,0.077645,0.090939,0.118062,0.175227,0.286366", \
				        "0.085408,0.097463,0.110023,0.133502,0.180482,0.284548", \
				        "0.114587,0.128670,0.143902,0.171738,0.221379,0.310295", \
				        "0.161674,0.178521,0.196682,0.229890,0.290111,0.394953");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B2 & !C1 & !C2 | A1 & !B1 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !B2 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024497,0.029407,0.034743,0.045548,0.067066,0.109854", \
				        "0.027099,0.031997,0.037336,0.048171,0.069721,0.112634", \
				        "0.031701,0.036884,0.042249,0.053153,0.074784,0.117790", \
				        "0.037985,0.044114,0.050525,0.062468,0.084686,0.127743", \
				        "0.044424,0.052567,0.060908,0.075755,0.101651,0.147318", \
				        "0.046871,0.058220,0.069800,0.089983,0.123768,0.178874", \
				        "0.037494,0.053202,0.069410,0.097587,0.144115,0.217648", \
				        "-0.000843,0.021228,0.043609,0.082743,0.147419,0.249300");
			}
			cell_rise(Timing_X4) {
				values ("0.057874,0.069090,0.081848,0.107220,0.157372,0.257034", \
				        "0.060969,0.072174,0.084923,0.110277,0.160429,0.260057", \
				        "0.067674,0.078751,0.091441,0.116646,0.166662,0.266215", \
				        "0.082390,0.093043,0.105288,0.130113,0.179648,0.278747", \
				        "0.111858,0.123328,0.135843,0.159095,0.207387,0.305199", \
				        "0.153696,0.168173,0.184016,0.213518,0.266404,0.361536", \
				        "0.216234,0.234970,0.254336,0.291383,0.358150,0.473760", \
				        "0.319060,0.341661,0.366366,0.411814,0.493891,0.638500");
			}
			fall_transition(Timing_X4) {
				values ("0.017034,0.021577,0.026622,0.036319,0.055050,0.091991", \
				        "0.017041,0.021586,0.026640,0.036320,0.055028,0.091957", \
				        "0.018368,0.022330,0.027049,0.036350,0.055027,0.091963", \
				        "0.023416,0.026819,0.030940,0.038706,0.055725,0.092013", \
				        "0.034189,0.036979,0.040553,0.047514,0.062492,0.094424", \
				        "0.053086,0.056057,0.059607,0.066489,0.080287,0.109385", \
				        "0.084606,0.088164,0.092437,0.100556,0.115930,0.145116", \
				        "0.136343,0.141122,0.146786,0.157711,0.177815,0.212766");
			}
			rise_transition(Timing_X4) {
				values ("0.052706,0.063373,0.075391,0.098528,0.144043,0.234712", \
				        "0.052488,0.063256,0.075316,0.098527,0.144027,0.234693", \
				        "0.051660,0.062722,0.074997,0.098442,0.144076,0.234702", \
				        "0.050571,0.061054,0.073297,0.097808,0.144009,0.234695", \
				        "0.059558,0.067861,0.077847,0.098534,0.142794,0.234716", \
				        "0.078019,0.088426,0.099263,0.119167,0.155441,0.235537", \
				        "0.106498,0.119096,0.132598,0.157100,0.200212,0.273661", \
				        "0.153533,0.168591,0.185155,0.214820,0.268009,0.359770");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024724,0.029590,0.034921,0.045800,0.067372,0.110330", \
				        "0.027332,0.032139,0.037600,0.048432,0.070051,0.113099", \
				        "0.031975,0.037139,0.042557,0.053410,0.075116,0.118246", \
				        "0.038407,0.044534,0.050880,0.062823,0.085067,0.128287", \
				        "0.045080,0.053251,0.061509,0.076282,0.102151,0.147896", \
				        "0.047576,0.058887,0.070496,0.090617,0.124410,0.179554", \
				        "0.036938,0.052886,0.069286,0.097496,0.144342,0.218195", \
				        "-0.004584,0.017459,0.040137,0.079781,0.145093,0.248121");
			}
			cell_rise(Timing_X4) {
				values ("0.080190,0.093850,0.109384,0.140295,0.201512,0.322984", \
				        "0.083253,0.096845,0.112379,0.143300,0.204512,0.325990", \
				        "0.089804,0.103258,0.118792,0.149592,0.210624,0.332007", \
				        "0.103614,0.117102,0.132242,0.162730,0.223292,0.344232", \
				        "0.135731,0.147624,0.161505,0.190512,0.250126,0.369732", \
				        "0.186770,0.202050,0.218727,0.250115,0.307752,0.423945", \
				        "0.261611,0.281229,0.301560,0.341208,0.413310,0.539851", \
				        "0.381935,0.405197,0.431200,0.479496,0.567751,0.725799");
			}
			fall_transition(Timing_X4) {
				values ("0.023612,0.027773,0.032614,0.042038,0.060585,0.097481", \
				        "0.023611,0.027783,0.032605,0.042042,0.060579,0.097496", \
				        "0.024848,0.028641,0.033004,0.042057,0.060577,0.097466", \
				        "0.030077,0.033097,0.036892,0.044367,0.061257,0.097480", \
				        "0.041562,0.043902,0.047096,0.053564,0.068065,0.099917", \
				        "0.062759,0.065040,0.067866,0.073836,0.086717,0.115131", \
				        "0.098972,0.101234,0.104460,0.110991,0.124633,0.152142", \
				        "0.158223,0.161253,0.165184,0.173748,0.190973,0.222998");
			}
			rise_transition(Timing_X4) {
				values ("0.074828,0.087964,0.102696,0.130993,0.186436,0.296182", \
				        "0.074633,0.087832,0.102620,0.130894,0.186439,0.296182", \
				        "0.073950,0.087373,0.102260,0.130871,0.186407,0.296174", \
				        "0.071017,0.085178,0.100928,0.130418,0.186406,0.296161", \
				        "0.073854,0.085566,0.099484,0.127520,0.185587,0.296192", \
				        "0.092213,0.104019,0.116400,0.139756,0.188434,0.294532", \
				        "0.122363,0.136359,0.151312,0.178877,0.227961,0.317328", \
				        "0.170311,0.186778,0.205132,0.238098,0.297904,0.402095");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.032049,0.037615,0.043642,0.055336,0.077863,0.121797", \
				        "0.035061,0.040539,0.046563,0.058257,0.080817,0.124753", \
				        "0.041509,0.046758,0.052684,0.064275,0.086821,0.130682", \
				        "0.053398,0.059510,0.065704,0.077026,0.099081,0.142882", \
				        "0.066277,0.074296,0.082671,0.097807,0.124078,0.168211", \
				        "0.077005,0.087531,0.098762,0.118927,0.154029,0.212390", \
				        "0.079653,0.093484,0.108317,0.134725,0.181160,0.259155", \
				        "0.063408,0.081411,0.100268,0.135138,0.196314,0.298799");
			}
			cell_rise(Timing_X4) {
				values ("0.118235,0.131948,0.147622,0.178453,0.239687,0.361107", \
				        "0.121336,0.134970,0.150657,0.181559,0.242855,0.364403", \
				        "0.127301,0.141052,0.156468,0.187497,0.248880,0.370472", \
				        "0.138427,0.152390,0.167949,0.198958,0.260381,0.382155", \
				        "0.160088,0.173975,0.189696,0.220634,0.282026,0.403826", \
				        "0.196509,0.212502,0.230412,0.264038,0.326865,0.448108", \
				        "0.255468,0.275319,0.296667,0.336792,0.410344,0.541931", \
				        "0.360295,0.385197,0.410431,0.459790,0.547528,0.702708");
			}
			fall_transition(Timing_X4) {
				values ("0.036305,0.040060,0.044392,0.053215,0.071151,0.107608", \
				        "0.036111,0.039900,0.044312,0.053174,0.071160,0.107648", \
				        "0.035731,0.039479,0.043913,0.053031,0.071136,0.107640", \
				        "0.041486,0.044042,0.047333,0.054489,0.071155,0.107628", \
				        "0.057749,0.060349,0.063341,0.069095,0.080815,0.109928", \
				        "0.084466,0.087791,0.091394,0.098667,0.112394,0.137725", \
				        "0.111159,0.116614,0.122560,0.133474,0.153252,0.196219", \
				        "0.175436,0.183072,0.191368,0.206461,0.232831,0.277489");
			}
			rise_transition(Timing_X4) {
				values ("0.067244,0.079693,0.093928,0.121709,0.176878,0.286361", \
				        "0.067240,0.079689,0.093921,0.121667,0.176871,0.286363", \
				        "0.067240,0.079691,0.093930,0.121665,0.176881,0.286338", \
				        "0.067273,0.079723,0.093880,0.121660,0.176846,0.286356", \
				        "0.069387,0.081112,0.094664,0.121821,0.176878,0.286362", \
				        "0.085223,0.096156,0.108450,0.131943,0.180915,0.286450", \
				        "0.114975,0.126537,0.139364,0.164162,0.211704,0.303909", \
				        "0.165257,0.177786,0.191810,0.218623,0.269941,0.367096");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031356,0.036777,0.042814,0.054486,0.076972,0.120689", \
				        "0.034394,0.039725,0.045798,0.057470,0.079920,0.123665", \
				        "0.040860,0.045985,0.051971,0.063553,0.085919,0.129540", \
				        "0.052523,0.058525,0.064759,0.076276,0.098248,0.141747", \
				        "0.064927,0.072815,0.081129,0.096535,0.122953,0.167158", \
				        "0.074563,0.085123,0.096282,0.116757,0.152174,0.210753", \
				        "0.073966,0.087872,0.102982,0.130227,0.177658,0.256330", \
				        "0.046804,0.065829,0.085565,0.122050,0.185535,0.290801");
			}
			cell_rise(Timing_X4) {
				values ("0.085052,0.099013,0.114769,0.145504,0.206545,0.327756", \
				        "0.088009,0.101911,0.117614,0.148532,0.209709,0.331032", \
				        "0.093903,0.107851,0.123419,0.154399,0.215618,0.337075", \
				        "0.105088,0.119188,0.134828,0.165753,0.227070,0.348701", \
				        "0.125042,0.140049,0.156431,0.187618,0.248738,0.370381", \
				        "0.153903,0.171992,0.191678,0.227831,0.293353,0.414778", \
				        "0.203433,0.226307,0.249967,0.293630,0.371226,0.507114", \
				        "0.295599,0.324242,0.353210,0.407104,0.500781,0.662050");
			}
			fall_transition(Timing_X4) {
				values ("0.023252,0.027565,0.032150,0.041341,0.059727,0.096481", \
				        "0.023046,0.027372,0.032006,0.041324,0.059707,0.096532", \
				        "0.022727,0.026920,0.031737,0.041164,0.059697,0.096511", \
				        "0.028470,0.031861,0.035338,0.042680,0.059721,0.096528", \
				        "0.040479,0.044520,0.048807,0.056198,0.069427,0.098842", \
				        "0.060393,0.065672,0.071142,0.080954,0.097700,0.125970", \
				        "0.094000,0.101105,0.108635,0.121646,0.143630,0.179978", \
				        "0.150946,0.161579,0.172142,0.190379,0.220457,0.268354");
			}
			rise_transition(Timing_X4) {
				values ("0.049992,0.061979,0.075855,0.103166,0.157823,0.266611", \
				        "0.049976,0.062005,0.075838,0.103179,0.157806,0.266594", \
				        "0.049977,0.062007,0.075779,0.103178,0.157783,0.266603", \
				        "0.050054,0.062061,0.075932,0.103213,0.157826,0.266613", \
				        "0.056415,0.066597,0.078795,0.104133,0.157857,0.266623", \
				        "0.074547,0.084485,0.096313,0.119062,0.164993,0.267063", \
				        "0.106096,0.116414,0.128379,0.152019,0.198477,0.288869", \
				        "0.158753,0.169649,0.182127,0.207398,0.257102,0.352878");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031691,0.037196,0.043186,0.054894,0.077386,0.121183", \
				        "0.034670,0.040061,0.046150,0.057815,0.080316,0.124128", \
				        "0.041061,0.046315,0.052203,0.063814,0.086256,0.129977", \
				        "0.052814,0.058857,0.065141,0.076552,0.098561,0.142160", \
				        "0.065551,0.073501,0.081929,0.097140,0.123440,0.167564", \
				        "0.076448,0.086982,0.098119,0.118243,0.153336,0.211627", \
				        "0.079653,0.093484,0.108317,0.134725,0.181160,0.258806", \
				        "0.063408,0.081411,0.100268,0.135138,0.196314,0.298799");
			}
			cell_rise(Timing_X4) {
				values ("0.084318,0.095634,0.108488,0.133737,0.183867,0.283461", \
				        "0.087641,0.098894,0.111752,0.137074,0.187288,0.286950", \
				        "0.094031,0.105375,0.118017,0.143458,0.193719,0.293488", \
				        "0.105811,0.117271,0.130059,0.155420,0.205753,0.305615", \
				        "0.126581,0.138943,0.152487,0.178056,0.228281,0.328147", \
				        "0.156666,0.171453,0.187781,0.217993,0.273225,0.373756", \
				        "0.205108,0.223920,0.243891,0.280719,0.346915,0.463007", \
				        "0.290616,0.314735,0.339027,0.385250,0.465965,0.605354");
			}
			fall_transition(Timing_X4) {
				values ("0.029562,0.033488,0.038063,0.047189,0.065380,0.102033", \
				        "0.029358,0.033362,0.038013,0.047158,0.065380,0.102009", \
				        "0.029032,0.032954,0.037632,0.047028,0.065353,0.102017", \
				        "0.034987,0.037794,0.041138,0.048566,0.065384,0.101987", \
				        "0.049567,0.052639,0.056231,0.062756,0.075146,0.104354", \
				        "0.072972,0.077045,0.081426,0.089827,0.104997,0.131807", \
				        "0.111159,0.116614,0.122560,0.133474,0.153252,0.187556", \
				        "0.175436,0.183072,0.191368,0.206461,0.232831,0.277489");
			}
			rise_transition(Timing_X4) {
				values ("0.046343,0.056526,0.068203,0.090892,0.136321,0.226746", \
				        "0.046343,0.056524,0.068228,0.090978,0.136319,0.226762", \
				        "0.046363,0.056535,0.068143,0.090973,0.136287,0.226771", \
				        "0.046586,0.056658,0.068280,0.090994,0.136334,0.226762", \
				        "0.052920,0.061400,0.071547,0.092439,0.136391,0.226728", \
				        "0.069738,0.078611,0.088902,0.108159,0.145844,0.228291", \
				        "0.099207,0.108733,0.119440,0.140015,0.179669,0.255752", \
				        "0.149033,0.159546,0.171339,0.193836,0.236956,0.318748");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2 & !C1 & C2 | !A1 & B2 & C1 & !C2 | !A2 & B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.032049,0.037615,0.043642,0.055336,0.077863,0.121797", \
				        "0.035061,0.040539,0.046563,0.058257,0.080817,0.124753", \
				        "0.041509,0.046758,0.052684,0.064275,0.086821,0.130682", \
				        "0.053398,0.059510,0.065704,0.077026,0.099081,0.142882", \
				        "0.066277,0.074296,0.082671,0.097807,0.124078,0.168211", \
				        "0.077005,0.087531,0.098762,0.118927,0.154029,0.212390", \
				        "0.078468,0.092400,0.107476,0.134098,0.180994,0.259155", \
				        "0.057426,0.075346,0.094422,0.129867,0.192043,0.296184");
			}
			cell_rise(Timing_X4) {
				values ("0.118235,0.131948,0.147622,0.178453,0.239687,0.361107", \
				        "0.121336,0.134970,0.150657,0.181559,0.242855,0.364403", \
				        "0.127301,0.141052,0.156468,0.187497,0.248880,0.370472", \
				        "0.138427,0.152390,0.167949,0.198958,0.260381,0.382155", \
				        "0.160088,0.173975,0.189696,0.220634,0.282026,0.403826", \
				        "0.196509,0.212502,0.230412,0.264038,0.326865,0.448108", \
				        "0.255468,0.275319,0.296667,0.336792,0.410344,0.541931", \
				        "0.360295,0.385197,0.410431,0.459790,0.547528,0.702708");
			}
			fall_transition(Timing_X4) {
				values ("0.036305,0.040060,0.044392,0.053215,0.071151,0.107608", \
				        "0.036111,0.039900,0.044312,0.053174,0.071160,0.107648", \
				        "0.035731,0.039479,0.043913,0.053031,0.071136,0.107640", \
				        "0.041486,0.044042,0.047333,0.054489,0.071155,0.107628", \
				        "0.057749,0.060349,0.063341,0.069095,0.080815,0.109928", \
				        "0.084466,0.087791,0.091394,0.098667,0.112394,0.137725", \
				        "0.128409,0.132743,0.137562,0.146821,0.164354,0.196219", \
				        "0.201742,0.207702,0.214428,0.227125,0.250337,0.291425");
			}
			rise_transition(Timing_X4) {
				values ("0.067244,0.079693,0.093928,0.121709,0.176878,0.286361", \
				        "0.067240,0.079689,0.093921,0.121667,0.176871,0.286363", \
				        "0.067240,0.079691,0.093930,0.121665,0.176881,0.286338", \
				        "0.067273,0.079723,0.093880,0.121660,0.176846,0.286356", \
				        "0.069387,0.081112,0.094664,0.121821,0.176878,0.286362", \
				        "0.085223,0.096156,0.108450,0.131943,0.180915,0.286450", \
				        "0.114975,0.126537,0.139364,0.164162,0.211704,0.303909", \
				        "0.165257,0.177786,0.191810,0.218623,0.269941,0.367096");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036330,0.041795,0.047789,0.059507,0.082111,0.126089", \
				        "0.038987,0.044490,0.050468,0.062158,0.084794,0.128832", \
				        "0.043947,0.049520,0.055381,0.067135,0.089795,0.133878", \
				        "0.052964,0.058852,0.065062,0.076954,0.099663,0.143836", \
				        "0.065161,0.072185,0.079578,0.093216,0.118131,0.163228", \
				        "0.076601,0.086060,0.095978,0.113694,0.144648,0.197329", \
				        "0.080828,0.093273,0.106787,0.130952,0.172827,0.241619", \
				        "0.065112,0.082481,0.100642,0.133519,0.190451,0.283745");
			}
			cell_rise(Timing_X4) {
				values ("0.133767,0.147385,0.162929,0.193800,0.254928,0.376299", \
				        "0.137075,0.150657,0.166084,0.196969,0.258181,0.379614", \
				        "0.143355,0.156998,0.172387,0.203129,0.264424,0.385858", \
				        "0.154700,0.168603,0.184096,0.214995,0.276259,0.397789", \
				        "0.176510,0.190217,0.205947,0.236794,0.298190,0.419792", \
				        "0.215792,0.231145,0.248400,0.281108,0.343025,0.464222", \
				        "0.280516,0.299582,0.319446,0.358082,0.429714,0.559040", \
				        "0.396222,0.419518,0.443240,0.489987,0.574406,0.725502");
			}
			fall_transition(Timing_X4) {
				values ("0.036288,0.040040,0.044396,0.053201,0.071159,0.107612", \
				        "0.036189,0.039936,0.044357,0.053183,0.071159,0.107637", \
				        "0.035997,0.039754,0.044165,0.053118,0.071137,0.107612", \
				        "0.038211,0.041529,0.045536,0.053805,0.071210,0.107641", \
				        "0.046961,0.049875,0.053420,0.060575,0.075643,0.108944", \
				        "0.065523,0.068414,0.071749,0.078397,0.092359,0.121917", \
				        "0.085394,0.089802,0.094470,0.103257,0.127888,0.156758", \
				        "0.132108,0.138249,0.144917,0.156912,0.178156,0.214541");
			}
			rise_transition(Timing_X4) {
				values ("0.076145,0.088748,0.102980,0.131030,0.186389,0.296175", \
				        "0.076149,0.088731,0.102996,0.131016,0.186409,0.296168", \
				        "0.076149,0.088742,0.102948,0.131027,0.186431,0.296183", \
				        "0.076157,0.088748,0.102997,0.131025,0.186415,0.296181", \
				        "0.077287,0.089393,0.103291,0.131011,0.186414,0.296170", \
				        "0.091428,0.102678,0.114904,0.139063,0.189318,0.296214", \
				        "0.119677,0.131819,0.144930,0.170288,0.218314,0.311628", \
				        "0.163873,0.177681,0.192583,0.221060,0.274228,0.373101");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.035643,0.041059,0.047063,0.058733,0.081212,0.124983", \
				        "0.038293,0.043666,0.049696,0.061374,0.083889,0.127701", \
				        "0.043268,0.048714,0.054670,0.066337,0.088893,0.132772", \
				        "0.052223,0.058009,0.064310,0.076197,0.098824,0.142697", \
				        "0.064142,0.071107,0.078442,0.092230,0.117168,0.162193", \
				        "0.074941,0.084416,0.094199,0.112160,0.143294,0.195998", \
				        "0.077311,0.090074,0.103687,0.128314,0.170566,0.239631", \
				        "0.054313,0.072414,0.091153,0.125140,0.183634,0.278779");
			}
			cell_rise(Timing_X4) {
				values ("0.100807,0.114401,0.130039,0.160805,0.221756,0.342945", \
				        "0.103987,0.117628,0.133141,0.163975,0.224993,0.346194", \
				        "0.110175,0.123949,0.139397,0.170083,0.231225,0.352474", \
				        "0.121518,0.135381,0.150997,0.181872,0.242999,0.364415", \
				        "0.142732,0.157006,0.172740,0.203724,0.264882,0.386381", \
				        "0.175733,0.192530,0.211042,0.245879,0.309823,0.430894", \
				        "0.232058,0.253566,0.275195,0.316605,0.391550,0.524678", \
				        "0.337320,0.363123,0.389938,0.440134,0.529276,0.685715");
			}
			fall_transition(Timing_X4) {
				values ("0.023233,0.027493,0.032175,0.041359,0.059729,0.096487", \
				        "0.023137,0.027407,0.032159,0.041324,0.059701,0.096553", \
				        "0.022952,0.027243,0.031936,0.041262,0.059706,0.096492", \
				        "0.025205,0.029134,0.033550,0.041933,0.059764,0.096540", \
				        "0.032364,0.036074,0.040379,0.048302,0.064250,0.097867", \
				        "0.046845,0.051116,0.055717,0.063953,0.079579,0.110525", \
				        "0.071986,0.077485,0.083294,0.093658,0.111632,0.143254", \
				        "0.113101,0.121214,0.129408,0.143800,0.167716,0.206560");
			}
			rise_transition(Timing_X4) {
				values ("0.058517,0.070797,0.084744,0.112429,0.167340,0.276409", \
				        "0.058510,0.070795,0.084732,0.112381,0.167341,0.276409", \
				        "0.058498,0.070786,0.084783,0.112377,0.167298,0.276425", \
				        "0.058566,0.070813,0.084790,0.112426,0.167340,0.276431", \
				        "0.062500,0.073541,0.086370,0.112742,0.167312,0.276419", \
				        "0.079486,0.090101,0.102114,0.125341,0.172823,0.276620", \
				        "0.107643,0.119369,0.132286,0.157153,0.204696,0.296201", \
				        "0.151332,0.164838,0.179339,0.207363,0.260106,0.358494");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.035955,0.041414,0.047483,0.059167,0.081675,0.125525", \
				        "0.038581,0.044009,0.050080,0.061713,0.084277,0.128155", \
				        "0.043494,0.048999,0.055004,0.066660,0.089255,0.133189", \
				        "0.052422,0.058258,0.064553,0.076440,0.099066,0.143083", \
				        "0.064456,0.071437,0.078873,0.092595,0.117522,0.162538", \
				        "0.075893,0.085356,0.095199,0.112992,0.143936,0.196537", \
				        "0.080828,0.093273,0.106787,0.130952,0.172531,0.241055", \
				        "0.065112,0.082481,0.100642,0.133519,0.190451,0.283745");
			}
			cell_rise(Timing_X4) {
				values ("0.096875,0.108030,0.120848,0.146084,0.196194,0.295813", \
				        "0.100390,0.111521,0.124305,0.149514,0.199604,0.299313", \
				        "0.107050,0.118279,0.130894,0.156122,0.206315,0.305970", \
				        "0.118986,0.130379,0.143162,0.168445,0.218623,0.318362", \
				        "0.140907,0.152726,0.165740,0.191123,0.241352,0.341112", \
				        "0.174394,0.188261,0.203912,0.233012,0.286965,0.386847", \
				        "0.228984,0.246688,0.265213,0.300236,0.364285,0.477956", \
				        "0.326859,0.348972,0.371267,0.414455,0.491302,0.626238");
			}
			fall_transition(Timing_X4) {
				values ("0.029546,0.033461,0.038054,0.047193,0.065395,0.102004", \
				        "0.029460,0.033430,0.038003,0.047183,0.065403,0.102003", \
				        "0.029284,0.033250,0.037865,0.047103,0.065377,0.102014", \
				        "0.031617,0.035221,0.039332,0.047856,0.065456,0.102004", \
				        "0.039864,0.043026,0.046799,0.054553,0.069960,0.103354", \
				        "0.056696,0.060073,0.063888,0.071277,0.086013,0.116207", \
				        "0.085394,0.089802,0.094470,0.103257,0.119530,0.149816", \
				        "0.132108,0.138249,0.144917,0.156912,0.178156,0.214541");
			}
			rise_transition(Timing_X4) {
				values ("0.053488,0.063723,0.075537,0.098451,0.144045,0.234702", \
				        "0.053496,0.063735,0.075536,0.098488,0.144074,0.234706", \
				        "0.053491,0.063735,0.075525,0.098519,0.144072,0.234692", \
				        "0.053574,0.063771,0.075484,0.098496,0.144069,0.234694", \
				        "0.057937,0.066927,0.077577,0.099242,0.144094,0.234710", \
				        "0.074215,0.083360,0.093662,0.113352,0.151793,0.235755", \
				        "0.101104,0.111377,0.122675,0.144108,0.184621,0.261215", \
				        "0.143471,0.155455,0.168447,0.192978,0.238513,0.322764");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036330,0.041795,0.047789,0.059507,0.082111,0.126089", \
				        "0.038987,0.044490,0.050468,0.062158,0.084794,0.128832", \
				        "0.043947,0.049520,0.055381,0.067135,0.089795,0.133878", \
				        "0.052964,0.058852,0.065062,0.076954,0.099663,0.143836", \
				        "0.065161,0.072185,0.079578,0.093216,0.118131,0.163228", \
				        "0.076601,0.086060,0.095978,0.113694,0.144648,0.197329", \
				        "0.080133,0.093025,0.106682,0.130945,0.172827,0.241619", \
				        "0.060509,0.077988,0.096690,0.130062,0.187816,0.282302");
			}
			cell_rise(Timing_X4) {
				values ("0.133767,0.147385,0.162929,0.193800,0.254928,0.376299", \
				        "0.137075,0.150657,0.166084,0.196969,0.258181,0.379614", \
				        "0.143355,0.156998,0.172387,0.203129,0.264424,0.385858", \
				        "0.154700,0.168603,0.184096,0.214995,0.276259,0.397789", \
				        "0.176510,0.190217,0.205947,0.236794,0.298190,0.419792", \
				        "0.215792,0.231145,0.248400,0.281108,0.343025,0.464222", \
				        "0.280516,0.299582,0.319446,0.358082,0.429714,0.559040", \
				        "0.396222,0.419518,0.443240,0.489987,0.574406,0.725502");
			}
			fall_transition(Timing_X4) {
				values ("0.036288,0.040040,0.044396,0.053201,0.071159,0.107612", \
				        "0.036189,0.039936,0.044357,0.053183,0.071159,0.107637", \
				        "0.035997,0.039754,0.044165,0.053118,0.071137,0.107612", \
				        "0.038211,0.041529,0.045536,0.053805,0.071210,0.107641", \
				        "0.046961,0.049875,0.053420,0.060575,0.075643,0.108944", \
				        "0.065523,0.068414,0.071749,0.078397,0.092359,0.121917", \
				        "0.098316,0.101633,0.105541,0.113080,0.127888,0.156758", \
				        "0.151396,0.156227,0.161712,0.171903,0.190802,0.224637");
			}
			rise_transition(Timing_X4) {
				values ("0.076145,0.088748,0.102980,0.131030,0.186389,0.296175", \
				        "0.076149,0.088731,0.102996,0.131016,0.186409,0.296168", \
				        "0.076149,0.088742,0.102948,0.131027,0.186431,0.296183", \
				        "0.076157,0.088748,0.102997,0.131025,0.186415,0.296181", \
				        "0.077287,0.089393,0.103291,0.131011,0.186414,0.296170", \
				        "0.091428,0.102678,0.114904,0.139063,0.189318,0.296214", \
				        "0.119677,0.131819,0.144930,0.170288,0.218314,0.311628", \
				        "0.163873,0.177681,0.192583,0.221060,0.274228,0.373101");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.042188,0.047972,0.054462,0.066822,0.090507,0.135698", \
				        "0.045138,0.050756,0.057290,0.069740,0.093355,0.138497", \
				        "0.051284,0.056948,0.063333,0.075657,0.099193,0.144306", \
				        "0.065407,0.070753,0.076525,0.088310,0.111446,0.156386", \
				        "0.083961,0.091183,0.098710,0.112908,0.137702,0.181658", \
				        "0.103163,0.112406,0.122286,0.140940,0.173960,0.229394", \
				        "0.116708,0.129041,0.142331,0.166657,0.209927,0.283718", \
				        "0.115607,0.131816,0.148409,0.180217,0.236854,0.333647");
			}
			cell_rise(Timing_X4) {
				values ("0.142859,0.156560,0.172220,0.203141,0.264274,0.385724", \
				        "0.146494,0.160144,0.175870,0.206815,0.268033,0.389513", \
				        "0.153386,0.167101,0.182642,0.213623,0.274842,0.396446", \
				        "0.165615,0.179440,0.195093,0.225918,0.287224,0.408941", \
				        "0.186451,0.200255,0.215954,0.246778,0.308011,0.429645", \
				        "0.215850,0.231242,0.248374,0.281078,0.343172,0.464708", \
				        "0.253900,0.272191,0.291804,0.329422,0.399662,0.529927", \
				        "0.323540,0.345580,0.368508,0.412945,0.493241,0.639511");
			}
			fall_transition(Timing_X4) {
				values ("0.031720,0.036331,0.041202,0.050744,0.069475,0.106497", \
				        "0.031511,0.036095,0.041080,0.050638,0.069426,0.106491", \
				        "0.030349,0.035370,0.040530,0.050379,0.069308,0.106425", \
				        "0.032710,0.036418,0.040814,0.049873,0.068770,0.106355", \
				        "0.045055,0.049061,0.053313,0.060633,0.074465,0.106772", \
				        "0.065493,0.070618,0.076035,0.085674,0.102069,0.130076", \
				        "0.098644,0.105658,0.113006,0.125854,0.147702,0.183965", \
				        "0.154417,0.164420,0.174567,0.192239,0.221914,0.270046");
			}
			rise_transition(Timing_X4) {
				values ("0.067251,0.079703,0.093918,0.121691,0.176877,0.286331", \
				        "0.067252,0.079683,0.093861,0.121635,0.176876,0.286344", \
				        "0.067256,0.079705,0.093837,0.121683,0.176869,0.286331", \
				        "0.067259,0.079703,0.093862,0.121617,0.176876,0.286353", \
				        "0.067895,0.080097,0.094122,0.121727,0.176859,0.286330", \
				        "0.077956,0.089709,0.102621,0.127637,0.179158,0.286390", \
				        "0.100947,0.112972,0.126298,0.152295,0.202885,0.300589", \
				        "0.151647,0.163181,0.176056,0.201528,0.251825,0.351649");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.042188,0.047972,0.054462,0.066822,0.090507,0.135698", \
				        "0.045138,0.050756,0.057290,0.069740,0.093355,0.138497", \
				        "0.051284,0.056948,0.063333,0.075657,0.099193,0.144306", \
				        "0.065407,0.070753,0.076525,0.088310,0.111446,0.156386", \
				        "0.083961,0.091183,0.098710,0.112908,0.137702,0.181658", \
				        "0.103163,0.112406,0.122286,0.140940,0.173960,0.229394", \
				        "0.116708,0.129041,0.142331,0.166657,0.209927,0.283718", \
				        "0.115607,0.131816,0.148409,0.180217,0.236854,0.333647");
			}
			cell_rise(Timing_X4) {
				values ("0.100357,0.112354,0.126012,0.152519,0.205055,0.309512", \
				        "0.103974,0.115913,0.129521,0.156153,0.208752,0.313302", \
				        "0.110952,0.122895,0.136418,0.162968,0.215618,0.320288", \
				        "0.123418,0.135374,0.148853,0.175420,0.228066,0.332707", \
				        "0.143830,0.156399,0.170133,0.196805,0.249354,0.353994", \
				        "0.167897,0.183039,0.199553,0.230088,0.286605,0.391882", \
				        "0.198208,0.217361,0.237395,0.274427,0.341047,0.460545", \
				        "0.256097,0.280629,0.305226,0.351174,0.431018,0.570070");
			}
			fall_transition(Timing_X4) {
				values ("0.031720,0.036331,0.041202,0.050744,0.069475,0.106497", \
				        "0.031511,0.036095,0.041080,0.050638,0.069426,0.106491", \
				        "0.030349,0.035370,0.040530,0.050379,0.069308,0.106425", \
				        "0.032710,0.036418,0.040814,0.049873,0.068770,0.106355", \
				        "0.045055,0.049061,0.053313,0.060633,0.074465,0.106772", \
				        "0.065493,0.070618,0.076035,0.085674,0.102069,0.130076", \
				        "0.098644,0.105658,0.113006,0.125854,0.147702,0.183965", \
				        "0.154417,0.164420,0.174567,0.192239,0.221914,0.270046");
			}
			rise_transition(Timing_X4) {
				values ("0.047844,0.057976,0.069767,0.092953,0.139266,0.231519", \
				        "0.047839,0.057954,0.069646,0.092872,0.139267,0.231509", \
				        "0.047859,0.057963,0.069769,0.092920,0.139265,0.231522", \
				        "0.047897,0.058029,0.069767,0.092958,0.139266,0.231522", \
				        "0.051008,0.060174,0.071019,0.093368,0.139272,0.231504", \
				        "0.064295,0.073571,0.084192,0.104704,0.145280,0.232261", \
				        "0.093949,0.102353,0.112567,0.133075,0.174420,0.255141", \
				        "0.153961,0.161203,0.170271,0.189403,0.229358,0.311400");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & B2 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.033788,0.039956,0.046816,0.059871,0.084342,0.130559", \
				        "0.036919,0.042982,0.049830,0.062812,0.087206,0.133370", \
				        "0.043917,0.049626,0.056223,0.068938,0.093125,0.139132", \
				        "0.058264,0.064170,0.070221,0.082162,0.105609,0.151207", \
				        "0.075220,0.083141,0.091200,0.106278,0.132131,0.176694", \
				        "0.092052,0.102058,0.112717,0.132427,0.166832,0.223946", \
				        "0.101971,0.115373,0.129294,0.155112,0.200225,0.276128", \
				        "0.094899,0.112081,0.129902,0.163175,0.222114,0.321905");
			}
			cell_rise(Timing_X4) {
				values ("0.109702,0.123620,0.139381,0.170115,0.231172,0.352415", \
				        "0.113243,0.127142,0.142934,0.173740,0.234833,0.356264", \
				        "0.120179,0.134088,0.149589,0.180508,0.241656,0.363084", \
				        "0.132492,0.146521,0.162115,0.192906,0.254082,0.375562", \
				        "0.152752,0.167131,0.182953,0.213788,0.274804,0.396248", \
				        "0.176605,0.193443,0.211792,0.245987,0.309818,0.431345", \
				        "0.207277,0.227662,0.249024,0.288930,0.361883,0.495034", \
				        "0.265891,0.291469,0.317260,0.365459,0.450128,0.600552");
			}
			fall_transition(Timing_X4) {
				values ("0.029664,0.034525,0.039803,0.049765,0.068886,0.106056", \
				        "0.029060,0.034129,0.039473,0.049562,0.068777,0.106012", \
				        "0.027801,0.032835,0.038342,0.048853,0.068508,0.105936", \
				        "0.032684,0.036031,0.040209,0.048789,0.067579,0.105627", \
				        "0.045827,0.049764,0.053994,0.061204,0.074550,0.106086", \
				        "0.067256,0.072256,0.077596,0.086900,0.103028,0.130502", \
				        "0.102161,0.109165,0.116246,0.128640,0.149765,0.185091", \
				        "0.161479,0.171283,0.181106,0.198111,0.226737,0.273240");
			}
			rise_transition(Timing_X4) {
				values ("0.050009,0.062038,0.075779,0.103164,0.157829,0.266620", \
				        "0.050027,0.062003,0.075734,0.103140,0.157826,0.266631", \
				        "0.050037,0.062040,0.075820,0.103189,0.157813,0.266631", \
				        "0.050109,0.062099,0.075862,0.103202,0.157802,0.266628", \
				        "0.052601,0.063732,0.076807,0.103452,0.157836,0.266611", \
				        "0.064203,0.075319,0.088049,0.112564,0.161962,0.266838", \
				        "0.090417,0.100935,0.113292,0.138055,0.187611,0.284314", \
				        "0.147430,0.156687,0.167652,0.190838,0.238529,0.336079");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A2 & !B1 & !B2 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.035560,0.041861,0.048853,0.061897,0.086452,0.132744", \
				        "0.038670,0.044843,0.051751,0.064802,0.089309,0.135544", \
				        "0.045482,0.051438,0.058080,0.070877,0.095283,0.141372", \
				        "0.060270,0.066124,0.072228,0.084032,0.107643,0.153463", \
				        "0.078290,0.086055,0.094174,0.108852,0.134412,0.178908", \
				        "0.097029,0.106853,0.117360,0.136582,0.170381,0.226815", \
				        "0.110811,0.123512,0.137374,0.162164,0.206284,0.281023", \
				        "0.111031,0.127286,0.144301,0.176455,0.233646,0.331324");
			}
			cell_rise(Timing_X4) {
				values ("0.108365,0.119833,0.132801,0.158283,0.208621,0.308550", \
				        "0.112066,0.123465,0.136459,0.162031,0.212430,0.312437", \
				        "0.119208,0.130686,0.143526,0.169073,0.219510,0.319574", \
				        "0.132594,0.144140,0.156977,0.182414,0.232862,0.333027", \
				        "0.155425,0.167230,0.180408,0.205949,0.256271,0.356353", \
				        "0.184305,0.198468,0.213882,0.242778,0.296389,0.396856", \
				        "0.220687,0.238128,0.256824,0.291859,0.355281,0.469316", \
				        "0.283415,0.305984,0.328918,0.372379,0.448703,0.582423");
			}
			fall_transition(Timing_X4) {
				values ("0.039522,0.043655,0.048381,0.057744,0.076135,0.112727", \
				        "0.038875,0.043112,0.048019,0.057514,0.076042,0.112693", \
				        "0.037186,0.041628,0.046879,0.056843,0.075768,0.112645", \
				        "0.040810,0.043887,0.048000,0.056388,0.074734,0.112373", \
				        "0.055710,0.058587,0.062026,0.068270,0.081082,0.112587", \
				        "0.080119,0.083891,0.088148,0.095952,0.110551,0.136596", \
				        "0.118924,0.124116,0.129808,0.140329,0.159463,0.192848", \
				        "0.182859,0.190411,0.198305,0.212883,0.238656,0.282660");
			}
			rise_transition(Timing_X4) {
				values ("0.048028,0.058230,0.069886,0.092771,0.138317,0.229035", \
				        "0.048039,0.058229,0.069863,0.092775,0.138295,0.229036", \
				        "0.048051,0.058234,0.069925,0.092775,0.138328,0.229040", \
				        "0.048135,0.058259,0.069960,0.092747,0.138332,0.229040", \
				        "0.050598,0.060020,0.071059,0.093210,0.138369,0.229033", \
				        "0.063334,0.072907,0.083600,0.103922,0.144056,0.229782", \
				        "0.090166,0.099922,0.110771,0.131940,0.173153,0.252605", \
				        "0.146198,0.155325,0.165735,0.186568,0.227788,0.309495");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & !A2 & !B1 & B2 & C2 | !A1 & B1 & !B2 & C2 | !A2 & B1 & !B2 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.034680,0.040956,0.047841,0.060896,0.085472,0.131816", \
				        "0.037803,0.044053,0.050829,0.063819,0.088302,0.134571", \
				        "0.044700,0.050598,0.057203,0.069954,0.094263,0.140459", \
				        "0.059215,0.065225,0.071374,0.083026,0.106653,0.152514", \
				        "0.076749,0.084732,0.092878,0.107646,0.133340,0.177925", \
				        "0.094641,0.104626,0.115377,0.134733,0.168805,0.225594", \
				        "0.107436,0.120154,0.133977,0.159163,0.203650,0.279018", \
				        "0.105885,0.121884,0.139062,0.171109,0.228757,0.327333");
			}
			cell_rise(Timing_X4) {
				values ("0.142859,0.156560,0.172220,0.203141,0.264274,0.385724", \
				        "0.146494,0.160144,0.175870,0.206815,0.268033,0.389513", \
				        "0.153386,0.167101,0.182642,0.213623,0.274842,0.396446", \
				        "0.165615,0.179440,0.195093,0.225918,0.287224,0.408941", \
				        "0.186451,0.200255,0.215954,0.246778,0.308011,0.429645", \
				        "0.215850,0.231242,0.248374,0.281078,0.343172,0.464708", \
				        "0.253900,0.272191,0.291804,0.329422,0.399662,0.529927", \
				        "0.323540,0.345580,0.368508,0.412945,0.493241,0.639511");
			}
			fall_transition(Timing_X4) {
				values ("0.045559,0.049594,0.054131,0.063193,0.081328,0.117708", \
				        "0.044921,0.049082,0.053765,0.062966,0.081239,0.117639", \
				        "0.043450,0.047723,0.052616,0.062290,0.080915,0.117546", \
				        "0.047467,0.050400,0.054139,0.062046,0.079965,0.117251", \
				        "0.063898,0.066299,0.069116,0.074573,0.086726,0.117653", \
				        "0.091615,0.094583,0.097989,0.104709,0.117774,0.142307", \
				        "0.136058,0.140016,0.144573,0.153373,0.170170,0.201161", \
				        "0.208987,0.214690,0.221163,0.233116,0.255561,0.295782");
			}
			rise_transition(Timing_X4) {
				values ("0.067251,0.079703,0.093918,0.121691,0.176877,0.286331", \
				        "0.067252,0.079683,0.093861,0.121635,0.176876,0.286344", \
				        "0.067256,0.079705,0.093837,0.121683,0.176869,0.286331", \
				        "0.067259,0.079703,0.093862,0.121617,0.176876,0.286353", \
				        "0.067895,0.080097,0.094122,0.121727,0.176859,0.286330", \
				        "0.077956,0.089709,0.102621,0.127637,0.179158,0.286390", \
				        "0.100947,0.112972,0.126298,0.152295,0.202885,0.300589", \
				        "0.151647,0.163181,0.176056,0.201528,0.251825,0.351649");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.046466,0.052256,0.058625,0.071079,0.094764,0.140004", \
				        "0.049029,0.054814,0.061213,0.073654,0.097326,0.142596", \
				        "0.053967,0.059768,0.066144,0.078558,0.102254,0.147533", \
				        "0.064038,0.069876,0.076318,0.088593,0.112164,0.157393", \
				        "0.079908,0.086285,0.093407,0.106779,0.131429,0.176889", \
				        "0.098235,0.106740,0.115481,0.131989,0.161414,0.212819", \
				        "0.113685,0.124446,0.136394,0.158366,0.197051,0.262124", \
				        "0.112933,0.128262,0.144162,0.173736,0.225934,0.313599");
			}
			cell_rise(Timing_X4) {
				values ("0.158246,0.171908,0.187412,0.218343,0.279476,0.400891", \
				        "0.162105,0.175715,0.191120,0.222065,0.283316,0.404743", \
				        "0.169239,0.182901,0.198216,0.229240,0.290370,0.411846", \
				        "0.181717,0.195517,0.211007,0.241819,0.303020,0.424515", \
				        "0.202749,0.216465,0.232139,0.262922,0.324096,0.445586", \
				        "0.234097,0.249106,0.265783,0.297948,0.359451,0.480884", \
				        "0.275366,0.293263,0.312148,0.348854,0.417980,0.546838", \
				        "0.354900,0.375812,0.397170,0.439512,0.517313,0.660673");
			}
			fall_transition(Timing_X4) {
				values ("0.031699,0.036263,0.041241,0.050710,0.069469,0.106451", \
				        "0.031607,0.036133,0.041170,0.050674,0.069418,0.106497", \
				        "0.031090,0.035767,0.040879,0.050539,0.069405,0.106461", \
				        "0.031655,0.035908,0.040929,0.050319,0.069081,0.106399", \
				        "0.037518,0.041621,0.046300,0.054872,0.071614,0.106854", \
				        "0.051347,0.055688,0.060446,0.068989,0.085253,0.117384", \
				        "0.076275,0.081712,0.087442,0.097843,0.115894,0.148216", \
				        "0.117285,0.124891,0.132926,0.146796,0.170374,0.209362");
			}
			rise_transition(Timing_X4) {
				values ("0.076139,0.088735,0.102967,0.130961,0.186408,0.296182", \
				        "0.076153,0.088731,0.102989,0.130980,0.186398,0.296172", \
				        "0.076150,0.088723,0.102996,0.130981,0.186430,0.296166", \
				        "0.076150,0.088753,0.103014,0.131008,0.186398,0.296157", \
				        "0.076452,0.088905,0.103050,0.131034,0.186427,0.296173", \
				        "0.085358,0.097170,0.110152,0.135660,0.188038,0.296194", \
				        "0.107160,0.119581,0.133213,0.159715,0.210585,0.308921", \
				        "0.150106,0.162820,0.176951,0.204227,0.256812,0.358772");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.046466,0.052256,0.058625,0.071079,0.094764,0.140004", \
				        "0.049029,0.054814,0.061213,0.073654,0.097326,0.142596", \
				        "0.053967,0.059768,0.066144,0.078558,0.102254,0.147533", \
				        "0.064038,0.069876,0.076318,0.088593,0.112164,0.157393", \
				        "0.079908,0.086285,0.093407,0.106779,0.131429,0.176889", \
				        "0.098235,0.106740,0.115481,0.131989,0.161414,0.212819", \
				        "0.113685,0.124446,0.136394,0.158366,0.197051,0.262124", \
				        "0.112933,0.128262,0.144162,0.173736,0.225934,0.313599");
			}
			cell_rise(Timing_X4) {
				values ("0.113649,0.125449,0.138929,0.165460,0.218058,0.322487", \
				        "0.117459,0.129242,0.142620,0.169164,0.221851,0.326334", \
				        "0.124605,0.136421,0.149803,0.176341,0.228932,0.333473", \
				        "0.137252,0.149115,0.162544,0.189011,0.241588,0.346070", \
				        "0.158468,0.170530,0.184166,0.210571,0.263121,0.367676", \
				        "0.185696,0.199982,0.215739,0.245530,0.300947,0.405748", \
				        "0.220988,0.238697,0.257503,0.293151,0.358113,0.475796", \
				        "0.291876,0.313923,0.336389,0.379119,0.455102,0.590296");
			}
			fall_transition(Timing_X4) {
				values ("0.031699,0.036263,0.041241,0.050710,0.069469,0.106451", \
				        "0.031607,0.036133,0.041170,0.050674,0.069418,0.106497", \
				        "0.031090,0.035767,0.040879,0.050539,0.069405,0.106461", \
				        "0.031655,0.035908,0.040929,0.050319,0.069081,0.106399", \
				        "0.037518,0.041621,0.046300,0.054872,0.071614,0.106854", \
				        "0.051347,0.055688,0.060446,0.068989,0.085253,0.117384", \
				        "0.076275,0.081712,0.087442,0.097843,0.115894,0.148216", \
				        "0.117285,0.124891,0.132926,0.146796,0.170374,0.209362");
			}
			rise_transition(Timing_X4) {
				values ("0.055199,0.065512,0.077386,0.100777,0.147268,0.239737", \
				        "0.055190,0.065490,0.077321,0.100797,0.147281,0.239716", \
				        "0.055189,0.065484,0.077407,0.100788,0.147279,0.239721", \
				        "0.055229,0.065504,0.077407,0.100688,0.147260,0.239716", \
				        "0.057069,0.066776,0.078110,0.100946,0.147230,0.239743", \
				        "0.069674,0.079269,0.090041,0.110744,0.152139,0.240166", \
				        "0.095872,0.105637,0.116608,0.138202,0.180377,0.261410", \
				        "0.144917,0.154773,0.165873,0.187871,0.231248,0.316262");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & B2 & C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.038079,0.044258,0.051020,0.064085,0.088617,0.134853", \
				        "0.040716,0.046859,0.053634,0.066658,0.091168,0.137420", \
				        "0.045988,0.052099,0.058711,0.071679,0.096124,0.142405", \
				        "0.056432,0.062597,0.069328,0.081922,0.106145,0.152231", \
				        "0.071665,0.078585,0.086016,0.100029,0.125541,0.171754", \
				        "0.087997,0.097099,0.106581,0.124173,0.154794,0.207390", \
				        "0.099065,0.111382,0.124121,0.147558,0.188212,0.255375", \
				        "0.092469,0.109112,0.126174,0.157643,0.212382,0.303177");
			}
			cell_rise(Timing_X4) {
				values ("0.125318,0.139019,0.154613,0.185353,0.246350,0.367554", \
				        "0.129088,0.142768,0.158319,0.189115,0.250130,0.371389", \
				        "0.136237,0.149913,0.165350,0.196119,0.257168,0.378466", \
				        "0.148705,0.162549,0.178081,0.208803,0.269853,0.391137", \
				        "0.169607,0.183493,0.199198,0.229934,0.290905,0.412186", \
				        "0.196432,0.212415,0.230029,0.263391,0.326215,0.447543", \
				        "0.231379,0.250454,0.270737,0.309315,0.380738,0.512239", \
				        "0.302363,0.325565,0.349184,0.394360,0.475458,0.622365");
			}
			fall_transition(Timing_X4) {
				values ("0.029658,0.034554,0.039797,0.049761,0.068895,0.106051", \
				        "0.029371,0.034309,0.039633,0.049669,0.068850,0.105956", \
				        "0.028674,0.033590,0.039031,0.049298,0.068670,0.105978", \
				        "0.030277,0.034546,0.039435,0.049014,0.068146,0.105807", \
				        "0.037292,0.041286,0.045909,0.054396,0.071045,0.106052", \
				        "0.052193,0.056439,0.061189,0.069344,0.085385,0.117015", \
				        "0.078700,0.083755,0.089392,0.099443,0.117036,0.148609", \
				        "0.121613,0.129034,0.136882,0.150462,0.173317,0.211195");
			}
			rise_transition(Timing_X4) {
				values ("0.058531,0.070818,0.084837,0.112352,0.167330,0.276430", \
				        "0.058534,0.070815,0.084829,0.112362,0.167287,0.276437", \
				        "0.058542,0.070787,0.084851,0.112367,0.167284,0.276404", \
				        "0.058572,0.070817,0.084808,0.112400,0.167339,0.276421", \
				        "0.059939,0.071670,0.085325,0.112570,0.167333,0.276433", \
				        "0.070770,0.082303,0.095172,0.120017,0.170487,0.276528", \
				        "0.093779,0.105639,0.118832,0.144724,0.195107,0.292352", \
				        "0.139727,0.151530,0.164826,0.190987,0.242156,0.342733");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A2 & !B1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.039828,0.046107,0.053031,0.066099,0.090723,0.137042", \
				        "0.042472,0.048726,0.055618,0.068687,0.093277,0.139622", \
				        "0.047703,0.053911,0.060725,0.073687,0.098198,0.144599", \
				        "0.058268,0.064491,0.071219,0.083849,0.108244,0.154451", \
				        "0.074003,0.080864,0.088398,0.102296,0.127704,0.173938", \
				        "0.091703,0.100745,0.110163,0.127332,0.157584,0.209949", \
				        "0.105925,0.117700,0.130276,0.153107,0.192807,0.259077", \
				        "0.105310,0.121074,0.137687,0.168027,0.221265,0.310248");
			}
			cell_rise(Timing_X4) {
				values ("0.121029,0.132317,0.145236,0.170665,0.220973,0.320897", \
				        "0.124911,0.136170,0.149076,0.174531,0.224860,0.324830", \
				        "0.132266,0.143581,0.156321,0.181774,0.232137,0.332136", \
				        "0.145795,0.157201,0.170065,0.195384,0.245769,0.345747", \
				        "0.169092,0.180602,0.193655,0.219144,0.269376,0.369384", \
				        "0.200811,0.214335,0.229133,0.257329,0.309957,0.410073", \
				        "0.241503,0.257979,0.275777,0.309523,0.371471,0.483863", \
				        "0.315937,0.336656,0.357780,0.398526,0.471571,0.601756");
			}
			fall_transition(Timing_X4) {
				values ("0.039546,0.043701,0.048441,0.057727,0.076147,0.112736", \
				        "0.039253,0.043446,0.048241,0.057611,0.076092,0.112734", \
				        "0.038365,0.042664,0.047575,0.057258,0.075916,0.112667", \
				        "0.039225,0.043090,0.047709,0.056862,0.075368,0.112523", \
				        "0.046487,0.049829,0.053962,0.061833,0.078019,0.112777", \
				        "0.062812,0.066186,0.070005,0.077497,0.092587,0.123542", \
				        "0.092125,0.096034,0.100497,0.109051,0.125116,0.155554", \
				        "0.139119,0.144870,0.151341,0.162826,0.183470,0.219382");
			}
			rise_transition(Timing_X4) {
				values ("0.055099,0.065383,0.077234,0.100228,0.146049,0.237019", \
				        "0.055101,0.065393,0.077229,0.100331,0.146065,0.237019", \
				        "0.055104,0.065361,0.077237,0.100335,0.146077,0.237026", \
				        "0.055134,0.065429,0.077134,0.100225,0.146053,0.237033", \
				        "0.056616,0.066431,0.077798,0.100569,0.146135,0.237022", \
				        "0.068758,0.078450,0.089212,0.109720,0.150682,0.237472", \
				        "0.093433,0.103945,0.115289,0.137165,0.178978,0.258694", \
				        "0.140436,0.151327,0.163210,0.186286,0.230107,0.314389");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & !A2 & !B1 & B2 & C1 | !A1 & B1 & !B2 & C1 | !A2 & B1 & !B2 & C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.038974,0.045283,0.052020,0.065128,0.089714,0.136121", \
				        "0.041607,0.047816,0.054674,0.067701,0.092280,0.138702", \
				        "0.046856,0.053016,0.059711,0.072632,0.097239,0.143622", \
				        "0.057331,0.063612,0.070232,0.082818,0.107184,0.153502", \
				        "0.072777,0.079780,0.087238,0.101150,0.126642,0.172949", \
				        "0.089813,0.098881,0.108535,0.125756,0.156223,0.208831", \
				        "0.102616,0.114546,0.127335,0.150346,0.190560,0.257404", \
				        "0.099033,0.114860,0.131948,0.162710,0.216642,0.306717");
			}
			cell_rise(Timing_X4) {
				values ("0.158246,0.171908,0.187412,0.218343,0.279476,0.400891", \
				        "0.162105,0.175715,0.191120,0.222065,0.283316,0.404743", \
				        "0.169239,0.182901,0.198216,0.229240,0.290370,0.411846", \
				        "0.181717,0.195517,0.211007,0.241819,0.303020,0.424515", \
				        "0.202749,0.216465,0.232139,0.262922,0.324096,0.445586", \
				        "0.234097,0.249106,0.265783,0.297948,0.359451,0.480884", \
				        "0.275366,0.293263,0.312148,0.348854,0.417980,0.546838", \
				        "0.354900,0.375812,0.397170,0.439512,0.517313,0.660673");
			}
			fall_transition(Timing_X4) {
				values ("0.045548,0.049617,0.054127,0.063171,0.081330,0.117657", \
				        "0.045249,0.049368,0.053961,0.063053,0.081277,0.117637", \
				        "0.044481,0.048633,0.053312,0.062683,0.081107,0.117611", \
				        "0.045548,0.049264,0.053606,0.062353,0.080563,0.117423", \
				        "0.053561,0.056639,0.060249,0.067713,0.083369,0.117730", \
				        "0.071704,0.074556,0.077864,0.084472,0.098692,0.128791", \
				        "0.104695,0.107851,0.111559,0.118890,0.133380,0.162222", \
				        "0.158431,0.163013,0.168163,0.177789,0.195903,0.229065");
			}
			rise_transition(Timing_X4) {
				values ("0.076139,0.088735,0.102967,0.130961,0.186408,0.296182", \
				        "0.076153,0.088731,0.102989,0.130980,0.186398,0.296172", \
				        "0.076150,0.088723,0.102996,0.130981,0.186430,0.296166", \
				        "0.076150,0.088753,0.103014,0.131008,0.186398,0.296157", \
				        "0.076452,0.088905,0.103050,0.131034,0.186427,0.296173", \
				        "0.085358,0.097170,0.110152,0.135660,0.188038,0.296194", \
				        "0.107160,0.119581,0.133213,0.159715,0.210585,0.308921", \
				        "0.150106,0.162820,0.176951,0.204227,0.256812,0.358772");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.002714,0.001040,-0.000881,-0.004737,-0.012451,-0.027900", \
				        "0.002760,0.001081,-0.000854,-0.004698,-0.012420,-0.027865", \
				        "0.002849,0.001173,-0.000767,-0.004606,-0.012337,-0.027787", \
				        "0.003212,0.001478,-0.000480,-0.004399,-0.012148,-0.027677", \
				        "0.004227,0.002335,0.000253,-0.003821,-0.011749,-0.027399", \
				        "0.006877,0.004763,0.002439,-0.001991,-0.010387,-0.026444", \
				        "0.012900,0.010553,0.007964,0.003007,-0.006272,-0.023393", \
				        "0.025795,0.023168,0.020289,0.014801,0.004448,-0.014591");
			}
			rise_power(Power_X4) {
				values ("0.014446,0.016131,0.018069,0.021972,0.029745,0.045248", \
				        "0.014443,0.016118,0.018062,0.021966,0.029729,0.045258", \
				        "0.014474,0.016206,0.018127,0.022028,0.029764,0.045276", \
				        "0.014771,0.016475,0.018403,0.022238,0.029928,0.045382", \
				        "0.015695,0.017329,0.019207,0.022920,0.030519,0.045803", \
				        "0.017793,0.019346,0.021130,0.024757,0.032136,0.047109", \
				        "0.022551,0.023971,0.025594,0.028992,0.036034,0.050572", \
				        "0.033398,0.034455,0.035732,0.038633,0.044971,0.058733");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !C1 & !C2 | A2 & !B1 & !B2 & !C1";

			rise_power(Power_X4) {
				values ("0.008717,0.010419,0.012382,0.016278,0.024021,0.039548", \
				        "0.008732,0.010410,0.012363,0.016267,0.024048,0.039545", \
				        "0.008847,0.010526,0.012459,0.016316,0.024048,0.039562", \
				        "0.009263,0.010922,0.012808,0.016605,0.024260,0.039656", \
				        "0.010402,0.011947,0.013777,0.017433,0.024941,0.040161", \
				        "0.012929,0.014351,0.016040,0.019552,0.026789,0.041646", \
				        "0.018646,0.019781,0.021264,0.024396,0.031157,0.045443", \
				        "0.031234,0.032020,0.033058,0.035504,0.041298,0.054486");
			}
			fall_power(Power_X4) {
				values ("0.002698,0.001028,-0.000897,-0.004740,-0.012467,-0.027923", \
				        "0.002760,0.001054,-0.000866,-0.004701,-0.012433,-0.027878", \
				        "0.002830,0.001143,-0.000773,-0.004639,-0.012345,-0.027787", \
				        "0.003178,0.001437,-0.000507,-0.004428,-0.012191,-0.027711", \
				        "0.004223,0.002313,0.000233,-0.003839,-0.011780,-0.027416", \
				        "0.006877,0.004763,0.002439,-0.002005,-0.010387,-0.026444", \
				        "0.012900,0.010553,0.007964,0.003007,-0.006272,-0.023393", \
				        "0.025795,0.023168,0.020289,0.014801,0.004448,-0.014591");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.008419,0.010152,0.012104,0.015992,0.023749,0.039266", \
				        "0.008419,0.010147,0.012078,0.015992,0.023732,0.039245", \
				        "0.008560,0.010247,0.012175,0.016047,0.023760,0.039272", \
				        "0.008996,0.010631,0.012508,0.016309,0.023967,0.039382", \
				        "0.010115,0.011598,0.013445,0.017128,0.024618,0.039838", \
				        "0.012405,0.013867,0.015567,0.019105,0.026358,0.041235", \
				        "0.017638,0.018847,0.020338,0.023562,0.030402,0.044806", \
				        "0.029175,0.029940,0.031090,0.033649,0.039661,0.053106");
			}
			fall_power(Power_X4) {
				values ("0.002714,0.001022,-0.000896,-0.004737,-0.012457,-0.027900", \
				        "0.002745,0.001081,-0.000857,-0.004698,-0.012422,-0.027873", \
				        "0.002848,0.001157,-0.000770,-0.004622,-0.012342,-0.027799", \
				        "0.003193,0.001478,-0.000480,-0.004400,-0.012166,-0.027677", \
				        "0.004227,0.002335,0.000253,-0.003821,-0.011755,-0.027399", \
				        "0.006736,0.004618,0.002321,-0.002088,-0.010444,-0.026468", \
				        "0.012265,0.009982,0.007425,0.002579,-0.006573,-0.023640", \
				        "0.024184,0.021643,0.018841,0.013484,0.003358,-0.015429");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2 & C1 & !C2 | A2 & B1 & !B2 & !C1 & C2 | A2 & B1 & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.014446,0.016131,0.018069,0.021972,0.029745,0.045248", \
				        "0.014443,0.016118,0.018062,0.021966,0.029729,0.045258", \
				        "0.014474,0.016206,0.018127,0.022028,0.029764,0.045276", \
				        "0.014771,0.016475,0.018403,0.022238,0.029928,0.045382", \
				        "0.015695,0.017329,0.019207,0.022920,0.030519,0.045803", \
				        "0.017793,0.019346,0.021130,0.024757,0.032136,0.047109", \
				        "0.022551,0.023971,0.025594,0.028992,0.036034,0.050572", \
				        "0.033398,0.034455,0.035732,0.038633,0.044971,0.058733");
			}
			fall_power(Power_X4) {
				values ("0.002714,0.001040,-0.000881,-0.004740,-0.012451,-0.027936", \
				        "0.002732,0.001072,-0.000858,-0.004704,-0.012420,-0.027886", \
				        "0.002849,0.001173,-0.000767,-0.004606,-0.012337,-0.027798", \
				        "0.003212,0.001457,-0.000506,-0.004399,-0.012148,-0.027681", \
				        "0.004134,0.002275,0.000209,-0.003830,-0.011749,-0.027407", \
				        "0.006416,0.004403,0.002159,-0.002173,-0.010471,-0.026482", \
				        "0.011732,0.009540,0.007061,0.002309,-0.006729,-0.023645", \
				        "0.023437,0.020955,0.018254,0.012984,0.003011,-0.015585");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2 & !C1 & !C2 | A2 & !B1 & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.011727,0.013402,0.015368,0.019266,0.027037,0.042556", \
				        "0.011726,0.013404,0.015340,0.019258,0.027026,0.042540", \
				        "0.011793,0.013515,0.015444,0.019322,0.027054,0.042574", \
				        "0.012169,0.013842,0.015727,0.019570,0.027242,0.042663", \
				        "0.013192,0.014785,0.016635,0.020332,0.027894,0.043148", \
				        "0.015671,0.017071,0.018798,0.022350,0.029657,0.044574", \
				        "0.020999,0.022273,0.023820,0.027060,0.033952,0.048329", \
				        "0.033223,0.034120,0.035304,0.037882,0.043912,0.057237");
			}
			fall_power(Power_X4) {
				values ("0.002713,0.001040,-0.000888,-0.004741,-0.012458,-0.027913", \
				        "0.002699,0.001068,-0.000854,-0.004701,-0.012420,-0.027865", \
				        "0.002844,0.001162,-0.000778,-0.004637,-0.012351,-0.027801", \
				        "0.003179,0.001434,-0.000518,-0.004424,-0.012182,-0.027712", \
				        "0.004158,0.002291,0.000206,-0.003840,-0.011779,-0.027423", \
				        "0.006730,0.004634,0.002348,-0.001991,-0.010396,-0.026457", \
				        "0.012601,0.010306,0.007756,0.002860,-0.006331,-0.023409", \
				        "0.025364,0.022780,0.019948,0.014524,0.004265,-0.014688");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.002695,0.001020,-0.000901,-0.004685,-0.012462,-0.027924", \
				        "0.002654,0.001000,-0.000910,-0.004758,-0.012467,-0.027944", \
				        "0.002630,0.000970,-0.000940,-0.004777,-0.012492,-0.027972", \
				        "0.002743,0.001060,-0.000866,-0.004704,-0.012406,-0.027891", \
				        "0.003387,0.001579,-0.000431,-0.004383,-0.012183,-0.027696", \
				        "0.005310,0.003308,0.001096,-0.003158,-0.011319,-0.027133", \
				        "0.010214,0.007973,0.005521,0.000782,-0.008188,-0.024945", \
				        "0.021184,0.018728,0.015937,0.010660,0.000660,-0.017859");
			}
			rise_power(Power_X4) {
				values ("0.017263,0.018947,0.020858,0.024753,0.032516,0.048038", \
				        "0.017240,0.018947,0.020876,0.024751,0.032510,0.048055", \
				        "0.017322,0.019015,0.020956,0.024817,0.032570,0.048071", \
				        "0.017634,0.019328,0.021212,0.025066,0.032756,0.048201", \
				        "0.018570,0.020151,0.022049,0.025786,0.033366,0.048663", \
				        "0.020622,0.022252,0.024034,0.027665,0.035049,0.050053", \
				        "0.025374,0.026853,0.028541,0.032003,0.039103,0.053596", \
				        "0.035585,0.036899,0.038461,0.041651,0.048242,0.062009");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2 & C1 & !C2 | A1 & B1 & !B2 & !C1 & C2 | A1 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.014262,0.015945,0.017880,0.021777,0.029521,0.045023", \
				        "0.014254,0.015974,0.017897,0.021768,0.029522,0.045027", \
				        "0.014360,0.016050,0.017969,0.021832,0.029574,0.045065", \
				        "0.014714,0.016380,0.018267,0.022098,0.029771,0.045201", \
				        "0.015678,0.017300,0.019151,0.022868,0.030418,0.045679", \
				        "0.017894,0.019427,0.021226,0.024811,0.032149,0.047073", \
				        "0.022728,0.024171,0.025861,0.029262,0.036257,0.050701", \
				        "0.033079,0.034386,0.035917,0.039039,0.045542,0.059217");
			}
			fall_power(Power_X4) {
				values ("0.002695,0.001020,-0.000902,-0.004685,-0.012462,-0.027924", \
				        "0.002654,0.000995,-0.000932,-0.004758,-0.012480,-0.027944", \
				        "0.002619,0.000956,-0.000940,-0.004777,-0.012500,-0.027982", \
				        "0.002741,0.001049,-0.000872,-0.004704,-0.012406,-0.027891", \
				        "0.003387,0.001579,-0.000431,-0.004383,-0.012183,-0.027698", \
				        "0.005234,0.003268,0.001077,-0.003158,-0.011319,-0.027133", \
				        "0.009743,0.007578,0.005167,0.000509,-0.008349,-0.025082", \
				        "0.019836,0.017448,0.014770,0.009596,-0.000176,-0.018430");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B2 & !C1 & !C2 | A1 & !B1 & !C1 & !C2 | A1 & !B1 & !B2 & !C2 | A1 & !B1 & !B2 & !C1";

			rise_power(Power_X4) {
				values ("0.014502,0.016227,0.018162,0.022060,0.029815,0.045345", \
				        "0.014533,0.016227,0.018174,0.022067,0.029816,0.045333", \
				        "0.014669,0.016321,0.018245,0.022113,0.029856,0.045363", \
				        "0.015020,0.016669,0.018565,0.022396,0.030056,0.045498", \
				        "0.016026,0.017603,0.019485,0.023177,0.030738,0.046014", \
				        "0.018366,0.019925,0.021690,0.025262,0.032580,0.047478", \
				        "0.023618,0.025015,0.026693,0.030080,0.037032,0.051376", \
				        "0.034872,0.036157,0.037691,0.040736,0.047157,0.060673");
			}
			fall_power(Power_X4) {
				values ("0.002678,0.001019,-0.000903,-0.004763,-0.012479,-0.027933", \
				        "0.002616,0.000992,-0.000910,-0.004762,-0.012474,-0.027946", \
				        "0.002630,0.000955,-0.000959,-0.004797,-0.012509,-0.027975", \
				        "0.002683,0.001025,-0.000895,-0.004741,-0.012451,-0.027911", \
				        "0.003324,0.001537,-0.000471,-0.004422,-0.012215,-0.027740", \
				        "0.005310,0.003308,0.001096,-0.003160,-0.011335,-0.027161", \
				        "0.010214,0.007973,0.005521,0.000782,-0.008188,-0.024945", \
				        "0.021184,0.018728,0.015937,0.010660,0.000660,-0.017859");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.017263,0.018947,0.020858,0.024753,0.032516,0.048038", \
				        "0.017240,0.018947,0.020876,0.024751,0.032510,0.048055", \
				        "0.017322,0.019015,0.020956,0.024817,0.032570,0.048071", \
				        "0.017634,0.019328,0.021212,0.025066,0.032756,0.048201", \
				        "0.018570,0.020151,0.022049,0.025786,0.033366,0.048663", \
				        "0.020622,0.022252,0.024034,0.027665,0.035049,0.050053", \
				        "0.025374,0.026853,0.028541,0.032003,0.039103,0.053596", \
				        "0.035585,0.036899,0.038461,0.041651,0.048242,0.062009");
			}
			fall_power(Power_X4) {
				values ("0.002677,0.001020,-0.000901,-0.004745,-0.012476,-0.027949", \
				        "0.002611,0.001000,-0.000923,-0.004767,-0.012467,-0.027950", \
				        "0.002621,0.000970,-0.000943,-0.004793,-0.012492,-0.027972", \
				        "0.002743,0.001060,-0.000866,-0.004719,-0.012427,-0.027907", \
				        "0.003358,0.001562,-0.000436,-0.004386,-0.012189,-0.027696", \
				        "0.005133,0.003189,0.001012,-0.003196,-0.011322,-0.027146", \
				        "0.009588,0.007416,0.005022,0.000405,-0.008409,-0.025069", \
				        "0.019520,0.017189,0.014530,0.009413,-0.000318,-0.018508");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X4) {
				values ("0.010200,0.008521,0.006598,0.002757,-0.004937,-0.020385", \
				        "0.010204,0.008511,0.006589,0.002756,-0.004950,-0.020358", \
				        "0.010222,0.008522,0.006619,0.002783,-0.004922,-0.020347", \
				        "0.010336,0.008664,0.006742,0.002876,-0.004857,-0.020299", \
				        "0.010897,0.009126,0.007180,0.003243,-0.004573,-0.020113", \
				        "0.012681,0.010835,0.008738,0.004629,-0.003458,-0.019298", \
				        "0.017424,0.015404,0.013174,0.008726,0.000131,-0.016424", \
				        "0.028182,0.025966,0.023471,0.018717,0.009435,-0.008312");
			}
			rise_power(Power_X4) {
				values ("0.016581,0.018326,0.020291,0.024169,0.031929,0.047428", \
				        "0.016501,0.018248,0.020223,0.024115,0.031885,0.047407", \
				        "0.016428,0.018143,0.020091,0.024009,0.031806,0.047350", \
				        "0.016250,0.018045,0.019979,0.023909,0.031714,0.047280", \
				        "0.016221,0.017947,0.019904,0.023800,0.031606,0.047184", \
				        "0.016781,0.018395,0.020303,0.024153,0.031852,0.047315", \
				        "0.019488,0.021044,0.022753,0.026359,0.033742,0.048764", \
				        "0.027758,0.028971,0.030381,0.033457,0.040082,0.054176");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.010612,0.012374,0.014324,0.018220,0.025999,0.041480", \
				        "0.010536,0.012287,0.014247,0.018166,0.025937,0.041461", \
				        "0.010430,0.012168,0.014115,0.018047,0.025856,0.041387", \
				        "0.010298,0.012044,0.014003,0.017936,0.025756,0.041311", \
				        "0.010275,0.011998,0.013934,0.017850,0.025638,0.041235", \
				        "0.010964,0.012578,0.014463,0.018262,0.025929,0.041354", \
				        "0.014320,0.015632,0.017289,0.020721,0.027967,0.042919", \
				        "0.023345,0.024334,0.025573,0.028364,0.034660,0.048496");
			}
			fall_power(Power_X4) {
				values ("0.010188,0.008518,0.006594,0.002757,-0.004948,-0.020391", \
				        "0.010201,0.008511,0.006589,0.002756,-0.004950,-0.020404", \
				        "0.010204,0.008522,0.006610,0.002783,-0.004930,-0.020347", \
				        "0.010336,0.008664,0.006742,0.002876,-0.004857,-0.020307", \
				        "0.010881,0.009126,0.007180,0.003243,-0.004573,-0.020120", \
				        "0.012563,0.010723,0.008656,0.004560,-0.003503,-0.019312", \
				        "0.016899,0.014925,0.012690,0.008316,-0.000207,-0.016660", \
				        "0.026754,0.024657,0.022210,0.017495,0.008333,-0.009219");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A2 & B2 & !C1 & !C2 | !A1 & B2 & !C1 & !C2 | !A1 & !A2 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.013894,0.015617,0.017565,0.021459,0.029210,0.044732", \
				        "0.013779,0.015544,0.017494,0.021399,0.029180,0.044682", \
				        "0.013696,0.015404,0.017364,0.021292,0.029092,0.044604", \
				        "0.013570,0.015274,0.017253,0.021186,0.028988,0.044566", \
				        "0.013544,0.015262,0.017198,0.021115,0.028906,0.044471", \
				        "0.014287,0.015913,0.017786,0.021593,0.029257,0.044685", \
				        "0.017679,0.019148,0.020795,0.024263,0.031494,0.046424", \
				        "0.027366,0.028449,0.029704,0.032515,0.038762,0.052511");
			}
			fall_power(Power_X4) {
				values ("0.010189,0.008505,0.006583,0.002732,-0.004958,-0.020392", \
				        "0.010165,0.008476,0.006553,0.002709,-0.004986,-0.020412", \
				        "0.010161,0.008481,0.006559,0.002721,-0.004984,-0.020393", \
				        "0.010249,0.008598,0.006673,0.002802,-0.004917,-0.020355", \
				        "0.010897,0.009104,0.007145,0.003197,-0.004624,-0.020182", \
				        "0.012681,0.010835,0.008738,0.004629,-0.003458,-0.019298", \
				        "0.017424,0.015404,0.013174,0.008726,0.000131,-0.016424", \
				        "0.028182,0.025966,0.023471,0.018717,0.009435,-0.008312");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2 & !C1 & C2 | !A1 & B2 & C1 & !C2 | !A2 & B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.016581,0.018326,0.020291,0.024169,0.031929,0.047428", \
				        "0.016501,0.018248,0.020223,0.024115,0.031885,0.047407", \
				        "0.016428,0.018143,0.020091,0.024009,0.031806,0.047350", \
				        "0.016250,0.018045,0.019979,0.023909,0.031714,0.047280", \
				        "0.016221,0.017947,0.019904,0.023800,0.031606,0.047184", \
				        "0.016781,0.018395,0.020303,0.024153,0.031852,0.047315", \
				        "0.019488,0.021044,0.022753,0.026359,0.033742,0.048764", \
				        "0.027758,0.028971,0.030381,0.033457,0.040082,0.054176");
			}
			fall_power(Power_X4) {
				values ("0.010200,0.008521,0.006598,0.002755,-0.004937,-0.020385", \
				        "0.010204,0.008506,0.006583,0.002744,-0.004950,-0.020358", \
				        "0.010222,0.008521,0.006619,0.002767,-0.004922,-0.020354", \
				        "0.010328,0.008662,0.006728,0.002856,-0.004859,-0.020299", \
				        "0.010870,0.009119,0.007156,0.003229,-0.004582,-0.020113", \
				        "0.012548,0.010709,0.008629,0.004542,-0.003510,-0.019311", \
				        "0.016840,0.014878,0.012664,0.008275,-0.000218,-0.016658", \
				        "0.026692,0.024551,0.022186,0.017452,0.008297,-0.009232");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X4) {
				values ("0.010209,0.008548,0.006597,0.002756,-0.004954,-0.020414", \
				        "0.010200,0.008517,0.006570,0.002729,-0.004983,-0.020453", \
				        "0.010176,0.008491,0.006549,0.002695,-0.005028,-0.020509", \
				        "0.010145,0.008460,0.006565,0.002704,-0.005009,-0.020468", \
				        "0.010345,0.008657,0.006723,0.002868,-0.004885,-0.020353", \
				        "0.011431,0.009644,0.007633,0.003640,-0.004257,-0.019909", \
				        "0.015012,0.013054,0.010896,0.006592,-0.001775,-0.017983", \
				        "0.023710,0.021546,0.019157,0.014476,0.005432,-0.011867");
			}
			rise_power(Power_X4) {
				values ("0.019419,0.021140,0.023131,0.026999,0.034742,0.050254", \
				        "0.019417,0.021120,0.023084,0.026967,0.034697,0.050224", \
				        "0.019359,0.021025,0.022984,0.026876,0.034651,0.050179", \
				        "0.019257,0.020975,0.022924,0.026837,0.034604,0.050152", \
				        "0.019235,0.020897,0.022871,0.026762,0.034549,0.050117", \
				        "0.019683,0.021337,0.023246,0.027077,0.034799,0.050254", \
				        "0.022250,0.023887,0.025665,0.029300,0.036725,0.051744", \
				        "0.030045,0.031421,0.033000,0.036338,0.043158,0.057323");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.013513,0.015235,0.017197,0.021060,0.028806,0.044291", \
				        "0.013445,0.015196,0.017150,0.021027,0.028771,0.044264", \
				        "0.013403,0.015136,0.017054,0.020932,0.028723,0.044219", \
				        "0.013305,0.015010,0.016981,0.020895,0.028671,0.044202", \
				        "0.013248,0.014961,0.016919,0.020807,0.028615,0.044131", \
				        "0.013854,0.015478,0.017384,0.021201,0.028863,0.044316", \
				        "0.016870,0.018402,0.020104,0.023655,0.030941,0.045882", \
				        "0.025082,0.026354,0.027858,0.031039,0.037711,0.051689");
			}
			fall_power(Power_X4) {
				values ("0.010201,0.008548,0.006596,0.002756,-0.004956,-0.020424", \
				        "0.010180,0.008517,0.006570,0.002729,-0.004983,-0.020465", \
				        "0.010163,0.008491,0.006549,0.002685,-0.005028,-0.020509", \
				        "0.010145,0.008460,0.006565,0.002704,-0.005009,-0.020474", \
				        "0.010330,0.008629,0.006723,0.002868,-0.004885,-0.020356", \
				        "0.011397,0.009644,0.007625,0.003640,-0.004257,-0.019914", \
				        "0.014725,0.012758,0.010598,0.006361,-0.001945,-0.018090", \
				        "0.022564,0.020531,0.018197,0.013588,0.004691,-0.012463");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A2 & B1 & !C1 & !C2 | !A1 & B1 & !C1 & !C2 | !A1 & !A2 & B1 & !C1";

			rise_power(Power_X4) {
				values ("0.016739,0.018437,0.020402,0.024293,0.032030,0.047542", \
				        "0.016739,0.018443,0.020346,0.024249,0.031990,0.047532", \
				        "0.016640,0.018333,0.020288,0.024171,0.031950,0.047483", \
				        "0.016583,0.018267,0.020217,0.024123,0.031899,0.047444", \
				        "0.016500,0.018210,0.020166,0.024067,0.031845,0.047401", \
				        "0.017131,0.018766,0.020712,0.024519,0.032196,0.047642", \
				        "0.020360,0.021906,0.023638,0.027199,0.034490,0.049402", \
				        "0.029103,0.030426,0.031953,0.035156,0.041799,0.055737");
			}
			fall_power(Power_X4) {
				values ("0.010196,0.008509,0.006588,0.002745,-0.004963,-0.020416", \
				        "0.010175,0.008466,0.006540,0.002696,-0.005023,-0.020486", \
				        "0.010121,0.008422,0.006502,0.002620,-0.005097,-0.020555", \
				        "0.010072,0.008401,0.006483,0.002645,-0.005064,-0.020512", \
				        "0.010321,0.008596,0.006653,0.002781,-0.004953,-0.020419", \
				        "0.011431,0.009636,0.007633,0.003627,-0.004285,-0.019963", \
				        "0.015012,0.013054,0.010896,0.006592,-0.001775,-0.017983", \
				        "0.023710,0.021546,0.019157,0.014476,0.005432,-0.011867");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1 & !C1 & C2 | !A1 & B1 & C1 & !C2 | !A2 & B1 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.019419,0.021140,0.023131,0.026999,0.034742,0.050254", \
				        "0.019417,0.021120,0.023084,0.026967,0.034697,0.050224", \
				        "0.019359,0.021025,0.022984,0.026876,0.034651,0.050179", \
				        "0.019257,0.020975,0.022924,0.026837,0.034604,0.050152", \
				        "0.019235,0.020897,0.022871,0.026762,0.034549,0.050117", \
				        "0.019683,0.021337,0.023246,0.027077,0.034799,0.050254", \
				        "0.022250,0.023887,0.025665,0.029300,0.036725,0.051744", \
				        "0.030045,0.031421,0.033000,0.036338,0.043158,0.057323");
			}
			fall_power(Power_X4) {
				values ("0.010209,0.008523,0.006597,0.002744,-0.004954,-0.020414", \
				        "0.010200,0.008506,0.006568,0.002718,-0.004995,-0.020453", \
				        "0.010176,0.008477,0.006544,0.002695,-0.005029,-0.020514", \
				        "0.010125,0.008458,0.006547,0.002704,-0.005016,-0.020468", \
				        "0.010345,0.008657,0.006713,0.002844,-0.004887,-0.020353", \
				        "0.011401,0.009632,0.007615,0.003634,-0.004262,-0.019909", \
				        "0.014660,0.012741,0.010573,0.006337,-0.001954,-0.018139", \
				        "0.022535,0.020473,0.018155,0.013534,0.004637,-0.012462");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X4) {
				values ("0.016469,0.014791,0.012897,0.009086,0.001457,-0.013881", \
				        "0.016432,0.014738,0.012839,0.009043,0.001407,-0.013934", \
				        "0.016391,0.014713,0.012807,0.009007,0.001363,-0.013968", \
				        "0.016453,0.014772,0.012851,0.009049,0.001391,-0.013974", \
				        "0.016798,0.015144,0.013234,0.009353,0.001623,-0.013818", \
				        "0.018401,0.016587,0.014561,0.010561,0.002630,-0.013060", \
				        "0.022696,0.020766,0.018615,0.014324,0.005939,-0.010341", \
				        "0.033245,0.031183,0.028804,0.024152,0.015082,-0.002404");
			}
			rise_power(Power_X4) {
				values ("0.018719,0.020426,0.022397,0.026293,0.034061,0.049557", \
				        "0.018718,0.020398,0.022355,0.026266,0.034010,0.049527", \
				        "0.018609,0.020374,0.022333,0.026250,0.034014,0.049555", \
				        "0.018581,0.020290,0.022250,0.026150,0.033935,0.049474", \
				        "0.018543,0.020233,0.022200,0.026095,0.033866,0.049412", \
				        "0.018493,0.020227,0.022181,0.026063,0.033833,0.049362", \
				        "0.019891,0.021518,0.023322,0.027071,0.034644,0.049971", \
				        "0.027616,0.028772,0.030190,0.033273,0.039925,0.054184");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & !B2 & C2 | !A1 & !A2 & !B1 & B2 & C2";

			rise_power(Power_X4) {
				values ("0.013810,0.015532,0.017488,0.021388,0.029158,0.044674", \
				        "0.013697,0.015455,0.017434,0.021341,0.029125,0.044644", \
				        "0.013702,0.015431,0.017393,0.021320,0.029100,0.044644", \
				        "0.013674,0.015370,0.017328,0.021242,0.029011,0.044558", \
				        "0.013612,0.015333,0.017283,0.021178,0.028957,0.044498", \
				        "0.013554,0.015329,0.017279,0.021163,0.028926,0.044467", \
				        "0.015658,0.017124,0.018881,0.022481,0.029937,0.045198", \
				        "0.024690,0.025633,0.026917,0.029720,0.035963,0.049894");
			}
			fall_power(Power_X4) {
				values ("0.016469,0.014791,0.012897,0.009086,0.001457,-0.013881", \
				        "0.016432,0.014738,0.012839,0.009043,0.001407,-0.013934", \
				        "0.016391,0.014713,0.012807,0.009007,0.001363,-0.013968", \
				        "0.016453,0.014772,0.012851,0.009049,0.001391,-0.013974", \
				        "0.016798,0.015144,0.013234,0.009353,0.001623,-0.013818", \
				        "0.018401,0.016587,0.014561,0.010561,0.002630,-0.013060", \
				        "0.022696,0.020766,0.018615,0.014324,0.005939,-0.010341", \
				        "0.033245,0.031183,0.028804,0.024152,0.015082,-0.002404");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & B2 & C2";

			rise_power(Power_X4) {
				values ("0.012803,0.014501,0.016468,0.020368,0.028137,0.043648", \
				        "0.012725,0.014451,0.016422,0.020316,0.028091,0.043619", \
				        "0.012674,0.014411,0.016365,0.020288,0.028087,0.043609", \
				        "0.012633,0.014369,0.016321,0.020201,0.027992,0.043533", \
				        "0.012586,0.014305,0.016264,0.020152,0.027949,0.043474", \
				        "0.012555,0.014286,0.016234,0.020121,0.027901,0.043410", \
				        "0.014458,0.015926,0.017672,0.021295,0.028781,0.044058", \
				        "0.023078,0.024148,0.025341,0.028157,0.034466,0.048470");
			}
			fall_power(Power_X4) {
				values ("0.015999,0.014336,0.012427,0.008638,0.001023,-0.014294", \
				        "0.015949,0.014293,0.012381,0.008584,0.000973,-0.014357", \
				        "0.015954,0.014244,0.012332,0.008536,0.000924,-0.014395", \
				        "0.015973,0.014288,0.012375,0.008575,0.000941,-0.014418", \
				        "0.016335,0.014641,0.012723,0.008854,0.001123,-0.014298", \
				        "0.017803,0.016024,0.013998,0.009978,0.002059,-0.013604", \
				        "0.022060,0.020116,0.017936,0.013632,0.005226,-0.011064", \
				        "0.032432,0.030331,0.027917,0.023195,0.014073,-0.003412");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A2 & !B1 & !B2 & C2";

			rise_power(Power_X4) {
				values ("0.016708,0.018446,0.020378,0.024272,0.032042,0.047570", \
				        "0.016688,0.018366,0.020316,0.024242,0.032011,0.047544", \
				        "0.016591,0.018349,0.020312,0.024206,0.031990,0.047535", \
				        "0.016531,0.018239,0.020211,0.024117,0.031917,0.047465", \
				        "0.016505,0.018204,0.020156,0.024055,0.031845,0.047395", \
				        "0.016519,0.018219,0.020163,0.024067,0.031817,0.047349", \
				        "0.018329,0.019894,0.021609,0.025336,0.032810,0.048076", \
				        "0.026933,0.028015,0.029348,0.032275,0.038697,0.052697");
			}
			fall_power(Power_X4) {
				values ("0.016206,0.014557,0.012653,0.008852,0.001227,-0.014095", \
				        "0.016176,0.014532,0.012606,0.008796,0.001195,-0.014129", \
				        "0.016140,0.014476,0.012574,0.008756,0.001145,-0.014178", \
				        "0.016213,0.014550,0.012628,0.008810,0.001165,-0.014191", \
				        "0.016612,0.014909,0.012979,0.009100,0.001367,-0.014066", \
				        "0.018168,0.016367,0.014328,0.010306,0.002369,-0.013314", \
				        "0.022532,0.020597,0.018423,0.014093,0.005689,-0.010626", \
				        "0.033220,0.031098,0.028686,0.023978,0.014857,-0.002659");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & !A2 & !B1 & B2 & C2 | !A1 & B1 & !B2 & C2 | !A2 & B1 & !B2 & C2";

			rise_power(Power_X4) {
				values ("0.018719,0.020426,0.022397,0.026293,0.034061,0.049557", \
				        "0.018718,0.020398,0.022355,0.026266,0.034010,0.049527", \
				        "0.018609,0.020374,0.022333,0.026250,0.034014,0.049555", \
				        "0.018581,0.020290,0.022250,0.026150,0.033935,0.049474", \
				        "0.018543,0.020233,0.022200,0.026095,0.033866,0.049412", \
				        "0.018493,0.020227,0.022181,0.026063,0.033833,0.049362", \
				        "0.019891,0.021518,0.023322,0.027071,0.034644,0.049971", \
				        "0.027616,0.028772,0.030190,0.033273,0.039925,0.054184");
			}
			fall_power(Power_X4) {
				values ("0.016001,0.014350,0.012448,0.008646,0.001033,-0.014286", \
				        "0.015929,0.014290,0.012393,0.008597,0.000991,-0.014328", \
				        "0.015924,0.014246,0.012357,0.008544,0.000931,-0.014378", \
				        "0.015967,0.014310,0.012385,0.008573,0.000941,-0.014410", \
				        "0.016308,0.014644,0.012706,0.008843,0.001121,-0.014289", \
				        "0.017786,0.016013,0.013993,0.009975,0.002049,-0.013594", \
				        "0.022004,0.020098,0.017918,0.013621,0.005226,-0.011053", \
				        "0.032372,0.030281,0.027863,0.023160,0.014049,-0.003420");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X4) {
				values ("0.016463,0.014805,0.012873,0.009062,0.001422,-0.013946", \
				        "0.016425,0.014743,0.012823,0.008999,0.001332,-0.014053", \
				        "0.016393,0.014703,0.012777,0.008945,0.001263,-0.014157", \
				        "0.016306,0.014670,0.012766,0.008950,0.001259,-0.014150", \
				        "0.016450,0.014782,0.012891,0.009056,0.001351,-0.014062", \
				        "0.017348,0.015617,0.013634,0.009716,0.001909,-0.013635", \
				        "0.020541,0.018574,0.016478,0.012329,0.004150,-0.011869", \
				        "0.028755,0.026747,0.024443,0.019903,0.011077,-0.005957");
			}
			rise_power(Power_X4) {
				values ("0.021584,0.023288,0.025225,0.029105,0.036860,0.052379", \
				        "0.021581,0.023235,0.025210,0.029080,0.036847,0.052364", \
				        "0.021554,0.023271,0.025224,0.029110,0.036848,0.052376", \
				        "0.021494,0.023244,0.025157,0.029054,0.036825,0.052352", \
				        "0.021469,0.023191,0.025147,0.029030,0.036801,0.052339", \
				        "0.021471,0.023191,0.025144,0.029047,0.036785,0.052334", \
				        "0.022682,0.024398,0.026222,0.030005,0.037608,0.052964", \
				        "0.029602,0.031015,0.032630,0.035988,0.042923,0.057318");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & !B2 & C1 | !A1 & !A2 & !B1 & B2 & C1";

			rise_power(Power_X4) {
				values ("0.016683,0.018382,0.020331,0.024204,0.031958,0.047477", \
				        "0.016673,0.018396,0.020312,0.024204,0.031959,0.047460", \
				        "0.016637,0.018350,0.020320,0.024202,0.031983,0.047483", \
				        "0.016619,0.018321,0.020260,0.024164,0.031929,0.047433", \
				        "0.016585,0.018312,0.020265,0.024148,0.031902,0.047425", \
				        "0.016613,0.018310,0.020254,0.024139,0.031905,0.047415", \
				        "0.018265,0.019817,0.021645,0.025365,0.032898,0.048155", \
				        "0.026145,0.027433,0.028979,0.032177,0.038868,0.053017");
			}
			fall_power(Power_X4) {
				values ("0.016463,0.014805,0.012873,0.009062,0.001422,-0.013946", \
				        "0.016425,0.014743,0.012823,0.008999,0.001332,-0.014053", \
				        "0.016393,0.014703,0.012777,0.008945,0.001263,-0.014157", \
				        "0.016306,0.014670,0.012766,0.008950,0.001259,-0.014150", \
				        "0.016450,0.014782,0.012891,0.009056,0.001351,-0.014062", \
				        "0.017348,0.015617,0.013634,0.009716,0.001909,-0.013635", \
				        "0.020541,0.018574,0.016478,0.012329,0.004150,-0.011869", \
				        "0.028747,0.026747,0.024443,0.019903,0.011077,-0.005957");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & B2 & C1";

			rise_power(Power_X4) {
				values ("0.015597,0.017379,0.019332,0.023200,0.030948,0.046433", \
				        "0.015652,0.017352,0.019301,0.023158,0.030917,0.046420", \
				        "0.015666,0.017342,0.019289,0.023174,0.030932,0.046443", \
				        "0.015588,0.017308,0.019252,0.023145,0.030896,0.046407", \
				        "0.015557,0.017297,0.019228,0.023129,0.030878,0.046393", \
				        "0.015496,0.017265,0.019211,0.023104,0.030854,0.046361", \
				        "0.017081,0.018644,0.020474,0.024200,0.031735,0.047032", \
				        "0.024628,0.025874,0.027445,0.030656,0.037358,0.051580");
			}
			fall_power(Power_X4) {
				values ("0.015991,0.014336,0.012419,0.008600,0.000982,-0.014371", \
				        "0.015951,0.014300,0.012367,0.008537,0.000903,-0.014469", \
				        "0.015908,0.014243,0.012306,0.008484,0.000822,-0.014580", \
				        "0.015866,0.014206,0.012310,0.008469,0.000801,-0.014583", \
				        "0.016003,0.014309,0.012402,0.008575,0.000876,-0.014515", \
				        "0.016832,0.015085,0.013117,0.009191,0.001384,-0.014137", \
				        "0.019877,0.018012,0.015879,0.011706,0.003531,-0.012462", \
				        "0.028094,0.026056,0.023693,0.019117,0.010231,-0.006794");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A2 & !B1 & !B2 & C1";

			rise_power(Power_X4) {
				values ("0.019580,0.021280,0.023227,0.027103,0.034845,0.050361", \
				        "0.019564,0.021263,0.023185,0.027084,0.034831,0.050355", \
				        "0.019518,0.021251,0.023206,0.027094,0.034854,0.050370", \
				        "0.019511,0.021215,0.023140,0.027023,0.034800,0.050319", \
				        "0.019462,0.021182,0.023118,0.027030,0.034797,0.050330", \
				        "0.019480,0.021190,0.023119,0.027021,0.034784,0.050297", \
				        "0.021056,0.022651,0.024472,0.028217,0.035763,0.051055", \
				        "0.028625,0.029986,0.031517,0.034827,0.041602,0.055841");
			}
			fall_power(Power_X4) {
				values ("0.016195,0.014551,0.012638,0.008795,0.001190,-0.014165", \
				        "0.016161,0.014513,0.012588,0.008749,0.001115,-0.014262", \
				        "0.016133,0.014454,0.012543,0.008701,0.001032,-0.014372", \
				        "0.016089,0.014442,0.012528,0.008690,0.001022,-0.014374", \
				        "0.016210,0.014537,0.012639,0.008783,0.001102,-0.014288", \
				        "0.017092,0.015375,0.013377,0.009461,0.001637,-0.013889", \
				        "0.020277,0.018376,0.016265,0.012092,0.003894,-0.012122", \
				        "0.028755,0.026665,0.024318,0.019734,0.010850,-0.006225");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & !A2 & !B1 & B2 & C1 | !A1 & B1 & !B2 & C1 | !A2 & B1 & !B2 & C1";

			rise_power(Power_X4) {
				values ("0.021584,0.023288,0.025225,0.029105,0.036860,0.052379", \
				        "0.021581,0.023235,0.025210,0.029080,0.036847,0.052364", \
				        "0.021554,0.023271,0.025224,0.029110,0.036848,0.052376", \
				        "0.021494,0.023244,0.025157,0.029054,0.036825,0.052352", \
				        "0.021469,0.023191,0.025147,0.029030,0.036801,0.052339", \
				        "0.021471,0.023191,0.025144,0.029047,0.036785,0.052334", \
				        "0.022682,0.024398,0.026222,0.030005,0.037608,0.052964", \
				        "0.029602,0.031015,0.032630,0.035988,0.042923,0.057318");
			}
			fall_power(Power_X4) {
				values ("0.015982,0.014334,0.012415,0.008595,0.000987,-0.014348", \
				        "0.015930,0.014285,0.012372,0.008533,0.000892,-0.014464", \
				        "0.015904,0.014233,0.012315,0.008479,0.000829,-0.014576", \
				        "0.015850,0.014222,0.012296,0.008467,0.000806,-0.014580", \
				        "0.016001,0.014316,0.012389,0.008557,0.000881,-0.014497", \
				        "0.016811,0.015087,0.013111,0.009185,0.001380,-0.014136", \
				        "0.019869,0.017984,0.015858,0.011688,0.003521,-0.012457", \
				        "0.028041,0.025981,0.023661,0.019076,0.010212,-0.006791");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI22_X1
 Cell Description	: Combinational cell (AOI22_X1) with drive strength X1
*******************************************************************************************/

cell (AOI22_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 9678.497312;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 2067.405000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 2246.188000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 2246.190000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 2425.030000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 8382.112000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 9701.451000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 8560.896000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 14015.130000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 8382.119000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 8560.896000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 11120.350000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 15450.090000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 14696.430000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 14016.180000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 15451.390000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 17534.100000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000597;
		fall_capacitance	: 0.000568;
		rise_capacitance	: 0.000627;
		fall_capacitance_range		(0.000492, 0.000709);
		rise_capacitance_range		(0.000511, 0.000778);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000007,0.000005,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000012,0.000010,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000012,0.000010,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000559;
		fall_capacitance	: 0.000521;
		rise_capacitance	: 0.000597;
		fall_capacitance_range		(0.000458, 0.000634);
		rise_capacitance_range		(0.000491, 0.000723);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000009,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000009,0.000006,0.000003,0.000002,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000567;
		fall_capacitance	: 0.000558;
		rise_capacitance	: 0.000575;
		fall_capacitance_range		(0.000485, 0.000652);
		rise_capacitance_range		(0.000501, 0.000698);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000014,0.000011,0.000007,0.000005,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000004,0.000003,0.000002,0.000001");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000555;
		fall_capacitance	: 0.000534;
		rise_capacitance	: 0.000575;
		fall_capacitance_range		(0.000447, 0.000608);
		rise_capacitance_range		(0.000497, 0.000668);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000014,0.000010,0.000007,0.000005,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000011,0.000009,0.000007,0.000005,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000011,0.000009,0.000007,0.000005,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000011,0.000009,0.000007,0.000005,0.000004,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) | (B1 & B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019517,0.022250,0.027788,0.038760,0.060469,0.103937", \
				        "0.022647,0.025303,0.030768,0.041714,0.063438,0.106873", \
				        "0.028503,0.031538,0.037128,0.047918,0.069599,0.112850", \
				        "0.034875,0.039003,0.046539,0.059833,0.082218,0.125269", \
				        "0.040041,0.045615,0.055792,0.073715,0.103606,0.151025", \
				        "0.040763,0.048135,0.061648,0.085618,0.125605,0.189639", \
				        "0.029036,0.038945,0.056993,0.088872,0.142075,0.227595", \
				        "-0.011313,0.001818,0.025818,0.067993,0.138902,0.252900");
			}
			cell_rise(Timing_X1) {
				values ("0.032931,0.037847,0.047821,0.067335,0.106150,0.183600", \
				        "0.036332,0.041237,0.051101,0.070591,0.109389,0.186893", \
				        "0.043813,0.048616,0.058247,0.077584,0.116277,0.193627", \
				        "0.058335,0.063838,0.073946,0.092655,0.130819,0.207778", \
				        "0.078480,0.085692,0.099022,0.122351,0.161624,0.237403", \
				        "0.108073,0.117080,0.134112,0.164573,0.216327,0.299702", \
				        "0.153894,0.165582,0.187013,0.225601,0.292045,0.402136", \
				        "0.228769,0.243589,0.271126,0.320047,0.404221,0.544836");
			}
			fall_transition(Timing_X1) {
				values ("0.013891,0.016487,0.021194,0.030664,0.049451,0.086839", \
				        "0.013862,0.016337,0.021201,0.030727,0.049455,0.086876", \
				        "0.016844,0.018584,0.022478,0.030688,0.049463,0.086877", \
				        "0.023813,0.025913,0.029988,0.036383,0.050899,0.086819", \
				        "0.035466,0.037999,0.042769,0.050890,0.064926,0.091786", \
				        "0.055534,0.058645,0.064498,0.074683,0.092447,0.121896", \
				        "0.090609,0.094751,0.102283,0.115550,0.138005,0.175363", \
				        "0.153755,0.159054,0.169160,0.186784,0.216261,0.263853");
			}
			rise_transition(Timing_X1) {
				values ("0.028428,0.033134,0.042417,0.060416,0.096445,0.168624", \
				        "0.028234,0.032957,0.042257,0.060500,0.096513,0.168600", \
				        "0.028349,0.032816,0.042170,0.060387,0.096502,0.168626", \
				        "0.034301,0.037562,0.044930,0.060700,0.096483,0.168577", \
				        "0.046837,0.050938,0.058728,0.071458,0.099646,0.168622", \
				        "0.065836,0.070916,0.080573,0.097533,0.126109,0.179218", \
				        "0.098154,0.104207,0.115552,0.136404,0.173321,0.234218", \
				        "0.158068,0.164522,0.177603,0.201881,0.246271,0.323854");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019461,0.022215,0.027691,0.038699,0.060439,0.103895", \
				        "0.022634,0.025293,0.030760,0.041753,0.063467,0.106919", \
				        "0.028554,0.031589,0.037206,0.047967,0.069667,0.112924", \
				        "0.034988,0.039108,0.046624,0.059914,0.082295,0.125361", \
				        "0.039903,0.045500,0.055732,0.073703,0.103638,0.151080", \
				        "0.039168,0.046641,0.060471,0.084813,0.125176,0.189464", \
				        "0.023169,0.033508,0.052167,0.085072,0.139469,0.226130", \
				        "-0.027358,-0.013529,0.011653,0.055650,0.129148,0.246338");
			}
			cell_rise(Timing_X1) {
				values ("0.040249,0.047029,0.060655,0.087546,0.140918,0.247113", \
				        "0.043443,0.050194,0.063784,0.090664,0.143944,0.250204", \
				        "0.050634,0.057185,0.070532,0.097201,0.150332,0.256487", \
				        "0.066508,0.073002,0.085470,0.111283,0.163974,0.269609", \
				        "0.090619,0.098971,0.114535,0.141971,0.192979,0.297291", \
				        "0.125973,0.136207,0.155963,0.191516,0.252482,0.356098", \
				        "0.180845,0.194415,0.218765,0.263321,0.340866,0.470664", \
				        "0.272906,0.289481,0.320559,0.375904,0.472515,0.636587");
			}
			fall_transition(Timing_X1) {
				values ("0.013902,0.016361,0.021233,0.030688,0.049460,0.086870", \
				        "0.013844,0.016335,0.021175,0.030654,0.049466,0.086876", \
				        "0.016771,0.018528,0.022467,0.030687,0.049475,0.086881", \
				        "0.023728,0.025833,0.029901,0.036322,0.050882,0.086828", \
				        "0.035591,0.038078,0.042807,0.050888,0.064901,0.091769", \
				        "0.056076,0.059220,0.065009,0.075170,0.092694,0.121987", \
				        "0.091875,0.096093,0.103694,0.117055,0.139290,0.176222", \
				        "0.155756,0.161347,0.171736,0.189792,0.219425,0.266846");
			}
			rise_transition(Timing_X1) {
				values ("0.040157,0.046644,0.059416,0.083807,0.132331,0.229447", \
				        "0.039770,0.046414,0.059236,0.083756,0.132343,0.229450", \
				        "0.038689,0.045372,0.058785,0.083753,0.132338,0.229437", \
				        "0.041723,0.047082,0.058568,0.082812,0.132348,0.229454", \
				        "0.054148,0.059159,0.068970,0.087918,0.131926,0.229454", \
				        "0.073240,0.079504,0.091344,0.112417,0.149311,0.231601", \
				        "0.105161,0.112270,0.126113,0.151613,0.197218,0.273651", \
				        "0.163112,0.170796,0.186522,0.215836,0.270155,0.365693");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019695,0.022509,0.028086,0.039053,0.060879,0.104401", \
				        "0.022887,0.025561,0.031047,0.042069,0.063956,0.107474", \
				        "0.028862,0.031910,0.037456,0.048283,0.070125,0.113479", \
				        "0.035430,0.039631,0.047260,0.060459,0.082659,0.125897", \
				        "0.040585,0.046289,0.056647,0.074428,0.104243,0.151551", \
				        "0.040388,0.047932,0.061913,0.085945,0.126128,0.190307", \
				        "0.025771,0.035971,0.054600,0.087143,0.141211,0.227570", \
				        "-0.021116,-0.007893,0.016728,0.059985,0.132672,0.249155");
			}
			cell_rise(Timing_X1) {
				values ("0.058131,0.064945,0.078627,0.105663,0.159289,0.265754", \
				        "0.061264,0.068099,0.081711,0.108766,0.162338,0.268838", \
				        "0.067973,0.074807,0.088363,0.115258,0.168663,0.275114", \
				        "0.082817,0.089271,0.102580,0.129151,0.182169,0.288226", \
				        "0.111575,0.119147,0.133195,0.158882,0.210862,0.315716", \
				        "0.152705,0.162163,0.180284,0.213391,0.271349,0.374097", \
				        "0.214824,0.226621,0.249203,0.291149,0.365362,0.491037", \
				        "0.315278,0.330653,0.358649,0.410834,0.503147,0.662695");
			}
			fall_transition(Timing_X1) {
				values ("0.018007,0.021082,0.026515,0.036761,0.056610,0.094537", \
				        "0.017972,0.020799,0.026250,0.036837,0.056610,0.094553", \
				        "0.020979,0.023036,0.027505,0.036825,0.056618,0.094551", \
				        "0.030976,0.032725,0.036325,0.042762,0.058095,0.094544", \
				        "0.048716,0.050124,0.053276,0.060014,0.072737,0.099433", \
				        "0.076376,0.078051,0.081475,0.089064,0.103852,0.130683", \
				        "0.122224,0.124219,0.128632,0.137626,0.155342,0.188327", \
				        "0.200831,0.203237,0.208886,0.220442,0.243056,0.284219");
			}
			rise_transition(Timing_X1) {
				values ("0.051025,0.057395,0.070066,0.094507,0.143270,0.240815", \
				        "0.050943,0.057345,0.069952,0.094518,0.143328,0.240850", \
				        "0.050531,0.057038,0.069871,0.094519,0.143320,0.240849", \
				        "0.050183,0.056209,0.068843,0.094152,0.143302,0.240842", \
				        "0.060137,0.065177,0.075088,0.096118,0.142736,0.240819", \
				        "0.080431,0.086439,0.098051,0.118756,0.156231,0.241786", \
				        "0.111851,0.119606,0.133573,0.159219,0.204313,0.280017", \
				        "0.168250,0.176848,0.193407,0.223479,0.278365,0.373569");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026491,0.029186,0.034731,0.045616,0.067379,0.110879", \
				        "0.029187,0.032047,0.037426,0.048359,0.070119,0.113632", \
				        "0.033817,0.036803,0.042394,0.053413,0.075252,0.118822", \
				        "0.040060,0.043636,0.050330,0.062762,0.085284,0.128928", \
				        "0.046089,0.050928,0.059706,0.075308,0.101978,0.148477", \
				        "0.047775,0.054559,0.066820,0.088128,0.123268,0.179838", \
				        "0.037660,0.047029,0.064078,0.093691,0.142082,0.217835", \
				        "-0.000560,0.012616,0.036055,0.076795,0.143636,0.248100");
			}
			cell_rise(Timing_X1) {
				values ("0.044935,0.049875,0.059827,0.079535,0.118579,0.196287", \
				        "0.048333,0.053276,0.063128,0.082825,0.121827,0.199520", \
				        "0.055629,0.060525,0.070322,0.089858,0.128755,0.206366", \
				        "0.071399,0.076186,0.085697,0.104926,0.143408,0.220606", \
				        "0.096584,0.102958,0.114801,0.136180,0.174185,0.250320", \
				        "0.132550,0.140524,0.155918,0.183931,0.232572,0.312723", \
				        "0.187196,0.197792,0.217137,0.252700,0.315345,0.420723", \
				        "0.277965,0.291030,0.315558,0.360203,0.438744,0.573003");
			}
			fall_transition(Timing_X1) {
				values ("0.013884,0.016346,0.021212,0.030567,0.049448,0.086819", \
				        "0.013890,0.016380,0.021276,0.030537,0.049389,0.086853", \
				        "0.014874,0.017138,0.021598,0.030571,0.049410,0.086824", \
				        "0.018763,0.020921,0.025266,0.033139,0.050077,0.086880", \
				        "0.027224,0.029337,0.033649,0.041285,0.056688,0.089140", \
				        "0.042851,0.045274,0.049984,0.058243,0.073641,0.103944", \
				        "0.069906,0.072878,0.078717,0.088980,0.106935,0.138478", \
				        "0.114887,0.119082,0.126930,0.141062,0.164794,0.203358");
			}
			rise_transition(Timing_X1) {
				values ("0.035247,0.039965,0.049427,0.067630,0.103891,0.176372", \
				        "0.035223,0.039958,0.049421,0.067612,0.103876,0.176408", \
				        "0.034973,0.039787,0.049246,0.067680,0.103947,0.176364", \
				        "0.037559,0.041566,0.049836,0.067442,0.103888,0.176399", \
				        "0.050026,0.053959,0.061428,0.074959,0.105594,0.176345", \
				        "0.068552,0.073897,0.083630,0.100766,0.128991,0.184560", \
				        "0.096479,0.103242,0.115831,0.138220,0.176193,0.237206", \
				        "0.143413,0.151568,0.167440,0.195444,0.244038,0.325084");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026421,0.029132,0.034704,0.045607,0.067390,0.110901", \
				        "0.029158,0.031983,0.037453,0.048443,0.070248,0.113734", \
				        "0.033826,0.036830,0.042477,0.053469,0.075294,0.118888", \
				        "0.040171,0.043755,0.050440,0.062864,0.085383,0.129036", \
				        "0.046334,0.051162,0.059913,0.075484,0.102118,0.148606", \
				        "0.047530,0.054341,0.066692,0.088098,0.123329,0.179935", \
				        "0.034599,0.044167,0.061677,0.091860,0.140987,0.217351", \
				        "-0.011490,0.002336,0.026596,0.068833,0.137654,0.244391");
			}
			cell_rise(Timing_X1) {
				values ("0.057200,0.064054,0.077654,0.104690,0.158191,0.264661", \
				        "0.060371,0.067250,0.080801,0.107796,0.161276,0.267717", \
				        "0.067404,0.074070,0.087587,0.114426,0.167732,0.274101", \
				        "0.082371,0.088969,0.102118,0.128603,0.181469,0.287391", \
				        "0.111860,0.119221,0.133205,0.158769,0.210567,0.315196", \
				        "0.154146,0.163402,0.181355,0.214209,0.271742,0.374148", \
				        "0.218365,0.230634,0.252824,0.294303,0.367706,0.492358", \
				        "0.325686,0.340425,0.368434,0.419588,0.510555,0.668197");
			}
			fall_transition(Timing_X1) {
				values ("0.013861,0.016343,0.021151,0.030573,0.049459,0.086826", \
				        "0.013852,0.016321,0.021221,0.030609,0.049379,0.086873", \
				        "0.014843,0.017107,0.021592,0.030581,0.049429,0.086827", \
				        "0.018705,0.020865,0.025217,0.033100,0.050078,0.086888", \
				        "0.027190,0.029279,0.033586,0.041210,0.056685,0.089122", \
				        "0.042832,0.045329,0.050025,0.058284,0.073637,0.103917", \
				        "0.070307,0.073243,0.079119,0.089435,0.107338,0.138723", \
				        "0.115842,0.120249,0.128119,0.142415,0.166150,0.204608");
			}
			rise_transition(Timing_X1) {
				values ("0.049960,0.056301,0.068976,0.093670,0.142571,0.240219", \
				        "0.049880,0.056239,0.069023,0.093599,0.142530,0.240201", \
				        "0.049481,0.055935,0.068735,0.093699,0.142544,0.240203", \
				        "0.049156,0.055214,0.067807,0.093338,0.142568,0.240220", \
				        "0.059016,0.063970,0.073957,0.095288,0.141973,0.240205", \
				        "0.078062,0.084629,0.096353,0.117470,0.155298,0.241161", \
				        "0.106565,0.114495,0.129494,0.156235,0.202278,0.278803", \
				        "0.152838,0.162231,0.180671,0.213684,0.271901,0.369922");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026682,0.029517,0.035020,0.045976,0.067791,0.111403", \
				        "0.029426,0.032220,0.037686,0.048811,0.070707,0.114245", \
				        "0.034102,0.037108,0.042729,0.053745,0.075754,0.119428", \
				        "0.040501,0.044110,0.050891,0.063234,0.085746,0.129530", \
				        "0.046827,0.051688,0.060608,0.076038,0.102612,0.149099", \
				        "0.048373,0.055221,0.067720,0.089043,0.124042,0.180605", \
				        "0.036180,0.045765,0.063235,0.093304,0.142191,0.218364", \
				        "-0.007992,0.005520,0.029597,0.071560,0.139899,0.246200");
			}
			cell_rise(Timing_X1) {
				values ("0.075260,0.082132,0.095781,0.122951,0.176656,0.283351", \
				        "0.078440,0.085297,0.098915,0.126027,0.179723,0.286415", \
				        "0.085168,0.092051,0.105640,0.132584,0.186131,0.292779", \
				        "0.099697,0.106405,0.119807,0.146597,0.199749,0.306031", \
				        "0.130667,0.137513,0.150417,0.176221,0.228507,0.333686", \
				        "0.178501,0.187055,0.203836,0.234715,0.289746,0.392242", \
				        "0.249039,0.260263,0.281140,0.320431,0.391113,0.512132", \
				        "0.363680,0.377649,0.403491,0.452235,0.539901,0.693462");
			}
			fall_transition(Timing_X1) {
				values ("0.017949,0.020933,0.026459,0.036838,0.056621,0.094530", \
				        "0.017974,0.020789,0.026337,0.036782,0.056579,0.094537", \
				        "0.018959,0.021533,0.026701,0.036856,0.056598,0.094545", \
				        "0.024191,0.026463,0.030983,0.039430,0.057247,0.094545", \
				        "0.036254,0.037754,0.041443,0.048670,0.064101,0.096868", \
				        "0.057621,0.059019,0.061990,0.068742,0.082665,0.112025", \
				        "0.092533,0.094164,0.097683,0.104929,0.119697,0.148528", \
				        "0.149546,0.151619,0.156112,0.165666,0.184214,0.218080");
			}
			rise_transition(Timing_X1) {
				values ("0.060374,0.066737,0.079494,0.104380,0.153581,0.251623", \
				        "0.060362,0.066707,0.079524,0.104341,0.153583,0.251638", \
				        "0.060234,0.066651,0.079510,0.104392,0.153591,0.251638", \
				        "0.059257,0.065845,0.079112,0.104228,0.153541,0.251618", \
				        "0.065369,0.070637,0.081776,0.104487,0.153355,0.251629", \
				        "0.085824,0.091995,0.103372,0.123830,0.162962,0.251776", \
				        "0.116074,0.123914,0.138367,0.164524,0.209517,0.285687", \
				        "0.163559,0.172726,0.191151,0.223670,0.281128,0.378078");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034733,0.037711,0.043677,0.055431,0.078186,0.122641", \
				        "0.037704,0.040621,0.046568,0.058361,0.081112,0.125567", \
				        "0.043917,0.046836,0.052620,0.064281,0.087006,0.131397", \
				        "0.055892,0.059268,0.065510,0.077089,0.099441,0.143661", \
				        "0.069242,0.073631,0.081999,0.097498,0.124232,0.169073", \
				        "0.080350,0.086425,0.097529,0.118098,0.153910,0.213226", \
				        "0.083595,0.091171,0.106134,0.133177,0.180637,0.259897", \
				        "0.064566,0.075342,0.094550,0.130397,0.192966,0.297583");
			}
			cell_rise(Timing_X1) {
				values ("0.061098,0.066438,0.077165,0.097996,0.139512,0.222091", \
				        "0.064860,0.070126,0.080809,0.101693,0.143294,0.225911", \
				        "0.072194,0.077547,0.088058,0.108980,0.150675,0.233400", \
				        "0.086060,0.091500,0.102128,0.123133,0.164782,0.247586", \
				        "0.107724,0.114631,0.127276,0.150058,0.191925,0.274682", \
				        "0.137148,0.145899,0.162363,0.191824,0.242976,0.329765", \
				        "0.184671,0.195367,0.216354,0.254047,0.319158,0.427822", \
				        "0.265490,0.280750,0.307051,0.355363,0.437683,0.574894");
			}
			fall_transition(Timing_X1) {
				values ("0.024610,0.027169,0.032199,0.041515,0.060365,0.097985", \
				        "0.024572,0.027143,0.032177,0.041618,0.060425,0.097945", \
				        "0.024288,0.026793,0.031842,0.041543,0.060421,0.097941", \
				        "0.029515,0.031597,0.035196,0.042823,0.060384,0.097982", \
				        "0.041702,0.044101,0.048600,0.056397,0.069925,0.100214", \
				        "0.061363,0.064554,0.070440,0.080677,0.098143,0.127064", \
				        "0.094297,0.098341,0.106280,0.119987,0.143148,0.180952", \
				        "0.149852,0.156109,0.167026,0.185981,0.217194,0.267173");
			}
			rise_transition(Timing_X1) {
				values ("0.034504,0.039215,0.048592,0.067326,0.104420,0.178485", \
				        "0.034497,0.039220,0.048611,0.067325,0.104386,0.178499", \
				        "0.034533,0.039235,0.048751,0.067290,0.104332,0.178496", \
				        "0.035474,0.039772,0.049038,0.067219,0.104377,0.178477", \
				        "0.045651,0.049357,0.056658,0.071366,0.104959,0.178495", \
				        "0.065314,0.069332,0.077486,0.092628,0.121228,0.182714", \
				        "0.097334,0.101760,0.110695,0.127946,0.160726,0.220983", \
				        "0.149213,0.154110,0.164120,0.183987,0.222057,0.292220");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.030417,0.033568,0.039848,0.051959,0.075168,0.120090", \
				        "0.033448,0.036503,0.042731,0.054884,0.078087,0.122986", \
				        "0.040053,0.043002,0.048879,0.060834,0.083964,0.128780", \
				        "0.051627,0.055245,0.061701,0.073866,0.096405,0.141005", \
				        "0.063846,0.068489,0.077353,0.093509,0.120949,0.166418", \
				        "0.072902,0.079377,0.091105,0.112606,0.149458,0.209848", \
				        "0.072955,0.080866,0.096549,0.124876,0.173852,0.254778", \
				        "0.047892,0.059214,0.079265,0.116618,0.181263,0.288536");
			}
			cell_rise(Timing_X1) {
				values ("0.072596,0.079432,0.093107,0.119935,0.173218,0.279395", \
				        "0.076286,0.083046,0.096702,0.123546,0.176976,0.283232", \
				        "0.083373,0.090243,0.103677,0.130611,0.184153,0.290552", \
				        "0.096275,0.103165,0.116855,0.143725,0.197255,0.303753", \
				        "0.116960,0.124907,0.139890,0.167499,0.220849,0.327281", \
				        "0.145996,0.155504,0.173761,0.207050,0.266694,0.374112", \
				        "0.194245,0.205685,0.228117,0.268654,0.340227,0.464717", \
				        "0.278597,0.294642,0.322211,0.373052,0.460343,0.609191");
			}
			fall_transition(Timing_X1) {
				values ("0.024078,0.026711,0.031687,0.041224,0.059939,0.097305", \
				        "0.023738,0.026369,0.031504,0.041091,0.059954,0.097370", \
				        "0.023524,0.026014,0.031074,0.040794,0.059876,0.097364", \
				        "0.029714,0.031749,0.035458,0.042762,0.059809,0.097264", \
				        "0.042291,0.044622,0.049239,0.056765,0.070061,0.099615", \
				        "0.062701,0.065761,0.071499,0.081419,0.098457,0.127113", \
				        "0.096872,0.100972,0.108654,0.121910,0.144449,0.181543", \
				        "0.154988,0.161013,0.171867,0.190258,0.220675,0.269510");
			}
			rise_transition(Timing_X1) {
				values ("0.041012,0.047113,0.059462,0.083662,0.132350,0.229454", \
				        "0.041018,0.047103,0.059409,0.083752,0.132351,0.229449", \
				        "0.041034,0.047141,0.059350,0.083745,0.132337,0.229442", \
				        "0.041522,0.047399,0.059481,0.083760,0.132286,0.229440", \
				        "0.049323,0.054330,0.064461,0.085792,0.132397,0.229449", \
				        "0.066288,0.071592,0.082277,0.102840,0.142726,0.230940", \
				        "0.096079,0.101516,0.112539,0.134243,0.176797,0.258520", \
				        "0.146175,0.152026,0.163905,0.187330,0.233003,0.321275");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.030752,0.033993,0.040405,0.052590,0.075683,0.120642", \
				        "0.033787,0.036900,0.043323,0.055362,0.078642,0.123551", \
				        "0.040352,0.043369,0.049404,0.061309,0.084516,0.129344", \
				        "0.052054,0.055726,0.062403,0.074358,0.096917,0.141562", \
				        "0.064505,0.069243,0.078306,0.094220,0.121584,0.166940", \
				        "0.074102,0.080574,0.092445,0.113723,0.150428,0.210664", \
				        "0.075076,0.083044,0.098779,0.126751,0.175436,0.256143", \
				        "0.052642,0.063553,0.083575,0.120334,0.184398,0.291153");
			}
			cell_rise(Timing_X1) {
				values ("0.090310,0.097187,0.110893,0.137962,0.191522,0.298037", \
				        "0.094056,0.100889,0.114559,0.141630,0.195292,0.301867", \
				        "0.101226,0.108096,0.121549,0.148744,0.202465,0.309183", \
				        "0.114135,0.120996,0.134699,0.161870,0.215615,0.322414", \
				        "0.136930,0.144377,0.158472,0.185530,0.239176,0.345939", \
				        "0.170640,0.179562,0.196498,0.228072,0.285940,0.392692", \
				        "0.224931,0.235187,0.256051,0.294133,0.363181,0.485036", \
				        "0.317411,0.331665,0.356996,0.404650,0.488123,0.633224");
			}
			fall_transition(Timing_X1) {
				values ("0.031961,0.034082,0.038799,0.048271,0.066999,0.104357", \
				        "0.031570,0.033787,0.038656,0.048211,0.067005,0.104362", \
				        "0.031264,0.033337,0.038118,0.047905,0.066933,0.104362", \
				        "0.037567,0.039190,0.042517,0.049819,0.066835,0.104302", \
				        "0.053390,0.054946,0.058323,0.064796,0.077167,0.106610", \
				        "0.078558,0.080729,0.085020,0.092990,0.107903,0.134592", \
				        "0.119364,0.122450,0.128051,0.138457,0.157808,0.191852", \
				        "0.188240,0.192174,0.200010,0.214231,0.239928,0.284168");
			}
			rise_transition(Timing_X1) {
				values ("0.050117,0.056453,0.069075,0.093622,0.142525,0.240220", \
				        "0.050105,0.056484,0.069022,0.093573,0.142569,0.240217", \
				        "0.050114,0.056442,0.069064,0.093590,0.142560,0.240198", \
				        "0.050211,0.056539,0.069002,0.093580,0.142529,0.240200", \
				        "0.055090,0.060427,0.071597,0.094421,0.142502,0.240195", \
				        "0.071512,0.077058,0.088339,0.109293,0.150330,0.241017", \
				        "0.099685,0.105752,0.117588,0.140287,0.183631,0.265961", \
				        "0.148013,0.154758,0.167714,0.192415,0.239455,0.328867");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039408,0.042419,0.048357,0.060072,0.082799,0.127278", \
				        "0.042200,0.045238,0.051070,0.062860,0.085560,0.130034", \
				        "0.047284,0.050343,0.056379,0.067997,0.090688,0.135190", \
				        "0.056693,0.059940,0.066209,0.078102,0.100863,0.145327", \
				        "0.069752,0.073494,0.080902,0.094642,0.119621,0.165157", \
				        "0.082301,0.087588,0.097380,0.115315,0.146508,0.199742", \
				        "0.088214,0.095197,0.108574,0.132959,0.175208,0.244742", \
				        "0.072744,0.082823,0.101022,0.134433,0.192198,0.286931");
			}
			cell_rise(Timing_X1) {
				values ("0.074371,0.079621,0.090307,0.111289,0.152918,0.235679", \
				        "0.078254,0.083518,0.094116,0.115073,0.156754,0.239563", \
				        "0.085779,0.091129,0.101612,0.122576,0.164294,0.247143", \
				        "0.099794,0.105158,0.115825,0.136857,0.178588,0.261512", \
				        "0.124596,0.130783,0.142460,0.164082,0.205847,0.288786", \
				        "0.159432,0.167117,0.182303,0.209759,0.258708,0.343866", \
				        "0.213990,0.224167,0.243264,0.278122,0.340007,0.445178", \
				        "0.309734,0.323026,0.346478,0.390666,0.467893,0.599423");
			}
			fall_transition(Timing_X1) {
				values ("0.024577,0.027123,0.032248,0.041636,0.060378,0.097988", \
				        "0.024543,0.027076,0.032124,0.041631,0.060358,0.097956", \
				        "0.024438,0.026967,0.032087,0.041473,0.060426,0.097962", \
				        "0.026544,0.028842,0.033332,0.042285,0.060433,0.097989", \
				        "0.033774,0.035967,0.040596,0.048814,0.064806,0.099097", \
				        "0.048382,0.050966,0.055740,0.064424,0.080367,0.111837", \
				        "0.073618,0.076907,0.083002,0.093679,0.112185,0.144708", \
				        "0.115165,0.119676,0.128173,0.142848,0.167382,0.207414");
			}
			rise_transition(Timing_X1) {
				values ("0.042295,0.047057,0.056662,0.075402,0.112714,0.187071", \
				        "0.042308,0.047052,0.056629,0.075362,0.112708,0.187089", \
				        "0.042301,0.047038,0.056690,0.075397,0.112659,0.187075", \
				        "0.042473,0.047200,0.056652,0.075440,0.112654,0.187083", \
				        "0.050064,0.053788,0.061538,0.077630,0.112804,0.187087", \
				        "0.069356,0.073500,0.081850,0.097359,0.126257,0.190077", \
				        "0.098593,0.103659,0.113486,0.131879,0.165428,0.226148", \
				        "0.142537,0.148890,0.160720,0.183071,0.223934,0.296329");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035097,0.038247,0.044447,0.056559,0.079793,0.124700", \
				        "0.037922,0.041063,0.047285,0.059241,0.082478,0.127372", \
				        "0.043182,0.046363,0.052574,0.064505,0.087644,0.132590", \
				        "0.052546,0.055964,0.062437,0.074720,0.097820,0.142706", \
				        "0.064916,0.068929,0.076621,0.090851,0.116476,0.162496", \
				        "0.075717,0.081366,0.091757,0.110437,0.142641,0.196711", \
				        "0.078357,0.085896,0.100057,0.125742,0.169421,0.240465", \
				        "0.057018,0.067731,0.087062,0.122063,0.182113,0.279506");
			}
			cell_rise(Timing_X1) {
				values ("0.089852,0.096636,0.110279,0.137200,0.190656,0.297043", \
				        "0.093724,0.100478,0.114047,0.140974,0.194458,0.300890", \
				        "0.101053,0.107899,0.121398,0.148252,0.201823,0.308327", \
				        "0.114046,0.120979,0.134598,0.161626,0.215210,0.321767", \
				        "0.136943,0.144265,0.158355,0.185389,0.238958,0.345509", \
				        "0.170540,0.179088,0.196235,0.227833,0.285669,0.392360", \
				        "0.225323,0.236263,0.256705,0.294775,0.363549,0.485098", \
				        "0.324193,0.338186,0.362898,0.409628,0.492175,0.635930");
			}
			fall_transition(Timing_X1) {
				values ("0.024011,0.026603,0.031794,0.041200,0.059873,0.097331", \
				        "0.023863,0.026441,0.031659,0.041200,0.059990,0.097326", \
				        "0.023657,0.026269,0.031361,0.040962,0.059886,0.097373", \
				        "0.026167,0.028478,0.033009,0.041762,0.059915,0.097332", \
				        "0.033894,0.036046,0.040464,0.048427,0.064537,0.098566", \
				        "0.049105,0.051563,0.056253,0.064624,0.080396,0.111481", \
				        "0.075222,0.078389,0.084305,0.094679,0.112738,0.144790", \
				        "0.118362,0.122756,0.131014,0.145330,0.169266,0.208514");
			}
			rise_transition(Timing_X1) {
				values ("0.051159,0.057404,0.069845,0.094480,0.143269,0.240850", \
				        "0.051158,0.057401,0.069870,0.094448,0.143321,0.240843", \
				        "0.051163,0.057385,0.069903,0.094462,0.143300,0.240817", \
				        "0.051234,0.057478,0.069903,0.094423,0.143297,0.240829", \
				        "0.056204,0.061459,0.072490,0.095292,0.143263,0.240819", \
				        "0.072633,0.078130,0.089176,0.110169,0.151152,0.241667", \
				        "0.099211,0.105444,0.117491,0.140597,0.184212,0.266555", \
				        "0.141115,0.148458,0.162229,0.188491,0.237279,0.328287");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035433,0.038649,0.045140,0.057171,0.080274,0.125265", \
				        "0.038254,0.041476,0.047737,0.059759,0.083032,0.127904", \
				        "0.043504,0.046722,0.053107,0.065102,0.088160,0.133163", \
				        "0.052897,0.056404,0.063056,0.075126,0.098308,0.143276", \
				        "0.065381,0.069503,0.077357,0.091528,0.117030,0.162999", \
				        "0.076516,0.082197,0.092628,0.111328,0.143359,0.197373", \
				        "0.079527,0.087321,0.101498,0.127068,0.170567,0.241447", \
				        "0.059901,0.070510,0.089795,0.124462,0.184131,0.281224");
			}
			cell_rise(Timing_X1) {
				values ("0.107777,0.114518,0.128249,0.155359,0.209033,0.315705", \
				        "0.111667,0.118423,0.132078,0.159144,0.212852,0.319573", \
				        "0.119011,0.125872,0.139415,0.166443,0.220236,0.327007", \
				        "0.132090,0.138939,0.152684,0.179845,0.233627,0.340453", \
				        "0.155690,0.162749,0.176433,0.203586,0.257373,0.364212", \
				        "0.193562,0.201671,0.217808,0.248153,0.304487,0.411007", \
				        "0.253774,0.263410,0.282917,0.319057,0.385827,0.505083", \
				        "0.358807,0.371865,0.394728,0.439081,0.518761,0.659403");
			}
			fall_transition(Timing_X1) {
				values ("0.031919,0.034131,0.038814,0.048271,0.067025,0.104341", \
				        "0.031777,0.033975,0.038742,0.048256,0.067004,0.104387", \
				        "0.031554,0.033722,0.038482,0.048040,0.066975,0.104340", \
				        "0.034003,0.036080,0.040354,0.048907,0.066991,0.104304", \
				        "0.042961,0.044680,0.048465,0.055960,0.071579,0.105594", \
				        "0.061094,0.062852,0.066536,0.073694,0.088434,0.118721", \
				        "0.092182,0.094474,0.098861,0.107311,0.123146,0.153341", \
				        "0.143003,0.145918,0.152246,0.163549,0.184012,0.219938");
			}
			rise_transition(Timing_X1) {
				values ("0.060434,0.066757,0.079540,0.104362,0.153529,0.251638", \
				        "0.060441,0.066753,0.079538,0.104312,0.153587,0.251628", \
				        "0.060439,0.066728,0.079534,0.104329,0.153531,0.251617", \
				        "0.060465,0.066769,0.079500,0.104343,0.153534,0.251636", \
				        "0.063033,0.068762,0.080610,0.104555,0.153549,0.251631", \
				        "0.078692,0.084368,0.095662,0.116803,0.159278,0.251965", \
				        "0.104927,0.111583,0.123821,0.147405,0.191389,0.274241", \
				        "0.147103,0.154621,0.168766,0.195417,0.244668,0.336221");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002050,0.002291,0.002783,0.003757,0.005699,0.009574", \
				        "0.002047,0.002293,0.002781,0.003753,0.005690,0.009573", \
				        "0.002073,0.002312,0.002798,0.003763,0.005696,0.009573", \
				        "0.002167,0.002402,0.002880,0.003826,0.005739,0.009602", \
				        "0.002420,0.002644,0.003107,0.004020,0.005898,0.009713", \
				        "0.003038,0.003237,0.003658,0.004530,0.006339,0.010067", \
				        "0.004455,0.004617,0.004965,0.005727,0.007418,0.010983", \
				        "0.007579,0.007692,0.007939,0.008524,0.009943,0.013212");
			}
			fall_power(Power_X1) {
				values ("0.000622,0.000382,-0.000101,-0.001067,-0.003000,-0.006856", \
				        "0.000625,0.000384,-0.000096,-0.001060,-0.002990,-0.006853", \
				        "0.000635,0.000398,-0.000081,-0.001044,-0.002980,-0.006843", \
				        "0.000709,0.000463,-0.000026,-0.001007,-0.002953,-0.006827", \
				        "0.000936,0.000664,0.000143,-0.000875,-0.002863,-0.006769", \
				        "0.001557,0.001255,0.000662,-0.000444,-0.002540,-0.006550", \
				        "0.003017,0.002675,0.002004,0.000750,-0.001574,-0.005844", \
				        "0.006183,0.005796,0.005053,0.003626,0.000994,-0.003785");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2";

			rise_power(Power_X1) {
				values ("0.001864,0.002112,0.002599,0.003573,0.005511,0.009387", \
				        "0.001866,0.002108,0.002600,0.003569,0.005508,0.009384", \
				        "0.001892,0.002128,0.002615,0.003579,0.005508,0.009384", \
				        "0.001977,0.002212,0.002686,0.003633,0.005553,0.009410", \
				        "0.002207,0.002433,0.002890,0.003817,0.005693,0.009506", \
				        "0.002747,0.002953,0.003381,0.004268,0.006085,0.009820", \
				        "0.003970,0.004153,0.004521,0.005326,0.007040,0.010646", \
				        "0.006726,0.006844,0.007114,0.007745,0.009243,0.012605");
			}
			fall_power(Power_X1) {
				values ("0.000624,0.000384,-0.000101,-0.001063,-0.002994,-0.006857", \
				        "0.000631,0.000391,-0.000095,-0.001053,-0.002982,-0.006850", \
				        "0.000651,0.000408,-0.000071,-0.001034,-0.002972,-0.006831", \
				        "0.000721,0.000477,-0.000015,-0.000997,-0.002941,-0.006815", \
				        "0.000935,0.000668,0.000144,-0.000872,-0.002859,-0.006761", \
				        "0.001504,0.001205,0.000627,-0.000474,-0.002555,-0.006561", \
				        "0.002820,0.002488,0.001840,0.000616,-0.001678,-0.005922", \
				        "0.005655,0.005286,0.004564,0.003199,0.000646,-0.004047");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002864,0.003105,0.003592,0.004565,0.006503,0.010381", \
				        "0.002869,0.003106,0.003587,0.004566,0.006505,0.010381", \
				        "0.002878,0.003119,0.003602,0.004569,0.006508,0.010382", \
				        "0.002960,0.003184,0.003662,0.004621,0.006541,0.010402", \
				        "0.003147,0.003383,0.003850,0.004782,0.006674,0.010501", \
				        "0.003645,0.003867,0.004309,0.005207,0.007052,0.010801", \
				        "0.004798,0.004991,0.005386,0.006219,0.007970,0.011605", \
				        "0.007430,0.007569,0.007876,0.008566,0.010122,0.013526");
			}
			fall_power(Power_X1) {
				values ("0.000629,0.000385,-0.000099,-0.001061,-0.002992,-0.006855", \
				        "0.000631,0.000389,-0.000091,-0.001054,-0.002986,-0.006850", \
				        "0.000652,0.000410,-0.000069,-0.001032,-0.002972,-0.006834", \
				        "0.000713,0.000469,-0.000021,-0.000996,-0.002939,-0.006821", \
				        "0.000925,0.000659,0.000140,-0.000875,-0.002853,-0.006761", \
				        "0.001460,0.001167,0.000602,-0.000488,-0.002561,-0.006562", \
				        "0.002735,0.002418,0.001778,0.000569,-0.001694,-0.005919", \
				        "0.005523,0.005158,0.004461,0.003115,0.000587,-0.004069");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002927,0.003165,0.003646,0.004620,0.006557,0.010437", \
				        "0.002930,0.003161,0.003646,0.004617,0.006551,0.010428", \
				        "0.002945,0.003174,0.003660,0.004630,0.006561,0.010435", \
				        "0.003042,0.003273,0.003742,0.004698,0.006610,0.010470", \
				        "0.003279,0.003513,0.003969,0.004896,0.006774,0.010594", \
				        "0.003877,0.004093,0.004524,0.005408,0.007230,0.010957", \
				        "0.005199,0.005389,0.005790,0.006612,0.008334,0.011911", \
				        "0.008011,0.008202,0.008552,0.009294,0.010876,0.014224");
			}
			fall_power(Power_X1) {
				values ("0.000620,0.000376,-0.000111,-0.001074,-0.003005,-0.006872", \
				        "0.000605,0.000368,-0.000116,-0.001079,-0.003010,-0.006877", \
				        "0.000582,0.000350,-0.000131,-0.001096,-0.003026,-0.006893", \
				        "0.000575,0.000341,-0.000122,-0.001098,-0.003028,-0.006897", \
				        "0.000683,0.000432,-0.000063,-0.001039,-0.002985,-0.006851", \
				        "0.001105,0.000824,0.000272,-0.000788,-0.002811,-0.006750", \
				        "0.002294,0.001967,0.001328,0.000126,-0.002120,-0.006285", \
				        "0.005002,0.004620,0.003903,0.002528,-0.000025,-0.004680");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2";

			rise_power(Power_X1) {
				values ("0.002739,0.002981,0.003460,0.004440,0.006373,0.010253", \
				        "0.002747,0.002981,0.003466,0.004436,0.006370,0.010249", \
				        "0.002759,0.002997,0.003482,0.004448,0.006379,0.010252", \
				        "0.002847,0.003083,0.003553,0.004511,0.006424,0.010279", \
				        "0.003073,0.003295,0.003761,0.004688,0.006575,0.010390", \
				        "0.003589,0.003810,0.004252,0.005144,0.006976,0.010719", \
				        "0.004749,0.004957,0.005365,0.006208,0.007960,0.011568", \
				        "0.007261,0.007424,0.007797,0.008564,0.010171,0.013589");
			}
			fall_power(Power_X1) {
				values ("0.000621,0.000379,-0.000108,-0.001072,-0.003002,-0.006868", \
				        "0.000612,0.000373,-0.000113,-0.001077,-0.003007,-0.006870", \
				        "0.000594,0.000361,-0.000126,-0.001089,-0.003008,-0.006885", \
				        "0.000595,0.000360,-0.000119,-0.001085,-0.003016,-0.006879", \
				        "0.000708,0.000452,-0.000046,-0.001024,-0.002968,-0.006838", \
				        "0.001102,0.000821,0.000274,-0.000780,-0.002802,-0.006740", \
				        "0.002154,0.001836,0.001222,0.000047,-0.002165,-0.006310", \
				        "0.004564,0.004211,0.003513,0.002194,-0.000285,-0.004847");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2";

			rise_power(Power_X1) {
				values ("0.003739,0.003971,0.004456,0.005425,0.007367,0.011243", \
				        "0.003732,0.003969,0.004452,0.005427,0.007361,0.011242", \
				        "0.003748,0.003989,0.004472,0.005438,0.007370,0.011249", \
				        "0.003824,0.004048,0.004532,0.005494,0.007412,0.011276", \
				        "0.004029,0.004251,0.004718,0.005657,0.007546,0.011382", \
				        "0.004512,0.004736,0.005185,0.006095,0.007931,0.011695", \
				        "0.005628,0.005840,0.006263,0.007118,0.008889,0.012522", \
				        "0.008062,0.008245,0.008638,0.009434,0.011075,0.014518");
			}
			fall_power(Power_X1) {
				values ("0.000621,0.000382,-0.000106,-0.001067,-0.003003,-0.006864", \
				        "0.000616,0.000374,-0.000111,-0.001075,-0.003008,-0.006873", \
				        "0.000595,0.000356,-0.000120,-0.001085,-0.003018,-0.006881", \
				        "0.000598,0.000360,-0.000117,-0.001082,-0.003008,-0.006883", \
				        "0.000697,0.000444,-0.000049,-0.001030,-0.002967,-0.006831", \
				        "0.001064,0.000794,0.000254,-0.000792,-0.002809,-0.006740", \
				        "0.002079,0.001780,0.001171,0.000013,-0.002182,-0.006315", \
				        "0.004453,0.004117,0.003428,0.002122,-0.000326,-0.004864");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & !A2 & B2";

			rise_power(Power_X1) {
				values ("0.002500,0.002744,0.003237,0.004217,0.006157,0.010033", \
				        "0.002481,0.002723,0.003216,0.004196,0.006143,0.010014", \
				        "0.002451,0.002693,0.003179,0.004162,0.006115,0.009999", \
				        "0.002423,0.002667,0.003156,0.004142,0.006090,0.009988", \
				        "0.002420,0.002664,0.003155,0.004132,0.006070,0.009967", \
				        "0.002628,0.002855,0.003321,0.004261,0.006169,0.010025", \
				        "0.003504,0.003699,0.004088,0.004925,0.006713,0.010433", \
				        "0.005846,0.005983,0.006278,0.006938,0.008462,0.011870");
			}
			fall_power(Power_X1) {
				values ("0.002476,0.002233,0.001746,0.000789,-0.001139,-0.004996", \
				        "0.002468,0.002226,0.001741,0.000784,-0.001141,-0.004999", \
				        "0.002471,0.002226,0.001743,0.000786,-0.001139,-0.004996", \
				        "0.002497,0.002256,0.001774,0.000805,-0.001126,-0.004986", \
				        "0.002626,0.002377,0.001889,0.000906,-0.001051,-0.004943", \
				        "0.003030,0.002772,0.002251,0.001232,-0.000790,-0.004743", \
				        "0.004118,0.003822,0.003263,0.002155,0.000021,-0.004092", \
				        "0.006591,0.006295,0.005675,0.004472,0.002161,-0.002259");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & B2";

			rise_power(Power_X1) {
				values ("0.002351,0.002601,0.003098,0.004073,0.006014,0.009889", \
				        "0.002334,0.002581,0.003075,0.004055,0.006002,0.009879", \
				        "0.002320,0.002555,0.003040,0.004021,0.005973,0.009864", \
				        "0.002282,0.002525,0.003013,0.003998,0.005953,0.009841", \
				        "0.002274,0.002520,0.003004,0.003982,0.005928,0.009818", \
				        "0.002449,0.002677,0.003146,0.004093,0.006006,0.009868", \
				        "0.003263,0.003444,0.003844,0.004702,0.006497,0.010231", \
				        "0.005490,0.005627,0.005917,0.006590,0.008126,0.011574");
			}
			fall_power(Power_X1) {
				values ("0.002408,0.002168,0.001681,0.000723,-0.001202,-0.005056", \
				        "0.002400,0.002157,0.001677,0.000715,-0.001211,-0.005064", \
				        "0.002397,0.002153,0.001670,0.000715,-0.001212,-0.005061", \
				        "0.002414,0.002180,0.001696,0.000731,-0.001196,-0.005056", \
				        "0.002541,0.002285,0.001797,0.000815,-0.001135,-0.005024", \
				        "0.002920,0.002657,0.002142,0.001116,-0.000899,-0.004843", \
				        "0.003968,0.003675,0.003112,0.002006,-0.000128,-0.004243", \
				        "0.006360,0.006055,0.005429,0.004228,0.001919,-0.002500");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2";

			rise_power(Power_X1) {
				values ("0.003247,0.003506,0.003998,0.004973,0.006914,0.010794", \
				        "0.003237,0.003487,0.003984,0.004958,0.006904,0.010783", \
				        "0.003215,0.003470,0.003943,0.004922,0.006874,0.010766", \
				        "0.003187,0.003432,0.003917,0.004900,0.006852,0.010745", \
				        "0.003181,0.003421,0.003906,0.004884,0.006834,0.010727", \
				        "0.003317,0.003551,0.004027,0.004979,0.006901,0.010773", \
				        "0.004034,0.004235,0.004660,0.005536,0.007362,0.011118", \
				        "0.006137,0.006292,0.006617,0.007339,0.008938,0.012428");
			}
			fall_power(Power_X1) {
				values ("0.002408,0.002169,0.001682,0.000726,-0.001199,-0.005056", \
				        "0.002398,0.002158,0.001675,0.000718,-0.001211,-0.005063", \
				        "0.002395,0.002149,0.001675,0.000719,-0.001209,-0.005062", \
				        "0.002415,0.002180,0.001701,0.000735,-0.001201,-0.005060", \
				        "0.002536,0.002285,0.001798,0.000812,-0.001141,-0.005022", \
				        "0.002921,0.002662,0.002142,0.001116,-0.000897,-0.004846", \
				        "0.003959,0.003672,0.003108,0.002003,-0.000131,-0.004237", \
				        "0.006344,0.006036,0.005419,0.004219,0.001909,-0.002501");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & !A2 & B1";

			rise_power(Power_X1) {
				values ("0.003460,0.003709,0.004207,0.005176,0.007110,0.010987", \
				        "0.003445,0.003701,0.004187,0.005163,0.007102,0.010978", \
				        "0.003450,0.003682,0.004158,0.005137,0.007079,0.010959", \
				        "0.003404,0.003657,0.004146,0.005120,0.007072,0.010952", \
				        "0.003411,0.003656,0.004147,0.005112,0.007057,0.010937", \
				        "0.003575,0.003804,0.004281,0.005232,0.007148,0.010999", \
				        "0.004347,0.004552,0.004989,0.005867,0.007676,0.011414", \
				        "0.006391,0.006574,0.006952,0.007741,0.009396,0.012873");
			}
			fall_power(Power_X1) {
				values ("0.002474,0.002237,0.001751,0.000792,-0.001139,-0.004999", \
				        "0.002464,0.002228,0.001741,0.000781,-0.001149,-0.005011", \
				        "0.002460,0.002219,0.001735,0.000769,-0.001165,-0.005030", \
				        "0.002447,0.002223,0.001742,0.000775,-0.001163,-0.005027", \
				        "0.002503,0.002256,0.001778,0.000811,-0.001127,-0.004996", \
				        "0.002731,0.002482,0.001981,0.000984,-0.000990,-0.004897", \
				        "0.003507,0.003230,0.002693,0.001628,-0.000447,-0.004478", \
				        "0.005463,0.005165,0.004571,0.003404,0.001161,-0.003134");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1";

			rise_power(Power_X1) {
				values ("0.003324,0.003565,0.004064,0.005026,0.006964,0.010839", \
				        "0.003310,0.003551,0.004053,0.005022,0.006955,0.010830", \
				        "0.003300,0.003541,0.004023,0.004993,0.006931,0.010815", \
				        "0.003276,0.003515,0.004008,0.004979,0.006920,0.010806", \
				        "0.003252,0.003501,0.003995,0.004966,0.006914,0.010798", \
				        "0.003405,0.003636,0.004109,0.005062,0.006980,0.010844", \
				        "0.004121,0.004328,0.004749,0.005635,0.007467,0.011212", \
				        "0.006056,0.006242,0.006619,0.007408,0.009076,0.012584");
			}
			fall_power(Power_X1) {
				values ("0.002403,0.002169,0.001693,0.000724,-0.001205,-0.005067", \
				        "0.002394,0.002157,0.001677,0.000711,-0.001219,-0.005080", \
				        "0.002388,0.002151,0.001665,0.000693,-0.001237,-0.005102", \
				        "0.002382,0.002146,0.001666,0.000699,-0.001236,-0.005102", \
				        "0.002414,0.002179,0.001701,0.000734,-0.001203,-0.005072", \
				        "0.002640,0.002392,0.001891,0.000894,-0.001077,-0.004981", \
				        "0.003384,0.003110,0.002565,0.001503,-0.000568,-0.004592", \
				        "0.005292,0.004972,0.004373,0.003207,0.000961,-0.003322");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1";

			rise_power(Power_X1) {
				values ("0.004220,0.004459,0.004959,0.005928,0.007865,0.011737", \
				        "0.004208,0.004450,0.004950,0.005919,0.007855,0.011741", \
				        "0.004194,0.004445,0.004919,0.005890,0.007833,0.011718", \
				        "0.004190,0.004424,0.004904,0.005882,0.007820,0.011711", \
				        "0.004165,0.004410,0.004897,0.005870,0.007813,0.011700", \
				        "0.004267,0.004505,0.004996,0.005954,0.007879,0.011745", \
				        "0.004919,0.005142,0.005588,0.006491,0.008336,0.012099", \
				        "0.006794,0.006995,0.007386,0.008202,0.009898,0.013433");
			}
			fall_power(Power_X1) {
				values ("0.002406,0.002169,0.001693,0.000727,-0.001204,-0.005067", \
				        "0.002396,0.002156,0.001675,0.000714,-0.001216,-0.005079", \
				        "0.002387,0.002148,0.001663,0.000696,-0.001237,-0.005102", \
				        "0.002382,0.002153,0.001670,0.000702,-0.001236,-0.005102", \
				        "0.002418,0.002180,0.001702,0.000734,-0.001204,-0.005064", \
				        "0.002642,0.002390,0.001889,0.000894,-0.001076,-0.004982", \
				        "0.003387,0.003103,0.002562,0.001502,-0.000568,-0.004591", \
				        "0.005264,0.004944,0.004367,0.003200,0.000959,-0.003324");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI22_X2
 Cell Description	: Combinational cell (AOI22_X2) with drive strength X2
*******************************************************************************************/

cell (AOI22_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 20140.148312;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 4301.433000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 4673.423000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 4673.426000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 5045.541000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 17458.920000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 20175.790000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 17830.900000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 29163.840000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 17458.930000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 17830.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 23093.310000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 32114.230000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 30615.580000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 29166.120000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 32116.990000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 36523.030000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001339;
		fall_capacitance	: 0.001275;
		rise_capacitance	: 0.001403;
		fall_capacitance_range		(0.001105, 0.001587);
		rise_capacitance_range		(0.001153, 0.001702);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000024,0.000019,0.000015,0.000012,0.000011,0.000009,0.000007");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000027,0.000022,0.000017,0.000014,0.000011,0.000009,0.000007");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000027,0.000022,0.000017,0.000014,0.000011,0.000009,0.000007");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000005,-0.000010");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001016;
		fall_capacitance	: 0.000930;
		rise_capacitance	: 0.001101;
		fall_capacitance_range		(0.000781, 0.001197);
		rise_capacitance_range		(0.000912, 0.001344);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A1 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000027,0.000019,0.000013,0.000008,0.000004,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000027,0.000019,0.000013,0.000008,0.000004,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000025,0.000017,0.000011,0.000007,0.000004,0.000000,-0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001021;
		fall_capacitance	: 0.001006;
		rise_capacitance	: 0.001037;
		fall_capacitance_range		(0.000840, 0.001208);
		rise_capacitance_range		(0.000882, 0.001283);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000014,0.000011,0.000009,0.000008,0.000007,0.000006,0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000054,0.000040,0.000029,0.000020,0.000015,0.000010,0.000006,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000011,0.000006,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000014,0.000011,0.000009,0.000008,0.000007,0.000006,0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000014,0.000011,0.000009,0.000008,0.000007,0.000006,0.000004");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001041;
		fall_capacitance	: 0.001005;
		rise_capacitance	: 0.001077;
		fall_capacitance_range		(0.000827, 0.001156);
		rise_capacitance_range		(0.000910, 0.001261);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000039,0.000028,0.000020,0.000014,0.000010,0.000006,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000029,0.000023,0.000018,0.000015,0.000012,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000008,0.000004,0.000002,0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000029,0.000023,0.000018,0.000015,0.000012,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000029,0.000023,0.000018,0.000015,0.000012,0.000008,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) | (B1 & B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.016023,0.020081,0.025425,0.036154,0.057380,0.099747", \
				        "0.019186,0.023063,0.028485,0.039131,0.060387,0.102711", \
				        "0.023909,0.028845,0.034708,0.045389,0.066507,0.108667", \
				        "0.028475,0.035140,0.043013,0.056645,0.079085,0.121056", \
				        "0.031331,0.040234,0.050708,0.069072,0.099295,0.146809", \
				        "0.028926,0.040737,0.054786,0.079175,0.119526,0.183650", \
				        "0.012832,0.028812,0.047472,0.080005,0.133712,0.219163", \
				        "-0.032505,-0.011982,0.012766,0.055791,0.127306,0.241197");
			}
			cell_rise(Timing_X2) {
				values ("0.026244,0.033520,0.043271,0.062316,0.100238,0.175881", \
				        "0.029671,0.036867,0.046518,0.065547,0.103489,0.179143", \
				        "0.037462,0.044354,0.053786,0.072606,0.110321,0.185893", \
				        "0.049923,0.058747,0.069242,0.087699,0.124886,0.199962", \
				        "0.067457,0.078822,0.092577,0.116411,0.155793,0.229658", \
				        "0.094053,0.108315,0.125729,0.156601,0.208665,0.292019", \
				        "0.135981,0.154485,0.176466,0.215482,0.282061,0.391766", \
				        "0.206450,0.229618,0.257820,0.307408,0.391812,0.531556");
			}
			fall_transition(Timing_X2) {
				values ("0.010439,0.013992,0.018587,0.027793,0.046202,0.082882", \
				        "0.010895,0.014135,0.018551,0.027765,0.046160,0.082900", \
				        "0.014420,0.017167,0.020641,0.028238,0.046142,0.082871", \
				        "0.020852,0.023992,0.028152,0.034647,0.048100,0.082928", \
				        "0.031750,0.035682,0.040608,0.048781,0.062732,0.088797", \
				        "0.050711,0.055692,0.061785,0.072126,0.089883,0.119213", \
				        "0.084125,0.090713,0.098652,0.112168,0.134708,0.171830", \
				        "0.145239,0.153799,0.164189,0.182169,0.211921,0.259413");
			}
			rise_transition(Timing_X2) {
				values ("0.021407,0.028255,0.037446,0.054999,0.090096,0.160505", \
				        "0.021169,0.028096,0.037374,0.054867,0.090098,0.160507", \
				        "0.022415,0.028360,0.037115,0.054966,0.090097,0.160502", \
				        "0.029343,0.034386,0.041087,0.055758,0.090053,0.160488", \
				        "0.040381,0.046801,0.054773,0.067899,0.094350,0.160504", \
				        "0.057856,0.065724,0.075495,0.092739,0.121490,0.172739", \
				        "0.089132,0.098033,0.109523,0.130353,0.167265,0.228063", \
				        "0.147675,0.157577,0.170525,0.194724,0.238784,0.315672");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.015984,0.020053,0.025421,0.036166,0.057378,0.099777", \
				        "0.019198,0.023102,0.028483,0.039180,0.060446,0.102789", \
				        "0.024006,0.028924,0.034790,0.045444,0.066575,0.108833", \
				        "0.028602,0.035249,0.043087,0.056732,0.079184,0.121162", \
				        "0.030974,0.039996,0.050562,0.069020,0.099317,0.146864", \
				        "0.026860,0.038957,0.053335,0.078198,0.119005,0.183432", \
				        "0.006078,0.022813,0.042143,0.075788,0.130802,0.217556", \
				        "-0.050131,-0.028431,-0.002338,0.042631,0.116955,0.234223");
			}
			cell_rise(Timing_X2) {
				values ("0.031849,0.041862,0.055232,0.081420,0.133497,0.237170", \
				        "0.035027,0.044970,0.058158,0.084465,0.136508,0.240203", \
				        "0.042523,0.051979,0.064975,0.090963,0.142791,0.246454", \
				        "0.057208,0.067553,0.079989,0.105084,0.156369,0.259444", \
				        "0.078203,0.091343,0.107380,0.135461,0.185481,0.287156", \
				        "0.109985,0.126317,0.146460,0.182539,0.243899,0.346195", \
				        "0.160825,0.181826,0.206777,0.251703,0.329408,0.458831", \
				        "0.247780,0.273651,0.305437,0.361472,0.458256,0.621235");
			}
			fall_transition(Timing_X2) {
				values ("0.010397,0.014093,0.018620,0.027791,0.046201,0.082881", \
				        "0.010865,0.014169,0.018575,0.027778,0.046151,0.082837", \
				        "0.014335,0.017101,0.020597,0.028202,0.046148,0.082879", \
				        "0.020796,0.023921,0.028100,0.034590,0.048086,0.082934", \
				        "0.031894,0.035818,0.040694,0.048806,0.062716,0.088779", \
				        "0.051318,0.056268,0.062356,0.072613,0.090189,0.119324", \
				        "0.085316,0.092066,0.100090,0.113624,0.136024,0.172766", \
				        "0.146800,0.155841,0.166582,0.185103,0.215115,0.262485");
			}
			rise_transition(Timing_X2) {
				values ("0.030297,0.039806,0.052184,0.075730,0.123259,0.218036", \
				        "0.029793,0.039499,0.051988,0.075844,0.123253,0.218043", \
				        "0.029510,0.038671,0.051565,0.075799,0.123249,0.218049", \
				        "0.034827,0.041797,0.052160,0.075131,0.123262,0.218033", \
				        "0.046071,0.054016,0.064022,0.081863,0.123566,0.218043", \
				        "0.063395,0.073054,0.085077,0.106365,0.142895,0.221319", \
				        "0.094004,0.104682,0.118570,0.144158,0.189747,0.265765", \
				        "0.150534,0.162454,0.178011,0.207213,0.261004,0.355687");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.016227,0.020317,0.025697,0.036420,0.057783,0.100288", \
				        "0.019406,0.023330,0.028749,0.039497,0.060778,0.103301", \
				        "0.024338,0.029338,0.035192,0.045734,0.066946,0.109305", \
				        "0.029061,0.035829,0.043629,0.057236,0.079528,0.121672", \
				        "0.031742,0.040813,0.051476,0.069791,0.099954,0.147363", \
				        "0.028214,0.040350,0.054723,0.079473,0.120037,0.184261", \
				        "0.009001,0.025442,0.044665,0.077943,0.132566,0.219015", \
				        "-0.042897,-0.022319,0.002992,0.047074,0.120487,0.237015");
			}
			cell_rise(Timing_X2) {
				values ("0.045691,0.055742,0.069125,0.095476,0.147725,0.251668", \
				        "0.048753,0.058801,0.072103,0.098483,0.150775,0.254727", \
				        "0.055607,0.065510,0.078721,0.104912,0.157036,0.260944", \
				        "0.071038,0.080342,0.093151,0.118837,0.170480,0.273903", \
				        "0.096133,0.108093,0.122764,0.149020,0.199339,0.301472", \
				        "0.132675,0.147472,0.166246,0.200200,0.259017,0.360154", \
				        "0.189238,0.208206,0.231371,0.274092,0.348910,0.475009", \
				        "0.283527,0.307327,0.336471,0.389455,0.482557,0.641898");
			}
			fall_transition(Timing_X2) {
				values ("0.013594,0.017738,0.022927,0.032971,0.051842,0.088632", \
				        "0.013968,0.017818,0.022937,0.032982,0.051830,0.088603", \
				        "0.018209,0.020998,0.024898,0.033372,0.051848,0.088628", \
				        "0.027940,0.030218,0.033687,0.039922,0.053789,0.088609", \
				        "0.043819,0.046019,0.049629,0.056405,0.068959,0.094443", \
				        "0.069186,0.071970,0.075942,0.083791,0.098925,0.125955", \
				        "0.112123,0.115455,0.120354,0.130023,0.148578,0.182099", \
				        "0.186194,0.190497,0.196842,0.209590,0.233615,0.275906");
			}
			rise_transition(Timing_X2) {
				values ("0.038701,0.047959,0.060343,0.084162,0.131754,0.226969", \
				        "0.038568,0.047959,0.060292,0.084150,0.131796,0.226964", \
				        "0.037848,0.047572,0.060052,0.084181,0.131806,0.226959", \
				        "0.039716,0.047996,0.059654,0.083878,0.131810,0.226973", \
				        "0.051031,0.058771,0.068377,0.087658,0.131614,0.226979", \
				        "0.069060,0.078570,0.090515,0.111482,0.147942,0.229087", \
				        "0.098711,0.110224,0.124401,0.150174,0.195393,0.270655", \
				        "0.153266,0.166235,0.182962,0.213012,0.267446,0.362005");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021151,0.025211,0.030659,0.041268,0.062545,0.104969", \
				        "0.023664,0.027785,0.033190,0.043866,0.065151,0.107658", \
				        "0.027653,0.032254,0.037939,0.048660,0.070062,0.112658", \
				        "0.032455,0.038207,0.045083,0.057540,0.079841,0.122639", \
				        "0.036046,0.043924,0.053119,0.069010,0.095858,0.141867", \
				        "0.034385,0.045386,0.058175,0.080036,0.115606,0.171987", \
				        "0.019909,0.035029,0.052769,0.083046,0.131948,0.207708", \
				        "-0.024731,-0.003731,0.020667,0.062352,0.129916,0.234433");
			}
			cell_rise(Timing_X2) {
				values ("0.035425,0.042706,0.052420,0.071605,0.109712,0.185533", \
				        "0.038838,0.046110,0.055738,0.074893,0.113003,0.188813", \
				        "0.046325,0.053475,0.063005,0.082025,0.119896,0.195651", \
				        "0.061450,0.069151,0.078590,0.097149,0.134577,0.209812", \
				        "0.083164,0.093292,0.105658,0.127703,0.165557,0.239638", \
				        "0.115253,0.128009,0.143853,0.172542,0.221878,0.302297", \
				        "0.165866,0.182214,0.202057,0.238257,0.301332,0.406964", \
				        "0.251434,0.271941,0.297214,0.342560,0.421538,0.555461");
			}
			fall_transition(Timing_X2) {
				values ("0.010446,0.014021,0.018594,0.027740,0.046164,0.082879", \
				        "0.010486,0.013976,0.018588,0.027798,0.046180,0.082872", \
				        "0.012100,0.015187,0.019279,0.027925,0.046191,0.082901", \
				        "0.016142,0.019199,0.023107,0.030831,0.047077,0.082918", \
				        "0.024405,0.027553,0.031590,0.039217,0.054190,0.085681", \
				        "0.039174,0.042933,0.047747,0.056140,0.071223,0.100862", \
				        "0.064287,0.069178,0.075315,0.085999,0.104015,0.135223", \
				        "0.106424,0.113344,0.121681,0.136418,0.160600,0.199223");
			}
			rise_transition(Timing_X2) {
				values ("0.026719,0.033588,0.042670,0.060499,0.095958,0.166625", \
				        "0.026676,0.033562,0.042707,0.060604,0.095960,0.166626", \
				        "0.026605,0.033304,0.042721,0.060600,0.095932,0.166639", \
				        "0.031548,0.036760,0.044407,0.060782,0.095920,0.166606", \
				        "0.042949,0.049245,0.057007,0.070223,0.098725,0.166650", \
				        "0.059179,0.067579,0.077699,0.095190,0.123852,0.176728", \
				        "0.084649,0.095248,0.108179,0.130862,0.169146,0.230292", \
				        "0.129653,0.142640,0.158492,0.186647,0.235036,0.315623");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021103,0.025170,0.030566,0.041269,0.062557,0.104989", \
				        "0.023661,0.027790,0.033154,0.043895,0.065178,0.107708", \
				        "0.027721,0.032318,0.038012,0.048726,0.070139,0.112745", \
				        "0.032628,0.038357,0.045223,0.057669,0.079957,0.122758", \
				        "0.036230,0.044117,0.053304,0.069173,0.096005,0.141998", \
				        "0.033703,0.044830,0.057786,0.079835,0.115574,0.172045", \
				        "0.015870,0.031460,0.049679,0.080741,0.130537,0.207042", \
				        "-0.037166,-0.015183,0.010255,0.053547,0.123289,0.230212");
			}
			cell_rise(Timing_X2) {
				values ("0.044807,0.054822,0.068149,0.094433,0.146611,0.250476", \
				        "0.047975,0.058000,0.071233,0.097485,0.149696,0.253527", \
				        "0.055117,0.064918,0.078048,0.104144,0.156112,0.259878", \
				        "0.070791,0.080082,0.092761,0.118366,0.169825,0.273048", \
				        "0.096501,0.108281,0.122830,0.148976,0.199110,0.300952", \
				        "0.134234,0.148983,0.167443,0.201116,0.259458,0.360194", \
				        "0.193502,0.212532,0.235314,0.277427,0.351399,0.476399", \
				        "0.295176,0.318013,0.347105,0.398941,0.490373,0.647597");
			}
			fall_transition(Timing_X2) {
				values ("0.010429,0.014025,0.018627,0.027750,0.046174,0.082882", \
				        "0.010479,0.013970,0.018587,0.027809,0.046171,0.082834", \
				        "0.012062,0.015151,0.019270,0.027927,0.046200,0.082905", \
				        "0.016080,0.019136,0.023066,0.030783,0.047067,0.082923", \
				        "0.024377,0.027506,0.031544,0.039158,0.054143,0.085667", \
				        "0.039178,0.043003,0.047842,0.056214,0.071252,0.100847", \
				        "0.064755,0.069635,0.075838,0.086483,0.104515,0.135538", \
				        "0.107233,0.114380,0.122835,0.137763,0.161992,0.200593");
			}
			rise_transition(Timing_X2) {
				values ("0.037876,0.047197,0.059535,0.083498,0.131211,0.226516", \
				        "0.037746,0.047155,0.059548,0.083519,0.131239,0.226516", \
				        "0.037027,0.046789,0.059392,0.083588,0.131238,0.226509", \
				        "0.039008,0.047259,0.058975,0.083273,0.131229,0.226513", \
				        "0.049995,0.057831,0.067495,0.087102,0.131084,0.226510", \
				        "0.066697,0.076797,0.088944,0.110340,0.147185,0.228598", \
				        "0.092415,0.104698,0.120017,0.147070,0.193476,0.269499", \
				        "0.136336,0.151502,0.169694,0.202802,0.260783,0.358294");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021334,0.025481,0.030888,0.041567,0.062914,0.105489", \
				        "0.023912,0.028085,0.033433,0.044133,0.065541,0.108242", \
				        "0.028002,0.032663,0.038256,0.049008,0.070503,0.113232", \
				        "0.032984,0.038733,0.045628,0.057983,0.080302,0.123292", \
				        "0.036787,0.044710,0.053906,0.069720,0.096420,0.142533", \
				        "0.034675,0.045782,0.058867,0.080734,0.116285,0.172705", \
				        "0.017636,0.033178,0.051411,0.082267,0.131774,0.208057", \
				        "-0.033233,-0.011763,0.013383,0.056315,0.125523,0.232043");
			}
			cell_rise(Timing_X2) {
				values ("0.058723,0.068798,0.082173,0.108553,0.160916,0.265000", \
				        "0.061866,0.071961,0.085194,0.111627,0.163993,0.268069", \
				        "0.068772,0.078716,0.091923,0.118193,0.170372,0.274384", \
				        "0.083622,0.093375,0.106314,0.132270,0.183989,0.287527", \
				        "0.112638,0.123533,0.137143,0.162209,0.212985,0.315278", \
				        "0.154902,0.168497,0.185892,0.217796,0.274014,0.374206", \
				        "0.219048,0.236855,0.258277,0.298552,0.370160,0.492140", \
				        "0.327155,0.348736,0.375639,0.425239,0.513721,0.667671");
			}
			fall_transition(Timing_X2) {
				values ("0.013602,0.017685,0.022958,0.032984,0.051831,0.088628", \
				        "0.013683,0.017791,0.022942,0.032970,0.051829,0.088601", \
				        "0.015537,0.019009,0.023613,0.033114,0.051844,0.088613", \
				        "0.021090,0.023999,0.028083,0.036033,0.052754,0.088606", \
				        "0.032782,0.034934,0.038336,0.045395,0.060024,0.091416", \
				        "0.052339,0.054583,0.057867,0.064656,0.078294,0.106954", \
				        "0.084398,0.087102,0.091063,0.098889,0.114154,0.143008", \
				        "0.136942,0.140494,0.145790,0.156399,0.176159,0.211023");
			}
			rise_transition(Timing_X2) {
				values ("0.045924,0.055245,0.067702,0.091823,0.139845,0.235464", \
				        "0.045897,0.055235,0.067713,0.091906,0.139842,0.235449", \
				        "0.045715,0.055160,0.067636,0.091813,0.139809,0.235468", \
				        "0.045584,0.054618,0.067085,0.091770,0.139827,0.235464", \
				        "0.055159,0.062633,0.072636,0.093680,0.139501,0.235467", \
				        "0.073320,0.082921,0.094636,0.115475,0.152702,0.236644", \
				        "0.100147,0.112258,0.127168,0.153788,0.199324,0.274681", \
				        "0.144621,0.159265,0.177784,0.210559,0.268098,0.364865");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.028306,0.032747,0.038525,0.049939,0.071969,0.115241", \
				        "0.031289,0.035614,0.041450,0.052825,0.074904,0.118112", \
				        "0.037657,0.041916,0.047558,0.058917,0.080906,0.123983", \
				        "0.047863,0.053209,0.059519,0.071496,0.093274,0.136254", \
				        "0.057850,0.065097,0.073878,0.089756,0.117025,0.161758", \
				        "0.065168,0.074623,0.086290,0.107400,0.143893,0.203733", \
				        "0.062955,0.075372,0.090753,0.118693,0.166975,0.246756", \
				        "0.037442,0.054219,0.074259,0.111066,0.174598,0.279835");
			}
			cell_rise(Timing_X2) {
				values ("0.048991,0.056920,0.067409,0.087756,0.128210,0.208809", \
				        "0.052674,0.060512,0.070914,0.091388,0.131937,0.212620", \
				        "0.059873,0.067732,0.078017,0.098473,0.139161,0.219925", \
				        "0.073075,0.081362,0.091864,0.112312,0.152894,0.233751", \
				        "0.091471,0.102292,0.115348,0.138709,0.180061,0.260851", \
				        "0.117696,0.131398,0.148396,0.178419,0.229913,0.316215", \
				        "0.161989,0.179686,0.201113,0.239256,0.304400,0.412487", \
				        "0.238113,0.261589,0.288918,0.337961,0.420748,0.557316");
			}
			fall_transition(Timing_X2) {
				values ("0.019130,0.022856,0.027490,0.036774,0.055189,0.092017", \
				        "0.019060,0.022835,0.027511,0.036748,0.055193,0.092059", \
				        "0.019445,0.022970,0.027347,0.036676,0.055173,0.092013", \
				        "0.025705,0.028799,0.032589,0.039426,0.055513,0.092078", \
				        "0.036873,0.040703,0.045452,0.053366,0.067007,0.095297", \
				        "0.055135,0.060174,0.066336,0.076793,0.094515,0.123455", \
				        "0.085889,0.092631,0.100963,0.115059,0.138499,0.176404", \
				        "0.138422,0.148380,0.160028,0.179586,0.211320,0.261346");
			}
			rise_transition(Timing_X2) {
				values ("0.026411,0.033295,0.042640,0.060730,0.096975,0.169277", \
				        "0.026416,0.033305,0.042656,0.060777,0.096975,0.169284", \
				        "0.026467,0.033330,0.042748,0.060778,0.096924,0.169294", \
				        "0.028937,0.034799,0.043109,0.060708,0.096901,0.169282", \
				        "0.039782,0.045371,0.052911,0.066547,0.098091,0.169271", \
				        "0.058300,0.064261,0.072453,0.087605,0.116174,0.174820", \
				        "0.088045,0.094664,0.103741,0.121127,0.153926,0.213855", \
				        "0.137340,0.144600,0.154833,0.174939,0.213113,0.282938");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024582,0.029274,0.035347,0.047042,0.069484,0.113054", \
				        "0.027670,0.032192,0.038270,0.049965,0.072375,0.115866", \
				        "0.034445,0.038791,0.044542,0.056039,0.078345,0.121726", \
				        "0.043815,0.049527,0.056376,0.068727,0.090750,0.133972", \
				        "0.052740,0.060343,0.069492,0.086197,0.114167,0.159449", \
				        "0.057823,0.068014,0.080189,0.102274,0.139773,0.200642", \
				        "0.052086,0.065356,0.081589,0.110696,0.160491,0.241934", \
				        "0.020915,0.038487,0.059422,0.097701,0.163298,0.271075");
			}
			cell_rise(Timing_X2) {
				values ("0.057650,0.067743,0.081125,0.107289,0.159320,0.262954", \
				        "0.061220,0.071271,0.084518,0.110833,0.162984,0.266714", \
				        "0.068110,0.078194,0.091344,0.117687,0.169873,0.273762", \
				        "0.080367,0.090627,0.104024,0.130208,0.182389,0.286362", \
				        "0.098138,0.110451,0.125715,0.153560,0.205675,0.309551", \
				        "0.124295,0.139158,0.157783,0.191360,0.250933,0.356647", \
				        "0.169412,0.188465,0.211256,0.252092,0.323327,0.446501", \
				        "0.249704,0.274260,0.302853,0.354381,0.441888,0.589424");
			}
			fall_transition(Timing_X2) {
				values ("0.018578,0.022403,0.027025,0.036389,0.054689,0.091380", \
				        "0.018092,0.022028,0.026899,0.036327,0.054691,0.091411", \
				        "0.019125,0.022321,0.026730,0.035991,0.054642,0.091388", \
				        "0.025907,0.028908,0.032743,0.039225,0.055067,0.091336", \
				        "0.037453,0.041174,0.045764,0.053512,0.067041,0.094800", \
				        "0.056447,0.061312,0.067299,0.077527,0.094790,0.123441", \
				        "0.088093,0.095123,0.103241,0.116861,0.139725,0.176931", \
				        "0.143376,0.153259,0.164643,0.183780,0.214733,0.263651");
			}
			rise_transition(Timing_X2) {
				values ("0.031062,0.040025,0.052120,0.075780,0.123227,0.218042", \
				        "0.031069,0.040024,0.052068,0.075699,0.123213,0.218056", \
				        "0.031130,0.040012,0.052021,0.075760,0.123228,0.218038", \
				        "0.032642,0.040747,0.052387,0.075745,0.123253,0.218053", \
				        "0.041574,0.049138,0.059120,0.079014,0.123455,0.218063", \
				        "0.057875,0.065689,0.076349,0.096602,0.135728,0.220297", \
				        "0.086019,0.094122,0.105173,0.126621,0.168758,0.249447", \
				        "0.133636,0.142422,0.154424,0.177965,0.223317,0.310421");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024901,0.029730,0.035757,0.047463,0.069930,0.113594", \
				        "0.027985,0.032562,0.038709,0.050364,0.072813,0.116448", \
				        "0.034756,0.039081,0.044842,0.056421,0.078806,0.122304", \
				        "0.044263,0.050062,0.056987,0.069268,0.091153,0.134542", \
				        "0.053480,0.061132,0.070523,0.086928,0.114758,0.159946", \
				        "0.059095,0.069223,0.081612,0.103439,0.140758,0.201468", \
				        "0.054406,0.067657,0.083892,0.112675,0.162148,0.243325", \
				        "0.026198,0.043197,0.063888,0.101533,0.166464,0.273690");
			}
			cell_rise(Timing_X2) {
				values ("0.071404,0.081558,0.094927,0.121258,0.173510,0.277419", \
				        "0.075045,0.085116,0.098476,0.124904,0.177242,0.281234", \
				        "0.081938,0.092038,0.105266,0.131753,0.184152,0.288245", \
				        "0.094283,0.104442,0.117817,0.144279,0.196635,0.300836", \
				        "0.114857,0.126351,0.140773,0.167642,0.219890,0.323987", \
				        "0.145030,0.158775,0.176146,0.208172,0.266163,0.371009", \
				        "0.195176,0.212489,0.233683,0.272375,0.341398,0.462411", \
				        "0.282928,0.305004,0.331161,0.379718,0.463816,0.608222");
			}
			fall_transition(Timing_X2) {
				values ("0.024676,0.027990,0.032618,0.041791,0.060025,0.096588", \
				        "0.024192,0.027694,0.032512,0.041731,0.060007,0.096594", \
				        "0.025020,0.028050,0.032278,0.041491,0.059961,0.096604", \
				        "0.032724,0.034930,0.038243,0.044674,0.060347,0.096564", \
				        "0.047170,0.049825,0.053341,0.060049,0.072418,0.099988", \
				        "0.070117,0.073742,0.078284,0.086775,0.102174,0.129160", \
				        "0.108241,0.112892,0.119070,0.130107,0.150245,0.184952", \
				        "0.172536,0.179284,0.187746,0.203175,0.229955,0.275071");
			}
			rise_transition(Timing_X2) {
				values ("0.038057,0.047304,0.059677,0.083507,0.131250,0.226505", \
				        "0.038061,0.047280,0.059609,0.083552,0.131247,0.226516", \
				        "0.038074,0.047281,0.059588,0.083473,0.131209,0.226494", \
				        "0.038465,0.047439,0.059620,0.083468,0.131188,0.226510", \
				        "0.045989,0.053766,0.064126,0.085470,0.131303,0.226479", \
				        "0.061389,0.069771,0.080836,0.101691,0.141380,0.228055", \
				        "0.088183,0.097209,0.108936,0.131315,0.174190,0.255388", \
				        "0.134063,0.144261,0.157299,0.181896,0.228395,0.316482");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031826,0.036279,0.042063,0.053367,0.075448,0.118741", \
				        "0.034434,0.038923,0.044727,0.056028,0.078098,0.121461", \
				        "0.039444,0.043936,0.049802,0.061053,0.083131,0.126473", \
				        "0.047788,0.052742,0.058980,0.070935,0.093072,0.136432", \
				        "0.058243,0.064414,0.071962,0.086011,0.111043,0.156023", \
				        "0.066715,0.075189,0.085401,0.103965,0.135763,0.189041", \
				        "0.066894,0.078124,0.092268,0.117563,0.160704,0.230839", \
				        "0.044075,0.059874,0.078919,0.113446,0.172452,0.268016");
			}
			cell_rise(Timing_X2) {
				values ("0.059184,0.066960,0.077374,0.097804,0.138388,0.219159", \
				        "0.063033,0.070823,0.081065,0.101608,0.142229,0.223011", \
				        "0.070368,0.078229,0.088504,0.108887,0.149559,0.230383", \
				        "0.084097,0.092023,0.102386,0.122933,0.163556,0.244434", \
				        "0.105816,0.115650,0.127790,0.149929,0.190814,0.271670", \
				        "0.136652,0.149051,0.164729,0.192933,0.242474,0.327111", \
				        "0.188834,0.204309,0.223700,0.259228,0.321384,0.426399", \
				        "0.278678,0.299399,0.323720,0.368682,0.446449,0.577707");
			}
			fall_transition(Timing_X2) {
				values ("0.019146,0.022798,0.027575,0.036813,0.055196,0.092018", \
				        "0.019093,0.022777,0.027522,0.036798,0.055193,0.092079", \
				        "0.019232,0.022823,0.027483,0.036759,0.055171,0.092009", \
				        "0.022069,0.025331,0.029889,0.038098,0.055438,0.092085", \
				        "0.029448,0.032727,0.037086,0.045075,0.060850,0.093773", \
				        "0.043240,0.047214,0.052149,0.060842,0.076474,0.107249", \
				        "0.066660,0.071841,0.078262,0.089273,0.108029,0.140215", \
				        "0.105186,0.112513,0.121453,0.136838,0.161981,0.202065");
			}
			rise_transition(Timing_X2) {
				values ("0.032387,0.039366,0.048785,0.067101,0.103426,0.175997", \
				        "0.032399,0.039373,0.048741,0.067088,0.103439,0.175985", \
				        "0.032408,0.039372,0.048795,0.067104,0.103394,0.176007", \
				        "0.033380,0.039828,0.048840,0.067090,0.103414,0.176033", \
				        "0.043073,0.048743,0.056135,0.070958,0.103938,0.176020", \
				        "0.060822,0.067265,0.075734,0.091301,0.119956,0.180434", \
				        "0.087119,0.094911,0.104979,0.123611,0.157447,0.217874", \
				        "0.127895,0.137525,0.149607,0.172367,0.213309,0.285576");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.028110,0.032802,0.038861,0.050518,0.072962,0.116567", \
				        "0.030771,0.035460,0.041501,0.053114,0.075561,0.119195", \
				        "0.035943,0.040608,0.046618,0.058155,0.080562,0.124257", \
				        "0.044045,0.049275,0.055797,0.068009,0.090489,0.134197", \
				        "0.053611,0.060191,0.068118,0.082688,0.108304,0.153710", \
				        "0.060197,0.069311,0.080169,0.099465,0.132241,0.186321", \
				        "0.056980,0.069161,0.084075,0.110585,0.155312,0.226890", \
				        "0.027937,0.044969,0.065144,0.101408,0.162660,0.260831");
			}
			cell_rise(Timing_X2) {
				values ("0.070889,0.080850,0.094152,0.120408,0.172530,0.276342", \
				        "0.074697,0.084664,0.097833,0.124100,0.176304,0.280175", \
				        "0.081752,0.091809,0.104933,0.131228,0.183446,0.287363", \
				        "0.094207,0.104345,0.117663,0.144018,0.196212,0.300190", \
				        "0.114709,0.126109,0.140547,0.167455,0.219622,0.323561", \
				        "0.144926,0.158485,0.175938,0.207986,0.265925,0.370710", \
				        "0.197799,0.214352,0.235111,0.273548,0.342147,0.462704", \
				        "0.291188,0.312944,0.338527,0.385990,0.468692,0.611485");
			}
			fall_transition(Timing_X2) {
				values ("0.018584,0.022266,0.027099,0.036399,0.054687,0.091408", \
				        "0.018388,0.022173,0.027026,0.036312,0.054663,0.091412", \
				        "0.018622,0.022192,0.026957,0.036177,0.054665,0.091403", \
				        "0.021817,0.025060,0.029585,0.037684,0.054977,0.091398", \
				        "0.029620,0.032830,0.037061,0.044881,0.060439,0.093193", \
				        "0.043953,0.047826,0.052613,0.060976,0.076528,0.106868", \
				        "0.068239,0.073312,0.079505,0.090294,0.108504,0.140320", \
				        "0.108109,0.115501,0.124201,0.139283,0.163821,0.203178");
			}
			rise_transition(Timing_X2) {
				values ("0.038856,0.047965,0.060147,0.084076,0.131789,0.226970", \
				        "0.038854,0.047943,0.060105,0.084156,0.131803,0.226994", \
				        "0.038853,0.047966,0.060194,0.084082,0.131755,0.226980", \
				        "0.039257,0.048148,0.060256,0.084049,0.131761,0.226981", \
				        "0.046783,0.054464,0.064731,0.086067,0.131855,0.226960", \
				        "0.062098,0.070445,0.081454,0.102308,0.141977,0.228560", \
				        "0.086436,0.095826,0.108004,0.131029,0.174385,0.255729", \
				        "0.125416,0.136595,0.150643,0.176906,0.225433,0.315411");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.028429,0.033180,0.039267,0.050962,0.073430,0.117133", \
				        "0.031081,0.035819,0.041942,0.053515,0.076007,0.119720", \
				        "0.036264,0.040921,0.046963,0.058477,0.080980,0.124677", \
				        "0.044423,0.049719,0.056282,0.068439,0.090882,0.134764", \
				        "0.054160,0.060736,0.068818,0.083274,0.108829,0.154194", \
				        "0.061104,0.070148,0.081055,0.100378,0.132977,0.186980", \
				        "0.058526,0.070649,0.085661,0.112003,0.156425,0.227858", \
				        "0.031148,0.047769,0.067999,0.103875,0.164710,0.262561");
			}
			cell_rise(Timing_X2) {
				values ("0.084750,0.094719,0.108116,0.134444,0.186770,0.290815", \
				        "0.088560,0.098535,0.111846,0.138172,0.190542,0.294641", \
				        "0.095662,0.105732,0.118877,0.145279,0.197735,0.301832", \
				        "0.108128,0.118273,0.131632,0.158104,0.210516,0.314661", \
				        "0.130376,0.141224,0.155077,0.181479,0.233860,0.338039", \
				        "0.164104,0.176835,0.193454,0.224253,0.280855,0.385108", \
				        "0.220540,0.236402,0.256106,0.292921,0.359728,0.478396", \
				        "0.320419,0.340635,0.364414,0.409640,0.489713,0.629871");
			}
			fall_transition(Timing_X2) {
				values ("0.024684,0.028044,0.032643,0.041806,0.060026,0.096612", \
				        "0.024477,0.027897,0.032546,0.041765,0.060029,0.096589", \
				        "0.024638,0.027889,0.032518,0.041640,0.059982,0.096602", \
				        "0.028116,0.030905,0.035121,0.043121,0.060276,0.096595", \
				        "0.037163,0.039703,0.043376,0.050749,0.065808,0.098376", \
				        "0.054302,0.057139,0.060964,0.068196,0.082683,0.112309", \
				        "0.082858,0.086681,0.091463,0.100376,0.116644,0.146824", \
				        "0.129731,0.134910,0.141774,0.153995,0.175524,0.212096");
			}
			rise_transition(Timing_X2) {
				values ("0.045995,0.055248,0.067656,0.091878,0.139842,0.235455", \
				        "0.045989,0.055248,0.067656,0.091801,0.139812,0.235444", \
				        "0.045992,0.055240,0.067604,0.091879,0.139789,0.235445", \
				        "0.046078,0.055275,0.067697,0.091858,0.139825,0.235468", \
				        "0.051616,0.059436,0.070421,0.092888,0.139817,0.235450", \
				        "0.066692,0.075291,0.086492,0.107569,0.147990,0.236473", \
				        "0.090862,0.100633,0.113047,0.136442,0.180071,0.261706", \
				        "0.130025,0.141439,0.155687,0.182363,0.231320,0.321722");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !B2";

			rise_power(Power_X2) {
				values ("0.003413,0.004152,0.005127,0.007085,0.010974,0.018729", \
				        "0.003413,0.004151,0.005122,0.007082,0.010963,0.018722", \
				        "0.003466,0.004197,0.005166,0.007103,0.010971,0.018718", \
				        "0.003731,0.004403,0.005338,0.007233,0.011068,0.018774", \
				        "0.004260,0.004910,0.005822,0.007654,0.011393,0.019010", \
				        "0.005609,0.006179,0.007005,0.008719,0.012318,0.019750", \
				        "0.008669,0.009096,0.009763,0.011250,0.014564,0.021669", \
				        "0.015243,0.015516,0.015977,0.017106,0.019859,0.026302");
			}
			fall_power(Power_X2) {
				values ("0.001028,0.000310,-0.000654,-0.002583,-0.006449,-0.014173", \
				        "0.001018,0.000317,-0.000650,-0.002576,-0.006428,-0.014163", \
				        "0.001071,0.000348,-0.000610,-0.002550,-0.006419,-0.014128", \
				        "0.001242,0.000484,-0.000494,-0.002457,-0.006347,-0.014098", \
				        "0.001773,0.000938,-0.000124,-0.002173,-0.006154,-0.013988", \
				        "0.003165,0.002211,0.001004,-0.001255,-0.005462,-0.013506", \
				        "0.006282,0.005216,0.003850,0.001291,-0.003422,-0.012037", \
				        "0.012914,0.011705,0.010192,0.007300,0.001954,-0.007711");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2";

			rise_power(Power_X2) {
				values ("0.003135,0.003872,0.004848,0.006796,0.010682,0.018441", \
				        "0.003152,0.003864,0.004839,0.006788,0.010669,0.018432", \
				        "0.003175,0.003914,0.004880,0.006807,0.010684,0.018428", \
				        "0.003381,0.004092,0.005034,0.006927,0.010764,0.018474", \
				        "0.003894,0.004553,0.005470,0.007303,0.011052,0.018684", \
				        "0.005066,0.005661,0.006507,0.008259,0.011879,0.019336", \
				        "0.007732,0.008201,0.008908,0.010466,0.013868,0.021056", \
				        "0.013561,0.013876,0.014363,0.015550,0.018469,0.025126");
			}
			fall_power(Power_X2) {
				values ("0.001038,0.000317,-0.000650,-0.002571,-0.006438,-0.014164", \
				        "0.001045,0.000329,-0.000630,-0.002559,-0.006424,-0.014152", \
				        "0.001099,0.000363,-0.000588,-0.002524,-0.006394,-0.014125", \
				        "0.001257,0.000506,-0.000472,-0.002436,-0.006326,-0.014083", \
				        "0.001770,0.000931,-0.000126,-0.002172,-0.006142,-0.013967", \
				        "0.003009,0.002090,0.000911,-0.001329,-0.005523,-0.013548", \
				        "0.005814,0.004789,0.003471,0.000976,-0.003656,-0.012187", \
				        "0.011775,0.010629,0.009167,0.006387,0.001208,-0.008262");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2";

			rise_power(Power_X2) {
				values ("0.004710,0.005425,0.006416,0.008362,0.012236,0.019998", \
				        "0.004708,0.005429,0.006405,0.008363,0.012237,0.020001", \
				        "0.004728,0.005464,0.006435,0.008372,0.012246,0.019994", \
				        "0.004906,0.005616,0.006569,0.008480,0.012309,0.020036", \
				        "0.005368,0.006037,0.006973,0.008822,0.012601,0.020241", \
				        "0.006440,0.007075,0.007954,0.009737,0.013397,0.020881", \
				        "0.008947,0.009486,0.010240,0.011864,0.015331,0.022553", \
				        "0.014596,0.014955,0.015523,0.016809,0.019834,0.026557");
			}
			fall_power(Power_X2) {
				values ("0.001040,0.000321,-0.000646,-0.002571,-0.006438,-0.014166", \
				        "0.001063,0.000335,-0.000629,-0.002559,-0.006415,-0.014149", \
				        "0.001100,0.000386,-0.000588,-0.002528,-0.006393,-0.014119", \
				        "0.001268,0.000510,-0.000475,-0.002435,-0.006324,-0.014068", \
				        "0.001721,0.000914,-0.000142,-0.002177,-0.006149,-0.013963", \
				        "0.002923,0.002017,0.000857,-0.001355,-0.005532,-0.013542", \
				        "0.005646,0.004646,0.003357,0.000896,-0.003693,-0.012204", \
				        "0.011506,0.010401,0.008959,0.006231,0.001105,-0.008305");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & !B2";

			rise_power(Power_X2) {
				values ("0.004789,0.005519,0.006489,0.008437,0.012319,0.020070", \
				        "0.004791,0.005524,0.006488,0.008435,0.012312,0.020063", \
				        "0.004852,0.005570,0.006536,0.008468,0.012321,0.020078", \
				        "0.005079,0.005765,0.006711,0.008610,0.012428,0.020139", \
				        "0.005616,0.006304,0.007203,0.009047,0.012787,0.020408", \
				        "0.006898,0.007521,0.008381,0.010129,0.013739,0.021168", \
				        "0.009716,0.010273,0.011054,0.012672,0.016063,0.023180", \
				        "0.015669,0.016138,0.016810,0.018265,0.021359,0.027996");
			}
			fall_power(Power_X2) {
				values ("0.001027,0.000300,-0.000667,-0.002594,-0.006458,-0.014188", \
				        "0.000988,0.000282,-0.000682,-0.002612,-0.006466,-0.014210", \
				        "0.000969,0.000252,-0.000718,-0.002628,-0.006490,-0.014228", \
				        "0.000984,0.000255,-0.000695,-0.002622,-0.006476,-0.014216", \
				        "0.001284,0.000488,-0.000514,-0.002494,-0.006388,-0.014145", \
				        "0.002316,0.001424,0.000285,-0.001887,-0.005983,-0.013887", \
				        "0.004936,0.003898,0.002594,0.000119,-0.004448,-0.012867", \
				        "0.010685,0.009517,0.008027,0.005213,0.000015,-0.009412");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2";

			rise_power(Power_X2) {
				values ("0.004513,0.005234,0.006203,0.008148,0.012029,0.019791", \
				        "0.004512,0.005234,0.006204,0.008147,0.012030,0.019785", \
				        "0.004578,0.005286,0.006252,0.008180,0.012046,0.019789", \
				        "0.004763,0.005467,0.006405,0.008306,0.012135,0.019850", \
				        "0.005268,0.005940,0.006848,0.008696,0.012449,0.020073", \
				        "0.006384,0.007016,0.007893,0.009663,0.013301,0.020757", \
				        "0.008842,0.009437,0.010234,0.011890,0.015345,0.022532", \
				        "0.014078,0.014616,0.015317,0.016819,0.019993,0.026757");
			}
			fall_power(Power_X2) {
				values ("0.001024,0.000308,-0.000661,-0.002589,-0.006451,-0.014180", \
				        "0.001011,0.000291,-0.000673,-0.002600,-0.006455,-0.014193", \
				        "0.000976,0.000269,-0.000699,-0.002612,-0.006472,-0.014211", \
				        "0.001012,0.000293,-0.000661,-0.002593,-0.006451,-0.014186", \
				        "0.001317,0.000533,-0.000480,-0.002459,-0.006359,-0.014110", \
				        "0.002246,0.001377,0.000257,-0.001891,-0.005978,-0.013880", \
				        "0.004572,0.003583,0.002320,-0.000081,-0.004553,-0.012929", \
				        "0.009690,0.008583,0.007164,0.004466,-0.000556,-0.009798");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2";

			rise_power(Power_X2) {
				values ("0.006069,0.006803,0.007769,0.009707,0.013590,0.021345", \
				        "0.006066,0.006802,0.007776,0.009706,0.013588,0.021353", \
				        "0.006123,0.006834,0.007803,0.009738,0.013597,0.021357", \
				        "0.006282,0.007005,0.007942,0.009855,0.013689,0.021412", \
				        "0.006736,0.007424,0.008358,0.010204,0.013989,0.021626", \
				        "0.007819,0.008470,0.009350,0.011158,0.014814,0.022296", \
				        "0.010182,0.010794,0.011620,0.013313,0.016813,0.024052", \
				        "0.015353,0.015880,0.016631,0.018168,0.021388,0.028209");
			}
			fall_power(Power_X2) {
				values ("0.001026,0.000311,-0.000660,-0.002587,-0.006450,-0.014182", \
				        "0.001006,0.000294,-0.000674,-0.002592,-0.006447,-0.014194", \
				        "0.000980,0.000276,-0.000692,-0.002611,-0.006471,-0.014212", \
				        "0.001015,0.000292,-0.000664,-0.002590,-0.006444,-0.014193", \
				        "0.001290,0.000516,-0.000488,-0.002459,-0.006358,-0.014099", \
				        "0.002181,0.001321,0.000216,-0.001913,-0.005971,-0.013880", \
				        "0.004451,0.003465,0.002229,-0.000149,-0.004596,-0.012935", \
				        "0.009520,0.008413,0.007005,0.004350,-0.000642,-0.009838");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & !A2 & B2";

			rise_power(Power_X2) {
				values ("0.004294,0.005040,0.006030,0.007984,0.011868,0.019618", \
				        "0.004249,0.004987,0.005975,0.007942,0.011830,0.019600", \
				        "0.004195,0.004939,0.005931,0.007895,0.011796,0.019566", \
				        "0.004150,0.004897,0.005883,0.007854,0.011754,0.019544", \
				        "0.004213,0.004947,0.005911,0.007846,0.011743,0.019510", \
				        "0.004797,0.005472,0.006367,0.008223,0.012013,0.019672", \
				        "0.006904,0.007408,0.008159,0.009771,0.013277,0.020643", \
				        "0.011939,0.012298,0.012827,0.014091,0.017036,0.023748");
			}
			fall_power(Power_X2) {
				values ("0.004040,0.003314,0.002348,0.000425,-0.003433,-0.011158", \
				        "0.004031,0.003303,0.002341,0.000416,-0.003437,-0.011156", \
				        "0.004029,0.003306,0.002347,0.000422,-0.003432,-0.011147", \
				        "0.004125,0.003383,0.002425,0.000483,-0.003394,-0.011129", \
				        "0.004400,0.003660,0.002673,0.000694,-0.003230,-0.011022", \
				        "0.005346,0.004544,0.003485,0.001403,-0.002654,-0.010590", \
				        "0.007702,0.006821,0.005674,0.003427,-0.000896,-0.009204", \
				        "0.012972,0.012019,0.010766,0.008322,0.003624,-0.005302");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & B2";

			rise_power(Power_X2) {
				values ("0.004006,0.004750,0.005781,0.007694,0.011575,0.019334", \
				        "0.003967,0.004704,0.005698,0.007648,0.011552,0.019310", \
				        "0.003917,0.004653,0.005638,0.007607,0.011513,0.019280", \
				        "0.003852,0.004617,0.005590,0.007556,0.011471,0.019247", \
				        "0.003903,0.004630,0.005601,0.007546,0.011434,0.019214", \
				        "0.004434,0.005097,0.005996,0.007872,0.011658,0.019346", \
				        "0.006384,0.006907,0.007657,0.009298,0.012833,0.020259", \
				        "0.011225,0.011581,0.012120,0.013380,0.016358,0.023149");
			}
			fall_power(Power_X2) {
				values ("0.003923,0.003202,0.002232,0.000309,-0.003545,-0.011262", \
				        "0.003916,0.003184,0.002218,0.000300,-0.003556,-0.011265", \
				        "0.003909,0.003182,0.002224,0.000299,-0.003556,-0.011264", \
				        "0.003969,0.003247,0.002288,0.000349,-0.003524,-0.011252", \
				        "0.004267,0.003505,0.002517,0.000539,-0.003385,-0.011169", \
				        "0.005177,0.004348,0.003292,0.001211,-0.002843,-0.010773", \
				        "0.007433,0.006546,0.005392,0.003142,-0.001186,-0.009472", \
				        "0.012517,0.011566,0.010295,0.007849,0.003129,-0.005779");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2";

			rise_power(Power_X2) {
				values ("0.005444,0.006195,0.007175,0.009116,0.013001,0.020765", \
				        "0.005411,0.006154,0.007127,0.009085,0.012973,0.020747", \
				        "0.005365,0.006078,0.007068,0.009037,0.012936,0.020712", \
				        "0.005323,0.006031,0.007026,0.008995,0.012901,0.020685", \
				        "0.005330,0.006057,0.007033,0.008976,0.012869,0.020652", \
				        "0.005766,0.006457,0.007383,0.009262,0.013084,0.020779", \
				        "0.007527,0.008115,0.008905,0.010605,0.014188,0.021643", \
				        "0.012194,0.012579,0.013185,0.014536,0.017639,0.024500");
			}
			fall_power(Power_X2) {
				values ("0.003922,0.003205,0.002235,0.000313,-0.003541,-0.011263", \
				        "0.003911,0.003189,0.002225,0.000298,-0.003552,-0.011267", \
				        "0.003904,0.003175,0.002231,0.000301,-0.003558,-0.011266", \
				        "0.003970,0.003242,0.002286,0.000348,-0.003519,-0.011254", \
				        "0.004260,0.003510,0.002515,0.000534,-0.003385,-0.011157", \
				        "0.005151,0.004348,0.003289,0.001215,-0.002850,-0.010777", \
				        "0.007416,0.006529,0.005382,0.003135,-0.001194,-0.009490", \
				        "0.012462,0.011526,0.010269,0.007826,0.003124,-0.005778");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & !A2 & B1";

			rise_power(Power_X2) {
				values ("0.005834,0.006564,0.007541,0.009475,0.013341,0.021100", \
				        "0.005797,0.006532,0.007499,0.009443,0.013320,0.021067", \
				        "0.005763,0.006512,0.007468,0.009415,0.013301,0.021062", \
				        "0.005729,0.006468,0.007436,0.009402,0.013288,0.021048", \
				        "0.005769,0.006482,0.007458,0.009396,0.013271,0.021053", \
				        "0.006255,0.006914,0.007855,0.009737,0.013528,0.021216", \
				        "0.008089,0.008701,0.009536,0.011248,0.014817,0.022200", \
				        "0.012509,0.013009,0.013725,0.015259,0.018501,0.025376");
			}
			fall_power(Power_X2) {
				values ("0.004041,0.003314,0.002348,0.000422,-0.003439,-0.011170", \
				        "0.004046,0.003306,0.002333,0.000404,-0.003462,-0.011201", \
				        "0.004009,0.003289,0.002323,0.000385,-0.003478,-0.011222", \
				        "0.004008,0.003291,0.002344,0.000414,-0.003462,-0.011205", \
				        "0.004148,0.003411,0.002441,0.000503,-0.003384,-0.011139", \
				        "0.004735,0.003963,0.002945,0.000929,-0.003049,-0.010893", \
				        "0.006504,0.005650,0.004544,0.002381,-0.001827,-0.009959", \
				        "0.010748,0.009809,0.008585,0.006212,0.001650,-0.007058");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1";

			rise_power(Power_X2) {
				values ("0.005538,0.006268,0.007251,0.009185,0.013057,0.020808", \
				        "0.005513,0.006246,0.007218,0.009159,0.013038,0.020788", \
				        "0.005499,0.006219,0.007170,0.009132,0.013013,0.020765", \
				        "0.005443,0.006177,0.007153,0.009107,0.012992,0.020757", \
				        "0.005449,0.006180,0.007150,0.009093,0.012973,0.020746", \
				        "0.005878,0.006576,0.007504,0.009378,0.013195,0.020893", \
				        "0.007607,0.008217,0.009040,0.010772,0.014377,0.021794", \
				        "0.011788,0.012327,0.013043,0.014603,0.017860,0.024773");
			}
			fall_power(Power_X2) {
				values ("0.003926,0.003208,0.002237,0.000319,-0.003542,-0.011273", \
				        "0.003904,0.003185,0.002211,0.000292,-0.003570,-0.011301", \
				        "0.003897,0.003170,0.002193,0.000264,-0.003602,-0.011340", \
				        "0.003885,0.003172,0.002218,0.000287,-0.003585,-0.011326", \
				        "0.004023,0.003281,0.002307,0.000366,-0.003515,-0.011267", \
				        "0.004569,0.003800,0.002782,0.000761,-0.003206,-0.011045", \
				        "0.006289,0.005425,0.004316,0.002137,-0.002053,-0.010169", \
				        "0.010379,0.009438,0.008210,0.005829,0.001263,-0.007427");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1";

			rise_power(Power_X2) {
				values ("0.006957,0.007699,0.008677,0.010615,0.014487,0.022243", \
				        "0.006934,0.007670,0.008645,0.010588,0.014465,0.022225", \
				        "0.006914,0.007645,0.008598,0.010553,0.014439,0.022205", \
				        "0.006877,0.007620,0.008576,0.010533,0.014423,0.022192", \
				        "0.006881,0.007614,0.008577,0.010521,0.014410,0.022182", \
				        "0.007256,0.007946,0.008905,0.010786,0.014616,0.022315", \
				        "0.008859,0.009476,0.010346,0.012112,0.015738,0.023192", \
				        "0.012924,0.013495,0.014255,0.015837,0.019155,0.026132");
			}
			fall_power(Power_X2) {
				values ("0.003925,0.003209,0.002239,0.000311,-0.003550,-0.011276", \
				        "0.003913,0.003188,0.002214,0.000284,-0.003573,-0.011310", \
				        "0.003889,0.003167,0.002199,0.000262,-0.003599,-0.011343", \
				        "0.003901,0.003167,0.002214,0.000284,-0.003587,-0.011324", \
				        "0.004019,0.003281,0.002308,0.000365,-0.003513,-0.011262", \
				        "0.004565,0.003796,0.002777,0.000764,-0.003206,-0.011047", \
				        "0.006273,0.005418,0.004307,0.002140,-0.002057,-0.010167", \
				        "0.010355,0.009426,0.008194,0.005815,0.001252,-0.007423");
			}
		}
	}

}


/******************************************************************************************
 Module          	: AOI22_X4
 Cell Description	: Combinational cell (AOI22_X4) with drive strength X4
*******************************************************************************************/

cell (AOI22_X4) {

	area               	: 2.394000;

	cell_leakage_power 	: 40280.229437;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 8602.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 9346.823000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 9346.828000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 10091.020000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 34917.820000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 40351.510000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 35661.770000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 58327.520000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 34917.860000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 35661.780000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 46186.580000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 64228.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 61231.110000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 58332.120000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 64233.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 73045.820000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002008;
		fall_capacitance	: 0.001879;
		rise_capacitance	: 0.002137;
		fall_capacitance_range		(0.001569, 0.002509);
		rise_capacitance_range		(0.001717, 0.002728);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000069,0.000051,0.000038,0.000029,0.000023,0.000019,0.000016,0.000011");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000073,0.000057,0.000044,0.000033,0.000026,0.000021,0.000017,0.000012");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000023,0.000014,0.000007,0.000003,-0.000001,-0.000006,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A2 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000073,0.000057,0.000044,0.000033,0.000026,0.000021,0.000017,0.000012");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000015,0.000008,0.000004,0.000000,-0.000003,-0.000009,-0.000020");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002165;
		fall_capacitance	: 0.002002;
		rise_capacitance	: 0.002327;
		fall_capacitance_range		(0.001703, 0.002537);
		rise_capacitance_range		(0.001871, 0.002817);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000005,0.000003,0.000001,-0.000002,-0.000007,-0.000016");
			}

		}

		internal_power () {

			when      	: "!A1 & B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000091,0.000068,0.000050,0.000036,0.000026,0.000017,0.000010,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000091,0.000068,0.000050,0.000036,0.000026,0.000017,0.000010,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000005,0.000002,-0.000000,-0.000004,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000087,0.000063,0.000045,0.000032,0.000023,0.000016,0.000009,-0.000001");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001995;
		fall_capacitance	: 0.001960;
		rise_capacitance	: 0.002029;
		fall_capacitance_range		(0.001574, 0.002382);
		rise_capacitance_range		(0.001716, 0.002522);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000035,0.000027,0.000023,0.000020,0.000017,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000117,0.000085,0.000059,0.000041,0.000029,0.000021,0.000012,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000029,0.000016,0.000008,0.000003,-0.000001,-0.000007,-0.000015");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000035,0.000027,0.000023,0.000020,0.000017,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000035,0.000027,0.000023,0.000020,0.000017,0.000015,0.000011");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002169;
		fall_capacitance	: 0.002090;
		rise_capacitance	: 0.002247;
		fall_capacitance_range		(0.001740, 0.002411);
		rise_capacitance_range		(0.001886, 0.002611);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000101,0.000077,0.000055,0.000039,0.000028,0.000020,0.000012,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000069,0.000048,0.000035,0.000027,0.000020,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000016,0.000009,0.000004,0.000001,-0.000002,-0.000007,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000069,0.000048,0.000035,0.000027,0.000020,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000069,0.000048,0.000035,0.000027,0.000020,0.000015,0.000008,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) | (B1 & B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015414,0.020183,0.025562,0.036229,0.057520,0.099907", \
				        "0.018574,0.023222,0.028611,0.039239,0.060518,0.102924", \
				        "0.022958,0.028860,0.034898,0.045476,0.066634,0.108866", \
				        "0.027064,0.035022,0.042937,0.056740,0.079205,0.121227", \
				        "0.029368,0.039954,0.050529,0.068977,0.099317,0.146947", \
				        "0.026055,0.040217,0.054363,0.078908,0.119413,0.183683", \
				        "0.008938,0.027990,0.046782,0.079504,0.133404,0.219055", \
				        "-0.037654,-0.013224,0.011678,0.054946,0.126709,0.240884");
			}
			cell_rise(Timing_X4) {
				values ("0.024248,0.032802,0.042570,0.061701,0.099723,0.175583", \
				        "0.027744,0.036151,0.045797,0.064932,0.103036,0.178896", \
				        "0.035570,0.043681,0.053071,0.072018,0.109904,0.185668", \
				        "0.047531,0.058004,0.068597,0.087081,0.124428,0.199723", \
				        "0.064391,0.077934,0.091764,0.115758,0.155345,0.229374", \
				        "0.090292,0.107273,0.124819,0.155818,0.208088,0.291738", \
				        "0.131494,0.153296,0.175392,0.214592,0.281378,0.391403", \
				        "0.200704,0.228210,0.256588,0.306404,0.391074,0.531166");
			}
			fall_transition(Timing_X4) {
				values ("0.009663,0.013769,0.018344,0.027495,0.045936,0.082684", \
				        "0.010291,0.013866,0.018300,0.027488,0.045904,0.082754", \
				        "0.013878,0.017027,0.020315,0.027986,0.045906,0.082758", \
				        "0.020154,0.023863,0.027860,0.034377,0.047907,0.082773", \
				        "0.030896,0.035516,0.040437,0.048627,0.062589,0.088684", \
				        "0.049541,0.055459,0.061563,0.071967,0.089769,0.119129", \
				        "0.082571,0.090424,0.098372,0.111964,0.134565,0.171737", \
				        "0.143266,0.153315,0.163819,0.181899,0.211738,0.259310");
			}
			rise_transition(Timing_X4) {
				values ("0.019489,0.027560,0.036722,0.054263,0.089488,0.160063", \
				        "0.019188,0.027356,0.036564,0.054170,0.089487,0.160029", \
				        "0.020886,0.027686,0.036291,0.054241,0.089492,0.160041", \
				        "0.027794,0.033844,0.040432,0.055055,0.089493,0.160052", \
				        "0.038380,0.046040,0.053917,0.067262,0.093800,0.160050", \
				        "0.055594,0.064761,0.074565,0.091952,0.120915,0.172317", \
				        "0.086116,0.096855,0.108400,0.129288,0.166401,0.227502", \
				        "0.144350,0.155889,0.169009,0.193385,0.237626,0.314760");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015368,0.020178,0.025540,0.036238,0.057548,0.099954", \
				        "0.018585,0.023235,0.028613,0.039286,0.060573,0.103000", \
				        "0.023067,0.028937,0.034945,0.045535,0.066740,0.108980", \
				        "0.027169,0.035129,0.043011,0.056830,0.079297,0.121333", \
				        "0.028988,0.039717,0.050367,0.068927,0.099340,0.147003", \
				        "0.023860,0.038409,0.052902,0.077925,0.118891,0.183467", \
				        "0.001971,0.021881,0.041388,0.075262,0.130483,0.217449", \
				        "-0.055661,-0.029766,-0.003526,0.041703,0.116318,0.233888");
			}
			cell_rise(Timing_X4) {
				values ("0.028890,0.040685,0.054123,0.080439,0.132598,0.236557", \
				        "0.032208,0.043820,0.057121,0.083429,0.135667,0.239647", \
				        "0.040037,0.050893,0.063876,0.089951,0.142015,0.245893", \
				        "0.054336,0.066553,0.079035,0.104121,0.155558,0.258888", \
				        "0.074473,0.090180,0.106327,0.134556,0.184687,0.286596", \
				        "0.105648,0.124986,0.145261,0.181492,0.243102,0.345670", \
				        "0.155557,0.180394,0.205469,0.250588,0.328536,0.458322", \
				        "0.241365,0.272124,0.304056,0.360328,0.457395,0.620767");
			}
			fall_transition(Timing_X4) {
				values ("0.009671,0.013823,0.018348,0.027532,0.045964,0.082695", \
				        "0.010228,0.013841,0.018344,0.027509,0.045902,0.082671", \
				        "0.013804,0.016959,0.020173,0.027947,0.045934,0.082762", \
				        "0.020089,0.023787,0.027705,0.034310,0.047930,0.082779", \
				        "0.031053,0.035638,0.040511,0.048652,0.062572,0.088665", \
				        "0.050095,0.056016,0.062152,0.072451,0.090072,0.119239", \
				        "0.083692,0.091725,0.099777,0.113423,0.135874,0.172675", \
				        "0.144649,0.155334,0.166191,0.184835,0.214923,0.262379");
			}
			rise_transition(Timing_X4) {
				values ("0.027545,0.038868,0.051282,0.075099,0.122667,0.217724", \
				        "0.026951,0.038567,0.051204,0.075032,0.122674,0.217725", \
				        "0.027069,0.037589,0.050643,0.075004,0.122635,0.217752", \
				        "0.032836,0.040991,0.051358,0.074303,0.122640,0.217748", \
				        "0.043714,0.053135,0.063230,0.081214,0.122981,0.217730", \
				        "0.060847,0.072078,0.084164,0.105640,0.142398,0.221016", \
				        "0.091098,0.103695,0.117593,0.143243,0.189052,0.265434", \
				        "0.147473,0.161326,0.176989,0.206242,0.260180,0.355167");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015610,0.020425,0.025772,0.036500,0.057872,0.100440", \
				        "0.018801,0.023444,0.028848,0.039536,0.060897,0.103487", \
				        "0.023388,0.029304,0.035254,0.045809,0.067035,0.109428", \
				        "0.027657,0.035676,0.043567,0.057260,0.079634,0.121843", \
				        "0.029754,0.040550,0.051183,0.069641,0.099951,0.147489", \
				        "0.025285,0.039782,0.054259,0.079090,0.119878,0.184275", \
				        "0.004996,0.024491,0.043934,0.077381,0.132223,0.218879", \
				        "-0.048190,-0.023641,0.001797,0.046098,0.119833,0.236654");
			}
			cell_rise(Timing_X4) {
				values ("0.042666,0.054491,0.067939,0.094336,0.146722,0.250793", \
				        "0.045798,0.057579,0.070921,0.097372,0.149774,0.253896", \
				        "0.052695,0.064301,0.077580,0.103826,0.156084,0.260107", \
				        "0.068394,0.079282,0.092029,0.117786,0.169494,0.273073", \
				        "0.092705,0.106888,0.121636,0.148049,0.198392,0.300636", \
				        "0.128519,0.146113,0.164987,0.199051,0.258064,0.359353", \
				        "0.184223,0.206662,0.229941,0.272791,0.347811,0.474162", \
				        "0.277548,0.305650,0.334883,0.388054,0.481328,0.640968");
			}
			fall_transition(Timing_X4) {
				values ("0.012891,0.017637,0.022739,0.032552,0.051320,0.088119", \
				        "0.013331,0.017637,0.022720,0.032580,0.051306,0.088120", \
				        "0.017893,0.020905,0.024532,0.032997,0.051326,0.088113", \
				        "0.027299,0.029960,0.033382,0.039436,0.053339,0.088119", \
				        "0.042725,0.045539,0.049179,0.055898,0.068503,0.094014", \
				        "0.067705,0.071004,0.075112,0.083040,0.098314,0.125500", \
				        "0.110294,0.114109,0.119058,0.128947,0.147749,0.181501", \
				        "0.183339,0.188557,0.195026,0.208108,0.232461,0.275073");
			}
			rise_transition(Timing_X4) {
				values ("0.035763,0.046734,0.059124,0.083016,0.130805,0.226191", \
				        "0.035600,0.046660,0.059071,0.083075,0.130799,0.226189", \
				        "0.034701,0.046182,0.058892,0.082992,0.130805,0.226158", \
				        "0.037119,0.046744,0.058386,0.082636,0.130789,0.226194", \
				        "0.048314,0.057610,0.067297,0.086622,0.130595,0.226176", \
				        "0.065771,0.077136,0.089158,0.110403,0.147051,0.228309", \
				        "0.095005,0.108577,0.122841,0.148829,0.194315,0.269945", \
				        "0.148911,0.164394,0.181252,0.211510,0.266161,0.361032");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019624,0.024382,0.029772,0.040433,0.061751,0.104194", \
				        "0.022197,0.026964,0.032369,0.043024,0.064390,0.106909", \
				        "0.026154,0.031543,0.037158,0.047955,0.069338,0.111983", \
				        "0.030770,0.037539,0.044435,0.056758,0.079178,0.121952", \
				        "0.034017,0.043344,0.052559,0.068480,0.095256,0.141272", \
				        "0.031927,0.044913,0.057695,0.079545,0.115134,0.171493", \
				        "0.016761,0.034644,0.052390,0.082667,0.131572,0.207327", \
				        "-0.028864,-0.003991,0.020373,0.062077,0.129642,0.234151");
			}
			cell_rise(Timing_X4) {
				values ("0.033336,0.041897,0.051644,0.070866,0.109029,0.184957", \
				        "0.036782,0.045285,0.054983,0.074215,0.112330,0.188252", \
				        "0.044268,0.052654,0.062209,0.081314,0.119265,0.195105", \
				        "0.059164,0.068309,0.077815,0.096364,0.133879,0.209265", \
				        "0.080181,0.092191,0.104661,0.126863,0.164836,0.239022", \
				        "0.111393,0.126607,0.142581,0.171411,0.220984,0.301675", \
				        "0.161498,0.180549,0.200490,0.236878,0.300176,0.406134", \
				        "0.245678,0.270004,0.295414,0.340938,0.420148,0.554375");
			}
			fall_transition(Timing_X4) {
				values ("0.009673,0.013790,0.018341,0.027501,0.045956,0.082758", \
				        "0.009830,0.013862,0.018375,0.027520,0.045909,0.082734", \
				        "0.011587,0.015083,0.019090,0.027712,0.045919,0.082726", \
				        "0.015744,0.019197,0.023043,0.030632,0.046914,0.082769", \
				        "0.023959,0.027661,0.031550,0.039122,0.054033,0.085552", \
				        "0.038596,0.042990,0.047802,0.056110,0.071190,0.100859", \
				        "0.063235,0.069079,0.075256,0.085967,0.104070,0.135308", \
				        "0.104853,0.113025,0.121421,0.136302,0.160587,0.199303");
			}
			rise_transition(Timing_X4) {
				values ("0.025124,0.033059,0.042222,0.060008,0.095417,0.166139", \
				        "0.025053,0.033063,0.042148,0.059904,0.095434,0.166163", \
				        "0.025071,0.032811,0.042049,0.059921,0.095362,0.166159", \
				        "0.030425,0.036414,0.043942,0.060201,0.095412,0.166162", \
				        "0.041311,0.048836,0.056616,0.069846,0.098256,0.166176", \
				        "0.057207,0.067013,0.077149,0.094661,0.123465,0.176347", \
				        "0.082273,0.094718,0.107553,0.130201,0.168543,0.229836", \
				        "0.126844,0.142091,0.157973,0.186046,0.234379,0.314952");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019578,0.024374,0.029723,0.040424,0.061763,0.104243", \
				        "0.022197,0.026953,0.032346,0.043050,0.064435,0.106962", \
				        "0.026211,0.031601,0.037214,0.048021,0.069416,0.112069", \
				        "0.030958,0.037691,0.044583,0.056882,0.079291,0.122072", \
				        "0.034162,0.043506,0.052722,0.068639,0.095394,0.141399", \
				        "0.031168,0.044327,0.057258,0.079310,0.115079,0.171537", \
				        "0.012551,0.031018,0.049251,0.080316,0.130120,0.206633", \
				        "-0.041556,-0.015496,0.009851,0.053228,0.122962,0.229886");
			}
			cell_rise(Timing_X4) {
				values ("0.041807,0.053562,0.066939,0.093287,0.145566,0.249621", \
				        "0.045009,0.056732,0.070055,0.096383,0.148659,0.252693", \
				        "0.052121,0.063667,0.076819,0.103024,0.155139,0.259068", \
				        "0.068088,0.078939,0.091591,0.117248,0.168797,0.272205", \
				        "0.092923,0.106955,0.121601,0.147896,0.198064,0.300083", \
				        "0.129811,0.147337,0.165962,0.199786,0.258397,0.359339", \
				        "0.188548,0.210615,0.233545,0.275868,0.350102,0.475478", \
				        "0.288831,0.316177,0.345154,0.397205,0.488914,0.646509");
			}
			fall_transition(Timing_X4) {
				values ("0.009648,0.013808,0.018373,0.027507,0.045964,0.082708", \
				        "0.009809,0.013792,0.018380,0.027534,0.045921,0.082735", \
				        "0.011538,0.015063,0.019068,0.027715,0.045925,0.082732", \
				        "0.015681,0.019136,0.022935,0.030595,0.046907,0.082775", \
				        "0.023927,0.027623,0.031517,0.039069,0.053994,0.085539", \
				        "0.038637,0.043105,0.047905,0.056200,0.071229,0.100848", \
				        "0.063702,0.069579,0.075797,0.086513,0.104596,0.135636", \
				        "0.105589,0.114078,0.122575,0.137651,0.162000,0.200687");
			}
			rise_transition(Timing_X4) {
				values ("0.035731,0.046673,0.059029,0.083074,0.130825,0.226211", \
				        "0.035542,0.046559,0.059007,0.083075,0.130804,0.226222", \
				        "0.034679,0.046145,0.058716,0.082998,0.130783,0.226234", \
				        "0.037185,0.046745,0.058418,0.082671,0.130839,0.226237", \
				        "0.048097,0.057400,0.067130,0.086674,0.130633,0.226252", \
				        "0.064525,0.076265,0.088389,0.109965,0.146902,0.228365", \
				        "0.089580,0.104277,0.119498,0.146606,0.193089,0.269330", \
				        "0.133639,0.151131,0.169571,0.202534,0.260416,0.357992");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019826,0.024615,0.029973,0.040737,0.062122,0.104727", \
				        "0.022416,0.027230,0.032557,0.043334,0.064758,0.107472", \
				        "0.026488,0.031882,0.037475,0.048315,0.069797,0.112571", \
				        "0.031324,0.038094,0.044879,0.057197,0.079619,0.122580", \
				        "0.034728,0.044075,0.053245,0.069106,0.095805,0.141924", \
				        "0.032112,0.045267,0.058207,0.080144,0.115741,0.172185", \
				        "0.014409,0.032704,0.050972,0.081764,0.131339,0.207620", \
				        "-0.037511,-0.012085,0.012927,0.055959,0.125179,0.231696");
			}
			cell_rise(Timing_X4) {
				values ("0.055650,0.067468,0.080830,0.107274,0.159695,0.263859", \
				        "0.058844,0.070627,0.083945,0.110392,0.162787,0.266926", \
				        "0.065670,0.077389,0.090618,0.116977,0.169236,0.273282", \
				        "0.080788,0.092054,0.105013,0.131003,0.182775,0.286391", \
				        "0.109220,0.122203,0.135841,0.160980,0.211764,0.314108", \
				        "0.150620,0.166777,0.184298,0.216382,0.272770,0.373054", \
				        "0.214362,0.234844,0.256371,0.296816,0.368628,0.490866", \
				        "0.321018,0.346470,0.373457,0.423202,0.511885,0.666114");
			}
			fall_transition(Timing_X4) {
				values ("0.012897,0.017567,0.022741,0.032539,0.051301,0.088145", \
				        "0.013024,0.017569,0.022727,0.032555,0.051302,0.088115", \
				        "0.015132,0.018953,0.023427,0.032704,0.051323,0.088130", \
				        "0.020805,0.023995,0.027936,0.035628,0.052254,0.088116", \
				        "0.032171,0.034760,0.038047,0.045075,0.059598,0.090980", \
				        "0.051380,0.054040,0.057445,0.064241,0.077886,0.106590", \
				        "0.082951,0.086131,0.090178,0.098199,0.113654,0.142690", \
				        "0.134695,0.138952,0.144376,0.155273,0.175381,0.210547");
			}
			rise_transition(Timing_X4) {
				values ("0.043340,0.054300,0.066760,0.090945,0.138955,0.234675", \
				        "0.043308,0.054292,0.066733,0.091008,0.138994,0.234690", \
				        "0.043031,0.054158,0.066722,0.090999,0.138952,0.234694", \
				        "0.043150,0.053593,0.066078,0.090898,0.138965,0.234664", \
				        "0.052917,0.061872,0.071868,0.092798,0.138590,0.234696", \
				        "0.070591,0.081900,0.093760,0.114730,0.151980,0.235899", \
				        "0.096646,0.111192,0.126125,0.152827,0.198544,0.274104", \
				        "0.141033,0.158309,0.176926,0.209668,0.267232,0.364085");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.026812,0.032096,0.037931,0.049324,0.071420,0.114672", \
				        "0.029770,0.034968,0.040890,0.052252,0.074329,0.117579", \
				        "0.036279,0.041268,0.047039,0.058337,0.080331,0.123465", \
				        "0.046110,0.052510,0.058985,0.070967,0.092734,0.135721", \
				        "0.055867,0.064348,0.073133,0.089125,0.116481,0.161248", \
				        "0.062395,0.073733,0.085506,0.106687,0.143238,0.203168", \
				        "0.059570,0.074261,0.089751,0.117812,0.166223,0.246115", \
				        "0.033026,0.052819,0.072918,0.109915,0.173615,0.279018");
			}
			cell_rise(Timing_X4) {
				values ("0.047577,0.056848,0.067257,0.087770,0.128407,0.209203", \
				        "0.051223,0.060406,0.070912,0.091498,0.132131,0.213026", \
				        "0.058412,0.067664,0.078017,0.098555,0.139320,0.220290", \
				        "0.071520,0.081300,0.091698,0.112324,0.153069,0.234126", \
				        "0.089073,0.102010,0.115183,0.138687,0.180196,0.261201", \
				        "0.113972,0.130567,0.147778,0.178039,0.229801,0.316407", \
				        "0.157352,0.178115,0.199822,0.238299,0.303855,0.412380", \
				        "0.231395,0.259347,0.286990,0.336469,0.419748,0.556823");
			}
			fall_transition(Timing_X4) {
				values ("0.018204,0.022454,0.027070,0.036315,0.054756,0.091663", \
				        "0.018069,0.022406,0.027061,0.036271,0.054755,0.091680", \
				        "0.018576,0.022506,0.027054,0.036211,0.054715,0.091658", \
				        "0.024784,0.028374,0.032140,0.038993,0.055155,0.091690", \
				        "0.035703,0.040214,0.044924,0.052905,0.066610,0.094928", \
				        "0.053459,0.059514,0.065706,0.076277,0.094047,0.123062", \
				        "0.083665,0.091742,0.100157,0.114385,0.137912,0.175893", \
				        "0.135143,0.147095,0.158891,0.178626,0.210544,0.260705");
			}
			rise_transition(Timing_X4) {
				values ("0.024700,0.032738,0.041994,0.060381,0.096709,0.169343", \
				        "0.024724,0.032812,0.042218,0.060257,0.096681,0.169352", \
				        "0.024788,0.032832,0.042216,0.060400,0.096757,0.169317", \
				        "0.027516,0.034319,0.042730,0.060373,0.096670,0.169359", \
				        "0.038400,0.044935,0.052430,0.066156,0.097876,0.169325", \
				        "0.056940,0.063916,0.072130,0.087333,0.116006,0.174873", \
				        "0.086854,0.094551,0.103591,0.120965,0.153856,0.213956", \
				        "0.136615,0.144814,0.154917,0.174977,0.213172,0.283150");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022877,0.028482,0.034626,0.046351,0.068831,0.112429", \
				        "0.025971,0.031442,0.037569,0.049272,0.071735,0.115342", \
				        "0.032900,0.038062,0.043876,0.055392,0.077723,0.121177", \
				        "0.041865,0.048771,0.055698,0.068124,0.090131,0.133395", \
				        "0.050386,0.059445,0.068666,0.085495,0.113526,0.158894", \
				        "0.054789,0.066919,0.079221,0.101414,0.139054,0.200030", \
				        "0.048676,0.064081,0.080395,0.109660,0.159623,0.241207", \
				        "0.016052,0.036776,0.057910,0.096390,0.162170,0.270154");
			}
			cell_rise(Timing_X4) {
				values ("0.055743,0.067611,0.081027,0.107246,0.159399,0.263356", \
				        "0.059311,0.071112,0.084554,0.110873,0.163132,0.267135", \
				        "0.066190,0.078027,0.091320,0.117642,0.170051,0.274167", \
				        "0.078450,0.090514,0.103878,0.130155,0.182554,0.286771", \
				        "0.095474,0.110178,0.125589,0.153570,0.205851,0.309993", \
				        "0.120375,0.138346,0.157188,0.191010,0.250867,0.356933", \
				        "0.164857,0.186853,0.209936,0.251146,0.322788,0.446436", \
				        "0.242572,0.271914,0.300826,0.352809,0.440822,0.588904");
			}
			fall_transition(Timing_X4) {
				values ("0.017561,0.021966,0.026585,0.035844,0.054273,0.091040", \
				        "0.016963,0.021579,0.026438,0.035817,0.054243,0.091039", \
				        "0.018279,0.021962,0.026553,0.035494,0.054209,0.090990", \
				        "0.025008,0.028509,0.032288,0.038876,0.054584,0.090963", \
				        "0.036332,0.040724,0.045327,0.053085,0.066594,0.094422", \
				        "0.054829,0.060724,0.066768,0.077022,0.094335,0.123065", \
				        "0.086195,0.094270,0.102488,0.116241,0.139174,0.176454", \
				        "0.140216,0.152043,0.163603,0.182900,0.214004,0.263060");
			}
			rise_transition(Timing_X4) {
				values ("0.028728,0.039213,0.051378,0.075095,0.122670,0.217753", \
				        "0.028738,0.039219,0.051347,0.075058,0.122677,0.217744", \
				        "0.028781,0.039206,0.051360,0.075043,0.122646,0.217747", \
				        "0.030518,0.039927,0.051589,0.075128,0.122646,0.217746", \
				        "0.039507,0.048333,0.058422,0.078365,0.122844,0.217751", \
				        "0.055758,0.064879,0.075559,0.095917,0.135186,0.219986", \
				        "0.083915,0.093385,0.104481,0.125986,0.168205,0.249133", \
				        "0.131684,0.141722,0.153732,0.177305,0.222754,0.310073");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023179,0.028914,0.034990,0.046729,0.069284,0.112982", \
				        "0.026300,0.031821,0.037929,0.049644,0.072149,0.115845", \
				        "0.033218,0.038360,0.044228,0.055763,0.078164,0.121703", \
				        "0.042342,0.049257,0.056263,0.068641,0.090530,0.133921", \
				        "0.051133,0.060220,0.069581,0.086189,0.114139,0.159388", \
				        "0.056136,0.068227,0.080639,0.102593,0.140062,0.200866", \
				        "0.051229,0.066430,0.082800,0.111703,0.161326,0.242630", \
				        "0.021683,0.041728,0.062533,0.100328,0.165407,0.272829");
			}
			cell_rise(Timing_X4) {
				values ("0.069511,0.081359,0.094785,0.121152,0.173504,0.277593", \
				        "0.073118,0.084931,0.098332,0.124812,0.177227,0.281382", \
				        "0.080023,0.091892,0.105165,0.131683,0.184176,0.288435", \
				        "0.092458,0.104335,0.117699,0.144173,0.196663,0.301069", \
				        "0.112590,0.126158,0.140668,0.167631,0.219984,0.324272", \
				        "0.141720,0.158175,0.175673,0.207865,0.266063,0.371164", \
				        "0.191410,0.211136,0.232571,0.271520,0.340875,0.462258", \
				        "0.276776,0.302935,0.329374,0.378279,0.462784,0.607657");
			}
			fall_transition(Timing_X4) {
				values ("0.023896,0.027877,0.032524,0.041764,0.060005,0.096592", \
				        "0.023271,0.027535,0.032397,0.041692,0.060000,0.096571", \
				        "0.024286,0.027857,0.032187,0.041411,0.059940,0.096543", \
				        "0.032251,0.034842,0.038144,0.044649,0.060322,0.096548", \
				        "0.046941,0.049898,0.053529,0.060079,0.072437,0.099979", \
				        "0.070016,0.074039,0.078544,0.086914,0.102219,0.129195", \
				        "0.107869,0.113396,0.119435,0.130396,0.150373,0.184984", \
				        "0.172164,0.179871,0.188348,0.203567,0.230169,0.275193");
			}
			rise_transition(Timing_X4) {
				values ("0.036021,0.046791,0.059071,0.083072,0.130783,0.226212", \
				        "0.036027,0.046785,0.059014,0.082970,0.130837,0.226254", \
				        "0.036030,0.046750,0.059131,0.083024,0.130831,0.226247", \
				        "0.036528,0.046904,0.059210,0.082982,0.130820,0.226253", \
				        "0.044179,0.053297,0.063579,0.084955,0.130884,0.226237", \
				        "0.059567,0.069318,0.080371,0.101253,0.141004,0.227790", \
				        "0.086354,0.096838,0.108556,0.130942,0.173862,0.255161", \
				        "0.132111,0.144010,0.156972,0.181610,0.228113,0.316265");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031080,0.036351,0.042180,0.053565,0.075677,0.118981", \
				        "0.033671,0.038937,0.044809,0.056147,0.078301,0.121672", \
				        "0.038617,0.043928,0.049737,0.061079,0.083285,0.126691", \
				        "0.046687,0.052585,0.058907,0.070822,0.093126,0.136597", \
				        "0.056591,0.063988,0.071660,0.085830,0.110992,0.156082", \
				        "0.064277,0.074392,0.084694,0.103433,0.135457,0.188903", \
				        "0.063163,0.076727,0.091058,0.116574,0.159967,0.230380", \
				        "0.038634,0.057661,0.076900,0.111754,0.171147,0.267111");
			}
			cell_rise(Timing_X4) {
				values ("0.057550,0.066699,0.077105,0.097654,0.138305,0.219166", \
				        "0.061394,0.070552,0.080848,0.101385,0.142124,0.223043", \
				        "0.068721,0.077982,0.088295,0.108749,0.149466,0.230430", \
				        "0.082477,0.091778,0.102219,0.122701,0.163448,0.244421", \
				        "0.103677,0.115289,0.127495,0.149751,0.190700,0.271701", \
				        "0.133402,0.148319,0.164141,0.192500,0.242226,0.327048", \
				        "0.184600,0.203046,0.222648,0.258403,0.320832,0.426132", \
				        "0.273011,0.297556,0.322192,0.367433,0.445554,0.577190");
			}
			fall_transition(Timing_X4) {
				values ("0.018208,0.022449,0.027060,0.036296,0.054760,0.091663", \
				        "0.018140,0.022418,0.027074,0.036270,0.054755,0.091681", \
				        "0.018287,0.022449,0.026951,0.036258,0.054723,0.091633", \
				        "0.021049,0.024868,0.029271,0.037441,0.055001,0.091693", \
				        "0.028237,0.032145,0.036424,0.044480,0.060335,0.093378", \
				        "0.041891,0.046475,0.051385,0.060098,0.075841,0.106780", \
				        "0.064672,0.070902,0.077398,0.088487,0.107341,0.139625", \
				        "0.102371,0.111295,0.120290,0.135866,0.161128,0.201330");
			}
			rise_transition(Timing_X4) {
				values ("0.030332,0.038535,0.047922,0.066368,0.102790,0.175665", \
				        "0.030329,0.038536,0.048001,0.066397,0.102876,0.175639", \
				        "0.030343,0.038549,0.047979,0.066281,0.102873,0.175658", \
				        "0.031470,0.039019,0.048108,0.066301,0.102810,0.175694", \
				        "0.041255,0.047953,0.055427,0.070220,0.103438,0.175686", \
				        "0.058828,0.066445,0.075010,0.090665,0.119445,0.180100", \
				        "0.084708,0.094011,0.104195,0.122976,0.156973,0.217597", \
				        "0.124939,0.136279,0.148572,0.171509,0.212714,0.285318");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027148,0.032729,0.038860,0.050606,0.073116,0.116753", \
				        "0.029799,0.035308,0.041400,0.053191,0.075710,0.119384", \
				        "0.034898,0.040478,0.046471,0.058140,0.080648,0.124408", \
				        "0.042799,0.048987,0.055642,0.067874,0.090538,0.134285", \
				        "0.051643,0.059630,0.067702,0.082417,0.108186,0.153726", \
				        "0.057503,0.068303,0.079343,0.098857,0.131853,0.186139", \
				        "0.052730,0.067415,0.082615,0.109427,0.154484,0.226389", \
				        "0.022701,0.042429,0.062903,0.099530,0.161213,0.259832");
			}
			cell_rise(Timing_X4) {
				values ("0.068753,0.080472,0.093813,0.120102,0.172345,0.276328", \
				        "0.072552,0.084286,0.097508,0.123879,0.176170,0.280168", \
				        "0.079648,0.091467,0.104647,0.130985,0.183299,0.287364", \
				        "0.092203,0.104059,0.117414,0.143736,0.196035,0.300183", \
				        "0.112227,0.125751,0.140254,0.167282,0.219532,0.323624", \
				        "0.141471,0.157773,0.175365,0.207565,0.265699,0.370697", \
				        "0.193408,0.213047,0.234023,0.272698,0.341563,0.462432", \
				        "0.285214,0.311007,0.336867,0.384673,0.467731,0.610915");
			}
			fall_transition(Timing_X4) {
				values ("0.017588,0.021939,0.026638,0.035897,0.054279,0.091035", \
				        "0.017362,0.021761,0.026581,0.035844,0.054249,0.091041", \
				        "0.017644,0.021803,0.026444,0.035688,0.054235,0.091022", \
				        "0.020809,0.024588,0.028997,0.037051,0.054457,0.090985", \
				        "0.028474,0.032243,0.036391,0.044315,0.059939,0.092804", \
				        "0.042654,0.047117,0.051933,0.060274,0.075880,0.106398", \
				        "0.066343,0.072471,0.078676,0.089557,0.107861,0.139726", \
				        "0.105814,0.114329,0.123161,0.138359,0.163005,0.202443");
			}
			rise_transition(Timing_X4) {
				values ("0.036027,0.046737,0.059005,0.083059,0.130757,0.226191", \
				        "0.036014,0.046733,0.059022,0.082938,0.130804,0.226191", \
				        "0.036025,0.046746,0.059019,0.082942,0.130805,0.226178", \
				        "0.036554,0.046920,0.059084,0.083000,0.130779,0.226195", \
				        "0.044195,0.053284,0.063566,0.085024,0.130857,0.226173", \
				        "0.059267,0.069156,0.080251,0.101213,0.141016,0.227764", \
				        "0.083096,0.094332,0.106652,0.129808,0.173377,0.254964", \
				        "0.121315,0.134553,0.148812,0.175352,0.224182,0.314526");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027474,0.033089,0.039207,0.050951,0.073529,0.117314", \
				        "0.030113,0.035718,0.041843,0.053509,0.076113,0.119907", \
				        "0.035223,0.040763,0.046801,0.058407,0.081017,0.124865", \
				        "0.043170,0.049402,0.056013,0.068213,0.090930,0.134875", \
				        "0.052213,0.060206,0.068347,0.082942,0.108671,0.154217", \
				        "0.058408,0.069192,0.080250,0.099733,0.132584,0.186799", \
				        "0.054283,0.068998,0.084238,0.110856,0.155622,0.227370", \
				        "0.025897,0.045390,0.065764,0.102087,0.163340,0.261597");
			}
			cell_rise(Timing_X4) {
				values ("0.082584,0.094292,0.107699,0.134078,0.186447,0.290563", \
				        "0.086401,0.098119,0.111419,0.137779,0.190267,0.294414", \
				        "0.093527,0.105329,0.118536,0.144959,0.197421,0.301613", \
				        "0.106094,0.117934,0.131369,0.157744,0.210177,0.314451", \
				        "0.128088,0.140877,0.154791,0.181252,0.233675,0.337925", \
				        "0.161026,0.176240,0.192937,0.223829,0.280560,0.384932", \
				        "0.217203,0.235260,0.255157,0.292107,0.359146,0.478018", \
				        "0.315147,0.338890,0.362894,0.408382,0.488759,0.629211");
			}
			fall_transition(Timing_X4) {
				values ("0.023925,0.027871,0.032542,0.041762,0.060018,0.096546", \
				        "0.023688,0.027684,0.032431,0.041731,0.060006,0.096557", \
				        "0.023841,0.027721,0.032342,0.041585,0.059971,0.096575", \
				        "0.027413,0.030713,0.034864,0.042854,0.060208,0.096541", \
				        "0.036632,0.039493,0.043180,0.050595,0.065725,0.098337", \
				        "0.053992,0.057123,0.060898,0.068063,0.082512,0.112177", \
				        "0.082661,0.086886,0.091537,0.100351,0.116494,0.146664", \
				        "0.129329,0.135255,0.141948,0.154078,0.175448,0.211930");
			}
			rise_transition(Timing_X4) {
				values ("0.043444,0.054282,0.066751,0.091000,0.138993,0.234695", \
				        "0.043438,0.054282,0.066779,0.090940,0.138960,0.234661", \
				        "0.043446,0.054286,0.066782,0.090924,0.138994,0.234675", \
				        "0.043548,0.054339,0.066749,0.090961,0.138993,0.234682", \
				        "0.049341,0.058561,0.069498,0.091956,0.138980,0.234668", \
				        "0.064293,0.074334,0.085593,0.106690,0.147208,0.235709", \
				        "0.088123,0.099547,0.112048,0.135532,0.179264,0.261004", \
				        "0.126363,0.139962,0.154340,0.181200,0.230345,0.320971");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & !B2";

			rise_power(Power_X4) {
				values ("0.005971,0.007687,0.009636,0.013550,0.021336,0.036833", \
				        "0.005960,0.007667,0.009613,0.013534,0.021311,0.036827", \
				        "0.006101,0.007780,0.009709,0.013579,0.021321,0.036817", \
				        "0.006571,0.008201,0.010078,0.013866,0.021505,0.036916", \
				        "0.007747,0.009263,0.011057,0.014714,0.022180,0.037406", \
				        "0.010514,0.011804,0.013438,0.016857,0.024044,0.038870", \
				        "0.016690,0.017688,0.018997,0.021937,0.028559,0.042732", \
				        "0.029904,0.030542,0.031467,0.033682,0.039140,0.052006");
			}
			fall_power(Power_X4) {
				values ("0.002288,0.000610,-0.001312,-0.005162,-0.012880,-0.028355", \
				        "0.002287,0.000626,-0.001298,-0.005145,-0.012856,-0.028332", \
				        "0.002372,0.000693,-0.001235,-0.005107,-0.012835,-0.028285", \
				        "0.002736,0.000959,-0.000994,-0.004933,-0.012686,-0.028218", \
				        "0.003879,0.001883,-0.000236,-0.004341,-0.012311,-0.027967", \
				        "0.006707,0.004436,0.002023,-0.002493,-0.010941,-0.027038", \
				        "0.012971,0.010464,0.007725,0.002591,-0.006846,-0.024055", \
				        "0.026290,0.023487,0.020427,0.014623,0.003913,-0.015419");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & !B1 & B2";

			rise_power(Power_X4) {
				values ("0.005668,0.007394,0.009364,0.013263,0.021034,0.036545", \
				        "0.005683,0.007392,0.009352,0.013240,0.021013,0.036542", \
				        "0.005805,0.007497,0.009426,0.013284,0.021031,0.036546", \
				        "0.006232,0.007855,0.009745,0.013539,0.021188,0.036630", \
				        "0.007298,0.008816,0.010627,0.014303,0.021804,0.037038", \
				        "0.009695,0.011049,0.012718,0.016212,0.023445,0.038352", \
				        "0.015114,0.016156,0.017548,0.020657,0.027428,0.041789", \
				        "0.026848,0.027516,0.028475,0.030861,0.036656,0.049969");
			}
			fall_power(Power_X4) {
				values ("0.002296,0.000631,-0.001284,-0.005156,-0.012875,-0.028334", \
				        "0.002330,0.000653,-0.001260,-0.005119,-0.012844,-0.028311", \
				        "0.002417,0.000751,-0.001193,-0.005061,-0.012790,-0.028262", \
				        "0.002791,0.001010,-0.000955,-0.004879,-0.012644,-0.028173", \
				        "0.003828,0.001870,-0.000245,-0.004343,-0.012283,-0.027933", \
				        "0.006393,0.004189,0.001833,-0.002646,-0.011005,-0.027077", \
				        "0.012024,0.009618,0.006977,0.001978,-0.007308,-0.024395", \
				        "0.023952,0.021300,0.018359,0.012786,0.002419,-0.016540");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "A2 & B1 & !B2";

			rise_power(Power_X4) {
				values ("0.008680,0.010426,0.012360,0.016258,0.024029,0.039543", \
				        "0.008706,0.010381,0.012347,0.016242,0.024021,0.039539", \
				        "0.008769,0.010470,0.012406,0.016270,0.024040,0.039553", \
				        "0.009132,0.010777,0.012682,0.016493,0.024173,0.039627", \
				        "0.010059,0.011648,0.013497,0.017211,0.024741,0.040033", \
				        "0.012256,0.013741,0.015468,0.019022,0.026343,0.041295", \
				        "0.017351,0.018567,0.020082,0.023329,0.030241,0.044669", \
				        "0.028771,0.029562,0.030665,0.033241,0.039257,0.052720");
			}
			fall_power(Power_X4) {
				values ("0.002305,0.000635,-0.001291,-0.005141,-0.012877,-0.028338", \
				        "0.002320,0.000665,-0.001260,-0.005111,-0.012834,-0.028306", \
				        "0.002420,0.000751,-0.001194,-0.005063,-0.012790,-0.028238", \
				        "0.002771,0.001010,-0.000957,-0.004879,-0.012645,-0.028170", \
				        "0.003747,0.001829,-0.000269,-0.004354,-0.012288,-0.027927", \
				        "0.006175,0.004053,0.001727,-0.002696,-0.011065,-0.027091", \
				        "0.011695,0.009334,0.006699,0.001817,-0.007380,-0.024402", \
				        "0.023424,0.020846,0.017878,0.012504,0.002227,-0.016620");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & !B2";

			rise_power(Power_X4) {
				values ("0.008851,0.010561,0.012505,0.016402,0.024148,0.039669", \
				        "0.008886,0.010553,0.012505,0.016387,0.024139,0.039655", \
				        "0.008995,0.010651,0.012594,0.016448,0.024180,0.039662", \
				        "0.009386,0.011052,0.012947,0.016737,0.024379,0.039804", \
				        "0.010545,0.012091,0.013909,0.017607,0.025075,0.040323", \
				        "0.013121,0.014572,0.016286,0.019792,0.027001,0.041837", \
				        "0.018799,0.020069,0.021618,0.024870,0.031641,0.045854", \
				        "0.030615,0.031753,0.033148,0.036047,0.042246,0.055469");
			}
			fall_power(Power_X4) {
				values ("0.002288,0.000591,-0.001324,-0.005183,-0.012904,-0.028376", \
				        "0.002218,0.000561,-0.001357,-0.005199,-0.012927,-0.028404", \
				        "0.002160,0.000514,-0.001403,-0.005249,-0.012974,-0.028463", \
				        "0.002262,0.000560,-0.001345,-0.005201,-0.012919,-0.028419", \
				        "0.002904,0.001082,-0.000952,-0.004916,-0.012724,-0.028255", \
				        "0.005068,0.002967,0.000672,-0.003676,-0.011897,-0.027734", \
				        "0.010349,0.007921,0.005298,0.000354,-0.008788,-0.025665", \
				        "0.021900,0.019146,0.016157,0.010544,0.000144,-0.018734");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & !B1 & B2";

			rise_power(Power_X4) {
				values ("0.008606,0.010279,0.012231,0.016108,0.023860,0.039354", \
				        "0.008574,0.010276,0.012223,0.016106,0.023851,0.039365", \
				        "0.008684,0.010372,0.012298,0.016161,0.023885,0.039361", \
				        "0.009115,0.010739,0.012634,0.016421,0.024075,0.039490", \
				        "0.010126,0.011667,0.013499,0.017190,0.024700,0.039947", \
				        "0.012370,0.013854,0.015592,0.019142,0.026394,0.041294", \
				        "0.017331,0.018691,0.020286,0.023596,0.030513,0.044861", \
				        "0.027882,0.029016,0.030466,0.033445,0.039794,0.053315");
			}
			fall_power(Power_X4) {
				values ("0.002271,0.000619,-0.001315,-0.005165,-0.012896,-0.028359", \
				        "0.002258,0.000588,-0.001339,-0.005180,-0.012901,-0.028376", \
				        "0.002215,0.000552,-0.001362,-0.005202,-0.012932,-0.028428", \
				        "0.002332,0.000615,-0.001293,-0.005155,-0.012860,-0.028371", \
				        "0.002990,0.001136,-0.000901,-0.004867,-0.012681,-0.028198", \
				        "0.004910,0.002858,0.000605,-0.003699,-0.011894,-0.027717", \
				        "0.009597,0.007278,0.004748,-0.000056,-0.009027,-0.025801", \
				        "0.019878,0.017274,0.014447,0.009038,-0.001011,-0.019508");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "A1 & B1 & !B2";

			rise_power(Power_X4) {
				values ("0.011554,0.013276,0.015197,0.019096,0.026859,0.042382", \
				        "0.011563,0.013268,0.015205,0.019087,0.026846,0.042373", \
				        "0.011661,0.013330,0.015271,0.019144,0.026883,0.042384", \
				        "0.011998,0.013655,0.015556,0.019374,0.027055,0.042489", \
				        "0.012926,0.014497,0.016373,0.020095,0.027655,0.042910", \
				        "0.015082,0.016595,0.018377,0.021968,0.029288,0.044260", \
				        "0.019920,0.021275,0.022927,0.026322,0.033311,0.047733", \
				        "0.030199,0.031427,0.032916,0.036004,0.042442,0.056108");
			}
			fall_power(Power_X4) {
				values ("0.002289,0.000622,-0.001300,-0.005160,-0.012884,-0.028354", \
				        "0.002251,0.000590,-0.001327,-0.005169,-0.012893,-0.028377", \
				        "0.002219,0.000567,-0.001356,-0.005194,-0.012916,-0.028417", \
				        "0.002318,0.000638,-0.001298,-0.005158,-0.012871,-0.028370", \
				        "0.002925,0.001101,-0.000927,-0.004867,-0.012675,-0.028219", \
				        "0.004770,0.002742,0.000521,-0.003743,-0.011906,-0.027716", \
				        "0.009326,0.007076,0.004573,-0.000180,-0.009102,-0.025808", \
				        "0.019519,0.016952,0.014154,0.008809,-0.001158,-0.019572");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & !A2 & B2";

			rise_power(Power_X4) {
				values ("0.008349,0.010100,0.012054,0.015967,0.023741,0.039256", \
				        "0.008285,0.010010,0.011964,0.015906,0.023669,0.039210", \
				        "0.008180,0.009895,0.011872,0.015804,0.023623,0.039161", \
				        "0.008079,0.009818,0.011781,0.015716,0.023527,0.039111", \
				        "0.008183,0.009883,0.011826,0.015712,0.023497,0.039049", \
				        "0.009386,0.010905,0.012701,0.016409,0.024010,0.039374", \
				        "0.013568,0.014760,0.016262,0.019510,0.026488,0.041274", \
				        "0.023734,0.024541,0.025610,0.028088,0.034015,0.047468");
			}
			fall_power(Power_X4) {
				values ("0.008454,0.006777,0.004833,0.000991,-0.006724,-0.022181", \
				        "0.008426,0.006741,0.004814,0.000980,-0.006732,-0.022181", \
				        "0.008437,0.006749,0.004831,0.000985,-0.006717,-0.022159", \
				        "0.008594,0.006892,0.004989,0.001114,-0.006640,-0.022121", \
				        "0.009230,0.007461,0.005493,0.001533,-0.006315,-0.021911", \
				        "0.011123,0.009228,0.007123,0.002957,-0.005163,-0.021051", \
				        "0.015845,0.013797,0.011495,0.007007,-0.001646,-0.018263", \
				        "0.026417,0.024202,0.021685,0.016789,0.007389,-0.010465");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & B2";

			rise_power(Power_X4) {
				values ("0.007494,0.009229,0.011197,0.015111,0.022882,0.038388", \
				        "0.007421,0.009159,0.011121,0.015040,0.022825,0.038330", \
				        "0.007303,0.009046,0.011015,0.014948,0.022748,0.038286", \
				        "0.007211,0.008933,0.010920,0.014843,0.022666,0.038233", \
				        "0.007284,0.008971,0.010927,0.014829,0.022602,0.038159", \
				        "0.008339,0.009868,0.011692,0.015436,0.023028,0.038437", \
				        "0.012281,0.013485,0.014976,0.018254,0.025322,0.040150", \
				        "0.022026,0.022825,0.023908,0.026411,0.032378,0.045952");
			}
			fall_power(Power_X4) {
				values ("0.008214,0.006532,0.004597,0.000755,-0.006945,-0.022396", \
				        "0.008196,0.006492,0.004573,0.000734,-0.006969,-0.022410", \
				        "0.008193,0.006488,0.004591,0.000733,-0.006976,-0.022406", \
				        "0.008319,0.006625,0.004713,0.000836,-0.006909,-0.022382", \
				        "0.008926,0.007149,0.005172,0.001216,-0.006625,-0.022205", \
				        "0.010746,0.008852,0.006712,0.002560,-0.005554,-0.021420", \
				        "0.015340,0.013257,0.010926,0.006423,-0.002229,-0.018813", \
				        "0.025520,0.023283,0.020747,0.015838,0.006419,-0.011419");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & B2";

			rise_power(Power_X4) {
				values ("0.010528,0.012264,0.014207,0.018105,0.025873,0.041385", \
				        "0.010456,0.012175,0.014134,0.018038,0.025817,0.041339", \
				        "0.010358,0.012066,0.014027,0.017951,0.025756,0.041283", \
				        "0.010247,0.011965,0.013938,0.017856,0.025668,0.041241", \
				        "0.010271,0.011984,0.013958,0.017820,0.025588,0.041169", \
				        "0.011100,0.012725,0.014597,0.018362,0.026010,0.041410", \
				        "0.014691,0.015990,0.017614,0.021017,0.028202,0.043109", \
				        "0.024023,0.024959,0.026146,0.028852,0.035040,0.048772");
			}
			fall_power(Power_X4) {
				values ("0.008224,0.006544,0.004597,0.000748,-0.006951,-0.022395", \
				        "0.008178,0.006498,0.004573,0.000730,-0.006964,-0.022403", \
				        "0.008193,0.006489,0.004585,0.000729,-0.006978,-0.022393", \
				        "0.008318,0.006613,0.004701,0.000836,-0.006896,-0.022373", \
				        "0.008917,0.007148,0.005159,0.001207,-0.006636,-0.022197", \
				        "0.010716,0.008839,0.006717,0.002552,-0.005563,-0.021421", \
				        "0.015320,0.013218,0.010917,0.006412,-0.002235,-0.018814", \
				        "0.025488,0.023230,0.020699,0.015799,0.006399,-0.011422");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & !A2 & B1";

			rise_power(Power_X4) {
				values ("0.011270,0.013010,0.014928,0.018825,0.026575,0.042067", \
				        "0.011226,0.012937,0.014891,0.018772,0.026539,0.042053", \
				        "0.011166,0.012851,0.014828,0.018731,0.026501,0.042012", \
				        "0.011109,0.012819,0.014764,0.018681,0.026453,0.041986", \
				        "0.011133,0.012834,0.014793,0.018680,0.026442,0.041981", \
				        "0.012141,0.013722,0.015581,0.019336,0.026957,0.042302", \
				        "0.015859,0.017262,0.018909,0.022331,0.029486,0.044264", \
				        "0.024611,0.025878,0.027332,0.030408,0.036871,0.050594");
			}
			fall_power(Power_X4) {
				values ("0.008465,0.006773,0.004834,0.000986,-0.006725,-0.022202", \
				        "0.008431,0.006742,0.004805,0.000955,-0.006778,-0.022270", \
				        "0.008371,0.006713,0.004771,0.000912,-0.006819,-0.022317", \
				        "0.008364,0.006696,0.004799,0.000949,-0.006784,-0.022267", \
				        "0.008622,0.006908,0.004976,0.001111,-0.006654,-0.022163", \
				        "0.009780,0.007985,0.005950,0.001932,-0.006005,-0.021694", \
				        "0.013363,0.011353,0.009142,0.004805,-0.003599,-0.019844", \
				        "0.021860,0.019671,0.017229,0.012478,0.003344,-0.014058");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & B1";

			rise_power(Power_X4) {
				values ("0.010422,0.012139,0.014080,0.017963,0.025703,0.041214", \
				        "0.010367,0.012094,0.014024,0.017915,0.025675,0.041184", \
				        "0.010306,0.012033,0.013977,0.017862,0.025635,0.041154", \
				        "0.010216,0.011941,0.013900,0.017815,0.025585,0.041145", \
				        "0.010251,0.011942,0.013893,0.017792,0.025561,0.041085", \
				        "0.011101,0.012727,0.014579,0.018334,0.025981,0.041368", \
				        "0.014556,0.015976,0.017647,0.021110,0.028300,0.043145", \
				        "0.022964,0.024184,0.025681,0.028769,0.035277,0.049143");
			}
			fall_power(Power_X4) {
				values ("0.008234,0.006544,0.004605,0.000746,-0.006960,-0.022427", \
				        "0.008191,0.006505,0.004565,0.000706,-0.007021,-0.022496", \
				        "0.008143,0.006466,0.004525,0.000662,-0.007070,-0.022570", \
				        "0.008123,0.006453,0.004550,0.000682,-0.007051,-0.022526", \
				        "0.008356,0.006639,0.004706,0.000836,-0.006915,-0.022417", \
				        "0.009466,0.007648,0.005617,0.001607,-0.006324,-0.021997", \
				        "0.012923,0.010901,0.008675,0.004336,-0.004052,-0.020270", \
				        "0.021193,0.018933,0.016478,0.011708,0.002570,-0.014785");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & B1";

			rise_power(Power_X4) {
				values ("0.013428,0.015116,0.017074,0.020953,0.028696,0.044204", \
				        "0.013374,0.015068,0.017017,0.020906,0.028667,0.044182", \
				        "0.013318,0.015008,0.016949,0.020857,0.028627,0.044149", \
				        "0.013241,0.014948,0.016909,0.020808,0.028584,0.044120", \
				        "0.013249,0.014932,0.016883,0.020779,0.028556,0.044083", \
				        "0.013982,0.015614,0.017494,0.021292,0.028957,0.044352", \
				        "0.017227,0.018658,0.020392,0.023910,0.031183,0.046095", \
				        "0.025386,0.026674,0.028187,0.031360,0.037999,0.051934");
			}
			fall_power(Power_X4) {
				values ("0.008229,0.006543,0.004608,0.000746,-0.006960,-0.022422", \
				        "0.008184,0.006500,0.004567,0.000705,-0.007017,-0.022494", \
				        "0.008143,0.006462,0.004538,0.000660,-0.007073,-0.022561", \
				        "0.008110,0.006448,0.004539,0.000678,-0.007050,-0.022531", \
				        "0.008332,0.006625,0.004702,0.000828,-0.006919,-0.022405", \
				        "0.009467,0.007651,0.005613,0.001602,-0.006328,-0.021991", \
				        "0.012886,0.010890,0.008662,0.004331,-0.004068,-0.020268", \
				        "0.021100,0.018897,0.016429,0.011676,0.002540,-0.014795");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X1
 Cell Description	: Combinational cell (BUF_X1) with drive strength X1
*******************************************************************************************/

cell (BUF_X1) {

	area               	: 0.798000;

	cell_leakage_power 	: 5687.593500;

	leakage_power () {
		when      	: "!A";
		value      	: 5687.461000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 5687.726000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000504;
		fall_capacitance	: 0.000486;
		rise_capacitance	: 0.000522;
		fall_capacitance_range		(0.000415, 0.000560);
		rise_capacitance_range		(0.000420, 0.000590);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.039363,0.042705,0.048675,0.059492,0.079064,0.116930", \
				        "0.043263,0.046600,0.052634,0.063488,0.083047,0.120915", \
				        "0.051310,0.054660,0.060676,0.071436,0.091085,0.128940", \
				        "0.064781,0.068370,0.074735,0.085772,0.105613,0.143500", \
				        "0.083366,0.087456,0.094503,0.106500,0.127301,0.165479", \
				        "0.110511,0.115295,0.123442,0.136921,0.159258,0.198351", \
				        "0.152746,0.158519,0.168508,0.184635,0.210313,0.252574", \
				        "0.222340,0.229535,0.241968,0.262352,0.294465,0.344466");
			}
			cell_rise(Timing_X1) {
				values ("0.034436,0.039249,0.048879,0.067825,0.105560,0.180996", \
				        "0.037747,0.042542,0.052044,0.070843,0.108590,0.183977", \
				        "0.043200,0.047974,0.057474,0.076360,0.113920,0.189290", \
				        "0.049460,0.054283,0.063815,0.082874,0.120362,0.195674", \
				        "0.055401,0.060477,0.070115,0.089039,0.126702,0.201897", \
				        "0.057875,0.063847,0.074235,0.093521,0.131235,0.206288", \
				        "0.048877,0.056354,0.069401,0.090786,0.129497,0.205169", \
				        "0.014204,0.023479,0.039737,0.067058,0.110688,0.188828");
			}
			fall_transition(Timing_X1) {
				values ("0.009809,0.011719,0.015506,0.022999,0.038256,0.070190", \
				        "0.009831,0.011736,0.015523,0.023046,0.038246,0.070179", \
				        "0.009943,0.011806,0.015574,0.023117,0.038248,0.070204", \
				        "0.011222,0.013000,0.016513,0.023679,0.038510,0.070289", \
				        "0.013561,0.015347,0.018856,0.025887,0.039955,0.070739", \
				        "0.017065,0.019005,0.022625,0.029416,0.042909,0.072032", \
				        "0.022901,0.025124,0.029137,0.036279,0.049305,0.076681", \
				        "0.033066,0.035757,0.040567,0.048952,0.063218,0.089626");
			}
			rise_transition(Timing_X1) {
				values ("0.014003,0.018278,0.027092,0.045058,0.080927,0.152473", \
				        "0.014016,0.018284,0.027067,0.045032,0.080893,0.152508", \
				        "0.014216,0.018402,0.027142,0.044977,0.080908,0.152499", \
				        "0.014888,0.018845,0.027382,0.045128,0.080946,0.152474", \
				        "0.016607,0.020098,0.028041,0.045412,0.081036,0.152514", \
				        "0.020515,0.023725,0.030605,0.046669,0.081548,0.152765", \
				        "0.027065,0.030913,0.037687,0.051567,0.084191,0.154457", \
				        "0.037164,0.042051,0.050754,0.065233,0.093472,0.160228");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.001578,0.001328,0.000849,-0.000132,-0.002073,-0.005953", \
				        "0.001580,0.001336,0.000848,-0.000130,-0.002073,-0.005951", \
				        "0.001610,0.001366,0.000881,-0.000087,-0.002031,-0.005906", \
				        "0.001701,0.001461,0.000984,0.000028,-0.001915,-0.005787", \
				        "0.001958,0.001704,0.001217,0.000258,-0.001685,-0.005553", \
				        "0.002547,0.002288,0.001788,0.000808,-0.001129,-0.005017", \
				        "0.003889,0.003611,0.003091,0.002088,0.000131,-0.003766", \
				        "0.006826,0.006530,0.005954,0.004897,0.002890,-0.001037");
			}
			rise_power(Power_X1) {
				values ("0.001503,0.001746,0.002243,0.003216,0.005159,0.009028", \
				        "0.001499,0.001743,0.002232,0.003204,0.005148,0.009023", \
				        "0.001519,0.001763,0.002248,0.003223,0.005165,0.009040", \
				        "0.001594,0.001837,0.002319,0.003291,0.005234,0.009108", \
				        "0.001831,0.002061,0.002552,0.003511,0.005449,0.009319", \
				        "0.002444,0.002677,0.003146,0.004097,0.006024,0.009884", \
				        "0.003834,0.004055,0.004510,0.005450,0.007354,0.011194", \
				        "0.006798,0.007002,0.007433,0.008339,0.010204,0.014003");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X16
 Cell Description	: Combinational cell (BUF_X16) with drive strength X16
*******************************************************************************************/

cell (BUF_X16) {

	area               	: 1.596000;

	cell_leakage_power 	: 52399.990000;

	leakage_power () {
		when      	: "!A";
		value      	: 66172.940000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 38627.040000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000434;
		fall_capacitance	: 0.000416;
		rise_capacitance	: 0.000451;
		fall_capacitance_range		(0.000365, 0.000462);
		rise_capacitance_range		(0.000378, 0.000529);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.204800;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X16) {
				values ("0.093865,0.105055,0.114335,0.129791,0.155109,0.197234", \
				        "0.097583,0.108777,0.118052,0.133438,0.158685,0.200806", \
				        "0.105205,0.116385,0.125771,0.141178,0.166449,0.208583", \
				        "0.121213,0.132371,0.141800,0.157371,0.182676,0.224844", \
				        "0.154399,0.165378,0.174526,0.190051,0.215351,0.257464", \
				        "0.206951,0.218845,0.228795,0.245508,0.272132,0.315147", \
				        "0.279805,0.292824,0.303801,0.322531,0.352671,0.399640", \
				        "0.387743,0.401954,0.414313,0.435687,0.470341,0.524050");
			}
			cell_rise(Timing_X16) {
				values ("0.059524,0.072403,0.083330,0.102918,0.139498,0.211251", \
				        "0.062875,0.075754,0.086692,0.106133,0.142711,0.214476", \
				        "0.069690,0.082552,0.093572,0.112971,0.149391,0.221138", \
				        "0.083481,0.096249,0.107255,0.126617,0.162979,0.234615", \
				        "0.103794,0.117279,0.128713,0.148325,0.184424,0.255641", \
				        "0.125356,0.140000,0.152538,0.173669,0.210066,0.280569", \
				        "0.143817,0.159535,0.173539,0.197604,0.236426,0.306382", \
				        "0.147321,0.164022,0.179657,0.207487,0.253078,0.326384");
			}
			fall_transition(Timing_X16) {
				values ("0.022811,0.026579,0.030502,0.037982,0.051950,0.079289", \
				        "0.022811,0.026583,0.030507,0.037983,0.051953,0.079305", \
				        "0.022818,0.026581,0.030493,0.037991,0.051906,0.079321", \
				        "0.022815,0.026589,0.030502,0.037979,0.051903,0.079335", \
				        "0.023743,0.027300,0.031151,0.038468,0.052316,0.079526", \
				        "0.032942,0.035792,0.038992,0.045364,0.057522,0.082424", \
				        "0.046072,0.048755,0.051910,0.058123,0.069777,0.092875", \
				        "0.065073,0.067648,0.070855,0.077296,0.089366,0.111386");
			}
			rise_transition(Timing_X16) {
				values ("0.014134,0.021732,0.029294,0.044611,0.077002,0.144403", \
				        "0.014134,0.021732,0.029267,0.044644,0.077022,0.144440", \
				        "0.014136,0.021734,0.029285,0.044618,0.076978,0.144401", \
				        "0.014398,0.021924,0.029452,0.044742,0.077021,0.144433", \
				        "0.018183,0.024959,0.031815,0.045931,0.077434,0.144475", \
				        "0.024669,0.031113,0.037693,0.050538,0.079360,0.144849", \
				        "0.035428,0.041155,0.048119,0.060639,0.085672,0.146711", \
				        "0.053981,0.058577,0.065307,0.079179,0.102989,0.155291");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X16) {
				values ("0.017015,0.006756,-0.002474,-0.019095,-0.050705,-0.112991", \
				        "0.017014,0.006767,-0.002457,-0.019091,-0.050714,-0.113015", \
				        "0.017032,0.006746,-0.002471,-0.019102,-0.050720,-0.113032", \
				        "0.017100,0.006819,-0.002439,-0.019137,-0.050789,-0.113137", \
				        "0.018103,0.007675,-0.001697,-0.018479,-0.050215,-0.112684", \
				        "0.022477,0.011384,0.001358,-0.016397,-0.048861,-0.111726", \
				        "0.029781,0.018108,0.007298,-0.011919,-0.045922,-0.109693", \
				        "0.041387,0.029266,0.017819,-0.003009,-0.039469,-0.105089");
			}
			rise_power(Power_X16) {
				values ("0.010773,0.017548,0.025090,0.040434,0.071382,0.133338", \
				        "0.010755,0.017487,0.025055,0.040408,0.071366,0.133320", \
				        "0.010788,0.017536,0.025077,0.040422,0.071363,0.133307", \
				        "0.011314,0.017912,0.025407,0.040658,0.071491,0.133364", \
				        "0.013134,0.019158,0.026390,0.041436,0.072013,0.133693", \
				        "0.016620,0.021538,0.028407,0.043103,0.073335,0.134649", \
				        "0.023140,0.026614,0.032588,0.046615,0.076219,0.136926", \
				        "0.035313,0.037349,0.041867,0.054267,0.082715,0.142351");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X2
 Cell Description	: Combinational cell (BUF_X2) with drive strength X2
*******************************************************************************************/

cell (BUF_X2) {

	area               	: 0.798000;

	cell_leakage_power 	: 8868.326000;

	leakage_power () {
		when      	: "!A";
		value      	: 9804.072000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 7932.580000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000511;
		fall_capacitance	: 0.000491;
		rise_capacitance	: 0.000530;
		fall_capacitance_range		(0.000410, 0.000567);
		rise_capacitance_range		(0.000430, 0.000602);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.038582,0.044590,0.051094,0.062237,0.081817,0.118608", \
				        "0.042427,0.048428,0.054967,0.066124,0.085665,0.122469", \
				        "0.050526,0.056502,0.063076,0.074247,0.093791,0.130538", \
				        "0.064819,0.071183,0.077971,0.089381,0.109087,0.145819", \
				        "0.084487,0.091762,0.099408,0.111895,0.132642,0.169888", \
				        "0.112699,0.121128,0.130057,0.144101,0.166750,0.205072", \
				        "0.156226,0.166210,0.176917,0.193756,0.219784,0.261463", \
				        "0.227592,0.239712,0.252633,0.273648,0.305918,0.355397");
			}
			cell_rise(Timing_X2) {
				values ("0.030208,0.037663,0.047048,0.065359,0.101838,0.174580", \
				        "0.033641,0.041054,0.050424,0.068580,0.104960,0.177777", \
				        "0.039588,0.047029,0.056327,0.074471,0.110790,0.183520", \
				        "0.046674,0.054494,0.063895,0.082189,0.118337,0.191059", \
				        "0.053236,0.062034,0.071744,0.090106,0.126200,0.198676", \
				        "0.055994,0.066543,0.077695,0.096652,0.132781,0.205023", \
				        "0.047855,0.060500,0.074376,0.096396,0.133832,0.206484", \
				        "0.014790,0.029793,0.046589,0.074573,0.118220,0.193275");
			}
			fall_transition(Timing_X2) {
				values ("0.008041,0.011050,0.014787,0.021917,0.036246,0.066541", \
				        "0.008058,0.011056,0.014795,0.021908,0.036229,0.066533", \
				        "0.008109,0.011102,0.014834,0.021921,0.036260,0.066526", \
				        "0.009474,0.012221,0.015709,0.022487,0.036551,0.066585", \
				        "0.012084,0.014949,0.018405,0.025068,0.038162,0.067182", \
				        "0.015844,0.018944,0.022566,0.029122,0.041588,0.069090", \
				        "0.021878,0.025382,0.029397,0.036383,0.048782,0.074166", \
				        "0.032368,0.036462,0.041202,0.049250,0.063027,0.087701");
			}
			rise_transition(Timing_X2) {
				values ("0.008904,0.014649,0.022879,0.040014,0.074633,0.143698", \
				        "0.008906,0.014655,0.022867,0.039974,0.074589,0.143724", \
				        "0.009238,0.014829,0.022944,0.040065,0.074654,0.143719", \
				        "0.010522,0.015625,0.023391,0.040126,0.074686,0.143747", \
				        "0.012766,0.017540,0.024561,0.040632,0.074755,0.143768", \
				        "0.016376,0.021718,0.028027,0.042484,0.075380,0.143982", \
				        "0.022170,0.028648,0.035746,0.048568,0.078463,0.145594", \
				        "0.032243,0.039489,0.048358,0.063039,0.089168,0.151458");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("0.002095,0.001366,0.000401,-0.001550,-0.005431,-0.013203", \
				        "0.002100,0.001360,0.000399,-0.001549,-0.005429,-0.013203", \
				        "0.002131,0.001389,0.000416,-0.001520,-0.005395,-0.013151", \
				        "0.002262,0.001501,0.000527,-0.001398,-0.005278,-0.013019", \
				        "0.002595,0.001787,0.000789,-0.001153,-0.005035,-0.012796", \
				        "0.003299,0.002435,0.001383,-0.000588,-0.004486,-0.012261", \
				        "0.004854,0.003906,0.002791,0.000730,-0.003212,-0.011022", \
				        "0.008174,0.007141,0.005920,0.003704,-0.000371,-0.008267");
			}
			rise_power(Power_X2) {
				values ("0.001712,0.002451,0.003436,0.005388,0.009277,0.017030", \
				        "0.001722,0.002445,0.003435,0.005383,0.009271,0.017023", \
				        "0.001755,0.002471,0.003435,0.005383,0.009271,0.017023", \
				        "0.001851,0.002558,0.003519,0.005459,0.009336,0.017094", \
				        "0.002121,0.002814,0.003755,0.005682,0.009541,0.017278", \
				        "0.002807,0.003469,0.004392,0.006277,0.010122,0.017834", \
				        "0.004378,0.004981,0.005868,0.007714,0.011506,0.019169", \
				        "0.007760,0.008249,0.009051,0.010809,0.014522,0.022092");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X32
 Cell Description	: Combinational cell (BUF_X32) with drive strength X32
*******************************************************************************************/

cell (BUF_X32) {

	area               	: 2.394000;

	cell_leakage_power 	: 102559.505000;

	leakage_power () {
		when      	: "!A";
		value      	: 131092.300000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 74026.710000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000452;
		fall_capacitance	: 0.000434;
		rise_capacitance	: 0.000470;
		fall_capacitance_range		(0.000395, 0.000470);
		rise_capacitance_range		(0.000432, 0.000528);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.409600;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X32) {
				values ("0.162665,0.175697,0.186910,0.205935,0.236979,0.287040", \
				        "0.166364,0.179423,0.190587,0.209537,0.240533,0.290593", \
				        "0.173970,0.186985,0.198221,0.217039,0.248095,0.298163", \
				        "0.189600,0.202605,0.213675,0.232761,0.263788,0.313859", \
				        "0.221944,0.234968,0.246069,0.265221,0.296216,0.346284", \
				        "0.288635,0.301384,0.311997,0.330576,0.361363,0.411219", \
				        "0.390017,0.403653,0.415206,0.435693,0.469191,0.522057", \
				        "0.531359,0.545666,0.558832,0.581276,0.619173,0.678916");
			}
			cell_rise(Timing_X32) {
				values ("0.096973,0.111904,0.124824,0.147245,0.186395,0.259196", \
				        "0.100293,0.115237,0.128089,0.150414,0.189567,0.262376", \
				        "0.106939,0.121875,0.134846,0.157067,0.196210,0.268988", \
				        "0.120638,0.135556,0.148571,0.170853,0.209949,0.282689", \
				        "0.148473,0.163114,0.175911,0.198150,0.237022,0.309525", \
				        "0.186823,0.202038,0.215601,0.238967,0.278382,0.350246", \
				        "0.227272,0.243033,0.257492,0.283328,0.325621,0.397925", \
				        "0.260398,0.276700,0.292290,0.320896,0.369455,0.446745");
			}
			fall_transition(Timing_X32) {
				values ("0.042691,0.045875,0.049658,0.057382,0.072000,0.099670", \
				        "0.042693,0.045875,0.049640,0.057366,0.071969,0.099675", \
				        "0.042685,0.045877,0.049646,0.057420,0.071946,0.099696", \
				        "0.042683,0.045877,0.049660,0.057424,0.071998,0.099683", \
				        "0.042690,0.045879,0.049670,0.057377,0.072014,0.099640", \
				        "0.045727,0.048486,0.051926,0.059153,0.073330,0.100556", \
				        "0.064920,0.067024,0.069876,0.075985,0.088021,0.111672", \
				        "0.091721,0.093360,0.095914,0.101877,0.113745,0.136327");
			}
			rise_transition(Timing_X32) {
				values ("0.022591,0.029979,0.037891,0.052996,0.083479,0.148343", \
				        "0.022592,0.029988,0.037859,0.052996,0.083459,0.148351", \
				        "0.022593,0.029988,0.037897,0.053030,0.083509,0.148343", \
				        "0.022590,0.029975,0.037879,0.053029,0.083486,0.148341", \
				        "0.023826,0.030742,0.038465,0.053415,0.083767,0.148422", \
				        "0.032810,0.038341,0.045263,0.058841,0.086635,0.149179", \
				        "0.046937,0.051222,0.057754,0.071001,0.095825,0.153012", \
				        "0.069849,0.072905,0.078454,0.091793,0.116489,0.165511");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X32) {
				values ("0.052557,0.029039,0.007640,-0.030495,-0.098322,-0.225243", \
				        "0.052551,0.029029,0.007655,-0.030495,-0.098311,-0.225257", \
				        "0.052550,0.029043,0.007639,-0.030487,-0.098317,-0.225247", \
				        "0.052589,0.029086,0.007656,-0.030467,-0.098314,-0.225255", \
				        "0.052897,0.029364,0.007925,-0.030330,-0.098264,-0.225253", \
				        "0.057410,0.033578,0.011808,-0.026970,-0.095769,-0.223556", \
				        "0.075063,0.050173,0.027085,-0.014621,-0.087609,-0.218643", \
				        "0.102844,0.077175,0.052844,0.008171,-0.070876,-0.208434");
			}
			rise_power(Power_X32) {
				values ("0.028202,0.038234,0.052236,0.082028,0.143162,0.266548", \
				        "0.028224,0.038267,0.052186,0.082019,0.143150,0.266544", \
				        "0.028278,0.038253,0.052228,0.082017,0.143149,0.266517", \
				        "0.028377,0.038405,0.052340,0.082148,0.143238,0.266537", \
				        "0.031105,0.040719,0.054384,0.083769,0.144377,0.267211", \
				        "0.040093,0.047262,0.059449,0.087825,0.147447,0.269389", \
				        "0.055277,0.059704,0.069457,0.095548,0.153498,0.273887", \
				        "0.081165,0.083474,0.089957,0.111584,0.166119,0.283889");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X4
 Cell Description	: Combinational cell (BUF_X4) with drive strength X4
*******************************************************************************************/

cell (BUF_X4) {

	area               	: 0.798000;

	cell_leakage_power 	: 15230.165000;

	leakage_power () {
		when      	: "!A";
		value      	: 18037.600000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 12422.730000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000466;
		fall_capacitance	: 0.000446;
		rise_capacitance	: 0.000487;
		fall_capacitance_range		(0.000386, 0.000519);
		rise_capacitance_range		(0.000407, 0.000560);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.041787,0.049567,0.056474,0.068046,0.087913,0.124455", \
				        "0.045604,0.053375,0.060318,0.071845,0.091735,0.128292", \
				        "0.053673,0.061429,0.068382,0.079974,0.099847,0.136460", \
				        "0.069145,0.077088,0.084056,0.095722,0.115655,0.152085", \
				        "0.090926,0.099940,0.107775,0.120463,0.141369,0.178200", \
				        "0.121683,0.131958,0.141092,0.155364,0.178112,0.216197", \
				        "0.168731,0.180574,0.191222,0.208129,0.234240,0.275590", \
				        "0.245081,0.258946,0.271542,0.292224,0.324142,0.372919");
			}
			cell_rise(Timing_X4) {
				values ("0.030466,0.039701,0.049094,0.067119,0.103013,0.174547", \
				        "0.033889,0.043095,0.052514,0.070404,0.106264,0.177812", \
				        "0.040283,0.049483,0.058778,0.076743,0.112320,0.183892", \
				        "0.048374,0.058184,0.067615,0.085486,0.121036,0.192456", \
				        "0.056186,0.067286,0.077145,0.095164,0.130447,0.201582", \
				        "0.060853,0.073757,0.085277,0.104095,0.139315,0.210058", \
				        "0.056060,0.070892,0.084768,0.106995,0.143677,0.214429", \
				        "0.027994,0.044907,0.061229,0.088908,0.132271,0.205269");
			}
			fall_transition(Timing_X4) {
				values ("0.008664,0.012202,0.015915,0.022875,0.036797,0.066134", \
				        "0.008665,0.012205,0.015934,0.022885,0.036810,0.066160", \
				        "0.008677,0.012229,0.015934,0.022904,0.036812,0.066142", \
				        "0.009941,0.013097,0.016544,0.023303,0.037036,0.066228", \
				        "0.013247,0.016420,0.019743,0.026065,0.038790,0.066814", \
				        "0.017927,0.021274,0.024682,0.030930,0.043006,0.069270", \
				        "0.025193,0.028755,0.032452,0.039049,0.050775,0.074941", \
				        "0.037579,0.041472,0.045662,0.053079,0.065932,0.089154");
			}
			rise_transition(Timing_X4) {
				values ("0.007850,0.014343,0.022256,0.038900,0.072830,0.140748", \
				        "0.007849,0.014347,0.022251,0.038929,0.072856,0.140763", \
				        "0.008193,0.014494,0.022344,0.038945,0.072773,0.140732", \
				        "0.009683,0.015520,0.022897,0.039095,0.072785,0.140725", \
				        "0.012116,0.017860,0.024448,0.039705,0.073035,0.140795", \
				        "0.016039,0.022467,0.028564,0.042065,0.073659,0.141037", \
				        "0.022926,0.029882,0.036932,0.049209,0.077238,0.142626", \
				        "0.035288,0.042113,0.050373,0.064724,0.089514,0.148745");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X4) {
				values ("0.002936,0.001111,-0.000837,-0.004729,-0.012493,-0.028036", \
				        "0.002937,0.001106,-0.000846,-0.004731,-0.012498,-0.028053", \
				        "0.002969,0.001128,-0.000836,-0.004709,-0.012453,-0.028017", \
				        "0.003186,0.001281,-0.000697,-0.004577,-0.012323,-0.027830", \
				        "0.003749,0.001697,-0.000367,-0.004292,-0.012064,-0.027587", \
				        "0.004804,0.002589,0.000391,-0.003640,-0.011465,-0.027048", \
				        "0.006878,0.004489,0.002103,-0.002151,-0.010116,-0.025785", \
				        "0.011093,0.008548,0.005943,0.001310,-0.007020,-0.022895");
			}
			rise_power(Power_X4) {
				values ("0.002576,0.004272,0.006234,0.010137,0.017912,0.033415", \
				        "0.002583,0.004273,0.006235,0.010127,0.017905,0.033409", \
				        "0.002645,0.004307,0.006236,0.010128,0.017895,0.033397", \
				        "0.002822,0.004438,0.006347,0.010210,0.017962,0.033453", \
				        "0.003212,0.004767,0.006643,0.010472,0.018173,0.033639", \
				        "0.004152,0.005575,0.007399,0.011159,0.018808,0.034213", \
				        "0.006265,0.007436,0.009146,0.012803,0.020345,0.035640", \
				        "0.010677,0.011542,0.012969,0.016409,0.023752,0.038846");
			}
		}
	}

}


/******************************************************************************************
 Module          	: BUF_X8
 Cell Description	: Combinational cell (BUF_X8) with drive strength X8
*******************************************************************************************/

cell (BUF_X8) {

	area               	: 1.064000;

	cell_leakage_power 	: 27618.310000;

	leakage_power () {
		when      	: "!A";
		value      	: 34080.910000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 21155.710000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000465;
		fall_capacitance	: 0.000444;
		rise_capacitance	: 0.000486;
		fall_capacitance_range		(0.000385, 0.000505);
		rise_capacitance_range		(0.000430, 0.000564);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.102400;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X8) {
				values ("0.059925,0.069199,0.076978,0.089986,0.111840,0.150046", \
				        "0.063689,0.072958,0.080737,0.093713,0.115527,0.153753", \
				        "0.071586,0.080840,0.088645,0.101692,0.123495,0.161753", \
				        "0.088010,0.097195,0.105051,0.118038,0.139793,0.178006", \
				        "0.116130,0.125944,0.134310,0.147862,0.169940,0.208142", \
				        "0.154856,0.165961,0.175342,0.190612,0.214802,0.254584", \
				        "0.211428,0.223860,0.234482,0.252118,0.279587,0.322782", \
				        "0.300106,0.314100,0.326374,0.346968,0.379728,0.429876");
			}
			cell_rise(Timing_X8) {
				values ("0.041011,0.051773,0.061645,0.079908,0.115928,0.187558", \
				        "0.044393,0.055153,0.065013,0.083253,0.119161,0.190797", \
				        "0.051323,0.062042,0.071855,0.090059,0.125860,0.197430", \
				        "0.062731,0.073757,0.083594,0.101731,0.137393,0.208848", \
				        "0.075302,0.087493,0.097921,0.116325,0.151584,0.222758", \
				        "0.086522,0.100291,0.112130,0.131667,0.166933,0.237382", \
				        "0.090910,0.106295,0.120018,0.142860,0.179990,0.250026", \
				        "0.075240,0.092227,0.108046,0.135458,0.179426,0.251769");
			}
			fall_transition(Timing_X8) {
				values ("0.013434,0.017235,0.021035,0.028182,0.041919,0.070151", \
				        "0.013437,0.017237,0.021064,0.028178,0.041915,0.070148", \
				        "0.013423,0.017252,0.021067,0.028146,0.041912,0.070175", \
				        "0.013584,0.017389,0.021196,0.028274,0.041987,0.070206", \
				        "0.017497,0.020718,0.024008,0.030432,0.043229,0.070748", \
				        "0.024031,0.027237,0.030515,0.036694,0.048775,0.074056", \
				        "0.033404,0.036618,0.040069,0.046416,0.058036,0.081327", \
				        "0.048353,0.051670,0.055360,0.062282,0.074592,0.096934");
			}
			rise_transition(Timing_X8) {
				values ("0.010369,0.017357,0.025041,0.041089,0.074751,0.142694", \
				        "0.010369,0.017358,0.025017,0.041169,0.074750,0.142697", \
				        "0.010384,0.017392,0.025066,0.041090,0.074763,0.142672", \
				        "0.011784,0.018257,0.025587,0.041331,0.074792,0.142680", \
				        "0.014771,0.021079,0.027687,0.042394,0.074972,0.142712", \
				        "0.019645,0.026290,0.032493,0.045456,0.075981,0.142918", \
				        "0.028133,0.034788,0.041790,0.053921,0.080386,0.144367", \
				        "0.043129,0.049173,0.056759,0.070791,0.094786,0.151042");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X8) {
				values ("0.006662,0.002336,-0.001753,-0.009615,-0.025170,-0.056284", \
				        "0.006659,0.002329,-0.001756,-0.009629,-0.025199,-0.056317", \
				        "0.006677,0.002332,-0.001765,-0.009629,-0.025207,-0.056356", \
				        "0.006863,0.002481,-0.001640,-0.009509,-0.025079,-0.056197", \
				        "0.007871,0.003227,-0.001079,-0.009049,-0.024664,-0.055739", \
				        "0.009875,0.004874,0.000214,-0.008117,-0.023940,-0.055199", \
				        "0.013262,0.007929,0.002875,-0.006051,-0.022323,-0.053821", \
				        "0.019467,0.013842,0.008421,-0.001298,-0.018504,-0.050587");
			}
			rise_power(Power_X8) {
				values ("0.005064,0.008598,0.012498,0.020246,0.035781,0.066790", \
				        "0.005069,0.008604,0.012478,0.020244,0.035772,0.066794", \
				        "0.005146,0.008659,0.012510,0.020267,0.035770,0.066779", \
				        "0.005490,0.008902,0.012686,0.020367,0.035838,0.066806", \
				        "0.006204,0.009422,0.013136,0.020747,0.036108,0.067010", \
				        "0.007747,0.010610,0.014195,0.021657,0.036878,0.067629", \
				        "0.011041,0.013287,0.016564,0.023789,0.038775,0.069281", \
				        "0.017688,0.019160,0.021856,0.028506,0.043037,0.073088");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKBUF_X1
 Cell Description	: Combinational cell (CLKBUF_X1) with drive strength X1
*******************************************************************************************/

cell (CLKBUF_X1) {

	area               	: 0.798000;

	cell_leakage_power 	: 5687.593500;

	leakage_power () {
		when      	: "!A";
		value      	: 5687.461000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 5687.726000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000504;
		fall_capacitance	: 0.000486;
		rise_capacitance	: 0.000522;
		fall_capacitance_range		(0.000415, 0.000560);
		rise_capacitance_range		(0.000420, 0.000590);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.039363,0.042705,0.048675,0.059492,0.079064,0.116930", \
				        "0.043263,0.046600,0.052634,0.063488,0.083047,0.120915", \
				        "0.051310,0.054660,0.060676,0.071436,0.091085,0.128940", \
				        "0.064781,0.068370,0.074735,0.085772,0.105613,0.143500", \
				        "0.083366,0.087456,0.094503,0.106500,0.127301,0.165479", \
				        "0.110511,0.115295,0.123442,0.136921,0.159258,0.198351", \
				        "0.152746,0.158519,0.168508,0.184635,0.210313,0.252574", \
				        "0.222340,0.229535,0.241968,0.262352,0.294465,0.344466");
			}
			cell_rise(Timing_X1) {
				values ("0.034436,0.039249,0.048879,0.067825,0.105560,0.180996", \
				        "0.037747,0.042542,0.052044,0.070843,0.108590,0.183977", \
				        "0.043200,0.047974,0.057474,0.076360,0.113920,0.189290", \
				        "0.049460,0.054283,0.063815,0.082874,0.120362,0.195674", \
				        "0.055401,0.060477,0.070115,0.089039,0.126702,0.201897", \
				        "0.057875,0.063847,0.074235,0.093521,0.131235,0.206288", \
				        "0.048877,0.056354,0.069401,0.090786,0.129497,0.205169", \
				        "0.014204,0.023479,0.039737,0.067058,0.110688,0.188828");
			}
			fall_transition(Timing_X1) {
				values ("0.009809,0.011719,0.015506,0.022999,0.038256,0.070190", \
				        "0.009831,0.011736,0.015523,0.023046,0.038246,0.070179", \
				        "0.009943,0.011806,0.015574,0.023117,0.038248,0.070204", \
				        "0.011222,0.013000,0.016513,0.023679,0.038510,0.070289", \
				        "0.013561,0.015347,0.018856,0.025887,0.039955,0.070739", \
				        "0.017065,0.019005,0.022625,0.029416,0.042909,0.072032", \
				        "0.022901,0.025124,0.029137,0.036279,0.049305,0.076681", \
				        "0.033066,0.035757,0.040567,0.048952,0.063218,0.089626");
			}
			rise_transition(Timing_X1) {
				values ("0.014003,0.018278,0.027092,0.045058,0.080927,0.152473", \
				        "0.014016,0.018284,0.027067,0.045032,0.080893,0.152508", \
				        "0.014216,0.018402,0.027142,0.044977,0.080908,0.152499", \
				        "0.014888,0.018845,0.027382,0.045128,0.080946,0.152474", \
				        "0.016607,0.020098,0.028041,0.045412,0.081036,0.152514", \
				        "0.020515,0.023725,0.030605,0.046669,0.081548,0.152765", \
				        "0.027065,0.030913,0.037687,0.051567,0.084191,0.154457", \
				        "0.037164,0.042051,0.050754,0.065233,0.093472,0.160228");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.001578,0.001328,0.000849,-0.000132,-0.002073,-0.005953", \
				        "0.001580,0.001336,0.000848,-0.000130,-0.002073,-0.005951", \
				        "0.001610,0.001366,0.000881,-0.000087,-0.002031,-0.005906", \
				        "0.001701,0.001461,0.000984,0.000028,-0.001915,-0.005787", \
				        "0.001958,0.001704,0.001217,0.000258,-0.001685,-0.005553", \
				        "0.002547,0.002288,0.001788,0.000808,-0.001129,-0.005017", \
				        "0.003889,0.003611,0.003091,0.002088,0.000131,-0.003766", \
				        "0.006826,0.006530,0.005954,0.004897,0.002890,-0.001037");
			}
			rise_power(Power_X1) {
				values ("0.001503,0.001746,0.002243,0.003216,0.005159,0.009028", \
				        "0.001499,0.001743,0.002232,0.003204,0.005148,0.009023", \
				        "0.001519,0.001763,0.002248,0.003223,0.005165,0.009040", \
				        "0.001594,0.001837,0.002319,0.003291,0.005234,0.009108", \
				        "0.001831,0.002061,0.002552,0.003511,0.005449,0.009319", \
				        "0.002444,0.002677,0.003146,0.004097,0.006024,0.009884", \
				        "0.003834,0.004055,0.004510,0.005450,0.007354,0.011194", \
				        "0.006798,0.007002,0.007433,0.008339,0.010204,0.014003");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKBUF_X2
 Cell Description	: Combinational cell (CLKBUF_X2) with drive strength X2
*******************************************************************************************/

cell (CLKBUF_X2) {

	area               	: 0.798000;

	cell_leakage_power 	: 8868.326000;

	leakage_power () {
		when      	: "!A";
		value      	: 9804.072000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 7932.580000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000511;
		fall_capacitance	: 0.000491;
		rise_capacitance	: 0.000530;
		fall_capacitance_range		(0.000410, 0.000567);
		rise_capacitance_range		(0.000430, 0.000602);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.038582,0.044590,0.051094,0.062237,0.081817,0.118608", \
				        "0.042427,0.048428,0.054967,0.066124,0.085665,0.122469", \
				        "0.050526,0.056502,0.063076,0.074247,0.093791,0.130538", \
				        "0.064819,0.071183,0.077971,0.089381,0.109087,0.145819", \
				        "0.084487,0.091762,0.099408,0.111895,0.132642,0.169888", \
				        "0.112699,0.121128,0.130057,0.144101,0.166750,0.205072", \
				        "0.156226,0.166210,0.176917,0.193756,0.219784,0.261463", \
				        "0.227592,0.239712,0.252633,0.273648,0.305918,0.355397");
			}
			cell_rise(Timing_X2) {
				values ("0.030208,0.037663,0.047048,0.065359,0.101838,0.174580", \
				        "0.033641,0.041054,0.050424,0.068580,0.104960,0.177777", \
				        "0.039588,0.047029,0.056327,0.074471,0.110790,0.183520", \
				        "0.046674,0.054494,0.063895,0.082189,0.118337,0.191059", \
				        "0.053236,0.062034,0.071744,0.090106,0.126200,0.198676", \
				        "0.055994,0.066543,0.077695,0.096652,0.132781,0.205023", \
				        "0.047855,0.060500,0.074376,0.096396,0.133832,0.206484", \
				        "0.014790,0.029793,0.046589,0.074573,0.118220,0.193275");
			}
			fall_transition(Timing_X2) {
				values ("0.008041,0.011050,0.014787,0.021917,0.036246,0.066541", \
				        "0.008058,0.011056,0.014795,0.021908,0.036229,0.066533", \
				        "0.008109,0.011102,0.014834,0.021921,0.036260,0.066526", \
				        "0.009474,0.012221,0.015709,0.022487,0.036551,0.066585", \
				        "0.012084,0.014949,0.018405,0.025068,0.038162,0.067182", \
				        "0.015844,0.018944,0.022566,0.029122,0.041588,0.069090", \
				        "0.021878,0.025382,0.029397,0.036383,0.048782,0.074166", \
				        "0.032368,0.036462,0.041202,0.049250,0.063027,0.087701");
			}
			rise_transition(Timing_X2) {
				values ("0.008904,0.014649,0.022879,0.040014,0.074633,0.143698", \
				        "0.008906,0.014655,0.022867,0.039974,0.074589,0.143724", \
				        "0.009238,0.014829,0.022944,0.040065,0.074654,0.143719", \
				        "0.010522,0.015625,0.023391,0.040126,0.074686,0.143747", \
				        "0.012766,0.017540,0.024561,0.040632,0.074755,0.143768", \
				        "0.016376,0.021718,0.028027,0.042484,0.075380,0.143982", \
				        "0.022170,0.028648,0.035746,0.048568,0.078463,0.145594", \
				        "0.032243,0.039489,0.048358,0.063039,0.089168,0.151458");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("0.002095,0.001366,0.000401,-0.001550,-0.005431,-0.013203", \
				        "0.002100,0.001360,0.000399,-0.001549,-0.005429,-0.013203", \
				        "0.002131,0.001389,0.000416,-0.001520,-0.005395,-0.013151", \
				        "0.002262,0.001501,0.000527,-0.001398,-0.005278,-0.013019", \
				        "0.002595,0.001787,0.000789,-0.001153,-0.005035,-0.012796", \
				        "0.003299,0.002435,0.001383,-0.000588,-0.004486,-0.012261", \
				        "0.004854,0.003906,0.002791,0.000730,-0.003212,-0.011022", \
				        "0.008174,0.007141,0.005920,0.003704,-0.000371,-0.008267");
			}
			rise_power(Power_X2) {
				values ("0.001712,0.002451,0.003436,0.005388,0.009277,0.017030", \
				        "0.001722,0.002445,0.003435,0.005383,0.009271,0.017023", \
				        "0.001755,0.002471,0.003435,0.005383,0.009271,0.017023", \
				        "0.001851,0.002558,0.003519,0.005459,0.009336,0.017094", \
				        "0.002121,0.002814,0.003755,0.005682,0.009541,0.017278", \
				        "0.002807,0.003469,0.004392,0.006277,0.010122,0.017834", \
				        "0.004378,0.004981,0.005868,0.007714,0.011506,0.019169", \
				        "0.007760,0.008249,0.009051,0.010809,0.014522,0.022092");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKBUF_X3
 Cell Description	: Combinational cell (CLKBUF_X3) with drive strength X3
*******************************************************************************************/

cell (CLKBUF_X3) {

	area               	: 0.798000;

	cell_leakage_power 	: 12049.185000;

	leakage_power () {
		when      	: "!A";
		value      	: 13920.780000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 10177.590000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000505;
		fall_capacitance	: 0.000484;
		rise_capacitance	: 0.000526;
		fall_capacitance_range		(0.000409, 0.000559);
		rise_capacitance_range		(0.000436, 0.000595);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.038400;
		max_transition		: 0.960000;
		function		: "A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X3) {
				values ("0.038854,0.045887,0.052529,0.063772,0.083326,0.119829", \
				        "0.042695,0.049724,0.056408,0.067591,0.087132,0.123691", \
				        "0.050797,0.057784,0.064493,0.075746,0.095317,0.131752", \
				        "0.065501,0.072855,0.079701,0.091118,0.110801,0.147136", \
				        "0.085863,0.094243,0.101923,0.114484,0.135067,0.171961", \
				        "0.114949,0.124561,0.133519,0.147587,0.170103,0.208080", \
				        "0.159739,0.170958,0.181614,0.198350,0.224287,0.265510", \
				        "0.233052,0.246429,0.259136,0.279891,0.311758,0.360640");
			}
			cell_rise(Timing_X3) {
				values ("0.029260,0.037765,0.047121,0.065235,0.101294,0.173255", \
				        "0.032702,0.041164,0.050522,0.068490,0.104461,0.176504", \
				        "0.038796,0.047289,0.056548,0.074517,0.110410,0.182330", \
				        "0.046111,0.055141,0.064512,0.082467,0.118335,0.190141", \
				        "0.052957,0.063201,0.072930,0.091039,0.126531,0.198219", \
				        "0.056238,0.068336,0.079616,0.098439,0.133902,0.205293", \
				        "0.049215,0.063368,0.077269,0.099299,0.136210,0.207720", \
				        "0.018087,0.034504,0.051032,0.078807,0.122183,0.195991");
			}
			fall_transition(Timing_X3) {
				values ("0.007984,0.011322,0.015042,0.022029,0.036142,0.065929", \
				        "0.007992,0.011319,0.015050,0.022013,0.036157,0.065914", \
				        "0.008010,0.011380,0.015073,0.022074,0.036166,0.065924", \
				        "0.009442,0.012460,0.015861,0.022546,0.036415,0.066015", \
				        "0.012354,0.015477,0.018818,0.025291,0.038100,0.066621", \
				        "0.016549,0.019874,0.023331,0.029733,0.041846,0.068663", \
				        "0.023214,0.026852,0.030655,0.037422,0.049391,0.074079", \
				        "0.034725,0.038801,0.043226,0.050926,0.064075,0.087901");
			}
			rise_transition(Timing_X3) {
				values ("0.007963,0.014172,0.022207,0.039136,0.073275,0.141593", \
				        "0.007956,0.014177,0.022222,0.039098,0.073271,0.141605", \
				        "0.008333,0.014350,0.022311,0.039155,0.073324,0.141641", \
				        "0.009718,0.015270,0.022820,0.039210,0.073362,0.141648", \
				        "0.012040,0.017433,0.024170,0.039801,0.073451,0.141648", \
				        "0.015741,0.021825,0.027995,0.041880,0.074070,0.141915", \
				        "0.022038,0.028989,0.036052,0.048516,0.077407,0.143540", \
				        "0.033330,0.040541,0.049081,0.063549,0.088938,0.149576");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X3) {
				values ("0.002396,0.001141,-0.000315,-0.003230,-0.009050,-0.020714", \
				        "0.002391,0.001133,-0.000320,-0.003233,-0.009047,-0.020720", \
				        "0.002431,0.001153,-0.000299,-0.003203,-0.009020,-0.020662", \
				        "0.002616,0.001297,-0.000190,-0.003084,-0.008887,-0.020486", \
				        "0.003046,0.001639,0.000110,-0.002818,-0.008636,-0.020281", \
				        "0.003915,0.002400,0.000785,-0.002213,-0.008064,-0.019740", \
				        "0.005719,0.004067,0.002340,-0.000811,-0.006751,-0.018484", \
				        "0.009476,0.007705,0.005805,0.002392,-0.003786,-0.015658");
			}
			rise_power(Power_X3) {
				values ("0.002115,0.003334,0.004808,0.007738,0.013571,0.025196", \
				        "0.002123,0.003334,0.004809,0.007729,0.013559,0.025193", \
				        "0.002166,0.003358,0.004809,0.007730,0.013558,0.025183", \
				        "0.002299,0.003466,0.004905,0.007804,0.013627,0.025247", \
				        "0.002628,0.003760,0.005173,0.008049,0.013830,0.025436", \
				        "0.003432,0.004492,0.005874,0.008697,0.014438,0.026006", \
				        "0.005261,0.006171,0.007478,0.010239,0.015905,0.027390", \
				        "0.009147,0.009819,0.010968,0.013583,0.019112,0.030452");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATETST_X1
 Cell Description	: Pos.edge clock gating cell with pre scan, drive strength X1
*******************************************************************************************/

cell (CLKGATETST_X1) {

	statetable ("CK E SE","IQ") {
	     table : "L L L : - : L ,\
	              L L H : - : H ,\
	              L H L : - : H ,\
	              L H H : - : H ,\
	              H - - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge_precontrol;

	area               	: 3.990000;

	cell_leakage_power 	: 47633.186667;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001442;
		fall_capacitance	: 0.001373;
		rise_capacitance	: 0.001512;
		fall_capacitance_range		(0.001259, 0.001483);
		rise_capacitance_range		(0.001307, 0.001601);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.121880;

		internal_power () {

			when      	: "!E & !GCK & !SE";

			power(Hidden_Power_Clk) {
				values ("0.003058,0.003555,0.004534,0.006766,0.011587");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.001097;
		fall_capacitance	: 0.001044;
		rise_capacitance	: 0.001151;
		fall_capacitance_range		(0.000928, 0.001199);
		rise_capacitance_range		(0.001018, 0.001292);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.066758,-0.076941,-0.088439,-0.109374,-0.159412", \
				        "-0.100634,-0.109032,-0.122297,-0.145449,-0.185295", \
				        "-0.125963,-0.132335,-0.142657,-0.167484,-0.211695", \
				        "-0.163398,-0.168789,-0.181267,-0.203057,-0.247569", \
				        "-0.226843,-0.231252,-0.245114,-0.264678,-0.311315");
			}
			rise_constraint(Hold) {
				values ("-0.085243,-0.068454,-0.067559,-0.076197,-0.107645", \
				        "-0.112290,-0.095404,-0.094440,-0.103913,-0.135078", \
				        "-0.120145,-0.103553,-0.102666,-0.111745,-0.143068", \
				        "-0.122890,-0.106359,-0.105453,-0.114316,-0.145661", \
				        "-0.112375,-0.095900,-0.095650,-0.103648,-0.134965");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.087198,0.090388,0.103133,0.130367,0.185688", \
				        "0.121398,0.124726,0.136965,0.163648,0.218555", \
				        "0.145936,0.148298,0.160032,0.186972,0.241337", \
				        "0.187314,0.188737,0.200108,0.226208,0.280243", \
				        "0.254296,0.253976,0.265322,0.290585,0.343625");
			}
			rise_constraint(Setup) {
				values ("0.125555,0.111589,0.137474,0.165846,0.211346", \
				        "0.147436,0.157278,0.153885,0.193059,0.258773", \
				        "0.156157,0.163447,0.165514,0.196401,0.259458", \
				        "0.158967,0.150542,0.162513,0.212930,0.269266", \
				        "0.152204,0.144922,0.156504,0.202625,0.232095");
			}
		}

		internal_power () {

			when      	: "!CK & GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003139,0.003099,0.003066,0.003066,0.003324,0.004250,0.006629,0.011854");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003140,0.003102,0.003065,0.003077,0.003332,0.004247,0.006618,0.011846");
			}

		}
	}

	pin (SE) {

		direction		: input;
		clock_gate_test_pin	: true;
		capacitance		: 0.001094;
		fall_capacitance	: 0.000979;
		rise_capacitance	: 0.001208;
		fall_capacitance_range		(0.000833, 0.001225);
		rise_capacitance_range		(0.000992, 0.001390);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.049959,-0.059617,-0.070608,-0.095256,-0.138638", \
				        "-0.092125,-0.100260,-0.113271,-0.135928,-0.180047", \
				        "-0.121650,-0.127891,-0.138086,-0.157845,-0.206388", \
				        "-0.163398,-0.168789,-0.181267,-0.203057,-0.247569", \
				        "-0.236172,-0.240845,-0.250037,-0.275021,-0.311315");
			}
			rise_constraint(Hold) {
				values ("-0.079254,-0.062383,-0.061274,-0.070121,-0.101642", \
				        "-0.097889,-0.081555,-0.080138,-0.089597,-0.120662", \
				        "-0.100677,-0.084322,-0.083034,-0.092087,-0.123580", \
				        "-0.095460,-0.079197,-0.078298,-0.087207,-0.118353", \
				        "-0.071586,-0.055102,-0.054428,-0.062273,-0.093290");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.071309,0.074650,0.087295,0.114594,0.169861", \
				        "0.112413,0.115618,0.127979,0.154668,0.209493", \
				        "0.140604,0.143145,0.155060,0.181599,0.235946", \
				        "0.186433,0.187972,0.199203,0.225012,0.278702", \
				        "0.262583,0.262372,0.272769,0.298095,0.350523");
			}
			rise_constraint(Setup) {
				values ("0.117156,0.111589,0.137474,0.147022,0.211347", \
				        "0.130417,0.139734,0.153885,0.174015,0.216785", \
				        "0.138903,0.127891,0.147228,0.177123,0.217002", \
				        "0.132384,0.132295,0.143759,0.173436,0.225873", \
				        "0.114886,0.106552,0.117122,0.161257,0.186827");
			}
		}

		internal_power () {

			when      	: "!CK & !E & GCK";

			power(Hidden_Power_Data) {
				values ("0.002061,0.002037,0.002065,0.002223,0.002726,0.004000,0.006890,0.013028");
			}

		}

		internal_power () {

			when      	: "!CK & !E & !GCK";

			power(Hidden_Power_Data) {
				values ("0.002059,0.002039,0.002073,0.002233,0.002732,0.004005,0.006892,0.013029");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		state_function		: "(IQ & CK)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.030674,0.033892,0.039597,0.049853,0.069110,0.106967", \
				        "0.034517,0.037742,0.043454,0.053713,0.072971,0.110834", \
				        "0.042013,0.045309,0.051066,0.061385,0.080669,0.118528", \
				        "0.052594,0.056309,0.062714,0.073540,0.093024,0.130911", \
				        "0.067069,0.071396,0.078670,0.090445,0.110753,0.148926", \
				        "0.087471,0.092732,0.101649,0.115420,0.137631,0.176644", \
				        "0.117880,0.124479,0.135360,0.152555,0.178875,0.221546", \
				        "0.164232,0.172761,0.186722,0.208907,0.242720,0.293939");
			}
			cell_rise(Timing_X1) {
				values ("0.042199,0.049801,0.064642,0.094171,0.153014,0.270446", \
				        "0.045112,0.052687,0.067467,0.097101,0.155945,0.273395", \
				        "0.050673,0.058214,0.072918,0.102187,0.161012,0.278462", \
				        "0.057141,0.064731,0.079781,0.109076,0.167645,0.285049", \
				        "0.064591,0.072299,0.087103,0.116508,0.175200,0.292520", \
				        "0.071237,0.079614,0.094968,0.124618,0.183127,0.300426", \
				        "0.071869,0.082122,0.099567,0.130569,0.190333,0.308188", \
				        "0.056812,0.069675,0.091807,0.128016,0.190892,0.312389");
			}
			fall_transition(Timing_X1) {
				values ("0.007515,0.009376,0.013077,0.020558,0.036461,0.068861", \
				        "0.007481,0.009392,0.013075,0.020576,0.036427,0.068872", \
				        "0.007853,0.009678,0.013274,0.020656,0.036491,0.068869", \
				        "0.009334,0.011081,0.014618,0.021547,0.036800,0.068932", \
				        "0.011437,0.013266,0.016688,0.023286,0.037928,0.069265", \
				        "0.014929,0.016953,0.020576,0.027246,0.040683,0.070409", \
				        "0.020713,0.023108,0.027317,0.034569,0.047667,0.075452", \
				        "0.030707,0.033689,0.038862,0.047632,0.062023,0.088868");
			}
			rise_transition(Timing_X1) {
				values ("0.017690,0.024260,0.037865,0.065702,0.121463,0.232949", \
				        "0.017678,0.024252,0.037877,0.065713,0.121468,0.232961", \
				        "0.017795,0.024324,0.037900,0.065655,0.121446,0.232963", \
				        "0.018264,0.024712,0.038145,0.065708,0.121458,0.232938", \
				        "0.019270,0.025374,0.038489,0.066025,0.121636,0.232964", \
				        "0.022267,0.027776,0.040061,0.066859,0.122051,0.233255", \
				        "0.028476,0.034134,0.045180,0.070308,0.124698,0.234505", \
				        "0.038381,0.045578,0.057844,0.080406,0.131731,0.241494");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005237,0.004996,0.004512,0.003537,0.001595,-0.002273", \
				        "0.005255,0.005015,0.004531,0.003556,0.001615,-0.002253", \
				        "0.005394,0.005154,0.004669,0.003694,0.001753,-0.002115", \
				        "0.005813,0.005570,0.005096,0.004126,0.002183,-0.001686", \
				        "0.006853,0.006606,0.006118,0.005141,0.003204,-0.000668", \
				        "0.009276,0.009020,0.008532,0.007557,0.005610,0.001731", \
				        "0.014709,0.014438,0.013944,0.012951,0.010997,0.007107", \
				        "0.026311,0.026015,0.025472,0.024438,0.022451,0.018533");
			}
			rise_power(Power_X1) {
				values ("0.005253,0.005501,0.005988,0.006964,0.008914,0.012798", \
				        "0.005237,0.005482,0.005966,0.006955,0.008905,0.012790", \
				        "0.005330,0.005573,0.006066,0.007035,0.008982,0.012867", \
				        "0.005657,0.005898,0.006393,0.007365,0.009311,0.013196", \
				        "0.006654,0.006892,0.007373,0.008352,0.010284,0.014165", \
				        "0.009122,0.009356,0.009843,0.010809,0.012727,0.016600", \
				        "0.014621,0.014848,0.015327,0.016282,0.018191,0.022046", \
				        "0.026253,0.026467,0.026886,0.027822,0.029708,0.033531");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATETST_X2
 Cell Description	: Pos.edge clock gating cell with pre scan, drive strength X2
*******************************************************************************************/

cell (CLKGATETST_X2) {

	statetable ("CK E SE","IQ") {
	     table : "L L L : - : L ,\
	              L L H : - : H ,\
	              L H L : - : H ,\
	              L H H : - : H ,\
	              H - - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge_precontrol;

	area               	: 3.990000;

	cell_leakage_power 	: 50935.055000;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001442;
		fall_capacitance	: 0.001373;
		rise_capacitance	: 0.001512;
		fall_capacitance_range		(0.001260, 0.001483);
		rise_capacitance_range		(0.001308, 0.001601);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.129692;

		internal_power () {

			when      	: "!E & !GCK & !SE";

			power(Hidden_Power_Clk) {
				values ("0.003056,0.003553,0.004532,0.006764,0.011586");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.001097;
		fall_capacitance	: 0.001044;
		rise_capacitance	: 0.001151;
		fall_capacitance_range		(0.000928, 0.001199);
		rise_capacitance_range		(0.001018, 0.001292);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.067650,-0.074342,-0.086353,-0.109013,-0.155792", \
				        "-0.100237,-0.109441,-0.118970,-0.144083,-0.191355", \
				        "-0.124265,-0.131431,-0.142650,-0.165122,-0.211759", \
				        "-0.163629,-0.169909,-0.178975,-0.203697,-0.251594", \
				        "-0.227255,-0.232609,-0.243406,-0.261902,-0.312811");
			}
			rise_constraint(Hold) {
				values ("-0.085121,-0.068454,-0.067559,-0.076197,-0.107645", \
				        "-0.112290,-0.095404,-0.094440,-0.103913,-0.135078", \
				        "-0.120021,-0.103427,-0.102666,-0.111745,-0.143068", \
				        "-0.122890,-0.106359,-0.105453,-0.114316,-0.145661", \
				        "-0.112375,-0.095900,-0.095251,-0.103648,-0.134965");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.087198,0.090388,0.103133,0.130367,0.185688", \
				        "0.121398,0.124726,0.136965,0.163648,0.218555", \
				        "0.145936,0.148298,0.160032,0.186972,0.241337", \
				        "0.187440,0.188737,0.200108,0.226208,0.280243", \
				        "0.254296,0.253976,0.265322,0.290721,0.343625");
			}
			rise_constraint(Setup) {
				values ("0.121983,0.117434,0.139597,0.179329,0.238627", \
				        "0.151050,0.144354,0.154906,0.205737,0.243676", \
				        "0.158608,0.166813,0.165403,0.189129,0.243503", \
				        "0.159219,0.151749,0.178975,0.203697,0.251594", \
				        "0.148299,0.160994,0.169875,0.189763,0.256388");
			}
		}

		internal_power () {

			when      	: "!CK & GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003139,0.003099,0.003066,0.003066,0.003324,0.004250,0.006629,0.011854");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003140,0.003102,0.003065,0.003077,0.003332,0.004247,0.006618,0.011846");
			}

		}
	}

	pin (SE) {

		direction		: input;
		clock_gate_test_pin	: true;
		capacitance		: 0.001094;
		fall_capacitance	: 0.000979;
		rise_capacitance	: 0.001208;
		fall_capacitance_range		(0.000833, 0.001225);
		rise_capacitance_range		(0.000992, 0.001390);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.050932,-0.061414,-0.073042,-0.094949,-0.140260", \
				        "-0.091769,-0.100712,-0.109987,-0.134597,-0.180890", \
				        "-0.119972,-0.127008,-0.138099,-0.160321,-0.201177", \
				        "-0.163629,-0.169909,-0.178975,-0.203697,-0.246186", \
				        "-0.231900,-0.237384,-0.248308,-0.272208,-0.312811");
			}
			rise_constraint(Hold) {
				values ("-0.079132,-0.062383,-0.061274,-0.070121,-0.101642", \
				        "-0.097766,-0.081555,-0.080138,-0.089597,-0.120662", \
				        "-0.100553,-0.084196,-0.083034,-0.092087,-0.123580", \
				        "-0.095460,-0.079069,-0.078298,-0.087074,-0.118353", \
				        "-0.071456,-0.055102,-0.054428,-0.062137,-0.093290");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.071309,0.074650,0.087295,0.114594,0.169861", \
				        "0.112413,0.115618,0.127979,0.154668,0.209493", \
				        "0.140604,0.143145,0.155060,0.181599,0.235946", \
				        "0.186433,0.187972,0.199203,0.225012,0.278702", \
				        "0.262583,0.262372,0.272769,0.298095,0.350523");
			}
			rise_constraint(Setup) {
				values ("0.113624,0.117434,0.139597,0.160578,0.217918", \
				        "0.134112,0.126897,0.154906,0.167796,0.243676", \
				        "0.132851,0.131431,0.147200,0.189129,0.243503", \
				        "0.132758,0.133589,0.160304,0.164349,0.251594", \
				        "0.111143,0.103702,0.130658,0.148540,0.211249");
			}
		}

		internal_power () {

			when      	: "!CK & !E & GCK";

			power(Hidden_Power_Data) {
				values ("0.002061,0.002037,0.002065,0.002223,0.002726,0.004000,0.006890,0.013028");
			}

		}

		internal_power () {

			when      	: "!CK & !E & !GCK";

			power(Hidden_Power_Data) {
				values ("0.002059,0.002039,0.002073,0.002233,0.002732,0.004005,0.006892,0.013029");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		state_function		: "(IQ & CK)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.028448,0.033803,0.039631,0.049815,0.068555,0.105061", \
				        "0.032276,0.037621,0.043468,0.053656,0.072397,0.108914", \
				        "0.039813,0.045274,0.051184,0.061422,0.080184,0.116694", \
				        "0.050391,0.056645,0.063203,0.073957,0.092955,0.129471", \
				        "0.064698,0.072010,0.079587,0.091407,0.111319,0.148157", \
				        "0.084965,0.093778,0.102901,0.116851,0.138773,0.176580", \
				        "0.115072,0.126025,0.136995,0.154443,0.180602,0.222154", \
				        "0.160999,0.174939,0.189132,0.211245,0.244689,0.294911");
			}
			cell_rise(Timing_X2) {
				values ("0.035738,0.047049,0.061259,0.089255,0.144940,0.256122", \
				        "0.038688,0.050157,0.064241,0.092033,0.147893,0.259081", \
				        "0.044479,0.055704,0.069772,0.097477,0.153167,0.264372", \
				        "0.051364,0.062753,0.077097,0.104913,0.160351,0.271479", \
				        "0.059032,0.070881,0.085034,0.112909,0.168466,0.279493", \
				        "0.065185,0.078732,0.093668,0.121709,0.177125,0.288093", \
				        "0.064848,0.081397,0.098923,0.128610,0.185107,0.296617", \
				        "0.048982,0.069063,0.091114,0.126781,0.186717,0.301530");
			}
			fall_transition(Timing_X2) {
				values ("0.005934,0.008788,0.012372,0.019520,0.034758,0.065687", \
				        "0.005893,0.008795,0.012368,0.019513,0.034735,0.065677", \
				        "0.006343,0.009054,0.012559,0.019618,0.034790,0.065689", \
				        "0.007895,0.010557,0.013995,0.020538,0.034989,0.065821", \
				        "0.010053,0.012876,0.016244,0.022535,0.036301,0.066256", \
				        "0.013516,0.016672,0.020274,0.026692,0.039315,0.067606", \
				        "0.019231,0.022963,0.027143,0.034234,0.046752,0.072882", \
				        "0.029152,0.033781,0.038828,0.047323,0.061167,0.086608");
			}
			rise_transition(Timing_X2) {
				values ("0.011709,0.020776,0.033463,0.059674,0.112430,0.218011", \
				        "0.011660,0.020784,0.033436,0.059655,0.112422,0.218015", \
				        "0.011833,0.020825,0.033500,0.059705,0.112470,0.218042", \
				        "0.012555,0.021333,0.033797,0.059746,0.112435,0.218039", \
				        "0.014116,0.022215,0.034263,0.060075,0.112647,0.218016", \
				        "0.017374,0.025110,0.036124,0.060921,0.113105,0.218348", \
				        "0.022677,0.031734,0.042015,0.064692,0.115675,0.219678", \
				        "0.031658,0.042647,0.054838,0.075913,0.122985,0.226581");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005561,0.004840,0.003873,0.001930,-0.001959,-0.009695", \
				        "0.005576,0.004853,0.003888,0.001942,-0.001944,-0.009680", \
				        "0.005718,0.004990,0.004026,0.002083,-0.001805,-0.009540", \
				        "0.006153,0.005412,0.004452,0.002504,-0.001362,-0.009101", \
				        "0.007223,0.006457,0.005475,0.003520,-0.000363,-0.008111", \
				        "0.009707,0.008899,0.007898,0.005939,0.002042,-0.005718", \
				        "0.015279,0.014402,0.013364,0.011357,0.007430,-0.000354", \
				        "0.027159,0.026208,0.025069,0.022955,0.018945,0.011094");
			}
			rise_power(Power_X2) {
				values ("0.005576,0.006315,0.007299,0.009252,0.013136,0.020896", \
				        "0.005569,0.006322,0.007287,0.009229,0.013127,0.020887", \
				        "0.005658,0.006392,0.007369,0.009309,0.013192,0.020956", \
				        "0.006018,0.006733,0.007702,0.009643,0.013527,0.021285", \
				        "0.007027,0.007730,0.008690,0.010627,0.014492,0.022243", \
				        "0.009528,0.010216,0.011175,0.013089,0.016921,0.024654", \
				        "0.015137,0.015793,0.016717,0.018599,0.022418,0.030114", \
				        "0.027026,0.027605,0.028451,0.030294,0.034052,0.041679");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATETST_X4
 Cell Description	: Pos.edge clock gating cell with pre scan, drive strength X4
*******************************************************************************************/

cell (CLKGATETST_X4) {

	statetable ("CK E SE","IQ") {
	     table : "L L L : - : L ,\
	              L L H : - : H ,\
	              L H L : - : H ,\
	              L H H : - : H ,\
	              H - - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge_precontrol;

	area               	: 3.990000;

	cell_leakage_power 	: 62204.940000;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001637;
		fall_capacitance	: 0.001546;
		rise_capacitance	: 0.001729;
		fall_capacitance_range		(0.001343, 0.001685);
		rise_capacitance_range		(0.001514, 0.001821);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;

		internal_power () {

			when      	: "!E & !GCK & !SE";

			power(Hidden_Power_Clk) {
				values ("0.003062,0.003552,0.004531,0.006764,0.011585");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.001097;
		fall_capacitance	: 0.001044;
		rise_capacitance	: 0.001151;
		fall_capacitance_range		(0.000928, 0.001199);
		rise_capacitance_range		(0.001018, 0.001292);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.066978,-0.077143,-0.089235,-0.109808,-0.157080", \
				        "-0.103100,-0.107261,-0.121229,-0.143999,-0.186245", \
				        "-0.126490,-0.132985,-0.144282,-0.164170,-0.210685", \
				        "-0.164631,-0.170265,-0.179410,-0.201055,-0.248230", \
				        "-0.225960,-0.235474,-0.246460,-0.266349,-0.305116");
			}
			rise_constraint(Hold) {
				values ("-0.088298,-0.071676,-0.070827,-0.079817,-0.110920", \
				        "-0.115367,-0.098773,-0.097604,-0.107297,-0.138373", \
				        "-0.123245,-0.106820,-0.105981,-0.115022,-0.146385", \
				        "-0.125910,-0.109674,-0.108686,-0.117639,-0.149022", \
				        "-0.115483,-0.099180,-0.098841,-0.107471,-0.138414");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.088665,0.091875,0.104642,0.132177,0.187735", \
				        "0.122998,0.125974,0.138611,0.165470,0.220751", \
				        "0.147548,0.149807,0.161689,0.188807,0.243548", \
				        "0.189075,0.190523,0.201919,0.228201,0.282483", \
				        "0.256109,0.255944,0.267184,0.292906,0.346068");
			}
			rise_constraint(Setup) {
				values ("0.133679,0.137322,0.142345,0.170538,0.239515", \
				        "0.153785,0.146442,0.174998,0.195990,0.285179", \
				        "0.160748,0.168281,0.185136,0.216806,0.284405", \
				        "0.160231,0.170265,0.179410,0.230468,0.291293", \
				        "0.156452,0.159256,0.168206,0.214982,0.271412");
			}
		}

		internal_power () {

			when      	: "!CK & GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003139,0.003099,0.003066,0.003066,0.003324,0.004250,0.006629,0.011854");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003140,0.003102,0.003065,0.003077,0.003332,0.004247,0.006619,0.011846");
			}

		}
	}

	pin (SE) {

		direction		: input;
		clock_gate_test_pin	: true;
		capacitance		: 0.001094;
		fall_capacitance	: 0.000979;
		rise_capacitance	: 0.001208;
		fall_capacitance_range		(0.000833, 0.001225);
		rise_capacitance_range		(0.000992, 0.001390);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.050303,-0.059948,-0.071532,-0.095793,-0.136471", \
				        "-0.090429,-0.098554,-0.112268,-0.134546,-0.181038", \
				        "-0.117925,-0.128573,-0.139743,-0.159385,-0.200154", \
				        "-0.164631,-0.170265,-0.179410,-0.201055,-0.248230", \
				        "-0.230594,-0.240237,-0.251351,-0.271486,-0.316350");
			}
			rise_constraint(Hold) {
				values ("-0.082309,-0.065604,-0.064668,-0.073353,-0.105053", \
				        "-0.100843,-0.084799,-0.083429,-0.092851,-0.123820", \
				        "-0.103653,-0.087464,-0.086604,-0.095101,-0.126897", \
				        "-0.098479,-0.082384,-0.081531,-0.090397,-0.121574", \
				        "-0.074823,-0.058513,-0.057620,-0.065960,-0.096883");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.072898,0.076137,0.088803,0.116404,0.171908", \
				        "0.114013,0.117115,0.129625,0.156490,0.211690", \
				        "0.142340,0.144653,0.156845,0.183433,0.238158", \
				        "0.188069,0.189630,0.201014,0.227005,0.281083", \
				        "0.264526,0.264208,0.274896,0.300280,0.353110");
			}
			rise_constraint(Setup) {
				values ("0.117004,0.120128,0.142345,0.170538,0.239515", \
				        "0.136890,0.146442,0.157075,0.195990,0.243523", \
				        "0.143619,0.150633,0.148821,0.178525,0.242279", \
				        "0.142633,0.134031,0.160784,0.191250,0.248230", \
				        "0.110113,0.121147,0.129079,0.173889,0.226474");
			}
		}

		internal_power () {

			when      	: "!CK & !E & GCK";

			power(Hidden_Power_Data) {
				values ("0.002061,0.002037,0.002065,0.002223,0.002726,0.004000,0.006890,0.013028");
			}

		}

		internal_power () {

			when      	: "!CK & !E & !GCK";

			power(Hidden_Power_Data) {
				values ("0.002059,0.002040,0.002073,0.002233,0.002732,0.004005,0.006892,0.013029");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		state_function		: "(IQ & CK)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.027655,0.034245,0.040142,0.050287,0.068835,0.104751", \
				        "0.031478,0.038022,0.043902,0.054081,0.072614,0.108561", \
				        "0.039079,0.045766,0.051688,0.061912,0.080400,0.116394", \
				        "0.049947,0.057567,0.064120,0.074822,0.093618,0.129529", \
				        "0.064956,0.073833,0.081374,0.093163,0.112786,0.149047", \
				        "0.086932,0.097562,0.106623,0.120382,0.142001,0.179240", \
				        "0.120779,0.133879,0.144725,0.161953,0.187574,0.228495", \
				        "0.174744,0.191231,0.205186,0.226933,0.259729,0.309104");
			}
			cell_rise(Timing_X4) {
				values ("0.031238,0.044308,0.058141,0.085417,0.139725,0.248084", \
				        "0.034285,0.047284,0.061102,0.088352,0.142663,0.251032", \
				        "0.039741,0.052707,0.066486,0.093480,0.147647,0.256025", \
				        "0.045919,0.059070,0.072989,0.100136,0.154165,0.262459", \
				        "0.052161,0.066085,0.079837,0.107011,0.161095,0.269286", \
				        "0.055617,0.071751,0.086312,0.113479,0.167594,0.275688", \
				        "0.050562,0.070027,0.087244,0.116037,0.171059,0.279744", \
				        "0.026007,0.049248,0.070829,0.105772,0.163974,0.275692");
			}
			fall_transition(Timing_X4) {
				values ("0.005400,0.008812,0.012378,0.019377,0.034151,0.064738", \
				        "0.005368,0.008780,0.012407,0.019430,0.034309,0.064719", \
				        "0.005875,0.009025,0.012547,0.019526,0.034304,0.064736", \
				        "0.007457,0.010571,0.013929,0.020414,0.034692,0.064825", \
				        "0.009665,0.012947,0.016309,0.022388,0.035906,0.065262", \
				        "0.013165,0.016823,0.020328,0.026586,0.039086,0.066723", \
				        "0.019017,0.023279,0.027322,0.034132,0.046367,0.072007", \
				        "0.029225,0.034442,0.039275,0.047461,0.060960,0.085796");
			}
			rise_transition(Timing_X4) {
				values ("0.009350,0.019636,0.032038,0.057649,0.109105,0.212003", \
				        "0.009292,0.019618,0.032030,0.057643,0.109110,0.212002", \
				        "0.009571,0.019732,0.032083,0.057670,0.109094,0.212006", \
				        "0.010384,0.020223,0.032416,0.057783,0.109106,0.211988", \
				        "0.012191,0.021170,0.032875,0.058072,0.109320,0.212001", \
				        "0.015353,0.024269,0.034849,0.058946,0.109802,0.212324", \
				        "0.020448,0.031036,0.040913,0.062659,0.112406,0.213793", \
				        "0.029576,0.041977,0.054003,0.074428,0.119664,0.220610");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X4) {
				values ("0.006760,0.005072,0.003137,-0.000754,-0.008529,-0.024004", \
				        "0.006772,0.005078,0.003131,-0.000752,-0.008532,-0.024006", \
				        "0.006948,0.005247,0.003301,-0.000581,-0.008344,-0.023834", \
				        "0.007521,0.005766,0.003835,-0.000056,-0.007816,-0.023297", \
				        "0.008875,0.007044,0.005074,0.001160,-0.006608,-0.022105", \
				        "0.011980,0.010030,0.008007,0.004078,-0.003720,-0.019245", \
				        "0.018879,0.016766,0.014638,0.010601,0.002736,-0.012841", \
				        "0.033515,0.031224,0.028896,0.024618,0.016561,0.000840");
			}
			rise_power(Power_X4) {
				values ("0.006649,0.008365,0.010321,0.014222,0.021993,0.037502", \
				        "0.006653,0.008361,0.010310,0.014206,0.021977,0.037488", \
				        "0.006774,0.008466,0.010417,0.014301,0.022062,0.037576", \
				        "0.007225,0.008880,0.010822,0.014700,0.022459,0.037967", \
				        "0.008486,0.010110,0.012028,0.015887,0.023611,0.039105", \
				        "0.011583,0.013154,0.015054,0.018871,0.026548,0.042002", \
				        "0.018499,0.019975,0.021801,0.025549,0.033182,0.048559", \
				        "0.033157,0.034396,0.036092,0.039745,0.047234,0.062468");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATETST_X8
 Cell Description	: Pos.edge clock gating cell with pre scan, drive strength X8
*******************************************************************************************/

cell (CLKGATETST_X8) {

	statetable ("CK E SE","IQ") {
	     table : "L L L : - : L ,\
	              L L H : - : H ,\
	              L H L : - : H ,\
	              L H H : - : H ,\
	              H - - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge_precontrol;

	area               	: 4.256000;

	cell_leakage_power 	: 83490.515000;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001968;
		fall_capacitance	: 0.001856;
		rise_capacitance	: 0.002080;
		fall_capacitance_range		(0.001619, 0.002006);
		rise_capacitance_range		(0.001850, 0.002175);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;

		internal_power () {

			when      	: "!E & !GCK & !SE";

			power(Hidden_Power_Clk) {
				values ("0.003154,0.003616,0.004579,0.006805,0.011613");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.001146;
		fall_capacitance	: 0.001087;
		rise_capacitance	: 0.001205;
		fall_capacitance_range		(0.000942, 0.001254);
		rise_capacitance_range		(0.001066, 0.001358);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.067191,-0.071633,-0.085638,-0.104782,-0.149424", \
				        "-0.099365,-0.106217,-0.117703,-0.138925,-0.178292", \
				        "-0.118689,-0.127693,-0.136283,-0.159043,-0.197163", \
				        "-0.157134,-0.165173,-0.176079,-0.195823,-0.233992", \
				        "-0.214372,-0.221214,-0.233577,-0.250632,-0.289492");
			}
			rise_constraint(Hold) {
				values ("-0.091354,-0.074526,-0.073467,-0.082144,-0.113103", \
				        "-0.119798,-0.103265,-0.101528,-0.110810,-0.141531", \
				        "-0.129072,-0.112477,-0.111207,-0.120133,-0.150946", \
				        "-0.134844,-0.118090,-0.117091,-0.125745,-0.156585", \
				        "-0.130245,-0.113610,-0.113069,-0.121536,-0.152066");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.087565,0.090264,0.102882,0.130238,0.185552", \
				        "0.121151,0.123728,0.135953,0.162737,0.217731", \
				        "0.143952,0.145784,0.157610,0.184220,0.238849", \
				        "0.182532,0.183381,0.194677,0.220627,0.274781", \
				        "0.243678,0.242826,0.253754,0.278978,0.332129");
			}
			rise_constraint(Setup) {
				values ("0.133960,0.131853,0.156482,0.188874,0.247229", \
				        "0.162785,0.158493,0.171495,0.214552,0.292747", \
				        "0.170128,0.180673,0.181695,0.216467,0.291863", \
				        "0.170345,0.183302,0.194712,0.230141,0.298532", \
				        "0.177266,0.173549,0.184649,0.214674,0.300718");
			}
		}

		internal_power () {

			when      	: "!CK & GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003297,0.003236,0.003208,0.003211,0.003482,0.004465,0.006999,0.012534");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK & !SE";

			power(Hidden_Power_Data) {
				values ("0.003299,0.003252,0.003213,0.003222,0.003491,0.004467,0.006987,0.012520");
			}

		}
	}

	pin (SE) {

		direction		: input;
		clock_gate_test_pin	: true;
		capacitance		: 0.001148;
		fall_capacitance	: 0.001025;
		rise_capacitance	: 0.001271;
		fall_capacitance_range		(0.000857, 0.001291);
		rise_capacitance_range		(0.001039, 0.001469);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.050498,-0.058728,-0.067927,-0.090767,-0.133982", \
				        "-0.090909,-0.097504,-0.108737,-0.129471,-0.167887", \
				        "-0.114403,-0.123278,-0.131741,-0.154258,-0.197163", \
				        "-0.152730,-0.160641,-0.171420,-0.190921,-0.233992", \
				        "-0.219010,-0.225981,-0.233577,-0.255769,-0.289492");
			}
			rise_constraint(Hold) {
				values ("-0.084754,-0.067835,-0.066553,-0.075163,-0.106417", \
				        "-0.104166,-0.087793,-0.086593,-0.095584,-0.126154", \
				        "-0.108365,-0.091738,-0.090810,-0.099426,-0.130491", \
				        "-0.106029,-0.089653,-0.088643,-0.097041,-0.128016", \
				        "-0.088290,-0.071762,-0.070784,-0.078932,-0.109529");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.072165,0.074774,0.087420,0.114723,0.170134", \
				        "0.111674,0.114245,0.126334,0.153106,0.208120", \
				        "0.138000,0.139877,0.152000,0.178191,0.232906", \
				        "0.180645,0.181341,0.192738,0.218500,0.272540", \
				        "0.250670,0.249778,0.260136,0.285259,0.338021");
			}
			rise_constraint(Setup) {
				values ("0.125614,0.131853,0.138771,0.170187,0.247229", \
				        "0.145873,0.141068,0.171495,0.195645,0.271937", \
				        "0.144409,0.145353,0.163530,0.216467,0.291863", \
				        "0.152730,0.147044,0.176079,0.190921,0.277019", \
				        "0.130885,0.135416,0.145506,0.173579,0.255816");
			}
		}

		internal_power () {

			when      	: "!CK & !E & GCK";

			power(Hidden_Power_Data) {
				values ("0.002120,0.002099,0.002125,0.002293,0.002830,0.004195,0.007281,0.013820");
			}

		}

		internal_power () {

			when      	: "!CK & !E & !GCK";

			power(Hidden_Power_Data) {
				values ("0.002120,0.002099,0.002129,0.002305,0.002835,0.004199,0.007283,0.013820");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.102400;
		max_transition		: 0.960000;
		state_function		: "(IQ & CK)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X8) {
				values ("0.030825,0.038208,0.044331,0.054807,0.073716,0.110010", \
				        "0.034638,0.041940,0.048036,0.058505,0.077474,0.113781", \
				        "0.042511,0.049900,0.056013,0.066500,0.085456,0.121753", \
				        "0.054686,0.062942,0.069618,0.080501,0.099602,0.135879", \
				        "0.071720,0.081287,0.088909,0.100896,0.120815,0.157408", \
				        "0.097130,0.108467,0.117558,0.131385,0.153203,0.190765", \
				        "0.137262,0.151164,0.161988,0.179035,0.204766,0.245742", \
				        "0.203484,0.220734,0.234419,0.255871,0.288329,0.337476");
			}
			cell_rise(Timing_X8) {
				values ("0.031368,0.045283,0.059162,0.086414,0.140710,0.249081", \
				        "0.034488,0.048332,0.062065,0.089176,0.143620,0.251980", \
				        "0.039867,0.053645,0.067448,0.094435,0.148737,0.257092", \
				        "0.045897,0.059853,0.073725,0.100844,0.154871,0.263147", \
				        "0.051472,0.066262,0.079941,0.107073,0.161127,0.269310", \
				        "0.053230,0.070318,0.084688,0.111823,0.165795,0.273831", \
				        "0.044310,0.064792,0.081751,0.110218,0.164922,0.273395", \
				        "0.011152,0.035357,0.056507,0.090928,0.148552,0.259623");
			}
			fall_transition(Timing_X8) {
				values ("0.006053,0.009765,0.013443,0.020439,0.035167,0.065787", \
				        "0.006048,0.009725,0.013317,0.020478,0.035183,0.065773", \
				        "0.006330,0.009885,0.013423,0.020557,0.035371,0.065832", \
				        "0.008029,0.011400,0.014713,0.021281,0.035484,0.065832", \
				        "0.010401,0.013927,0.017273,0.023459,0.036994,0.066310", \
				        "0.014100,0.017928,0.021361,0.027683,0.040140,0.067838", \
				        "0.020315,0.024658,0.028513,0.035181,0.047492,0.072989", \
				        "0.030971,0.036153,0.040714,0.048552,0.061829,0.086595");
			}
			rise_transition(Timing_X8) {
				values ("0.009395,0.020499,0.032944,0.058681,0.110106,0.213049", \
				        "0.009391,0.020500,0.032979,0.058673,0.110161,0.213018", \
				        "0.009698,0.020603,0.033042,0.058662,0.110158,0.213023", \
				        "0.010536,0.021076,0.033344,0.058730,0.110165,0.213034", \
				        "0.012438,0.022044,0.033808,0.059052,0.110333,0.213043", \
				        "0.015779,0.025208,0.035747,0.059979,0.110822,0.213367", \
				        "0.021137,0.032218,0.041942,0.063514,0.113279,0.214774", \
				        "0.030750,0.043476,0.055265,0.075387,0.120298,0.221217");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X8) {
				values ("0.010045,0.006401,0.002533,-0.005244,-0.020774,-0.051714", \
				        "0.010046,0.006390,0.002519,-0.005269,-0.020817,-0.051754", \
				        "0.010260,0.006598,0.002725,-0.005064,-0.020588,-0.051514", \
				        "0.011051,0.007266,0.003400,-0.004420,-0.019896,-0.050839", \
				        "0.012885,0.008910,0.004955,-0.002883,-0.018395,-0.049394", \
				        "0.016974,0.012741,0.008674,0.000797,-0.014787,-0.045822", \
				        "0.026008,0.021439,0.017149,0.009030,-0.006684,-0.037861", \
				        "0.045203,0.040254,0.035565,0.026962,0.010826,-0.020687");
			}
			rise_power(Power_X8) {
				values ("0.008948,0.012635,0.016560,0.024381,0.039907,0.070900", \
				        "0.008974,0.012630,0.016537,0.024327,0.039867,0.070863", \
				        "0.009137,0.012763,0.016673,0.024437,0.039967,0.070964", \
				        "0.009738,0.013296,0.017178,0.024935,0.040438,0.071421", \
				        "0.011379,0.014885,0.018710,0.026412,0.041861,0.072821", \
				        "0.015417,0.018808,0.022588,0.030222,0.045567,0.076445", \
				        "0.024503,0.027637,0.031290,0.038787,0.054018,0.084732", \
				        "0.043773,0.046366,0.049774,0.057052,0.072016,0.102445");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATE_X1
 Cell Description	: Pos.edge clock gating cell with drive strength X1
*******************************************************************************************/

cell (CLKGATE_X1) {

	statetable ("CK E","IQ") {
	     table : "L L : - : L ,\
	              L H : - : H ,\
	              H - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge;

	area               	: 3.458000;

	cell_leakage_power 	: 39652.022500;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001396;
		fall_capacitance	: 0.001321;
		rise_capacitance	: 0.001471;
		fall_capacitance_range		(0.001151, 0.001442);
		rise_capacitance_range		(0.001287, 0.001566);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.082817;

		internal_power () {

			when      	: "!E & !GCK";

			power(Hidden_Power_Clk) {
				values ("0.002986,0.003468,0.004427,0.006644,0.011465");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.000699;
		fall_capacitance	: 0.000681;
		rise_capacitance	: 0.000718;
		fall_capacitance_range		(0.000624, 0.000692);
		rise_capacitance_range		(0.000702, 0.000725);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.063724,-0.043213,-0.041184,-0.048176,-0.076227", \
				        "-0.105402,-0.085884,-0.083646,-0.089637,-0.117053", \
				        "-0.139820,-0.120031,-0.117380,-0.121976,-0.148075", \
				        "-0.194990,-0.176768,-0.172054,-0.176469,-0.200318", \
				        "-0.291791,-0.268562,-0.260611,-0.263195,-0.286340");
			}
			rise_constraint(Hold) {
				values ("-0.035498,-0.037475,-0.049080,-0.074904,-0.127156", \
				        "-0.061457,-0.059844,-0.068748,-0.092461,-0.143042", \
				        "-0.072158,-0.068736,-0.077425,-0.099688,-0.149564", \
				        "-0.074950,-0.070780,-0.080238,-0.103287,-0.153504", \
				        "-0.055529,-0.052741,-0.063072,-0.088764,-0.143587");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.065198,0.044786,0.042418,0.050082,0.079812", \
				        "0.107243,0.087169,0.085074,0.092200,0.120937", \
				        "0.142712,0.122406,0.119748,0.126162,0.154125", \
				        "0.200652,0.179301,0.175281,0.180760,0.207000", \
				        "0.298581,0.272473,0.266253,0.270375,0.296921");
			}
			rise_constraint(Setup) {
				values ("0.059518,0.067038,0.079097,0.123515,0.167140", \
				        "0.085164,0.085884,0.112996,0.131319,0.193177", \
				        "0.093387,0.108918,0.124241,0.153321,0.214432", \
				        "0.095167,0.103769,0.120452,0.149303,0.223378", \
				        "0.076928,0.086283,0.093145,0.136439,0.207098");
			}
		}

		internal_power () {

			when      	: "!CK & GCK";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000025,0.000017,0.000008,0.000006,0.000003,-0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000012,0.000008,0.000006,0.000005,0.000002,-0.000002");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		state_function		: "(CK & IQ)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.030972,0.034141,0.039797,0.050005,0.069229,0.107062", \
				        "0.034830,0.038007,0.043677,0.053897,0.073128,0.110963", \
				        "0.042304,0.045548,0.051214,0.061484,0.080730,0.118562", \
				        "0.052890,0.056543,0.062838,0.073636,0.093025,0.130854", \
				        "0.067315,0.071555,0.078783,0.090450,0.110715,0.148830", \
				        "0.087836,0.092992,0.101773,0.115416,0.137492,0.176488", \
				        "0.118345,0.124809,0.135541,0.152619,0.178767,0.221379", \
				        "0.164879,0.173236,0.187001,0.209044,0.242536,0.293660");
			}
			cell_rise(Timing_X1) {
				values ("0.042772,0.050343,0.065219,0.094665,0.153484,0.270867", \
				        "0.045784,0.053335,0.068095,0.097571,0.156398,0.273794", \
				        "0.051269,0.058786,0.073536,0.102840,0.161633,0.279039", \
				        "0.057944,0.065499,0.080274,0.109565,0.168198,0.285578", \
				        "0.065024,0.072676,0.087736,0.117060,0.175634,0.292921", \
				        "0.071708,0.079977,0.095175,0.125005,0.183478,0.300736", \
				        "0.072507,0.082569,0.099703,0.130477,0.190786,0.308584", \
				        "0.057630,0.070244,0.092003,0.127774,0.190644,0.312066");
			}
			fall_transition(Timing_X1) {
				values ("0.007699,0.009586,0.013269,0.020755,0.036686,0.069032", \
				        "0.007688,0.009581,0.013279,0.020759,0.036690,0.069028", \
				        "0.008054,0.009864,0.013443,0.020853,0.036719,0.069030", \
				        "0.009518,0.011241,0.014775,0.021744,0.036910,0.069149", \
				        "0.011626,0.013438,0.016818,0.023422,0.037958,0.069445", \
				        "0.015143,0.017131,0.020702,0.027354,0.040856,0.070670", \
				        "0.020954,0.023318,0.027466,0.034685,0.047940,0.075685", \
				        "0.031041,0.033964,0.039079,0.047744,0.062157,0.088810");
			}
			rise_transition(Timing_X1) {
				values ("0.018392,0.025011,0.038668,0.066431,0.122194,0.233698", \
				        "0.018403,0.025018,0.038656,0.066433,0.122196,0.233697", \
				        "0.018514,0.025079,0.038667,0.066411,0.122192,0.233710", \
				        "0.018981,0.025469,0.038902,0.066492,0.122224,0.233696", \
				        "0.019949,0.026090,0.039247,0.066768,0.122414,0.233725", \
				        "0.022915,0.028452,0.040818,0.067582,0.122840,0.234008", \
				        "0.029166,0.034676,0.045763,0.071003,0.125387,0.235245", \
				        "0.039117,0.046139,0.058196,0.080904,0.132551,0.242264");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005076,0.004836,0.004352,0.003376,0.001436,-0.002433", \
				        "0.005087,0.004847,0.004365,0.003388,0.001449,-0.002420", \
				        "0.005231,0.004991,0.004502,0.003526,0.001587,-0.002282", \
				        "0.005654,0.005412,0.004939,0.003969,0.002015,-0.001854", \
				        "0.006694,0.006447,0.005968,0.004999,0.003068,-0.000806", \
				        "0.009129,0.008874,0.008387,0.007419,0.005472,0.001593", \
				        "0.014589,0.014319,0.013806,0.012820,0.010863,0.006974", \
				        "0.026198,0.025904,0.025357,0.024327,0.022331,0.018414");
			}
			rise_power(Power_X1) {
				values ("0.004875,0.005121,0.005621,0.006585,0.008534,0.012418", \
				        "0.004868,0.005113,0.005600,0.006582,0.008531,0.012416", \
				        "0.004961,0.005205,0.005694,0.006670,0.008618,0.012504", \
				        "0.005288,0.005528,0.006013,0.006990,0.008936,0.012821", \
				        "0.006239,0.006477,0.006977,0.007952,0.009889,0.013771", \
				        "0.008700,0.008935,0.009408,0.010389,0.012318,0.016191", \
				        "0.014196,0.014424,0.014893,0.015852,0.017765,0.021622", \
				        "0.025820,0.026035,0.026479,0.027410,0.029302,0.033126");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATE_X2
 Cell Description	: Pos.edge clock gating cell with drive strength X2
*******************************************************************************************/

cell (CLKGATE_X2) {

	statetable ("CK E","IQ") {
	     table : "L L : - : L ,\
	              L H : - : H ,\
	              H - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge;

	area               	: 3.458000;

	cell_leakage_power 	: 43086.615000;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001423;
		fall_capacitance	: 0.001347;
		rise_capacitance	: 0.001499;
		fall_capacitance_range		(0.001210, 0.001470);
		rise_capacitance_range		(0.001316, 0.001596);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.086724;

		internal_power () {

			when      	: "!E & !GCK";

			power(Hidden_Power_Clk) {
				values ("0.003070,0.003554,0.004499,0.006704,0.011511");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.000698;
		fall_capacitance	: 0.000679;
		rise_capacitance	: 0.000716;
		fall_capacitance_range		(0.000623, 0.000691);
		rise_capacitance_range		(0.000701, 0.000724);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.062196,-0.041494,-0.039257,-0.046318,-0.074198", \
				        "-0.103992,-0.083830,-0.081921,-0.087675,-0.114653", \
				        "-0.137485,-0.118763,-0.115318,-0.119930,-0.145974", \
				        "-0.194386,-0.173963,-0.170705,-0.174441,-0.197629", \
				        "-0.288990,-0.265580,-0.259100,-0.259275,-0.282858");
			}
			rise_constraint(Hold) {
				values ("-0.035131,-0.036608,-0.048074,-0.073224,-0.124836", \
				        "-0.061211,-0.058970,-0.067609,-0.090769,-0.140845", \
				        "-0.071786,-0.067856,-0.076150,-0.097984,-0.147352", \
				        "-0.074572,-0.070142,-0.078945,-0.101559,-0.151403", \
				        "-0.055270,-0.051823,-0.061875,-0.087125,-0.141575");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.064587,0.043671,0.041035,0.048272,0.077492", \
				        "0.106505,0.085922,0.083556,0.090378,0.118740", \
				        "0.141968,0.121275,0.118218,0.124196,0.151637", \
				        "0.200023,0.177898,0.173729,0.178767,0.204759", \
				        "0.297934,0.271161,0.264524,0.268190,0.293903");
			}
			rise_constraint(Setup) {
				values ("0.058020,0.065197,0.087502,0.125982,0.180924", \
				        "0.086012,0.091468,0.102132,0.132715,0.206170", \
				        "0.096737,0.095542,0.111906,0.153527,0.205465", \
				        "0.099648,0.105859,0.124034,0.167066,0.212493", \
				        "0.080154,0.084145,0.102253,0.130496,0.215182");
			}
		}

		internal_power () {

			when      	: "!CK & GCK";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000025,0.000017,0.000008,0.000006,0.000003,-0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000012,0.000008,0.000006,0.000005,0.000002,-0.000002");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		state_function		: "(CK & IQ)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.028256,0.033635,0.039472,0.049645,0.068341,0.104697", \
				        "0.032091,0.037446,0.043294,0.053469,0.072167,0.108533", \
				        "0.039591,0.045095,0.050975,0.061199,0.079914,0.116270", \
				        "0.050124,0.056433,0.062980,0.073744,0.092695,0.129096", \
				        "0.064380,0.071748,0.079309,0.091194,0.111006,0.147720", \
				        "0.084597,0.093484,0.102628,0.116570,0.138465,0.176229", \
				        "0.114669,0.125711,0.136710,0.154264,0.180342,0.221924", \
				        "0.160627,0.174681,0.188945,0.211183,0.244698,0.294965");
			}
			cell_rise(Timing_X2) {
				values ("0.035118,0.046468,0.060754,0.088673,0.144361,0.255478", \
				        "0.038216,0.049507,0.063674,0.091600,0.147381,0.258530", \
				        "0.043947,0.055209,0.069308,0.097083,0.152722,0.263877", \
				        "0.050951,0.062274,0.076587,0.104330,0.159847,0.270938", \
				        "0.058263,0.070187,0.084695,0.112469,0.167840,0.278822", \
				        "0.064297,0.077962,0.092880,0.121187,0.176609,0.287493", \
				        "0.063782,0.080427,0.097900,0.127557,0.184393,0.295853", \
				        "0.047622,0.067710,0.089721,0.125258,0.185140,0.299952");
			}
			fall_transition(Timing_X2) {
				values ("0.005823,0.008687,0.012269,0.019392,0.034486,0.065489", \
				        "0.005778,0.008667,0.012254,0.019383,0.034509,0.065486", \
				        "0.006251,0.008960,0.012440,0.019479,0.034512,0.065494", \
				        "0.007792,0.010455,0.013866,0.020449,0.034905,0.065509", \
				        "0.009928,0.012767,0.016112,0.022774,0.035996,0.065987", \
				        "0.013380,0.016560,0.020139,0.026556,0.039215,0.067327", \
				        "0.019093,0.022829,0.027012,0.034090,0.046653,0.072656", \
				        "0.029002,0.033663,0.038731,0.047165,0.061081,0.086450");
			}
			rise_transition(Timing_X2) {
				values ("0.011362,0.020447,0.033153,0.059338,0.112107,0.217623", \
				        "0.011360,0.020447,0.033142,0.059337,0.112096,0.217599", \
				        "0.011549,0.020535,0.033166,0.059331,0.112103,0.217622", \
				        "0.012250,0.021030,0.033465,0.059354,0.112110,0.217618", \
				        "0.013855,0.021939,0.033963,0.059705,0.112248,0.217585", \
				        "0.017162,0.024872,0.035908,0.060667,0.112713,0.217931", \
				        "0.022400,0.031425,0.041674,0.064323,0.115346,0.219275", \
				        "0.031171,0.042115,0.054304,0.075426,0.122663,0.226201");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005585,0.004865,0.003901,0.001954,-0.001929,-0.009669", \
				        "0.005587,0.004867,0.003903,0.001957,-0.001925,-0.009664", \
				        "0.005735,0.005010,0.004044,0.002099,-0.001783,-0.009522", \
				        "0.006174,0.005433,0.004478,0.002542,-0.001338,-0.009078", \
				        "0.007244,0.006478,0.005503,0.003562,-0.000316,-0.008066", \
				        "0.009736,0.008926,0.007927,0.005975,0.002083,-0.005679", \
				        "0.015321,0.014447,0.013393,0.011387,0.007470,-0.000308", \
				        "0.027211,0.026259,0.025115,0.023005,0.019004,0.011169");
			}
			rise_power(Power_X2) {
				values ("0.005113,0.005851,0.006842,0.008782,0.012693,0.020454", \
				        "0.005119,0.005846,0.006825,0.008772,0.012687,0.020449", \
				        "0.005215,0.005941,0.006913,0.008859,0.012755,0.020517", \
				        "0.005545,0.006249,0.007233,0.009178,0.013069,0.020830", \
				        "0.006511,0.007214,0.008193,0.010127,0.013996,0.021750", \
				        "0.009001,0.009687,0.010629,0.012561,0.016419,0.024155", \
				        "0.014593,0.015247,0.016168,0.018056,0.021876,0.029575", \
				        "0.026472,0.027049,0.027921,0.029756,0.033519,0.041148");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATE_X4
 Cell Description	: Pos.edge clock gating cell with drive strength X4
*******************************************************************************************/

cell (CLKGATE_X4) {

	statetable ("CK E","IQ") {
	     table : "L L : - : L ,\
	              L H : - : H ,\
	              H - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge;

	area               	: 3.458000;

	cell_leakage_power 	: 49955.945000;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001444;
		fall_capacitance	: 0.001370;
		rise_capacitance	: 0.001518;
		fall_capacitance_range		(0.001207, 0.001489);
		rise_capacitance_range		(0.001337, 0.001614);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.086724;

		internal_power () {

			when      	: "!E & !GCK";

			power(Hidden_Power_Clk) {
				values ("0.003019,0.003508,0.004460,0.006671,0.011486");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.000700;
		fall_capacitance	: 0.000681;
		rise_capacitance	: 0.000718;
		fall_capacitance_range		(0.000642, 0.000693);
		rise_capacitance_range		(0.000703, 0.000726);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.062240,-0.041725,-0.039574,-0.046606,-0.075330", \
				        "-0.103926,-0.083982,-0.081725,-0.088179,-0.115539", \
				        "-0.138380,-0.117731,-0.115164,-0.120651,-0.147264", \
				        "-0.192894,-0.173887,-0.169464,-0.175580,-0.199695", \
				        "-0.287040,-0.265223,-0.257949,-0.261200,-0.284983");
			}
			rise_constraint(Hold) {
				values ("-0.035376,-0.036856,-0.048326,-0.073741,-0.125655", \
				        "-0.061457,-0.059345,-0.067988,-0.091419,-0.141531", \
				        "-0.072034,-0.068234,-0.076660,-0.098640,-0.148182", \
				        "-0.074698,-0.070653,-0.079333,-0.102224,-0.152243", \
				        "-0.055399,-0.052347,-0.062407,-0.087671,-0.142294");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.064832,0.044167,0.041538,0.049048,0.078447", \
				        "0.106874,0.086670,0.084442,0.091289,0.119701", \
				        "0.142464,0.122029,0.118983,0.125113,0.152743", \
				        "0.200652,0.178918,0.174764,0.179697,0.205600", \
				        "0.298581,0.272211,0.265588,0.269419,0.295771");
			}
			rise_constraint(Setup) {
				values ("0.061196,0.067575,0.086163,0.119299,0.188053", \
				        "0.084896,0.093800,0.118785,0.145117,0.192793", \
				        "0.095504,0.097833,0.128816,0.147069,0.213466", \
				        "0.098192,0.098994,0.122786,0.160819,0.221349", \
				        "0.082918,0.086222,0.110883,0.145213,0.203091");
			}
		}

		internal_power () {

			when      	: "!CK & GCK";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000025,0.000017,0.000009,0.000006,0.000003,-0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000012,0.000008,0.000006,0.000005,0.000002,-0.000002");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		state_function		: "(CK & IQ)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.029684,0.036795,0.042995,0.053506,0.072342,0.108406", \
				        "0.033510,0.040597,0.046800,0.057317,0.076166,0.112230", \
				        "0.041288,0.048426,0.054625,0.065171,0.084025,0.120092", \
				        "0.052832,0.060915,0.067708,0.078721,0.097747,0.133830", \
				        "0.068248,0.077695,0.085552,0.097722,0.117737,0.154193", \
				        "0.089987,0.101210,0.110575,0.124837,0.146992,0.184546", \
				        "0.122089,0.135752,0.146952,0.164616,0.190880,0.232201", \
				        "0.170798,0.187730,0.202021,0.224181,0.257518,0.307344");
			}
			cell_rise(Timing_X4) {
				values ("0.035092,0.048841,0.062913,0.090222,0.144520,0.252868", \
				        "0.038142,0.051877,0.065874,0.093167,0.147461,0.255818", \
				        "0.044277,0.057936,0.071887,0.099022,0.153282,0.261635", \
				        "0.052337,0.066265,0.080421,0.107473,0.161516,0.269797", \
				        "0.060953,0.075722,0.090057,0.117231,0.171093,0.279214", \
				        "0.068412,0.085398,0.100339,0.127929,0.181722,0.289653", \
				        "0.070178,0.090280,0.107955,0.137085,0.192104,0.300368", \
				        "0.057474,0.080915,0.102702,0.137906,0.196134,0.307220");
			}
			fall_transition(Timing_X4) {
				values ("0.005739,0.009216,0.012800,0.019821,0.034534,0.064764", \
				        "0.005693,0.009202,0.012796,0.019818,0.034498,0.064725", \
				        "0.006026,0.009405,0.012918,0.019891,0.034562,0.064769", \
				        "0.007771,0.010952,0.014307,0.020803,0.034848,0.064905", \
				        "0.010235,0.013605,0.016918,0.023084,0.036265,0.065445", \
				        "0.014026,0.017736,0.021270,0.027529,0.039928,0.067010", \
				        "0.020235,0.024520,0.028569,0.035338,0.047572,0.072529", \
				        "0.031029,0.036137,0.040943,0.049018,0.062411,0.086572");
			}
			rise_transition(Timing_X4) {
				values ("0.009464,0.019692,0.031838,0.057163,0.108543,0.211415", \
				        "0.009447,0.019683,0.031849,0.057170,0.108542,0.211417", \
				        "0.009569,0.019751,0.031852,0.057165,0.108549,0.211405", \
				        "0.010485,0.020323,0.032202,0.057264,0.108498,0.211428", \
				        "0.012335,0.021444,0.032880,0.057569,0.108736,0.211417", \
				        "0.015536,0.024775,0.035103,0.058649,0.109135,0.211724", \
				        "0.020855,0.031588,0.041527,0.062691,0.111639,0.212957", \
				        "0.030555,0.042492,0.054482,0.074775,0.119265,0.219569");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X4) {
				values ("0.006296,0.004594,0.002657,-0.001234,-0.009004,-0.024483", \
				        "0.006298,0.004589,0.002652,-0.001237,-0.009009,-0.024487", \
				        "0.006452,0.004724,0.002790,-0.001099,-0.008868,-0.024346", \
				        "0.006953,0.005170,0.003234,-0.000659,-0.008415,-0.023896", \
				        "0.008132,0.006253,0.004274,0.000363,-0.007404,-0.022908", \
				        "0.010796,0.008786,0.006734,0.002790,-0.005021,-0.020550", \
				        "0.016695,0.014522,0.012335,0.008261,0.000372,-0.015212", \
				        "0.029193,0.026847,0.024468,0.020133,0.012028,-0.003715");
			}
			rise_power(Power_X4) {
				values ("0.005867,0.007559,0.009512,0.013399,0.021172,0.036682", \
				        "0.005863,0.007557,0.009495,0.013391,0.021164,0.036676", \
				        "0.005971,0.007646,0.009582,0.013467,0.021237,0.036749", \
				        "0.006336,0.007981,0.009918,0.013789,0.021541,0.037046", \
				        "0.007361,0.008969,0.010890,0.014741,0.022463,0.037951", \
				        "0.009956,0.011503,0.013373,0.017197,0.024882,0.040327", \
				        "0.015826,0.017246,0.019051,0.022796,0.030409,0.045776", \
				        "0.028327,0.029475,0.031169,0.034789,0.042278,0.057497");
			}
		}
	}

}


/******************************************************************************************
 Module          	: CLKGATE_X8
 Cell Description	: Pos.edge clock gating cell with drive strength X8
*******************************************************************************************/

cell (CLKGATE_X8) {

	statetable ("CK E","IQ") {
	     table : "L L : - : L ,\
	              L H : - : H ,\
	              H - : - : N " ;
	}
	clock_gating_integrated_cell	: latch_posedge;

	area               	: 3.724000;

	cell_leakage_power 	: 63312.877500;


	pin (IQ) {

		direction		: internal;
		internal_node		: IQ;
	}

	pin (CK) {

		direction		: input;
		clock_gate_clock_pin	: true;
		capacitance		: 0.001416;
		fall_capacitance	: 0.001342;
		rise_capacitance	: 0.001490;
		fall_capacitance_range		(0.001173, 0.001463);
		rise_capacitance_range		(0.001298, 0.001587);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.082817;

		internal_power () {

			when      	: "!E & !GCK";

			power(Hidden_Power_Clk) {
				values ("0.002957,0.003451,0.004411,0.006632,0.011458");
			}

		}
	}

	pin (E) {

		direction		: input;
		clock_gate_enable_pin	: true;
		capacitance		: 0.000696;
		fall_capacitance	: 0.000677;
		rise_capacitance	: 0.000714;
		fall_capacitance_range		(0.000638, 0.000689);
		rise_capacitance_range		(0.000699, 0.000722);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.060237,-0.042646,-0.040849,-0.048386,-0.077638", \
				        "-0.102035,-0.085182,-0.082299,-0.090620,-0.118355", \
				        "-0.135509,-0.119193,-0.116137,-0.122529,-0.150578", \
				        "-0.189983,-0.173388,-0.171007,-0.176011,-0.203771", \
				        "-0.285761,-0.264572,-0.259927,-0.265373,-0.289843");
			}
			rise_constraint(Hold) {
				values ("-0.035498,-0.037475,-0.049457,-0.075034,-0.127429", \
				        "-0.061580,-0.059968,-0.068874,-0.092591,-0.143179", \
				        "-0.072282,-0.068862,-0.077553,-0.099819,-0.149702", \
				        "-0.074950,-0.070908,-0.080238,-0.103420,-0.153784", \
				        "-0.055658,-0.052741,-0.063205,-0.088764,-0.143731");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.065443,0.045034,0.042921,0.050470,0.080085", \
				        "0.107366,0.087544,0.085454,0.092591,0.121349", \
				        "0.143084,0.122909,0.120131,0.126686,0.154401", \
				        "0.201155,0.179938,0.175669,0.181026,0.207420", \
				        "0.299358,0.273129,0.266785,0.270921,0.297496");
			}
			rise_constraint(Setup) {
				values ("0.060237,0.062129,0.075432,0.118041,0.209429", \
				        "0.085046,0.089566,0.109403,0.145559,0.215931", \
				        "0.092452,0.094755,0.120713,0.168470,0.217240", \
				        "0.097103,0.098141,0.117036,0.146292,0.228296", \
				        "0.080843,0.079972,0.109639,0.135686,0.193205");
			}
		}

		internal_power () {

			when      	: "!CK & GCK";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000024,0.000017,0.000008,0.000006,0.000003,0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !GCK";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000016,0.000011,0.000008,0.000006,0.000005,0.000002,-0.000002");
			}

		}
	}

	pin (GCK) {

		direction		: output;
		max_capacitance		: 0.102400;
		max_transition		: 0.960000;
		state_function		: "(CK & IQ)";
		clock_gate_out_pin	: true;

		timing () {

			related_pin	   : "CK";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X8) {
				values ("0.037070,0.045302,0.052036,0.063301,0.083000,0.119652", \
				        "0.040821,0.049073,0.055795,0.067060,0.086760,0.123414", \
				        "0.048754,0.056979,0.063688,0.074932,0.094620,0.131289", \
				        "0.062581,0.071392,0.078422,0.089847,0.109627,0.146300", \
				        "0.081101,0.091306,0.099375,0.112043,0.132835,0.169816", \
				        "0.106631,0.118597,0.128147,0.142826,0.165643,0.203975", \
				        "0.143920,0.158206,0.169570,0.187358,0.214129,0.256132", \
				        "0.199880,0.217116,0.231042,0.253180,0.286677,0.336912");
			}
			cell_rise(Timing_X8) {
				values ("0.043368,0.058617,0.073051,0.100571,0.154953,0.263468", \
				        "0.046369,0.061658,0.075961,0.103476,0.157891,0.266408", \
				        "0.052722,0.067965,0.082261,0.109596,0.163989,0.272497", \
				        "0.062976,0.078335,0.092666,0.119899,0.174006,0.282443", \
				        "0.074626,0.090706,0.105268,0.132622,0.186463,0.294648", \
				        "0.086096,0.104134,0.119263,0.146849,0.200363,0.308300", \
				        "0.093480,0.114307,0.131916,0.161102,0.215460,0.323234", \
				        "0.088107,0.111942,0.133218,0.168191,0.225835,0.335622");
			}
			fall_transition(Timing_X8) {
				values ("0.007581,0.011458,0.015138,0.022305,0.036659,0.066545", \
				        "0.007616,0.011476,0.015141,0.022308,0.036662,0.066544", \
				        "0.007729,0.011529,0.015197,0.022374,0.036720,0.066505", \
				        "0.009462,0.012827,0.016232,0.022891,0.036980,0.066608", \
				        "0.012620,0.016063,0.019355,0.025644,0.038708,0.067138", \
				        "0.017402,0.020975,0.024387,0.030678,0.042751,0.069412", \
				        "0.024746,0.028794,0.032550,0.039292,0.051018,0.075452", \
				        "0.037350,0.041975,0.046398,0.054003,0.066910,0.090327");
			}
			rise_transition(Timing_X8) {
				values ("0.011389,0.022401,0.034412,0.059450,0.110689,0.213656", \
				        "0.011397,0.022397,0.034402,0.059461,0.110696,0.213683", \
				        "0.011421,0.022412,0.034410,0.059478,0.110722,0.213666", \
				        "0.012230,0.022888,0.034679,0.059550,0.110684,0.213671", \
				        "0.014312,0.024205,0.035581,0.059992,0.110865,0.213645", \
				        "0.017974,0.027774,0.037974,0.061033,0.111279,0.213904", \
				        "0.024185,0.035135,0.044921,0.065469,0.113463,0.214964", \
				        "0.035692,0.047244,0.058742,0.078528,0.121509,0.220908");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X8) {
				values ("0.008500,0.004735,0.000831,-0.006980,-0.022499,-0.053463", \
				        "0.008508,0.004741,0.000836,-0.006976,-0.022493,-0.053456", \
				        "0.008644,0.004854,0.000960,-0.006850,-0.022362,-0.053322", \
				        "0.009271,0.005344,0.001420,-0.006369,-0.021888,-0.052856", \
				        "0.010709,0.006557,0.002541,-0.005341,-0.020832,-0.051858", \
				        "0.013791,0.009341,0.005152,-0.002814,-0.018474,-0.049557", \
				        "0.020399,0.015617,0.011128,0.002853,-0.012937,-0.044160", \
				        "0.034213,0.029094,0.024214,0.015361,-0.000980,-0.032545");
			}
			rise_power(Power_X8) {
				values ("0.008016,0.011629,0.015510,0.023294,0.038816,0.069812", \
				        "0.008012,0.011624,0.015502,0.023284,0.038806,0.069804", \
				        "0.008131,0.011713,0.015585,0.023350,0.038864,0.069862", \
				        "0.008595,0.012112,0.015953,0.023679,0.039151,0.070131", \
				        "0.009763,0.013191,0.016996,0.024675,0.040079,0.071016", \
				        "0.012631,0.015901,0.019593,0.027202,0.042506,0.073351", \
				        "0.019118,0.022008,0.025585,0.033039,0.048206,0.078880", \
				        "0.032913,0.035164,0.038481,0.045664,0.060569,0.090941");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFRS_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and active low set, and drive strength X1
*******************************************************************************************/

cell (DFFRS_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		preset             	: "!SN";
		clear              	: "!RN";
		clear_preset_var1  	: L;
		clear_preset_var2  	: L;
	}

	area               	: 8.246000;

	cell_leakage_power 	: 38971.732000;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000855;
		fall_capacitance	: 0.000807;
		rise_capacitance	: 0.000904;
		fall_capacitance_range		(0.000704, 0.000923);
		rise_capacitance_range		(0.000748, 0.001005);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;
		min_pulse_width_high	: 0.110161;

		internal_power () {

			when      	: "D & Q & !QN & RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.004146,0.004555,0.005403,0.007443,0.011971");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.010281,0.010680,0.011610,0.013834,0.018804");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004136,0.004534,0.005379,0.007408,0.011925");
			}

		}

		internal_power () {

			when      	: "!D & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.007186,0.007609,0.008463,0.010522,0.015067");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004566,0.004974,0.005825,0.007864,0.012391");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004132,0.004531,0.005377,0.007408,0.011926");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.011602,0.012317,0.013432,0.016012,0.021806");
			}

		}

		internal_power () {

			when      	: "D & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.011182,0.011611,0.012529,0.014680,0.019445");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000913;
		fall_capacitance	: 0.000825;
		rise_capacitance	: 0.001001;
		fall_capacitance_range		(0.000756, 0.000956);
		rise_capacitance_range		(0.000886, 0.001185);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & SN";
			sdf_cond	   : "(RN == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("0.035088,0.051686,0.057354,0.057804,0.032515", \
				        "0.016673,0.040793,0.065491,0.053506,0.023454", \
				        "-0.006135,0.054921,0.056654,0.046720,0.039728", \
				        "-0.006015,0.016438,0.061945,0.063441,0.065242", \
				        "-0.005775,0.054193,0.137215,0.176226,0.156527");
			}
			rise_constraint(Hold) {
				values ("-0.011750,-0.009062,-0.016113,-0.031682,-0.069417", \
				        "-0.030388,-0.020409,-0.023063,-0.043899,-0.085298", \
				        "-0.032672,-0.027145,-0.032429,-0.038546,-0.075548", \
				        "-0.021628,-0.012957,-0.023351,-0.034873,-0.093253", \
				        "0.014528,0.015419,0.004603,-0.028131,-0.066288");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & SN";
			sdf_cond	   : "(RN == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.081605,0.053271,0.045211,0.038112,0.067473", \
				        "0.125415,0.105301,0.093748,0.089570,0.115098", \
				        "0.174140,0.149477,0.146146,0.143921,0.163771", \
				        "0.251526,0.225103,0.220934,0.212476,0.220718", \
				        "0.361298,0.332551,0.329247,0.318896,0.330777");
			}
			rise_constraint(Setup) {
				values ("0.055821,0.051348,0.060598,0.084623,0.134904", \
				        "0.088795,0.080266,0.087590,0.108425,0.157200", \
				        "0.109665,0.099205,0.104380,0.126317,0.170274", \
				        "0.135114,0.122127,0.125082,0.150033,0.191823", \
				        "0.158686,0.139206,0.145138,0.175671,0.214014");
			}
		}

		internal_power () {

			when      	: "!CK & !Q & QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005722,0.005704,0.005696,0.005738,0.005947,0.006646,0.008446,0.012580");
			}

		}

		internal_power () {

			when      	: "CK & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000030,0.000026,0.000021,0.000016,0.000013,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000032,0.000027,0.000022,0.000019,0.000016,0.000012,0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005690,0.005673,0.005665,0.005706,0.005922,0.006611,0.008417,0.012559");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004323,0.004307,0.004297,0.004328,0.004537,0.005191,0.006926,0.010931");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000017,0.000015,0.000012,0.000011,0.000009,0.000007,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005819,0.005800,0.005792,0.005844,0.006048,0.006736,0.008531,0.012659");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000011,0.000010,0.000008,0.000006,0.000004,0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004313,0.004295,0.004286,0.004321,0.004526,0.005183,0.006916,0.010922");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000028,0.000024,0.000018,0.000014,0.000011,0.000007,0.000003");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.002584;
		fall_capacitance	: 0.002560;
		rise_capacitance	: 0.002607;
		fall_capacitance_range		(0.002551, 0.002576);
		rise_capacitance_range		(0.002507, 0.002635);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.152852;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.038446,-0.063070,-0.060817,-0.053962,-0.037263", \
				        "-0.046858,-0.067667,-0.070483,-0.065124,-0.032855", \
				        "-0.056227,-0.053319,-0.051042,-0.056664,-0.029440", \
				        "-0.016321,-0.003520,-0.033902,-0.044496,0.015628", \
				        "0.056403,0.087253,0.118251,0.092512,0.063014");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.083474,0.104274,0.111127,0.113803,0.102497", \
				        "0.116094,0.136015,0.141419,0.141856,0.127583", \
				        "0.142827,0.161533,0.166394,0.166369,0.151687", \
				        "0.182121,0.200182,0.203778,0.204022,0.189530", \
				        "0.245316,0.262866,0.266736,0.266018,0.252668");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000018,0.000014,0.000008,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000086,0.000026,0.000019,0.000013,0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000051,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000053,0.000018,0.000014,0.000008,0.000001");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.001961;
		fall_capacitance	: 0.001895;
		rise_capacitance	: 0.002027;
		fall_capacitance_range		(0.001758, 0.001977);
		rise_capacitance_range		(0.001907, 0.002118);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.280171;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.192044,-0.208731,-0.217225,-0.223223,-0.213277", \
				        "-0.135867,-0.175993,-0.179084,-0.174274,-0.165834", \
				        "-0.086467,-0.121952,-0.119035,-0.144859,-0.117221", \
				        "-0.000910,-0.027982,-0.057127,-0.064927,-0.047554", \
				        "0.176539,0.117625,0.055391,0.129662,0.108774");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.272952,0.296379,0.304247,0.307383,0.294249", \
				        "0.249988,0.273127,0.280889,0.284263,0.271056", \
				        "0.242025,0.265574,0.273572,0.276727,0.263656", \
				        "0.234897,0.258891,0.266854,0.270444,0.257720", \
				        "0.235299,0.259645,0.268244,0.272479,0.260578");
			}
		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000034,0.000006,0.000004,0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000035,0.000005,0.000003,0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000031,0.000006,0.000004,0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002054,0.002180,0.002718,0.004100,0.007197");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.172716,0.176688,0.183610,0.195190,0.215885,0.254149", \
				        "0.175934,0.179906,0.186864,0.198601,0.218845,0.257119", \
				        "0.181887,0.185857,0.192766,0.204499,0.224761,0.262592", \
				        "0.188926,0.192896,0.199789,0.211819,0.232192,0.269961", \
				        "0.196577,0.200542,0.207402,0.219265,0.239992,0.278015", \
				        "0.202804,0.206769,0.213660,0.225537,0.246092,0.284701", \
				        "0.201312,0.205276,0.212133,0.223819,0.244335,0.282591", \
				        "0.178406,0.182369,0.189194,0.200812,0.221226,0.259135");
			}
			cell_rise(Timing_X1) {
				values ("0.168171,0.173416,0.183309,0.202609,0.240672,0.316370", \
				        "0.171514,0.176756,0.186558,0.205804,0.243815,0.319516", \
				        "0.176962,0.182208,0.192180,0.211458,0.249274,0.324943", \
				        "0.183097,0.188342,0.198256,0.217579,0.255495,0.330719", \
				        "0.188273,0.193517,0.203392,0.222754,0.260692,0.336109", \
				        "0.189887,0.195132,0.205043,0.224400,0.262283,0.337729", \
				        "0.181147,0.186398,0.196210,0.215349,0.253356,0.328968", \
				        "0.149089,0.154350,0.164243,0.183611,0.221536,0.297182");
			}
			fall_transition(Timing_X1) {
				values ("0.010925,0.012883,0.016606,0.023753,0.038478,0.069819", \
				        "0.010925,0.012892,0.016612,0.023762,0.038407,0.069759", \
				        "0.010922,0.012893,0.016606,0.023762,0.038410,0.069745", \
				        "0.010921,0.012890,0.016611,0.023753,0.038410,0.069788", \
				        "0.010895,0.012868,0.016555,0.023701,0.038373,0.069804", \
				        "0.010896,0.012886,0.016598,0.023884,0.038439,0.069796", \
				        "0.010904,0.012880,0.016596,0.023799,0.038468,0.069788", \
				        "0.010899,0.012873,0.016588,0.023804,0.038432,0.069763");
			}
			rise_transition(Timing_X1) {
				values ("0.014642,0.018503,0.026734,0.044134,0.079709,0.151536", \
				        "0.014632,0.018516,0.026726,0.044148,0.079697,0.151544", \
				        "0.014645,0.018516,0.026728,0.044137,0.079761,0.151540", \
				        "0.014640,0.018516,0.026737,0.044125,0.079718,0.151471", \
				        "0.014603,0.018481,0.026722,0.044111,0.079780,0.151482", \
				        "0.014640,0.018510,0.026738,0.044108,0.079718,0.151582", \
				        "0.014665,0.018522,0.026726,0.044111,0.079749,0.151441", \
				        "0.014768,0.018616,0.026793,0.044140,0.079763,0.151392");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & !SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049556,0.053350,0.059976,0.071398,0.091702,0.130027", \
				        "0.053288,0.057076,0.063697,0.075121,0.095428,0.133755", \
				        "0.061398,0.065179,0.071788,0.083182,0.103499,0.141837", \
				        "0.077283,0.081157,0.087883,0.099367,0.119803,0.158151", \
				        "0.101268,0.105625,0.113140,0.125482,0.146519,0.185105", \
				        "0.136207,0.141248,0.150060,0.163787,0.186385,0.225809", \
				        "0.192220,0.198132,0.207938,0.224332,0.249491,0.291071", \
				        "0.286783,0.293929,0.305855,0.325228,0.355263,0.401742");
			}
			cell_rise(Timing_X1) {
				values ("0.040439,0.045521,0.055250,0.074316,0.112154,0.187716", \
				        "0.043031,0.048106,0.057783,0.076730,0.114567,0.190132", \
				        "0.047502,0.052572,0.062255,0.081181,0.118987,0.194575", \
				        "0.053526,0.058684,0.068463,0.087433,0.125168,0.200716", \
				        "0.059331,0.064748,0.074786,0.093784,0.131602,0.207109", \
				        "0.060473,0.066651,0.077645,0.097337,0.135286,0.210770", \
				        "0.048076,0.055617,0.068453,0.090421,0.129532,0.206058", \
				        "0.002898,0.012054,0.028125,0.054645,0.097910,0.177103");
			}
			fall_transition(Timing_X1) {
				values ("0.010207,0.012177,0.015944,0.023241,0.038285,0.069983", \
				        "0.010222,0.012180,0.015947,0.023242,0.038286,0.069983", \
				        "0.010187,0.012154,0.015942,0.023271,0.038300,0.069980", \
				        "0.010772,0.012644,0.016280,0.023506,0.038411,0.069992", \
				        "0.012972,0.014840,0.018382,0.025177,0.039497,0.070269", \
				        "0.016086,0.018052,0.021699,0.028521,0.041745,0.071452", \
				        "0.020693,0.022851,0.026788,0.033807,0.046754,0.074353", \
				        "0.028316,0.030779,0.035170,0.042911,0.056102,0.082077");
			}
			rise_transition(Timing_X1) {
				values ("0.013363,0.017472,0.025989,0.043745,0.079550,0.151192", \
				        "0.013366,0.017475,0.026028,0.043676,0.079550,0.151192", \
				        "0.013475,0.017554,0.026057,0.043678,0.079551,0.151205", \
				        "0.014020,0.017992,0.026303,0.043805,0.079561,0.151213", \
				        "0.015328,0.019061,0.026984,0.044037,0.079638,0.151294", \
				        "0.018297,0.021857,0.029236,0.045405,0.080229,0.151485", \
				        "0.023234,0.027323,0.034633,0.049467,0.082746,0.153400", \
				        "0.030249,0.035391,0.044296,0.059401,0.089724,0.159058");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049692,0.053531,0.060235,0.071803,0.092213,0.130722", \
				        "0.053439,0.057282,0.063984,0.075497,0.095947,0.134455", \
				        "0.061510,0.065348,0.072035,0.083560,0.104015,0.142466", \
				        "0.077513,0.081417,0.088188,0.099785,0.120249,0.158648", \
				        "0.101640,0.106071,0.113610,0.126060,0.147226,0.185792", \
				        "0.136854,0.141971,0.150639,0.164761,0.187369,0.226818", \
				        "0.193094,0.199110,0.209129,0.225414,0.250819,0.292110", \
				        "0.288249,0.295483,0.307571,0.326723,0.356566,0.401909");
			}
			fall_transition(Timing_X1) {
				values ("0.010315,0.012331,0.016119,0.023517,0.038408,0.070387", \
				        "0.010341,0.012329,0.016105,0.023431,0.038408,0.070413", \
				        "0.010356,0.012342,0.016125,0.023438,0.038413,0.070384", \
				        "0.010920,0.012804,0.016455,0.023632,0.038497,0.070457", \
				        "0.013236,0.015110,0.018632,0.025511,0.039549,0.070686", \
				        "0.016477,0.018438,0.022001,0.028691,0.041943,0.071802", \
				        "0.021248,0.023395,0.027186,0.034024,0.046711,0.074100", \
				        "0.028973,0.031358,0.035553,0.042920,0.055251,0.080451");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & !SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049736,0.053541,0.060167,0.071628,0.092006,0.130458", \
				        "0.053464,0.057263,0.063867,0.075340,0.095733,0.134187", \
				        "0.061476,0.065270,0.071914,0.083377,0.103779,0.142241", \
				        "0.077461,0.081326,0.088079,0.099591,0.120045,0.158518", \
				        "0.101514,0.105890,0.113326,0.125712,0.146788,0.185460", \
				        "0.136759,0.141806,0.150345,0.164170,0.186741,0.226252", \
				        "0.192695,0.198635,0.208517,0.224738,0.249717,0.290922", \
				        "0.286696,0.293581,0.305076,0.323500,0.351588,0.394733");
			}
			cell_rise(Timing_X1) {
				values ("0.329410,0.334627,0.344514,0.363792,0.401959,0.477446", \
				        "0.332108,0.337324,0.347163,0.366364,0.404593,0.480030", \
				        "0.336429,0.341645,0.351512,0.370766,0.408969,0.484377", \
				        "0.343334,0.348554,0.358488,0.377782,0.416024,0.491431", \
				        "0.356402,0.361622,0.371313,0.390509,0.428513,0.504043", \
				        "0.381249,0.386467,0.396691,0.416049,0.453940,0.529511", \
				        "0.427297,0.432568,0.442334,0.462630,0.500616,0.576129", \
				        "0.501377,0.506799,0.516784,0.535495,0.575221,0.650906");
			}
			fall_transition(Timing_X1) {
				values ("0.010237,0.012219,0.015997,0.023327,0.038353,0.070122", \
				        "0.010248,0.012224,0.015990,0.023334,0.038358,0.070123", \
				        "0.010247,0.012223,0.015978,0.023344,0.038356,0.070131", \
				        "0.010807,0.012682,0.016382,0.023517,0.038485,0.070180", \
				        "0.013007,0.014876,0.018462,0.025256,0.039467,0.070442", \
				        "0.016178,0.018137,0.021725,0.028405,0.041904,0.071573", \
				        "0.020847,0.022997,0.026856,0.033605,0.046424,0.073786", \
				        "0.027261,0.029458,0.033444,0.040313,0.052343,0.076005");
			}
			rise_transition(Timing_X1) {
				values ("0.014664,0.018455,0.026620,0.043997,0.079667,0.151295", \
				        "0.014663,0.018469,0.026629,0.043999,0.079610,0.151314", \
				        "0.014664,0.018470,0.026635,0.043938,0.079656,0.151310", \
				        "0.014676,0.018464,0.026629,0.043990,0.079640,0.151314", \
				        "0.014676,0.018461,0.026635,0.043934,0.079586,0.151320", \
				        "0.014674,0.018472,0.026636,0.043919,0.079605,0.151321", \
				        "0.014866,0.018657,0.026780,0.044084,0.079638,0.151345", \
				        "0.015402,0.019184,0.027237,0.044400,0.079925,0.151587");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049761,0.053629,0.060387,0.072026,0.092610,0.131170", \
				        "0.053521,0.057393,0.064128,0.075740,0.096326,0.134887", \
				        "0.061575,0.065443,0.072211,0.083847,0.104438,0.143007", \
				        "0.077578,0.081513,0.088345,0.100058,0.120670,0.159205", \
				        "0.101732,0.106205,0.113813,0.126411,0.147745,0.186447", \
				        "0.136902,0.142090,0.151148,0.165213,0.188040,0.227636", \
				        "0.193428,0.199562,0.209837,0.226366,0.251765,0.293092", \
				        "0.288097,0.295227,0.307091,0.325743,0.354386,0.397272");
			}
			fall_transition(Timing_X1) {
				values ("0.010379,0.012405,0.016234,0.023623,0.038608,0.070297", \
				        "0.010411,0.012440,0.016261,0.023624,0.038610,0.070302", \
				        "0.010436,0.012461,0.016286,0.023663,0.038624,0.070323", \
				        "0.011003,0.012924,0.016605,0.023857,0.038720,0.070360", \
				        "0.013332,0.015255,0.018833,0.025651,0.039768,0.070625", \
				        "0.016707,0.018738,0.022367,0.029061,0.042257,0.071715", \
				        "0.021663,0.023890,0.027780,0.034478,0.046893,0.073944", \
				        "0.028457,0.030740,0.034694,0.041392,0.052754,0.076421");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.145326,0.150547,0.160414,0.179429,0.217261,0.292877", \
				        "0.149077,0.154314,0.164168,0.183191,0.221031,0.296644", \
				        "0.155680,0.160921,0.170753,0.189735,0.227564,0.303182", \
				        "0.167236,0.172476,0.182339,0.201347,0.239120,0.314709", \
				        "0.188860,0.194100,0.203938,0.223021,0.260815,0.336139", \
				        "0.222442,0.227754,0.237616,0.257053,0.294861,0.370441", \
				        "0.269873,0.275332,0.285402,0.304996,0.342722,0.418177", \
				        "0.337044,0.342774,0.352981,0.372618,0.410593,0.486216");
			}
			rise_transition(Timing_X1) {
				values ("0.014659,0.018466,0.026602,0.043905,0.079596,0.151330", \
				        "0.014659,0.018471,0.026597,0.043904,0.079591,0.151317", \
				        "0.014708,0.018515,0.026635,0.043905,0.079597,0.151335", \
				        "0.014715,0.018521,0.026622,0.043916,0.079629,0.151325", \
				        "0.014700,0.018498,0.026627,0.043910,0.079596,0.151358", \
				        "0.015145,0.018841,0.026824,0.044003,0.079622,0.151499", \
				        "0.015911,0.019445,0.027185,0.044208,0.079707,0.151391", \
				        "0.017102,0.020475,0.027841,0.044481,0.079827,0.151538");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.352287,0.357495,0.367327,0.386732,0.424925,0.500123", \
				        "0.356178,0.361380,0.371067,0.390483,0.428698,0.503923", \
				        "0.363643,0.368857,0.378779,0.398186,0.436439,0.511522", \
				        "0.377004,0.382207,0.391877,0.411129,0.449361,0.524402", \
				        "0.393911,0.399136,0.408918,0.428312,0.466619,0.541573", \
				        "0.415401,0.420627,0.430261,0.449040,0.487132,0.562661", \
				        "0.441063,0.446292,0.455954,0.477197,0.515539,0.590117", \
				        "0.475982,0.481213,0.490886,0.511502,0.549667,0.625898");
			}
			rise_transition(Timing_X1) {
				values ("0.014687,0.018488,0.026623,0.043961,0.079619,0.151315", \
				        "0.014670,0.018498,0.026633,0.043940,0.079637,0.151309", \
				        "0.014674,0.018501,0.026636,0.043943,0.079615,0.151363", \
				        "0.014687,0.018491,0.026631,0.043953,0.079618,0.151319", \
				        "0.014676,0.018489,0.026631,0.043967,0.079656,0.151353", \
				        "0.014680,0.018501,0.026634,0.043920,0.079569,0.151337", \
				        "0.014690,0.018500,0.026627,0.043965,0.079644,0.151402", \
				        "0.014693,0.018503,0.026648,0.043971,0.079645,0.151406");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.006087,0.006087,0.006093,0.006095,0.006110,0.006120", \
				        "0.006085,0.006085,0.006090,0.006095,0.006102,0.006111", \
				        "0.006105,0.006105,0.006109,0.006119,0.006125,0.006133", \
				        "0.006173,0.006173,0.006177,0.006191,0.006200,0.006208", \
				        "0.006408,0.006408,0.006408,0.006417,0.006436,0.006447", \
				        "0.007025,0.007025,0.007028,0.007036,0.007045,0.007070", \
				        "0.008433,0.008433,0.008437,0.008440,0.008451,0.008463", \
				        "0.011441,0.011441,0.011443,0.011447,0.011451,0.011459");
			}
			rise_power(Power_X1) {
				values ("0.007107,0.007105,0.007102,0.007108,0.007114,0.007113", \
				        "0.007105,0.007103,0.007095,0.007101,0.007108,0.007107", \
				        "0.007116,0.007114,0.007113,0.007119,0.007124,0.007125", \
				        "0.007178,0.007176,0.007174,0.007182,0.007189,0.007187", \
				        "0.007396,0.007395,0.007393,0.007394,0.007392,0.007393", \
				        "0.007991,0.007989,0.007986,0.007995,0.007997,0.007998", \
				        "0.009386,0.009384,0.009385,0.009374,0.009371,0.009378", \
				        "0.012430,0.012428,0.012424,0.012428,0.012422,0.012425");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & !SN";

			fall_power(Power_X1) {
				values ("0.004841,0.004600,0.004119,0.003140,0.001221,-0.002644", \
				        "0.004837,0.004595,0.004114,0.003135,0.001216,-0.002649", \
				        "0.004901,0.004658,0.004154,0.003196,0.001278,-0.002586", \
				        "0.005097,0.004853,0.004377,0.003393,0.001473,-0.002391", \
				        "0.005638,0.005385,0.004885,0.003900,0.001991,-0.001876", \
				        "0.006847,0.006584,0.006084,0.005107,0.003158,-0.000718", \
				        "0.009526,0.009249,0.008727,0.007722,0.005784,0.001894", \
				        "0.015176,0.014874,0.014314,0.013269,0.011279,0.007359");
			}
			rise_power(Power_X1) {
				values ("0.002222,0.002467,0.002948,0.003924,0.005866,0.009741", \
				        "0.002192,0.002437,0.002931,0.003899,0.005836,0.009712", \
				        "0.002185,0.002428,0.002912,0.003884,0.005826,0.009702", \
				        "0.002230,0.002470,0.002950,0.003919,0.005855,0.009731", \
				        "0.002499,0.002736,0.003215,0.004179,0.006117,0.009991", \
				        "0.003434,0.003666,0.004143,0.005096,0.007026,0.010892", \
				        "0.005858,0.006084,0.006547,0.007493,0.009410,0.013258", \
				        "0.011261,0.011473,0.011920,0.012844,0.014723,0.018539");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & SN";

			fall_power(Power_X1) {
				values ("0.006373,0.006373,0.006379,0.006375,0.006391,0.006384", \
				        "0.006365,0.006366,0.006376,0.006378,0.006386,0.006380", \
				        "0.006388,0.006389,0.006397,0.006398,0.006408,0.006410", \
				        "0.006484,0.006483,0.006485,0.006484,0.006492,0.006506", \
				        "0.006743,0.006738,0.006733,0.006723,0.006730,0.006745", \
				        "0.007345,0.007334,0.007325,0.007289,0.007281,0.007289", \
				        "0.008592,0.008573,0.008579,0.008542,0.008536,0.008526", \
				        "0.011175,0.011141,0.011100,0.011071,0.011017,0.011019");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & !SN";

			fall_power(Power_X1) {
				values ("0.013717,0.013474,0.013001,0.012024,0.010084,0.006226", \
				        "0.013711,0.013468,0.012989,0.012015,0.010080,0.006222", \
				        "0.013755,0.013511,0.013034,0.012060,0.010133,0.006276", \
				        "0.013944,0.013697,0.013215,0.012247,0.010311,0.006453", \
				        "0.014457,0.014204,0.013717,0.012732,0.010796,0.006934", \
				        "0.015784,0.015521,0.015027,0.014023,0.012079,0.008210", \
				        "0.018961,0.018683,0.018170,0.017180,0.015211,0.011325", \
				        "0.025638,0.025339,0.024787,0.023767,0.021770,0.017858");
			}
			rise_power(Power_X1) {
				values ("0.013387,0.013627,0.014113,0.015087,0.017077,0.020980", \
				        "0.013376,0.013616,0.014105,0.015076,0.017057,0.020959", \
				        "0.013363,0.013603,0.014094,0.015063,0.017035,0.020937", \
				        "0.013350,0.013590,0.014077,0.015049,0.017021,0.020923", \
				        "0.013343,0.013583,0.014070,0.015057,0.016996,0.020899", \
				        "0.013439,0.013679,0.014172,0.015156,0.017091,0.020992", \
				        "0.014000,0.014238,0.014724,0.015716,0.017688,0.021585", \
				        "0.016032,0.016271,0.016754,0.017725,0.019693,0.023586");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & SN";

			fall_power(Power_X1) {
				values ("0.008340,0.008340,0.008348,0.008358,0.008360,0.008367", \
				        "0.008342,0.008342,0.008349,0.008353,0.008355,0.008363", \
				        "0.008364,0.008364,0.008371,0.008381,0.008380,0.008388", \
				        "0.008458,0.008456,0.008460,0.008469,0.008472,0.008484", \
				        "0.008722,0.008717,0.008710,0.008715,0.008719,0.008724", \
				        "0.009394,0.009383,0.009386,0.009385,0.009380,0.009384", \
				        "0.011020,0.010999,0.010981,0.010973,0.010963,0.010955", \
				        "0.014248,0.014216,0.014178,0.014144,0.014120,0.014110");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X1) {
				values ("0.008955,0.008955,0.008957,0.008954,0.008966,0.008979", \
				        "0.008948,0.008948,0.008955,0.008951,0.008962,0.008978", \
				        "0.008976,0.008975,0.008979,0.008977,0.008989,0.008994", \
				        "0.009079,0.009077,0.009077,0.009075,0.009088,0.009098", \
				        "0.009351,0.009345,0.009350,0.009344,0.009350,0.009359", \
				        "0.010003,0.009993,0.009982,0.009962,0.009957,0.009963", \
				        "0.011372,0.011352,0.011328,0.011343,0.011338,0.011316", \
				        "0.014160,0.014126,0.014079,0.014060,0.014028,0.014019");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.207291,0.210991,0.217552,0.229479,0.250132,0.288576", \
				        "0.210647,0.214349,0.220795,0.232670,0.253283,0.291727", \
				        "0.216101,0.219788,0.226418,0.238329,0.258640,0.297152", \
				        "0.222233,0.225938,0.232500,0.244453,0.264939,0.302826", \
				        "0.227440,0.231175,0.237765,0.249280,0.269703,0.307867", \
				        "0.229023,0.232727,0.239302,0.251254,0.271525,0.309782", \
				        "0.220270,0.223973,0.230568,0.241895,0.262352,0.300783", \
				        "0.188259,0.191960,0.198501,0.210373,0.230787,0.269407");
			}
			cell_rise(Timing_X1) {
				values ("0.210406,0.215433,0.225278,0.244185,0.282365,0.358044", \
				        "0.213623,0.218646,0.228542,0.247624,0.285199,0.360896", \
				        "0.219579,0.224602,0.234443,0.253534,0.291121,0.366359", \
				        "0.226636,0.231668,0.241483,0.260835,0.298562,0.373741", \
				        "0.234350,0.239382,0.249052,0.268231,0.306381,0.381815", \
				        "0.240576,0.245603,0.255412,0.274718,0.312571,0.388695", \
				        "0.239135,0.244165,0.253951,0.273032,0.310878,0.386532", \
				        "0.216310,0.221323,0.231098,0.250097,0.287845,0.363206");
			}
			fall_transition(Timing_X1) {
				values ("0.011547,0.013508,0.017219,0.024674,0.039650,0.071340", \
				        "0.011549,0.013505,0.017217,0.024657,0.039647,0.071362", \
				        "0.011553,0.013501,0.017219,0.024655,0.039533,0.071350", \
				        "0.011552,0.013498,0.017217,0.024677,0.039585,0.071332", \
				        "0.011635,0.013601,0.017371,0.024548,0.039534,0.071370", \
				        "0.011538,0.013516,0.017213,0.024639,0.039616,0.071477", \
				        "0.011547,0.013508,0.017358,0.024516,0.039667,0.071219", \
				        "0.011553,0.013508,0.017222,0.024555,0.039624,0.071091");
			}
			rise_transition(Timing_X1) {
				values ("0.015437,0.019476,0.027872,0.045323,0.081150,0.152973", \
				        "0.015438,0.019483,0.027858,0.045335,0.081076,0.153059", \
				        "0.015436,0.019486,0.027872,0.045306,0.081134,0.153144", \
				        "0.015428,0.019481,0.027868,0.045318,0.081083,0.153028", \
				        "0.015423,0.019494,0.027867,0.045362,0.081097,0.153052", \
				        "0.015424,0.019491,0.027870,0.045310,0.081089,0.153122", \
				        "0.015421,0.019482,0.027857,0.045306,0.081098,0.153123", \
				        "0.015426,0.019487,0.027857,0.045328,0.081128,0.152981");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.087722,0.092765,0.102503,0.121571,0.159357,0.234908", \
				        "0.091360,0.096400,0.106345,0.125239,0.163074,0.238751", \
				        "0.099384,0.104429,0.114271,0.133252,0.171123,0.246768", \
				        "0.115570,0.120610,0.130263,0.149256,0.187064,0.262692", \
				        "0.141194,0.146200,0.155802,0.174891,0.212641,0.288299", \
				        "0.178872,0.183858,0.193484,0.212283,0.249993,0.325472", \
				        "0.237845,0.242830,0.252798,0.271629,0.309728,0.385141", \
				        "0.337922,0.342990,0.352547,0.371684,0.409516,0.484882");
			}
			rise_transition(Timing_X1) {
				values ("0.015412,0.019466,0.027860,0.045330,0.081176,0.153178", \
				        "0.015391,0.019451,0.027857,0.045352,0.081171,0.153176", \
				        "0.015399,0.019460,0.027854,0.045360,0.081165,0.153178", \
				        "0.015415,0.019474,0.027855,0.045359,0.081116,0.152971", \
				        "0.015516,0.019545,0.027916,0.045349,0.081108,0.153003", \
				        "0.015739,0.019756,0.028046,0.045385,0.081116,0.152860", \
				        "0.016267,0.020150,0.028287,0.045539,0.081139,0.152974", \
				        "0.017300,0.021045,0.028867,0.045756,0.081197,0.152992");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.087848,0.092887,0.102607,0.121629,0.159466,0.235086", \
				        "0.091573,0.096628,0.106453,0.125346,0.163186,0.238800", \
				        "0.099615,0.104671,0.114383,0.133385,0.171195,0.246807", \
				        "0.115739,0.120788,0.130448,0.149488,0.187277,0.262816", \
				        "0.141586,0.146607,0.156114,0.175056,0.212971,0.288428", \
				        "0.179066,0.184057,0.193997,0.212849,0.250536,0.326046", \
				        "0.238969,0.243943,0.253425,0.272706,0.310455,0.385834", \
				        "0.337582,0.342640,0.352167,0.370813,0.408738,0.484033");
			}
			rise_transition(Timing_X1) {
				values ("0.015323,0.019418,0.027839,0.045322,0.081095,0.152867", \
				        "0.015400,0.019471,0.027880,0.045320,0.081097,0.152872", \
				        "0.015399,0.019478,0.027882,0.045331,0.081102,0.152876", \
				        "0.015413,0.019483,0.027865,0.045339,0.081118,0.152862", \
				        "0.015538,0.019583,0.027935,0.045379,0.081127,0.152855", \
				        "0.015791,0.019790,0.028079,0.045427,0.081100,0.152857", \
				        "0.016277,0.020191,0.028335,0.045573,0.081183,0.152885", \
				        "0.017081,0.020844,0.028751,0.045764,0.081234,0.152987");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & !RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.044345,0.047889,0.054209,0.065320,0.085324,0.123425", \
				        "0.048034,0.051578,0.057900,0.069014,0.089123,0.127231", \
				        "0.056065,0.059606,0.065937,0.077063,0.097154,0.135267", \
				        "0.070646,0.074384,0.080919,0.092217,0.112365,0.150485", \
				        "0.091536,0.095790,0.103053,0.115341,0.136286,0.174756", \
				        "0.122236,0.127191,0.135893,0.149809,0.172436,0.211967", \
				        "0.170970,0.176906,0.187200,0.203941,0.230318,0.273252", \
				        "0.251558,0.258925,0.271505,0.292476,0.325268,0.376136");
			}
			cell_rise(Timing_X1) {
				values ("0.039764,0.044864,0.054681,0.073730,0.111612,0.187204", \
				        "0.042808,0.047897,0.057730,0.076729,0.114523,0.190124", \
				        "0.048497,0.053583,0.063296,0.082207,0.120011,0.195612", \
				        "0.055224,0.060367,0.070204,0.089167,0.126781,0.202336", \
				        "0.061552,0.066900,0.076918,0.095855,0.133519,0.209011", \
				        "0.063773,0.069944,0.080950,0.100433,0.138118,0.213474", \
				        "0.053418,0.061065,0.074142,0.096168,0.135343,0.211379", \
				        "0.013584,0.022982,0.039439,0.066725,0.110602,0.189083");
			}
			fall_transition(Timing_X1) {
				values ("0.010545,0.012504,0.016291,0.023733,0.038670,0.070364", \
				        "0.010551,0.012509,0.016295,0.023733,0.038816,0.070393", \
				        "0.010612,0.012564,0.016335,0.023770,0.038829,0.070392", \
				        "0.011697,0.013522,0.017061,0.024196,0.038896,0.070414", \
				        "0.014122,0.016000,0.019520,0.026267,0.040268,0.070867", \
				        "0.017744,0.019759,0.023399,0.030037,0.043330,0.072408", \
				        "0.023651,0.025942,0.030086,0.037300,0.050459,0.077525", \
				        "0.033825,0.036580,0.041526,0.050028,0.064515,0.090996");
			}
			rise_transition(Timing_X1) {
				values ("0.015156,0.019273,0.027735,0.045251,0.081031,0.152807", \
				        "0.015154,0.019277,0.027758,0.045259,0.081035,0.152805", \
				        "0.015354,0.019430,0.027811,0.045272,0.081035,0.152801", \
				        "0.015942,0.019919,0.028217,0.045468,0.081069,0.152826", \
				        "0.017499,0.021100,0.028912,0.045818,0.081303,0.152879", \
				        "0.021288,0.024595,0.031482,0.047124,0.081820,0.153234", \
				        "0.027751,0.031682,0.038594,0.052523,0.084734,0.155013", \
				        "0.037751,0.042680,0.051454,0.066059,0.094241,0.161074");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.044324,0.047863,0.054175,0.065264,0.085308,0.123645", \
				        "0.048055,0.051600,0.057906,0.069003,0.089051,0.127391", \
				        "0.056060,0.059606,0.065884,0.077000,0.097057,0.135416", \
				        "0.070639,0.074379,0.080910,0.092192,0.112408,0.150756", \
				        "0.091530,0.095779,0.103070,0.115354,0.136381,0.175098", \
				        "0.122202,0.127158,0.135638,0.149747,0.172558,0.212364", \
				        "0.171104,0.177060,0.187279,0.204149,0.230725,0.272990", \
				        "0.251952,0.259373,0.272185,0.293266,0.323903,0.364877");
			}
			fall_transition(Timing_X1) {
				values ("0.010520,0.012475,0.016226,0.023597,0.038751,0.070864", \
				        "0.010527,0.012484,0.016229,0.023597,0.038755,0.070863", \
				        "0.010599,0.012543,0.016268,0.023624,0.038772,0.070864", \
				        "0.011677,0.013499,0.017017,0.024095,0.039027,0.070892", \
				        "0.014108,0.015975,0.019479,0.026269,0.040433,0.071276", \
				        "0.017755,0.019773,0.023420,0.030166,0.043540,0.072640", \
				        "0.023698,0.026007,0.030161,0.037493,0.050636,0.075506", \
				        "0.034143,0.036959,0.041981,0.049755,0.056648,0.075888");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & !RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.044276,0.047814,0.054106,0.065204,0.085323,0.123435", \
				        "0.048087,0.051636,0.057941,0.069041,0.089006,0.127101", \
				        "0.056087,0.059633,0.065970,0.077083,0.097024,0.135125", \
				        "0.070665,0.074402,0.080925,0.092227,0.112401,0.150513", \
				        "0.091376,0.095616,0.103016,0.115301,0.136436,0.174887", \
				        "0.122140,0.127087,0.135838,0.149743,0.172373,0.211928", \
				        "0.170842,0.176776,0.187050,0.203818,0.230158,0.273062", \
				        "0.251343,0.258703,0.271275,0.292307,0.324998,0.375847");
			}
			cell_rise(Timing_X1) {
				values ("0.039765,0.044865,0.054641,0.073730,0.111578,0.187189", \
				        "0.042804,0.047892,0.057711,0.076677,0.114529,0.190150", \
				        "0.048485,0.053569,0.063296,0.082208,0.120076,0.195676", \
				        "0.055222,0.060366,0.070204,0.089163,0.126809,0.202368", \
				        "0.061547,0.066892,0.076906,0.096012,0.133539,0.209047", \
				        "0.063814,0.069990,0.080875,0.100342,0.138040,0.213391", \
				        "0.053471,0.061120,0.074252,0.096289,0.135160,0.211175", \
				        "0.013554,0.022950,0.039542,0.067042,0.111112,0.189563");
			}
			fall_transition(Timing_X1) {
				values ("0.010510,0.012468,0.016246,0.023619,0.038749,0.070499", \
				        "0.010570,0.012522,0.016258,0.023633,0.038753,0.070503", \
				        "0.010641,0.012581,0.016340,0.023658,0.038758,0.070509", \
				        "0.011695,0.013507,0.017084,0.024119,0.038961,0.070558", \
				        "0.014121,0.015980,0.019526,0.026247,0.040328,0.071008", \
				        "0.017730,0.019744,0.023382,0.030031,0.043420,0.072538", \
				        "0.023634,0.025925,0.030067,0.037262,0.050439,0.077579", \
				        "0.033799,0.036554,0.041484,0.049987,0.064471,0.091077");
			}
			rise_transition(Timing_X1) {
				values ("0.015155,0.019269,0.027742,0.045239,0.081100,0.152850", \
				        "0.015151,0.019269,0.027743,0.045242,0.081103,0.152845", \
				        "0.015337,0.019402,0.027806,0.045265,0.081076,0.152865", \
				        "0.015972,0.019947,0.028197,0.045448,0.081123,0.152844", \
				        "0.017487,0.021088,0.028912,0.045906,0.081295,0.152926", \
				        "0.021293,0.024598,0.031477,0.047128,0.081797,0.153272", \
				        "0.027734,0.031663,0.038570,0.052472,0.084728,0.154986", \
				        "0.037744,0.042672,0.051399,0.065990,0.094098,0.161009");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.044356,0.047897,0.054187,0.065314,0.085392,0.123505", \
				        "0.048050,0.051588,0.057887,0.069017,0.089098,0.127200", \
				        "0.056040,0.059577,0.065926,0.077030,0.097094,0.135262", \
				        "0.070670,0.074406,0.080931,0.092231,0.112407,0.150596", \
				        "0.091491,0.095734,0.103121,0.115406,0.136502,0.174883", \
				        "0.122292,0.127242,0.135712,0.149698,0.172446,0.211966", \
				        "0.170851,0.176783,0.186941,0.203923,0.230320,0.273417", \
				        "0.251306,0.258663,0.271329,0.292229,0.324949,0.375873");
			}
			fall_transition(Timing_X1) {
				values ("0.010526,0.012483,0.016251,0.023714,0.038781,0.070844", \
				        "0.010543,0.012485,0.016264,0.023704,0.038748,0.070845", \
				        "0.010588,0.012556,0.016312,0.023653,0.038883,0.070624", \
				        "0.011657,0.013490,0.017017,0.024162,0.039164,0.070885", \
				        "0.014113,0.015977,0.019482,0.026289,0.040373,0.071020", \
				        "0.017712,0.019729,0.023382,0.030168,0.043370,0.072479", \
				        "0.023629,0.025919,0.030031,0.037215,0.050407,0.078022", \
				        "0.033788,0.036542,0.041437,0.049892,0.064397,0.091352");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.007107,0.007105,0.007102,0.007108,0.007114,0.007113", \
				        "0.007105,0.007103,0.007095,0.007101,0.007108,0.007107", \
				        "0.007116,0.007114,0.007113,0.007119,0.007124,0.007125", \
				        "0.007178,0.007176,0.007174,0.007182,0.007189,0.007187", \
				        "0.007396,0.007395,0.007393,0.007394,0.007392,0.007393", \
				        "0.007991,0.007989,0.007986,0.007996,0.007997,0.007998", \
				        "0.009386,0.009384,0.009385,0.009374,0.009371,0.009378", \
				        "0.012430,0.012428,0.012424,0.012428,0.012422,0.012425");
			}
			rise_power(Power_X1) {
				values ("0.006087,0.006087,0.006093,0.006095,0.006110,0.006120", \
				        "0.006085,0.006085,0.006090,0.006095,0.006102,0.006111", \
				        "0.006105,0.006105,0.006109,0.006119,0.006125,0.006133", \
				        "0.006173,0.006173,0.006177,0.006191,0.006200,0.006208", \
				        "0.006408,0.006408,0.006408,0.006417,0.006436,0.006447", \
				        "0.007025,0.007025,0.007028,0.007036,0.007045,0.007070", \
				        "0.008433,0.008433,0.008437,0.008440,0.008451,0.008463", \
				        "0.011441,0.011441,0.011443,0.011447,0.011451,0.011459");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X1) {
				values ("0.008340,0.008340,0.008348,0.008358,0.008360,0.008367", \
				        "0.008342,0.008342,0.008349,0.008353,0.008355,0.008363", \
				        "0.008364,0.008364,0.008371,0.008381,0.008380,0.008388", \
				        "0.008458,0.008456,0.008460,0.008469,0.008472,0.008484", \
				        "0.008722,0.008717,0.008710,0.008715,0.008719,0.008724", \
				        "0.009394,0.009383,0.009386,0.009385,0.009380,0.009384", \
				        "0.011020,0.010999,0.010981,0.010973,0.010963,0.010955", \
				        "0.014248,0.014216,0.014178,0.014144,0.014120,0.014110");
			}
			fall_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & !RN";

			fall_power(Power_X1) {
				values ("0.009214,0.008979,0.008494,0.007542,0.005579,0.001722", \
				        "0.009196,0.008961,0.008475,0.007524,0.005583,0.001726", \
				        "0.009236,0.008994,0.008516,0.007567,0.005623,0.001766", \
				        "0.009428,0.009184,0.008696,0.007745,0.005801,0.001943", \
				        "0.009991,0.009741,0.009231,0.008276,0.006323,0.002462", \
				        "0.011425,0.011164,0.010685,0.009711,0.007746,0.003878", \
				        "0.015043,0.014764,0.014231,0.013262,0.011293,0.007409", \
				        "0.023200,0.022894,0.022325,0.021280,0.019265,0.015344");
			}
			rise_power(Power_X1) {
				values ("0.007783,0.008029,0.008527,0.009501,0.011445,0.015338", \
				        "0.007744,0.007990,0.008495,0.009466,0.011399,0.015293", \
				        "0.007724,0.007967,0.008463,0.009429,0.011375,0.015268", \
				        "0.007769,0.008010,0.008501,0.009466,0.011407,0.015299", \
				        "0.008074,0.008310,0.008778,0.009736,0.011670,0.015558", \
				        "0.009141,0.009373,0.009876,0.010824,0.012730,0.016603", \
				        "0.012336,0.012558,0.012997,0.013950,0.015851,0.019696", \
				        "0.020014,0.020216,0.020632,0.021544,0.023420,0.027215");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & RN";

			fall_power(Power_X1) {
				values ("0.005846,0.005844,0.005844,0.005843,0.005846,0.005854", \
				        "0.005843,0.005841,0.005841,0.005840,0.005844,0.005852", \
				        "0.005863,0.005862,0.005858,0.005858,0.005862,0.005871", \
				        "0.005960,0.005956,0.005952,0.005952,0.005954,0.005960", \
				        "0.006249,0.006243,0.006238,0.006231,0.006234,0.006243", \
				        "0.007042,0.007030,0.007021,0.007022,0.007015,0.007012", \
				        "0.008943,0.008921,0.008893,0.008887,0.008870,0.008859", \
				        "0.012692,0.012654,0.012602,0.012561,0.012523,0.012505");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & !RN";

			fall_power(Power_X1) {
				values ("0.004612,0.004372,0.003892,0.002924,0.000989,-0.002876", \
				        "0.004631,0.004390,0.003904,0.002938,0.000983,-0.002882", \
				        "0.004678,0.004436,0.003957,0.002989,0.001032,-0.002832", \
				        "0.004863,0.004618,0.004146,0.003187,0.001240,-0.002625", \
				        "0.005414,0.005163,0.004675,0.003702,0.001773,-0.002096", \
				        "0.006733,0.006472,0.005980,0.004987,0.003040,-0.000838", \
				        "0.009707,0.009428,0.008908,0.007907,0.005940,0.002050", \
				        "0.016066,0.015759,0.015190,0.014143,0.012121,0.008196");
			}
			rise_power(Power_X1) {
				values ("0.002934,0.003178,0.003685,0.004641,0.006585,0.010466", \
				        "0.002907,0.003151,0.003652,0.004610,0.006554,0.010434", \
				        "0.002900,0.003142,0.003629,0.004596,0.006540,0.010419", \
				        "0.002967,0.003206,0.003683,0.004647,0.006592,0.010469", \
				        "0.003271,0.003506,0.003982,0.004936,0.006868,0.010740", \
				        "0.004294,0.004523,0.005001,0.005945,0.007861,0.011720", \
				        "0.007023,0.007243,0.007699,0.008639,0.010539,0.014371", \
				        "0.013171,0.013372,0.013798,0.014702,0.016558,0.020346");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & RN";

			fall_power(Power_X1) {
				values ("0.008955,0.008955,0.008957,0.008955,0.008966,0.008979", \
				        "0.008948,0.008948,0.008954,0.008951,0.008962,0.008978", \
				        "0.008976,0.008976,0.008979,0.008977,0.008989,0.008994", \
				        "0.009079,0.009077,0.009077,0.009075,0.009088,0.009098", \
				        "0.009351,0.009345,0.009350,0.009344,0.009350,0.009359", \
				        "0.010003,0.009993,0.009982,0.009962,0.009957,0.009963", \
				        "0.011368,0.011348,0.011328,0.011343,0.011338,0.011316", \
				        "0.014160,0.014126,0.014079,0.014061,0.014028,0.014019");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFRS_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and active low set, and drive strength X2
*******************************************************************************************/

cell (DFFRS_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		preset             	: "!SN";
		clear              	: "!RN";
		clear_preset_var1  	: L;
		clear_preset_var2  	: L;
	}

	area               	: 8.246000;

	cell_leakage_power 	: 43799.227000;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000855;
		fall_capacitance	: 0.000807;
		rise_capacitance	: 0.000904;
		fall_capacitance_range		(0.000704, 0.000923);
		rise_capacitance_range		(0.000748, 0.001005);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;
		min_pulse_width_high	: 0.112114;

		internal_power () {

			when      	: "D & Q & !QN & RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.004146,0.004555,0.005403,0.007443,0.011971");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.010280,0.010680,0.011610,0.013834,0.018804");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004136,0.004534,0.005379,0.007408,0.011925");
			}

		}

		internal_power () {

			when      	: "!D & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.007186,0.007609,0.008463,0.010522,0.015067");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004145,0.004554,0.005402,0.007442,0.011968");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & SN";

			power(Hidden_Power_Clk) {
				values ("0.004132,0.004531,0.005377,0.007408,0.011926");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.011605,0.012321,0.013442,0.016061,0.022158");
			}

		}

		internal_power () {

			when      	: "D & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.011181,0.011611,0.012528,0.014680,0.019445");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000913;
		fall_capacitance	: 0.000825;
		rise_capacitance	: 0.001001;
		fall_capacitance_range		(0.000756, 0.000956);
		rise_capacitance_range		(0.000886, 0.001185);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & SN";
			sdf_cond	   : "(RN == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("0.035196,0.052065,0.057922,0.058616,0.033571", \
				        "0.016727,0.041118,0.051006,0.054264,0.024456", \
				        "-0.006135,0.055246,0.057141,0.047424,0.040703", \
				        "-0.006015,0.016655,0.062378,0.064091,0.066163", \
				        "-0.005775,0.054410,0.137648,0.176876,0.157394");
			}
			rise_constraint(Hold) {
				values ("-0.011719,-0.009593,-0.009800,-0.033182,-0.071543", \
				        "-0.030263,-0.020846,-0.023908,-0.045275,-0.087299", \
				        "-0.032547,-0.027520,-0.033179,-0.039859,-0.077487", \
				        "-0.021566,-0.013332,-0.024039,-0.036061,-0.095004", \
				        "-0.005775,0.015044,0.003978,-0.029131,-0.067851");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & SN";
			sdf_cond	   : "(RN == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.081105,0.052959,0.044960,0.037925,0.067223", \
				        "0.124227,0.104300,0.092873,0.088820,0.114411", \
				        "0.172264,0.147851,0.144645,0.142608,0.162645", \
				        "0.248525,0.222414,0.218433,0.210287,0.218905", \
				        "0.356671,0.328299,0.325245,0.315332,0.327776");
			}
			rise_constraint(Setup) {
				values ("0.055984,0.051486,0.060747,0.084799,0.135121", \
				        "0.089249,0.080665,0.087976,0.108801,0.157573", \
				        "0.110369,0.099835,0.104976,0.123181,0.170789", \
				        "0.136224,0.119891,0.126030,0.146981,0.192595", \
				        "0.160392,0.140777,0.146628,0.177052,0.215206");
			}
		}

		internal_power () {

			when      	: "!CK & !Q & QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005722,0.005704,0.005696,0.005738,0.005947,0.006646,0.008446,0.012580");
			}

		}

		internal_power () {

			when      	: "CK & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000030,0.000026,0.000021,0.000016,0.000013,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000032,0.000027,0.000022,0.000019,0.000016,0.000012,0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005690,0.005673,0.005665,0.005706,0.005922,0.006611,0.008417,0.012559");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004324,0.004307,0.004297,0.004328,0.004537,0.005191,0.006926,0.010931");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000017,0.000015,0.000012,0.000011,0.000009,0.000007,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.005819,0.005800,0.005792,0.005844,0.006047,0.006736,0.008531,0.012659");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000011,0.000010,0.000007,0.000006,0.000004,0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & !QN & !RN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004313,0.004295,0.004286,0.004321,0.004526,0.005183,0.006916,0.010922");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !RN & SN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000028,0.000024,0.000018,0.000014,0.000011,0.000007,0.000003");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.002592;
		fall_capacitance	: 0.002560;
		rise_capacitance	: 0.002624;
		fall_capacitance_range		(0.002551, 0.002576);
		rise_capacitance_range		(0.002594, 0.002635);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.154439;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.042968,-0.058230,-0.065264,-0.058321,-0.019597", \
				        "-0.051330,-0.072108,-0.074883,-0.069443,-0.037020", \
				        "-0.041280,-0.057698,-0.055381,-0.060931,-0.033564", \
				        "-0.020619,-0.007777,-0.038138,-0.003976,0.011596", \
				        "0.052310,0.083201,0.114240,0.088541,0.112173");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.083474,0.104274,0.111127,0.113803,0.102497", \
				        "0.116094,0.136015,0.141419,0.141856,0.127583", \
				        "0.142827,0.161533,0.166394,0.166369,0.151687", \
				        "0.182121,0.200182,0.203778,0.204022,0.189530", \
				        "0.245194,0.262742,0.266610,0.265889,0.252395");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000051,0.000018,0.000014,0.000008,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000086,0.000026,0.000019,0.000013,0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000051,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000054,0.000018,0.000014,0.000008,0.000001");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.001951;
		fall_capacitance	: 0.001896;
		rise_capacitance	: 0.002007;
		fall_capacitance_range		(0.001758, 0.001977);
		rise_capacitance_range		(0.001805, 0.002118);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.282124;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.194108,-0.220467,-0.229483,-0.226437,-0.206644", \
				        "-0.147798,-0.169041,-0.172195,-0.167513,-0.159296", \
				        "-0.079610,-0.115127,-0.112273,-0.138194,-0.110779", \
				        "0.005723,-0.021380,-0.050557,-0.013489,0.007356", \
				        "0.182790,0.123876,0.061642,0.135785,0.114769");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.272586,0.295884,0.303619,0.306996,0.293703", \
				        "0.247422,0.270650,0.278501,0.281807,0.268601", \
				        "0.237261,0.260868,0.268797,0.271817,0.258746", \
				        "0.225245,0.249602,0.257681,0.261656,0.248173", \
				        "0.216607,0.241066,0.248643,0.254000,0.241757");
			}
		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000034,0.000006,0.000004,0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000035,0.000005,0.000003,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000031,0.000006,0.000004,0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002054,0.002180,0.002718,0.004100,0.007197");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.171044,0.177580,0.184669,0.196406,0.216722,0.253815", \
				        "0.174266,0.180799,0.188032,0.199786,0.219829,0.256784", \
				        "0.180220,0.186751,0.193836,0.205767,0.225712,0.262388", \
				        "0.187251,0.193781,0.200863,0.212989,0.233120,0.269776", \
				        "0.194909,0.201431,0.208508,0.220316,0.240813,0.277684", \
				        "0.201136,0.207649,0.214725,0.226586,0.247476,0.284347", \
				        "0.199637,0.206156,0.213225,0.224963,0.245039,0.282285", \
				        "0.176735,0.183252,0.190280,0.201951,0.222072,0.258781");
			}
			cell_rise(Timing_X2) {
				values ("0.164979,0.173259,0.182964,0.201789,0.238642,0.311836", \
				        "0.168306,0.176590,0.185893,0.204913,0.241781,0.314991", \
				        "0.173765,0.182051,0.191868,0.210169,0.247264,0.320414", \
				        "0.179906,0.188197,0.197963,0.216782,0.253500,0.326270", \
				        "0.185085,0.193360,0.203160,0.222033,0.258723,0.331686", \
				        "0.186681,0.194969,0.204779,0.223471,0.260301,0.333188", \
				        "0.177955,0.186249,0.195974,0.214533,0.251413,0.324374", \
				        "0.145887,0.154227,0.164015,0.182903,0.219550,0.292690");
			}
			fall_transition(Timing_X2) {
				values ("0.009352,0.012410,0.016064,0.023102,0.037039,0.066890", \
				        "0.009368,0.012404,0.016065,0.022983,0.037016,0.066872", \
				        "0.009370,0.012401,0.016063,0.023082,0.036968,0.066842", \
				        "0.009352,0.012409,0.016064,0.022985,0.037016,0.066853", \
				        "0.009343,0.012376,0.016033,0.022920,0.036932,0.066861", \
				        "0.009366,0.012386,0.016057,0.023035,0.037243,0.066915", \
				        "0.009347,0.012392,0.016052,0.023013,0.036983,0.066882", \
				        "0.009350,0.012380,0.016042,0.023011,0.036985,0.066881");
			}
			rise_transition(Timing_X2) {
				values ("0.011420,0.016851,0.024592,0.041175,0.075498,0.144804", \
				        "0.011440,0.016845,0.024592,0.041214,0.075504,0.144824", \
				        "0.011439,0.016844,0.024592,0.041185,0.075481,0.144814", \
				        "0.011441,0.016838,0.024592,0.041208,0.075486,0.144889", \
				        "0.011389,0.016811,0.024572,0.041179,0.075535,0.144860", \
				        "0.011431,0.016852,0.024597,0.041185,0.075499,0.144835", \
				        "0.011449,0.016872,0.024584,0.041181,0.075558,0.144813", \
				        "0.011614,0.016969,0.024666,0.041231,0.075562,0.144815");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & !SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.047547,0.053809,0.060629,0.072114,0.092088,0.129193", \
				        "0.051279,0.057527,0.064343,0.075826,0.095805,0.132909", \
				        "0.059357,0.065586,0.072372,0.083850,0.103883,0.140996", \
				        "0.075376,0.081699,0.088626,0.100154,0.120213,0.157328", \
				        "0.099499,0.106711,0.114475,0.126975,0.147595,0.184975", \
				        "0.134580,0.142934,0.151933,0.165940,0.188357,0.226735", \
				        "0.190714,0.200479,0.210576,0.227177,0.252358,0.293121", \
				        "0.285426,0.297141,0.309349,0.328844,0.358859,0.404796");
			}
			cell_rise(Timing_X2) {
				values ("0.036762,0.044624,0.054173,0.072789,0.109378,0.182403", \
				        "0.039355,0.047207,0.056729,0.075156,0.111796,0.184821", \
				        "0.043882,0.051732,0.061273,0.079662,0.116291,0.189325", \
				        "0.050049,0.058117,0.067778,0.086239,0.122746,0.195761", \
				        "0.055954,0.064612,0.074643,0.093154,0.129702,0.202696", \
				        "0.057050,0.067111,0.078192,0.097534,0.134240,0.207176", \
				        "0.044600,0.056705,0.069792,0.091591,0.129586,0.203472", \
				        "-0.000200,0.014213,0.030369,0.056842,0.099313,0.175811");
			}
			fall_transition(Timing_X2) {
				values ("0.008680,0.011701,0.015404,0.022439,0.036786,0.066964", \
				        "0.008691,0.011684,0.015406,0.022441,0.036773,0.067002", \
				        "0.008652,0.011692,0.015384,0.022485,0.036801,0.067011", \
				        "0.009279,0.012110,0.015735,0.022626,0.036829,0.066955", \
				        "0.011598,0.014457,0.017974,0.024766,0.038067,0.067272", \
				        "0.014855,0.017877,0.021458,0.028131,0.040683,0.068814", \
				        "0.019559,0.022909,0.026805,0.033633,0.046127,0.072128", \
				        "0.027323,0.031168,0.035485,0.043026,0.055892,0.080339");
			}
			rise_transition(Timing_X2) {
				values ("0.009791,0.015655,0.023787,0.040763,0.075293,0.144593", \
				        "0.009795,0.015660,0.023760,0.040743,0.075306,0.144589", \
				        "0.009931,0.015739,0.023789,0.040767,0.075326,0.144599", \
				        "0.010590,0.016240,0.024103,0.040849,0.075346,0.144601", \
				        "0.012083,0.017450,0.024935,0.041223,0.075438,0.144642", \
				        "0.014866,0.020371,0.027441,0.042706,0.076041,0.144909", \
				        "0.019073,0.025696,0.033023,0.047133,0.078647,0.146732", \
				        "0.025468,0.033432,0.042420,0.057396,0.086185,0.152325");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.047634,0.053958,0.060854,0.072446,0.092602,0.129855", \
				        "0.051368,0.057703,0.064594,0.076185,0.096325,0.133580", \
				        "0.059416,0.065739,0.072625,0.084199,0.104345,0.141602", \
				        "0.075536,0.081941,0.088884,0.100525,0.120666,0.157882", \
				        "0.099776,0.107121,0.114855,0.127402,0.148244,0.185709", \
				        "0.135089,0.143577,0.152473,0.166764,0.189283,0.227735", \
				        "0.191423,0.201351,0.211685,0.228053,0.253564,0.294113", \
				        "0.286704,0.298539,0.310921,0.330216,0.360096,0.405120");
			}
			fall_transition(Timing_X2) {
				values ("0.008768,0.011824,0.015554,0.022663,0.036957,0.067304", \
				        "0.008778,0.011827,0.015544,0.022647,0.036961,0.067531", \
				        "0.008791,0.011843,0.015560,0.022651,0.036975,0.067288", \
				        "0.009404,0.012261,0.015856,0.022838,0.037049,0.067471", \
				        "0.011851,0.014706,0.018163,0.024783,0.038114,0.067817", \
				        "0.015201,0.018244,0.021759,0.028327,0.041198,0.069128", \
				        "0.020087,0.023415,0.027185,0.033885,0.046080,0.071904", \
				        "0.027958,0.031685,0.035818,0.043025,0.055199,0.078903");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & !SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.047700,0.053974,0.060798,0.072339,0.092414,0.129636", \
				        "0.051402,0.057666,0.064490,0.076035,0.096091,0.133328", \
				        "0.059433,0.065685,0.072509,0.084029,0.104143,0.141376", \
				        "0.075537,0.081889,0.088765,0.100385,0.120477,0.157719", \
				        "0.099732,0.106983,0.114632,0.127097,0.147870,0.185326", \
				        "0.135086,0.143463,0.152268,0.166261,0.188685,0.227131", \
				        "0.191128,0.200950,0.211138,0.227538,0.252439,0.292796", \
				        "0.285415,0.296652,0.308376,0.326892,0.354861,0.397166");
			}
			cell_rise(Timing_X2) {
				values ("0.326163,0.334442,0.344266,0.363063,0.400025,0.472929", \
				        "0.328852,0.337133,0.346754,0.365639,0.402647,0.475545", \
				        "0.333195,0.341476,0.351459,0.370140,0.407013,0.479934", \
				        "0.340109,0.348388,0.358217,0.377058,0.414076,0.486989", \
				        "0.353240,0.361519,0.371098,0.389903,0.426536,0.499566", \
				        "0.378077,0.386359,0.396566,0.415389,0.452097,0.525138", \
				        "0.424131,0.432518,0.442241,0.461977,0.498749,0.571739", \
				        "0.498213,0.506892,0.516872,0.535054,0.573593,0.646712");
			}
			fall_transition(Timing_X2) {
				values ("0.008681,0.011721,0.015414,0.022520,0.036835,0.067107", \
				        "0.008682,0.011722,0.015416,0.022523,0.036844,0.067108", \
				        "0.008699,0.011739,0.015430,0.022494,0.036851,0.067114", \
				        "0.009307,0.012155,0.015819,0.022805,0.036970,0.067160", \
				        "0.011668,0.014502,0.017980,0.024555,0.038046,0.067460", \
				        "0.014931,0.017972,0.021515,0.027948,0.040794,0.068846", \
				        "0.019718,0.023044,0.026834,0.033366,0.045728,0.071464", \
				        "0.026234,0.029610,0.033497,0.040244,0.051737,0.073631");
			}
			rise_transition(Timing_X2) {
				values ("0.011546,0.016847,0.024535,0.041099,0.075375,0.144636", \
				        "0.011551,0.016841,0.024525,0.041100,0.075456,0.144686", \
				        "0.011551,0.016840,0.024535,0.041041,0.075452,0.144709", \
				        "0.011541,0.016848,0.024530,0.041098,0.075466,0.144709", \
				        "0.011537,0.016849,0.024538,0.041095,0.075350,0.144699", \
				        "0.011555,0.016842,0.024523,0.041023,0.075342,0.144704", \
				        "0.011746,0.017056,0.024713,0.041153,0.075437,0.144696", \
				        "0.012267,0.017657,0.025246,0.041538,0.075639,0.144976");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.047724,0.054107,0.061065,0.072774,0.093039,0.130428", \
				        "0.051415,0.057787,0.064752,0.076479,0.096745,0.134130", \
				        "0.059448,0.065812,0.072767,0.084457,0.104741,0.142137", \
				        "0.075578,0.082022,0.089026,0.100778,0.121071,0.158420", \
				        "0.099833,0.107225,0.115043,0.127722,0.148734,0.186313", \
				        "0.135080,0.143664,0.152666,0.167248,0.189923,0.228539", \
				        "0.191648,0.201731,0.212272,0.229000,0.254338,0.294887", \
				        "0.286492,0.298060,0.310134,0.328859,0.357416,0.399399");
			}
			fall_transition(Timing_X2) {
				values ("0.008842,0.011938,0.015702,0.022830,0.037145,0.067372", \
				        "0.008819,0.011924,0.015699,0.022832,0.037144,0.067360", \
				        "0.008839,0.011939,0.015715,0.022830,0.037150,0.067355", \
				        "0.009462,0.012363,0.016017,0.023027,0.037243,0.067414", \
				        "0.011921,0.014838,0.018358,0.024937,0.038369,0.067722", \
				        "0.015357,0.018510,0.022128,0.028625,0.041213,0.069092", \
				        "0.020367,0.023836,0.027684,0.034249,0.046184,0.071685", \
				        "0.027218,0.030747,0.034639,0.041233,0.052299,0.073846");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.142278,0.150614,0.160382,0.178942,0.215481,0.288594", \
				        "0.146154,0.154478,0.164173,0.182734,0.219153,0.292239", \
				        "0.152597,0.160935,0.170708,0.189220,0.225775,0.298876", \
				        "0.164174,0.172504,0.182294,0.200736,0.237367,0.310445", \
				        "0.185811,0.194146,0.203866,0.222516,0.258879,0.331874", \
				        "0.219362,0.227874,0.237675,0.256617,0.293149,0.366143", \
				        "0.266752,0.275631,0.285584,0.304804,0.341221,0.414212", \
				        "0.333837,0.343290,0.353586,0.372555,0.409464,0.482515");
			}
			rise_transition(Timing_X2) {
				values ("0.011574,0.016919,0.024542,0.041008,0.075314,0.144828", \
				        "0.011589,0.016922,0.024545,0.040995,0.075365,0.144855", \
				        "0.011601,0.016923,0.024542,0.041008,0.075315,0.144830", \
				        "0.011614,0.016919,0.024538,0.040988,0.075319,0.144847", \
				        "0.011610,0.016949,0.024530,0.041002,0.075363,0.144853", \
				        "0.012111,0.017312,0.024780,0.041118,0.075387,0.144866", \
				        "0.012961,0.018037,0.025225,0.041341,0.075487,0.144828", \
				        "0.014169,0.019205,0.026032,0.041681,0.075654,0.144865");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.349118,0.357369,0.367101,0.385974,0.422922,0.495467", \
				        "0.352978,0.361095,0.370773,0.389743,0.426651,0.499198", \
				        "0.360539,0.368737,0.378574,0.397476,0.434387,0.507078", \
				        "0.373741,0.381966,0.391670,0.410372,0.447306,0.519959", \
				        "0.390760,0.399019,0.408763,0.427174,0.464285,0.537676", \
				        "0.412226,0.420507,0.430247,0.448321,0.485204,0.557931", \
				        "0.438014,0.446303,0.455789,0.476547,0.512742,0.585303", \
				        "0.472826,0.481116,0.490741,0.510787,0.547712,0.621592");
			}
			rise_transition(Timing_X2) {
				values ("0.011516,0.016875,0.024526,0.041047,0.075412,0.144691", \
				        "0.011527,0.016872,0.024520,0.041046,0.075413,0.144687", \
				        "0.011540,0.016870,0.024516,0.041023,0.075421,0.144703", \
				        "0.011516,0.016875,0.024523,0.041042,0.075336,0.144722", \
				        "0.011520,0.016869,0.024522,0.041035,0.075421,0.144706", \
				        "0.011545,0.016867,0.024526,0.041026,0.075316,0.144669", \
				        "0.011539,0.016862,0.024525,0.041049,0.075341,0.144853", \
				        "0.011532,0.016885,0.024543,0.041046,0.075430,0.144752");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.006592,0.006579,0.006579,0.006584,0.006600,0.006610", \
				        "0.006589,0.006576,0.006577,0.006583,0.006596,0.006602", \
				        "0.006609,0.006596,0.006595,0.006609,0.006617,0.006627", \
				        "0.006677,0.006664,0.006663,0.006679,0.006692,0.006703", \
				        "0.006910,0.006897,0.006895,0.006902,0.006923,0.006937", \
				        "0.007529,0.007516,0.007513,0.007521,0.007550,0.007561", \
				        "0.008936,0.008923,0.008922,0.008928,0.008937,0.008953", \
				        "0.011945,0.011931,0.011928,0.011934,0.011941,0.011948");
			}
			rise_power(Power_X2) {
				values ("0.007644,0.007620,0.007606,0.007604,0.007610,0.007600", \
				        "0.007640,0.007617,0.007596,0.007597,0.007602,0.007592", \
				        "0.007653,0.007629,0.007617,0.007611,0.007619,0.007612", \
				        "0.007715,0.007691,0.007678,0.007680,0.007682,0.007673", \
				        "0.007933,0.007907,0.007894,0.007889,0.007884,0.007875", \
				        "0.008526,0.008502,0.008491,0.008488,0.008484,0.008475", \
				        "0.009924,0.009899,0.009885,0.009869,0.009860,0.009859", \
				        "0.012966,0.012942,0.012928,0.012922,0.012908,0.012900");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & !SN";

			fall_power(Power_X2) {
				values ("0.005356,0.004614,0.003643,0.001688,-0.002192,-0.009935", \
				        "0.005351,0.004609,0.003637,0.001681,-0.002189,-0.009933", \
				        "0.005410,0.004669,0.003676,0.001736,-0.002138,-0.009878", \
				        "0.005628,0.004867,0.003896,0.001939,-0.001949,-0.009691", \
				        "0.006222,0.005430,0.004428,0.002464,-0.001421,-0.009166", \
				        "0.007530,0.006693,0.005666,0.003679,-0.000235,-0.008004", \
				        "0.010374,0.009476,0.008392,0.006360,0.002413,-0.005385", \
				        "0.016327,0.015353,0.014182,0.012059,0.007999,0.000133");
			}
			rise_power(Power_X2) {
				values ("0.002696,0.003428,0.004402,0.006362,0.010268,0.018018", \
				        "0.002673,0.003403,0.004383,0.006340,0.010238,0.017989", \
				        "0.002675,0.003400,0.004366,0.006319,0.010225,0.017976", \
				        "0.002734,0.003450,0.004408,0.006347,0.010249,0.018000", \
				        "0.003021,0.003725,0.004678,0.006606,0.010501,0.018248", \
				        "0.003995,0.004678,0.005617,0.007525,0.011399,0.019128", \
				        "0.006509,0.007160,0.008072,0.009956,0.013799,0.021488", \
				        "0.012122,0.012708,0.013576,0.015409,0.019176,0.026795");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & SN";

			fall_power(Power_X2) {
				values ("0.006873,0.006863,0.006865,0.006870,0.006877,0.006882", \
				        "0.006860,0.006852,0.006856,0.006862,0.006872,0.006877", \
				        "0.006882,0.006874,0.006878,0.006882,0.006891,0.006898", \
				        "0.006990,0.006974,0.006971,0.006969,0.006978,0.006995", \
				        "0.007293,0.007252,0.007235,0.007207,0.007221,0.007215", \
				        "0.007942,0.007881,0.007850,0.007792,0.007798,0.007770", \
				        "0.009290,0.009191,0.009135,0.009083,0.009053,0.009030", \
				        "0.012060,0.011920,0.011803,0.011708,0.011594,0.011559");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & !SN";

			fall_power(Power_X2) {
				values ("0.014239,0.013504,0.012520,0.010584,0.006707,-0.001024", \
				        "0.014226,0.013491,0.012505,0.010571,0.006697,-0.001031", \
				        "0.014271,0.013532,0.012555,0.010615,0.006747,-0.000982", \
				        "0.014476,0.013716,0.012737,0.010785,0.006921,-0.000810", \
				        "0.015048,0.014256,0.013258,0.011290,0.007408,-0.000331", \
				        "0.016467,0.015630,0.014603,0.012606,0.008699,0.000943", \
				        "0.019803,0.018904,0.017832,0.015807,0.011859,0.004065", \
				        "0.026721,0.025756,0.024605,0.022504,0.018481,0.010625");
			}
			rise_power(Power_X2) {
				values ("0.013905,0.014613,0.015573,0.017510,0.021435,0.029209", \
				        "0.013893,0.014601,0.015560,0.017497,0.021417,0.029190", \
				        "0.013878,0.014586,0.015551,0.017487,0.021394,0.029167", \
				        "0.013864,0.014573,0.015537,0.017471,0.021382,0.029154", \
				        "0.013857,0.014565,0.015522,0.017471,0.021352,0.029128", \
				        "0.013954,0.014662,0.015623,0.017578,0.021457,0.029230", \
				        "0.014517,0.015224,0.016183,0.018145,0.022044,0.029812", \
				        "0.016555,0.017258,0.018213,0.020144,0.024046,0.031808");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & SN";

			fall_power(Power_X2) {
				values ("0.008850,0.008839,0.008841,0.008854,0.008860,0.008868", \
				        "0.008840,0.008830,0.008834,0.008848,0.008853,0.008862", \
				        "0.008862,0.008852,0.008855,0.008867,0.008872,0.008881", \
				        "0.008968,0.008950,0.008947,0.008956,0.008962,0.008974", \
				        "0.009269,0.009231,0.009212,0.009210,0.009202,0.009215", \
				        "0.009999,0.009935,0.009899,0.009891,0.009874,0.009871", \
				        "0.011720,0.011621,0.011556,0.011510,0.011475,0.011449", \
				        "0.015079,0.014942,0.014835,0.014738,0.014666,0.014620");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X2) {
				values ("0.009475,0.009460,0.009456,0.009449,0.009455,0.009450", \
				        "0.009470,0.009458,0.009452,0.009445,0.009451,0.009447", \
				        "0.009495,0.009477,0.009474,0.009467,0.009470,0.009471", \
				        "0.009614,0.009588,0.009575,0.009567,0.009571,0.009568", \
				        "0.009916,0.009872,0.009857,0.009833,0.009829,0.009846", \
				        "0.010625,0.010554,0.010514,0.010471,0.010446,0.010413", \
				        "0.012088,0.011980,0.011907,0.011877,0.011829,0.011781", \
				        "0.015077,0.014928,0.014797,0.014687,0.014586,0.014540");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.210000,0.216272,0.223117,0.235214,0.255904,0.293288", \
				        "0.213338,0.219608,0.226046,0.238350,0.259028,0.296445", \
				        "0.218801,0.225072,0.232021,0.243561,0.264436,0.301867", \
				        "0.224944,0.231217,0.238116,0.250241,0.270674,0.307681", \
				        "0.230167,0.236430,0.243374,0.255274,0.275595,0.312760", \
				        "0.231701,0.237970,0.244943,0.256835,0.277306,0.314415", \
				        "0.222998,0.229268,0.236177,0.247765,0.268274,0.305467", \
				        "0.191001,0.197268,0.204170,0.216330,0.236569,0.273951");
			}
			cell_rise(Timing_X2) {
				values ("0.211222,0.218962,0.228523,0.247104,0.283750,0.356851", \
				        "0.214438,0.222182,0.231889,0.250413,0.286859,0.359825", \
				        "0.220391,0.228140,0.237708,0.256469,0.292695,0.365483", \
				        "0.227454,0.235193,0.244748,0.263635,0.300172,0.372818", \
				        "0.235137,0.242870,0.252434,0.270922,0.307820,0.380688", \
				        "0.241393,0.249127,0.258657,0.277317,0.314722,0.387552", \
				        "0.239953,0.247694,0.257205,0.275750,0.312160,0.385409", \
				        "0.217115,0.224846,0.234362,0.252830,0.289295,0.362036");
			}
			fall_transition(Timing_X2) {
				values ("0.010295,0.013356,0.017095,0.024155,0.038426,0.068535", \
				        "0.010313,0.013371,0.017095,0.024140,0.038430,0.068539", \
				        "0.010302,0.013372,0.017095,0.024136,0.038293,0.068537", \
				        "0.010309,0.013373,0.017096,0.024138,0.038254,0.068511", \
				        "0.010352,0.013388,0.017115,0.024132,0.038293,0.068536", \
				        "0.010299,0.013345,0.017090,0.024131,0.038399,0.068387", \
				        "0.010296,0.013357,0.017109,0.024112,0.038393,0.068290", \
				        "0.010301,0.013374,0.017090,0.024144,0.038401,0.068302");
			}
			rise_transition(Timing_X2) {
				values ("0.011519,0.017310,0.025226,0.041793,0.076156,0.145826", \
				        "0.011503,0.017322,0.025223,0.041786,0.076191,0.145748", \
				        "0.011502,0.017323,0.025232,0.041779,0.076185,0.145821", \
				        "0.011524,0.017311,0.025231,0.041812,0.076234,0.145842", \
				        "0.011470,0.017285,0.025208,0.041804,0.076192,0.145823", \
				        "0.011506,0.017319,0.025223,0.041767,0.076201,0.145842", \
				        "0.011521,0.017310,0.025225,0.041803,0.076228,0.145832", \
				        "0.011493,0.017320,0.025230,0.041801,0.076173,0.145764");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.087943,0.095670,0.105287,0.123808,0.160408,0.233565", \
				        "0.091452,0.099257,0.108879,0.127598,0.164130,0.237317", \
				        "0.099477,0.107281,0.116936,0.135390,0.172075,0.245204", \
				        "0.115845,0.123636,0.133230,0.151689,0.188236,0.261298", \
				        "0.142625,0.150302,0.159731,0.178068,0.214531,0.287539", \
				        "0.181659,0.189269,0.198672,0.216856,0.253357,0.325988", \
				        "0.242641,0.250189,0.259362,0.277706,0.314306,0.387049", \
				        "0.345181,0.352929,0.362031,0.380134,0.416135,0.488788");
			}
			rise_transition(Timing_X2) {
				values ("0.011477,0.017293,0.025203,0.041801,0.076236,0.145862", \
				        "0.011481,0.017290,0.025214,0.041773,0.076244,0.145670", \
				        "0.011474,0.017295,0.025215,0.041805,0.076221,0.145870", \
				        "0.011501,0.017291,0.025221,0.041805,0.076267,0.145768", \
				        "0.011604,0.017374,0.025271,0.041801,0.076280,0.145772", \
				        "0.011898,0.017638,0.025455,0.041932,0.076187,0.145571", \
				        "0.012485,0.018142,0.025810,0.042080,0.076240,0.145676", \
				        "0.013678,0.019189,0.026564,0.042432,0.076346,0.145706");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.088006,0.095821,0.105411,0.123875,0.160453,0.233558", \
				        "0.091658,0.099482,0.109088,0.127577,0.164135,0.237251", \
				        "0.099691,0.107503,0.117123,0.135570,0.172112,0.245207", \
				        "0.116054,0.123855,0.133393,0.151833,0.188357,0.261380", \
				        "0.142973,0.150690,0.160125,0.178452,0.214760,0.287930", \
				        "0.181950,0.189571,0.198965,0.217313,0.253574,0.326613", \
				        "0.243721,0.251314,0.260436,0.278812,0.314991,0.387692", \
				        "0.344037,0.351726,0.360848,0.378570,0.414786,0.487312");
			}
			rise_transition(Timing_X2) {
				values ("0.011443,0.017270,0.025199,0.041789,0.076231,0.145577", \
				        "0.011417,0.017246,0.025197,0.041786,0.076230,0.145582", \
				        "0.011409,0.017252,0.025201,0.041779,0.076216,0.145581", \
				        "0.011421,0.017257,0.025210,0.041803,0.076184,0.145558", \
				        "0.011575,0.017381,0.025279,0.041850,0.076210,0.145563", \
				        "0.011949,0.017670,0.025487,0.041931,0.076197,0.145576", \
				        "0.012507,0.018154,0.025817,0.042125,0.076275,0.145590", \
				        "0.013359,0.018911,0.026359,0.042399,0.076377,0.145702");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & !RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044267,0.050359,0.057096,0.068545,0.088570,0.125603", \
				        "0.047956,0.054043,0.060778,0.072244,0.092255,0.129290", \
				        "0.055948,0.062013,0.068765,0.080221,0.100241,0.137283", \
				        "0.071182,0.077481,0.084352,0.095925,0.115943,0.152986", \
				        "0.093112,0.100306,0.107971,0.120602,0.141537,0.178937", \
				        "0.124997,0.133316,0.142428,0.156762,0.179568,0.218292", \
				        "0.175241,0.185063,0.195723,0.212836,0.239367,0.281630", \
				        "0.257838,0.269754,0.282641,0.303770,0.336469,0.386654");
			}
			cell_rise(Timing_X2) {
				values ("0.036593,0.044655,0.054524,0.073104,0.109818,0.182933", \
				        "0.039682,0.047753,0.057450,0.076124,0.112767,0.185885", \
				        "0.045696,0.053730,0.063401,0.081878,0.118485,0.191597", \
				        "0.053366,0.061562,0.071423,0.089936,0.126315,0.199360", \
				        "0.060555,0.069401,0.079531,0.098078,0.134496,0.207421", \
				        "0.063468,0.073875,0.085293,0.104548,0.140937,0.213637", \
				        "0.054198,0.066678,0.080317,0.102607,0.140677,0.213793", \
				        "0.016240,0.031077,0.047802,0.075406,0.119055,0.194586");
			}
			fall_transition(Timing_X2) {
				values ("0.009196,0.012247,0.015998,0.023142,0.037433,0.067351", \
				        "0.009199,0.012251,0.016020,0.023219,0.037436,0.067352", \
				        "0.009229,0.012288,0.016059,0.023230,0.037452,0.067357", \
				        "0.010288,0.013104,0.016591,0.023571,0.037523,0.067365", \
				        "0.012973,0.015881,0.019388,0.025850,0.039072,0.067901", \
				        "0.016847,0.019982,0.023616,0.030088,0.042667,0.069918", \
				        "0.023013,0.026539,0.030597,0.037620,0.050214,0.075526", \
				        "0.033635,0.037745,0.042514,0.050721,0.064636,0.089536");
			}
			rise_transition(Timing_X2) {
				values ("0.011150,0.017012,0.025028,0.041690,0.076083,0.145486", \
				        "0.011180,0.017058,0.025010,0.041690,0.076107,0.145484", \
				        "0.011318,0.017155,0.025068,0.041700,0.076117,0.145490", \
				        "0.012197,0.017778,0.025610,0.041952,0.076147,0.145503", \
				        "0.014291,0.019357,0.026577,0.042434,0.076417,0.145553", \
				        "0.018046,0.023347,0.029778,0.044089,0.076993,0.145906", \
				        "0.023955,0.030361,0.037462,0.050426,0.080195,0.147609", \
				        "0.033994,0.041307,0.050117,0.064799,0.090991,0.153732");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044275,0.050359,0.057086,0.068521,0.088500,0.125742", \
				        "0.047942,0.054022,0.060732,0.072203,0.092185,0.129428", \
				        "0.055949,0.062017,0.068737,0.080162,0.100153,0.137412", \
				        "0.071174,0.077473,0.084336,0.095889,0.115975,0.153270", \
				        "0.093118,0.100300,0.108012,0.120643,0.141572,0.179228", \
				        "0.124988,0.133304,0.142229,0.156749,0.179722,0.218564", \
				        "0.175362,0.185224,0.195858,0.213095,0.239827,0.280635", \
				        "0.258312,0.270327,0.283448,0.304565,0.333390,0.372215");
			}
			fall_transition(Timing_X2) {
				values ("0.009174,0.012223,0.015948,0.023048,0.037404,0.067722", \
				        "0.009170,0.012222,0.015945,0.023092,0.037404,0.067709", \
				        "0.009227,0.012269,0.015987,0.023070,0.037422,0.067716", \
				        "0.010287,0.013093,0.016585,0.023487,0.037676,0.067737", \
				        "0.012972,0.015875,0.019348,0.025895,0.039221,0.068147", \
				        "0.016867,0.020003,0.023649,0.030219,0.042907,0.069696", \
				        "0.023077,0.026633,0.030733,0.037885,0.049918,0.072259", \
				        "0.034028,0.038243,0.042975,0.048916,0.053626,0.072464");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & !RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044222,0.050298,0.057069,0.068466,0.088434,0.125475", \
				        "0.047919,0.053989,0.060766,0.072221,0.092187,0.129228", \
				        "0.055974,0.062036,0.068732,0.080207,0.100181,0.137227", \
				        "0.071189,0.077466,0.084321,0.095885,0.115964,0.153023", \
				        "0.092986,0.100153,0.107941,0.120572,0.141578,0.178988", \
				        "0.124935,0.133230,0.142340,0.156673,0.179495,0.218260", \
				        "0.175115,0.184930,0.195565,0.212685,0.239205,0.281433", \
				        "0.257620,0.269532,0.282420,0.303541,0.336202,0.386395");
			}
			cell_rise(Timing_X2) {
				values ("0.036603,0.044669,0.054455,0.073092,0.109741,0.182862", \
				        "0.039641,0.047694,0.057411,0.076040,0.112751,0.185864", \
				        "0.045685,0.053696,0.063399,0.081864,0.118438,0.191539", \
				        "0.053351,0.061551,0.071420,0.089927,0.126312,0.199369", \
				        "0.060559,0.069397,0.079508,0.098082,0.134494,0.207447", \
				        "0.063484,0.073910,0.085244,0.104643,0.140875,0.213567", \
				        "0.054223,0.066716,0.080401,0.102742,0.140578,0.213679", \
				        "0.016207,0.031042,0.047869,0.075646,0.119530,0.195021");
			}
			fall_transition(Timing_X2) {
				values ("0.009164,0.012221,0.015943,0.023072,0.037408,0.067411", \
				        "0.009169,0.012229,0.015944,0.023075,0.037376,0.067406", \
				        "0.009265,0.012288,0.015965,0.023094,0.037418,0.067415", \
				        "0.010284,0.013100,0.016608,0.023488,0.037596,0.067443", \
				        "0.012992,0.015880,0.019377,0.025895,0.039155,0.068016", \
				        "0.016852,0.019976,0.023581,0.030247,0.042774,0.070103", \
				        "0.022999,0.026519,0.030589,0.037588,0.050179,0.075586", \
				        "0.033604,0.037716,0.042500,0.050685,0.064600,0.089638");
			}
			rise_transition(Timing_X2) {
				values ("0.011165,0.017027,0.025012,0.041667,0.076083,0.145541", \
				        "0.011161,0.017029,0.025004,0.041668,0.076166,0.145525", \
				        "0.011299,0.017111,0.025065,0.041688,0.076104,0.145506", \
				        "0.012235,0.017817,0.025583,0.041916,0.076210,0.145560", \
				        "0.014281,0.019345,0.026579,0.042422,0.076432,0.145638", \
				        "0.018036,0.023341,0.029835,0.044316,0.076969,0.145946", \
				        "0.023939,0.030342,0.037444,0.050356,0.080191,0.147599", \
				        "0.033988,0.041299,0.050093,0.064697,0.090839,0.153655");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044270,0.050346,0.057073,0.068544,0.088574,0.125637", \
				        "0.047957,0.054030,0.060771,0.072223,0.092258,0.129322", \
				        "0.055935,0.061998,0.068747,0.080230,0.100276,0.137345", \
				        "0.071190,0.077484,0.084352,0.095914,0.115980,0.153113", \
				        "0.093076,0.100256,0.108012,0.120641,0.141748,0.179043", \
				        "0.125033,0.133347,0.142267,0.156669,0.179577,0.218790", \
				        "0.175123,0.184937,0.195505,0.212774,0.239196,0.281775", \
				        "0.257579,0.269489,0.282454,0.303503,0.336170,0.386393");
			}
			fall_transition(Timing_X2) {
				values ("0.009190,0.012231,0.015981,0.023179,0.037479,0.067855", \
				        "0.009179,0.012249,0.015999,0.023181,0.037483,0.067855", \
				        "0.009214,0.012287,0.016031,0.023170,0.037551,0.067860", \
				        "0.010270,0.013093,0.016585,0.023545,0.037717,0.067792", \
				        "0.012980,0.015876,0.019335,0.025982,0.039308,0.068016", \
				        "0.016820,0.019954,0.023591,0.030177,0.042817,0.070537", \
				        "0.022993,0.026513,0.030553,0.037560,0.050272,0.075982", \
				        "0.033591,0.037704,0.042441,0.050588,0.064500,0.089921");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.007644,0.007620,0.007606,0.007604,0.007610,0.007600", \
				        "0.007640,0.007617,0.007596,0.007597,0.007602,0.007592", \
				        "0.007653,0.007629,0.007617,0.007611,0.007619,0.007612", \
				        "0.007715,0.007691,0.007678,0.007680,0.007682,0.007673", \
				        "0.007933,0.007907,0.007894,0.007889,0.007884,0.007875", \
				        "0.008526,0.008502,0.008491,0.008488,0.008484,0.008475", \
				        "0.009924,0.009899,0.009885,0.009869,0.009860,0.009859", \
				        "0.012966,0.012942,0.012928,0.012922,0.012908,0.012900");
			}
			rise_power(Power_X2) {
				values ("0.006592,0.006579,0.006579,0.006584,0.006600,0.006610", \
				        "0.006589,0.006576,0.006577,0.006583,0.006596,0.006602", \
				        "0.006609,0.006596,0.006595,0.006609,0.006617,0.006627", \
				        "0.006677,0.006664,0.006663,0.006679,0.006692,0.006703", \
				        "0.006910,0.006897,0.006895,0.006902,0.006923,0.006937", \
				        "0.007529,0.007516,0.007513,0.007521,0.007550,0.007561", \
				        "0.008936,0.008923,0.008922,0.008928,0.008937,0.008953", \
				        "0.011945,0.011931,0.011928,0.011934,0.011941,0.011948");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X2) {
				values ("0.008850,0.008839,0.008841,0.008854,0.008860,0.008868", \
				        "0.008840,0.008830,0.008834,0.008848,0.008853,0.008862", \
				        "0.008862,0.008852,0.008855,0.008867,0.008872,0.008881", \
				        "0.008968,0.008950,0.008947,0.008956,0.008962,0.008974", \
				        "0.009269,0.009231,0.009212,0.009210,0.009202,0.009215", \
				        "0.009999,0.009935,0.009899,0.009891,0.009874,0.009871", \
				        "0.011720,0.011621,0.011556,0.011510,0.011475,0.011449", \
				        "0.015079,0.014942,0.014835,0.014738,0.014666,0.014620");
			}
			fall_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & !RN";

			fall_power(Power_X2) {
				values ("0.009734,0.009000,0.008009,0.006077,0.002232,-0.005497", \
				        "0.009719,0.008985,0.007999,0.006061,0.002219,-0.005512", \
				        "0.009757,0.009020,0.008041,0.006100,0.002257,-0.005471", \
				        "0.009974,0.009215,0.008219,0.006277,0.002431,-0.005300", \
				        "0.010603,0.009808,0.008773,0.006821,0.002956,-0.004784", \
				        "0.012151,0.011302,0.010276,0.008277,0.004381,-0.003376", \
				        "0.015969,0.015047,0.013920,0.011882,0.007948,0.000151", \
				        "0.024510,0.023505,0.022283,0.020077,0.016018,0.008128");
			}
			rise_power(Power_X2) {
				values ("0.008269,0.008999,0.009989,0.011934,0.015839,0.023610", \
				        "0.008231,0.008960,0.009943,0.011886,0.015788,0.023558", \
				        "0.008216,0.008938,0.009918,0.011850,0.015741,0.023511", \
				        "0.008289,0.008998,0.009970,0.011893,0.015770,0.023536", \
				        "0.008636,0.009327,0.010266,0.012169,0.016025,0.023777", \
				        "0.009768,0.010436,0.011413,0.013284,0.017091,0.024813", \
				        "0.013136,0.013750,0.014629,0.016487,0.020263,0.027926", \
				        "0.021211,0.021720,0.022525,0.024293,0.027999,0.035554");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & RN";

			fall_power(Power_X2) {
				values ("0.006371,0.006355,0.006348,0.006346,0.006348,0.006358", \
				        "0.006364,0.006346,0.006338,0.006342,0.006343,0.006353", \
				        "0.006387,0.006368,0.006359,0.006357,0.006360,0.006370", \
				        "0.006496,0.006469,0.006455,0.006446,0.006448,0.006457", \
				        "0.006821,0.006775,0.006751,0.006733,0.006722,0.006735", \
				        "0.007673,0.007597,0.007555,0.007530,0.007508,0.007502", \
				        "0.009685,0.009571,0.009485,0.009427,0.009374,0.009342", \
				        "0.013634,0.013471,0.013333,0.013201,0.013099,0.013034");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & !RN";

			fall_power(Power_X2) {
				values ("0.005137,0.004401,0.003425,0.001492,-0.002383,-0.010125", \
				        "0.005134,0.004394,0.003424,0.001502,-0.002373,-0.010115", \
				        "0.005202,0.004459,0.003464,0.001548,-0.002327,-0.010067", \
				        "0.005413,0.004653,0.003686,0.001750,-0.002137,-0.009879", \
				        "0.006031,0.005235,0.004235,0.002272,-0.001621,-0.009371", \
				        "0.007462,0.006612,0.005583,0.003592,-0.000337,-0.008103", \
				        "0.010634,0.009712,0.008607,0.006551,0.002590,-0.005214", \
				        "0.017377,0.016372,0.015158,0.012961,0.008870,0.000977");
			}
			rise_power(Power_X2) {
				values ("0.003413,0.004141,0.005115,0.007062,0.010973,0.018731", \
				        "0.003387,0.004113,0.005086,0.007030,0.010932,0.018691", \
				        "0.003389,0.004107,0.005073,0.007011,0.010901,0.018659", \
				        "0.003483,0.004190,0.005145,0.007070,0.010950,0.018702", \
				        "0.003827,0.004517,0.005460,0.007365,0.011222,0.018961", \
				        "0.004920,0.005585,0.006519,0.008405,0.012221,0.019932", \
				        "0.007821,0.008435,0.009322,0.011180,0.014958,0.022607", \
				        "0.014366,0.014874,0.015683,0.017452,0.021137,0.028687");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & RN";

			fall_power(Power_X2) {
				values ("0.009475,0.009460,0.009456,0.009449,0.009455,0.009450", \
				        "0.009470,0.009458,0.009452,0.009445,0.009451,0.009447", \
				        "0.009495,0.009477,0.009474,0.009467,0.009470,0.009471", \
				        "0.009614,0.009588,0.009575,0.009567,0.009571,0.009568", \
				        "0.009916,0.009872,0.009857,0.009833,0.009829,0.009846", \
				        "0.010625,0.010554,0.010514,0.010471,0.010446,0.010413", \
				        "0.012088,0.011980,0.011907,0.011877,0.011829,0.011781", \
				        "0.015077,0.014928,0.014797,0.014687,0.014586,0.014540");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFR_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and drive strength X1
*******************************************************************************************/

cell (DFFR_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		clear              	: "!RN";
	}

	area               	: 5.586000;

	cell_leakage_power 	: 22532.971667;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000852;
		fall_capacitance	: 0.000799;
		rise_capacitance	: 0.000904;
		fall_capacitance_range		(0.000685, 0.000918);
		rise_capacitance_range		(0.000747, 0.001002);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.114068;
		min_pulse_width_high	: 0.117974;

		internal_power () {

			when      	: "D & !Q & QN & !RN";

			power(Hidden_Power_Clk) {
				values ("0.008833,0.009316,0.010296,0.012626,0.017743");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN";

			power(Hidden_Power_Clk) {
				values ("0.003963,0.004371,0.005218,0.007242,0.011775");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN";

			power(Hidden_Power_Clk) {
				values ("0.004283,0.004689,0.005543,0.007570,0.012100");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN";

			power(Hidden_Power_Clk) {
				values ("0.003835,0.004247,0.005095,0.007131,0.011672");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000890;
		fall_capacitance	: 0.000847;
		rise_capacitance	: 0.000934;
		fall_capacitance_range		(0.000716, 0.000953);
		rise_capacitance_range		(0.000850, 0.001056);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN";
			sdf_cond	   : "(RN == 1'b1)";
			fall_constraint(Hold) {
				values ("0.002199,0.018765,0.024145,0.013250,-0.012146", \
				        "-0.030134,-0.005664,-0.002534,-0.008197,-0.039494", \
				        "-0.039025,-0.018767,-0.019698,-0.014705,-0.050106", \
				        "-0.063840,-0.042495,-0.034853,-0.041791,-0.056029", \
				        "-0.102604,-0.047211,-0.061232,-0.072040,-0.110079");
			}
			rise_constraint(Hold) {
				values ("-0.011500,-0.005773,-0.012366,-0.021625,-0.069446", \
				        "-0.027348,-0.014369,-0.021991,-0.034477,-0.072476", \
				        "-0.029837,-0.010792,-0.010208,-0.030687,-0.076639", \
				        "-0.001635,-0.003638,-0.005038,-0.030140,-0.080821", \
				        "0.018889,0.031926,0.014319,-0.003682,-0.056201");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN";
			sdf_cond	   : "(RN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.089954,0.063339,0.056478,0.065731,0.084236", \
				        "0.131080,0.112684,0.102616,0.100837,0.130313", \
				        "0.165621,0.154490,0.139331,0.153101,0.158659", \
				        "0.237896,0.212893,0.209576,0.218618,0.232227", \
				        "0.340285,0.313242,0.311073,0.302710,0.317147");
			}
			rise_constraint(Setup) {
				values ("0.071583,0.062786,0.068786,0.094053,0.147112", \
				        "0.111705,0.096215,0.099958,0.122508,0.170796", \
				        "0.125998,0.116906,0.116081,0.138876,0.185817", \
				        "0.156904,0.146507,0.144265,0.161074,0.203165", \
				        "0.188363,0.176169,0.173296,0.179543,0.229345");
			}
		}

		internal_power () {

			when      	: "CK & !Q & QN & !RN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000012,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & RN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000012,0.000010,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN";

			power(Hidden_Power_Data) {
				values ("0.000065,0.000048,0.000033,0.000023,0.000017,0.000012,0.000008,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !RN";

			power(Hidden_Power_Data) {
				values ("0.005445,0.005414,0.005387,0.005378,0.005485,0.005970,0.007438,0.010862");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN";

			power(Hidden_Power_Data) {
				values ("0.005461,0.005436,0.005408,0.005402,0.005508,0.005989,0.007452,0.010884");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & RN";

			power(Hidden_Power_Data) {
				values ("0.005470,0.005442,0.005418,0.005404,0.005517,0.005991,0.007464,0.010894");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.003482;
		fall_capacitance	: 0.003445;
		rise_capacitance	: 0.003519;
		fall_capacitance_range		(0.003434, 0.003462);
		rise_capacitance_range		(0.003476, 0.003533);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.089070;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.036718,-0.054047,-0.053829,-0.050971,-0.020259", \
				        "-0.047789,-0.061027,-0.065805,-0.064370,-0.039802", \
				        "-0.069550,-0.068964,-0.089209,-0.079422,-0.061583", \
				        "-0.097246,-0.108885,-0.121950,-0.117647,-0.094595", \
				        "-0.202969,-0.178777,-0.202015,-0.193928,-0.197514");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.057452,0.078759,0.085243,0.086666,0.070584", \
				        "0.088851,0.108394,0.113149,0.111876,0.094852", \
				        "0.112652,0.130940,0.135359,0.134321,0.117319", \
				        "0.171859,0.186062,0.189580,0.189032,0.175209", \
				        "0.308598,0.317240,0.319634,0.320164,0.311312");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000076,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000066,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000058,0.000020,0.000015,0.000010,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000111,0.000035,0.000027,0.000020,0.000011");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.207384,0.212755,0.221844,0.236860,0.261361,0.303212", \
				        "0.210573,0.215967,0.225127,0.240188,0.264721,0.306569", \
				        "0.216523,0.221905,0.231147,0.246247,0.270691,0.312437", \
				        "0.223713,0.229103,0.238235,0.253612,0.278114,0.319502", \
				        "0.231646,0.237036,0.246070,0.261110,0.285916,0.327501", \
				        "0.237698,0.243083,0.252140,0.266902,0.291503,0.333126", \
				        "0.234872,0.240261,0.249418,0.264240,0.288655,0.330519", \
				        "0.209643,0.215007,0.224178,0.238945,0.263370,0.304776");
			}
			cell_rise(Timing_X1) {
				values ("0.124008,0.129048,0.138553,0.157395,0.195073,0.270556", \
				        "0.127214,0.132254,0.141806,0.160535,0.198239,0.273695", \
				        "0.132692,0.137726,0.147325,0.166038,0.203500,0.278997", \
				        "0.138927,0.143954,0.153557,0.172450,0.210005,0.284964", \
				        "0.144950,0.149975,0.159543,0.178428,0.216261,0.291358", \
				        "0.148454,0.153493,0.163072,0.181872,0.219585,0.294951", \
				        "0.144051,0.149097,0.158551,0.177388,0.215131,0.290571", \
				        "0.117386,0.122471,0.132010,0.150850,0.188494,0.263764");
			}
			fall_transition(Timing_X1) {
				values ("0.015426,0.017902,0.022286,0.030199,0.044764,0.074098", \
				        "0.015423,0.017899,0.022292,0.030175,0.044796,0.074113", \
				        "0.015425,0.017901,0.022288,0.030175,0.044760,0.074103", \
				        "0.015423,0.017898,0.022290,0.030197,0.044772,0.074280", \
				        "0.015409,0.017894,0.022263,0.030087,0.044613,0.074106", \
				        "0.015405,0.017885,0.022283,0.030131,0.044681,0.074104", \
				        "0.015400,0.017880,0.022273,0.030131,0.044643,0.074176", \
				        "0.015408,0.017889,0.022290,0.030138,0.044649,0.074161");
			}
			rise_transition(Timing_X1) {
				values ("0.012643,0.016464,0.024709,0.042219,0.077984,0.149943", \
				        "0.012642,0.016459,0.024710,0.042223,0.077975,0.149897", \
				        "0.012673,0.016480,0.024724,0.042226,0.077999,0.149847", \
				        "0.012664,0.016489,0.024725,0.042225,0.078004,0.149736", \
				        "0.012700,0.016489,0.024726,0.042243,0.078003,0.149716", \
				        "0.012734,0.016542,0.024753,0.042236,0.078008,0.149788", \
				        "0.012800,0.016572,0.024747,0.042249,0.078026,0.149755", \
				        "0.013102,0.016773,0.024865,0.042278,0.078058,0.149797");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.043837,0.047586,0.054016,0.065052,0.084938,0.123208", \
				        "0.047563,0.051303,0.057804,0.068849,0.088740,0.127012", \
				        "0.055770,0.059505,0.065902,0.076945,0.096834,0.135108", \
				        "0.071155,0.075054,0.081651,0.092786,0.112767,0.150922", \
				        "0.093629,0.098035,0.105361,0.117440,0.137980,0.176344", \
				        "0.126763,0.131839,0.140426,0.153910,0.175540,0.214318", \
				        "0.180734,0.186646,0.196299,0.211806,0.235331,0.274960", \
				        "0.272590,0.279576,0.290909,0.308522,0.335294,0.376186");
			}
			fall_transition(Timing_X1) {
				values ("0.008870,0.010794,0.014429,0.021703,0.037015,0.069182", \
				        "0.008842,0.010760,0.014428,0.021712,0.037023,0.069180", \
				        "0.008873,0.010786,0.014432,0.021721,0.037020,0.069183", \
				        "0.009713,0.011496,0.014921,0.021961,0.037141,0.069194", \
				        "0.011757,0.013546,0.016921,0.023655,0.037975,0.069359", \
				        "0.014690,0.016517,0.019857,0.026279,0.039653,0.069893", \
				        "0.018911,0.020797,0.024257,0.030494,0.043062,0.071030", \
				        "0.025515,0.027479,0.030970,0.037233,0.048415,0.073946");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.043725,0.047445,0.053865,0.064962,0.084973,0.123237", \
				        "0.047491,0.051212,0.057625,0.068717,0.088731,0.126997", \
				        "0.055590,0.059300,0.065710,0.076802,0.096825,0.135092", \
				        "0.071023,0.074897,0.081452,0.092722,0.112805,0.151016", \
				        "0.093485,0.097877,0.105200,0.117301,0.138013,0.176413", \
				        "0.126528,0.131606,0.140499,0.153841,0.175763,0.214695", \
				        "0.180336,0.186238,0.195912,0.211738,0.235303,0.275346", \
				        "0.267870,0.274335,0.285007,0.301735,0.327577,0.367710");
			}
			fall_transition(Timing_X1) {
				values ("0.008759,0.010701,0.014425,0.021797,0.037078,0.069187", \
				        "0.008805,0.010746,0.014424,0.021798,0.037079,0.069187", \
				        "0.008774,0.010719,0.014446,0.021817,0.037083,0.069186", \
				        "0.009608,0.011443,0.015000,0.022211,0.037227,0.069214", \
				        "0.011634,0.013488,0.016952,0.023760,0.038115,0.069420", \
				        "0.014559,0.016507,0.020015,0.026641,0.040000,0.070196", \
				        "0.018687,0.020708,0.024342,0.030830,0.043575,0.071595", \
				        "0.022220,0.024460,0.028323,0.034841,0.046147,0.071810");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005082,0.005067,0.005049,0.005040,0.005031,0.005029", \
				        "0.005073,0.005059,0.005045,0.005035,0.005029,0.005028", \
				        "0.005095,0.005081,0.005068,0.005061,0.005059,0.005053", \
				        "0.005161,0.005147,0.005131,0.005130,0.005128,0.005127", \
				        "0.005394,0.005379,0.005359,0.005345,0.005352,0.005353", \
				        "0.006002,0.005987,0.005969,0.005955,0.005952,0.005953", \
				        "0.007400,0.007385,0.007370,0.007353,0.007348,0.007353", \
				        "0.010414,0.010398,0.010384,0.010364,0.010358,0.010353");
			}
			rise_power(Power_X1) {
				values ("0.005549,0.005538,0.005522,0.005515,0.005508,0.005507", \
				        "0.005545,0.005534,0.005522,0.005512,0.005509,0.005508", \
				        "0.005566,0.005556,0.005545,0.005536,0.005530,0.005530", \
				        "0.005633,0.005622,0.005610,0.005611,0.005607,0.005608", \
				        "0.005867,0.005856,0.005846,0.005841,0.005857,0.005857", \
				        "0.006487,0.006478,0.006464,0.006458,0.006455,0.006465", \
				        "0.007944,0.007933,0.007915,0.007905,0.007903,0.007906", \
				        "0.011116,0.011099,0.011076,0.011058,0.011046,0.011046");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			fall_power(Power_X1) {
				values ("0.006442,0.006440,0.006434,0.006432,0.006432,0.006434", \
				        "0.006440,0.006437,0.006429,0.006429,0.006428,0.006431", \
				        "0.006465,0.006458,0.006456,0.006454,0.006454,0.006457", \
				        "0.006573,0.006569,0.006565,0.006563,0.006564,0.006571", \
				        "0.006859,0.006851,0.006838,0.006831,0.006829,0.006835", \
				        "0.007566,0.007553,0.007558,0.007541,0.007533,0.007533", \
				        "0.009161,0.009140,0.009121,0.009121,0.009093,0.009088", \
				        "0.012198,0.012168,0.012129,0.012094,0.012089,0.012067");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.103172,0.108116,0.116981,0.132516,0.157968,0.200570", \
				        "0.106381,0.111322,0.120237,0.135684,0.161319,0.203982", \
				        "0.111857,0.116784,0.125757,0.141211,0.166463,0.209423", \
				        "0.118092,0.123022,0.132001,0.147642,0.173002,0.215118", \
				        "0.123998,0.129015,0.138025,0.153647,0.179312,0.221659", \
				        "0.127518,0.132554,0.141575,0.157181,0.182832,0.225453", \
				        "0.123357,0.128389,0.137300,0.152964,0.178791,0.221288", \
				        "0.097230,0.102530,0.111987,0.128290,0.154366,0.197427");
			}
			cell_rise(Timing_X1) {
				values ("0.146127,0.152744,0.164684,0.186374,0.227074,0.303925", \
				        "0.149313,0.155942,0.167964,0.189701,0.230421,0.307269", \
				        "0.155280,0.161901,0.173993,0.195766,0.236426,0.313148", \
				        "0.162490,0.169108,0.181094,0.203136,0.243858,0.320252", \
				        "0.170480,0.177071,0.188964,0.210643,0.251665,0.328251", \
				        "0.176579,0.183180,0.195056,0.216448,0.257288,0.333906", \
				        "0.173860,0.180438,0.192387,0.213817,0.254467,0.331367", \
				        "0.148630,0.155171,0.167158,0.188541,0.229236,0.305690");
			}
			fall_transition(Timing_X1) {
				values ("0.017938,0.020539,0.025417,0.033912,0.048300,0.076960", \
				        "0.017945,0.020543,0.025423,0.033935,0.048442,0.077076", \
				        "0.017916,0.020493,0.025427,0.033970,0.048360,0.077291", \
				        "0.017945,0.020513,0.025440,0.033971,0.048367,0.077042", \
				        "0.018102,0.020607,0.025548,0.034062,0.048532,0.077116", \
				        "0.018134,0.020655,0.025595,0.034179,0.048510,0.077076", \
				        "0.018465,0.020982,0.025859,0.034333,0.048712,0.077167", \
				        "0.020792,0.023294,0.027983,0.035999,0.049645,0.077956");
			}
			rise_transition(Timing_X1) {
				values ("0.023448,0.027579,0.035735,0.052698,0.086922,0.156058", \
				        "0.023454,0.027600,0.035735,0.052724,0.086911,0.156071", \
				        "0.023440,0.027572,0.035727,0.052714,0.086892,0.156064", \
				        "0.023423,0.027566,0.035707,0.052676,0.086893,0.155892", \
				        "0.023346,0.027510,0.035642,0.052487,0.086822,0.155976", \
				        "0.023339,0.027461,0.035622,0.052588,0.086826,0.155961", \
				        "0.023232,0.027379,0.035552,0.052537,0.086804,0.156100", \
				        "0.023208,0.027361,0.035542,0.052549,0.086843,0.156063");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.128584,0.134670,0.145854,0.166414,0.205293,0.280994", \
				        "0.132357,0.138399,0.149591,0.170149,0.209024,0.284726", \
				        "0.140486,0.146527,0.157646,0.178282,0.217076,0.292776", \
				        "0.156062,0.162137,0.173323,0.193859,0.232725,0.308373", \
				        "0.180390,0.186383,0.197360,0.218042,0.256848,0.332505", \
				        "0.216665,0.222608,0.233768,0.254295,0.292778,0.368405", \
				        "0.274420,0.280364,0.291480,0.312625,0.351258,0.426795", \
				        "0.373441,0.379350,0.390011,0.410920,0.449764,0.524912");
			}
			rise_transition(Timing_X1) {
				values ("0.021352,0.025365,0.033362,0.049712,0.083825,0.154853", \
				        "0.021354,0.025373,0.033362,0.049720,0.083824,0.154851", \
				        "0.021354,0.025374,0.033374,0.049803,0.083832,0.154860", \
				        "0.021353,0.025367,0.033376,0.049690,0.083802,0.154793", \
				        "0.021372,0.025411,0.033395,0.049709,0.083829,0.154789", \
				        "0.021400,0.025419,0.033403,0.049795,0.083832,0.154943", \
				        "0.021474,0.025483,0.033470,0.049865,0.083836,0.154901", \
				        "0.021624,0.025623,0.033581,0.049930,0.083866,0.154594");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.187475,0.193881,0.205535,0.226614,0.265745,0.341711", \
				        "0.191006,0.197429,0.209180,0.230284,0.269414,0.345382", \
				        "0.197475,0.204083,0.215675,0.236704,0.275811,0.351780", \
				        "0.209352,0.215776,0.227548,0.248679,0.287740,0.363367", \
				        "0.230685,0.237105,0.248755,0.269900,0.309005,0.384735", \
				        "0.261362,0.267825,0.280500,0.301184,0.340451,0.416392", \
				        "0.301857,0.308348,0.320274,0.342769,0.381359,0.457136", \
				        "0.352235,0.358750,0.370209,0.391480,0.432295,0.508036");
			}
			rise_transition(Timing_X1) {
				values ("0.022473,0.026568,0.034595,0.050778,0.084610,0.155169", \
				        "0.022530,0.026614,0.034588,0.050778,0.084610,0.155170", \
				        "0.022523,0.026567,0.034585,0.050772,0.084606,0.155174", \
				        "0.022525,0.026616,0.034694,0.050905,0.084653,0.155184", \
				        "0.022495,0.026585,0.034595,0.050779,0.084586,0.155319", \
				        "0.022582,0.026703,0.034765,0.050948,0.084768,0.155197", \
				        "0.022707,0.026839,0.034883,0.051061,0.084712,0.155406", \
				        "0.022930,0.027005,0.035092,0.051249,0.084835,0.155308");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005549,0.005538,0.005522,0.005515,0.005508,0.005507", \
				        "0.005545,0.005534,0.005522,0.005512,0.005509,0.005508", \
				        "0.005566,0.005556,0.005545,0.005536,0.005530,0.005530", \
				        "0.005633,0.005622,0.005610,0.005611,0.005607,0.005608", \
				        "0.005867,0.005856,0.005846,0.005841,0.005857,0.005857", \
				        "0.006487,0.006478,0.006464,0.006458,0.006455,0.006465", \
				        "0.007944,0.007933,0.007915,0.007905,0.007903,0.007906", \
				        "0.011116,0.011099,0.011076,0.011058,0.011046,0.011046");
			}
			rise_power(Power_X1) {
				values ("0.005082,0.005067,0.005049,0.005040,0.005031,0.005029", \
				        "0.005073,0.005059,0.005045,0.005035,0.005029,0.005028", \
				        "0.005095,0.005081,0.005068,0.005061,0.005059,0.005053", \
				        "0.005161,0.005147,0.005131,0.005130,0.005128,0.005127", \
				        "0.005394,0.005379,0.005359,0.005345,0.005352,0.005353", \
				        "0.006002,0.005987,0.005969,0.005955,0.005952,0.005953", \
				        "0.007400,0.007385,0.007370,0.007353,0.007348,0.007353", \
				        "0.010414,0.010398,0.010384,0.010364,0.010358,0.010353");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X1) {
				values ("0.006442,0.006440,0.006434,0.006432,0.006432,0.006434", \
				        "0.006440,0.006437,0.006429,0.006429,0.006428,0.006431", \
				        "0.006465,0.006458,0.006456,0.006454,0.006454,0.006457", \
				        "0.006573,0.006569,0.006565,0.006563,0.006564,0.006571", \
				        "0.006859,0.006851,0.006838,0.006831,0.006829,0.006835", \
				        "0.007566,0.007553,0.007558,0.007541,0.007533,0.007533", \
				        "0.009161,0.009140,0.009121,0.009121,0.009093,0.009088", \
				        "0.012198,0.012168,0.012129,0.012094,0.012089,0.012067");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFR_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and drive strength X2
*******************************************************************************************/

cell (DFFR_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		clear              	: "!RN";
	}

	area               	: 5.586000;

	cell_leakage_power 	: 25713.865833;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000851;
		fall_capacitance	: 0.000798;
		rise_capacitance	: 0.000903;
		fall_capacitance_range		(0.000684, 0.000917);
		rise_capacitance_range		(0.000745, 0.001001);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.121880;
		min_pulse_width_high	: 0.122551;

		internal_power () {

			when      	: "D & !Q & QN & !RN";

			power(Hidden_Power_Clk) {
				values ("0.008839,0.009326,0.010308,0.012644,0.017773");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN";

			power(Hidden_Power_Clk) {
				values ("0.003959,0.004373,0.005220,0.007244,0.011777");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN";

			power(Hidden_Power_Clk) {
				values ("0.003963,0.004369,0.005217,0.007247,0.011781");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN";

			power(Hidden_Power_Clk) {
				values ("0.004158,0.004573,0.005415,0.007453,0.011989");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000891;
		fall_capacitance	: 0.000847;
		rise_capacitance	: 0.000934;
		fall_capacitance_range		(0.000717, 0.000954);
		rise_capacitance_range		(0.000851, 0.001056);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN";
			sdf_cond	   : "(RN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.001382,0.020392,0.021548,0.014461,-0.008965", \
				        "-0.027870,-0.004078,-0.004050,-0.008360,-0.036702", \
				        "-0.042164,-0.007210,-0.016383,-0.026503,-0.048157", \
				        "-0.063433,-0.020510,-0.037199,-0.037207,-0.070678", \
				        "-0.081950,-0.033690,-0.053205,-0.048273,-0.097759");
			}
			rise_constraint(Hold) {
				values ("-0.011576,-0.005823,-0.007108,-0.022141,-0.068626", \
				        "-0.029693,-0.016099,-0.020096,-0.032564,-0.070110", \
				        "-0.019056,-0.014574,-0.020111,-0.025691,-0.072580", \
				        "-0.006015,0.001959,-0.008341,-0.018978,-0.073158", \
				        "0.034136,0.035024,0.024650,0.020680,-0.040462");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN";
			sdf_cond	   : "(RN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.089383,0.062958,0.056161,0.065413,0.083919", \
				        "0.129811,0.111605,0.101664,0.100012,0.129551", \
				        "0.175182,0.152776,0.137808,0.151705,0.157517", \
				        "0.234850,0.210164,0.207037,0.216333,0.230324", \
				        "0.335589,0.308927,0.307012,0.316986,0.314101");
			}
			rise_constraint(Setup) {
				values ("0.071534,0.062746,0.068746,0.094007,0.147057", \
				        "0.111582,0.096111,0.099860,0.122413,0.170704", \
				        "0.125821,0.116747,0.115934,0.138738,0.185692", \
				        "0.156628,0.146256,0.144032,0.160863,0.202981", \
				        "0.187946,0.175783,0.172934,0.179218,0.229063");
			}
		}

		internal_power () {

			when      	: "CK & !Q & QN & !RN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000012,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & RN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000012,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & RN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000048,0.000034,0.000024,0.000017,0.000013,0.000009,0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !RN";

			power(Hidden_Power_Data) {
				values ("0.005442,0.005411,0.005384,0.005374,0.005480,0.005966,0.007435,0.010858");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & RN";

			power(Hidden_Power_Data) {
				values ("0.005459,0.005434,0.005406,0.005400,0.005503,0.005988,0.007449,0.010883");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & RN";

			power(Hidden_Power_Data) {
				values ("0.005464,0.005436,0.005411,0.005397,0.005511,0.005984,0.007458,0.010889");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.003504;
		fall_capacitance	: 0.003467;
		rise_capacitance	: 0.003542;
		fall_capacitance_range		(0.003456, 0.003485);
		rise_capacitance_range		(0.003498, 0.003556);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.089070;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.035476,-0.052815,-0.052610,-0.049776,-0.019108", \
				        "-0.046561,-0.059809,-0.064598,-0.063186,-0.038659", \
				        "-0.068335,-0.067760,-0.088013,-0.078248,-0.060449", \
				        "-0.096056,-0.107703,-0.099505,-0.116493,-0.093477", \
				        "-0.201815,-0.177634,-0.200878,-0.192807,-0.196421");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.057330,0.078635,0.085243,0.086537,0.070311", \
				        "0.088729,0.108271,0.112772,0.111746,0.094579", \
				        "0.111064,0.129577,0.133977,0.133028,0.116091", \
				        "0.165629,0.180117,0.183675,0.182958,0.168527", \
				        "0.294427,0.303863,0.306818,0.306337,0.296719");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000065,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000062,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000062,0.000020,0.000015,0.000010,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000110,0.000035,0.000027,0.000020,0.000011");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.215034,0.223718,0.232959,0.248146,0.272640,0.313947", \
				        "0.218240,0.226932,0.236188,0.251370,0.276006,0.317314", \
				        "0.224215,0.232888,0.242154,0.257445,0.281869,0.323190", \
				        "0.231374,0.240082,0.249313,0.264779,0.289329,0.330242", \
				        "0.239331,0.248041,0.257230,0.272322,0.297177,0.338199", \
				        "0.245323,0.254002,0.263239,0.278117,0.302698,0.343822", \
				        "0.242456,0.251137,0.260450,0.275422,0.299879,0.341177", \
				        "0.217150,0.225811,0.235102,0.250130,0.274564,0.315553");
			}
			cell_rise(Timing_X2) {
				values ("0.127459,0.135144,0.144262,0.162263,0.198509,0.271400", \
				        "0.130630,0.138282,0.147468,0.165388,0.201686,0.274523", \
				        "0.136102,0.143774,0.152970,0.170910,0.206946,0.279807", \
				        "0.142260,0.149928,0.159116,0.177266,0.213425,0.285941", \
				        "0.148312,0.155879,0.165055,0.183101,0.219523,0.291994", \
				        "0.151796,0.159397,0.168607,0.186645,0.222854,0.295641", \
				        "0.147450,0.155109,0.164329,0.182387,0.218536,0.291357", \
				        "0.121643,0.129450,0.138588,0.156568,0.192738,0.265368");
			}
			fall_transition(Timing_X2) {
				values ("0.014756,0.018667,0.023075,0.030886,0.045079,0.073094", \
				        "0.014759,0.018665,0.023074,0.030855,0.045047,0.073110", \
				        "0.014747,0.018662,0.023073,0.030860,0.045036,0.073107", \
				        "0.014755,0.018662,0.023069,0.030844,0.045006,0.073086", \
				        "0.014745,0.018669,0.023076,0.030828,0.044915,0.073075", \
				        "0.014736,0.018665,0.023066,0.030836,0.044975,0.073096", \
				        "0.014738,0.018647,0.023068,0.030829,0.044924,0.072999", \
				        "0.014730,0.018664,0.023071,0.030847,0.044939,0.073081");
			}
			rise_transition(Timing_X2) {
				values ("0.010254,0.015538,0.023152,0.039852,0.074366,0.143834", \
				        "0.010251,0.015472,0.023153,0.039859,0.074415,0.143768", \
				        "0.010292,0.015505,0.023172,0.039863,0.074385,0.143757", \
				        "0.010295,0.015496,0.023174,0.039863,0.074369,0.143831", \
				        "0.010280,0.015483,0.023168,0.039850,0.074372,0.143784", \
				        "0.010362,0.015560,0.023193,0.039839,0.074379,0.143753", \
				        "0.010441,0.015589,0.023213,0.039863,0.074364,0.143677", \
				        "0.010837,0.015885,0.023344,0.039935,0.074401,0.143787");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.042361,0.048537,0.055141,0.066244,0.085726,0.122681", \
				        "0.046084,0.052248,0.058926,0.069949,0.089438,0.126469", \
				        "0.054287,0.060433,0.066988,0.078023,0.097519,0.134482", \
				        "0.069822,0.076202,0.082918,0.094076,0.113597,0.150504", \
				        "0.092507,0.099783,0.107307,0.119372,0.139553,0.176685", \
				        "0.125892,0.134318,0.143061,0.156795,0.178252,0.215891", \
				        "0.180224,0.190000,0.199873,0.215512,0.239168,0.277948", \
				        "0.272654,0.284134,0.295747,0.313527,0.340590,0.381084");
			}
			fall_transition(Timing_X2) {
				values ("0.007664,0.010628,0.014209,0.021210,0.035748,0.066391", \
				        "0.007631,0.010571,0.014210,0.021133,0.035729,0.066403", \
				        "0.007640,0.010593,0.014161,0.021145,0.035720,0.066419", \
				        "0.008552,0.011265,0.014618,0.021458,0.035779,0.066418", \
				        "0.010786,0.013513,0.016792,0.023238,0.036786,0.066630", \
				        "0.013905,0.016728,0.019986,0.026161,0.038832,0.067384", \
				        "0.018412,0.021381,0.024733,0.030855,0.042784,0.068938", \
				        "0.025556,0.028595,0.031997,0.038104,0.048803,0.072426");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.042312,0.048497,0.055141,0.066321,0.085968,0.122950", \
				        "0.046074,0.052256,0.058947,0.070069,0.089716,0.126700", \
				        "0.054204,0.060370,0.066999,0.078172,0.097812,0.134795", \
				        "0.069791,0.076193,0.082938,0.094196,0.113872,0.150875", \
				        "0.092542,0.099852,0.107426,0.119625,0.139975,0.177095", \
				        "0.125925,0.134441,0.143548,0.157128,0.178828,0.216605", \
				        "0.180211,0.190080,0.200113,0.216028,0.239553,0.278652", \
				        "0.268889,0.279555,0.290487,0.307423,0.333074,0.372570");
			}
			fall_transition(Timing_X2) {
				values ("0.007586,0.010620,0.014280,0.021317,0.035793,0.066401", \
				        "0.007621,0.010631,0.014274,0.021320,0.035795,0.066401", \
				        "0.007632,0.010683,0.014305,0.021333,0.035798,0.066399", \
				        "0.008516,0.011291,0.014739,0.021590,0.035889,0.066412", \
				        "0.010768,0.013602,0.016966,0.023406,0.036910,0.066665", \
				        "0.013955,0.016969,0.020338,0.026569,0.039155,0.067661", \
				        "0.018428,0.021556,0.025001,0.031157,0.043150,0.069414", \
				        "0.022139,0.025577,0.029242,0.035422,0.046290,0.070923");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005784,0.005697,0.005638,0.005599,0.005569,0.005551", \
				        "0.005776,0.005689,0.005631,0.005591,0.005568,0.005549", \
				        "0.005800,0.005712,0.005653,0.005617,0.005592,0.005573", \
				        "0.005864,0.005777,0.005719,0.005685,0.005663,0.005646", \
				        "0.006097,0.006011,0.005951,0.005903,0.005877,0.005867", \
				        "0.006702,0.006616,0.006558,0.006512,0.006483,0.006467", \
				        "0.008099,0.008012,0.007956,0.007909,0.007880,0.007868", \
				        "0.011107,0.011020,0.010965,0.010920,0.010889,0.010869");
			}
			rise_power(Power_X2) {
				values ("0.006175,0.006118,0.006080,0.006054,0.006037,0.006030", \
				        "0.006168,0.006111,0.006077,0.006048,0.006034,0.006031", \
				        "0.006193,0.006136,0.006102,0.006077,0.006056,0.006052", \
				        "0.006257,0.006200,0.006164,0.006147,0.006131,0.006134", \
				        "0.006491,0.006434,0.006399,0.006376,0.006374,0.006370", \
				        "0.007111,0.007054,0.007018,0.006996,0.006980,0.006983", \
				        "0.008578,0.008516,0.008474,0.008449,0.008429,0.008423", \
				        "0.011800,0.011719,0.011662,0.011611,0.011578,0.011560");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			fall_power(Power_X2) {
				values ("0.006989,0.006968,0.006949,0.006937,0.006926,0.006913", \
				        "0.006984,0.006958,0.006944,0.006932,0.006921,0.006909", \
				        "0.007013,0.006987,0.006971,0.006962,0.006949,0.006938", \
				        "0.007132,0.007102,0.007078,0.007066,0.007055,0.007041", \
				        "0.007446,0.007393,0.007361,0.007338,0.007323,0.007313", \
				        "0.008207,0.008133,0.008096,0.008059,0.008028,0.008009", \
				        "0.009904,0.009796,0.009724,0.009678,0.009623,0.009586", \
				        "0.013061,0.012924,0.012819,0.012726,0.012667,0.012620");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.101226,0.109293,0.118476,0.134177,0.160010,0.202167", \
				        "0.104392,0.112478,0.121682,0.137344,0.163247,0.205592", \
				        "0.109915,0.117961,0.127166,0.142824,0.168476,0.210907", \
				        "0.116079,0.124124,0.133318,0.149181,0.174965,0.217169", \
				        "0.121865,0.130072,0.139291,0.155175,0.181335,0.223293", \
				        "0.125378,0.133582,0.142824,0.158667,0.184593,0.226865", \
				        "0.121260,0.129464,0.138730,0.154670,0.180650,0.222736", \
				        "0.095610,0.104177,0.113831,0.130237,0.156639,0.199040");
			}
			cell_rise(Timing_X2) {
				values ("0.141773,0.152518,0.164758,0.186466,0.226157,0.301001", \
				        "0.144973,0.155718,0.167973,0.189685,0.229522,0.304362", \
				        "0.150934,0.161696,0.173950,0.195778,0.235394,0.310234", \
				        "0.158157,0.168912,0.181129,0.203113,0.242860,0.317318", \
				        "0.166178,0.176877,0.189059,0.210658,0.250657,0.325290", \
				        "0.172236,0.182944,0.195143,0.216501,0.256278,0.330952", \
				        "0.169494,0.180174,0.192415,0.213839,0.253487,0.328380", \
				        "0.144230,0.154885,0.167101,0.188554,0.228215,0.302800");
			}
			fall_transition(Timing_X2) {
				values ("0.015697,0.019557,0.024379,0.033126,0.047522,0.074802", \
				        "0.015694,0.019563,0.024382,0.033157,0.047736,0.075122", \
				        "0.015683,0.019559,0.024376,0.033166,0.047673,0.075143", \
				        "0.015684,0.019568,0.024384,0.033140,0.047683,0.075157", \
				        "0.015879,0.019624,0.024475,0.033271,0.047629,0.075011", \
				        "0.015903,0.019641,0.024515,0.033372,0.047710,0.074942", \
				        "0.016138,0.019938,0.024797,0.033634,0.047938,0.074966", \
				        "0.018411,0.022159,0.026777,0.035132,0.048858,0.075573");
			}
			rise_transition(Timing_X2) {
				values ("0.018998,0.025398,0.033400,0.049445,0.082518,0.149166", \
				        "0.019005,0.025403,0.033399,0.049467,0.082531,0.149188", \
				        "0.018986,0.025383,0.033386,0.049418,0.082494,0.149172", \
				        "0.018972,0.025371,0.033368,0.049393,0.082517,0.149084", \
				        "0.018898,0.025332,0.033358,0.049256,0.082405,0.149109", \
				        "0.018880,0.025274,0.033276,0.049293,0.082420,0.149079", \
				        "0.018780,0.025174,0.033187,0.049232,0.082420,0.149062", \
				        "0.018731,0.025127,0.033151,0.049240,0.082456,0.149135");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.128206,0.137962,0.149301,0.169670,0.207431,0.280658", \
				        "0.131872,0.141591,0.153075,0.173431,0.211236,0.284418", \
				        "0.139899,0.149641,0.161001,0.181451,0.219234,0.292428", \
				        "0.155774,0.165481,0.176867,0.197290,0.234980,0.308139", \
				        "0.181184,0.190637,0.202060,0.222430,0.260132,0.333226", \
				        "0.219052,0.228491,0.239557,0.259915,0.297191,0.370269", \
				        "0.279093,0.288184,0.298926,0.319711,0.357163,0.429976", \
				        "0.380429,0.389674,0.400315,0.420253,0.457594,0.530138");
			}
			rise_transition(Timing_X2) {
				values ("0.017139,0.023299,0.031105,0.046861,0.079378,0.147591", \
				        "0.017151,0.023315,0.031117,0.046844,0.079365,0.147577", \
				        "0.017151,0.023314,0.031108,0.046865,0.079359,0.147540", \
				        "0.017153,0.023300,0.031120,0.046843,0.079307,0.147565", \
				        "0.017138,0.023417,0.031236,0.046824,0.079335,0.147521", \
				        "0.017191,0.023368,0.031154,0.046830,0.079327,0.147605", \
				        "0.017320,0.023455,0.031241,0.046942,0.079322,0.147612", \
				        "0.017458,0.023658,0.031384,0.047028,0.079449,0.147291");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.185014,0.195372,0.207326,0.228432,0.266779,0.340311", \
				        "0.188374,0.198813,0.210757,0.232088,0.270436,0.343969", \
				        "0.194949,0.205247,0.217265,0.238435,0.276763,0.350299", \
				        "0.206798,0.217287,0.229270,0.250436,0.288734,0.362197", \
				        "0.228269,0.238704,0.250551,0.271808,0.310097,0.383440", \
				        "0.259093,0.269553,0.282175,0.303264,0.341746,0.415212", \
				        "0.300313,0.310812,0.322854,0.345159,0.383046,0.456529", \
				        "0.350792,0.361380,0.373096,0.394458,0.434111,0.507994");
			}
			rise_transition(Timing_X2) {
				values ("0.018126,0.024424,0.032308,0.047878,0.080186,0.148065", \
				        "0.018057,0.024479,0.032334,0.047877,0.080133,0.148069", \
				        "0.018077,0.024464,0.032307,0.047957,0.080182,0.148064", \
				        "0.018133,0.024427,0.032323,0.047949,0.080235,0.148068", \
				        "0.018079,0.024489,0.032337,0.047961,0.080242,0.147948", \
				        "0.018163,0.024558,0.032434,0.048020,0.080296,0.147966", \
				        "0.018269,0.024677,0.032568,0.048179,0.080327,0.148075", \
				        "0.018489,0.024845,0.032769,0.048350,0.080505,0.147844");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.006175,0.006118,0.006080,0.006054,0.006037,0.006030", \
				        "0.006168,0.006111,0.006077,0.006048,0.006034,0.006031", \
				        "0.006193,0.006136,0.006102,0.006077,0.006056,0.006052", \
				        "0.006257,0.006200,0.006164,0.006147,0.006131,0.006134", \
				        "0.006491,0.006434,0.006399,0.006376,0.006374,0.006370", \
				        "0.007111,0.007054,0.007018,0.006996,0.006980,0.006983", \
				        "0.008578,0.008516,0.008474,0.008449,0.008429,0.008423", \
				        "0.011800,0.011719,0.011662,0.011611,0.011578,0.011560");
			}
			rise_power(Power_X2) {
				values ("0.005784,0.005697,0.005638,0.005599,0.005569,0.005551", \
				        "0.005776,0.005689,0.005631,0.005591,0.005568,0.005549", \
				        "0.005800,0.005712,0.005653,0.005617,0.005592,0.005573", \
				        "0.005864,0.005777,0.005719,0.005685,0.005663,0.005646", \
				        "0.006097,0.006011,0.005951,0.005903,0.005877,0.005867", \
				        "0.006702,0.006616,0.006558,0.006512,0.006483,0.006467", \
				        "0.008099,0.008012,0.007956,0.007909,0.007880,0.007868", \
				        "0.011107,0.011020,0.010965,0.010920,0.010889,0.010869");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X2) {
				values ("0.006989,0.006968,0.006949,0.006937,0.006926,0.006913", \
				        "0.006984,0.006958,0.006944,0.006932,0.006921,0.006909", \
				        "0.007013,0.006987,0.006971,0.006962,0.006949,0.006938", \
				        "0.007132,0.007102,0.007078,0.007066,0.007055,0.007041", \
				        "0.007446,0.007393,0.007361,0.007338,0.007323,0.007313", \
				        "0.008207,0.008133,0.008096,0.008059,0.008028,0.008009", \
				        "0.009904,0.009796,0.009724,0.009678,0.009623,0.009586", \
				        "0.013061,0.012924,0.012819,0.012726,0.012667,0.012620");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFS_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low set, and drive strength X1
*******************************************************************************************/

cell (DFFS_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		preset             	: "!SN";
	}

	area               	: 5.852000;

	cell_leakage_power 	: 21983.150833;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000855;
		fall_capacitance	: 0.000807;
		rise_capacitance	: 0.000903;
		fall_capacitance_range		(0.000738, 0.000904);
		rise_capacitance_range		(0.000764, 0.001021);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.129692;
		min_pulse_width_high	: 0.130852;

		internal_power () {

			when      	: "!D & !Q & QN & SN";

			power(Hidden_Power_Clk) {
				values ("0.005174,0.005517,0.006271,0.008150,0.012489");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.005241,0.005576,0.006328,0.008196,0.012521");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SN";

			power(Hidden_Power_Clk) {
				values ("0.005237,0.005577,0.006318,0.008194,0.012524");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.009353,0.009728,0.010550,0.012526,0.017032");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000787;
		fall_capacitance	: 0.000756;
		rise_capacitance	: 0.000819;
		fall_capacitance_range		(0.000656, 0.000833);
		rise_capacitance_range		(0.000750, 0.000919);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "SN";
			sdf_cond	   : "(SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.003549,0.020482,0.029349,0.028501,0.009918", \
				        "-0.041845,-0.006725,-0.011378,-0.010137,-0.016169", \
				        "-0.064258,-0.033854,-0.036968,-0.036167,-0.052457", \
				        "-0.093646,-0.076238,-0.072611,-0.065362,-0.087514", \
				        "-0.180557,-0.132570,-0.108134,-0.126681,-0.145902");
			}
			rise_constraint(Hold) {
				values ("-0.018306,-0.007936,-0.011245,-0.019510,-0.052159", \
				        "-0.037178,-0.025904,-0.027601,-0.040885,-0.066867", \
				        "-0.046497,-0.029984,-0.031790,-0.037015,-0.070323", \
				        "-0.043006,-0.025174,-0.028886,-0.036309,-0.073134", \
				        "-0.005203,0.005620,-0.014138,-0.023026,-0.062928");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "SN";
			sdf_cond	   : "(SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.099400,0.062635,0.055891,0.051026,0.065868", \
				        "0.139674,0.110688,0.100854,0.092032,0.110683", \
				        "0.184921,0.151319,0.143110,0.135492,0.147201", \
				        "0.256957,0.227667,0.211945,0.206409,0.218891", \
				        "0.374267,0.335438,0.327568,0.313856,0.333013");
			}
			rise_constraint(Setup) {
				values ("0.051914,0.041474,0.045643,0.063883,0.104391", \
				        "0.085410,0.070660,0.072403,0.087451,0.126610", \
				        "0.103232,0.086906,0.090054,0.102220,0.140124", \
				        "0.119850,0.100945,0.102290,0.113817,0.154549", \
				        "0.130971,0.115614,0.109321,0.125533,0.164771");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN & SN";

			power(Hidden_Power_Data) {
				values ("0.000046,0.000034,0.000023,0.000016,0.000011,0.000008,0.000004,0.000000");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & SN";

			power(Hidden_Power_Data) {
				values ("0.005914,0.005893,0.005866,0.005866,0.005948,0.006321,0.007497,0.010303");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & SN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000022,0.000018,0.000014,0.000011,0.000009,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & SN";

			power(Hidden_Power_Data) {
				values ("0.005905,0.005886,0.005857,0.005852,0.005922,0.006311,0.007485,0.010294");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000046,0.000033,0.000024,0.000016,0.000011,0.000008,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004132,0.004115,0.004093,0.004077,0.004165,0.004515,0.005654,0.008355");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.001569;
		fall_capacitance	: 0.001519;
		rise_capacitance	: 0.001618;
		fall_capacitance_range		(0.001393, 0.001605);
		rise_capacitance_range		(0.001476, 0.001717);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.143758;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.045746,-0.074305,-0.085673,-0.093082,-0.081757", \
				        "-0.024871,-0.049101,-0.060365,-0.068114,-0.060629", \
				        "-0.008005,-0.037843,-0.049501,-0.058579,-0.045409", \
				        "0.006513,-0.021393,-0.035292,-0.038730,-0.029438", \
				        "0.023371,-0.009900,-0.015754,-0.020592,-0.016082");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.057452,0.086190,0.097180,0.104370,0.095950", \
				        "0.036198,0.064425,0.075957,0.082929,0.074122", \
				        "0.024204,0.053404,0.063865,0.071129,0.062221", \
				        "0.008279,0.037555,0.048352,0.054766,0.045920", \
				        "-0.005979,0.022331,0.033533,0.040261,0.030094");
			}
		}

		internal_power () {

			when      	: "CK & !D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000024,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000027,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000025,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002281,0.002431,0.002945,0.004292,0.007344");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.237576,0.241852,0.249685,0.263555,0.287564,0.329728", \
				        "0.240821,0.245165,0.253011,0.266942,0.290681,0.332890", \
				        "0.247476,0.251745,0.259472,0.273710,0.297388,0.339358", \
				        "0.257798,0.262087,0.269960,0.283768,0.308124,0.349850", \
				        "0.269637,0.273907,0.281691,0.295657,0.320193,0.362843", \
				        "0.280528,0.284827,0.292658,0.306620,0.331142,0.374354", \
				        "0.284130,0.288400,0.296327,0.310407,0.334900,0.378014", \
				        "0.265866,0.270139,0.277943,0.292229,0.316471,0.358416");
			}
			cell_rise(Timing_X1) {
				values ("0.131324,0.135864,0.145122,0.163842,0.201476,0.276938", \
				        "0.134686,0.139192,0.148519,0.167110,0.204642,0.280052", \
				        "0.141074,0.145614,0.154926,0.173594,0.211037,0.286066", \
				        "0.150568,0.155137,0.164373,0.183330,0.220858,0.295805", \
				        "0.160935,0.165544,0.174780,0.193622,0.231292,0.306375", \
				        "0.170345,0.174879,0.184121,0.202933,0.240712,0.316021", \
				        "0.172735,0.177127,0.186460,0.205319,0.242876,0.318234", \
				        "0.152351,0.156820,0.166001,0.184899,0.222343,0.297499");
			}
			fall_transition(Timing_X1) {
				values ("0.023072,0.025314,0.029468,0.037195,0.051890,0.081559", \
				        "0.023109,0.025315,0.029462,0.037244,0.051920,0.081551", \
				        "0.023107,0.025318,0.029463,0.037194,0.051986,0.081608", \
				        "0.023062,0.025302,0.029468,0.037207,0.051933,0.081603", \
				        "0.023110,0.025319,0.029481,0.037245,0.051960,0.081638", \
				        "0.023043,0.025315,0.029457,0.037231,0.051936,0.081726", \
				        "0.023114,0.025321,0.029472,0.037268,0.052056,0.081602", \
				        "0.023129,0.025344,0.029490,0.037282,0.052048,0.081720");
			}
			rise_transition(Timing_X1) {
				values ("0.023384,0.027787,0.036862,0.054614,0.090455,0.162240", \
				        "0.023416,0.027786,0.036738,0.054610,0.090446,0.162232", \
				        "0.023391,0.027789,0.037004,0.054622,0.090464,0.162397", \
				        "0.023338,0.028107,0.036786,0.054614,0.090431,0.162349", \
				        "0.023341,0.028138,0.036912,0.054625,0.090451,0.162401", \
				        "0.023402,0.027800,0.036749,0.054593,0.090483,0.162411", \
				        "0.023479,0.027824,0.036760,0.054585,0.090453,0.162200", \
				        "0.023613,0.028239,0.037035,0.054615,0.090504,0.162186");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.195218,0.199598,0.208645,0.227418,0.264925,0.340188", \
				        "0.198719,0.203108,0.212118,0.230876,0.268398,0.343658", \
				        "0.204268,0.208656,0.217771,0.236429,0.273985,0.349239", \
				        "0.212565,0.216948,0.225935,0.244431,0.281878,0.357425", \
				        "0.226147,0.230532,0.239618,0.258192,0.295602,0.370412", \
				        "0.249936,0.254315,0.263400,0.282026,0.319369,0.394640", \
				        "0.289212,0.293567,0.302413,0.321491,0.359306,0.434557", \
				        "0.354602,0.358977,0.367906,0.386306,0.424422,0.499938");
			}
			rise_transition(Timing_X1) {
				values ("0.024200,0.028518,0.036777,0.054694,0.090490,0.162208", \
				        "0.024185,0.028506,0.036775,0.054683,0.090502,0.162212", \
				        "0.024189,0.028497,0.036778,0.054667,0.090516,0.162246", \
				        "0.024193,0.028522,0.036774,0.054622,0.090498,0.162282", \
				        "0.024196,0.028526,0.037170,0.054626,0.090496,0.162285", \
				        "0.024338,0.028248,0.037196,0.054732,0.090505,0.162242", \
				        "0.024757,0.028526,0.037311,0.054719,0.090617,0.162255", \
				        "0.025452,0.029024,0.037493,0.054783,0.090638,0.162389");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.228462,0.233079,0.242430,0.261132,0.298869,0.374335", \
				        "0.232171,0.236772,0.246141,0.264901,0.302625,0.378068", \
				        "0.239937,0.244543,0.254009,0.272680,0.310361,0.385816", \
				        "0.253373,0.257944,0.267272,0.285954,0.323715,0.399166", \
				        "0.271121,0.275712,0.285194,0.303893,0.341589,0.416918", \
				        "0.293832,0.298430,0.307662,0.326213,0.363890,0.439239", \
				        "0.321269,0.325858,0.335056,0.354964,0.392738,0.468016", \
				        "0.355781,0.360359,0.369484,0.389207,0.427494,0.502828");
			}
			rise_transition(Timing_X1) {
				values ("0.023317,0.028056,0.036987,0.054538,0.090458,0.162220", \
				        "0.023296,0.028075,0.036986,0.054534,0.090445,0.162144", \
				        "0.023302,0.028053,0.036987,0.054531,0.090454,0.162182", \
				        "0.023290,0.028046,0.036987,0.054608,0.090454,0.162176", \
				        "0.023298,0.028075,0.036988,0.054577,0.090458,0.162226", \
				        "0.023385,0.028041,0.036967,0.054641,0.090445,0.162221", \
				        "0.023316,0.028063,0.036991,0.054620,0.090454,0.162326", \
				        "0.023400,0.028066,0.036810,0.054598,0.090502,0.162237");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005947,0.005936,0.005924,0.005909,0.005899,0.005895", \
				        "0.005939,0.005932,0.005918,0.005909,0.005895,0.005893", \
				        "0.005947,0.005937,0.005919,0.005920,0.005910,0.005916", \
				        "0.006009,0.005999,0.005986,0.005967,0.005978,0.005972", \
				        "0.006206,0.006196,0.006181,0.006168,0.006171,0.006191", \
				        "0.006743,0.006734,0.006719,0.006707,0.006710,0.006739", \
				        "0.008057,0.008047,0.008034,0.008024,0.008023,0.008040", \
				        "0.010972,0.010961,0.010948,0.010944,0.010941,0.010935");
			}
			rise_power(Power_X1) {
				values ("0.004806,0.004798,0.004788,0.004779,0.004783,0.004788", \
				        "0.004803,0.004795,0.004785,0.004777,0.004780,0.004786", \
				        "0.004814,0.004806,0.004800,0.004785,0.004789,0.004798", \
				        "0.004878,0.004871,0.004856,0.004857,0.004862,0.004873", \
				        "0.005076,0.005068,0.005057,0.005053,0.005073,0.005082", \
				        "0.005629,0.005620,0.005608,0.005602,0.005611,0.005621", \
				        "0.007013,0.006998,0.006984,0.006978,0.006972,0.006979", \
				        "0.010117,0.010102,0.010078,0.010060,0.010046,0.010045");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X1) {
				values ("0.005962,0.005961,0.005957,0.005949,0.005950,0.005958", \
				        "0.005957,0.005958,0.005952,0.005945,0.005947,0.005954", \
				        "0.005965,0.005965,0.005960,0.005952,0.005953,0.005961", \
				        "0.006002,0.006001,0.005995,0.005983,0.005989,0.005997", \
				        "0.006120,0.006120,0.006114,0.006102,0.006108,0.006116", \
				        "0.006431,0.006431,0.006424,0.006404,0.006408,0.006416", \
				        "0.007053,0.007051,0.007044,0.007049,0.007053,0.007058", \
				        "0.009127,0.009086,0.009028,0.008967,0.008923,0.008886");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.099085,0.104567,0.114057,0.129846,0.155144,0.197488", \
				        "0.102425,0.107900,0.117464,0.133117,0.158276,0.200603", \
				        "0.108833,0.114318,0.123796,0.139622,0.164680,0.206584", \
				        "0.118372,0.123866,0.133334,0.149404,0.174570,0.216447", \
				        "0.128728,0.134236,0.143806,0.159744,0.185255,0.227265", \
				        "0.138131,0.143672,0.153246,0.169177,0.194687,0.237034", \
				        "0.140666,0.146350,0.156275,0.172358,0.197886,0.240366", \
				        "0.120318,0.126679,0.137483,0.154883,0.181232,0.224118");
			}
			cell_rise(Timing_X1) {
				values ("0.144420,0.151435,0.163849,0.185607,0.225371,0.301904", \
				        "0.147653,0.154735,0.167175,0.189028,0.228492,0.305070", \
				        "0.154307,0.161321,0.173636,0.195762,0.235197,0.311540", \
				        "0.164678,0.171694,0.184124,0.205833,0.245937,0.321964", \
				        "0.176474,0.183493,0.195906,0.217742,0.257881,0.334630", \
				        "0.187368,0.194383,0.206803,0.228693,0.268924,0.346101", \
				        "0.190910,0.197928,0.210454,0.232440,0.272539,0.349563", \
				        "0.172440,0.179492,0.191941,0.214193,0.254194,0.330448");
			}
			fall_transition(Timing_X1) {
				values ("0.015500,0.018205,0.023184,0.031393,0.045599,0.074602", \
				        "0.015493,0.018199,0.023196,0.031377,0.045581,0.074592", \
				        "0.015518,0.018227,0.023189,0.031422,0.045606,0.074577", \
				        "0.015573,0.018292,0.023256,0.031469,0.045626,0.074582", \
				        "0.015694,0.018398,0.023376,0.031584,0.045743,0.074662", \
				        "0.015942,0.018639,0.023604,0.031833,0.046129,0.074793", \
				        "0.016988,0.019634,0.024474,0.032436,0.046271,0.074974", \
				        "0.020619,0.023262,0.027854,0.035098,0.047973,0.075834");
			}
			rise_transition(Timing_X1) {
				values ("0.019049,0.023419,0.031669,0.047899,0.081566,0.152017", \
				        "0.019051,0.023420,0.031679,0.047979,0.081556,0.152013", \
				        "0.019049,0.023418,0.031678,0.047899,0.081586,0.151902", \
				        "0.019053,0.023413,0.031666,0.047939,0.081624,0.152064", \
				        "0.019060,0.023431,0.031689,0.048014,0.081600,0.151921", \
				        "0.019055,0.023425,0.031680,0.047996,0.081674,0.151979", \
				        "0.019066,0.023440,0.031696,0.048015,0.081759,0.151895", \
				        "0.019145,0.023530,0.031821,0.048145,0.081822,0.152007");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.162504,0.170229,0.183508,0.203172,0.231316,0.276121", \
				        "0.166019,0.173740,0.186981,0.206660,0.234785,0.279587", \
				        "0.171567,0.179288,0.192633,0.212145,0.240388,0.285186", \
				        "0.179854,0.187585,0.200763,0.220364,0.248466,0.293285", \
				        "0.193498,0.201222,0.214400,0.234189,0.262221,0.306473", \
				        "0.217628,0.225612,0.239200,0.259057,0.287252,0.332163", \
				        "0.257570,0.266029,0.280110,0.300562,0.329470,0.375183", \
				        "0.324585,0.333649,0.348274,0.368457,0.398181,0.444860");
			}
			fall_transition(Timing_X1) {
				values ("0.026179,0.030039,0.034864,0.040469,0.051715,0.078759", \
				        "0.026177,0.030039,0.034864,0.040463,0.051697,0.078762", \
				        "0.026174,0.030040,0.034874,0.040439,0.051697,0.078763", \
				        "0.026180,0.030046,0.034851,0.040479,0.051466,0.078754", \
				        "0.026200,0.030066,0.034864,0.040487,0.051468,0.078653", \
				        "0.027865,0.031680,0.036116,0.041292,0.052057,0.079058", \
				        "0.030913,0.034597,0.038456,0.042967,0.054098,0.081154", \
				        "0.035249,0.038417,0.041352,0.044886,0.055913,0.082846");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.196515,0.201813,0.210970,0.226048,0.250691,0.292900", \
				        "0.200183,0.205513,0.214682,0.229806,0.254440,0.296630", \
				        "0.207981,0.213303,0.222550,0.237578,0.262177,0.304364", \
				        "0.221393,0.226722,0.235812,0.250855,0.275520,0.317700", \
				        "0.239163,0.244492,0.253718,0.268795,0.293385,0.335416", \
				        "0.261883,0.267214,0.276200,0.291072,0.315685,0.357809", \
				        "0.289282,0.294592,0.303540,0.319803,0.344380,0.386253", \
				        "0.323785,0.329114,0.338025,0.353895,0.378951,0.420823");
			}
			fall_transition(Timing_X1) {
				values ("0.014940,0.017464,0.022041,0.030007,0.044741,0.074533", \
				        "0.014956,0.017478,0.022035,0.029997,0.044718,0.074478", \
				        "0.014948,0.017469,0.022032,0.029981,0.044704,0.074493", \
				        "0.014954,0.017474,0.022030,0.029981,0.044698,0.074480", \
				        "0.014959,0.017480,0.022032,0.029977,0.044689,0.074476", \
				        "0.014959,0.017479,0.022024,0.029919,0.044772,0.074537", \
				        "0.014940,0.017456,0.021998,0.029854,0.044560,0.074306", \
				        "0.014960,0.017474,0.022002,0.029949,0.044691,0.074192");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004806,0.004798,0.004788,0.004779,0.004783,0.004788", \
				        "0.004803,0.004795,0.004785,0.004777,0.004780,0.004786", \
				        "0.004814,0.004806,0.004800,0.004785,0.004789,0.004798", \
				        "0.004878,0.004871,0.004856,0.004857,0.004862,0.004873", \
				        "0.005076,0.005068,0.005057,0.005053,0.005073,0.005082", \
				        "0.005629,0.005620,0.005608,0.005602,0.005611,0.005621", \
				        "0.007013,0.006998,0.006984,0.006978,0.006972,0.006979", \
				        "0.010117,0.010102,0.010078,0.010060,0.010046,0.010045");
			}
			rise_power(Power_X1) {
				values ("0.005947,0.005936,0.005924,0.005909,0.005899,0.005895", \
				        "0.005939,0.005932,0.005918,0.005909,0.005895,0.005893", \
				        "0.005947,0.005937,0.005919,0.005920,0.005910,0.005916", \
				        "0.006009,0.005999,0.005986,0.005967,0.005978,0.005972", \
				        "0.006206,0.006196,0.006181,0.006168,0.006171,0.006191", \
				        "0.006743,0.006734,0.006719,0.006707,0.006710,0.006739", \
				        "0.008057,0.008047,0.008034,0.008024,0.008023,0.008040", \
				        "0.010972,0.010961,0.010948,0.010944,0.010941,0.010935");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			fall_power(Power_X1) {
				values ("0.005962,0.005961,0.005957,0.005949,0.005950,0.005958", \
				        "0.005957,0.005958,0.005952,0.005945,0.005947,0.005954", \
				        "0.005965,0.005965,0.005960,0.005952,0.005953,0.005961", \
				        "0.006002,0.006001,0.005995,0.005983,0.005989,0.005997", \
				        "0.006120,0.006120,0.006114,0.006102,0.006108,0.006116", \
				        "0.006431,0.006431,0.006424,0.006404,0.006408,0.006416", \
				        "0.007053,0.007051,0.007044,0.007049,0.007053,0.007058", \
				        "0.009127,0.009086,0.009028,0.008967,0.008923,0.008886");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFFS_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low set, and drive strength X2
*******************************************************************************************/

cell (DFFS_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
		preset             	: "!SN";
	}

	area               	: 5.586000;

	cell_leakage_power 	: 25163.485000;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000858;
		fall_capacitance	: 0.000810;
		rise_capacitance	: 0.000906;
		fall_capacitance_range		(0.000736, 0.000911);
		rise_capacitance_range		(0.000762, 0.001019);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;
		min_pulse_width_high	: 0.133049;

		internal_power () {

			when      	: "!D & !Q & QN & SN";

			power(Hidden_Power_Clk) {
				values ("0.005643,0.005994,0.006773,0.008686,0.013071");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.004927,0.005274,0.006043,0.007953,0.012327");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SN";

			power(Hidden_Power_Clk) {
				values ("0.005224,0.005571,0.006342,0.008248,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & !SN";

			power(Hidden_Power_Clk) {
				values ("0.009060,0.009466,0.010304,0.012330,0.016888");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000797;
		fall_capacitance	: 0.000765;
		rise_capacitance	: 0.000829;
		fall_capacitance_range		(0.000664, 0.000843);
		rise_capacitance_range		(0.000759, 0.000929);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "SN";
			sdf_cond	   : "(SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.006251,0.019690,0.023734,0.021250,0.006977", \
				        "-0.049311,-0.017117,-0.004985,-0.009850,-0.026109", \
				        "-0.065892,-0.035049,-0.032719,-0.027847,-0.050115", \
				        "-0.106087,-0.084981,-0.073566,-0.081427,-0.101285", \
				        "-0.157658,-0.116801,-0.143877,-0.154067,-0.132763");
			}
			rise_constraint(Hold) {
				values ("-0.016801,-0.009797,-0.015772,-0.024650,-0.059536", \
				        "-0.041140,-0.023543,-0.029109,-0.044312,-0.073423", \
				        "-0.044597,-0.029832,-0.037802,-0.047949,-0.075742", \
				        "-0.043929,-0.032543,-0.028277,-0.043381,-0.076069", \
				        "-0.005775,-0.008856,0.000125,-0.021754,-0.060277");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "SN";
			sdf_cond	   : "(SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.098936,0.073680,0.055659,0.050840,0.065682", \
				        "0.144147,0.115781,0.100158,0.098707,0.119260", \
				        "0.189118,0.162298,0.148547,0.142007,0.155710", \
				        "0.260787,0.232186,0.217107,0.212720,0.227312", \
				        "0.384870,0.347233,0.332508,0.328955,0.330738");
			}
			rise_constraint(Setup) {
				values ("0.056686,0.044071,0.051311,0.067165,0.112800", \
				        "0.085347,0.073330,0.075306,0.094224,0.135218", \
				        "0.103135,0.089662,0.089975,0.109203,0.148946", \
				        "0.119699,0.106960,0.108772,0.121228,0.163805", \
				        "0.130740,0.115401,0.109123,0.125353,0.164616");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN & SN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000035,0.000024,0.000016,0.000012,0.000008,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & SN";

			power(Hidden_Power_Data) {
				values ("0.005949,0.005927,0.005900,0.005899,0.005982,0.006355,0.007528,0.010333");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & SN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000024,0.000020,0.000016,0.000013,0.000010,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & SN";

			power(Hidden_Power_Data) {
				values ("0.005940,0.005921,0.005892,0.005888,0.005956,0.006342,0.007516,0.010325");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000033,0.000024,0.000016,0.000011,0.000008,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SN";

			power(Hidden_Power_Data) {
				values ("0.004154,0.004135,0.004110,0.004096,0.004183,0.004533,0.005668,0.008370");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.001549;
		fall_capacitance	: 0.001500;
		rise_capacitance	: 0.001599;
		fall_capacitance_range		(0.001374, 0.001586);
		rise_capacitance_range		(0.001458, 0.001697);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.151570;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.044478,-0.068505,-0.079923,-0.087434,-0.076305", \
				        "-0.019120,-0.043387,-0.054697,-0.062542,-0.049623", \
				        "-0.007190,-0.037166,-0.043906,-0.047769,-0.040079", \
				        "0.012042,-0.015891,-0.029826,-0.033347,-0.024210", \
				        "0.022939,-0.004616,-0.010503,-0.015407,-0.004382");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.055253,0.082227,0.092531,0.097908,0.088177", \
				        "0.033755,0.060709,0.071182,0.076855,0.066348", \
				        "0.021883,0.049812,0.059091,0.064926,0.054447", \
				        "0.005347,0.033344,0.042949,0.048176,0.037601", \
				        "-0.010010,0.017501,0.027000,0.033024,0.020820");
			}
		}

		internal_power () {

			when      	: "CK & !D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000024,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000027,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000024,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002297,0.002443,0.002958,0.004301,0.007350");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.219385,0.226948,0.235408,0.249737,0.273513,0.314554", \
				        "0.222608,0.230188,0.238712,0.253055,0.276881,0.317733", \
				        "0.229104,0.236666,0.245140,0.259722,0.283398,0.324100", \
				        "0.238886,0.246464,0.254955,0.269214,0.293410,0.333999", \
				        "0.249733,0.257275,0.265730,0.280127,0.304516,0.345957", \
				        "0.259516,0.267080,0.275562,0.289977,0.314315,0.356301", \
				        "0.261635,0.269210,0.277658,0.292269,0.316573,0.358626", \
				        "0.241587,0.249144,0.257629,0.272325,0.296360,0.336952");
			}
			cell_rise(Timing_X2) {
				values ("0.118639,0.125064,0.133770,0.151557,0.187829,0.260669", \
				        "0.121921,0.128362,0.137042,0.154880,0.190959,0.263784", \
				        "0.128264,0.134646,0.143400,0.161203,0.197251,0.269763", \
				        "0.137107,0.143493,0.152240,0.170307,0.206517,0.278868", \
				        "0.146558,0.152978,0.161710,0.179758,0.216095,0.288564", \
				        "0.154765,0.161193,0.169924,0.187843,0.224235,0.296836", \
				        "0.155851,0.162186,0.170932,0.189011,0.225108,0.297749", \
				        "0.134515,0.140868,0.149637,0.167462,0.203405,0.275877");
			}
			fall_transition(Timing_X2) {
				values ("0.016255,0.019875,0.024204,0.031984,0.046401,0.075379", \
				        "0.016237,0.019867,0.024201,0.031952,0.046350,0.075373", \
				        "0.016255,0.019874,0.024203,0.031987,0.046373,0.075548", \
				        "0.016238,0.019867,0.024193,0.031922,0.046385,0.075335", \
				        "0.016258,0.019873,0.024203,0.031970,0.046322,0.075384", \
				        "0.016241,0.019861,0.024206,0.031969,0.046431,0.075519", \
				        "0.016242,0.019877,0.024209,0.031993,0.046559,0.075659", \
				        "0.016257,0.019895,0.024217,0.032021,0.046354,0.075385");
			}
			rise_transition(Timing_X2) {
				values ("0.011791,0.017334,0.025687,0.042783,0.077404,0.146727", \
				        "0.011812,0.017328,0.025643,0.042810,0.077421,0.146738", \
				        "0.011744,0.017320,0.025686,0.042785,0.077436,0.146900", \
				        "0.011750,0.017323,0.025656,0.042796,0.077408,0.146732", \
				        "0.011813,0.017341,0.025678,0.042821,0.077408,0.146907", \
				        "0.011856,0.017365,0.025650,0.042798,0.077451,0.146807", \
				        "0.012054,0.017456,0.025710,0.042799,0.077442,0.146803", \
				        "0.012778,0.017843,0.025849,0.042810,0.077406,0.146715");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.184801,0.191632,0.200284,0.217889,0.253892,0.326379", \
				        "0.188405,0.195247,0.203872,0.221455,0.257450,0.329953", \
				        "0.194098,0.200955,0.209694,0.227241,0.263187,0.335674", \
				        "0.202610,0.209476,0.218078,0.235652,0.271304,0.343858", \
				        "0.216215,0.223088,0.231695,0.249236,0.285025,0.357313", \
				        "0.239659,0.246642,0.255203,0.272850,0.308526,0.381042", \
				        "0.278366,0.285633,0.294218,0.312090,0.347957,0.420577", \
				        "0.343382,0.351076,0.359906,0.377269,0.413312,0.485996");
			}
			rise_transition(Timing_X2) {
				values ("0.014565,0.019078,0.026366,0.042991,0.077453,0.146734", \
				        "0.014565,0.019081,0.026380,0.042982,0.077466,0.146725", \
				        "0.014565,0.019082,0.026362,0.042969,0.077489,0.146671", \
				        "0.014561,0.019079,0.026357,0.042990,0.077462,0.146714", \
				        "0.014571,0.019084,0.026377,0.042967,0.077448,0.146715", \
				        "0.015000,0.019413,0.026532,0.042963,0.077462,0.146745", \
				        "0.015801,0.020133,0.026891,0.043115,0.077479,0.146735", \
				        "0.016947,0.021237,0.027526,0.043280,0.077604,0.146855");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.218468,0.224914,0.233673,0.251686,0.287967,0.360757", \
				        "0.222065,0.228496,0.237407,0.255432,0.291717,0.364519", \
				        "0.229780,0.236232,0.245032,0.262990,0.299351,0.372149", \
				        "0.243306,0.249745,0.258486,0.276517,0.312732,0.385531", \
				        "0.261125,0.267575,0.276335,0.294360,0.330719,0.403361", \
				        "0.283923,0.290376,0.299154,0.316989,0.353260,0.425914", \
				        "0.311495,0.317938,0.326619,0.345591,0.381691,0.454440", \
				        "0.346186,0.352625,0.361292,0.380106,0.417169,0.490412");
			}
			rise_transition(Timing_X2) {
				values ("0.011752,0.017299,0.025631,0.042915,0.077397,0.146741", \
				        "0.011773,0.017306,0.025645,0.042941,0.077431,0.146706", \
				        "0.011775,0.017305,0.025645,0.042940,0.077408,0.146735", \
				        "0.011793,0.017305,0.025639,0.042918,0.077434,0.146697", \
				        "0.011796,0.017305,0.025641,0.042889,0.077397,0.146665", \
				        "0.011793,0.017300,0.025669,0.042877,0.077404,0.146742", \
				        "0.011784,0.017302,0.025647,0.042806,0.077453,0.146793", \
				        "0.011782,0.017322,0.025664,0.042795,0.077463,0.146689");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005770,0.005703,0.005659,0.005622,0.005591,0.005575", \
				        "0.005762,0.005695,0.005652,0.005616,0.005598,0.005573", \
				        "0.005769,0.005702,0.005657,0.005632,0.005603,0.005604", \
				        "0.005837,0.005770,0.005725,0.005681,0.005677,0.005659", \
				        "0.006040,0.005974,0.005929,0.005888,0.005872,0.005869", \
				        "0.006597,0.006529,0.006486,0.006447,0.006444,0.006476", \
				        "0.007937,0.007869,0.007825,0.007787,0.007777,0.007793", \
				        "0.010875,0.010807,0.010763,0.010733,0.010716,0.010699");
			}
			rise_power(Power_X2) {
				values ("0.005475,0.005417,0.005391,0.005364,0.005354,0.005356", \
				        "0.005470,0.005413,0.005383,0.005355,0.005352,0.005352", \
				        "0.005483,0.005431,0.005399,0.005373,0.005360,0.005371", \
				        "0.005547,0.005494,0.005459,0.005443,0.005446,0.005451", \
				        "0.005754,0.005700,0.005665,0.005643,0.005653,0.005656", \
				        "0.006332,0.006270,0.006237,0.006207,0.006210,0.006216", \
				        "0.007759,0.007686,0.007646,0.007612,0.007595,0.007594", \
				        "0.010961,0.010865,0.010802,0.010739,0.010704,0.010685");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X2) {
				values ("0.006681,0.006623,0.006600,0.006587,0.006572,0.006573", \
				        "0.006680,0.006623,0.006597,0.006585,0.006568,0.006571", \
				        "0.006687,0.006629,0.006607,0.006593,0.006577,0.006579", \
				        "0.006724,0.006666,0.006642,0.006629,0.006613,0.006615", \
				        "0.006843,0.006784,0.006759,0.006743,0.006728,0.006734", \
				        "0.007154,0.007103,0.007073,0.007050,0.007032,0.007037", \
				        "0.007787,0.007729,0.007702,0.007695,0.007684,0.007686", \
				        "0.010209,0.010031,0.009886,0.009732,0.009610,0.009526");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.095706,0.104543,0.114249,0.130113,0.155337,0.196837", \
				        "0.098993,0.107842,0.117526,0.133387,0.158441,0.199959", \
				        "0.105350,0.114189,0.123908,0.139780,0.164716,0.205946", \
				        "0.114198,0.123048,0.132730,0.148954,0.174091,0.215223", \
				        "0.123621,0.132500,0.142246,0.158348,0.183747,0.224988", \
				        "0.131848,0.140768,0.150549,0.166566,0.191970,0.233480", \
				        "0.133015,0.142154,0.152016,0.168446,0.193826,0.235375", \
				        "0.111549,0.121634,0.132541,0.149815,0.175864,0.217797");
			}
			cell_rise(Timing_X2) {
				values ("0.138945,0.150122,0.162618,0.184284,0.223054,0.297199", \
				        "0.142187,0.153361,0.165920,0.187570,0.226425,0.300382", \
				        "0.148664,0.159840,0.172347,0.194262,0.232940,0.306743", \
				        "0.158465,0.169638,0.182152,0.203734,0.242945,0.316612", \
				        "0.169293,0.180479,0.192974,0.214652,0.253959,0.328206", \
				        "0.179082,0.190253,0.202762,0.224497,0.263758,0.338523", \
				        "0.181167,0.192341,0.204828,0.226772,0.265952,0.340627", \
				        "0.160920,0.172135,0.184697,0.206775,0.245828,0.319565");
			}
			fall_transition(Timing_X2) {
				values ("0.013998,0.018173,0.023194,0.031284,0.044974,0.072606", \
				        "0.014001,0.018184,0.023152,0.031289,0.044959,0.072605", \
				        "0.014017,0.018175,0.023216,0.031296,0.044986,0.072596", \
				        "0.014067,0.018231,0.023263,0.031382,0.045010,0.072659", \
				        "0.014181,0.018356,0.023361,0.031450,0.045110,0.072636", \
				        "0.014407,0.018568,0.023554,0.031659,0.045425,0.072779", \
				        "0.015372,0.019491,0.024357,0.032247,0.045599,0.072960", \
				        "0.019045,0.023048,0.027697,0.034768,0.047163,0.073826");
			}
			rise_transition(Timing_X2) {
				values ("0.015733,0.022466,0.030568,0.046312,0.078497,0.146123", \
				        "0.015717,0.022462,0.030575,0.046285,0.078555,0.146136", \
				        "0.015732,0.022465,0.030573,0.046307,0.078506,0.146070", \
				        "0.015717,0.022462,0.030573,0.046265,0.078556,0.146230", \
				        "0.015717,0.022480,0.030602,0.046307,0.078522,0.146220", \
				        "0.015717,0.022459,0.030575,0.046322,0.078621,0.146111", \
				        "0.015721,0.022470,0.030591,0.046348,0.078660,0.146094", \
				        "0.015779,0.022554,0.030695,0.046465,0.078733,0.146302");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.161021,0.173362,0.187055,0.206796,0.234636,0.278465", \
				        "0.164631,0.176979,0.190638,0.210366,0.238199,0.282040", \
				        "0.170325,0.182673,0.196466,0.216175,0.243906,0.287754", \
				        "0.178847,0.191199,0.204849,0.224577,0.252273,0.296048", \
				        "0.192514,0.204857,0.218489,0.238191,0.266010,0.309379", \
				        "0.216403,0.229132,0.243136,0.263022,0.290743,0.334647", \
				        "0.256036,0.269533,0.284082,0.304434,0.332738,0.377397", \
				        "0.323192,0.337673,0.352674,0.372737,0.401595,0.447275");
			}
			fall_transition(Timing_X2) {
				values ("0.024774,0.030951,0.035795,0.040740,0.051156,0.076969", \
				        "0.024765,0.030950,0.035790,0.040755,0.051172,0.076967", \
				        "0.024767,0.030947,0.035815,0.040746,0.051181,0.076994", \
				        "0.024767,0.030958,0.035811,0.040773,0.050923,0.076864", \
				        "0.024776,0.030968,0.035798,0.040779,0.050898,0.076959", \
				        "0.026502,0.032638,0.037031,0.041523,0.051464,0.077239", \
				        "0.029755,0.035844,0.039522,0.043216,0.053206,0.079247", \
				        "0.034564,0.039952,0.042550,0.045136,0.055184,0.080892");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.195646,0.204399,0.214015,0.229910,0.255080,0.296751", \
				        "0.199251,0.208006,0.217749,0.233654,0.258810,0.300500", \
				        "0.206971,0.215719,0.225373,0.241213,0.266449,0.308065", \
				        "0.220506,0.229252,0.238835,0.254737,0.279825,0.321504", \
				        "0.238348,0.247078,0.256677,0.272623,0.297836,0.339302", \
				        "0.261125,0.269866,0.279500,0.295203,0.320348,0.361832", \
				        "0.288689,0.297431,0.306960,0.323736,0.348708,0.390214", \
				        "0.323337,0.332080,0.341615,0.358209,0.383884,0.425872");
			}
			fall_transition(Timing_X2) {
				values ("0.013703,0.017872,0.022894,0.031078,0.045047,0.072877", \
				        "0.013709,0.017870,0.022890,0.031057,0.045004,0.072860", \
				        "0.013709,0.017864,0.022891,0.031061,0.045022,0.072814", \
				        "0.013710,0.017879,0.022891,0.031057,0.044996,0.072835", \
				        "0.013716,0.017878,0.022886,0.031046,0.044979,0.072815", \
				        "0.013712,0.017875,0.022883,0.031041,0.045005,0.072827", \
				        "0.013713,0.017880,0.022893,0.031073,0.044845,0.072710", \
				        "0.013722,0.017877,0.022891,0.031066,0.045126,0.073058");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005475,0.005417,0.005391,0.005364,0.005354,0.005356", \
				        "0.005470,0.005413,0.005383,0.005355,0.005352,0.005352", \
				        "0.005483,0.005431,0.005399,0.005373,0.005360,0.005371", \
				        "0.005547,0.005494,0.005459,0.005443,0.005446,0.005451", \
				        "0.005754,0.005700,0.005665,0.005643,0.005653,0.005656", \
				        "0.006332,0.006270,0.006237,0.006207,0.006210,0.006216", \
				        "0.007759,0.007686,0.007646,0.007612,0.007595,0.007594", \
				        "0.010961,0.010865,0.010802,0.010739,0.010704,0.010685");
			}
			rise_power(Power_X2) {
				values ("0.005770,0.005703,0.005659,0.005622,0.005591,0.005575", \
				        "0.005762,0.005695,0.005652,0.005616,0.005598,0.005573", \
				        "0.005769,0.005702,0.005657,0.005632,0.005603,0.005604", \
				        "0.005837,0.005770,0.005725,0.005681,0.005677,0.005659", \
				        "0.006040,0.005974,0.005929,0.005888,0.005872,0.005869", \
				        "0.006597,0.006529,0.006486,0.006447,0.006444,0.006476", \
				        "0.007937,0.007869,0.007825,0.007787,0.007777,0.007793", \
				        "0.010875,0.010807,0.010763,0.010733,0.010716,0.010699");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			fall_power(Power_X2) {
				values ("0.006681,0.006623,0.006600,0.006587,0.006572,0.006573", \
				        "0.006680,0.006623,0.006597,0.006585,0.006568,0.006571", \
				        "0.006687,0.006629,0.006607,0.006593,0.006577,0.006579", \
				        "0.006724,0.006666,0.006642,0.006629,0.006613,0.006615", \
				        "0.006843,0.006784,0.006759,0.006743,0.006728,0.006734", \
				        "0.007154,0.007103,0.007073,0.007050,0.007032,0.007037", \
				        "0.007787,0.007729,0.007702,0.007695,0.007684,0.007686", \
				        "0.010209,0.010031,0.009886,0.009732,0.009610,0.009526");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFF_X1
 Cell Description	: Pos.edge D-Flip-Flop with drive strength X1
*******************************************************************************************/

cell (DFF_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
	}

	area               	: 4.788000;

	cell_leakage_power 	: 10804.686250;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000864;
		fall_capacitance	: 0.000816;
		rise_capacitance	: 0.000911;
		fall_capacitance_range		(0.000692, 0.000935);
		rise_capacitance_range		(0.000748, 0.001005);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.082817;
		min_pulse_width_high	: 0.110161;

		internal_power () {

			when      	: "D & Q & !QN";

			power(Hidden_Power_Clk) {
				values ("0.003572,0.004006,0.004884,0.006974,0.011571");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN";

			power(Hidden_Power_Clk) {
				values ("0.003891,0.004336,0.005225,0.007324,0.011928");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000955;
		fall_capacitance	: 0.000915;
		rise_capacitance	: 0.000995;
		fall_capacitance_range		(0.000831, 0.001020);
		rise_capacitance_range		(0.000909, 0.001116);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.001426,0.013643,0.016548,0.007731,-0.018385", \
				        "-0.038443,-0.017354,-0.012617,-0.019595,-0.046156", \
				        "-0.053822,-0.035227,-0.033104,-0.028529,-0.064347", \
				        "-0.063080,-0.053039,-0.056000,-0.060464,-0.073321", \
				        "-0.119509,-0.075422,-0.098953,-0.102052,-0.133474");
			}
			rise_constraint(Hold) {
				values ("-0.023455,-0.023676,-0.030157,-0.049131,-0.090213", \
				        "-0.043431,-0.040332,-0.044744,-0.063481,-0.106852", \
				        "-0.053922,-0.046172,-0.050697,-0.071194,-0.105625", \
				        "-0.060148,-0.053125,-0.060474,-0.075185,-0.111963", \
				        "-0.039086,-0.031706,-0.055109,-0.071292,-0.108807");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.057649,0.040069,0.031450,0.037039,0.061586", \
				        "0.102137,0.081796,0.075970,0.077976,0.102030", \
				        "0.140495,0.115530,0.111083,0.113802,0.138597", \
				        "0.197173,0.176568,0.164095,0.167937,0.190670", \
				        "0.292016,0.262815,0.258194,0.253794,0.270510");
			}
			rise_constraint(Setup) {
				values ("0.056493,0.051749,0.062504,0.086760,0.137846", \
				        "0.084828,0.078318,0.086671,0.107436,0.160745", \
				        "0.102335,0.097458,0.101571,0.122676,0.175014", \
				        "0.129858,0.118104,0.120906,0.142806,0.190998", \
				        "0.142122,0.141944,0.137616,0.157657,0.204455");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN";

			power(Hidden_Power_Data) {
				values ("0.000065,0.000048,0.000033,0.000023,0.000016,0.000012,0.000008,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN";

			power(Hidden_Power_Data) {
				values ("0.005227,0.005203,0.005183,0.005161,0.005272,0.005793,0.007262,0.010720");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000025,0.000020,0.000015,0.000012,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN";

			power(Hidden_Power_Data) {
				values ("0.005221,0.005192,0.005171,0.005150,0.005282,0.005771,0.007250,0.010720");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.176899,0.181494,0.189372,0.202594,0.224417,0.263790", \
				        "0.180208,0.184774,0.192598,0.205743,0.227759,0.267013", \
				        "0.185912,0.190493,0.198386,0.211593,0.233438,0.272305", \
				        "0.191773,0.196360,0.204214,0.218108,0.240162,0.279185", \
				        "0.198488,0.203085,0.210894,0.224510,0.246875,0.285933", \
				        "0.203124,0.207711,0.215542,0.228462,0.251696,0.292309", \
				        "0.198518,0.203117,0.210982,0.223812,0.246261,0.286147", \
				        "0.170243,0.174822,0.182744,0.196090,0.217907,0.256801");
			}
			cell_rise(Timing_X1) {
				values ("0.095668,0.100353,0.109620,0.128496,0.166329,0.241902", \
				        "0.098859,0.103538,0.112857,0.131620,0.169472,0.245046", \
				        "0.103949,0.108629,0.117938,0.136771,0.174370,0.249988", \
				        "0.109611,0.114284,0.123694,0.142731,0.180393,0.255380", \
				        "0.114849,0.119536,0.128938,0.148060,0.185794,0.261044", \
				        "0.117785,0.122467,0.131818,0.150760,0.188584,0.263952", \
				        "0.112022,0.116686,0.126049,0.144976,0.182755,0.258238", \
				        "0.081933,0.086627,0.095902,0.114839,0.152812,0.227999");
			}
			fall_transition(Timing_X1) {
				values ("0.013172,0.015368,0.019299,0.026557,0.040956,0.071303", \
				        "0.013192,0.015370,0.019298,0.026559,0.041016,0.071312", \
				        "0.013184,0.015363,0.019290,0.026674,0.040990,0.071494", \
				        "0.013192,0.015361,0.019299,0.026566,0.041015,0.071502", \
				        "0.013191,0.015366,0.019304,0.026570,0.040934,0.071513", \
				        "0.013199,0.015374,0.019309,0.026701,0.041252,0.071578", \
				        "0.013196,0.015371,0.019316,0.026711,0.041154,0.071376", \
				        "0.013206,0.015398,0.019331,0.026635,0.041015,0.071373");
			}
			rise_transition(Timing_X1) {
				values ("0.011739,0.015885,0.024710,0.042666,0.078547,0.150544", \
				        "0.011768,0.015901,0.024713,0.042676,0.078550,0.150544", \
				        "0.011773,0.015904,0.024708,0.042628,0.078498,0.150522", \
				        "0.011746,0.015914,0.024701,0.042621,0.078497,0.150339", \
				        "0.011754,0.015918,0.024718,0.042666,0.078518,0.150346", \
				        "0.011816,0.015907,0.024722,0.042642,0.078514,0.150412", \
				        "0.011924,0.015982,0.024738,0.042651,0.078524,0.150482", \
				        "0.012455,0.016277,0.024814,0.042671,0.078565,0.150389");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004713,0.004703,0.004693,0.004695,0.004688,0.004685", \
				        "0.004715,0.004704,0.004690,0.004689,0.004692,0.004687", \
				        "0.004741,0.004730,0.004720,0.004719,0.004719,0.004720", \
				        "0.004801,0.004791,0.004780,0.004800,0.004805,0.004807", \
				        "0.005055,0.005045,0.005033,0.005043,0.005046,0.005048", \
				        "0.005696,0.005686,0.005675,0.005672,0.005690,0.005712", \
				        "0.007131,0.007121,0.007111,0.007104,0.007117,0.007125", \
				        "0.010168,0.010157,0.010148,0.010152,0.010148,0.010146");
			}
			rise_power(Power_X1) {
				values ("0.004265,0.004259,0.004247,0.004244,0.004245,0.004244", \
				        "0.004262,0.004257,0.004247,0.004240,0.004241,0.004240", \
				        "0.004283,0.004277,0.004265,0.004262,0.004262,0.004264", \
				        "0.004359,0.004353,0.004346,0.004351,0.004351,0.004348", \
				        "0.004608,0.004601,0.004594,0.004595,0.004599,0.004603", \
				        "0.005259,0.005252,0.005241,0.005241,0.005242,0.005253", \
				        "0.006755,0.006746,0.006734,0.006727,0.006728,0.006733", \
				        "0.009974,0.009961,0.009942,0.009929,0.009925,0.009921");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.092645,0.097547,0.105962,0.120415,0.144364,0.185831", \
				        "0.095861,0.100744,0.109252,0.123479,0.147523,0.188987", \
				        "0.100971,0.105859,0.114353,0.128721,0.152418,0.193988", \
				        "0.106635,0.111536,0.120242,0.134749,0.158573,0.199347", \
				        "0.112032,0.116901,0.125551,0.140106,0.164038,0.205146", \
				        "0.115098,0.119985,0.128627,0.143022,0.167120,0.208349", \
				        "0.109656,0.114729,0.123592,0.138164,0.162372,0.203739", \
				        "0.081914,0.087443,0.096895,0.112025,0.136894,0.178648");
			}
			cell_rise(Timing_X1) {
				values ("0.135604,0.141770,0.153207,0.174656,0.214637,0.290958", \
				        "0.138899,0.145064,0.156426,0.177806,0.217925,0.294183", \
				        "0.144618,0.150765,0.162223,0.183621,0.223608,0.299442", \
				        "0.150478,0.156641,0.168049,0.190163,0.230331,0.306297", \
				        "0.157126,0.163314,0.174700,0.196552,0.237027,0.313026", \
				        "0.161802,0.167974,0.179354,0.200499,0.241608,0.318466", \
				        "0.157207,0.163376,0.174793,0.195850,0.236307,0.313134", \
				        "0.128844,0.135007,0.146534,0.168135,0.208179,0.284102");
			}
			fall_transition(Timing_X1) {
				values ("0.018883,0.021268,0.025195,0.032574,0.046857,0.076251", \
				        "0.018883,0.021277,0.025233,0.032560,0.046866,0.076264", \
				        "0.018914,0.021306,0.025249,0.032586,0.046901,0.076170", \
				        "0.018989,0.021359,0.025437,0.032673,0.046836,0.076201", \
				        "0.019006,0.021411,0.025561,0.032752,0.046939,0.076318", \
				        "0.019206,0.021612,0.025711,0.032880,0.046937,0.076234", \
				        "0.020144,0.022409,0.026346,0.033331,0.047257,0.076410", \
				        "0.023537,0.025513,0.028879,0.035237,0.048691,0.077266");
			}
			rise_transition(Timing_X1) {
				values ("0.023827,0.027910,0.036300,0.053660,0.087608,0.157310", \
				        "0.023835,0.027920,0.036295,0.053664,0.087691,0.157289", \
				        "0.023801,0.027916,0.036298,0.053723,0.087613,0.157413", \
				        "0.023811,0.027920,0.036300,0.053670,0.087700,0.157361", \
				        "0.023775,0.027910,0.036319,0.053696,0.087640,0.157409", \
				        "0.023834,0.027938,0.036313,0.053774,0.087618,0.157360", \
				        "0.023807,0.027929,0.036319,0.053814,0.087712,0.157294", \
				        "0.023920,0.028021,0.036401,0.053844,0.087699,0.157386");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004265,0.004259,0.004247,0.004244,0.004245,0.004244", \
				        "0.004262,0.004257,0.004247,0.004240,0.004241,0.004240", \
				        "0.004283,0.004277,0.004265,0.004262,0.004262,0.004264", \
				        "0.004359,0.004353,0.004346,0.004351,0.004351,0.004348", \
				        "0.004608,0.004601,0.004594,0.004595,0.004599,0.004603", \
				        "0.005259,0.005252,0.005241,0.005241,0.005242,0.005253", \
				        "0.006755,0.006746,0.006734,0.006727,0.006728,0.006733", \
				        "0.009974,0.009961,0.009942,0.009929,0.009925,0.009921");
			}
			rise_power(Power_X1) {
				values ("0.004713,0.004703,0.004693,0.004695,0.004688,0.004685", \
				        "0.004715,0.004704,0.004690,0.004689,0.004692,0.004687", \
				        "0.004741,0.004730,0.004720,0.004719,0.004719,0.004720", \
				        "0.004801,0.004791,0.004780,0.004800,0.004805,0.004807", \
				        "0.005055,0.005045,0.005033,0.005043,0.005046,0.005048", \
				        "0.005696,0.005686,0.005675,0.005672,0.005690,0.005712", \
				        "0.007131,0.007121,0.007111,0.007104,0.007117,0.007125", \
				        "0.010168,0.010157,0.010148,0.010152,0.010148,0.010146");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DFF_X2
 Cell Description	: Pos.edge D-Flip-Flop with drive strength X2
*******************************************************************************************/

cell (DFF_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CK";
	}

	area               	: 4.788000;

	cell_leakage_power 	: 12394.878750;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000841;
		fall_capacitance	: 0.000794;
		rise_capacitance	: 0.000889;
		fall_capacitance_range		(0.000671, 0.000913);
		rise_capacitance_range		(0.000726, 0.000983);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.086724;
		min_pulse_width_high	: 0.114068;

		internal_power () {

			when      	: "D & Q & !QN";

			power(Hidden_Power_Clk) {
				values ("0.003544,0.003979,0.004855,0.006941,0.011532");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN";

			power(Hidden_Power_Clk) {
				values ("0.003871,0.004307,0.005195,0.007288,0.011889");
			}

		}
	}

	pin (D) {

		direction		: input;
		capacitance		: 0.000957;
		fall_capacitance	: 0.000917;
		rise_capacitance	: 0.000997;
		fall_capacitance_range		(0.000833, 0.001021);
		rise_capacitance_range		(0.000911, 0.001118);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.006251,0.013209,0.015832,0.006666,-0.019818", \
				        "-0.038330,-0.017655,-0.013201,-0.020538,-0.041168", \
				        "-0.053671,-0.035453,-0.033594,-0.029396,-0.065591", \
				        "-0.077158,-0.053190,-0.056377,-0.061181,-0.074452", \
				        "-0.119283,-0.075497,-0.099179,-0.102580,-0.134379");
			}
			rise_constraint(Hold) {
				values ("-0.021998,-0.019423,-0.030636,-0.048100,-0.086398", \
				        "-0.046784,-0.037236,-0.044969,-0.064300,-0.101280", \
				        "-0.050827,-0.044645,-0.054757,-0.069033,-0.104694", \
				        "-0.051357,-0.049649,-0.056865,-0.077877,-0.107237", \
				        "-0.045381,-0.030652,-0.047130,-0.063155,-0.113134");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.062002,0.039502,0.031025,0.036614,0.065475", \
				        "0.105081,0.085598,0.080443,0.083577,0.109604", \
				        "0.142187,0.124311,0.114515,0.118505,0.136189", \
				        "0.203052,0.177392,0.172890,0.171197,0.196470", \
				        "0.289025,0.268604,0.257511,0.254947,0.274698");
			}
			rise_constraint(Setup) {
				values ("0.056248,0.051542,0.062277,0.086496,0.137526", \
				        "0.084168,0.080440,0.086106,0.106889,0.160199", \
				        "0.106531,0.096534,0.106809,0.121865,0.174260", \
				        "0.128237,0.116634,0.126104,0.141543,0.189885", \
				        "0.152912,0.139644,0.135467,0.155696,0.213018");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN";

			power(Hidden_Power_Data) {
				values ("0.000065,0.000048,0.000033,0.000023,0.000016,0.000012,0.000008,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN";

			power(Hidden_Power_Data) {
				values ("0.005265,0.005241,0.005222,0.005198,0.005313,0.005829,0.007291,0.010750");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000025,0.000021,0.000016,0.000012,0.000010,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN";

			power(Hidden_Power_Data) {
				values ("0.005259,0.005232,0.005209,0.005189,0.005289,0.005806,0.007281,0.010750");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.183907,0.191439,0.199532,0.213191,0.235369,0.274027", \
				        "0.187350,0.194873,0.202936,0.216545,0.238439,0.277121", \
				        "0.192840,0.200388,0.208613,0.222073,0.244171,0.282420", \
				        "0.198898,0.206435,0.214567,0.228783,0.250890,0.289296", \
				        "0.205789,0.213321,0.221406,0.235157,0.257812,0.295993", \
				        "0.210415,0.217948,0.226095,0.239284,0.262625,0.302452", \
				        "0.205919,0.213463,0.221597,0.234801,0.257255,0.296289", \
				        "0.177226,0.184744,0.193451,0.207106,0.229027,0.267243");
			}
			cell_rise(Timing_X2) {
				values ("0.098240,0.105042,0.113919,0.132000,0.168413,0.241418", \
				        "0.101425,0.108237,0.117105,0.135105,0.171557,0.244562", \
				        "0.106575,0.113387,0.122274,0.140300,0.176549,0.249402", \
				        "0.112348,0.119125,0.128023,0.146242,0.182503,0.255130", \
				        "0.117735,0.124529,0.133399,0.151717,0.188082,0.260724", \
				        "0.120879,0.127718,0.136562,0.154649,0.191105,0.263832", \
				        "0.115784,0.122626,0.131405,0.149503,0.185849,0.258736", \
				        "0.087366,0.094406,0.103087,0.121126,0.157553,0.230137");
			}
			fall_transition(Timing_X2) {
				values ("0.012589,0.016112,0.020091,0.027294,0.041063,0.069466", \
				        "0.012588,0.016112,0.020089,0.027298,0.041032,0.069461", \
				        "0.012585,0.016109,0.020091,0.027294,0.041050,0.069734", \
				        "0.012572,0.016104,0.020090,0.027301,0.041059,0.069684", \
				        "0.012573,0.016110,0.020090,0.027237,0.041030,0.069681", \
				        "0.012587,0.016111,0.020091,0.027309,0.041182,0.069607", \
				        "0.012584,0.016115,0.020096,0.027311,0.041046,0.069643", \
				        "0.012611,0.016140,0.020127,0.027264,0.041006,0.069608");
			}
			rise_transition(Timing_X2) {
				values ("0.008735,0.013997,0.022253,0.039498,0.074196,0.143691", \
				        "0.008730,0.014007,0.022253,0.039532,0.074196,0.143692", \
				        "0.008730,0.013994,0.022257,0.039532,0.074165,0.143616", \
				        "0.008744,0.014007,0.022256,0.039515,0.074175,0.143575", \
				        "0.008775,0.014021,0.022256,0.039530,0.074178,0.143588", \
				        "0.008802,0.014013,0.022263,0.039506,0.074186,0.143514", \
				        "0.008975,0.014119,0.022277,0.039510,0.074204,0.143517", \
				        "0.009764,0.014535,0.022423,0.039585,0.074218,0.143563");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005324,0.005257,0.005217,0.005202,0.005189,0.005172", \
				        "0.005325,0.005258,0.005218,0.005201,0.005184,0.005170", \
				        "0.005347,0.005279,0.005246,0.005223,0.005210,0.005198", \
				        "0.005410,0.005343,0.005305,0.005303,0.005293,0.005283", \
				        "0.005664,0.005597,0.005559,0.005540,0.005528,0.005512", \
				        "0.006301,0.006233,0.006197,0.006169,0.006184,0.006202", \
				        "0.007735,0.007666,0.007629,0.007600,0.007603,0.007591", \
				        "0.010755,0.010687,0.010664,0.010643,0.010622,0.010607");
			}
			rise_power(Power_X2) {
				values ("0.004726,0.004683,0.004657,0.004644,0.004636,0.004632", \
				        "0.004723,0.004681,0.004655,0.004640,0.004632,0.004629", \
				        "0.004744,0.004702,0.004676,0.004662,0.004656,0.004654", \
				        "0.004822,0.004778,0.004753,0.004748,0.004742,0.004740", \
				        "0.005072,0.005026,0.005000,0.004994,0.004990,0.004992", \
				        "0.005724,0.005677,0.005647,0.005637,0.005630,0.005637", \
				        "0.007236,0.007181,0.007143,0.007123,0.007109,0.007115", \
				        "0.010515,0.010435,0.010381,0.010338,0.010316,0.010300");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.088192,0.096403,0.105672,0.120746,0.145042,0.185816", \
				        "0.091365,0.099596,0.108865,0.123952,0.148194,0.188972", \
				        "0.096511,0.104750,0.114075,0.129154,0.153304,0.194171", \
				        "0.102300,0.110508,0.119830,0.135158,0.159338,0.199754", \
				        "0.107753,0.115969,0.125264,0.140618,0.164899,0.205516", \
				        "0.110988,0.119243,0.128568,0.143734,0.168150,0.208814", \
				        "0.106063,0.114469,0.123880,0.139283,0.163676,0.204676", \
				        "0.078596,0.087866,0.097975,0.113980,0.139083,0.180207");
			}
			cell_rise(Timing_X2) {
				values ("0.128011,0.138298,0.150072,0.171486,0.211078,0.285265", \
				        "0.131458,0.141734,0.153476,0.174843,0.214156,0.288360", \
				        "0.136946,0.147251,0.159153,0.180371,0.219886,0.293675", \
				        "0.142990,0.153284,0.165106,0.187082,0.226604,0.300561", \
				        "0.149843,0.160120,0.171917,0.193435,0.233468,0.307261", \
				        "0.154511,0.164801,0.176628,0.197551,0.238163,0.312919", \
				        "0.149989,0.160296,0.172119,0.193066,0.232895,0.307502", \
				        "0.121164,0.131476,0.143902,0.165357,0.204821,0.278671");
			}
			fall_transition(Timing_X2) {
				values ("0.015225,0.019338,0.023937,0.031353,0.044939,0.072892", \
				        "0.015223,0.019337,0.023946,0.031412,0.044941,0.072895", \
				        "0.015258,0.019359,0.023985,0.031413,0.044986,0.073095", \
				        "0.015303,0.019408,0.024008,0.031454,0.045024,0.073069", \
				        "0.015355,0.019469,0.024072,0.031453,0.045063,0.072985", \
				        "0.015500,0.019646,0.024238,0.031606,0.045090,0.072864", \
				        "0.016322,0.020370,0.024842,0.032115,0.045392,0.073070", \
				        "0.019747,0.023595,0.027585,0.034072,0.046885,0.073864");
			}
			rise_transition(Timing_X2) {
				values ("0.017846,0.024110,0.032113,0.048745,0.081737,0.148518", \
				        "0.017845,0.024110,0.032118,0.048742,0.081703,0.148519", \
				        "0.017831,0.024103,0.032106,0.048743,0.081741,0.148442", \
				        "0.017821,0.024122,0.032118,0.048720,0.081782,0.148384", \
				        "0.017784,0.024119,0.032152,0.048712,0.081827,0.148401", \
				        "0.017828,0.024113,0.032125,0.048748,0.081799,0.148535", \
				        "0.017819,0.024126,0.032132,0.048759,0.081790,0.148424", \
				        "0.017887,0.024207,0.032219,0.048826,0.081849,0.148593");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.004726,0.004683,0.004657,0.004644,0.004636,0.004632", \
				        "0.004723,0.004681,0.004655,0.004640,0.004632,0.004629", \
				        "0.004744,0.004702,0.004676,0.004662,0.004656,0.004654", \
				        "0.004822,0.004778,0.004753,0.004748,0.004742,0.004740", \
				        "0.005072,0.005026,0.005000,0.004994,0.004990,0.004992", \
				        "0.005724,0.005677,0.005647,0.005637,0.005630,0.005637", \
				        "0.007236,0.007181,0.007143,0.007123,0.007109,0.007115", \
				        "0.010515,0.010435,0.010381,0.010338,0.010316,0.010300");
			}
			rise_power(Power_X2) {
				values ("0.005324,0.005257,0.005217,0.005202,0.005189,0.005172", \
				        "0.005325,0.005258,0.005218,0.005201,0.005184,0.005170", \
				        "0.005347,0.005279,0.005246,0.005223,0.005210,0.005198", \
				        "0.005410,0.005343,0.005305,0.005303,0.005293,0.005283", \
				        "0.005664,0.005597,0.005559,0.005540,0.005528,0.005512", \
				        "0.006301,0.006233,0.006197,0.006169,0.006184,0.006202", \
				        "0.007735,0.007666,0.007629,0.007600,0.007603,0.007591", \
				        "0.010755,0.010687,0.010664,0.010643,0.010622,0.010607");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DLH_X1
 Cell Description	: High enable Latch with drive strength X1
*******************************************************************************************/

cell (DLH_X1) {

	latch ("IQ" , "IQN") {
		data_in            	: "D";
		enable             	: "G";
	}

	area               	: 2.926000;

	cell_leakage_power 	: 33159.780000;


	pin (D) {

		direction		: input;
		capacitance		: 0.000959;
		fall_capacitance	: 0.000923;
		rise_capacitance	: 0.000996;
		fall_capacitance_range		(0.000872, 0.000945);
		rise_capacitance_range		(0.000976, 0.001005);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "G";
			timing_type	   : hold_falling;
			fall_constraint(Hold) {
				values ("-0.063171,-0.046110,-0.039274,-0.029874,-0.011634", \
				        "-0.106041,-0.088228,-0.079547,-0.067529,-0.047532", \
				        "-0.138985,-0.119696,-0.110211,-0.097946,-0.077149", \
				        "-0.191431,-0.172265,-0.162498,-0.150302,-0.129738", \
				        "-0.277469,-0.258258,-0.250330,-0.237622,-0.220418");
			}
			rise_constraint(Hold) {
				values ("-0.015960,0.016387,0.033936,0.059908,0.099769", \
				        "-0.046178,-0.011908,0.007323,0.034921,0.078103", \
				        "-0.061290,-0.025679,-0.006290,0.022479,0.066631", \
				        "-0.072582,-0.035389,-0.015154,0.013683,0.058299", \
				        "-0.070115,-0.029780,-0.008468,0.021170,0.066703");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : setup_falling;
			fall_constraint(Setup) {
				values ("0.076027,0.061549,0.061239,0.068172,0.091188", \
				        "0.119901,0.104583,0.101611,0.104372,0.119008", \
				        "0.154350,0.137491,0.132753,0.133176,0.145074", \
				        "0.209791,0.192205,0.187902,0.189889,0.199772", \
				        "0.300312,0.280069,0.277447,0.276764,0.296877");
			}
			rise_constraint(Setup) {
				values ("0.023212,-0.011014,-0.027646,-0.051916,-0.089952", \
				        "0.053889,0.018768,-0.000419,-0.026007,-0.066032", \
				        "0.068908,0.031906,0.012523,-0.014820,-0.055280", \
				        "0.078353,0.039647,0.018647,-0.009910,-0.051655", \
				        "0.073136,0.031606,0.009811,-0.019815,-0.065358");
			}
		}

		internal_power () {

			when      	: "!G & !Q";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000024,0.000019,0.000014,0.000011,0.000008,0.000006,0.000002");
			}

		}

		internal_power () {

			when      	: "!G & Q";

			power(Hidden_Power_Data) {
				values ("0.000064,0.000047,0.000033,0.000023,0.000016,0.000011,0.000008,0.000003");
			}

		}
	}

	pin (G) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.001032;
		fall_capacitance	: 0.000973;
		rise_capacitance	: 0.001092;
		fall_capacitance_range		(0.000802, 0.001122);
		rise_capacitance_range		(0.000896, 0.001207);
		max_transition		: 0.960000;
		min_pulse_width_high	: 0.078911;

		internal_power () {

			when      	: "!D & !Q";

			power(Hidden_Power_Clk) {
				values ("0.003554,0.004140,0.005275,0.007917,0.013675");
			}

		}

		internal_power () {

			when      	: "D & Q";

			power(Hidden_Power_Clk) {
				values ("0.003420,0.004000,0.005143,0.007808,0.013579");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "D";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.080609,0.085724,0.094650,0.109061,0.132903,0.173900", \
				        "0.084351,0.089474,0.098234,0.112537,0.136416,0.177416", \
				        "0.090783,0.095898,0.104671,0.119076,0.143011,0.184071", \
				        "0.102640,0.107753,0.116506,0.131020,0.154773,0.195795", \
				        "0.123041,0.128401,0.137734,0.152738,0.177009,0.218160", \
				        "0.153741,0.159649,0.170405,0.186780,0.212630,0.255208", \
				        "0.204335,0.211003,0.222142,0.241464,0.269662,0.314659", \
				        "0.285957,0.293817,0.306767,0.329147,0.361652,0.411140");
			}
			cell_rise(Timing_X1) {
				values ("0.061724,0.067908,0.079042,0.099253,0.137596,0.213288", \
				        "0.064238,0.070422,0.081543,0.101740,0.140081,0.215779", \
				        "0.069046,0.075282,0.086379,0.106487,0.144656,0.220352", \
				        "0.078246,0.084456,0.095750,0.115931,0.153789,0.229464", \
				        "0.091534,0.097976,0.109401,0.129597,0.167783,0.243379", \
				        "0.106454,0.113503,0.126004,0.146870,0.185146,0.260659", \
				        "0.118864,0.127096,0.140795,0.163775,0.202984,0.278518", \
				        "0.118486,0.128229,0.144811,0.170899,0.213568,0.290553");
			}
			fall_transition(Timing_X1) {
				values ("0.013357,0.015836,0.020520,0.028438,0.042883,0.072546", \
				        "0.013343,0.015823,0.020502,0.028576,0.042873,0.072546", \
				        "0.013363,0.015843,0.020502,0.028578,0.043309,0.072620", \
				        "0.013391,0.015873,0.020490,0.028384,0.042829,0.072572", \
				        "0.014667,0.017123,0.021707,0.029392,0.043359,0.072747", \
				        "0.017219,0.019803,0.024591,0.032496,0.046358,0.074649", \
				        "0.021360,0.024165,0.029269,0.037373,0.051039,0.078237", \
				        "0.027972,0.031286,0.036899,0.045689,0.059366,0.085522");
			}
			rise_transition(Timing_X1) {
				values ("0.015162,0.019357,0.027496,0.044000,0.078645,0.149870", \
				        "0.015162,0.019357,0.027497,0.044004,0.078679,0.149867", \
				        "0.015098,0.019349,0.027500,0.043979,0.078623,0.149887", \
				        "0.015325,0.019507,0.027616,0.044040,0.078668,0.149886", \
				        "0.016335,0.020457,0.028358,0.044478,0.078869,0.149913", \
				        "0.018636,0.022711,0.030309,0.045796,0.079313,0.150099", \
				        "0.022832,0.027324,0.034873,0.049302,0.081080,0.150781", \
				        "0.029151,0.034438,0.043159,0.057271,0.086329,0.153851");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.081138,0.086316,0.095384,0.111023,0.135709,0.177086", \
				        "0.084380,0.089559,0.098626,0.114170,0.138886,0.180299", \
				        "0.089540,0.094713,0.103831,0.119447,0.143988,0.185276", \
				        "0.095592,0.100753,0.109814,0.125611,0.150513,0.191783", \
				        "0.102723,0.107890,0.116957,0.132633,0.157695,0.199052", \
				        "0.109961,0.115152,0.124231,0.139967,0.164829,0.206355", \
				        "0.114115,0.119381,0.128604,0.144582,0.169477,0.210938", \
				        "0.105464,0.111175,0.120987,0.137901,0.163544,0.205558");
			}
			cell_rise(Timing_X1) {
				values ("0.086489,0.092790,0.104392,0.124869,0.163222,0.238860", \
				        "0.089787,0.096086,0.107709,0.128173,0.166535,0.242093", \
				        "0.095443,0.101743,0.113370,0.133881,0.172248,0.247753", \
				        "0.101546,0.107842,0.119453,0.139929,0.178647,0.254673", \
				        "0.108126,0.114427,0.126033,0.146469,0.185441,0.261172", \
				        "0.112942,0.119249,0.130867,0.151366,0.189924,0.266111", \
				        "0.110252,0.116596,0.128266,0.148737,0.187450,0.263184", \
				        "0.090070,0.096426,0.108154,0.128658,0.167070,0.243252");
			}
			fall_transition(Timing_X1) {
				values ("0.013468,0.016143,0.021474,0.030086,0.043883,0.072875", \
				        "0.013469,0.016144,0.021476,0.030084,0.043879,0.072909", \
				        "0.013449,0.016113,0.021473,0.030095,0.043866,0.072916", \
				        "0.013436,0.016107,0.021488,0.030141,0.043893,0.072904", \
				        "0.013485,0.016159,0.021513,0.030137,0.044054,0.072980", \
				        "0.013617,0.016295,0.021628,0.030260,0.044023,0.072913", \
				        "0.014229,0.016885,0.022256,0.030853,0.044379,0.073114", \
				        "0.016471,0.019057,0.024317,0.032812,0.045555,0.073809");
			}
			rise_transition(Timing_X1) {
				values ("0.015341,0.019899,0.028246,0.044293,0.078614,0.149850", \
				        "0.015293,0.019874,0.028248,0.044300,0.078628,0.149823", \
				        "0.015297,0.019880,0.028258,0.044304,0.078629,0.149827", \
				        "0.015281,0.019868,0.028230,0.044296,0.078627,0.149859", \
				        "0.015344,0.019890,0.028248,0.044293,0.078614,0.149836", \
				        "0.015347,0.019921,0.028270,0.044318,0.078616,0.149829", \
				        "0.015446,0.020006,0.028363,0.044381,0.078641,0.149870", \
				        "0.015455,0.020077,0.028527,0.044612,0.078827,0.149964");
			}
		}

		internal_power () {

			related_pin	         : "D";
			fall_power(Power_X1) {
				values ("0.006536,0.006278,0.005779,0.004804,0.002857,-0.001020", \
				        "0.006526,0.006269,0.005768,0.004798,0.002846,-0.001031", \
				        "0.006516,0.006259,0.005759,0.004786,0.002852,-0.001024", \
				        "0.006524,0.006265,0.005770,0.004785,0.002840,-0.001035", \
				        "0.006729,0.006464,0.005961,0.005001,0.003031,-0.000843", \
				        "0.007422,0.007145,0.006636,0.005637,0.003695,-0.000189", \
				        "0.009286,0.008998,0.008446,0.007436,0.005464,0.001564", \
				        "0.013391,0.013076,0.012499,0.011430,0.009420,0.005488");
			}
			rise_power(Power_X1) {
				values ("0.005988,0.006225,0.006704,0.007671,0.009615,0.013500", \
				        "0.005966,0.006204,0.006683,0.007653,0.009598,0.013483", \
				        "0.005951,0.006196,0.006666,0.007633,0.009574,0.013460", \
				        "0.005987,0.006223,0.006715,0.007681,0.009587,0.013471", \
				        "0.006179,0.006412,0.006881,0.007834,0.009764,0.013644", \
				        "0.006825,0.007052,0.007534,0.008492,0.010403,0.014273", \
				        "0.008596,0.008814,0.009263,0.010223,0.012131,0.015979", \
				        "0.012612,0.012815,0.013241,0.014161,0.016048,0.019863");
			}
		}

		internal_power () {

			related_pin	         : "G";
			fall_power(Power_X1) {
				values ("0.008434,0.008175,0.007676,0.006696,0.004751,0.000869", \
				        "0.008429,0.008169,0.007669,0.006686,0.004741,0.000859", \
				        "0.008490,0.008231,0.007734,0.006754,0.004806,0.000925", \
				        "0.008712,0.008452,0.007951,0.006979,0.005054,0.001173", \
				        "0.009379,0.009121,0.008620,0.007642,0.005725,0.001874", \
				        "0.011063,0.010803,0.010299,0.009319,0.007388,0.003512", \
				        "0.014894,0.014629,0.014120,0.013135,0.011194,0.007314", \
				        "0.023082,0.022807,0.022283,0.021298,0.019337,0.015467");
			}
			rise_power(Power_X1) {
				values ("0.009207,0.009445,0.009926,0.010895,0.012843,0.016732", \
				        "0.009204,0.009443,0.009924,0.010890,0.012838,0.016723", \
				        "0.009287,0.009525,0.010007,0.010978,0.012925,0.016809", \
				        "0.009472,0.009710,0.010191,0.011156,0.013128,0.017051", \
				        "0.010101,0.010339,0.010819,0.011785,0.013776,0.017676", \
				        "0.011702,0.011939,0.012419,0.013387,0.015361,0.019279", \
				        "0.015278,0.015514,0.015996,0.016957,0.018937,0.022850", \
				        "0.022858,0.023096,0.023577,0.024528,0.026457,0.030411");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DLH_X2
 Cell Description	: High enable Latch with drive strength X2
*******************************************************************************************/

cell (DLH_X2) {

	latch ("IQ" , "IQN") {
		data_in            	: "D";
		enable             	: "G";
	}

	area               	: 2.926000;

	cell_leakage_power 	: 36341.032500;


	pin (D) {

		direction		: input;
		capacitance		: 0.000997;
		fall_capacitance	: 0.000964;
		rise_capacitance	: 0.001031;
		fall_capacitance_range		(0.000906, 0.000981);
		rise_capacitance_range		(0.001011, 0.001040);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "G";
			timing_type	   : hold_falling;
			fall_constraint(Hold) {
				values ("-0.064884,-0.048094,-0.041287,-0.032332,-0.014638", \
				        "-0.108157,-0.090373,-0.081978,-0.070028,-0.050444", \
				        "-0.141520,-0.122650,-0.112946,-0.100756,-0.080532", \
				        "-0.194320,-0.175457,-0.165869,-0.153900,-0.133377", \
				        "-0.281262,-0.262239,-0.252778,-0.240572,-0.223512");
			}
			rise_constraint(Hold) {
				values ("-0.017061,0.015271,0.032804,0.058485,0.098131", \
				        "-0.047547,-0.013548,0.005404,0.033080,0.075746", \
				        "-0.063065,-0.027734,-0.008243,0.020070,0.064094", \
				        "-0.075340,-0.038183,-0.018120,0.010639,0.054661", \
				        "-0.073487,-0.033760,-0.012211,0.016744,0.062371");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : setup_falling;
			fall_constraint(Setup) {
				values ("0.077585,0.062809,0.062182,0.070148,0.095587", \
				        "0.121371,0.105745,0.103576,0.106294,0.120854", \
				        "0.156601,0.140054,0.134763,0.136460,0.151251", \
				        "0.211889,0.194959,0.191028,0.192808,0.205787", \
				        "0.303169,0.283375,0.281225,0.281153,0.298542");
			}
			rise_constraint(Setup) {
				values ("0.024527,-0.009607,-0.026170,-0.050211,-0.088016", \
				        "0.055478,0.020511,0.001744,-0.023772,-0.063753", \
				        "0.071001,0.033834,0.014840,-0.012235,-0.052204", \
				        "0.081164,0.042429,0.021929,-0.006603,-0.047102", \
				        "0.076517,0.035492,0.013498,-0.015439,-0.060668");
			}
		}

		internal_power () {

			when      	: "!G & !Q";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000024,0.000019,0.000014,0.000011,0.000008,0.000006,0.000002");
			}

		}

		internal_power () {

			when      	: "!G & Q";

			power(Hidden_Power_Data) {
				values ("0.000064,0.000047,0.000033,0.000023,0.000016,0.000011,0.000008,0.000003");
			}

		}
	}

	pin (G) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.001046;
		fall_capacitance	: 0.000986;
		rise_capacitance	: 0.001107;
		fall_capacitance_range		(0.000801, 0.001138);
		rise_capacitance_range		(0.000910, 0.001222);
		max_transition		: 0.960000;
		min_pulse_width_high	: 0.080864;

		internal_power () {

			when      	: "!D & !Q";

			power(Hidden_Power_Clk) {
				values ("0.003542,0.004130,0.005265,0.007906,0.013662");
			}

		}

		internal_power () {

			when      	: "D & Q";

			power(Hidden_Power_Clk) {
				values ("0.003406,0.003991,0.005134,0.007798,0.013565");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "D";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.077991,0.086191,0.095063,0.109440,0.132939,0.172814", \
				        "0.081743,0.089939,0.098722,0.112977,0.136423,0.176316", \
				        "0.088148,0.096349,0.105239,0.119519,0.143080,0.183056", \
				        "0.099996,0.108187,0.116968,0.131456,0.154860,0.194769", \
				        "0.120448,0.129040,0.138376,0.153315,0.177095,0.217139", \
				        "0.151228,0.160675,0.171450,0.187734,0.213133,0.254781", \
				        "0.201835,0.212517,0.223571,0.242886,0.270614,0.314563", \
				        "0.283590,0.296019,0.308918,0.330887,0.363263,0.411721");
			}
			cell_rise(Timing_X2) {
				values ("0.057642,0.067301,0.078502,0.098183,0.135339,0.208414", \
				        "0.060185,0.069843,0.080981,0.100662,0.137815,0.210893", \
				        "0.065039,0.074701,0.085724,0.105412,0.142397,0.215462", \
				        "0.074249,0.083966,0.095161,0.114890,0.151588,0.224636", \
				        "0.087544,0.097668,0.109098,0.128933,0.165869,0.238807", \
				        "0.102365,0.113509,0.125962,0.146591,0.183798,0.256665", \
				        "0.114646,0.127571,0.141303,0.164098,0.202291,0.275164", \
				        "0.114314,0.129479,0.145998,0.171862,0.213680,0.288039");
			}
			fall_transition(Timing_X2) {
				values ("0.011835,0.015569,0.020160,0.027939,0.041837,0.070148", \
				        "0.011826,0.015566,0.020173,0.028059,0.041811,0.070119", \
				        "0.011833,0.015565,0.020175,0.028063,0.042310,0.070243", \
				        "0.011849,0.015585,0.020150,0.027922,0.041783,0.070101", \
				        "0.013162,0.016851,0.021347,0.028857,0.042327,0.070381", \
				        "0.015699,0.019631,0.024298,0.032062,0.045431,0.072454", \
				        "0.019865,0.024144,0.029117,0.037130,0.050213,0.076167", \
				        "0.026519,0.031409,0.036939,0.045575,0.058768,0.083768");
			}
			rise_transition(Timing_X2) {
				values ("0.011983,0.018253,0.026214,0.041929,0.075273,0.143846", \
				        "0.011969,0.018262,0.026205,0.041929,0.075269,0.143848", \
				        "0.011923,0.018241,0.026161,0.041970,0.075269,0.143846", \
				        "0.012123,0.018393,0.026261,0.042032,0.075289,0.143843", \
				        "0.013135,0.019383,0.027079,0.042486,0.075413,0.143841", \
				        "0.015366,0.021724,0.029135,0.043984,0.075937,0.144046", \
				        "0.019187,0.026342,0.033858,0.047704,0.077977,0.144784", \
				        "0.025211,0.033428,0.042156,0.055958,0.083572,0.147963");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.078300,0.086557,0.095636,0.111237,0.135584,0.175890", \
				        "0.081529,0.089782,0.098819,0.114385,0.138643,0.179063", \
				        "0.086713,0.094969,0.104015,0.119604,0.143870,0.184076", \
				        "0.092730,0.100976,0.110031,0.125661,0.150356,0.190586", \
				        "0.099722,0.107979,0.117040,0.132645,0.157294,0.197739", \
				        "0.106907,0.115180,0.124245,0.139855,0.164406,0.204892", \
				        "0.111073,0.119458,0.128650,0.144521,0.169126,0.209816", \
				        "0.102454,0.111550,0.121321,0.137898,0.163330,0.204310");
			}
			cell_rise(Timing_X2) {
				values ("0.082350,0.092109,0.103607,0.123756,0.160929,0.233990", \
				        "0.085648,0.095392,0.106927,0.127022,0.164207,0.237177", \
				        "0.091272,0.101024,0.112553,0.132698,0.169868,0.242608", \
				        "0.097311,0.107061,0.118592,0.138726,0.176388,0.249687", \
				        "0.103876,0.113633,0.125154,0.145267,0.183009,0.256198", \
				        "0.108700,0.118464,0.130002,0.150106,0.187435,0.261091", \
				        "0.106060,0.115881,0.127460,0.147613,0.184994,0.258250", \
				        "0.085963,0.095796,0.107442,0.127718,0.164803,0.238429");
			}
			fall_transition(Timing_X2) {
				values ("0.011878,0.015779,0.021007,0.029605,0.042902,0.070537", \
				        "0.011873,0.015795,0.020989,0.029606,0.042894,0.070592", \
				        "0.011876,0.015801,0.021009,0.029612,0.042895,0.070572", \
				        "0.011844,0.015775,0.021048,0.029684,0.042927,0.070612", \
				        "0.011898,0.015831,0.021059,0.029669,0.043079,0.070638", \
				        "0.012036,0.015957,0.021176,0.029769,0.043016,0.070537", \
				        "0.012674,0.016533,0.021798,0.030391,0.043453,0.070891", \
				        "0.015023,0.018777,0.023889,0.032132,0.044632,0.071463");
			}
			rise_transition(Timing_X2) {
				values ("0.012010,0.018708,0.026886,0.042302,0.075192,0.143793", \
				        "0.011949,0.018681,0.026886,0.042304,0.075180,0.143797", \
				        "0.011981,0.018715,0.026896,0.042305,0.075200,0.143810", \
				        "0.011946,0.018691,0.026887,0.042300,0.075202,0.143806", \
				        "0.012023,0.018712,0.026890,0.042298,0.075197,0.143788", \
				        "0.012019,0.018743,0.026931,0.042325,0.075186,0.143785", \
				        "0.012101,0.018831,0.027007,0.042391,0.075222,0.143830", \
				        "0.012083,0.018893,0.027177,0.042621,0.075397,0.143922");
			}
		}

		internal_power () {

			related_pin	         : "D";
			fall_power(Power_X2) {
				values ("0.007044,0.006235,0.005229,0.003264,-0.000632,-0.008395", \
				        "0.007035,0.006226,0.005220,0.003257,-0.000646,-0.008405", \
				        "0.007024,0.006214,0.005207,0.003246,-0.000634,-0.008390", \
				        "0.007035,0.006222,0.005213,0.003241,-0.000657,-0.008409", \
				        "0.007292,0.006456,0.005430,0.003464,-0.000401,-0.008164", \
				        "0.008098,0.007216,0.006162,0.004143,0.000232,-0.007542", \
				        "0.010142,0.009208,0.008095,0.006023,0.002047,-0.005765", \
				        "0.014561,0.013556,0.012357,0.010191,0.006115,-0.001771");
			}
			rise_power(Power_X2) {
				values ("0.006443,0.007146,0.008114,0.010037,0.013919,0.021679", \
				        "0.006426,0.007127,0.008093,0.010018,0.013901,0.021659", \
				        "0.006414,0.007117,0.008067,0.009997,0.013875,0.021635", \
				        "0.006459,0.007158,0.008123,0.010046,0.013888,0.021645", \
				        "0.006687,0.007373,0.008320,0.010226,0.014076,0.021824", \
				        "0.007413,0.008076,0.009013,0.010913,0.014742,0.022467", \
				        "0.009335,0.009956,0.010843,0.012730,0.016529,0.024209", \
				        "0.013635,0.014188,0.015023,0.016829,0.020578,0.028188");
			}
		}

		internal_power () {

			related_pin	         : "G";
			fall_power(Power_X2) {
				values ("0.008978,0.008163,0.007151,0.005183,0.001287,-0.006479", \
				        "0.008971,0.008158,0.007140,0.005172,0.001278,-0.006492", \
				        "0.009037,0.008224,0.007207,0.005239,0.001345,-0.006423", \
				        "0.009261,0.008449,0.007434,0.005463,0.001592,-0.006176", \
				        "0.009927,0.009115,0.008096,0.006127,0.002270,-0.005464", \
				        "0.011615,0.010797,0.009775,0.007802,0.003920,-0.003838", \
				        "0.015473,0.014642,0.013609,0.011624,0.007725,-0.000021", \
				        "0.023747,0.022878,0.021814,0.019796,0.015877,0.008118");
			}
			rise_power(Power_X2) {
				values ("0.009688,0.010392,0.011346,0.013284,0.017168,0.024934", \
				        "0.009686,0.010387,0.011344,0.013274,0.017159,0.024923", \
				        "0.009764,0.010467,0.011425,0.013362,0.017244,0.024989", \
				        "0.009951,0.010656,0.011612,0.013547,0.017462,0.025246", \
				        "0.010584,0.011286,0.012245,0.014177,0.018103,0.025881", \
				        "0.012190,0.012893,0.013850,0.015780,0.019684,0.027481", \
				        "0.015770,0.016473,0.017429,0.019360,0.023259,0.031068", \
				        "0.023347,0.024050,0.025006,0.026931,0.030784,0.038612");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DLL_X1
 Cell Description	: Low enable Latch with drive strength X1
*******************************************************************************************/

cell (DLL_X1) {

	latch ("IQ" , "IQN") {
		data_in            	: "D";
		enable             	: "!GN";
	}

	area               	: 2.660000;

	cell_leakage_power 	: 25521.805000;


	pin (D) {

		direction		: input;
		capacitance		: 0.000719;
		fall_capacitance	: 0.000700;
		rise_capacitance	: 0.000737;
		fall_capacitance_range		(0.000659, 0.000712);
		rise_capacitance_range		(0.000721, 0.000745);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "GN";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.049962,-0.031106,-0.029336,-0.037377,-0.066790", \
				        "-0.094217,-0.075613,-0.073534,-0.080681,-0.108964", \
				        "-0.129606,-0.110320,-0.107477,-0.113467,-0.141004", \
				        "-0.187360,-0.166545,-0.162229,-0.168154,-0.194358", \
				        "-0.282948,-0.257263,-0.252346,-0.256507,-0.281834");
			}
			rise_constraint(Hold) {
				values ("-0.032472,-0.035446,-0.046947,-0.071401,-0.120717", \
				        "-0.059494,-0.058205,-0.066753,-0.089098,-0.136282", \
				        "-0.070416,-0.067807,-0.076222,-0.096742,-0.143119", \
				        "-0.074289,-0.071437,-0.080401,-0.101314,-0.147931", \
				        "-0.059017,-0.056793,-0.065478,-0.089045,-0.139356");
			}
		}

		timing () {

			related_pin	   : "GN";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.063284,0.042016,0.039453,0.047470,0.077210", \
				        "0.108242,0.087360,0.084698,0.091887,0.120601", \
				        "0.145199,0.123275,0.120017,0.125729,0.153805", \
				        "0.204818,0.180526,0.175210,0.180668,0.207521", \
				        "0.301879,0.270103,0.262833,0.265696,0.291789");
			}
			rise_constraint(Setup) {
				values ("0.047175,0.049452,0.066339,0.110538,0.211036", \
				        "0.075941,0.074923,0.087171,0.120661,0.203714", \
				        "0.089431,0.087185,0.098938,0.130700,0.210735", \
				        "0.097865,0.093422,0.105825,0.140339,0.231064", \
				        "0.087748,0.082872,0.093181,0.131241,0.239276");
			}
		}

		internal_power () {

			when      	: "GN & Q";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000033,0.000023,0.000015,0.000010,0.000007,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "GN & !Q";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000021,0.000017,0.000013,0.000010,0.000008,0.000006,0.000002");
			}

		}
	}

	pin (GN) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000871;
		fall_capacitance	: 0.000827;
		rise_capacitance	: 0.000916;
		fall_capacitance_range		(0.000697, 0.000944);
		rise_capacitance_range		(0.000723, 0.001006);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.082817;

		internal_power () {

			when      	: "!D & !Q";

			power(Hidden_Power_Clk) {
				values ("0.002688,0.003172,0.004117,0.006309,0.011027");
			}

		}

		internal_power () {

			when      	: "D & Q";

			power(Hidden_Power_Clk) {
				values ("0.002634,0.003124,0.004074,0.006262,0.010977");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "D";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.087125,0.092206,0.100869,0.115278,0.139288,0.180650", \
				        "0.090805,0.095894,0.104395,0.118917,0.142879,0.184254", \
				        "0.097239,0.102308,0.110982,0.125359,0.149276,0.190641", \
				        "0.109319,0.114398,0.123009,0.137390,0.161231,0.202526", \
				        "0.130939,0.136193,0.145271,0.160007,0.184202,0.225632", \
				        "0.165140,0.170897,0.181461,0.197348,0.222941,0.265555", \
				        "0.223688,0.230149,0.240775,0.259373,0.287216,0.332341", \
				        "0.321958,0.329470,0.341810,0.363469,0.394371,0.443736");
			}
			cell_rise(Timing_X1) {
				values ("0.053549,0.059237,0.069743,0.089462,0.127658,0.203283", \
				        "0.056146,0.061833,0.072259,0.091823,0.130049,0.205650", \
				        "0.060955,0.066619,0.077007,0.096605,0.134706,0.210330", \
				        "0.069415,0.075143,0.085811,0.105497,0.143256,0.218866", \
				        "0.080717,0.086664,0.097138,0.116830,0.155219,0.230799", \
				        "0.090267,0.096826,0.108580,0.128885,0.166738,0.242206", \
				        "0.092140,0.099856,0.112799,0.135149,0.173879,0.249401", \
				        "0.071118,0.080260,0.095862,0.121313,0.163667,0.240464");
			}
			fall_transition(Timing_X1) {
				values ("0.013952,0.016346,0.020775,0.028906,0.043845,0.073391", \
				        "0.013958,0.016356,0.020762,0.028876,0.043892,0.073396", \
				        "0.013953,0.016354,0.020762,0.028905,0.043872,0.073376", \
				        "0.013968,0.016370,0.020812,0.028740,0.043386,0.073189", \
				        "0.015049,0.017403,0.021736,0.029475,0.043857,0.073395", \
				        "0.017497,0.019943,0.024393,0.032293,0.046344,0.075032", \
				        "0.021292,0.023883,0.028636,0.036700,0.051010,0.078880", \
				        "0.027523,0.030428,0.035528,0.043994,0.058635,0.085817");
			}
			rise_transition(Timing_X1) {
				values ("0.014265,0.018313,0.026582,0.043640,0.078883,0.150138", \
				        "0.014280,0.018325,0.026575,0.043611,0.078828,0.150170", \
				        "0.014155,0.018230,0.026540,0.043620,0.078790,0.150163", \
				        "0.014528,0.018549,0.026747,0.043704,0.078832,0.150176", \
				        "0.015571,0.019469,0.027440,0.044052,0.079058,0.150191", \
				        "0.017955,0.021748,0.029282,0.045175,0.079335,0.150371", \
				        "0.022115,0.026304,0.033773,0.048368,0.080964,0.151081", \
				        "0.028073,0.033139,0.041927,0.056390,0.085617,0.154010");
			}
		}

		timing () {

			related_pin	   : "GN";
			timing_type	   : falling_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.100302,0.105408,0.114233,0.129208,0.153610,0.195478", \
				        "0.104337,0.109435,0.118263,0.133302,0.157674,0.199500", \
				        "0.112253,0.117360,0.126183,0.141092,0.165488,0.207265", \
				        "0.124138,0.129237,0.138069,0.152993,0.177414,0.218860", \
				        "0.140319,0.145431,0.154256,0.169257,0.193889,0.235476", \
				        "0.164587,0.169681,0.178542,0.193594,0.218501,0.260433", \
				        "0.203159,0.208329,0.217283,0.232376,0.257385,0.299379", \
				        "0.268272,0.273431,0.282375,0.297555,0.322319,0.365072");
			}
			cell_rise(Timing_X1) {
				values ("0.072042,0.077719,0.088225,0.108304,0.146606,0.222246", \
				        "0.075890,0.081576,0.092098,0.112288,0.150531,0.226183", \
				        "0.083882,0.089566,0.100085,0.120223,0.158522,0.234154", \
				        "0.097099,0.102759,0.113251,0.133346,0.171716,0.247360", \
				        "0.116389,0.122062,0.132547,0.152569,0.191105,0.266827", \
				        "0.145722,0.151414,0.161903,0.181957,0.220410,0.296165", \
				        "0.192717,0.198524,0.209090,0.229297,0.267230,0.342971", \
				        "0.268956,0.275192,0.286115,0.306274,0.345073,0.419891");
			}
			fall_transition(Timing_X1) {
				values ("0.013990,0.016476,0.021205,0.029634,0.044262,0.073709", \
				        "0.013998,0.016477,0.021213,0.029630,0.044256,0.073695", \
				        "0.013992,0.016477,0.021205,0.029627,0.044257,0.073622", \
				        "0.014003,0.016485,0.021219,0.029638,0.044292,0.073648", \
				        "0.013976,0.016459,0.021184,0.029620,0.044252,0.073725", \
				        "0.013982,0.016497,0.021277,0.029734,0.044352,0.073767", \
				        "0.014075,0.016639,0.021488,0.030017,0.044649,0.073987", \
				        "0.013957,0.016556,0.021467,0.030136,0.044913,0.074455");
			}
			rise_transition(Timing_X1) {
				values ("0.014327,0.018396,0.026920,0.044196,0.078846,0.150120", \
				        "0.014300,0.018382,0.026936,0.044199,0.078837,0.150115", \
				        "0.014291,0.018381,0.026936,0.044199,0.078854,0.150153", \
				        "0.014269,0.018346,0.026900,0.044165,0.078855,0.150115", \
				        "0.014455,0.018495,0.026980,0.044195,0.078873,0.150146", \
				        "0.014683,0.018677,0.027119,0.044280,0.078885,0.150154", \
				        "0.015406,0.019258,0.027513,0.044493,0.078986,0.150162", \
				        "0.017376,0.020956,0.028657,0.045090,0.079214,0.150244");
			}
		}

		internal_power () {

			related_pin	         : "D";
			fall_power(Power_X1) {
				values ("0.004572,0.004314,0.003808,0.002835,0.000897,-0.002978", \
				        "0.004561,0.004303,0.003796,0.002824,0.000882,-0.002992", \
				        "0.004546,0.004288,0.003786,0.002810,0.000868,-0.003008", \
				        "0.004551,0.004293,0.003792,0.002811,0.000860,-0.003016", \
				        "0.004682,0.004419,0.003918,0.002934,0.000973,-0.002902", \
				        "0.005191,0.004917,0.004409,0.003406,0.001445,-0.002439", \
				        "0.006607,0.006318,0.005785,0.004765,0.002796,-0.001100", \
				        "0.009767,0.009458,0.008890,0.007831,0.005818,0.001897");
			}
			rise_power(Power_X1) {
				values ("0.004525,0.004765,0.005244,0.006214,0.008161,0.012043", \
				        "0.004512,0.004752,0.005234,0.006200,0.008150,0.012032", \
				        "0.004493,0.004741,0.005211,0.006175,0.008126,0.012009", \
				        "0.004506,0.004752,0.005243,0.006209,0.008123,0.012004", \
				        "0.004658,0.004892,0.005345,0.006303,0.008257,0.012135", \
				        "0.005114,0.005345,0.005828,0.006773,0.008694,0.012561", \
				        "0.006465,0.006687,0.007142,0.008096,0.010002,0.013851", \
				        "0.009579,0.009789,0.010222,0.011148,0.013036,0.016857");
			}
		}

		internal_power () {

			related_pin	         : "GN";
			fall_power(Power_X1) {
				values ("0.007031,0.006772,0.006275,0.005299,0.003348,-0.000524", \
				        "0.007047,0.006788,0.006290,0.005316,0.003362,-0.000509", \
				        "0.007134,0.006876,0.006378,0.005397,0.003448,-0.000421", \
				        "0.007375,0.007115,0.006617,0.005642,0.003697,-0.000199", \
				        "0.007914,0.007657,0.007160,0.006183,0.004247,0.000369", \
				        "0.009196,0.008937,0.008439,0.007464,0.005528,0.001671", \
				        "0.012090,0.011833,0.011333,0.010354,0.008411,0.004547", \
				        "0.018242,0.017984,0.017486,0.016510,0.014565,0.010706");
			}
			rise_power(Power_X1) {
				values ("0.007790,0.008029,0.008512,0.009480,0.011421,0.015299", \
				        "0.007807,0.008044,0.008528,0.009501,0.011428,0.015308", \
				        "0.007894,0.008134,0.008616,0.009585,0.011528,0.015400", \
				        "0.008124,0.008363,0.008845,0.009811,0.011766,0.015652", \
				        "0.008699,0.008936,0.009417,0.010380,0.012337,0.016228", \
				        "0.010031,0.010266,0.010743,0.011708,0.013642,0.017543", \
				        "0.013013,0.013248,0.013721,0.014684,0.016592,0.020476", \
				        "0.019365,0.019593,0.020059,0.021003,0.022967,0.026799");
			}
		}
	}

}


/******************************************************************************************
 Module          	: DLL_X2
 Cell Description	: Low enable Latch with drive strength X2
*******************************************************************************************/

cell (DLL_X2) {

	latch ("IQ" , "IQN") {
		data_in            	: "D";
		enable             	: "!GN";
	}

	area               	: 2.660000;

	cell_leakage_power 	: 28702.810000;


	pin (D) {

		direction		: input;
		capacitance		: 0.000729;
		fall_capacitance	: 0.000710;
		rise_capacitance	: 0.000748;
		fall_capacitance_range		(0.000669, 0.000722);
		rise_capacitance_range		(0.000732, 0.000755);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "GN";
			timing_type	   : hold_rising;
			fall_constraint(Hold) {
				values ("-0.054610,-0.035694,-0.033865,-0.041776,-0.070886", \
				        "-0.099320,-0.080659,-0.078651,-0.085678,-0.114094", \
				        "-0.135310,-0.116228,-0.113727,-0.119890,-0.147065", \
				        "-0.194320,-0.174127,-0.170317,-0.175627,-0.202363", \
				        "-0.292220,-0.267642,-0.262423,-0.266393,-0.291889");
			}
			rise_constraint(Hold) {
				values ("-0.034306,-0.037306,-0.048960,-0.073730,-0.123584", \
				        "-0.061984,-0.060980,-0.069568,-0.091991,-0.139610", \
				        "-0.073838,-0.070889,-0.079217,-0.100622,-0.147488", \
				        "-0.079280,-0.076359,-0.084849,-0.106296,-0.153025", \
				        "-0.065479,-0.062622,-0.071525,-0.095390,-0.145544");
			}
		}

		timing () {

			related_pin	   : "GN";
			timing_type	   : setup_rising;
			fall_constraint(Setup) {
				values ("0.067528,0.046552,0.044034,0.051813,0.081736", \
				        "0.112858,0.092263,0.089702,0.096837,0.125880", \
				        "0.150490,0.129196,0.126542,0.132181,0.159851", \
				        "0.211530,0.188535,0.183720,0.188452,0.215411", \
				        "0.311224,0.281071,0.273911,0.277136,0.304737");
			}
			rise_constraint(Setup) {
				values ("0.048779,0.051561,0.068962,0.114947,0.217451", \
				        "0.077973,0.077419,0.090564,0.125024,0.207990", \
				        "0.092315,0.090589,0.103459,0.135835,0.218834", \
				        "0.101998,0.098321,0.111200,0.146430,0.235311", \
				        "0.093323,0.088157,0.099210,0.138478,0.247619");
			}
		}

		internal_power () {

			when      	: "GN & Q";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000033,0.000023,0.000015,0.000010,0.000007,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "GN & !Q";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000021,0.000017,0.000013,0.000010,0.000008,0.000006,0.000002");
			}

		}
	}

	pin (GN) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000886;
		fall_capacitance	: 0.000842;
		rise_capacitance	: 0.000930;
		fall_capacitance_range		(0.000712, 0.000959);
		rise_capacitance_range		(0.000737, 0.001021);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.086724;

		internal_power () {

			when      	: "!D & !Q";

			power(Hidden_Power_Clk) {
				values ("0.002674,0.003168,0.004114,0.006306,0.011026");
			}

		}

		internal_power () {

			when      	: "D & Q";

			power(Hidden_Power_Clk) {
				values ("0.002626,0.003121,0.004073,0.006260,0.010975");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "D";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.086486,0.094938,0.103912,0.118497,0.142659,0.183362", \
				        "0.090179,0.098625,0.107506,0.122234,0.146293,0.187003", \
				        "0.096614,0.105062,0.114071,0.128640,0.152658,0.193372", \
				        "0.108661,0.117099,0.126056,0.140726,0.164552,0.205191", \
				        "0.130615,0.139325,0.148647,0.163608,0.187759,0.228622", \
				        "0.165277,0.174784,0.185605,0.201542,0.227322,0.269439", \
				        "0.224476,0.235096,0.245975,0.264815,0.292213,0.336752", \
				        "0.323772,0.335993,0.348564,0.370239,0.401341,0.450000");
			}
			cell_rise(Timing_X2) {
				values ("0.050110,0.059175,0.069668,0.088986,0.125949,0.198973", \
				        "0.052695,0.061750,0.072187,0.091474,0.128277,0.201301", \
				        "0.057521,0.066551,0.076982,0.096174,0.132975,0.205998", \
				        "0.066202,0.075361,0.086011,0.105285,0.141783,0.214790", \
				        "0.077840,0.087435,0.097964,0.117229,0.154022,0.226979", \
				        "0.087637,0.098345,0.110376,0.130312,0.167129,0.239941", \
				        "0.089978,0.102430,0.115686,0.138076,0.175660,0.248500", \
				        "0.070004,0.084504,0.100293,0.125771,0.167234,0.241365");
			}
			fall_transition(Timing_X2) {
				values ("0.012650,0.016350,0.020745,0.028709,0.043288,0.071462", \
				        "0.012661,0.016341,0.020753,0.028775,0.043233,0.071501", \
				        "0.012651,0.016347,0.020738,0.028718,0.043254,0.071443", \
				        "0.012660,0.016357,0.020762,0.028547,0.042809,0.071267", \
				        "0.013723,0.017344,0.021610,0.029209,0.043293,0.071615", \
				        "0.016219,0.019984,0.024407,0.032167,0.046114,0.073484", \
				        "0.020142,0.024140,0.028784,0.036672,0.050624,0.077233", \
				        "0.026518,0.030973,0.035970,0.044208,0.058491,0.084500");
			}
			rise_transition(Timing_X2) {
				values ("0.010935,0.016891,0.024813,0.041038,0.074815,0.143556", \
				        "0.010935,0.016884,0.024793,0.041050,0.074886,0.143613", \
				        "0.010803,0.016802,0.024743,0.041053,0.074864,0.143602", \
				        "0.011189,0.017111,0.024935,0.041109,0.074886,0.143615", \
				        "0.012276,0.018110,0.025743,0.041574,0.075054,0.143662", \
				        "0.014594,0.020511,0.027799,0.042916,0.075433,0.143861", \
				        "0.018314,0.025042,0.032531,0.046440,0.077313,0.144572", \
				        "0.023965,0.031741,0.040648,0.054992,0.082524,0.147543");
			}
		}

		timing () {

			related_pin	   : "GN";
			timing_type	   : falling_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.099578,0.108044,0.117150,0.132331,0.156788,0.198007", \
				        "0.103581,0.112057,0.121155,0.136335,0.160829,0.201968", \
				        "0.111547,0.120024,0.129119,0.144315,0.168585,0.209737", \
				        "0.123360,0.131831,0.140929,0.156138,0.180639,0.221731", \
				        "0.139662,0.148138,0.157238,0.172435,0.197116,0.238011", \
				        "0.164057,0.172550,0.181665,0.196893,0.221875,0.263122", \
				        "0.202654,0.211195,0.220395,0.235737,0.260740,0.302001", \
				        "0.267693,0.276199,0.285424,0.300822,0.325598,0.367691");
			}
			cell_rise(Timing_X2) {
				values ("0.068591,0.077642,0.088125,0.107867,0.145021,0.218028", \
				        "0.072472,0.081528,0.092016,0.111725,0.148898,0.221935", \
				        "0.080535,0.089585,0.100067,0.119740,0.156948,0.229906", \
				        "0.093655,0.102673,0.113127,0.132787,0.170064,0.243054", \
				        "0.113100,0.122155,0.132620,0.152231,0.189470,0.262437", \
				        "0.142541,0.151685,0.162160,0.181738,0.218823,0.292164", \
				        "0.189513,0.198911,0.209492,0.229372,0.266353,0.339346", \
				        "0.266201,0.276490,0.287532,0.307333,0.345114,0.417257");
			}
			fall_transition(Timing_X2) {
				values ("0.012681,0.016424,0.021104,0.029433,0.043703,0.071751", \
				        "0.012668,0.016439,0.021088,0.029448,0.043662,0.071721", \
				        "0.012677,0.016441,0.021094,0.029435,0.043668,0.071748", \
				        "0.012673,0.016441,0.021097,0.029450,0.043729,0.071803", \
				        "0.012644,0.016410,0.021072,0.029397,0.043677,0.071773", \
				        "0.012614,0.016440,0.021151,0.029513,0.043742,0.071789", \
				        "0.012637,0.016536,0.021310,0.029781,0.044031,0.072151", \
				        "0.012506,0.016468,0.021334,0.029911,0.044286,0.072499");
			}
			rise_transition(Timing_X2) {
				values ("0.010989,0.016950,0.025026,0.041593,0.074888,0.143583", \
				        "0.010929,0.016911,0.025026,0.041615,0.074886,0.143575", \
				        "0.010995,0.016946,0.025032,0.041603,0.074891,0.143548", \
				        "0.010907,0.016890,0.024988,0.041595,0.074896,0.143589", \
				        "0.011134,0.017049,0.025104,0.041630,0.074902,0.143588", \
				        "0.011439,0.017266,0.025254,0.041729,0.074947,0.143544", \
				        "0.012303,0.017939,0.025701,0.041973,0.075050,0.143619", \
				        "0.014316,0.019805,0.027046,0.042687,0.075311,0.143668");
			}
		}

		internal_power () {

			related_pin	         : "D";
			fall_power(Power_X2) {
				values ("0.005302,0.004478,0.003454,0.001484,-0.002394,-0.010151", \
				        "0.005291,0.004467,0.003441,0.001477,-0.002407,-0.010166", \
				        "0.005278,0.004453,0.003431,0.001461,-0.002426,-0.010181", \
				        "0.005282,0.004457,0.003441,0.001449,-0.002446,-0.010204", \
				        "0.005450,0.004605,0.003575,0.001592,-0.002320,-0.010084", \
				        "0.006055,0.005171,0.004126,0.002087,-0.001822,-0.009599", \
				        "0.007631,0.006695,0.005581,0.003509,-0.000466,-0.008274", \
				        "0.011065,0.010065,0.008873,0.006720,0.002646,-0.005228");
			}
			rise_power(Power_X2) {
				values ("0.004935,0.005644,0.006607,0.008553,0.012429,0.020187", \
				        "0.004924,0.005632,0.006596,0.008539,0.012411,0.020168", \
				        "0.004904,0.005614,0.006575,0.008511,0.012388,0.020146", \
				        "0.004941,0.005644,0.006616,0.008545,0.012390,0.020146", \
				        "0.005126,0.005817,0.006742,0.008654,0.012510,0.020256", \
				        "0.005646,0.006315,0.007263,0.009150,0.012986,0.020711", \
				        "0.007123,0.007751,0.008658,0.010538,0.014334,0.022018", \
				        "0.010491,0.011053,0.011901,0.013728,0.017474,0.025093");
			}
		}

		internal_power () {

			related_pin	         : "GN";
			fall_power(Power_X2) {
				values ("0.007748,0.006924,0.005906,0.003935,0.000036,-0.007719", \
				        "0.007764,0.006940,0.005918,0.003948,0.000050,-0.007705", \
				        "0.007851,0.007029,0.006008,0.004039,0.000134,-0.007616", \
				        "0.008090,0.007268,0.006247,0.004278,0.000388,-0.007383", \
				        "0.008634,0.007813,0.006795,0.004824,0.000949,-0.006828", \
				        "0.009921,0.009098,0.008078,0.006108,0.002220,-0.005520", \
				        "0.012808,0.011985,0.010968,0.008998,0.005105,-0.002635", \
				        "0.018959,0.018137,0.017119,0.015150,0.011256,0.003522");
			}
			rise_power(Power_X2) {
				values ("0.008194,0.008902,0.009861,0.011805,0.015682,0.023436", \
				        "0.008209,0.008916,0.009876,0.011814,0.015687,0.023441", \
				        "0.008299,0.009004,0.009962,0.011897,0.015777,0.023536", \
				        "0.008533,0.009237,0.010191,0.012124,0.016017,0.023778", \
				        "0.009127,0.009828,0.010781,0.012706,0.016585,0.024341", \
				        "0.010473,0.011170,0.012117,0.014036,0.017886,0.025673", \
				        "0.013468,0.014153,0.015094,0.017020,0.020864,0.028605", \
				        "0.019908,0.020573,0.021496,0.023382,0.027263,0.034944");
			}
		}
	}

}


/******************************************************************************************
 Module          	: FA_X1
 Cell Description	: Combinational cell (FA_X1) with drive strength X1
*******************************************************************************************/

cell (FA_X1) {

	area               	: 4.788000;

	cell_leakage_power 	: 35810.498750;

	leakage_power () {
		when      	: "!A & !B & !CI";
		value      	: 14261.110000;
	}
	leakage_power () {
		when      	: "A & !B & !CI";
		value      	: 30635.770000;
	}
	leakage_power () {
		when      	: "!A & !B & CI";
		value      	: 26422.640000;
	}
	leakage_power () {
		when      	: "A & !B & CI";
		value      	: 40346.450000;
	}
	leakage_power () {
		when      	: "!A & B & !CI";
		value      	: 31851.900000;
	}
	leakage_power () {
		when      	: "A & B & !CI";
		value      	: 51444.850000;
	}
	leakage_power () {
		when      	: "!A & B & CI";
		value      	: 33695.280000;
	}
	leakage_power () {
		when      	: "A & B & CI";
		value      	: 57825.990000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002877;
		fall_capacitance	: 0.002819;
		rise_capacitance	: 0.002935;
		fall_capacitance_range		(0.002445, 0.002959);
		rise_capacitance_range		(0.002559, 0.003281);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.003034;
		fall_capacitance	: 0.003002;
		rise_capacitance	: 0.003066;
		fall_capacitance_range		(0.002674, 0.003118);
		rise_capacitance_range		(0.002721, 0.003233);
		max_transition		: 0.960000;
	}

	pin (CI) {

		direction		: input;
		capacitance		: 0.002161;
		fall_capacitance	: 0.002137;
		rise_capacitance	: 0.002186;
		fall_capacitance_range		(0.001878, 0.002253);
		rise_capacitance_range		(0.001928, 0.002549);
		max_transition		: 0.960000;
	}

	pin (CO) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "((A & B) | (CI & (A | B)))";

		timing () {

			related_pin	   : "A";
			when	           : "!B & CI";
			sdf_cond	   : "(B == 1'b0) && (CI == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.127671,0.132705,0.141680,0.157387,0.183947,0.229098", \
				        "0.130499,0.135515,0.144469,0.160103,0.186599,0.231718", \
				        "0.136754,0.141755,0.150619,0.166303,0.192717,0.237782", \
				        "0.150564,0.155565,0.164431,0.180044,0.206474,0.251442", \
				        "0.180300,0.185286,0.194513,0.209901,0.236019,0.280868", \
				        "0.233912,0.239260,0.248959,0.265266,0.292296,0.337597", \
				        "0.312267,0.318384,0.329004,0.347671,0.377200,0.425242", \
				        "0.433842,0.440940,0.453251,0.474569,0.508457,0.561349");
			}
			cell_rise(Timing_X1) {
				values ("0.077133,0.082919,0.093777,0.114155,0.152735,0.228551", \
				        "0.080428,0.086207,0.097070,0.117301,0.155890,0.231765", \
				        "0.086009,0.091762,0.102685,0.123053,0.161668,0.237543", \
				        "0.095423,0.101173,0.112019,0.132367,0.170807,0.246598", \
				        "0.108189,0.114208,0.125390,0.146204,0.184758,0.260619", \
				        "0.121382,0.127712,0.139759,0.161416,0.200918,0.276933", \
				        "0.127178,0.134297,0.147331,0.170718,0.212578,0.289567", \
				        "0.107429,0.115932,0.131246,0.158253,0.204141,0.285778");
			}
			fall_transition(Timing_X1) {
				values ("0.023786,0.026132,0.030630,0.039075,0.054292,0.083996", \
				        "0.023735,0.026076,0.030582,0.038963,0.054207,0.083938", \
				        "0.023667,0.026006,0.030500,0.038925,0.054077,0.083884", \
				        "0.023591,0.025922,0.030381,0.038739,0.053933,0.083691", \
				        "0.023658,0.025970,0.030399,0.038654,0.053724,0.083547", \
				        "0.027282,0.029450,0.033583,0.041457,0.055868,0.084475", \
				        "0.033882,0.036149,0.040380,0.048072,0.061946,0.089258", \
				        "0.043172,0.045651,0.050205,0.058246,0.072260,0.098242");
			}
			rise_transition(Timing_X1) {
				values ("0.025287,0.029273,0.037380,0.053998,0.088342,0.159337", \
				        "0.025226,0.029222,0.037333,0.053967,0.088342,0.159339", \
				        "0.025088,0.029108,0.037236,0.053893,0.088238,0.159344", \
				        "0.025209,0.029215,0.037356,0.053923,0.088291,0.159329", \
				        "0.026604,0.030673,0.038682,0.054948,0.088804,0.159412", \
				        "0.028623,0.032975,0.041363,0.057355,0.090218,0.159976", \
				        "0.033767,0.037871,0.046144,0.062679,0.094597,0.161723", \
				        "0.042942,0.047710,0.056420,0.072418,0.104343,0.169221");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & !CI";
			sdf_cond	   : "(B == 1'b1) && (CI == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.111100,0.116286,0.125748,0.142654,0.171419,0.219543", \
				        "0.114829,0.120015,0.129443,0.146236,0.174935,0.223016", \
				        "0.121987,0.127151,0.136654,0.153393,0.181895,0.229856", \
				        "0.135245,0.140375,0.149839,0.166672,0.195037,0.242821", \
				        "0.159234,0.164311,0.173637,0.190150,0.218304,0.265914", \
				        "0.194111,0.199323,0.208847,0.225587,0.254925,0.304550", \
				        "0.250969,0.256729,0.267159,0.285173,0.315338,0.367471", \
				        "0.345867,0.352575,0.364403,0.385322,0.419354,0.475112");
			}
			cell_rise(Timing_X1) {
				values ("0.080214,0.085843,0.096529,0.116943,0.155754,0.232020", \
				        "0.083200,0.088822,0.099502,0.119875,0.158723,0.234926", \
				        "0.089415,0.095017,0.105729,0.126075,0.164725,0.240978", \
				        "0.102501,0.108040,0.118507,0.138521,0.176976,0.253237", \
				        "0.122407,0.128051,0.138711,0.158867,0.197350,0.273161", \
				        "0.143709,0.149763,0.161099,0.181529,0.220133,0.295779", \
				        "0.160150,0.167212,0.179869,0.201827,0.241052,0.316584", \
				        "0.158672,0.167102,0.182188,0.208196,0.250837,0.327445");
			}
			fall_transition(Timing_X1) {
				values ("0.023334,0.026310,0.031936,0.041862,0.058514,0.088338", \
				        "0.023316,0.026288,0.031884,0.041789,0.058457,0.088321", \
				        "0.023248,0.026200,0.031757,0.041597,0.058263,0.088130", \
				        "0.023043,0.025938,0.031381,0.041117,0.057802,0.087865", \
				        "0.023332,0.026072,0.031321,0.040822,0.057502,0.087616", \
				        "0.025138,0.027637,0.032574,0.042523,0.060406,0.090857", \
				        "0.029959,0.032466,0.037208,0.046186,0.063761,0.096567", \
				        "0.038290,0.041073,0.046235,0.055635,0.072494,0.105044");
			}
			rise_transition(Timing_X1) {
				values ("0.024665,0.028765,0.037108,0.054097,0.088956,0.160055", \
				        "0.024614,0.028719,0.037075,0.054145,0.088934,0.160031", \
				        "0.024539,0.028637,0.036997,0.054052,0.088900,0.160039", \
				        "0.024410,0.028487,0.036817,0.053871,0.088824,0.159996", \
				        "0.025477,0.029377,0.037465,0.054152,0.088636,0.159837", \
				        "0.028546,0.032160,0.039654,0.055651,0.089384,0.160000", \
				        "0.034616,0.038262,0.045252,0.059668,0.091373,0.160685", \
				        "0.044036,0.048446,0.056419,0.070259,0.098215,0.163678");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & CI";
			sdf_cond	   : "(A == 1'b0) && (CI == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.137989,0.143010,0.151975,0.167625,0.194133,0.239260", \
				        "0.141679,0.146683,0.155621,0.171127,0.197600,0.242709", \
				        "0.148324,0.153324,0.162262,0.177870,0.204289,0.249392", \
				        "0.160313,0.165312,0.174256,0.189920,0.216438,0.261517", \
				        "0.183763,0.188738,0.197960,0.213444,0.239725,0.284751", \
				        "0.225976,0.231262,0.240885,0.257058,0.284138,0.329560", \
				        "0.294363,0.300172,0.310307,0.328073,0.356933,0.404594", \
				        "0.406305,0.412791,0.423935,0.444043,0.475929,0.527498");
			}
			cell_rise(Timing_X1) {
				values ("0.085446,0.091014,0.101539,0.121667,0.160138,0.236122", \
				        "0.088634,0.094201,0.104775,0.124764,0.163256,0.239251", \
				        "0.094045,0.099612,0.110238,0.130506,0.169011,0.245047", \
				        "0.103752,0.109311,0.119852,0.139897,0.178282,0.254251", \
				        "0.118934,0.124605,0.135305,0.155505,0.193888,0.269821", \
				        "0.136361,0.142376,0.153590,0.174127,0.212871,0.288714", \
				        "0.148862,0.155706,0.168114,0.189995,0.229583,0.305469", \
				        "0.142521,0.150690,0.165493,0.190913,0.233565,0.310984");
			}
			fall_transition(Timing_X1) {
				values ("0.023727,0.026066,0.030565,0.038975,0.054247,0.083941", \
				        "0.023703,0.026045,0.030537,0.038948,0.054185,0.083919", \
				        "0.023690,0.026027,0.030498,0.038926,0.054213,0.083939", \
				        "0.023668,0.026008,0.030490,0.038897,0.054132,0.083871", \
				        "0.023711,0.026039,0.030505,0.038791,0.053965,0.083841", \
				        "0.026178,0.028455,0.032740,0.040914,0.055552,0.084558", \
				        "0.030423,0.032764,0.037192,0.045346,0.060089,0.088355", \
				        "0.037231,0.039675,0.044323,0.052679,0.067742,0.095583");
			}
			rise_transition(Timing_X1) {
				values ("0.024322,0.028365,0.036607,0.053466,0.088327,0.159663", \
				        "0.024328,0.028374,0.036597,0.053493,0.088325,0.159676", \
				        "0.024314,0.028366,0.036602,0.053488,0.088331,0.159676", \
				        "0.024355,0.028397,0.036644,0.053528,0.088301,0.159671", \
				        "0.025211,0.029175,0.037263,0.053916,0.088441,0.159719", \
				        "0.027541,0.031358,0.039109,0.055225,0.089158,0.159877", \
				        "0.032656,0.036485,0.043906,0.058943,0.091173,0.160565", \
				        "0.040830,0.045329,0.053442,0.068069,0.097510,0.163745");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & !CI";
			sdf_cond	   : "(A == 1'b1) && (CI == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.134566,0.139437,0.148139,0.163451,0.189533,0.234277", \
				        "0.138398,0.143274,0.151953,0.167134,0.193184,0.237926", \
				        "0.145412,0.150293,0.159068,0.174197,0.200093,0.244831", \
				        "0.157585,0.162453,0.171220,0.186599,0.212664,0.257409", \
				        "0.180183,0.185054,0.193839,0.209137,0.235246,0.280006", \
				        "0.217892,0.223119,0.232589,0.248704,0.275919,0.321632", \
				        "0.279928,0.285693,0.296219,0.313775,0.343124,0.391639", \
				        "0.386342,0.392824,0.404321,0.424546,0.457193,0.510236");
			}
			cell_rise(Timing_X1) {
				values ("0.083033,0.088658,0.099320,0.119717,0.158569,0.234777", \
				        "0.085744,0.091362,0.102115,0.122365,0.161188,0.237403", \
				        "0.090743,0.096348,0.107114,0.127588,0.166321,0.242564", \
				        "0.100475,0.106050,0.116688,0.136797,0.175490,0.251706", \
				        "0.116152,0.121784,0.132369,0.152632,0.191149,0.267256", \
				        "0.134847,0.140740,0.151727,0.172115,0.210738,0.286487", \
				        "0.149695,0.156339,0.168429,0.189709,0.228871,0.304560", \
				        "0.146751,0.154592,0.168532,0.192973,0.234307,0.311066");
			}
			fall_transition(Timing_X1) {
				values ("0.022593,0.024939,0.029404,0.037877,0.053439,0.083249", \
				        "0.022595,0.024936,0.029404,0.037883,0.053446,0.083266", \
				        "0.022594,0.024937,0.029391,0.037842,0.053444,0.083245", \
				        "0.022596,0.024942,0.029400,0.037868,0.053440,0.083246", \
				        "0.022806,0.025132,0.029569,0.037899,0.053494,0.083312", \
				        "0.025541,0.027867,0.032278,0.040619,0.055791,0.084791", \
				        "0.029984,0.032408,0.036978,0.045561,0.061018,0.089631", \
				        "0.037088,0.039672,0.044508,0.053448,0.069500,0.098107");
			}
			rise_transition(Timing_X1) {
				values ("0.024633,0.028732,0.037096,0.054120,0.088940,0.160036", \
				        "0.024596,0.028697,0.037033,0.054056,0.088929,0.160042", \
				        "0.024551,0.028646,0.036982,0.054036,0.088934,0.160053", \
				        "0.024505,0.028590,0.036944,0.054019,0.088912,0.160057", \
				        "0.025090,0.029067,0.037214,0.054025,0.088765,0.159980", \
				        "0.027027,0.030829,0.038632,0.054968,0.089018,0.159877", \
				        "0.031530,0.035237,0.042545,0.057838,0.090533,0.160420", \
				        "0.039029,0.043244,0.050977,0.065361,0.095410,0.163065");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "!A & B";
			sdf_cond	   : "(A == 1'b0) && (B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.092723,0.098113,0.108102,0.126172,0.156662,0.206054", \
				        "0.095826,0.101205,0.111209,0.129236,0.159750,0.209145", \
				        "0.102515,0.107900,0.117935,0.136045,0.166547,0.215941", \
				        "0.117121,0.122512,0.132528,0.150547,0.180996,0.230437", \
				        "0.146075,0.151509,0.161647,0.179746,0.210389,0.259944", \
				        "0.189649,0.195710,0.206942,0.226740,0.259556,0.310990", \
				        "0.254463,0.261351,0.274128,0.296897,0.334373,0.390714", \
				        "0.357249,0.365494,0.380521,0.407424,0.452253,0.518274");
			}
			cell_rise(Timing_X1) {
				values ("0.074567,0.080140,0.090708,0.110668,0.149192,0.225222", \
				        "0.077681,0.083251,0.093817,0.113773,0.152234,0.228254", \
				        "0.083965,0.089534,0.100162,0.120202,0.158363,0.234385", \
				        "0.096600,0.102139,0.112645,0.132461,0.170765,0.246733", \
				        "0.113939,0.119589,0.130304,0.150513,0.188821,0.264600", \
				        "0.131603,0.137664,0.148867,0.169359,0.207861,0.283536", \
				        "0.142258,0.149470,0.162236,0.184438,0.224007,0.299913", \
				        "0.128669,0.137384,0.153019,0.180025,0.224205,0.302430");
			}
			fall_transition(Timing_X1) {
				values ("0.024317,0.027557,0.033786,0.044546,0.061435,0.090151", \
				        "0.024316,0.027554,0.033786,0.044553,0.061419,0.090140", \
				        "0.024317,0.027556,0.033780,0.044537,0.061403,0.090162", \
				        "0.024274,0.027520,0.033745,0.044538,0.061518,0.090177", \
				        "0.025320,0.028415,0.034449,0.045130,0.061978,0.090427", \
				        "0.030294,0.033508,0.039665,0.050482,0.066724,0.093501", \
				        "0.037816,0.041437,0.048334,0.060242,0.077184,0.102082", \
				        "0.050107,0.054405,0.062562,0.076627,0.096123,0.119791");
			}
			rise_transition(Timing_X1) {
				values ("0.024332,0.028383,0.036656,0.053605,0.088262,0.159663", \
				        "0.024320,0.028384,0.036662,0.053573,0.088260,0.159664", \
				        "0.024311,0.028374,0.036651,0.053502,0.088247,0.159666", \
				        "0.024367,0.028421,0.036702,0.053634,0.088278,0.159673", \
				        "0.025471,0.029393,0.037481,0.054125,0.088540,0.159701", \
				        "0.028596,0.032201,0.039726,0.055749,0.089288,0.159995", \
				        "0.035272,0.038986,0.046063,0.060616,0.092063,0.161069", \
				        "0.045874,0.050495,0.058843,0.073360,0.101318,0.166305");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "A & !B";
			sdf_cond	   : "(A == 1'b1) && (B == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.107999,0.112871,0.121552,0.136888,0.162967,0.207714", \
				        "0.111112,0.115986,0.124679,0.139937,0.165989,0.210737", \
				        "0.117667,0.122541,0.131275,0.146558,0.172627,0.217381", \
				        "0.131838,0.136709,0.145443,0.160837,0.186907,0.231654", \
				        "0.161719,0.166544,0.175345,0.190515,0.216592,0.261376", \
				        "0.209820,0.215170,0.224770,0.240929,0.268099,0.313803", \
				        "0.279753,0.285849,0.296642,0.314932,0.344768,0.393209", \
				        "0.388413,0.395633,0.408235,0.430243,0.465112,0.519682");
			}
			cell_rise(Timing_X1) {
				values ("0.070373,0.076259,0.087217,0.107628,0.146191,0.222070", \
				        "0.073503,0.079389,0.090361,0.110640,0.149231,0.225083", \
				        "0.079843,0.085717,0.096690,0.116918,0.155372,0.231192", \
				        "0.091684,0.097563,0.108533,0.128862,0.167307,0.243053", \
				        "0.107413,0.113555,0.124865,0.145582,0.183992,0.259590", \
				        "0.123408,0.130278,0.142515,0.163993,0.202935,0.278441", \
				        "0.132710,0.140832,0.155141,0.179351,0.220279,0.296102", \
				        "0.120048,0.129566,0.146680,0.175960,0.223198,0.302363");
			}
			fall_transition(Timing_X1) {
				values ("0.022589,0.024928,0.029408,0.037923,0.053452,0.083249", \
				        "0.022589,0.024934,0.029409,0.037924,0.053436,0.083251", \
				        "0.022590,0.024933,0.029388,0.037911,0.053463,0.083245", \
				        "0.022573,0.024923,0.029389,0.037748,0.053334,0.083212", \
				        "0.022804,0.025116,0.029580,0.037981,0.053525,0.083358", \
				        "0.026880,0.029068,0.033281,0.041268,0.056197,0.084937", \
				        "0.033484,0.035799,0.040076,0.048010,0.062435,0.089847", \
				        "0.044051,0.046685,0.051516,0.060069,0.074837,0.101103");
			}
			rise_transition(Timing_X1) {
				values ("0.025949,0.029807,0.037755,0.054147,0.088390,0.159360", \
				        "0.025962,0.029820,0.037774,0.054137,0.088450,0.159332", \
				        "0.025956,0.029820,0.037781,0.054119,0.088367,0.159346", \
				        "0.026355,0.030158,0.038043,0.054366,0.088526,0.159354", \
				        "0.028611,0.032102,0.039560,0.055391,0.088876,0.159426", \
				        "0.033876,0.036978,0.043534,0.058118,0.090183,0.159786", \
				        "0.043039,0.046295,0.052686,0.065599,0.094526,0.161285", \
				        "0.056418,0.060141,0.067712,0.081627,0.107533,0.168055");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & CI";

			fall_power(Power_X1) {
				values ("0.004821,0.004803,0.004780,0.004777,0.004767,0.004757", \
				        "0.004809,0.004798,0.004778,0.004761,0.004756,0.004749", \
				        "0.004804,0.004786,0.004770,0.004758,0.004751,0.004742", \
				        "0.004824,0.004817,0.004787,0.004776,0.004765,0.004757", \
				        "0.004910,0.004886,0.004877,0.004860,0.004850,0.004840", \
				        "0.005225,0.005196,0.005175,0.005150,0.005128,0.005113", \
				        "0.005931,0.005900,0.005863,0.005826,0.005786,0.005753", \
				        "0.007444,0.007407,0.007343,0.007269,0.007205,0.007143");
			}
			rise_power(Power_X1) {
				values ("0.002998,0.002988,0.002970,0.002964,0.002957,0.002956", \
				        "0.002996,0.002985,0.002962,0.002955,0.002946,0.002946", \
				        "0.002991,0.002971,0.002955,0.002946,0.002945,0.002941", \
				        "0.002991,0.002962,0.002952,0.002943,0.002936,0.002935", \
				        "0.003019,0.003011,0.002987,0.002976,0.002960,0.002951", \
				        "0.003209,0.003192,0.003158,0.003149,0.003134,0.003124", \
				        "0.003759,0.003735,0.003706,0.003678,0.003652,0.003630", \
				        "0.005116,0.005091,0.005035,0.005009,0.004958,0.004921");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !CI";

			fall_power(Power_X1) {
				values ("0.004926,0.004911,0.004896,0.004882,0.004874,0.004864", \
				        "0.004920,0.004902,0.004883,0.004870,0.004862,0.004848", \
				        "0.004896,0.004887,0.004872,0.004853,0.004841,0.004832", \
				        "0.004884,0.004874,0.004856,0.004847,0.004832,0.004824", \
				        "0.004900,0.004884,0.004870,0.004860,0.004850,0.004839", \
				        "0.005049,0.005038,0.005015,0.004989,0.004976,0.004959", \
				        "0.005543,0.005517,0.005492,0.005464,0.005427,0.005408", \
				        "0.006817,0.006772,0.006731,0.006676,0.006628,0.006579");
			}
			rise_power(Power_X1) {
				values ("0.003328,0.003312,0.003287,0.003271,0.003258,0.003260", \
				        "0.003314,0.003308,0.003274,0.003266,0.003252,0.003250", \
				        "0.003323,0.003287,0.003279,0.003261,0.003246,0.003243", \
				        "0.003330,0.003308,0.003287,0.003263,0.003245,0.003242", \
				        "0.003412,0.003386,0.003367,0.003340,0.003329,0.003320", \
				        "0.003687,0.003656,0.003631,0.003601,0.003581,0.003564", \
				        "0.004340,0.004312,0.004285,0.004248,0.004212,0.004183", \
				        "0.005826,0.005800,0.005742,0.005696,0.005641,0.005585");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & CI";

			fall_power(Power_X1) {
				values ("0.004876,0.004870,0.004848,0.004835,0.004831,0.004819", \
				        "0.004874,0.004859,0.004835,0.004822,0.004816,0.004807", \
				        "0.004860,0.004846,0.004833,0.004812,0.004806,0.004798", \
				        "0.004863,0.004845,0.004825,0.004811,0.004801,0.004792", \
				        "0.004873,0.004862,0.004844,0.004823,0.004817,0.004808", \
				        "0.005011,0.005007,0.004981,0.004955,0.004940,0.004923", \
				        "0.005478,0.005453,0.005413,0.005380,0.005349,0.005326", \
				        "0.006614,0.006571,0.006521,0.006466,0.006412,0.006376");
			}
			rise_power(Power_X1) {
				values ("0.004005,0.003986,0.003976,0.003964,0.003963,0.003966", \
				        "0.004006,0.003979,0.003961,0.003944,0.003950,0.003950", \
				        "0.003996,0.003972,0.003949,0.003940,0.003947,0.003945", \
				        "0.003979,0.003958,0.003936,0.003922,0.003919,0.003919", \
				        "0.003991,0.003970,0.003949,0.003928,0.003919,0.003919", \
				        "0.004108,0.004080,0.004057,0.004035,0.004027,0.004018", \
				        "0.004511,0.004472,0.004461,0.004432,0.004414,0.004397", \
				        "0.005592,0.005577,0.005549,0.005515,0.005470,0.005447");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & !CI";

			fall_power(Power_X1) {
				values ("0.005853,0.005826,0.005824,0.005816,0.005810,0.005804", \
				        "0.005845,0.005837,0.005818,0.005809,0.005807,0.005798", \
				        "0.005849,0.005832,0.005810,0.005797,0.005787,0.005780", \
				        "0.005835,0.005822,0.005802,0.005784,0.005778,0.005773", \
				        "0.005814,0.005811,0.005790,0.005779,0.005773,0.005765", \
				        "0.005943,0.005916,0.005902,0.005884,0.005868,0.005856", \
				        "0.006403,0.006374,0.006337,0.006308,0.006282,0.006260", \
				        "0.007519,0.007504,0.007449,0.007396,0.007346,0.007314");
			}
			rise_power(Power_X1) {
				values ("0.003318,0.003301,0.003283,0.003268,0.003256,0.003255", \
				        "0.003308,0.003282,0.003267,0.003251,0.003241,0.003239", \
				        "0.003296,0.003276,0.003255,0.003245,0.003233,0.003230", \
				        "0.003290,0.003270,0.003242,0.003225,0.003213,0.003210", \
				        "0.003277,0.003268,0.003248,0.003224,0.003208,0.003206", \
				        "0.003389,0.003362,0.003340,0.003320,0.003307,0.003294", \
				        "0.003828,0.003798,0.003778,0.003742,0.003716,0.003699", \
				        "0.004951,0.004943,0.004895,0.004853,0.004814,0.004779");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "!A & B";

			fall_power(Power_X1) {
				values ("0.004631,0.004621,0.004597,0.004578,0.004560,0.004549", \
				        "0.004630,0.004619,0.004594,0.004577,0.004555,0.004547", \
				        "0.004635,0.004621,0.004600,0.004587,0.004562,0.004559", \
				        "0.004669,0.004659,0.004640,0.004619,0.004607,0.004596", \
				        "0.004805,0.004794,0.004762,0.004747,0.004729,0.004719", \
				        "0.005156,0.005120,0.005087,0.005059,0.005031,0.005009", \
				        "0.005897,0.005861,0.005807,0.005760,0.005710,0.005670", \
				        "0.007541,0.007493,0.007430,0.007332,0.007231,0.007159");
			}
			rise_power(Power_X1) {
				values ("0.004118,0.004099,0.004076,0.004077,0.004060,0.004059", \
				        "0.004134,0.004113,0.004091,0.004086,0.004075,0.004077", \
				        "0.004162,0.004134,0.004121,0.004118,0.004102,0.004099", \
				        "0.004215,0.004202,0.004181,0.004162,0.004152,0.004150", \
				        "0.004340,0.004311,0.004298,0.004283,0.004267,0.004261", \
				        "0.004615,0.004591,0.004567,0.004546,0.004530,0.004520", \
				        "0.005297,0.005270,0.005235,0.005209,0.005178,0.005153", \
				        "0.006880,0.006852,0.006818,0.006770,0.006725,0.006678");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "A & !B";

			fall_power(Power_X1) {
				values ("0.005499,0.005472,0.005458,0.005450,0.005433,0.005428", \
				        "0.005498,0.005476,0.005465,0.005452,0.005439,0.005434", \
				        "0.005506,0.005486,0.005468,0.005461,0.005451,0.005447", \
				        "0.005533,0.005522,0.005500,0.005491,0.005482,0.005476", \
				        "0.005639,0.005622,0.005614,0.005595,0.005588,0.005584", \
				        "0.005942,0.005929,0.005914,0.005886,0.005866,0.005850", \
				        "0.006623,0.006605,0.006569,0.006522,0.006490,0.006466", \
				        "0.008146,0.008091,0.008039,0.007976,0.007907,0.007861");
			}
			rise_power(Power_X1) {
				values ("0.003261,0.003250,0.003223,0.003219,0.003206,0.003199", \
				        "0.003258,0.003250,0.003233,0.003218,0.003209,0.003203", \
				        "0.003265,0.003248,0.003233,0.003219,0.003202,0.003196", \
				        "0.003292,0.003275,0.003247,0.003240,0.003224,0.003217", \
				        "0.003390,0.003374,0.003348,0.003336,0.003311,0.003300", \
				        "0.003694,0.003668,0.003639,0.003621,0.003596,0.003578", \
				        "0.004452,0.004428,0.004396,0.004355,0.004319,0.004280", \
				        "0.006227,0.006177,0.006116,0.006051,0.005989,0.005918");
			}
		}
	}

	pin (S) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(CI ^ (A ^ B))";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !CI";
			sdf_cond	   : "(B == 1'b0) && (CI == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.181239,0.187981,0.199452,0.218232,0.248792,0.298781", \
				        "0.184877,0.191639,0.203124,0.221766,0.252279,0.302269", \
				        "0.191360,0.198105,0.209692,0.228461,0.258919,0.308898", \
				        "0.202702,0.209483,0.221126,0.239894,0.270418,0.320403", \
				        "0.222044,0.228811,0.240440,0.259229,0.289786,0.339778", \
				        "0.254227,0.261139,0.272604,0.291922,0.322885,0.373118", \
				        "0.302615,0.310152,0.323270,0.343449,0.376130,0.428804", \
				        "0.393475,0.401805,0.415731,0.438017,0.474275,0.530929");
			}
			cell_rise(Timing_X1) {
				values ("0.090397,0.097261,0.109455,0.131347,0.171173,0.247694", \
				        "0.093777,0.100643,0.112801,0.134537,0.174386,0.250887", \
				        "0.099433,0.106298,0.118568,0.140262,0.180003,0.256484", \
				        "0.109115,0.115956,0.128192,0.150140,0.189949,0.266458", \
				        "0.125883,0.132811,0.145150,0.166926,0.206719,0.283127", \
				        "0.148148,0.155510,0.168253,0.190556,0.230590,0.306829", \
				        "0.168411,0.176786,0.191098,0.215057,0.256037,0.332440", \
				        "0.174517,0.184214,0.201245,0.229080,0.273632,0.351656");
			}
			fall_transition(Timing_X1) {
				values ("0.022457,0.025245,0.030501,0.039893,0.056626,0.087048", \
				        "0.022460,0.025247,0.030492,0.039903,0.056634,0.087048", \
				        "0.022452,0.025236,0.030485,0.039900,0.056601,0.087055", \
				        "0.022455,0.025239,0.030489,0.039907,0.056627,0.087040", \
				        "0.022455,0.025242,0.030493,0.039923,0.056626,0.087038", \
				        "0.023796,0.026567,0.031705,0.040952,0.057340,0.087582", \
				        "0.027238,0.030131,0.035325,0.044839,0.061605,0.091757", \
				        "0.032977,0.036044,0.041405,0.051226,0.068571,0.099166");
			}
			rise_transition(Timing_X1) {
				values ("0.018398,0.022763,0.031189,0.047853,0.081675,0.151812", \
				        "0.018395,0.022763,0.031178,0.047876,0.081629,0.151829", \
				        "0.018388,0.022760,0.031176,0.047851,0.081605,0.151816", \
				        "0.018330,0.022704,0.031117,0.047795,0.081608,0.151798", \
				        "0.018780,0.023105,0.031404,0.047920,0.081662,0.151814", \
				        "0.020624,0.024955,0.033117,0.049224,0.082236,0.151966", \
				        "0.024733,0.029389,0.037564,0.052856,0.084342,0.152613", \
				        "0.031091,0.036473,0.045834,0.061429,0.090661,0.155664");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B & CI";
			sdf_cond	   : "(B == 1'b0) && (CI == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.153670,0.159687,0.169905,0.186862,0.214590,0.260576", \
				        "0.157021,0.163039,0.173232,0.190147,0.217766,0.263752", \
				        "0.162505,0.168517,0.178750,0.195888,0.223490,0.269508", \
				        "0.171721,0.177732,0.187952,0.204859,0.232460,0.278459", \
				        "0.185207,0.191210,0.201464,0.218380,0.246077,0.292050", \
				        "0.200352,0.206332,0.216546,0.233425,0.261200,0.307129", \
				        "0.209620,0.215564,0.225897,0.242721,0.270392,0.316359", \
				        "0.196596,0.202651,0.212701,0.229786,0.257444,0.303350");
			}
			cell_rise(Timing_X1) {
				values ("0.188462,0.196157,0.208965,0.230868,0.270010,0.345294", \
				        "0.191207,0.198904,0.211707,0.233567,0.272684,0.347970", \
				        "0.197369,0.205061,0.217818,0.239735,0.278810,0.354101", \
				        "0.211027,0.218721,0.231507,0.253352,0.292576,0.367849", \
				        "0.240513,0.248222,0.261314,0.283139,0.322150,0.397453", \
				        "0.296588,0.304293,0.317084,0.339205,0.378165,0.453292", \
				        "0.381107,0.389052,0.401757,0.423957,0.462919,0.537891", \
				        "0.511297,0.519578,0.532998,0.554990,0.594209,0.668937");
			}
			fall_transition(Timing_X1) {
				values ("0.018537,0.021182,0.026031,0.034882,0.050909,0.080588", \
				        "0.018540,0.021171,0.026040,0.034875,0.050768,0.080591", \
				        "0.018525,0.021178,0.026022,0.034881,0.050840,0.080570", \
				        "0.018535,0.021177,0.026040,0.034876,0.050823,0.080598", \
				        "0.018525,0.021180,0.026041,0.034807,0.050858,0.080559", \
				        "0.018612,0.021236,0.026082,0.034875,0.050850,0.080527", \
				        "0.018962,0.021561,0.026350,0.035087,0.050953,0.080627", \
				        "0.019848,0.022423,0.027147,0.035734,0.051427,0.080767");
			}
			rise_transition(Timing_X1) {
				values ("0.022487,0.026165,0.033213,0.048378,0.081039,0.150497", \
				        "0.022476,0.026159,0.033210,0.048401,0.081036,0.150508", \
				        "0.022461,0.026149,0.033206,0.048439,0.081033,0.150503", \
				        "0.022423,0.026119,0.033183,0.048353,0.080994,0.150499", \
				        "0.022399,0.026097,0.033155,0.048347,0.080976,0.150501", \
				        "0.022842,0.026485,0.033412,0.048504,0.081035,0.150499", \
				        "0.024268,0.027775,0.034425,0.049159,0.081270,0.150575", \
				        "0.026741,0.030095,0.036276,0.050310,0.081897,0.150696");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & !CI";
			sdf_cond	   : "(B == 1'b1) && (CI == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.133874,0.140278,0.151828,0.172325,0.207113,0.260915", \
				        "0.136852,0.143257,0.154826,0.175215,0.210078,0.263901", \
				        "0.142949,0.149348,0.160937,0.181439,0.216082,0.269925", \
				        "0.155613,0.162021,0.173509,0.193850,0.228314,0.282304", \
				        "0.175427,0.181805,0.193377,0.213797,0.248502,0.302377", \
				        "0.197978,0.204328,0.215803,0.236232,0.270907,0.324695", \
				        "0.217708,0.224023,0.235195,0.255756,0.290235,0.344086", \
				        "0.222966,0.229321,0.240555,0.260856,0.295537,0.349358");
			}
			cell_rise(Timing_X1) {
				values ("0.187594,0.194189,0.205706,0.226538,0.265235,0.340776", \
				        "0.191228,0.197827,0.209391,0.230082,0.268847,0.344265", \
				        "0.198200,0.204790,0.216423,0.237217,0.275658,0.351146", \
				        "0.210889,0.217488,0.229103,0.250174,0.289047,0.364528", \
				        "0.234226,0.240817,0.252429,0.273396,0.311976,0.387435", \
				        "0.270760,0.277370,0.289055,0.309955,0.348682,0.424083", \
				        "0.331197,0.337841,0.349383,0.370484,0.409117,0.484362", \
				        "0.435169,0.441928,0.453366,0.474272,0.512776,0.587805");
			}
			fall_transition(Timing_X1) {
				values ("0.018675,0.022421,0.029652,0.042856,0.062463,0.091686", \
				        "0.018679,0.022415,0.029658,0.042873,0.062518,0.091717", \
				        "0.018679,0.022424,0.029661,0.042877,0.062506,0.091703", \
				        "0.018656,0.022406,0.029657,0.042866,0.062501,0.091703", \
				        "0.018598,0.022349,0.029606,0.042797,0.062534,0.091687", \
				        "0.018656,0.022387,0.029629,0.042839,0.062501,0.091671", \
				        "0.018914,0.022609,0.029808,0.043008,0.062724,0.091827", \
				        "0.020240,0.023797,0.030763,0.043710,0.063282,0.092137");
			}
			rise_transition(Timing_X1) {
				values ("0.018425,0.022497,0.030528,0.046847,0.080552,0.150878", \
				        "0.018427,0.022497,0.030525,0.046841,0.080562,0.150875", \
				        "0.018411,0.022487,0.030499,0.046841,0.080567,0.150868", \
				        "0.018374,0.022449,0.030492,0.046795,0.080523,0.150852", \
				        "0.018342,0.022434,0.030473,0.046801,0.080459,0.150858", \
				        "0.018688,0.022731,0.030663,0.046866,0.080642,0.150879", \
				        "0.018960,0.022990,0.030919,0.047102,0.080661,0.150913", \
				        "0.019880,0.023844,0.031554,0.047479,0.080878,0.151006");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & CI";
			sdf_cond	   : "(B == 1'b1) && (CI == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.160774,0.167048,0.177636,0.195081,0.223477,0.270287", \
				        "0.164677,0.170959,0.181568,0.198922,0.227270,0.274085", \
				        "0.172202,0.178479,0.189079,0.206400,0.234690,0.281498", \
				        "0.185396,0.191706,0.202302,0.219772,0.248118,0.294888", \
				        "0.208466,0.214744,0.225454,0.242848,0.271344,0.318156", \
				        "0.249733,0.256309,0.267606,0.285550,0.314477,0.361692", \
				        "0.317739,0.324985,0.336973,0.356600,0.387731,0.437764", \
				        "0.438441,0.446543,0.460397,0.482140,0.516572,0.570816");
			}
			cell_rise(Timing_X1) {
				values ("0.087354,0.094285,0.106640,0.128718,0.168827,0.245655", \
				        "0.090032,0.096965,0.109319,0.131316,0.171418,0.248296", \
				        "0.094320,0.101250,0.113607,0.135531,0.175657,0.252435", \
				        "0.101310,0.108229,0.120609,0.142451,0.182345,0.259197", \
				        "0.112473,0.119494,0.131947,0.154126,0.194199,0.271052", \
				        "0.126080,0.133407,0.146372,0.168946,0.209470,0.286248", \
				        "0.133523,0.141631,0.156018,0.179792,0.221338,0.298430", \
				        "0.114859,0.124425,0.141206,0.168833,0.213396,0.292431");
			}
			fall_transition(Timing_X1) {
				values ("0.019994,0.022590,0.027407,0.036292,0.052120,0.081758", \
				        "0.019986,0.022604,0.027423,0.036271,0.052122,0.081759", \
				        "0.019992,0.022601,0.027434,0.036271,0.052061,0.081809", \
				        "0.019995,0.022607,0.027438,0.036294,0.052162,0.081818", \
				        "0.020026,0.022637,0.027465,0.036252,0.052074,0.081809", \
				        "0.021912,0.024484,0.029230,0.037815,0.053341,0.082585", \
				        "0.025951,0.028646,0.033580,0.042467,0.058219,0.087159", \
				        "0.032190,0.035069,0.040176,0.049392,0.065740,0.094805");
			}
			rise_transition(Timing_X1) {
				values ("0.018502,0.022937,0.031473,0.048232,0.082081,0.152226", \
				        "0.018511,0.022936,0.031461,0.048196,0.082142,0.152227", \
				        "0.018508,0.022930,0.031465,0.048241,0.082050,0.152257", \
				        "0.018474,0.022910,0.031409,0.048103,0.082091,0.152246", \
				        "0.018940,0.023349,0.031831,0.048346,0.082233,0.152233", \
				        "0.020310,0.024742,0.033142,0.049553,0.082858,0.152499", \
				        "0.023920,0.028562,0.036903,0.052712,0.084917,0.153436", \
				        "0.030254,0.035593,0.044881,0.060690,0.091012,0.157047");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & !CI";
			sdf_cond	   : "(A == 1'b0) && (CI == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.169556,0.176270,0.187627,0.206121,0.236179,0.285253", \
				        "0.172725,0.179434,0.190757,0.209073,0.239172,0.288216", \
				        "0.178835,0.185549,0.196882,0.215245,0.245162,0.294242", \
				        "0.190252,0.196950,0.208310,0.226819,0.256826,0.305879", \
				        "0.212645,0.219350,0.230559,0.249096,0.279212,0.328293", \
				        "0.255257,0.262180,0.274227,0.293216,0.323650,0.373015", \
				        "0.327687,0.335291,0.348504,0.368906,0.401072,0.452854", \
				        "0.449071,0.457661,0.471126,0.494330,0.530824,0.586578");
			}
			cell_rise(Timing_X1) {
				values ("0.081363,0.087896,0.099558,0.120715,0.159679,0.235374", \
				        "0.084873,0.091411,0.103080,0.124118,0.163045,0.238762", \
				        "0.090724,0.097259,0.109010,0.130010,0.168781,0.244627", \
				        "0.100895,0.107422,0.119177,0.140078,0.178931,0.254634", \
				        "0.117146,0.123850,0.135797,0.157077,0.195957,0.271644", \
				        "0.136777,0.144025,0.156565,0.178519,0.217969,0.293643", \
				        "0.151578,0.159950,0.174315,0.198117,0.238924,0.314837", \
				        "0.146258,0.156057,0.173266,0.201296,0.246101,0.324000");
			}
			fall_transition(Timing_X1) {
				values ("0.022194,0.024925,0.030032,0.039209,0.055539,0.085539", \
				        "0.022198,0.024926,0.030039,0.039204,0.055496,0.085550", \
				        "0.022194,0.024929,0.030029,0.039205,0.055552,0.085534", \
				        "0.022192,0.024927,0.030020,0.039212,0.055487,0.085541", \
				        "0.022209,0.024946,0.030039,0.039224,0.055536,0.085530", \
				        "0.024026,0.026710,0.031628,0.040567,0.056467,0.086162", \
				        "0.028416,0.031188,0.036152,0.045203,0.061199,0.090233", \
				        "0.035204,0.038188,0.043446,0.052647,0.068728,0.097444");
			}
			rise_transition(Timing_X1) {
				values ("0.017238,0.021467,0.029753,0.046312,0.080219,0.150769", \
				        "0.017233,0.021478,0.029749,0.046248,0.080239,0.150767", \
				        "0.017242,0.021471,0.029741,0.046269,0.080199,0.150759", \
				        "0.017230,0.021470,0.029713,0.046148,0.080206,0.150769", \
				        "0.018028,0.022223,0.030365,0.046634,0.080402,0.150810", \
				        "0.020219,0.024469,0.032441,0.048350,0.081277,0.151016", \
				        "0.024609,0.029292,0.037429,0.052507,0.083666,0.151848", \
				        "0.031263,0.036731,0.046237,0.061971,0.090854,0.155325");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & CI";
			sdf_cond	   : "(A == 1'b0) && (CI == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.179018,0.185263,0.195838,0.213270,0.241587,0.288297", \
				        "0.182216,0.188456,0.199108,0.216451,0.244685,0.291368", \
				        "0.187435,0.193697,0.204356,0.221909,0.250243,0.297002", \
				        "0.196298,0.202547,0.213176,0.230477,0.258651,0.305409", \
				        "0.210713,0.216962,0.227655,0.245008,0.273337,0.320021", \
				        "0.227845,0.234047,0.244622,0.261981,0.290367,0.337104", \
				        "0.240200,0.246365,0.256688,0.273930,0.302089,0.348692", \
				        "0.239101,0.245161,0.255303,0.272356,0.300139,0.346437");
			}
			cell_rise(Timing_X1) {
				values ("0.198305,0.205910,0.218631,0.240495,0.279629,0.354879", \
				        "0.201948,0.209550,0.222285,0.244029,0.283119,0.358364", \
				        "0.208579,0.216172,0.228896,0.250746,0.289858,0.365098", \
				        "0.220516,0.228113,0.240911,0.262744,0.301954,0.377227", \
				        "0.243780,0.251368,0.264363,0.286153,0.325237,0.400518", \
				        "0.287861,0.295509,0.308370,0.330302,0.369352,0.444572", \
				        "0.360416,0.368182,0.380862,0.403220,0.442083,0.517153", \
				        "0.478420,0.486573,0.499559,0.521905,0.561044,0.636264");
			}
			fall_transition(Timing_X1) {
				values ("0.019986,0.022601,0.027411,0.036181,0.052180,0.081800", \
				        "0.019983,0.022597,0.027416,0.036208,0.052090,0.081833", \
				        "0.019977,0.022605,0.027410,0.036214,0.052146,0.081782", \
				        "0.019987,0.022597,0.027422,0.036215,0.052143,0.081797", \
				        "0.019981,0.022595,0.027411,0.036204,0.052168,0.081813", \
				        "0.019653,0.022319,0.027213,0.036084,0.052021,0.081887", \
				        "0.019407,0.022067,0.026965,0.035824,0.051849,0.081779", \
				        "0.019550,0.022150,0.026977,0.035756,0.051647,0.081377");
			}
			rise_transition(Timing_X1) {
				values ("0.022156,0.025870,0.033040,0.048306,0.080914,0.150508", \
				        "0.022152,0.025857,0.033028,0.048361,0.080986,0.150508", \
				        "0.022143,0.025844,0.033009,0.048305,0.080981,0.150484", \
				        "0.022144,0.025848,0.033019,0.048357,0.080914,0.150506", \
				        "0.022137,0.025843,0.033014,0.048309,0.080959,0.150472", \
				        "0.022471,0.026127,0.033205,0.048394,0.081070,0.150499", \
				        "0.023542,0.027117,0.033971,0.048899,0.081154,0.150480", \
				        "0.025325,0.028792,0.035296,0.049763,0.081768,0.151189");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & !CI";
			sdf_cond	   : "(A == 1'b1) && (CI == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.136602,0.142951,0.154372,0.174678,0.208972,0.262329", \
				        "0.139290,0.145656,0.157159,0.177386,0.211639,0.264946", \
				        "0.144194,0.150552,0.162069,0.182489,0.216697,0.270043", \
				        "0.153626,0.159978,0.171433,0.191634,0.225768,0.279140", \
				        "0.169133,0.175459,0.186824,0.207091,0.241227,0.294552", \
				        "0.188493,0.194803,0.206229,0.226434,0.260664,0.313902", \
				        "0.205409,0.211702,0.223004,0.243272,0.277468,0.330929", \
				        "0.207196,0.213459,0.224625,0.245020,0.279058,0.332556");
			}
			cell_rise(Timing_X1) {
				values ("0.212813,0.219553,0.231421,0.252857,0.292178,0.368314", \
				        "0.216686,0.223434,0.235310,0.256566,0.295926,0.372065", \
				        "0.223747,0.230495,0.242427,0.263728,0.302778,0.378958", \
				        "0.235854,0.242603,0.254503,0.276011,0.315354,0.391533", \
				        "0.258253,0.264992,0.276935,0.298300,0.337810,0.413942", \
				        "0.299078,0.305794,0.317795,0.338941,0.378121,0.454161", \
				        "0.367092,0.373778,0.385695,0.406873,0.445800,0.521680", \
				        "0.481600,0.488375,0.499767,0.521181,0.559833,0.635305");
			}
			fall_transition(Timing_X1) {
				values ("0.018511,0.022196,0.029352,0.042287,0.061663,0.091053", \
				        "0.018502,0.022199,0.029339,0.042300,0.061651,0.091056", \
				        "0.018498,0.022197,0.029343,0.042313,0.061624,0.090982", \
				        "0.018491,0.022193,0.029342,0.042275,0.061629,0.090995", \
				        "0.018447,0.022144,0.029301,0.042253,0.061664,0.091105", \
				        "0.018472,0.022164,0.029310,0.042283,0.061637,0.090897", \
				        "0.018652,0.022323,0.029447,0.042461,0.061953,0.091191", \
				        "0.019367,0.022956,0.029959,0.042845,0.062312,0.091421");
			}
			rise_transition(Timing_X1) {
				values ("0.018752,0.022981,0.031232,0.047794,0.081630,0.151792", \
				        "0.018749,0.022988,0.031231,0.047789,0.081659,0.151769", \
				        "0.018749,0.022988,0.031251,0.047808,0.081688,0.151800", \
				        "0.018751,0.022982,0.031243,0.047792,0.081690,0.151800", \
				        "0.018754,0.022991,0.031238,0.047798,0.081595,0.151782", \
				        "0.018808,0.023012,0.031216,0.047748,0.081652,0.151807", \
				        "0.019098,0.023220,0.031315,0.047713,0.081517,0.151750", \
				        "0.019765,0.023805,0.031704,0.047847,0.081457,0.151655");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & CI";
			sdf_cond	   : "(A == 1'b1) && (CI == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.140871,0.146929,0.157094,0.174123,0.201874,0.247958", \
				        "0.144615,0.150679,0.160874,0.177766,0.205531,0.251581", \
				        "0.151876,0.157939,0.168211,0.185116,0.212660,0.258737", \
				        "0.164857,0.170909,0.181207,0.198167,0.225803,0.271873", \
				        "0.188165,0.194232,0.204484,0.221514,0.249316,0.295401", \
				        "0.227289,0.233680,0.244615,0.262445,0.291167,0.338062", \
				        "0.289870,0.296849,0.309230,0.328816,0.359854,0.409848", \
				        "0.400438,0.408588,0.422718,0.444299,0.479470,0.534355");
			}
			cell_rise(Timing_X1) {
				values ("0.083743,0.090760,0.103221,0.125505,0.165859,0.242800", \
				        "0.086576,0.093593,0.106083,0.128246,0.168624,0.245554", \
				        "0.091827,0.098842,0.111392,0.133566,0.173850,0.250854", \
				        "0.102211,0.109181,0.121690,0.143808,0.183991,0.260913", \
				        "0.119998,0.127009,0.139439,0.161538,0.201715,0.278423", \
				        "0.141602,0.149039,0.161918,0.184187,0.224243,0.300677", \
				        "0.157895,0.166772,0.180959,0.204941,0.245840,0.322214", \
				        "0.155365,0.165170,0.182170,0.209965,0.254115,0.331842");
			}
			fall_transition(Timing_X1) {
				values ("0.018533,0.021185,0.026042,0.034979,0.050754,0.080559", \
				        "0.018552,0.021182,0.026060,0.034979,0.050899,0.080596", \
				        "0.018548,0.021177,0.026042,0.034955,0.050875,0.080548", \
				        "0.018551,0.021189,0.026064,0.034955,0.050854,0.080600", \
				        "0.018640,0.021268,0.026105,0.034915,0.050799,0.080586", \
				        "0.021029,0.023658,0.028497,0.037261,0.052739,0.081793", \
				        "0.025296,0.028069,0.033073,0.042113,0.058089,0.086898", \
				        "0.032073,0.035086,0.040359,0.049941,0.066410,0.095573");
			}
			rise_transition(Timing_X1) {
				values ("0.018737,0.023236,0.031853,0.048646,0.082413,0.152349", \
				        "0.018729,0.023230,0.031833,0.048640,0.082422,0.152381", \
				        "0.018713,0.023208,0.031828,0.048647,0.082367,0.152368", \
				        "0.018598,0.023087,0.031692,0.048456,0.082356,0.152373", \
				        "0.019045,0.023411,0.031829,0.048425,0.082230,0.152304", \
				        "0.021126,0.025373,0.033388,0.049372,0.082501,0.152316", \
				        "0.025455,0.029976,0.037945,0.052936,0.084352,0.152894", \
				        "0.031877,0.037129,0.046231,0.061401,0.090304,0.155676");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "!A & !B";
			sdf_cond	   : "(A == 1'b0) && (B == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.138135,0.144960,0.156520,0.175638,0.206316,0.256451", \
				        "0.140782,0.147594,0.159076,0.178049,0.208705,0.258812", \
				        "0.146396,0.153172,0.164577,0.183629,0.214119,0.264166", \
				        "0.158922,0.165709,0.177263,0.195954,0.226610,0.276558", \
				        "0.186992,0.193738,0.205028,0.223717,0.254064,0.303826", \
				        "0.242757,0.249703,0.261767,0.280555,0.310749,0.360242", \
				        "0.325882,0.333768,0.347231,0.367780,0.400339,0.451862", \
				        "0.452935,0.461944,0.476580,0.500925,0.537220,0.592927");
			}
			cell_rise(Timing_X1) {
				values ("0.075124,0.082273,0.094716,0.116446,0.155733,0.231349", \
				        "0.078441,0.085574,0.097979,0.119519,0.158811,0.234423", \
				        "0.083575,0.090640,0.103120,0.124649,0.163795,0.239395", \
				        "0.091372,0.098388,0.110771,0.132264,0.171400,0.247022", \
				        "0.102042,0.109381,0.122451,0.144767,0.184299,0.259929", \
				        "0.115912,0.123267,0.136563,0.160596,0.201511,0.277656", \
				        "0.121827,0.130388,0.145207,0.170629,0.215133,0.292993", \
				        "0.101281,0.111431,0.129547,0.158830,0.207447,0.291661");
			}
			fall_transition(Timing_X1) {
				values ("0.022812,0.025630,0.030901,0.040312,0.056951,0.087269", \
				        "0.022728,0.025534,0.030806,0.040211,0.056887,0.087218", \
				        "0.022587,0.025389,0.030658,0.040071,0.056764,0.087132", \
				        "0.022416,0.025190,0.030450,0.039832,0.056539,0.086974", \
				        "0.022072,0.024886,0.030118,0.039380,0.056035,0.086703", \
				        "0.024394,0.026941,0.031686,0.040467,0.056560,0.086632", \
				        "0.030690,0.033361,0.037987,0.046391,0.061554,0.090236", \
				        "0.039213,0.042190,0.047253,0.055906,0.070782,0.097929");
			}
			rise_transition(Timing_X1) {
				values ("0.019237,0.023317,0.031302,0.047321,0.080540,0.150393", \
				        "0.019156,0.023247,0.031255,0.047243,0.080515,0.150381", \
				        "0.018863,0.023023,0.031116,0.047171,0.080409,0.150390", \
				        "0.018652,0.022865,0.031000,0.047173,0.080465,0.150393", \
				        "0.018911,0.023904,0.032502,0.048354,0.080989,0.150511", \
				        "0.020300,0.025095,0.034701,0.051438,0.083008,0.151330", \
				        "0.025219,0.030113,0.038943,0.056544,0.088705,0.153651", \
				        "0.032832,0.038583,0.048708,0.065759,0.098747,0.162781");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "!A & B";
			sdf_cond	   : "(A == 1'b0) && (B == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.158674,0.164923,0.175506,0.193146,0.221329,0.268054", \
				        "0.162387,0.168654,0.179229,0.196586,0.224990,0.271706", \
				        "0.169791,0.176032,0.186646,0.203892,0.231928,0.278648", \
				        "0.183663,0.189909,0.200446,0.217714,0.245828,0.292555", \
				        "0.201894,0.208116,0.218904,0.236268,0.264737,0.311422", \
				        "0.214101,0.220300,0.230869,0.248654,0.277801,0.325789", \
				        "0.221701,0.227758,0.237868,0.255170,0.283607,0.330858", \
				        "0.213179,0.219062,0.229091,0.245952,0.273849,0.320521");
			}
			cell_rise(Timing_X1) {
				values ("0.169830,0.176493,0.188135,0.209015,0.247544,0.322956", \
				        "0.172964,0.179628,0.191285,0.212108,0.250656,0.326065", \
				        "0.179697,0.186363,0.198040,0.218922,0.257755,0.333162", \
				        "0.194274,0.200927,0.212657,0.233461,0.272217,0.347644", \
				        "0.223328,0.229985,0.241733,0.262636,0.301273,0.376695", \
				        "0.270935,0.277724,0.289403,0.310534,0.349333,0.424688", \
				        "0.342399,0.349469,0.361424,0.382477,0.421263,0.496607", \
				        "0.455989,0.463771,0.476789,0.498188,0.537307,0.612769");
			}
			fall_transition(Timing_X1) {
				values ("0.019977,0.022602,0.027429,0.036164,0.052169,0.081779", \
				        "0.019979,0.022604,0.027427,0.036204,0.052111,0.081845", \
				        "0.019982,0.022603,0.027416,0.036218,0.052107,0.081804", \
				        "0.019990,0.022600,0.027422,0.036185,0.052080,0.081842", \
				        "0.019969,0.022598,0.027420,0.036184,0.052162,0.081817", \
				        "0.019512,0.022346,0.027525,0.036817,0.053467,0.083810", \
				        "0.018856,0.021680,0.026773,0.035972,0.052503,0.083027", \
				        "0.019415,0.022079,0.026967,0.035871,0.052119,0.082522");
			}
			rise_transition(Timing_X1) {
				values ("0.018822,0.022839,0.030741,0.046935,0.080552,0.150921", \
				        "0.018819,0.022837,0.030740,0.046898,0.080603,0.150902", \
				        "0.018817,0.022835,0.030741,0.046937,0.080615,0.150885", \
				        "0.018819,0.022828,0.030739,0.046891,0.080621,0.150898", \
				        "0.018883,0.022886,0.030795,0.046926,0.080637,0.150871", \
				        "0.019520,0.023517,0.031364,0.047400,0.080899,0.151045", \
				        "0.020889,0.024832,0.032373,0.047964,0.081277,0.151535", \
				        "0.023682,0.027837,0.035173,0.049917,0.082546,0.152329");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "A & !B";
			sdf_cond	   : "(A == 1'b1) && (B == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.144916,0.150918,0.161104,0.177966,0.205705,0.251677", \
				        "0.148068,0.154085,0.164280,0.181075,0.208657,0.254661", \
				        "0.154042,0.160046,0.170251,0.186910,0.214480,0.260493", \
				        "0.165002,0.171009,0.181204,0.198072,0.225692,0.271703", \
				        "0.180373,0.186350,0.196618,0.213561,0.241263,0.287208", \
				        "0.195052,0.200957,0.211040,0.228052,0.256018,0.302426", \
				        "0.207301,0.213131,0.223141,0.239919,0.267583,0.313712", \
				        "0.202539,0.208528,0.218723,0.235349,0.263061,0.309126");
			}
			cell_rise(Timing_X1) {
				values ("0.185334,0.192071,0.203936,0.225295,0.264694,0.340819", \
				        "0.188468,0.195211,0.207088,0.228397,0.267773,0.343914", \
				        "0.195104,0.201826,0.213721,0.235082,0.274468,0.350606", \
				        "0.209305,0.216052,0.227959,0.249349,0.288885,0.365032", \
				        "0.239038,0.245748,0.257744,0.279045,0.318498,0.394632", \
				        "0.289009,0.295769,0.307869,0.329339,0.368816,0.444923", \
				        "0.361832,0.368500,0.380018,0.401411,0.440776,0.517299", \
				        "0.478815,0.485728,0.497584,0.518614,0.557744,0.634054");
			}
			fall_transition(Timing_X1) {
				values ("0.018549,0.021180,0.026046,0.034874,0.050881,0.080577", \
				        "0.018540,0.021196,0.026033,0.034824,0.050745,0.080540", \
				        "0.018549,0.021181,0.026042,0.034875,0.050885,0.080490", \
				        "0.018552,0.021190,0.026042,0.034871,0.050742,0.080512", \
				        "0.018520,0.021150,0.026026,0.034848,0.050837,0.080557", \
				        "0.018201,0.020962,0.025969,0.034970,0.051265,0.081302", \
				        "0.018405,0.021106,0.026050,0.034937,0.051168,0.081047", \
				        "0.020230,0.022793,0.027436,0.035941,0.051670,0.081546");
			}
			rise_transition(Timing_X1) {
				values ("0.018764,0.022992,0.031229,0.047772,0.081639,0.151804", \
				        "0.018757,0.022992,0.031228,0.047773,0.081650,0.151775", \
				        "0.018760,0.022995,0.031231,0.047749,0.081670,0.151802", \
				        "0.018758,0.022993,0.031227,0.047742,0.081646,0.151799", \
				        "0.018767,0.022994,0.031234,0.047774,0.081663,0.151776", \
				        "0.019071,0.023343,0.031677,0.048217,0.081996,0.151931", \
				        "0.019190,0.023346,0.031501,0.048089,0.082313,0.153035", \
				        "0.020516,0.024531,0.032320,0.048450,0.082506,0.153210");
			}
		}

		timing () {

			related_pin	   : "CI";
			when	           : "A & B";
			sdf_cond	   : "(A == 1'b1) && (B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.109162,0.115358,0.126273,0.145433,0.177367,0.228684", \
				        "0.112915,0.119106,0.130065,0.149165,0.180929,0.232200", \
				        "0.120485,0.126681,0.137614,0.156611,0.188283,0.239473", \
				        "0.134747,0.140883,0.151806,0.170754,0.202074,0.252994", \
				        "0.160060,0.166199,0.177023,0.195502,0.226315,0.276849", \
				        "0.195399,0.201739,0.212688,0.231019,0.262490,0.315097", \
				        "0.251757,0.258868,0.271311,0.290763,0.322773,0.377296", \
				        "0.350131,0.358429,0.372424,0.395145,0.431264,0.488940");
			}
			cell_rise(Timing_X1) {
				values ("0.076948,0.083966,0.096434,0.118782,0.159159,0.236080", \
				        "0.079827,0.086828,0.099301,0.121464,0.161835,0.238752", \
				        "0.085716,0.092699,0.105133,0.127223,0.167342,0.244279", \
				        "0.098413,0.105298,0.117574,0.139404,0.179388,0.256240", \
				        "0.119734,0.126654,0.138996,0.160806,0.200555,0.276899", \
				        "0.142617,0.150170,0.162938,0.185272,0.225277,0.301445", \
				        "0.158385,0.167060,0.182311,0.206318,0.247223,0.323406", \
				        "0.153728,0.163881,0.181288,0.210035,0.254825,0.332480");
			}
			fall_transition(Timing_X1) {
				values ("0.017862,0.021301,0.027941,0.039576,0.057887,0.088306", \
				        "0.017837,0.021281,0.027912,0.039500,0.057802,0.088250", \
				        "0.017823,0.021245,0.027833,0.039360,0.057582,0.088129", \
				        "0.017751,0.021112,0.027581,0.038904,0.057093,0.087762", \
				        "0.018167,0.021337,0.027403,0.038274,0.056315,0.087264", \
				        "0.020061,0.022835,0.028171,0.038902,0.058625,0.090412", \
				        "0.024652,0.027562,0.032765,0.042297,0.060598,0.095939", \
				        "0.032390,0.035672,0.041447,0.051568,0.068966,0.103109");
			}
			rise_transition(Timing_X1) {
				values ("0.018744,0.023239,0.031853,0.048672,0.082430,0.152335", \
				        "0.018702,0.023193,0.031784,0.048625,0.082357,0.152340", \
				        "0.018615,0.023090,0.031679,0.048472,0.082270,0.152343", \
				        "0.018357,0.022802,0.031330,0.048110,0.082087,0.152267", \
				        "0.019084,0.023375,0.031719,0.048093,0.081708,0.151946", \
				        "0.021962,0.026042,0.033882,0.049744,0.082655,0.152013", \
				        "0.027095,0.031599,0.039339,0.053912,0.084873,0.152917", \
				        "0.034872,0.040052,0.049150,0.064038,0.091880,0.156161");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !CI";

			fall_power(Power_X1) {
				values ("0.006918,0.006620,0.006074,0.005069,0.003099,-0.000783", \
				        "0.006917,0.006611,0.006081,0.005051,0.003090,-0.000796", \
				        "0.006895,0.006601,0.006085,0.005062,0.003089,-0.000805", \
				        "0.006885,0.006595,0.006070,0.005048,0.003078,-0.000813", \
				        "0.006890,0.006598,0.006066,0.005045,0.003068,-0.000811", \
				        "0.007028,0.006700,0.006161,0.005136,0.003167,-0.000726", \
				        "0.007599,0.007296,0.006735,0.005677,0.003675,-0.000231", \
				        "0.009642,0.009331,0.008731,0.007636,0.005601,0.001649");
			}
			rise_power(Power_X1) {
				values ("0.004847,0.005099,0.005568,0.006525,0.008462,0.012356", \
				        "0.004823,0.005065,0.005538,0.006497,0.008445,0.012333", \
				        "0.004806,0.005031,0.005534,0.006483,0.008424,0.012317", \
				        "0.004816,0.005019,0.005513,0.006478,0.008428,0.012316", \
				        "0.004814,0.005050,0.005524,0.006496,0.008425,0.012306", \
				        "0.004965,0.005221,0.005683,0.006621,0.008550,0.012422", \
				        "0.005668,0.005857,0.006331,0.007280,0.009190,0.013038", \
				        "0.007715,0.007922,0.008367,0.009272,0.011152,0.014976");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & CI";

			rise_power(Power_X1) {
				values ("0.004822,0.004818,0.004792,0.004779,0.004767,0.004763", \
				        "0.004808,0.004797,0.004776,0.004766,0.004759,0.004753", \
				        "0.004814,0.004793,0.004776,0.004763,0.004755,0.004747", \
				        "0.004828,0.004813,0.004791,0.004774,0.004769,0.004761", \
				        "0.004908,0.004894,0.004882,0.004863,0.004854,0.004847", \
				        "0.005224,0.005209,0.005187,0.005152,0.005136,0.005117", \
				        "0.005930,0.005920,0.005868,0.005825,0.005789,0.005758", \
				        "0.007442,0.007411,0.007345,0.007268,0.007204,0.007144");
			}
			fall_power(Power_X1) {
				values ("0.002990,0.002990,0.002962,0.002955,0.002953,0.002944", \
				        "0.002995,0.002978,0.002966,0.002944,0.002946,0.002937", \
				        "0.002991,0.002981,0.002955,0.002942,0.002947,0.002936", \
				        "0.002989,0.002973,0.002949,0.002939,0.002936,0.002927", \
				        "0.003035,0.003005,0.002984,0.002972,0.002959,0.002950", \
				        "0.003210,0.003178,0.003157,0.003142,0.003133,0.003121", \
				        "0.003759,0.003733,0.003714,0.003671,0.003653,0.003628", \
				        "0.005123,0.005083,0.005038,0.004997,0.004959,0.004915");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !CI";

			rise_power(Power_X1) {
				values ("0.004932,0.004916,0.004895,0.004887,0.004874,0.004874", \
				        "0.004910,0.004902,0.004887,0.004871,0.004864,0.004858", \
				        "0.004900,0.004890,0.004875,0.004858,0.004842,0.004835", \
				        "0.004880,0.004876,0.004864,0.004845,0.004835,0.004829", \
				        "0.004911,0.004898,0.004876,0.004863,0.004853,0.004847", \
				        "0.005049,0.005039,0.005007,0.004996,0.004976,0.004962", \
				        "0.005530,0.005533,0.005484,0.005461,0.005431,0.005413", \
				        "0.006810,0.006780,0.006746,0.006678,0.006631,0.006590");
			}
			fall_power(Power_X1) {
				values ("0.003331,0.003311,0.003282,0.003273,0.003255,0.003248", \
				        "0.003323,0.003304,0.003282,0.003262,0.003249,0.003242", \
				        "0.003309,0.003293,0.003283,0.003260,0.003240,0.003238", \
				        "0.003336,0.003311,0.003288,0.003262,0.003239,0.003235", \
				        "0.003413,0.003396,0.003365,0.003342,0.003325,0.003313", \
				        "0.003675,0.003670,0.003627,0.003600,0.003577,0.003557", \
				        "0.004358,0.004320,0.004289,0.004246,0.004209,0.004181", \
				        "0.005840,0.005800,0.005749,0.005699,0.005640,0.005581");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & CI";

			fall_power(Power_X1) {
				values ("0.007297,0.007031,0.006503,0.005495,0.003553,-0.000334", \
				        "0.007301,0.007014,0.006498,0.005497,0.003541,-0.000338", \
				        "0.007287,0.006991,0.006476,0.005479,0.003530,-0.000354", \
				        "0.007229,0.006993,0.006466,0.005459,0.003500,-0.000380", \
				        "0.007227,0.006968,0.006436,0.005423,0.003476,-0.000409", \
				        "0.007366,0.007103,0.006563,0.005533,0.003573,-0.000315", \
				        "0.008131,0.007826,0.007262,0.006224,0.004239,0.000333", \
				        "0.010328,0.009987,0.009418,0.008331,0.006288,0.002350");
			}
			rise_power(Power_X1) {
				values ("0.003884,0.004128,0.004594,0.005575,0.007520,0.011406", \
				        "0.003881,0.004116,0.004584,0.005552,0.007496,0.011390", \
				        "0.003846,0.004104,0.004568,0.005547,0.007492,0.011385", \
				        "0.003867,0.004091,0.004565,0.005525,0.007475,0.011368", \
				        "0.003883,0.004118,0.004583,0.005557,0.007478,0.011385", \
				        "0.004069,0.004307,0.004784,0.005730,0.007653,0.011540", \
				        "0.004806,0.005037,0.005494,0.006430,0.008344,0.012206", \
				        "0.006863,0.007100,0.007538,0.008466,0.010341,0.014152");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & !CI";

			fall_power(Power_X1) {
				values ("0.006337,0.006036,0.005515,0.004499,0.002531,-0.001354", \
				        "0.006327,0.006039,0.005504,0.004490,0.002523,-0.001371", \
				        "0.006308,0.005996,0.005488,0.004471,0.002508,-0.001384", \
				        "0.006316,0.006029,0.005492,0.004467,0.002500,-0.001390", \
				        "0.006304,0.006039,0.005507,0.004478,0.002516,-0.001375", \
				        "0.006533,0.006243,0.005705,0.004674,0.002692,-0.001200", \
				        "0.007356,0.007026,0.006462,0.005402,0.003396,-0.000513", \
				        "0.009349,0.009056,0.008418,0.007331,0.005286,0.001322");
			}
			rise_power(Power_X1) {
				values ("0.003384,0.003584,0.004104,0.005055,0.006991,0.010869", \
				        "0.003373,0.003607,0.004082,0.005052,0.006985,0.010863", \
				        "0.003355,0.003601,0.004074,0.005031,0.006968,0.010842", \
				        "0.003346,0.003572,0.004058,0.005017,0.006954,0.010830", \
				        "0.003362,0.003605,0.004064,0.005033,0.006964,0.010833", \
				        "0.003563,0.003809,0.004263,0.005225,0.007136,0.011006", \
				        "0.004324,0.004543,0.004999,0.005935,0.007828,0.011672", \
				        "0.006307,0.006498,0.006931,0.007857,0.009729,0.013528");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & CI";

			rise_power(Power_X1) {
				values ("0.004872,0.004863,0.004850,0.004841,0.004838,0.004831", \
				        "0.004887,0.004850,0.004843,0.004828,0.004822,0.004816", \
				        "0.004860,0.004858,0.004837,0.004820,0.004815,0.004806", \
				        "0.004856,0.004841,0.004832,0.004817,0.004808,0.004801", \
				        "0.004879,0.004858,0.004839,0.004827,0.004825,0.004818", \
				        "0.005018,0.004997,0.004981,0.004964,0.004946,0.004931", \
				        "0.005484,0.005459,0.005415,0.005391,0.005357,0.005334", \
				        "0.006595,0.006567,0.006528,0.006473,0.006425,0.006379");
			}
			fall_power(Power_X1) {
				values ("0.004005,0.003988,0.003971,0.003955,0.003950,0.003942", \
				        "0.004001,0.003984,0.003958,0.003943,0.003935,0.003928", \
				        "0.003996,0.003976,0.003954,0.003936,0.003931,0.003927", \
				        "0.003985,0.003959,0.003927,0.003914,0.003911,0.003905", \
				        "0.003998,0.003957,0.003942,0.003925,0.003914,0.003906", \
				        "0.004098,0.004084,0.004046,0.004027,0.004018,0.004009", \
				        "0.004517,0.004496,0.004457,0.004430,0.004405,0.004386", \
				        "0.005621,0.005596,0.005549,0.005504,0.005473,0.005431");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & !CI";

			rise_power(Power_X1) {
				values ("0.005861,0.005846,0.005832,0.005829,0.005822,0.005822", \
				        "0.005854,0.005838,0.005832,0.005823,0.005814,0.005810", \
				        "0.005847,0.005841,0.005826,0.005807,0.005797,0.005797", \
				        "0.005847,0.005818,0.005810,0.005796,0.005789,0.005784", \
				        "0.005838,0.005811,0.005804,0.005788,0.005782,0.005776", \
				        "0.005948,0.005928,0.005911,0.005891,0.005875,0.005870", \
				        "0.006407,0.006372,0.006343,0.006317,0.006293,0.006271", \
				        "0.007517,0.007496,0.007454,0.007398,0.007354,0.007324");
			}
			fall_power(Power_X1) {
				values ("0.003312,0.003293,0.003281,0.003264,0.003253,0.003246", \
				        "0.003309,0.003292,0.003269,0.003252,0.003237,0.003234", \
				        "0.003294,0.003273,0.003262,0.003243,0.003228,0.003223", \
				        "0.003274,0.003263,0.003246,0.003222,0.003207,0.003202", \
				        "0.003285,0.003263,0.003247,0.003225,0.003205,0.003197", \
				        "0.003392,0.003365,0.003342,0.003317,0.003303,0.003289", \
				        "0.003830,0.003814,0.003773,0.003741,0.003712,0.003690", \
				        "0.004960,0.004943,0.004891,0.004848,0.004809,0.004774");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & CI";

			fall_power(Power_X1) {
				values ("0.005931,0.005629,0.005125,0.004132,0.002200,-0.001689", \
				        "0.005926,0.005630,0.005119,0.004132,0.002181,-0.001706", \
				        "0.005888,0.005630,0.005091,0.004107,0.002155,-0.001731", \
				        "0.005865,0.005587,0.005066,0.004070,0.002118,-0.001768", \
				        "0.005838,0.005558,0.005031,0.004041,0.002078,-0.001807", \
				        "0.005976,0.005708,0.005177,0.004170,0.002206,-0.001686", \
				        "0.006772,0.006482,0.005914,0.004905,0.002902,-0.001016", \
				        "0.008990,0.008670,0.008056,0.006980,0.004968,0.001020");
			}
			rise_power(Power_X1) {
				values ("0.003882,0.004107,0.004595,0.005555,0.007493,0.011394", \
				        "0.003878,0.004090,0.004551,0.005536,0.007480,0.011383", \
				        "0.003840,0.004078,0.004548,0.005521,0.007458,0.011360", \
				        "0.003819,0.004059,0.004530,0.005495,0.007433,0.011326", \
				        "0.003780,0.004013,0.004497,0.005455,0.007393,0.011280", \
				        "0.003944,0.004174,0.004639,0.005579,0.007503,0.011390", \
				        "0.004782,0.005006,0.005473,0.006394,0.008297,0.012146", \
				        "0.006983,0.007137,0.007582,0.008496,0.010377,0.014190");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "!A & !B";

			fall_power(Power_X1) {
				values ("0.006216,0.005918,0.005379,0.004357,0.002397,-0.001492", \
				        "0.006200,0.005878,0.005359,0.004346,0.002375,-0.001515", \
				        "0.006165,0.005873,0.005366,0.004327,0.002354,-0.001533", \
				        "0.006205,0.005925,0.005388,0.004347,0.002390,-0.001504", \
				        "0.006330,0.006049,0.005521,0.004510,0.002542,-0.001358", \
				        "0.006891,0.006609,0.006050,0.005005,0.003037,-0.000868", \
				        "0.008146,0.007865,0.007294,0.006218,0.004192,0.000254", \
				        "0.010950,0.010564,0.009976,0.008877,0.006795,0.002802");
			}
			rise_power(Power_X1) {
				values ("0.003224,0.003456,0.003938,0.004895,0.006841,0.010723", \
				        "0.003226,0.003457,0.003923,0.004882,0.006820,0.010708", \
				        "0.003193,0.003433,0.003917,0.004876,0.006816,0.010697", \
				        "0.003183,0.003439,0.003912,0.004874,0.006815,0.010690", \
				        "0.003280,0.003490,0.003981,0.004931,0.006870,0.010743", \
				        "0.003635,0.003876,0.004324,0.005282,0.007203,0.011068", \
				        "0.004660,0.004873,0.005326,0.006267,0.008169,0.012030", \
				        "0.007157,0.007332,0.007792,0.008684,0.010566,0.014376");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "!A & B";

			rise_power(Power_X1) {
				values ("0.004623,0.004611,0.004602,0.004583,0.004564,0.004553", \
				        "0.004633,0.004621,0.004597,0.004578,0.004564,0.004551", \
				        "0.004640,0.004626,0.004599,0.004587,0.004573,0.004562", \
				        "0.004668,0.004656,0.004644,0.004622,0.004610,0.004602", \
				        "0.004802,0.004804,0.004761,0.004743,0.004734,0.004723", \
				        "0.005140,0.005137,0.005092,0.005057,0.005037,0.005012", \
				        "0.005900,0.005868,0.005817,0.005758,0.005708,0.005678", \
				        "0.007547,0.007489,0.007434,0.007325,0.007234,0.007158");
			}
			fall_power(Power_X1) {
				values ("0.004119,0.004101,0.004076,0.004070,0.004056,0.004051", \
				        "0.004125,0.004110,0.004091,0.004073,0.004069,0.004064", \
				        "0.004162,0.004146,0.004122,0.004103,0.004096,0.004089", \
				        "0.004222,0.004206,0.004178,0.004159,0.004149,0.004142", \
				        "0.004357,0.004317,0.004292,0.004273,0.004260,0.004252", \
				        "0.004616,0.004584,0.004559,0.004532,0.004521,0.004504", \
				        "0.005292,0.005276,0.005232,0.005201,0.005174,0.005146", \
				        "0.006904,0.006851,0.006808,0.006761,0.006718,0.006664");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "A & !B";

			rise_power(Power_X1) {
				values ("0.005504,0.005489,0.005480,0.005462,0.005450,0.005446", \
				        "0.005492,0.005480,0.005471,0.005460,0.005456,0.005451", \
				        "0.005503,0.005491,0.005479,0.005467,0.005461,0.005458", \
				        "0.005545,0.005517,0.005512,0.005493,0.005493,0.005490", \
				        "0.005657,0.005634,0.005612,0.005601,0.005595,0.005596", \
				        "0.005957,0.005936,0.005916,0.005897,0.005874,0.005862", \
				        "0.006632,0.006604,0.006565,0.006528,0.006507,0.006475", \
				        "0.008142,0.008100,0.008053,0.007983,0.007919,0.007872");
			}
			fall_power(Power_X1) {
				values ("0.003264,0.003248,0.003225,0.003219,0.003202,0.003195", \
				        "0.003264,0.003247,0.003229,0.003218,0.003206,0.003200", \
				        "0.003277,0.003250,0.003231,0.003214,0.003202,0.003196", \
				        "0.003287,0.003275,0.003250,0.003237,0.003223,0.003211", \
				        "0.003394,0.003375,0.003349,0.003330,0.003309,0.003296", \
				        "0.003689,0.003670,0.003637,0.003613,0.003590,0.003572", \
				        "0.004461,0.004420,0.004397,0.004351,0.004320,0.004278", \
				        "0.006209,0.006168,0.006113,0.006053,0.005988,0.005911");
			}
		}

		internal_power () {

			related_pin	         : "CI";
			when	                 : "A & B";

			fall_power(Power_X1) {
				values ("0.005134,0.004873,0.004348,0.003343,0.001391,-0.002484", \
				        "0.005122,0.004859,0.004321,0.003331,0.001368,-0.002505", \
				        "0.005092,0.004816,0.004296,0.003300,0.001343,-0.002534", \
				        "0.005075,0.004800,0.004278,0.003278,0.001319,-0.002561", \
				        "0.005066,0.004795,0.004281,0.003281,0.001334,-0.002555", \
				        "0.005282,0.005011,0.004468,0.003461,0.001499,-0.002385", \
				        "0.006192,0.005857,0.005329,0.004288,0.002311,-0.001598", \
				        "0.008694,0.008373,0.007757,0.006683,0.004645,0.000698");
			}
			rise_power(Power_X1) {
				values ("0.004539,0.004753,0.005224,0.006194,0.008148,0.012045", \
				        "0.004518,0.004762,0.005217,0.006186,0.008136,0.012031", \
				        "0.004502,0.004737,0.005214,0.006171,0.008123,0.012018", \
				        "0.004494,0.004737,0.005216,0.006182,0.008126,0.012017", \
				        "0.004632,0.004863,0.005342,0.006303,0.008231,0.012115", \
				        "0.005119,0.005325,0.005776,0.006741,0.008642,0.012507", \
				        "0.006346,0.006571,0.007032,0.007962,0.009838,0.013670", \
				        "0.009159,0.009317,0.009764,0.010668,0.012511,0.016290");
			}
		}
	}

}


/******************************************************************************************
 Module          	: FILLCELL_X1
 Cell Description	: Physical cell (FILLCELL_X1)
*******************************************************************************************/

cell (FILLCELL_X1) {

	area               	: 0.266000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: FILLCELL_X16
 Cell Description	: Physical cell (FILLCELL_X16)
*******************************************************************************************/

cell (FILLCELL_X16) {

	area               	: 4.256000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: FILLCELL_X2
 Cell Description	: Physical cell (FILLCELL_X2)
*******************************************************************************************/

cell (FILLCELL_X2) {

	area               	: 0.532000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: FILLCELL_X32
 Cell Description	: Physical cell (FILLCELL_X32)
*******************************************************************************************/

cell (FILLCELL_X32) {

	area               	: 8.512000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: FILLCELL_X4
 Cell Description	: Physical cell (FILLCELL_X4)
*******************************************************************************************/

cell (FILLCELL_X4) {

	area               	: 1.064000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: FILLCELL_X8
 Cell Description	: Physical cell (FILLCELL_X8)
*******************************************************************************************/

cell (FILLCELL_X8) {

	area               	: 2.128000;
	dont_touch		: true;
	dont_use		: true;


}


/******************************************************************************************
 Module          	: HA_X1
 Cell Description	: Combinational cell (HA_X1) with drive strength X1
*******************************************************************************************/

cell (HA_X1) {

	area               	: 2.926000;

	cell_leakage_power 	: 19348.295000;

	leakage_power () {
		when      	: "!A & !B";
		value      	: 12145.970000;
	}
	leakage_power () {
		when      	: "A & !B";
		value      	: 12221.390000;
	}
	leakage_power () {
		when      	: "!A & B";
		value      	: 23783.260000;
	}
	leakage_power () {
		when      	: "A & B";
		value      	: 29242.560000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002965;
		fall_capacitance	: 0.002926;
		rise_capacitance	: 0.003005;
		fall_capacitance_range		(0.002554, 0.003175);
		rise_capacitance_range		(0.002701, 0.003311);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001697;
		fall_capacitance	: 0.001669;
		rise_capacitance	: 0.001726;
		fall_capacitance_range		(0.001459, 0.001818);
		rise_capacitance_range		(0.001454, 0.002017);
		max_transition		: 0.960000;
	}

	pin (CO) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A & B)";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.047805,0.051910,0.058943,0.071111,0.092104,0.130735", \
				        "0.051565,0.055668,0.062709,0.074867,0.095822,0.134555", \
				        "0.059579,0.063679,0.070781,0.083023,0.104017,0.142634", \
				        "0.075111,0.079317,0.086531,0.098684,0.119817,0.158386", \
				        "0.097763,0.102584,0.110726,0.124009,0.146293,0.185305", \
				        "0.130698,0.136289,0.145720,0.160806,0.184912,0.225508", \
				        "0.181937,0.188601,0.199689,0.217657,0.245492,0.289716", \
				        "0.265323,0.273484,0.287125,0.309146,0.343394,0.395770");
			}
			cell_rise(Timing_X1) {
				values ("0.042310,0.047729,0.057866,0.077383,0.115081,0.190410", \
				        "0.045370,0.050786,0.060956,0.080470,0.118168,0.193500", \
				        "0.051427,0.056823,0.066875,0.085972,0.123669,0.198979", \
				        "0.059718,0.065227,0.075426,0.094802,0.132354,0.207662", \
				        "0.067819,0.073700,0.084195,0.103656,0.141472,0.216536", \
				        "0.071965,0.078870,0.090615,0.110738,0.148551,0.223512", \
				        "0.064019,0.072418,0.086575,0.109657,0.148907,0.224413", \
				        "0.027087,0.037225,0.054722,0.083575,0.128820,0.206984");
			}
			fall_transition(Timing_X1) {
				values ("0.010437,0.012526,0.016559,0.024174,0.038922,0.069838", \
				        "0.010436,0.012538,0.016518,0.024196,0.038940,0.069867", \
				        "0.010454,0.012567,0.016557,0.024187,0.038944,0.069895", \
				        "0.011261,0.013251,0.017058,0.024559,0.039139,0.069960", \
				        "0.013819,0.015862,0.019659,0.026930,0.040693,0.070456", \
				        "0.017462,0.019687,0.023657,0.030871,0.044393,0.072620", \
				        "0.023222,0.025758,0.030219,0.037878,0.051354,0.077910", \
				        "0.033029,0.036063,0.041343,0.050280,0.065102,0.091380");
			}
			rise_transition(Timing_X1) {
				values ("0.013583,0.017580,0.025826,0.042996,0.078480,0.150052", \
				        "0.013600,0.017571,0.025817,0.042989,0.078496,0.150055", \
				        "0.013677,0.017641,0.025867,0.043011,0.078459,0.150062", \
				        "0.014414,0.018270,0.026327,0.043218,0.078477,0.150063", \
				        "0.016244,0.019758,0.027302,0.043813,0.078733,0.150132", \
				        "0.020000,0.023542,0.030343,0.045550,0.079420,0.150419", \
				        "0.025931,0.030274,0.037607,0.051199,0.082432,0.151942", \
				        "0.035313,0.040565,0.049878,0.064993,0.092357,0.157729");
			}
		}

		timing () {

			related_pin	   : "B";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.060112,0.064484,0.071951,0.084603,0.106401,0.145729", \
				        "0.063817,0.068183,0.075660,0.088247,0.110097,0.149379", \
				        "0.071696,0.076068,0.083571,0.096306,0.118023,0.157430", \
				        "0.088188,0.092543,0.100040,0.112739,0.134477,0.173762", \
				        "0.115588,0.120413,0.128559,0.141954,0.164316,0.203817", \
				        "0.154515,0.160078,0.169408,0.184354,0.208569,0.249482", \
				        "0.214036,0.220542,0.231517,0.248772,0.275786,0.319327", \
				        "0.312349,0.320072,0.332747,0.353512,0.385221,0.434104");
			}
			cell_rise(Timing_X1) {
				values ("0.047440,0.052861,0.062996,0.082509,0.120201,0.195523", \
				        "0.050270,0.055683,0.065875,0.085320,0.123029,0.198375", \
				        "0.055293,0.060698,0.070830,0.090118,0.127676,0.203076", \
				        "0.063133,0.068641,0.078858,0.098241,0.135745,0.211038", \
				        "0.072010,0.077828,0.088319,0.107860,0.145720,0.220930", \
				        "0.077719,0.084344,0.095778,0.115934,0.153960,0.229063", \
				        "0.071450,0.079427,0.093090,0.115405,0.154768,0.230645", \
				        "0.035654,0.045199,0.061716,0.089200,0.132929,0.211399");
			}
			fall_transition(Timing_X1) {
				values ("0.011532,0.013660,0.017702,0.025477,0.040137,0.070783", \
				        "0.011525,0.013670,0.017705,0.025451,0.040070,0.070807", \
				        "0.011551,0.013667,0.017711,0.025359,0.040105,0.070779", \
				        "0.011697,0.013823,0.017825,0.025496,0.040173,0.070788", \
				        "0.014026,0.016037,0.019833,0.026977,0.041221,0.071234", \
				        "0.017622,0.019748,0.023652,0.030830,0.044532,0.073071", \
				        "0.022745,0.025069,0.029226,0.036687,0.050110,0.077002", \
				        "0.030836,0.033475,0.038094,0.046131,0.059984,0.085597");
			}
			rise_transition(Timing_X1) {
				values ("0.013599,0.017567,0.025824,0.042956,0.078424,0.150065", \
				        "0.013590,0.017584,0.025815,0.042984,0.078416,0.150051", \
				        "0.013616,0.017606,0.025807,0.043001,0.078479,0.150046", \
				        "0.014168,0.018044,0.026117,0.043160,0.078508,0.150058", \
				        "0.015518,0.019253,0.027027,0.043681,0.078674,0.150081", \
				        "0.018492,0.022177,0.029479,0.045132,0.079264,0.150267", \
				        "0.023394,0.027724,0.035211,0.049676,0.081997,0.151738", \
				        "0.030491,0.035791,0.044988,0.060192,0.089654,0.157119");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.002427,0.002428,0.002426,0.002426,0.002422,0.002414", \
				        "0.002428,0.002426,0.002428,0.002421,0.002419,0.002411", \
				        "0.002448,0.002439,0.002442,0.002439,0.002436,0.002426", \
				        "0.002540,0.002534,0.002529,0.002524,0.002509,0.002501", \
				        "0.002795,0.002776,0.002757,0.002731,0.002706,0.002673", \
				        "0.003369,0.003337,0.003296,0.003248,0.003187,0.003108", \
				        "0.004692,0.004631,0.004545,0.004437,0.004314,0.004168", \
				        "0.007609,0.007501,0.007347,0.007126,0.006862,0.006578");
			}
			rise_power(Power_X1) {
				values ("0.001078,0.001073,0.001086,0.001087,0.001090,0.001094", \
				        "0.001075,0.001076,0.001082,0.001089,0.001094,0.001098", \
				        "0.001094,0.001093,0.001090,0.001095,0.001101,0.001105", \
				        "0.001159,0.001157,0.001150,0.001145,0.001144,0.001143", \
				        "0.001363,0.001356,0.001328,0.001300,0.001283,0.001262", \
				        "0.001929,0.001899,0.001853,0.001776,0.001696,0.001626", \
				        "0.003293,0.003242,0.003141,0.002997,0.002807,0.002607", \
				        "0.006249,0.006168,0.006025,0.005795,0.005451,0.005006");
			}
		}

		internal_power () {

			related_pin	         : "B";
			fall_power(Power_X1) {
				values ("0.003242,0.003238,0.003236,0.003236,0.003228,0.003211", \
				        "0.003238,0.003234,0.003239,0.003232,0.003221,0.003203", \
				        "0.003260,0.003255,0.003249,0.003245,0.003233,0.003213", \
				        "0.003340,0.003332,0.003328,0.003317,0.003299,0.003277", \
				        "0.003579,0.003564,0.003543,0.003519,0.003496,0.003455", \
				        "0.004136,0.004118,0.004074,0.004024,0.003964,0.003883", \
				        "0.005375,0.005320,0.005249,0.005169,0.005058,0.004902", \
				        "0.007998,0.007933,0.007815,0.007667,0.007467,0.007202");
			}
			rise_power(Power_X1) {
				values ("0.000981,0.000982,0.000984,0.000990,0.000993,0.000999", \
				        "0.000975,0.000976,0.000982,0.000984,0.000990,0.000994", \
				        "0.000962,0.000958,0.000969,0.000974,0.000978,0.000981", \
				        "0.000982,0.000981,0.000978,0.000980,0.000986,0.000988", \
				        "0.001087,0.001073,0.001062,0.001053,0.001049,0.001047", \
				        "0.001475,0.001450,0.001414,0.001364,0.001315,0.001275", \
				        "0.002537,0.002487,0.002422,0.002301,0.002158,0.002011", \
				        "0.005019,0.004942,0.004826,0.004630,0.004337,0.003968");
			}
		}
	}

	pin (S) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A ^ B)";

		timing () {

			related_pin	   : "A";
			when	           : "!B";
			sdf_cond	   : "(B == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.097068,0.100232,0.106273,0.117694,0.139102,0.178757", \
				        "0.100134,0.103309,0.109356,0.120792,0.142187,0.181855", \
				        "0.106965,0.110148,0.116219,0.127773,0.149226,0.188895", \
				        "0.121467,0.124649,0.130706,0.142262,0.163636,0.203264", \
				        "0.146965,0.150312,0.156672,0.168379,0.189906,0.229742", \
				        "0.183491,0.187101,0.193991,0.206406,0.228926,0.269749", \
				        "0.240157,0.244159,0.251773,0.265512,0.289586,0.331948", \
				        "0.331051,0.335925,0.344832,0.361187,0.389178,0.436275");
			}
			cell_rise(Timing_X1) {
				values ("0.113372,0.120008,0.133315,0.159917,0.212784,0.318119", \
				        "0.116721,0.123376,0.136716,0.163243,0.216190,0.321752", \
				        "0.122916,0.129612,0.142916,0.169224,0.221906,0.327613", \
				        "0.131926,0.138711,0.152215,0.178930,0.231862,0.337686", \
				        "0.141536,0.148519,0.162268,0.189307,0.242363,0.348330", \
				        "0.147710,0.154757,0.168776,0.196387,0.250935,0.357974", \
				        "0.147443,0.154483,0.168515,0.196271,0.250739,0.358483", \
				        "0.124807,0.132603,0.147664,0.176414,0.231523,0.339857");
			}
			fall_transition(Timing_X1) {
				values ("0.027914,0.029950,0.034001,0.041956,0.057136,0.087869", \
				        "0.027918,0.029949,0.033977,0.041929,0.057139,0.087861", \
				        "0.027909,0.029936,0.033984,0.041905,0.057149,0.087810", \
				        "0.027967,0.029985,0.034008,0.041946,0.057144,0.087886", \
				        "0.029060,0.031045,0.035019,0.042784,0.057810,0.088172", \
				        "0.030917,0.032860,0.036742,0.044525,0.059318,0.089399", \
				        "0.036652,0.038627,0.042442,0.049775,0.063779,0.092120", \
				        "0.047373,0.049607,0.053842,0.061473,0.075401,0.102382");
			}
			rise_transition(Timing_X1) {
				values ("0.054320,0.060486,0.072814,0.097379,0.146354,0.243848", \
				        "0.054321,0.060499,0.072795,0.097377,0.146358,0.243847", \
				        "0.054325,0.060498,0.072810,0.097419,0.146344,0.243850", \
				        "0.054306,0.060499,0.072797,0.097425,0.146327,0.243857", \
				        "0.053743,0.059930,0.072320,0.097202,0.146358,0.243861", \
				        "0.051596,0.057770,0.070182,0.095143,0.145227,0.243124", \
				        "0.052621,0.058452,0.070233,0.094405,0.143319,0.241352", \
				        "0.059882,0.065033,0.075555,0.097754,0.144701,0.241544");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B";
			sdf_cond	   : "(B == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.022184,0.024940,0.030454,0.041394,0.063219,0.106754", \
				        "0.025299,0.027990,0.033489,0.044458,0.066273,0.109803", \
				        "0.031414,0.034335,0.039729,0.050581,0.072312,0.115705", \
				        "0.038493,0.042495,0.049795,0.062773,0.084921,0.128109", \
				        "0.044361,0.049739,0.059646,0.077197,0.106728,0.153757", \
				        "0.044878,0.052107,0.065538,0.089180,0.128956,0.192728", \
				        "0.030495,0.040509,0.058615,0.090726,0.144341,0.230183", \
				        "-0.017682,-0.004341,0.020052,0.063055,0.135480,0.251516");
			}
			cell_rise(Timing_X1) {
				values ("0.045006,0.051852,0.065481,0.092383,0.145784,0.252050", \
				        "0.048132,0.054958,0.068553,0.095433,0.148820,0.255131", \
				        "0.055027,0.061734,0.075213,0.101908,0.155129,0.261310", \
				        "0.070631,0.076924,0.089644,0.115813,0.168583,0.274300", \
				        "0.095810,0.103949,0.119108,0.146096,0.197406,0.301838", \
				        "0.132533,0.142461,0.161751,0.196651,0.256949,0.360490", \
				        "0.189156,0.202268,0.226041,0.269742,0.346401,0.475324", \
				        "0.283537,0.299646,0.329787,0.384051,0.479400,0.642308");
			}
			fall_transition(Timing_X1) {
				values ("0.015732,0.018278,0.022975,0.032439,0.051118,0.088709", \
				        "0.015682,0.018180,0.022937,0.032437,0.051203,0.088713", \
				        "0.018073,0.019952,0.023856,0.032366,0.051180,0.088707", \
				        "0.025291,0.027303,0.031134,0.037389,0.052478,0.088669", \
				        "0.037529,0.039853,0.044401,0.052424,0.066255,0.093396", \
				        "0.058512,0.061557,0.067250,0.077088,0.094391,0.123425", \
				        "0.095223,0.099087,0.106455,0.119374,0.141330,0.177942", \
				        "0.159963,0.165358,0.175361,0.192925,0.222062,0.268987");
			}
			rise_transition(Timing_X1) {
				values ("0.044062,0.050382,0.062578,0.086740,0.135260,0.232358", \
				        "0.043841,0.050244,0.062517,0.086779,0.135310,0.232354", \
				        "0.042775,0.049511,0.062286,0.086846,0.135330,0.232378", \
				        "0.044809,0.050333,0.061766,0.086333,0.135401,0.232398", \
				        "0.056871,0.061787,0.071111,0.090721,0.135151,0.232449", \
				        "0.076412,0.082556,0.094059,0.114965,0.151801,0.234508", \
				        "0.108955,0.115949,0.129413,0.154673,0.199930,0.275915", \
				        "0.167513,0.175107,0.190536,0.219566,0.273407,0.368493");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A";
			sdf_cond	   : "(A == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.111209,0.114362,0.120388,0.131808,0.153184,0.192810", \
				        "0.114953,0.118123,0.124100,0.135426,0.156763,0.196368", \
				        "0.121652,0.124835,0.130924,0.142271,0.163652,0.203278", \
				        "0.133772,0.136939,0.143023,0.154682,0.176090,0.215723", \
				        "0.154838,0.158135,0.164355,0.176023,0.197503,0.237316", \
				        "0.186358,0.189960,0.196735,0.209272,0.231930,0.272878", \
				        "0.238466,0.242417,0.250177,0.263793,0.288113,0.330954", \
				        "0.323412,0.327925,0.336668,0.352452,0.380000,0.427436");
			}
			cell_rise(Timing_X1) {
				values ("0.104815,0.111621,0.125050,0.151981,0.205129,0.310995", \
				        "0.108101,0.114909,0.128399,0.155450,0.208269,0.314162", \
				        "0.114786,0.121600,0.135073,0.161681,0.214622,0.320566", \
				        "0.126154,0.132993,0.146461,0.173161,0.226128,0.332111", \
				        "0.139696,0.146481,0.160041,0.187023,0.239983,0.346102", \
				        "0.153528,0.160410,0.173967,0.200872,0.253986,0.359986", \
				        "0.162516,0.169509,0.183185,0.210352,0.263776,0.369890", \
				        "0.155124,0.162808,0.177500,0.205578,0.259565,0.366223");
			}
			fall_transition(Timing_X1) {
				values ("0.027771,0.029806,0.033865,0.041801,0.057064,0.087835", \
				        "0.027763,0.029794,0.033856,0.041818,0.057059,0.087800", \
				        "0.027771,0.029798,0.033832,0.041801,0.057022,0.087839", \
				        "0.027829,0.029856,0.033897,0.041804,0.057049,0.087835", \
				        "0.028761,0.030735,0.034695,0.042470,0.057555,0.088097", \
				        "0.030368,0.032403,0.036426,0.044320,0.059354,0.089386", \
				        "0.035018,0.037124,0.041186,0.049067,0.063730,0.092581", \
				        "0.043389,0.045721,0.050153,0.058446,0.073631,0.102429");
			}
			rise_transition(Timing_X1) {
				values ("0.044028,0.050148,0.062260,0.086647,0.135254,0.232362", \
				        "0.044026,0.050147,0.062260,0.086635,0.135297,0.232331", \
				        "0.044027,0.050142,0.062238,0.086632,0.135290,0.232327", \
				        "0.044042,0.050152,0.062260,0.086618,0.135256,0.232360", \
				        "0.043837,0.049957,0.062123,0.086638,0.135260,0.232356", \
				        "0.044375,0.050307,0.062189,0.086242,0.134759,0.232149", \
				        "0.046454,0.052036,0.063474,0.087165,0.135260,0.231882", \
				        "0.053038,0.057996,0.068322,0.090231,0.136850,0.233091");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A";
			sdf_cond	   : "(A == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026944,0.029696,0.035201,0.046152,0.067993,0.111512", \
				        "0.029787,0.032526,0.038071,0.048990,0.070813,0.114374", \
				        "0.034838,0.037733,0.043326,0.054179,0.075976,0.119512", \
				        "0.041986,0.045406,0.051807,0.063742,0.086014,0.129582", \
				        "0.049558,0.054018,0.062377,0.077379,0.103515,0.149611", \
				        "0.052840,0.059276,0.070994,0.091487,0.125808,0.181674", \
				        "0.043124,0.052014,0.068543,0.097454,0.145252,0.220305", \
				        "0.000995,0.014041,0.036986,0.077560,0.144435,0.249222");
			}
			cell_rise(Timing_X1) {
				values ("0.062016,0.068800,0.082386,0.109317,0.162832,0.269255", \
				        "0.065143,0.071939,0.085445,0.112328,0.165877,0.272303", \
				        "0.071998,0.078729,0.092181,0.118939,0.172240,0.278582", \
				        "0.086706,0.093343,0.106565,0.132989,0.185871,0.291782", \
				        "0.116527,0.123739,0.137507,0.162936,0.214814,0.319518", \
				        "0.159710,0.168849,0.186547,0.218909,0.275940,0.378335", \
				        "0.225458,0.237303,0.259040,0.299973,0.372777,0.496786", \
				        "0.334421,0.348819,0.376269,0.426634,0.516672,0.673409");
			}
			fall_transition(Timing_X1) {
				values ("0.015689,0.018174,0.022905,0.032427,0.051168,0.088724", \
				        "0.015683,0.018176,0.022852,0.032420,0.051178,0.088698", \
				        "0.016594,0.018823,0.023376,0.032305,0.051258,0.088667", \
				        "0.020670,0.022735,0.026923,0.034608,0.051846,0.088646", \
				        "0.029462,0.031471,0.035667,0.043075,0.058388,0.090949", \
				        "0.045499,0.047921,0.052409,0.060600,0.075654,0.105732", \
				        "0.073354,0.076175,0.081982,0.092016,0.109564,0.140722", \
				        "0.119590,0.123823,0.131593,0.145409,0.168837,0.206938");
			}
			rise_transition(Timing_X1) {
				values ("0.054208,0.060511,0.072938,0.097390,0.146347,0.243832", \
				        "0.054185,0.060505,0.072918,0.097455,0.146356,0.243859", \
				        "0.053975,0.060347,0.072859,0.097448,0.146347,0.243869", \
				        "0.053493,0.059610,0.072051,0.097326,0.146309,0.243877", \
				        "0.062872,0.067608,0.077739,0.098970,0.145916,0.243878", \
				        "0.082821,0.089068,0.100445,0.120884,0.158623,0.244739", \
				        "0.112792,0.120480,0.134806,0.160776,0.206010,0.281895", \
				        "0.161583,0.170534,0.188240,0.220036,0.276980,0.373793");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B";

			fall_power(Power_X1) {
				values ("0.005775,0.005513,0.005029,0.004044,0.002077,-0.001824", \
				        "0.005787,0.005527,0.005033,0.004048,0.002080,-0.001800", \
				        "0.005815,0.005560,0.005052,0.004075,0.002109,-0.001801", \
				        "0.005893,0.005636,0.005142,0.004156,0.002194,-0.001706", \
				        "0.006087,0.005849,0.005347,0.004364,0.002415,-0.001489", \
				        "0.006577,0.006329,0.005843,0.004866,0.002909,-0.000994", \
				        "0.007741,0.007505,0.006992,0.006009,0.004050,0.000139", \
				        "0.010398,0.010125,0.009619,0.008624,0.006649,0.002717");
			}
			rise_power(Power_X1) {
				values ("0.003796,0.004050,0.004502,0.005457,0.007371,0.011217", \
				        "0.003800,0.004036,0.004512,0.005467,0.007380,0.011228", \
				        "0.003802,0.004044,0.004513,0.005481,0.007397,0.011247", \
				        "0.003844,0.004082,0.004563,0.005519,0.007446,0.011303", \
				        "0.004018,0.004250,0.004743,0.005713,0.007639,0.011504", \
				        "0.004526,0.004754,0.005256,0.006210,0.008163,0.012034", \
				        "0.005705,0.005935,0.006425,0.007411,0.009359,0.013239", \
				        "0.008335,0.008591,0.009062,0.010035,0.011983,0.015874");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B";

			rise_power(Power_X1) {
				values ("0.002432,0.002431,0.002424,0.002428,0.002426,0.002426", \
				        "0.002430,0.002426,0.002426,0.002428,0.002424,0.002425", \
				        "0.002449,0.002448,0.002451,0.002446,0.002440,0.002442", \
				        "0.002549,0.002544,0.002541,0.002530,0.002519,0.002511", \
				        "0.002800,0.002783,0.002769,0.002746,0.002713,0.002690", \
				        "0.003374,0.003345,0.003310,0.003257,0.003193,0.003118", \
				        "0.004687,0.004638,0.004554,0.004450,0.004324,0.004179", \
				        "0.007605,0.007504,0.007352,0.007132,0.006873,0.006592");
			}
			fall_power(Power_X1) {
				values ("0.001076,0.001076,0.001075,0.001082,0.001091,0.001096", \
				        "0.001077,0.001080,0.001084,0.001087,0.001095,0.001098", \
				        "0.001094,0.001094,0.001093,0.001096,0.001101,0.001103", \
				        "0.001160,0.001158,0.001153,0.001146,0.001145,0.001145", \
				        "0.001370,0.001352,0.001334,0.001309,0.001283,0.001262", \
				        "0.001936,0.001902,0.001851,0.001779,0.001695,0.001626", \
				        "0.003293,0.003239,0.003145,0.003000,0.002808,0.002606", \
				        "0.006257,0.006171,0.006027,0.005796,0.005453,0.005007");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A";

			fall_power(Power_X1) {
				values ("0.006003,0.005765,0.005262,0.004276,0.002311,-0.001598", \
				        "0.005994,0.005750,0.005244,0.004259,0.002283,-0.001616", \
				        "0.005997,0.005726,0.005229,0.004251,0.002281,-0.001628", \
				        "0.005973,0.005723,0.005229,0.004243,0.002282,-0.001625", \
				        "0.006011,0.005757,0.005261,0.004282,0.002342,-0.001559", \
				        "0.006253,0.005987,0.005507,0.004536,0.002591,-0.001305", \
				        "0.007100,0.006861,0.006352,0.005383,0.003428,-0.000468", \
				        "0.009279,0.009030,0.008504,0.007512,0.005556,0.001641");
			}
			rise_power(Power_X1) {
				values ("0.003398,0.003640,0.004128,0.005095,0.007040,0.010908", \
				        "0.003387,0.003643,0.004114,0.005090,0.007031,0.010910", \
				        "0.003388,0.003641,0.004104,0.005086,0.007030,0.010902", \
				        "0.003408,0.003641,0.004132,0.005112,0.007053,0.010937", \
				        "0.003519,0.003772,0.004251,0.005232,0.007175,0.011059", \
				        "0.003903,0.004146,0.004640,0.005620,0.007570,0.011456", \
				        "0.004912,0.005158,0.005640,0.006626,0.008576,0.012465", \
				        "0.007214,0.007445,0.007941,0.008913,0.010859,0.014749");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A";

			rise_power(Power_X1) {
				values ("0.003247,0.003252,0.003249,0.003248,0.003240,0.003243", \
				        "0.003254,0.003244,0.003245,0.003242,0.003237,0.003238", \
				        "0.003265,0.003257,0.003260,0.003255,0.003252,0.003244", \
				        "0.003347,0.003339,0.003337,0.003328,0.003315,0.003307", \
				        "0.003580,0.003573,0.003564,0.003542,0.003508,0.003485", \
				        "0.004147,0.004124,0.004085,0.004041,0.003976,0.003906", \
				        "0.005371,0.005325,0.005268,0.005182,0.005069,0.004921", \
				        "0.007999,0.007928,0.007829,0.007678,0.007482,0.007221");
			}
			fall_power(Power_X1) {
				values ("0.000979,0.000978,0.000981,0.000987,0.000993,0.000998", \
				        "0.000972,0.000973,0.000976,0.000981,0.000990,0.000996", \
				        "0.000963,0.000963,0.000969,0.000972,0.000978,0.000982", \
				        "0.000977,0.000978,0.000981,0.000983,0.000986,0.000987", \
				        "0.001084,0.001076,0.001069,0.001057,0.001047,0.001048", \
				        "0.001480,0.001445,0.001416,0.001363,0.001314,0.001274", \
				        "0.002540,0.002497,0.002422,0.002307,0.002162,0.002010", \
				        "0.005017,0.004944,0.004825,0.004630,0.004339,0.003966");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X1
 Cell Description	: Combinational cell (INV_X1) with drive strength X1
*******************************************************************************************/

cell (INV_X1) {

	area               	: 0.532000;

	cell_leakage_power 	: 2843.754500;

	leakage_power () {
		when      	: "!A";
		value      	: 1995.996000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 3691.513000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000437;
		fall_capacitance	: 0.000420;
		rise_capacitance	: 0.000454;
		fall_capacitance_range		(0.000364, 0.000509);
		rise_capacitance_range		(0.000376, 0.000535);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.010236,0.012577,0.017326,0.026832,0.045670,0.083319", \
				        "0.012788,0.015710,0.020714,0.030113,0.048977,0.086636", \
				        "0.015262,0.019300,0.025957,0.036921,0.055703,0.093168", \
				        "0.016901,0.022426,0.031713,0.046540,0.069208,0.106753", \
				        "0.015846,0.023324,0.035824,0.056156,0.087381,0.134010", \
				        "0.007972,0.018021,0.034934,0.062272,0.104727,0.168789", \
				        "-0.015098,-0.001875,0.020710,0.057423,0.114664,0.201555", \
				        "-0.069637,-0.052945,-0.023628,0.024992,0.101746,0.219048");
			}
			cell_rise(Timing_X1) {
				values ("0.016922,0.021695,0.031270,0.050115,0.087862,0.163230", \
				        "0.020974,0.025595,0.035045,0.053733,0.091419,0.166826", \
				        "0.027978,0.033659,0.043148,0.061623,0.099080,0.174300", \
				        "0.037488,0.045116,0.057987,0.078217,0.115083,0.189799", \
				        "0.051370,0.061214,0.078255,0.105829,0.148261,0.221928", \
				        "0.073223,0.085671,0.107359,0.143514,0.201099,0.288236", \
				        "0.109626,0.125262,0.152654,0.198642,0.273672,0.391528", \
				        "0.174170,0.193182,0.227313,0.285399,0.380709,0.533769");
			}
			fall_transition(Timing_X1) {
				values ("0.005340,0.007189,0.011272,0.019516,0.035942,0.068685", \
				        "0.007350,0.008736,0.011732,0.019438,0.035884,0.068674", \
				        "0.010665,0.012598,0.016162,0.021415,0.035952,0.068676", \
				        "0.016158,0.018589,0.023007,0.029477,0.040160,0.068755", \
				        "0.025668,0.028737,0.034203,0.042692,0.056228,0.077866", \
				        "0.042626,0.046633,0.053433,0.064474,0.082246,0.110068", \
				        "0.073762,0.078931,0.087904,0.102293,0.125173,0.161476", \
				        "0.133647,0.139626,0.150810,0.169808,0.199926,0.246669");
			}
			rise_transition(Timing_X1) {
				values ("0.011101,0.015657,0.024632,0.042652,0.078407,0.149971", \
				        "0.011612,0.015676,0.024877,0.042736,0.078377,0.149981", \
				        "0.015450,0.018451,0.025710,0.042711,0.078310,0.149989", \
				        "0.021709,0.025823,0.032648,0.045271,0.078395,0.149975", \
				        "0.030978,0.036360,0.045859,0.060057,0.084866,0.149969", \
				        "0.046643,0.053102,0.064951,0.084544,0.114741,0.164266", \
				        "0.075814,0.083042,0.096740,0.121070,0.161886,0.224044", \
				        "0.133670,0.140685,0.155359,0.183380,0.233343,0.316535");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("-0.000102,-0.000339,-0.000820,-0.001785,-0.003723,-0.007588", \
				        "-0.000102,-0.000337,-0.000816,-0.001783,-0.003722,-0.007587", \
				        "-0.000081,-0.000322,-0.000797,-0.001765,-0.003711,-0.007575", \
				        "0.000004,-0.000258,-0.000752,-0.001732,-0.003681,-0.007562", \
				        "0.000255,-0.000041,-0.000589,-0.001623,-0.003612,-0.007520", \
				        "0.000863,0.000525,-0.000101,-0.001248,-0.003353,-0.007353", \
				        "0.002190,0.001809,0.001096,-0.000208,-0.002552,-0.006801", \
				        "0.004944,0.004524,0.003727,0.002254,-0.000408,-0.005151");
			}
			rise_power(Power_X1) {
				values ("0.000896,0.001143,0.001629,0.002608,0.004548,0.008421", \
				        "0.000905,0.001148,0.001633,0.002605,0.004541,0.008414", \
				        "0.000946,0.001180,0.001659,0.002618,0.004547,0.008415", \
				        "0.001050,0.001277,0.001742,0.002681,0.004590,0.008441", \
				        "0.001302,0.001508,0.001950,0.002860,0.004728,0.008535", \
				        "0.001891,0.002058,0.002442,0.003292,0.005096,0.008823", \
				        "0.003197,0.003309,0.003599,0.004319,0.005986,0.009576", \
				        "0.005940,0.006002,0.006182,0.006699,0.008082,0.011380");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X16
 Cell Description	: Combinational cell (INV_X16) with drive strength X16
*******************************************************************************************/

cell (INV_X16) {

	area               	: 1.330000;

	cell_leakage_power 	: 49542.075000;

	leakage_power () {
		when      	: "!A";
		value      	: 34918.980000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 64165.170000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.005511;
		fall_capacitance	: 0.005217;
		rise_capacitance	: 0.005805;
		fall_capacitance_range		(0.004371, 0.006725);
		rise_capacitance_range		(0.004448, 0.007143);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.204800;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X16) {
				values ("0.007379,0.012191,0.016690,0.025647,0.043589,0.079331", \
				        "0.008551,0.015125,0.020062,0.028958,0.046875,0.082535", \
				        "0.009313,0.018237,0.025073,0.035721,0.053574,0.089091", \
				        "0.008670,0.020665,0.029965,0.044618,0.066831,0.102600", \
				        "0.004523,0.020646,0.033062,0.053028,0.083630,0.129177", \
				        "-0.007371,0.013996,0.030805,0.057647,0.099099,0.161634", \
				        "-0.035286,-0.007766,0.014563,0.050566,0.106478,0.191109", \
				        "-0.095053,-0.061484,-0.032679,0.014875,0.089723,0.203874");
			}
			cell_rise(Timing_X16) {
				values ("0.011483,0.020241,0.029317,0.047435,0.083301,0.154939", \
				        "0.014934,0.024196,0.033117,0.051099,0.086936,0.158590", \
				        "0.019540,0.031894,0.041262,0.058895,0.094570,0.166086", \
				        "0.026416,0.042559,0.055342,0.075433,0.110479,0.181500", \
				        "0.037365,0.057837,0.074584,0.101789,0.143500,0.213565", \
				        "0.055788,0.081509,0.102802,0.138111,0.194347,0.279470", \
				        "0.088544,0.120362,0.147224,0.192001,0.264788,0.379327", \
				        "0.150693,0.187970,0.221251,0.277706,0.370031,0.518046");
			}
			fall_transition(Timing_X16) {
				values ("0.003558,0.006308,0.010107,0.017901,0.033496,0.064741", \
				        "0.005218,0.008079,0.010815,0.017907,0.033514,0.064741", \
				        "0.007928,0.011741,0.014711,0.020003,0.033524,0.064687", \
				        "0.012701,0.017612,0.021588,0.028119,0.038504,0.064957", \
				        "0.021156,0.027591,0.032901,0.041253,0.054425,0.075227", \
				        "0.036714,0.045128,0.051829,0.062671,0.079882,0.107050", \
				        "0.066537,0.076965,0.085859,0.099977,0.122266,0.157416", \
				        "0.126691,0.137328,0.148179,0.166735,0.196133,0.241523");
			}
			rise_transition(Timing_X16) {
				values ("0.005632,0.013642,0.022173,0.039369,0.073401,0.141431", \
				        "0.007739,0.013876,0.022176,0.039379,0.073361,0.141410", \
				        "0.010822,0.017097,0.023346,0.039267,0.073396,0.141434", \
				        "0.015381,0.024098,0.030747,0.042512,0.073373,0.141431", \
				        "0.023195,0.034090,0.043244,0.057570,0.081018,0.141436", \
				        "0.037892,0.050342,0.061862,0.081063,0.110870,0.157856", \
				        "0.066867,0.079950,0.093121,0.116640,0.156283,0.217255", \
				        "0.126703,0.137739,0.151444,0.178179,0.226210,0.306788");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X16) {
				values ("0.001640,-0.005655,-0.013314,-0.028754,-0.059707,-0.121654", \
				        "0.001786,-0.005642,-0.013311,-0.028718,-0.059664,-0.121566", \
				        "0.002470,-0.005321,-0.013099,-0.028571,-0.059534,-0.121361", \
				        "0.004616,-0.004022,-0.012132,-0.027896,-0.059040,-0.121105", \
				        "0.009824,-0.000030,-0.008992,-0.025704,-0.057668,-0.120335", \
				        "0.021178,0.009953,-0.000309,-0.018977,-0.053043,-0.117338", \
				        "0.044662,0.032186,0.020544,-0.000712,-0.038804,-0.107502", \
				        "0.092297,0.078801,0.065838,0.041874,-0.001396,-0.078330");
			}
			rise_power(Power_X16) {
				values ("0.008526,0.016203,0.024039,0.039702,0.070766,0.132752", \
				        "0.008872,0.016310,0.024065,0.039632,0.070705,0.132718", \
				        "0.009790,0.016926,0.024508,0.039882,0.070805,0.132738", \
				        "0.011985,0.018638,0.025968,0.040997,0.071539,0.133140", \
				        "0.017086,0.022784,0.029687,0.044128,0.073972,0.134830", \
				        "0.028312,0.032509,0.038385,0.051735,0.080392,0.139874", \
				        "0.051735,0.054327,0.058601,0.069630,0.095878,0.152938", \
				        "0.099336,0.100685,0.103223,0.110960,0.132326,0.184222");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X2
 Cell Description	: Combinational cell (INV_X2) with drive strength X2
*******************************************************************************************/

cell (INV_X2) {

	area               	: 0.532000;

	cell_leakage_power 	: 6024.299000;

	leakage_power () {
		when      	: "!A";
		value      	: 4240.510000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 7808.088000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000784;
		fall_capacitance	: 0.000751;
		rise_capacitance	: 0.000816;
		fall_capacitance_range		(0.000612, 0.000929);
		rise_capacitance_range		(0.000659, 0.000980);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.007863,0.011507,0.016049,0.025160,0.043301,0.079509", \
				        "0.009439,0.014309,0.019467,0.028497,0.046569,0.082735", \
				        "0.010675,0.017351,0.024359,0.035242,0.053285,0.089323", \
				        "0.010673,0.019758,0.029176,0.044080,0.066588,0.102812", \
				        "0.007407,0.019625,0.032354,0.052572,0.083574,0.129538", \
				        "-0.003376,0.012886,0.030021,0.057314,0.099272,0.162419", \
				        "-0.030038,-0.008961,0.013822,0.050411,0.107005,0.192497", \
				        "-0.088535,-0.062610,-0.033248,0.015055,0.090836,0.206164");
			}
			cell_rise(Timing_X2) {
				values ("0.012642,0.019505,0.028641,0.046972,0.083423,0.156180", \
				        "0.016519,0.023477,0.032507,0.050667,0.087096,0.159845", \
				        "0.021823,0.031161,0.040750,0.058597,0.094682,0.167258", \
				        "0.029414,0.041728,0.054803,0.075152,0.110664,0.182728", \
				        "0.041188,0.056868,0.073995,0.101574,0.143766,0.214880", \
				        "0.060556,0.080302,0.102061,0.137968,0.194958,0.280958", \
				        "0.094275,0.118831,0.146271,0.191829,0.265706,0.381595", \
				        "0.156911,0.185978,0.219950,0.277394,0.371095,0.521054");
			}
			fall_transition(Timing_X2) {
				values ("0.004028,0.006319,0.010069,0.017961,0.033761,0.065291", \
				        "0.005818,0.008283,0.010879,0.017958,0.033767,0.065277", \
				        "0.008738,0.011739,0.014891,0.020118,0.033766,0.065291", \
				        "0.013686,0.017516,0.021944,0.028255,0.038684,0.065504", \
				        "0.022453,0.027369,0.032715,0.041327,0.054643,0.075586", \
				        "0.038388,0.044843,0.051668,0.062700,0.080122,0.107512", \
				        "0.068548,0.076590,0.085635,0.099964,0.122543,0.158081", \
				        "0.128268,0.136863,0.147874,0.166712,0.196454,0.242314");
			}
			rise_transition(Timing_X2) {
				values ("0.007014,0.013623,0.022512,0.039548,0.074165,0.143243", \
				        "0.008678,0.013838,0.022211,0.039579,0.074164,0.143248", \
				        "0.012298,0.017122,0.023411,0.039586,0.074175,0.143246", \
				        "0.017320,0.024016,0.030892,0.042870,0.074173,0.143224", \
				        "0.025455,0.033913,0.043381,0.058016,0.081527,0.143231", \
				        "0.040271,0.050084,0.061799,0.081343,0.111492,0.159200", \
				        "0.069142,0.079606,0.093043,0.117024,0.157215,0.218736", \
				        "0.128073,0.137245,0.151254,0.178521,0.227340,0.308953");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("-0.000097,-0.000800,-0.001760,-0.003693,-0.007565,-0.015294", \
				        "-0.000083,-0.000793,-0.001754,-0.003688,-0.007559,-0.015287", \
				        "-0.000020,-0.000758,-0.001722,-0.003666,-0.007540,-0.015271", \
				        "0.000212,-0.000607,-0.001605,-0.003583,-0.007478,-0.015235", \
				        "0.000817,-0.000120,-0.001237,-0.003326,-0.007319,-0.015144", \
				        "0.002175,0.001106,-0.000176,-0.002507,-0.006756,-0.014782", \
				        "0.005027,0.003835,0.002377,-0.000276,-0.005025,-0.013591", \
				        "0.010848,0.009552,0.007931,0.004938,-0.000456,-0.010043");
			}
			rise_power(Power_X2) {
				values ("0.001315,0.002056,0.003040,0.004991,0.008868,0.016615", \
				        "0.001348,0.002071,0.003043,0.004984,0.008862,0.016612", \
				        "0.001449,0.002148,0.003098,0.005018,0.008875,0.016610", \
				        "0.001689,0.002356,0.003280,0.005152,0.008969,0.016663", \
				        "0.002283,0.002860,0.003728,0.005537,0.009263,0.016873", \
				        "0.003612,0.004045,0.004785,0.006460,0.010051,0.017492", \
				        "0.006447,0.006718,0.007254,0.008645,0.011940,0.019083", \
				        "0.012260,0.012399,0.012723,0.013697,0.016382,0.022902");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X32
 Cell Description	: Combinational cell (INV_X32) with drive strength X32
*******************************************************************************************/

cell (INV_X32) {

	area               	: 2.128000;

	cell_leakage_power 	: 99658.900000;

	leakage_power () {
		when      	: "!A";
		value      	: 70274.100000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 129043.700000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.010717;
		fall_capacitance	: 0.010243;
		rise_capacitance	: 0.011192;
		fall_capacitance_range		(0.008274, 0.013353);
		rise_capacitance_range		(0.008023, 0.014172);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.409600;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X32) {
				values ("0.008071,0.013113,0.017662,0.026708,0.044740,0.080793", \
				        "0.009298,0.016029,0.020983,0.029976,0.047949,0.083964", \
				        "0.010061,0.019204,0.026046,0.036714,0.054664,0.090488", \
				        "0.009438,0.021685,0.031019,0.045695,0.067934,0.103905", \
				        "0.005293,0.021753,0.034180,0.054238,0.084884,0.130525", \
				        "-0.006561,0.015227,0.032056,0.058924,0.100466,0.163173", \
				        "-0.034514,-0.006443,0.015913,0.051996,0.108014,0.192876", \
				        "-0.094211,-0.059996,-0.031165,0.016476,0.091494,0.205923");
			}
			cell_rise(Timing_X32) {
				values ("0.012009,0.021069,0.030180,0.048234,0.084250,0.156043", \
				        "0.015351,0.024953,0.033933,0.051951,0.087876,0.159641", \
				        "0.019902,0.032587,0.042019,0.059744,0.095446,0.167100", \
				        "0.026771,0.043238,0.056044,0.076203,0.111323,0.182514", \
				        "0.037744,0.058559,0.075314,0.102543,0.144313,0.214538", \
				        "0.056217,0.082306,0.103557,0.138863,0.195090,0.280335", \
				        "0.088985,0.121268,0.148054,0.192766,0.265518,0.380114", \
				        "0.151150,0.188995,0.222208,0.278600,0.370838,0.518791");
			}
			fall_transition(Timing_X32) {
				values ("0.003455,0.006405,0.010218,0.018067,0.033794,0.065334", \
				        "0.005194,0.008041,0.010859,0.018083,0.033819,0.065314", \
				        "0.007955,0.011761,0.014796,0.020124,0.033833,0.065364", \
				        "0.012759,0.017708,0.021616,0.028199,0.038739,0.065561", \
				        "0.021254,0.027716,0.033044,0.041344,0.054577,0.075678", \
				        "0.036799,0.045325,0.052049,0.062810,0.080131,0.107385", \
				        "0.066637,0.077239,0.086138,0.100266,0.122603,0.157879", \
				        "0.126738,0.137621,0.148538,0.167109,0.196584,0.242116");
			}
			rise_transition(Timing_X32) {
				values ("0.005535,0.013580,0.022083,0.039254,0.073398,0.141560", \
				        "0.007572,0.013766,0.022163,0.039330,0.073418,0.141552", \
				        "0.010574,0.016999,0.023231,0.039277,0.073377,0.141559", \
				        "0.015118,0.023988,0.030675,0.042656,0.073359,0.141544", \
				        "0.023026,0.033985,0.043123,0.057529,0.081071,0.141580", \
				        "0.037772,0.050312,0.061712,0.081023,0.110899,0.157985", \
				        "0.066884,0.080049,0.093121,0.116655,0.156310,0.217388", \
				        "0.126753,0.137931,0.151649,0.178334,0.226320,0.306928");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X32) {
				values ("0.002831,-0.011870,-0.027205,-0.058079,-0.120044,-0.243978", \
				        "0.003321,-0.011866,-0.027153,-0.057964,-0.119924,-0.243783", \
				        "0.004805,-0.011169,-0.026720,-0.057710,-0.119663,-0.243504", \
				        "0.009260,-0.008479,-0.024766,-0.056318,-0.118594,-0.242795", \
				        "0.019743,-0.000407,-0.018376,-0.051904,-0.115881,-0.241214", \
				        "0.042515,0.019654,-0.000885,-0.038328,-0.106549,-0.235183", \
				        "0.089577,0.064165,0.040848,-0.001711,-0.077979,-0.215455", \
				        "0.184915,0.157433,0.131499,0.083556,-0.003048,-0.157021");
			}
			rise_power(Power_X32) {
				values ("0.016344,0.031865,0.047619,0.078896,0.141044,0.265038", \
				        "0.017044,0.032111,0.047669,0.078803,0.140944,0.264956", \
				        "0.018980,0.033371,0.048531,0.079294,0.141140,0.264997", \
				        "0.023541,0.036853,0.051463,0.081482,0.142598,0.265864", \
				        "0.033973,0.045265,0.058933,0.087783,0.147430,0.269151", \
				        "0.056567,0.064845,0.076493,0.103074,0.160297,0.279186", \
				        "0.103554,0.108674,0.117092,0.139054,0.191319,0.305285", \
				        "0.198848,0.201485,0.206576,0.221921,0.264370,0.367947");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X4
 Cell Description	: Combinational cell (INV_X4) with drive strength X4
*******************************************************************************************/

cell (INV_X4) {

	area               	: 0.532000;

	cell_leakage_power 	: 12385.446500;

	leakage_power () {
		when      	: "!A";
		value      	: 8729.633000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 16041.260000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001463;
		fall_capacitance	: 0.001388;
		rise_capacitance	: 0.001539;
		fall_capacitance_range		(0.001123, 0.001761);
		rise_capacitance_range		(0.001254, 0.001865);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.006606,0.011074,0.015571,0.024454,0.042213,0.077778", \
				        "0.007653,0.013798,0.018941,0.027803,0.045565,0.081075", \
				        "0.008236,0.016531,0.023634,0.034488,0.052269,0.087632", \
				        "0.007382,0.018559,0.028097,0.043057,0.065469,0.101117", \
				        "0.002981,0.017984,0.030810,0.051018,0.081867,0.127587", \
				        "-0.009249,0.010626,0.027831,0.055181,0.096902,0.159571", \
				        "-0.037557,-0.012084,0.010795,0.047335,0.103621,0.188443", \
				        "-0.097645,-0.066857,-0.037492,0.010647,0.085998,0.200375");
			}
			cell_rise(Timing_X4) {
				values ("0.010751,0.018656,0.027646,0.045697,0.081485,0.153046", \
				        "0.014093,0.022616,0.031459,0.049424,0.085172,0.156687", \
				        "0.018550,0.030070,0.039704,0.057238,0.092797,0.164148", \
				        "0.025215,0.040226,0.053419,0.073815,0.108756,0.179599", \
				        "0.035920,0.054931,0.072129,0.099701,0.141740,0.211722", \
				        "0.054033,0.077916,0.099690,0.135503,0.192130,0.277604", \
				        "0.086571,0.115953,0.143386,0.188755,0.262052,0.376989", \
				        "0.148692,0.182775,0.216642,0.273777,0.366688,0.515148");
			}
			fall_transition(Timing_X4) {
				values ("0.003504,0.005885,0.009561,0.017297,0.032778,0.063862", \
				        "0.005052,0.007867,0.010460,0.017307,0.032804,0.063862", \
				        "0.007746,0.011336,0.014410,0.019537,0.032841,0.063840", \
				        "0.012388,0.017062,0.021184,0.027695,0.038023,0.064114", \
				        "0.020754,0.026721,0.032121,0.040694,0.053963,0.074634", \
				        "0.036177,0.044025,0.050890,0.061915,0.079189,0.106423", \
				        "0.066057,0.075536,0.084631,0.098917,0.121324,0.156545", \
				        "0.126216,0.135654,0.146618,0.165376,0.194919,0.240356");
			}
			rise_transition(Timing_X4) {
				values ("0.005463,0.012621,0.021141,0.038060,0.072101,0.140046", \
				        "0.007602,0.013037,0.021199,0.038155,0.072184,0.140082", \
				        "0.010539,0.016550,0.022529,0.038227,0.072171,0.140085", \
				        "0.015001,0.023164,0.030116,0.041747,0.072178,0.140047", \
				        "0.022712,0.032780,0.042296,0.056806,0.080110,0.140152", \
				        "0.037262,0.048719,0.060376,0.079908,0.109903,0.156809", \
				        "0.066340,0.078097,0.091374,0.115145,0.155048,0.216246", \
				        "0.126199,0.135813,0.149454,0.176361,0.224581,0.305396");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X4) {
				values ("-0.000072,-0.001723,-0.003644,-0.007506,-0.015229,-0.030706", \
				        "-0.000050,-0.001710,-0.003634,-0.007495,-0.015229,-0.030708", \
				        "0.000126,-0.001624,-0.003574,-0.007458,-0.015186,-0.030660", \
				        "0.000671,-0.001298,-0.003324,-0.007286,-0.015065,-0.030584", \
				        "0.001987,-0.000272,-0.002530,-0.006728,-0.014727,-0.030393", \
				        "0.004837,0.002275,-0.000319,-0.005018,-0.013555,-0.029636", \
				        "0.010733,0.007887,0.004943,-0.000405,-0.009964,-0.027163", \
				        "0.022668,0.019602,0.016333,0.010306,-0.000550,-0.019824");
			}
			rise_power(Power_X4) {
				values ("0.002173,0.003902,0.005869,0.009777,0.017541,0.033040", \
				        "0.002260,0.003931,0.005871,0.009765,0.017525,0.033024", \
				        "0.002487,0.004096,0.005996,0.009832,0.017553,0.033030", \
				        "0.003034,0.004537,0.006371,0.010119,0.017742,0.033137", \
				        "0.004312,0.005583,0.007297,0.010905,0.018353,0.033562", \
				        "0.007126,0.008045,0.009492,0.012814,0.019968,0.034834", \
				        "0.013004,0.013556,0.014587,0.017321,0.023855,0.038112", \
				        "0.024934,0.025211,0.025820,0.027706,0.033010,0.045964");
			}
		}
	}

}


/******************************************************************************************
 Module          	: INV_X8
 Cell Description	: Combinational cell (INV_X8) with drive strength X8
*******************************************************************************************/

cell (INV_X8) {

	area               	: 0.798000;

	cell_leakage_power 	: 24770.935000;

	leakage_power () {
		when      	: "!A";
		value      	: 17459.330000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 32082.540000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002813;
		fall_capacitance	: 0.002668;
		rise_capacitance	: 0.002957;
		fall_capacitance_range		(0.002202, 0.003431);
		rise_capacitance_range		(0.002337, 0.003640);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.102400;
		max_transition		: 0.960000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X8) {
				values ("0.007142,0.011800,0.016266,0.025193,0.043046,0.078670", \
				        "0.008376,0.014719,0.019652,0.028537,0.046324,0.081894", \
				        "0.009184,0.017763,0.024626,0.035254,0.053021,0.088456", \
				        "0.008584,0.020146,0.029428,0.044096,0.066286,0.101939", \
				        "0.004499,0.020034,0.032442,0.052399,0.082972,0.128468", \
				        "-0.007288,0.013271,0.030069,0.056925,0.098323,0.160751", \
				        "-0.035170,-0.008643,0.013703,0.049669,0.105524,0.190002", \
				        "-0.094942,-0.062581,-0.033789,0.013726,0.088491,0.202448");
			}
			cell_rise(Timing_X8) {
				values ("0.011409,0.019852,0.028919,0.046943,0.082818,0.154389", \
				        "0.014960,0.023834,0.032700,0.050673,0.086485,0.158068", \
				        "0.019659,0.031550,0.040899,0.058515,0.094078,0.165544", \
				        "0.026610,0.042163,0.054961,0.075060,0.110038,0.180974", \
				        "0.037640,0.057407,0.074223,0.101380,0.143051,0.213029", \
				        "0.056194,0.081017,0.102347,0.137652,0.193878,0.278968", \
				        "0.089089,0.119822,0.146703,0.191494,0.264306,0.378799", \
				        "0.151415,0.187432,0.220736,0.277202,0.369514,0.517480");
			}
			fall_transition(Timing_X8) {
				values ("0.003682,0.006307,0.010037,0.017802,0.033330,0.064411", \
				        "0.005285,0.008101,0.010773,0.017801,0.033359,0.064405", \
				        "0.008015,0.011804,0.014673,0.019920,0.033364,0.064416", \
				        "0.012779,0.017566,0.021562,0.028050,0.038375,0.064660", \
				        "0.021264,0.027476,0.032804,0.041161,0.054336,0.075017", \
				        "0.036842,0.044971,0.051672,0.062548,0.079695,0.106854", \
				        "0.066708,0.076754,0.085653,0.099759,0.122023,0.157114", \
				        "0.126842,0.137100,0.147929,0.166467,0.195817,0.241114");
			}
			rise_transition(Timing_X8) {
				values ("0.005832,0.013641,0.022181,0.039308,0.073284,0.141237", \
				        "0.007905,0.013782,0.022130,0.039318,0.073257,0.141234", \
				        "0.011054,0.017084,0.023332,0.039174,0.073216,0.141221", \
				        "0.015674,0.024120,0.030691,0.042518,0.073260,0.141237", \
				        "0.023511,0.034050,0.043251,0.057592,0.080898,0.141259", \
				        "0.038173,0.050264,0.061771,0.081038,0.110823,0.157699", \
				        "0.067096,0.079814,0.093005,0.116567,0.156221,0.217120", \
				        "0.126818,0.137553,0.151254,0.178023,0.226058,0.306622");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X8) {
				values ("0.000731,-0.002822,-0.006659,-0.014379,-0.029851,-0.060813", \
				        "0.000770,-0.002824,-0.006657,-0.014360,-0.029847,-0.060786", \
				        "0.001107,-0.002650,-0.006555,-0.014279,-0.029752,-0.060700", \
				        "0.002142,-0.002017,-0.006076,-0.013949,-0.029516,-0.060553", \
				        "0.004726,-0.000032,-0.004504,-0.012859,-0.028833,-0.060163", \
				        "0.010382,0.004973,-0.000156,-0.009491,-0.026520,-0.058667", \
				        "0.022119,0.016091,0.010277,-0.000346,-0.019395,-0.053753", \
				        "0.045958,0.039429,0.032961,0.020981,-0.000657,-0.039131");
			}
			rise_power(Power_X8) {
				values ("0.004431,0.008143,0.012069,0.019872,0.035413,0.066415", \
				        "0.004592,0.008191,0.012072,0.019849,0.035386,0.066384", \
				        "0.005038,0.008502,0.012297,0.019977,0.035439,0.066386", \
				        "0.006117,0.009363,0.013033,0.020543,0.035812,0.066605", \
				        "0.008628,0.011423,0.014878,0.022110,0.037020,0.067444", \
				        "0.014205,0.016268,0.019215,0.025900,0.040233,0.069968", \
				        "0.025909,0.027179,0.029317,0.034864,0.047982,0.076510", \
				        "0.049729,0.050384,0.051678,0.055537,0.066179,0.092175");
			}
		}
	}

}


/******************************************************************************************
 Module          	: LOGIC0_X1
 Cell Description	: Physical cell (LOGIC0_X1)
*******************************************************************************************/

cell (LOGIC0_X1) {

	area               	: 0.532000;
	dont_touch		: true;
	dont_use		: true;


	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "0";
	}

}


/******************************************************************************************
 Module          	: LOGIC1_X1
 Cell Description	: Physical cell (LOGIC1_X1)
*******************************************************************************************/

cell (LOGIC1_X1) {

	area               	: 0.532000;
	dont_touch		: true;
	dont_use		: true;


	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "1";
	}

}


/******************************************************************************************
 Module          	: MUX2_X1
 Cell Description	: Combinational cell (MUX2_X1) with drive strength X1
*******************************************************************************************/

cell (MUX2_X1) {

	area               	: 1.862000;

	cell_leakage_power 	: 21877.305000;

	leakage_power () {
		when      	: "!A & !B & !S";
		value      	: 19749.130000;
	}
	leakage_power () {
		when      	: "!A & !B & S";
		value      	: 14071.100000;
	}
	leakage_power () {
		when      	: "A & !B & !S";
		value      	: 19451.580000;
	}
	leakage_power () {
		when      	: "A & !B & S";
		value      	: 14336.630000;
	}
	leakage_power () {
		when      	: "!A & B & !S";
		value      	: 28711.990000;
	}
	leakage_power () {
		when      	: "!A & B & S";
		value      	: 23479.590000;
	}
	leakage_power () {
		when      	: "A & B & !S";
		value      	: 25591.910000;
	}
	leakage_power () {
		when      	: "A & B & S";
		value      	: 29626.510000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000884;
		fall_capacitance	: 0.000883;
		rise_capacitance	: 0.000885;
		fall_capacitance_range		(0.000784, 0.000963);
		rise_capacitance_range		(0.000761, 0.001017);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B & S & Z";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!B & S & !Z";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000006,0.000006,0.000005,0.000005,0.000004,0.000003");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.000620;
		fall_capacitance	: 0.000599;
		rise_capacitance	: 0.000641;
		fall_capacitance_range		(0.000534, 0.000656);
		rise_capacitance_range		(0.000530, 0.000737);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !S & Z";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A & !S & !Z";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000010,0.000007,0.000004,0.000003,0.000001,-0.000001,-0.000004");
			}

		}
	}

	pin (S) {

		direction		: input;
		capacitance		: 0.001316;
		fall_capacitance	: 0.001287;
		rise_capacitance	: 0.001345;
		fall_capacitance_range		(0.001069, 0.001561);
		rise_capacitance_range		(0.001051, 0.001699);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B & Z";

			power(Hidden_Power_Data) {
				values ("0.002323,0.002324,0.002393,0.002605,0.003128,0.004377,0.007226,0.013291");
			}

		}

		internal_power () {

			when      	: "!A & !B & !Z";

			power(Hidden_Power_Data) {
				values ("0.001313,0.001298,0.001324,0.001455,0.001832,0.002752,0.004814,0.009179");
			}

		}
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "((S & B) | (A & !S))";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !S";
			sdf_cond	   : "(B == 1'b0) && (S == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.100071,0.104858,0.113202,0.127741,0.152561,0.195146", \
				        "0.103551,0.108317,0.116786,0.131208,0.155939,0.198527", \
				        "0.110712,0.115501,0.124021,0.138350,0.163009,0.205584", \
				        "0.124414,0.129202,0.137705,0.152278,0.177010,0.219609", \
				        "0.149275,0.154209,0.162770,0.177490,0.202340,0.245112", \
				        "0.185857,0.191392,0.201009,0.217413,0.244081,0.288685", \
				        "0.247574,0.253894,0.265595,0.283611,0.313614,0.361951", \
				        "0.358783,0.366201,0.378667,0.400585,0.435543,0.490522");
			}
			cell_rise(Timing_X1) {
				values ("0.055098,0.060620,0.071004,0.091035,0.129296,0.205039", \
				        "0.058143,0.063662,0.074035,0.093984,0.132193,0.207980", \
				        "0.064454,0.069946,0.080401,0.100211,0.138230,0.213978", \
				        "0.075766,0.081229,0.091519,0.111169,0.149260,0.224967", \
				        "0.088301,0.093871,0.104358,0.124165,0.162289,0.237821", \
				        "0.097949,0.104099,0.114809,0.134705,0.172823,0.248219", \
				        "0.093833,0.101321,0.114109,0.135318,0.173634,0.248843", \
				        "0.056881,0.065721,0.081361,0.106582,0.148005,0.223775");
			}
			fall_transition(Timing_X1) {
				values ("0.015874,0.018313,0.022923,0.031440,0.046947,0.076734", \
				        "0.015878,0.018311,0.022933,0.031472,0.046971,0.076747", \
				        "0.015870,0.018310,0.022934,0.031473,0.046936,0.076755", \
				        "0.015880,0.018324,0.022951,0.031456,0.046926,0.076787", \
				        "0.016930,0.019284,0.023721,0.032066,0.047417,0.076993", \
				        "0.020167,0.022685,0.027380,0.035915,0.051095,0.079665", \
				        "0.025180,0.027906,0.032914,0.041886,0.057498,0.085684", \
				        "0.032866,0.035967,0.041618,0.051528,0.068433,0.097517");
			}
			rise_transition(Timing_X1) {
				values ("0.017433,0.021510,0.029869,0.047035,0.082219,0.153533", \
				        "0.017431,0.021510,0.029859,0.047007,0.082233,0.153504", \
				        "0.017359,0.021444,0.029785,0.046961,0.082232,0.153489", \
				        "0.017546,0.021565,0.029878,0.047103,0.082233,0.153514", \
				        "0.018645,0.022414,0.030468,0.047384,0.082381,0.153565", \
				        "0.021575,0.024992,0.032245,0.048269,0.082754,0.153857", \
				        "0.026937,0.030626,0.037368,0.051544,0.084105,0.154362", \
				        "0.034876,0.039439,0.047380,0.060971,0.089266,0.156786");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & !S";
			sdf_cond	   : "(B == 1'b1) && (S == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.113965,0.119019,0.127732,0.142884,0.168456,0.211903", \
				        "0.117341,0.122393,0.131211,0.146242,0.171692,0.215162", \
				        "0.124345,0.129395,0.138254,0.153200,0.178590,0.222038", \
				        "0.137183,0.142240,0.151236,0.166352,0.191874,0.235326", \
				        "0.160389,0.165509,0.174487,0.189721,0.215321,0.258910", \
				        "0.195506,0.201114,0.211207,0.227734,0.254847,0.299958", \
				        "0.257295,0.263627,0.275313,0.293287,0.323299,0.371800", \
				        "0.371125,0.378520,0.390936,0.412631,0.447236,0.502065");
			}
			cell_rise(Timing_X1) {
				values ("0.052367,0.057969,0.068499,0.088723,0.127162,0.203064", \
				        "0.055485,0.061080,0.071617,0.091738,0.130152,0.206068", \
				        "0.062023,0.067563,0.078042,0.097898,0.136094,0.211941", \
				        "0.073018,0.078520,0.088910,0.108699,0.147023,0.222792", \
				        "0.084920,0.090539,0.101032,0.120922,0.159202,0.234769", \
				        "0.093221,0.099438,0.110317,0.130270,0.168502,0.243942", \
				        "0.086645,0.094168,0.107275,0.128676,0.167169,0.242427", \
				        "0.045181,0.054156,0.070191,0.095816,0.137678,0.213573");
			}
			fall_transition(Timing_X1) {
				values ("0.017324,0.019780,0.024400,0.032926,0.048555,0.078172", \
				        "0.017318,0.019773,0.024432,0.032961,0.048521,0.078214", \
				        "0.017323,0.019778,0.024426,0.032962,0.048566,0.078175", \
				        "0.017314,0.019780,0.024438,0.032936,0.048543,0.078244", \
				        "0.017976,0.020376,0.024932,0.033413,0.048840,0.078406", \
				        "0.020870,0.023377,0.028029,0.036560,0.051914,0.080643", \
				        "0.025467,0.028149,0.033078,0.042023,0.057672,0.086168", \
				        "0.033010,0.036021,0.041517,0.051272,0.068066,0.097528");
			}
			rise_transition(Timing_X1) {
				values ("0.017646,0.021776,0.030163,0.047357,0.082516,0.153627", \
				        "0.017607,0.021736,0.030148,0.047317,0.082506,0.153630", \
				        "0.017463,0.021602,0.030052,0.047307,0.082487,0.153643", \
				        "0.017672,0.021732,0.030060,0.047334,0.082466,0.153646", \
				        "0.018874,0.022632,0.030670,0.047618,0.082542,0.153700", \
				        "0.022009,0.025417,0.032560,0.048635,0.082917,0.153997", \
				        "0.027604,0.031354,0.038093,0.052113,0.084408,0.154534", \
				        "0.035880,0.040497,0.048524,0.062204,0.090077,0.157085");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & S";
			sdf_cond	   : "(A == 1'b0) && (S == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.093981,0.098984,0.107674,0.122485,0.147459,0.190350", \
				        "0.097368,0.102375,0.111095,0.125861,0.150755,0.193650", \
				        "0.104803,0.109803,0.118498,0.133360,0.158335,0.201228", \
				        "0.120758,0.125762,0.134641,0.149473,0.174577,0.217493", \
				        "0.154048,0.159063,0.167615,0.182457,0.207430,0.250399", \
				        "0.207052,0.212675,0.222461,0.238507,0.264737,0.308623", \
				        "0.288762,0.295295,0.306581,0.324428,0.353275,0.399765", \
				        "0.426079,0.433576,0.445930,0.467150,0.499784,0.550947");
			}
			cell_rise(Timing_X1) {
				values ("0.047868,0.053009,0.062865,0.082026,0.119776,0.195109", \
				        "0.050542,0.055676,0.065656,0.084776,0.122503,0.197928", \
				        "0.055168,0.060294,0.070153,0.089156,0.126801,0.202250", \
				        "0.062075,0.067273,0.077212,0.096475,0.133982,0.209374", \
				        "0.068997,0.074417,0.084606,0.103989,0.141423,0.216726", \
				        "0.070358,0.076460,0.087301,0.107133,0.145056,0.220184", \
				        "0.052947,0.060316,0.073263,0.095092,0.134081,0.209723", \
				        "-0.008937,0.000112,0.016280,0.042785,0.085977,0.163460");
			}
			fall_transition(Timing_X1) {
				values ("0.017525,0.019820,0.024193,0.032480,0.047744,0.077468", \
				        "0.017521,0.019815,0.024193,0.032470,0.047685,0.077534", \
				        "0.017530,0.019824,0.024171,0.032449,0.047747,0.077490", \
				        "0.017529,0.019831,0.024172,0.032452,0.047633,0.077480", \
				        "0.018049,0.020256,0.024546,0.032721,0.047939,0.077674", \
				        "0.022031,0.024187,0.028262,0.035955,0.050575,0.079196", \
				        "0.027571,0.029842,0.034017,0.041740,0.055888,0.083461", \
				        "0.035559,0.038076,0.042556,0.050660,0.064910,0.091571");
			}
			rise_transition(Timing_X1) {
				values ("0.015798,0.019879,0.028296,0.045727,0.081317,0.152936", \
				        "0.015816,0.019880,0.028293,0.045725,0.081319,0.152938", \
				        "0.015873,0.019910,0.028297,0.045776,0.081345,0.152884", \
				        "0.016353,0.020306,0.028586,0.045839,0.081355,0.152914", \
				        "0.017619,0.021381,0.029350,0.046218,0.081420,0.152974", \
				        "0.020717,0.024279,0.031616,0.047675,0.081944,0.153089", \
				        "0.026301,0.030313,0.037486,0.051908,0.084297,0.154329", \
				        "0.034250,0.039278,0.048045,0.062762,0.091581,0.158553");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & S";
			sdf_cond	   : "(A == 1'b1) && (S == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.140840,0.146794,0.157098,0.174321,0.202560,0.249515", \
				        "0.144096,0.150046,0.160365,0.177456,0.205678,0.252636", \
				        "0.151015,0.156970,0.167292,0.184540,0.212815,0.259746", \
				        "0.166255,0.172207,0.182577,0.199753,0.228029,0.274974", \
				        "0.198760,0.204730,0.214696,0.231951,0.260430,0.307374", \
				        "0.262123,0.268284,0.279085,0.296515,0.324727,0.371744", \
				        "0.360981,0.367984,0.380249,0.399318,0.430001,0.479107", \
				        "0.520724,0.528804,0.542103,0.564556,0.598824,0.651917");
			}
			cell_rise(Timing_X1) {
				values ("0.052600,0.058340,0.068940,0.088634,0.126510,0.201826", \
				        "0.055284,0.061023,0.071678,0.091347,0.129269,0.204560", \
				        "0.059959,0.065692,0.076311,0.095874,0.133740,0.209042", \
				        "0.067307,0.073132,0.083818,0.103488,0.141183,0.216446", \
				        "0.075549,0.081698,0.092743,0.112836,0.150638,0.225839", \
				        "0.079310,0.086326,0.098312,0.119246,0.157544,0.232577", \
				        "0.064972,0.073360,0.087942,0.111389,0.151247,0.226606", \
				        "0.007160,0.016984,0.034318,0.062728,0.107872,0.185337");
			}
			fall_transition(Timing_X1) {
				values ("0.023344,0.025752,0.030358,0.038922,0.054513,0.083975", \
				        "0.023353,0.025751,0.030359,0.038927,0.054524,0.083962", \
				        "0.023350,0.025752,0.030356,0.038930,0.054522,0.083954", \
				        "0.023352,0.025743,0.030350,0.038932,0.054480,0.083987", \
				        "0.023282,0.025690,0.030320,0.038883,0.054488,0.083942", \
				        "0.025443,0.027640,0.031907,0.039943,0.055120,0.084430", \
				        "0.031855,0.034112,0.038165,0.045968,0.060327,0.088130", \
				        "0.040567,0.043063,0.047422,0.055095,0.069100,0.095587");
			}
			rise_transition(Timing_X1) {
				values ("0.018254,0.022033,0.029992,0.046695,0.081553,0.152935", \
				        "0.018259,0.022035,0.029983,0.046683,0.081474,0.152942", \
				        "0.018322,0.022085,0.030036,0.046730,0.081545,0.152907", \
				        "0.018968,0.022620,0.030377,0.046893,0.081585,0.152934", \
				        "0.020835,0.024232,0.031625,0.047686,0.081747,0.152978", \
				        "0.025235,0.028322,0.034932,0.049842,0.082709,0.153132", \
				        "0.032772,0.036061,0.042508,0.055752,0.085877,0.154294", \
				        "0.043594,0.047146,0.054699,0.068654,0.095241,0.158746");
			}
		}

		timing () {

			related_pin	   : "S";
			when	           : "!A & B";
			sdf_cond	   : "(A == 1'b0) && (B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.069380,0.074394,0.083174,0.097983,0.123516,0.166946", \
				        "0.072356,0.077383,0.086137,0.101136,0.126601,0.170031", \
				        "0.079253,0.084267,0.093156,0.108440,0.133991,0.177443", \
				        "0.094893,0.099828,0.108571,0.123633,0.148966,0.192359", \
				        "0.123086,0.128232,0.137167,0.152468,0.177946,0.221526", \
				        "0.165031,0.170835,0.180912,0.197422,0.224357,0.269088", \
				        "0.232751,0.239467,0.251105,0.270018,0.299845,0.347500", \
				        "0.348513,0.356651,0.370433,0.393470,0.429182,0.484125");
			}
			cell_rise(Timing_X1) {
				values ("0.042423,0.047553,0.057476,0.076604,0.114280,0.189657", \
				        "0.045574,0.050704,0.060628,0.079645,0.117381,0.192757", \
				        "0.051452,0.056561,0.066367,0.085343,0.122873,0.198281", \
				        "0.058746,0.063933,0.073888,0.093181,0.130651,0.205893", \
				        "0.065040,0.070458,0.080582,0.099851,0.137586,0.212770", \
				        "0.065207,0.071511,0.082484,0.102368,0.140147,0.215178", \
				        "0.046736,0.054584,0.068390,0.090633,0.129776,0.205331", \
				        "-0.014327,-0.004662,0.012279,0.041090,0.086152,0.164162");
			}
			fall_transition(Timing_X1) {
				values ("0.016982,0.019466,0.024161,0.032765,0.048392,0.078146", \
				        "0.016945,0.019438,0.024144,0.032771,0.048360,0.078137", \
				        "0.016847,0.019354,0.024061,0.032663,0.048266,0.078051", \
				        "0.016646,0.019175,0.023908,0.032605,0.048268,0.078079", \
				        "0.018578,0.020871,0.025272,0.033495,0.048771,0.078446", \
				        "0.022585,0.024891,0.029149,0.037141,0.051761,0.080404", \
				        "0.028877,0.031407,0.035901,0.043952,0.058086,0.085205", \
				        "0.039991,0.042910,0.048082,0.056920,0.071807,0.098170");
			}
			rise_transition(Timing_X1) {
				values ("0.015814,0.019870,0.028291,0.045698,0.081326,0.152881", \
				        "0.015790,0.019872,0.028277,0.045761,0.081328,0.152924", \
				        "0.015934,0.019965,0.028343,0.045752,0.081349,0.152895", \
				        "0.016531,0.020484,0.028767,0.045981,0.081316,0.152939", \
				        "0.018158,0.021748,0.029599,0.046509,0.081628,0.152989", \
				        "0.022164,0.025517,0.032458,0.048120,0.082156,0.153311", \
				        "0.029054,0.033093,0.040094,0.053794,0.085151,0.154960", \
				        "0.039768,0.044857,0.053907,0.068743,0.095841,0.160597");
			}
		}

		timing () {

			related_pin	   : "S";
			when	           : "A & !B";
			sdf_cond	   : "(A == 1'b1) && (B == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.183571,0.189514,0.199804,0.216909,0.245290,0.292233", \
				        "0.186592,0.192550,0.202838,0.219722,0.248015,0.294966", \
				        "0.190253,0.196193,0.206593,0.223613,0.251693,0.298638", \
				        "0.193200,0.199164,0.209527,0.226831,0.255195,0.302149", \
				        "0.193638,0.199625,0.210072,0.227408,0.256031,0.302945", \
				        "0.182919,0.188814,0.198885,0.216404,0.245121,0.292747", \
				        "0.156516,0.162324,0.172675,0.189846,0.218370,0.265511", \
				        "0.096854,0.102669,0.112404,0.129898,0.158124,0.205088");
			}
			cell_rise(Timing_X1) {
				values ("0.084403,0.089918,0.100353,0.120397,0.158770,0.234513", \
				        "0.088451,0.093967,0.104466,0.124517,0.162836,0.238539", \
				        "0.096843,0.102356,0.112819,0.132747,0.171133,0.246935", \
				        "0.111109,0.116624,0.127079,0.147042,0.185472,0.261224", \
				        "0.131497,0.137045,0.147584,0.167737,0.206113,0.281875", \
				        "0.164808,0.170349,0.180852,0.200932,0.239300,0.315167", \
				        "0.222604,0.228181,0.238723,0.258759,0.297312,0.373281", \
				        "0.324738,0.330451,0.341039,0.361253,0.400321,0.476804");
			}
			fall_transition(Timing_X1) {
				values ("0.023348,0.025753,0.030304,0.038818,0.054522,0.083969", \
				        "0.023346,0.025758,0.030307,0.038793,0.054527,0.083962", \
				        "0.023361,0.025750,0.030294,0.038780,0.054527,0.083978", \
				        "0.023354,0.025757,0.030320,0.038799,0.054536,0.083967", \
				        "0.023307,0.025717,0.030273,0.038753,0.054474,0.083935", \
				        "0.022503,0.025069,0.029842,0.038717,0.054973,0.085131", \
				        "0.022182,0.024722,0.029482,0.038284,0.054336,0.084328", \
				        "0.022225,0.024762,0.029505,0.038255,0.054210,0.083935");
			}
			rise_transition(Timing_X1) {
				values ("0.017437,0.021510,0.029841,0.047008,0.082231,0.153513", \
				        "0.017439,0.021514,0.029834,0.047001,0.082197,0.153546", \
				        "0.017446,0.021519,0.029838,0.046969,0.082242,0.153517", \
				        "0.017436,0.021509,0.029814,0.046988,0.082171,0.153529", \
				        "0.017536,0.021658,0.030040,0.047276,0.082421,0.153603", \
				        "0.017566,0.021661,0.030043,0.047234,0.082481,0.153865", \
				        "0.017885,0.021943,0.030303,0.047588,0.082849,0.153856", \
				        "0.018827,0.022747,0.030936,0.048190,0.083595,0.154765");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !S";

			fall_power(Power_X1) {
				values ("0.003282,0.003036,0.002541,0.001595,-0.000356,-0.004233", \
				        "0.003273,0.003007,0.002518,0.001562,-0.000381,-0.004261", \
				        "0.003231,0.002983,0.002494,0.001512,-0.000441,-0.004322", \
				        "0.003204,0.002947,0.002443,0.001476,-0.000482,-0.004355", \
				        "0.003214,0.002954,0.002448,0.001480,-0.000462,-0.004340", \
				        "0.003455,0.003189,0.002687,0.001687,-0.000258,-0.004147", \
				        "0.004475,0.004201,0.003664,0.002636,0.000669,-0.003239", \
				        "0.007147,0.006813,0.006261,0.005188,0.003172,-0.000759");
			}
			rise_power(Power_X1) {
				values ("0.004085,0.004322,0.004815,0.005786,0.007732,0.011620", \
				        "0.004079,0.004320,0.004810,0.005778,0.007723,0.011615", \
				        "0.004085,0.004321,0.004821,0.005780,0.007723,0.011611", \
				        "0.004132,0.004373,0.004848,0.005828,0.007769,0.011653", \
				        "0.004312,0.004546,0.005020,0.005987,0.007926,0.011808", \
				        "0.004829,0.005064,0.005523,0.006473,0.008399,0.012263", \
				        "0.006113,0.006346,0.006809,0.007735,0.009636,0.013475", \
				        "0.009047,0.009264,0.009694,0.010611,0.012478,0.016279");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !S";

			fall_power(Power_X1) {
				values ("0.003215,0.002964,0.002473,0.001496,-0.000442,-0.004319", \
				        "0.003176,0.002935,0.002445,0.001482,-0.000465,-0.004343", \
				        "0.003157,0.002915,0.002417,0.001434,-0.000517,-0.004391", \
				        "0.003125,0.002876,0.002374,0.001395,-0.000559,-0.004435", \
				        "0.003117,0.002859,0.002358,0.001382,-0.000558,-0.004436", \
				        "0.003337,0.003071,0.002560,0.001567,-0.000383,-0.004269", \
				        "0.004264,0.003998,0.003459,0.002438,0.000471,-0.003438", \
				        "0.006802,0.006537,0.005937,0.004883,0.002869,-0.001071");
			}
			rise_power(Power_X1) {
				values ("0.004030,0.004270,0.004752,0.005731,0.007681,0.011572", \
				        "0.004021,0.004260,0.004752,0.005722,0.007670,0.011560", \
				        "0.004018,0.004268,0.004747,0.005709,0.007655,0.011546", \
				        "0.004068,0.004308,0.004788,0.005757,0.007703,0.011590", \
				        "0.004245,0.004461,0.004947,0.005909,0.007846,0.011721", \
				        "0.004731,0.004967,0.005422,0.006373,0.008296,0.012156", \
				        "0.005977,0.006204,0.006658,0.007595,0.009490,0.013326", \
				        "0.008824,0.009026,0.009482,0.010379,0.012243,0.016038");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & S";

			fall_power(Power_X1) {
				values ("0.004037,0.003766,0.003280,0.002296,0.000351,-0.003525", \
				        "0.004027,0.003774,0.003263,0.002294,0.000353,-0.003526", \
				        "0.004051,0.003779,0.003289,0.002307,0.000369,-0.003507", \
				        "0.004121,0.003861,0.003363,0.002380,0.000438,-0.003429", \
				        "0.004359,0.004097,0.003599,0.002613,0.000677,-0.003205", \
				        "0.004953,0.004686,0.004144,0.003176,0.001206,-0.002680", \
				        "0.006240,0.005943,0.005394,0.004372,0.002386,-0.001526", \
				        "0.008925,0.008626,0.008049,0.006981,0.004957,0.001004");
			}
			rise_power(Power_X1) {
				values ("0.002089,0.002341,0.002831,0.003808,0.005748,0.009624", \
				        "0.002093,0.002338,0.002839,0.003806,0.005748,0.009626", \
				        "0.002097,0.002335,0.002825,0.003798,0.005734,0.009616", \
				        "0.002114,0.002339,0.002821,0.003803,0.005743,0.009618", \
				        "0.002209,0.002444,0.002923,0.003896,0.005825,0.009697", \
				        "0.002596,0.002838,0.003312,0.004270,0.006196,0.010062", \
				        "0.003689,0.003929,0.004381,0.005325,0.007242,0.011086", \
				        "0.006244,0.006456,0.006910,0.007836,0.009714,0.013535");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & S";

			fall_power(Power_X1) {
				values ("0.005173,0.004880,0.004354,0.003348,0.001382,-0.002516", \
				        "0.005146,0.004869,0.004358,0.003348,0.001378,-0.002512", \
				        "0.005183,0.004890,0.004358,0.003358,0.001397,-0.002494", \
				        "0.005224,0.004944,0.004431,0.003422,0.001458,-0.002432", \
				        "0.005405,0.005126,0.004602,0.003593,0.001633,-0.002261", \
				        "0.005910,0.005635,0.005096,0.004075,0.002097,-0.001805", \
				        "0.007046,0.006755,0.006196,0.005139,0.003132,-0.000794", \
				        "0.009442,0.009145,0.008532,0.007427,0.005374,0.001402");
			}
			rise_power(Power_X1) {
				values ("0.002109,0.002352,0.002840,0.003813,0.005752,0.009625", \
				        "0.002095,0.002349,0.002842,0.003815,0.005755,0.009630", \
				        "0.002106,0.002337,0.002834,0.003810,0.005750,0.009630", \
				        "0.002122,0.002353,0.002839,0.003815,0.005754,0.009626", \
				        "0.002233,0.002465,0.002941,0.003907,0.005843,0.009718", \
				        "0.002610,0.002838,0.003308,0.004264,0.006185,0.010047", \
				        "0.003617,0.003849,0.004293,0.005217,0.007120,0.010952", \
				        "0.005990,0.006196,0.006614,0.007507,0.009364,0.013155");
			}
		}

		internal_power () {

			related_pin	         : "S";
			when	                 : "!A & B";

			fall_power(Power_X1) {
				values ("0.004538,0.004293,0.003797,0.002806,0.000840,-0.003045", \
				        "0.004544,0.004294,0.003796,0.002811,0.000862,-0.003019", \
				        "0.004622,0.004373,0.003874,0.002904,0.000946,-0.002936", \
				        "0.004901,0.004643,0.004150,0.003189,0.001244,-0.002635", \
				        "0.005600,0.005322,0.004828,0.003855,0.001922,-0.001960", \
				        "0.007226,0.006932,0.006420,0.005418,0.003459,-0.000429", \
				        "0.010816,0.010515,0.009961,0.008943,0.006961,0.003044", \
				        "0.018682,0.018317,0.017740,0.016649,0.014591,0.010635");
			}
			rise_power(Power_X1) {
				values ("0.002723,0.002961,0.003440,0.004414,0.006349,0.010228", \
				        "0.002737,0.002972,0.003474,0.004440,0.006383,0.010258", \
				        "0.002790,0.003038,0.003529,0.004509,0.006446,0.010324", \
				        "0.003019,0.003252,0.003739,0.004719,0.006650,0.010524", \
				        "0.003666,0.003901,0.004383,0.005347,0.007281,0.011151", \
				        "0.005321,0.005543,0.006016,0.006969,0.008889,0.012744", \
				        "0.009055,0.009277,0.009740,0.010663,0.012564,0.016410", \
				        "0.017012,0.017225,0.017651,0.018548,0.020405,0.024206");
			}
		}

		internal_power () {

			related_pin	         : "S";
			when	                 : "A & !B";

			rise_power(Power_X1) {
				values ("0.006257,0.006536,0.006987,0.007968,0.009909,0.013798", \
				        "0.006276,0.006530,0.007010,0.007992,0.009934,0.013822", \
				        "0.006360,0.006587,0.007077,0.008063,0.010015,0.013903", \
				        "0.006524,0.006757,0.007250,0.008216,0.010169,0.014056", \
				        "0.006923,0.007161,0.007643,0.008627,0.010566,0.014452", \
				        "0.007811,0.008061,0.008550,0.009517,0.011463,0.015343", \
				        "0.009875,0.010109,0.010593,0.011563,0.013501,0.017383", \
				        "0.014284,0.014519,0.015015,0.015973,0.017909,0.021790");
			}
			fall_power(Power_X1) {
				values ("0.005684,0.005414,0.004883,0.003876,0.001925,-0.001967", \
				        "0.005722,0.005425,0.004909,0.003902,0.001961,-0.001928", \
				        "0.005746,0.005472,0.004943,0.003953,0.002005,-0.001880", \
				        "0.005877,0.005602,0.005075,0.004063,0.002123,-0.001767", \
				        "0.006275,0.005991,0.005468,0.004469,0.002509,-0.001384", \
				        "0.007197,0.006923,0.006400,0.005412,0.003451,-0.000438", \
				        "0.009265,0.009013,0.008478,0.007478,0.005531,0.001645", \
				        "0.013622,0.013350,0.012836,0.011843,0.009880,0.006001");
			}
		}
	}

}


/******************************************************************************************
 Module          	: MUX2_X2
 Cell Description	: Combinational cell (MUX2_X2) with drive strength X2
*******************************************************************************************/

cell (MUX2_X2) {

	area               	: 1.862000;

	cell_leakage_power 	: 25058.233750;

	leakage_power () {
		when      	: "!A & !B & !S";
		value      	: 23865.420000;
	}
	leakage_power () {
		when      	: "!A & !B & S";
		value      	: 18187.730000;
	}
	leakage_power () {
		when      	: "A & !B & !S";
		value      	: 21696.830000;
	}
	leakage_power () {
		when      	: "A & !B & S";
		value      	: 18453.530000;
	}
	leakage_power () {
		when      	: "!A & B & !S";
		value      	: 32827.980000;
	}
	leakage_power () {
		when      	: "!A & B & S";
		value      	: 25724.930000;
	}
	leakage_power () {
		when      	: "A & B & !S";
		value      	: 27837.140000;
	}
	leakage_power () {
		when      	: "A & B & S";
		value      	: 31872.310000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000883;
		fall_capacitance	: 0.000882;
		rise_capacitance	: 0.000884;
		fall_capacitance_range		(0.000781, 0.000959);
		rise_capacitance_range		(0.000768, 0.001017);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "B & S & Z";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!B & S & !Z";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000006,0.000006,0.000005,0.000005,0.000004,0.000003");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.000619;
		fall_capacitance	: 0.000597;
		rise_capacitance	: 0.000641;
		fall_capacitance_range		(0.000535, 0.000652);
		rise_capacitance_range		(0.000517, 0.000737);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !S & Z";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !S & !Z";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000010,0.000007,0.000004,0.000003,0.000001,-0.000001,-0.000004");
			}

		}
	}

	pin (S) {

		direction		: input;
		capacitance		: 0.001314;
		fall_capacitance	: 0.001285;
		rise_capacitance	: 0.001343;
		fall_capacitance_range		(0.001072, 0.001554);
		rise_capacitance_range		(0.001057, 0.001699);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B & Z";

			power(Hidden_Power_Data) {
				values ("0.002323,0.002325,0.002394,0.002606,0.003129,0.004378,0.007228,0.013294");
			}

		}

		internal_power () {

			when      	: "!A & !B & !Z";

			power(Hidden_Power_Data) {
				values ("0.001313,0.001298,0.001324,0.001455,0.001832,0.002752,0.004814,0.009178");
			}

		}
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "((S & B) | (A & !S))";

		timing () {

			related_pin	   : "A";
			when	           : "!B & !S";
			sdf_cond	   : "(B == 1'b0) && (S == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.098602,0.106684,0.115419,0.130369,0.155212,0.197229", \
				        "0.102099,0.110198,0.119002,0.133822,0.158618,0.200627", \
				        "0.109283,0.117408,0.126227,0.141012,0.165673,0.207716", \
				        "0.122924,0.131005,0.139964,0.154861,0.179643,0.221763", \
				        "0.148132,0.156389,0.165390,0.180430,0.205284,0.247499", \
				        "0.185266,0.194453,0.204859,0.221305,0.248098,0.292091", \
				        "0.248009,0.258453,0.270436,0.288609,0.318719,0.366486", \
				        "0.360282,0.372453,0.385338,0.407677,0.441802,0.496061");
			}
			cell_rise(Timing_X2) {
				values ("0.049892,0.058698,0.069124,0.088625,0.125702,0.198829", \
				        "0.052913,0.061718,0.072144,0.091562,0.128543,0.201755", \
				        "0.059256,0.068015,0.078498,0.097807,0.134707,0.207866", \
				        "0.070929,0.079646,0.089978,0.109245,0.146060,0.219109", \
				        "0.083982,0.093120,0.103685,0.123091,0.159880,0.232769", \
				        "0.093662,0.104026,0.115172,0.134895,0.171728,0.244405", \
				        "0.089714,0.101975,0.115547,0.137017,0.174414,0.246855", \
				        "0.053363,0.067742,0.083521,0.109898,0.151025,0.224132");
			}
			fall_transition(Timing_X2) {
				values ("0.013774,0.017558,0.022152,0.030528,0.045602,0.074319", \
				        "0.013777,0.017563,0.022143,0.030556,0.045570,0.074323", \
				        "0.013773,0.017559,0.022165,0.030584,0.045594,0.074334", \
				        "0.013774,0.017563,0.022168,0.030538,0.045586,0.074304", \
				        "0.014785,0.018428,0.022858,0.031118,0.045950,0.074550", \
				        "0.018061,0.021935,0.026554,0.034936,0.049643,0.077189", \
				        "0.023069,0.027277,0.032198,0.041005,0.056246,0.083456", \
				        "0.030809,0.035548,0.041072,0.050715,0.067104,0.095298");
			}
			rise_transition(Timing_X2) {
				values ("0.012766,0.018698,0.026672,0.043061,0.076841,0.145509", \
				        "0.012764,0.018695,0.026659,0.043016,0.076807,0.145554", \
				        "0.012684,0.018635,0.026625,0.043051,0.076725,0.145519", \
				        "0.012968,0.018793,0.026685,0.043082,0.076750,0.145499", \
				        "0.014532,0.019920,0.027497,0.043564,0.077011,0.145577", \
				        "0.017641,0.022991,0.029778,0.044778,0.077427,0.145854", \
				        "0.022477,0.028702,0.035561,0.048821,0.079156,0.146416", \
				        "0.030081,0.037268,0.045604,0.059186,0.085496,0.148965");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & !S";
			sdf_cond	   : "(B == 1'b1) && (S == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.113287,0.121879,0.131036,0.146723,0.172518,0.215552", \
				        "0.116689,0.125278,0.134514,0.150053,0.175820,0.218858", \
				        "0.123699,0.132282,0.141553,0.157081,0.182660,0.225707", \
				        "0.136509,0.145130,0.154547,0.170148,0.195918,0.238946", \
				        "0.159916,0.168537,0.178072,0.193653,0.219529,0.262688", \
				        "0.195806,0.205228,0.215826,0.232629,0.259906,0.304550", \
				        "0.258317,0.268862,0.280810,0.299073,0.329266,0.377311", \
				        "0.373241,0.385388,0.398249,0.420453,0.454406,0.508496");
			}
			cell_rise(Timing_X2) {
				values ("0.047128,0.056049,0.066600,0.086330,0.123565,0.196840", \
				        "0.050229,0.059135,0.069688,0.089293,0.126574,0.199858", \
				        "0.056808,0.065620,0.076170,0.095568,0.132635,0.205897", \
				        "0.068258,0.077039,0.087429,0.106804,0.143774,0.216930", \
				        "0.080614,0.089845,0.100468,0.119932,0.156801,0.229929", \
				        "0.088969,0.099528,0.110813,0.130633,0.167533,0.240286", \
				        "0.082590,0.095009,0.108840,0.130579,0.168170,0.240648", \
				        "0.041806,0.056419,0.072474,0.099312,0.140954,0.214182");
			}
			fall_transition(Timing_X2) {
				values ("0.015473,0.019328,0.023957,0.032408,0.047540,0.076173", \
				        "0.015474,0.019334,0.023937,0.032419,0.047522,0.076135", \
				        "0.015473,0.019331,0.023962,0.032418,0.047484,0.076164", \
				        "0.015461,0.019340,0.023974,0.032455,0.047527,0.076136", \
				        "0.016065,0.019814,0.024373,0.032723,0.047737,0.076266", \
				        "0.018998,0.022894,0.027508,0.035910,0.050755,0.078414", \
				        "0.023638,0.027795,0.032633,0.041407,0.056706,0.084217", \
				        "0.031254,0.035885,0.041281,0.050724,0.067054,0.095524");
			}
			rise_transition(Timing_X2) {
				values ("0.012889,0.018910,0.026976,0.043404,0.077123,0.145657", \
				        "0.012845,0.018876,0.026922,0.043396,0.077050,0.145690", \
				        "0.012698,0.018747,0.026828,0.043332,0.077004,0.145636", \
				        "0.013094,0.018935,0.026852,0.043342,0.077066,0.145679", \
				        "0.014771,0.020163,0.027696,0.043755,0.077202,0.145718", \
				        "0.018019,0.023413,0.030166,0.045061,0.077568,0.145977", \
				        "0.023072,0.029382,0.036293,0.049432,0.079523,0.146614", \
				        "0.031063,0.038302,0.046718,0.060390,0.086361,0.149289");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A & S";
			sdf_cond	   : "(A == 1'b0) && (S == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.092651,0.101189,0.110413,0.125708,0.150944,0.193373", \
				        "0.096035,0.104570,0.113812,0.129083,0.154264,0.196708", \
				        "0.103342,0.111877,0.121270,0.136532,0.161723,0.204194", \
				        "0.119372,0.127913,0.137232,0.152543,0.177860,0.220331", \
				        "0.152816,0.161295,0.170357,0.185700,0.210818,0.253338", \
				        "0.206446,0.216043,0.226633,0.243044,0.269510,0.312920", \
				        "0.289308,0.300330,0.312163,0.330613,0.359815,0.406085", \
				        "0.427585,0.440289,0.453493,0.475293,0.508252,0.559350");
			}
			cell_rise(Timing_X2) {
				values ("0.043104,0.051215,0.061059,0.079740,0.116155,0.188973", \
				        "0.045803,0.053912,0.063830,0.082576,0.119092,0.191802", \
				        "0.050515,0.058610,0.068450,0.087024,0.123451,0.196149", \
				        "0.057613,0.065887,0.075845,0.094434,0.130766,0.203507", \
				        "0.064851,0.073661,0.083943,0.102954,0.139151,0.211805", \
				        "0.066448,0.076605,0.087686,0.107358,0.144048,0.216532", \
				        "0.049217,0.061422,0.075034,0.096956,0.135006,0.207895", \
				        "-0.011253,0.003179,0.019568,0.046546,0.089336,0.164201");
			}
			fall_transition(Timing_X2) {
				values ("0.015885,0.019457,0.023837,0.031932,0.046625,0.075281", \
				        "0.015890,0.019455,0.023839,0.031940,0.046666,0.075303", \
				        "0.015887,0.019461,0.023822,0.031951,0.046691,0.075322", \
				        "0.015893,0.019459,0.023825,0.031929,0.046614,0.075262", \
				        "0.016358,0.019785,0.024131,0.032156,0.046859,0.075378", \
				        "0.020765,0.024135,0.028126,0.035624,0.049632,0.076977", \
				        "0.026646,0.030312,0.034441,0.041999,0.055677,0.081888", \
				        "0.035049,0.039094,0.043597,0.051479,0.065394,0.090866");
			}
			rise_transition(Timing_X2) {
				values ("0.011293,0.017088,0.025080,0.041626,0.075863,0.144918", \
				        "0.011275,0.017094,0.025079,0.041661,0.075857,0.144878", \
				        "0.011328,0.017130,0.025087,0.041682,0.075861,0.144876", \
				        "0.011905,0.017575,0.025410,0.041763,0.075915,0.144898", \
				        "0.013341,0.018817,0.026347,0.042391,0.076044,0.144956", \
				        "0.016321,0.021921,0.028943,0.044015,0.076650,0.145136", \
				        "0.021093,0.027760,0.035062,0.048780,0.079300,0.146385", \
				        "0.028268,0.036214,0.045276,0.060124,0.087303,0.150647");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & S";
			sdf_cond	   : "(A == 1'b1) && (S == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.139729,0.149953,0.160869,0.178570,0.207287,0.254027", \
				        "0.142992,0.153210,0.164108,0.181744,0.210417,0.257128", \
				        "0.149864,0.160091,0.171073,0.188873,0.217487,0.264231", \
				        "0.165143,0.175352,0.186260,0.203938,0.232675,0.279410", \
				        "0.197225,0.207436,0.218140,0.236098,0.264843,0.311536", \
				        "0.261345,0.271726,0.283312,0.301124,0.329670,0.376485", \
				        "0.361011,0.373030,0.385947,0.405720,0.436899,0.485844", \
				        "0.521716,0.535439,0.549663,0.573030,0.607624,0.660795");
			}
			cell_rise(Timing_X2) {
				values ("0.046491,0.056001,0.066774,0.086258,0.123022,0.195716", \
				        "0.049219,0.058725,0.069596,0.089010,0.125750,0.198454", \
				        "0.053965,0.063464,0.074269,0.093658,0.130345,0.203024", \
				        "0.061424,0.071138,0.082028,0.101418,0.137995,0.210615", \
				        "0.069689,0.080117,0.091510,0.111376,0.148074,0.220644", \
				        "0.073294,0.085361,0.097821,0.118835,0.156075,0.228454", \
				        "0.059128,0.073322,0.088508,0.112265,0.151492,0.224248", \
				        "0.002742,0.018755,0.036333,0.065166,0.110109,0.185351");
			}
			fall_transition(Timing_X2) {
				values ("0.022084,0.025856,0.030390,0.038776,0.053912,0.082380", \
				        "0.022088,0.025856,0.030391,0.038772,0.053956,0.082380", \
				        "0.022088,0.025854,0.030390,0.038790,0.053978,0.082357", \
				        "0.022089,0.025851,0.030384,0.038782,0.053982,0.082353", \
				        "0.022010,0.025793,0.030355,0.038769,0.053919,0.082364", \
				        "0.024256,0.027735,0.031856,0.039787,0.054483,0.082771", \
				        "0.031084,0.034805,0.038874,0.046442,0.060182,0.086948", \
				        "0.040164,0.044347,0.048849,0.056427,0.069941,0.095257");
			}
			rise_transition(Timing_X2) {
				values ("0.013953,0.019481,0.027022,0.042854,0.076221,0.144943", \
				        "0.013956,0.019496,0.027020,0.042881,0.076218,0.144949", \
				        "0.014010,0.019550,0.027074,0.042936,0.076225,0.144945", \
				        "0.014745,0.020114,0.027456,0.043141,0.076274,0.144892", \
				        "0.016762,0.021895,0.028885,0.044067,0.076560,0.144970", \
				        "0.021116,0.026180,0.032483,0.046411,0.077574,0.145159", \
				        "0.028503,0.033791,0.040153,0.052848,0.081109,0.146423", \
				        "0.039905,0.044732,0.051965,0.065906,0.091267,0.151194");
			}
		}

		timing () {

			related_pin	   : "S";
			when	           : "!A & B";
			sdf_cond	   : "(A == 1'b0) && (B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.068536,0.077108,0.086374,0.101726,0.127418,0.170499", \
				        "0.071492,0.080055,0.089329,0.104775,0.130546,0.173622", \
				        "0.078251,0.086780,0.096194,0.111945,0.137734,0.180845", \
				        "0.093807,0.102205,0.111464,0.127054,0.152792,0.195810", \
				        "0.122873,0.131540,0.141015,0.156631,0.182348,0.225463", \
				        "0.165739,0.175537,0.186277,0.203186,0.230308,0.274678", \
				        "0.234590,0.245823,0.257954,0.277346,0.307496,0.354825", \
				        "0.351843,0.365121,0.379327,0.402631,0.438528,0.493026");
			}
			cell_rise(Timing_X2) {
				values ("0.037679,0.045786,0.055660,0.074345,0.110871,0.183607", \
				        "0.040830,0.048928,0.058840,0.077348,0.113928,0.186666", \
				        "0.046921,0.054990,0.064768,0.083216,0.119547,0.192272", \
				        "0.054737,0.063002,0.072969,0.091640,0.127787,0.200463", \
				        "0.061459,0.070436,0.080619,0.099553,0.135812,0.208379", \
				        "0.061510,0.072180,0.083768,0.103430,0.139875,0.212179", \
				        "0.043541,0.056454,0.070737,0.093515,0.131678,0.204375", \
				        "-0.016346,-0.000830,0.016456,0.045584,0.090686,0.166114");
			}
			fall_transition(Timing_X2) {
				values ("0.015196,0.019087,0.023745,0.032296,0.047407,0.076109", \
				        "0.015157,0.019047,0.023751,0.032218,0.047390,0.076069", \
				        "0.015064,0.018975,0.023678,0.032204,0.047297,0.076066", \
				        "0.014769,0.018772,0.023503,0.032103,0.047301,0.076011", \
				        "0.016883,0.020425,0.024782,0.032903,0.047744,0.076288", \
				        "0.021200,0.024846,0.029078,0.036817,0.051009,0.078445", \
				        "0.027641,0.031630,0.036164,0.044017,0.057738,0.083699", \
				        "0.038935,0.043424,0.048581,0.057211,0.071728,0.096968");
			}
			rise_transition(Timing_X2) {
				values ("0.011268,0.017088,0.025092,0.041671,0.075888,0.144926", \
				        "0.011284,0.017077,0.025084,0.041672,0.075882,0.144915", \
				        "0.011392,0.017175,0.025157,0.041742,0.075786,0.144870", \
				        "0.012235,0.017814,0.025623,0.041863,0.075926,0.144929", \
				        "0.014318,0.019437,0.026726,0.042545,0.076177,0.144993", \
				        "0.018143,0.023607,0.030176,0.044658,0.076901,0.145277", \
				        "0.024223,0.030898,0.038202,0.051210,0.080267,0.146904", \
				        "0.034682,0.042375,0.051570,0.066564,0.092263,0.152842");
			}
		}

		timing () {

			related_pin	   : "S";
			when	           : "A & !B";
			sdf_cond	   : "(A == 1'b1) && (B == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.182324,0.192545,0.203465,0.221109,0.249964,0.296681", \
				        "0.185372,0.195587,0.206522,0.223891,0.252811,0.299528", \
				        "0.189065,0.199288,0.210230,0.227934,0.256507,0.303233", \
				        "0.191996,0.202214,0.213230,0.231064,0.259883,0.306598", \
				        "0.192532,0.202751,0.213766,0.231681,0.260662,0.307399", \
				        "0.182334,0.192361,0.203084,0.221158,0.250156,0.297544", \
				        "0.155970,0.165849,0.176775,0.194469,0.223264,0.270151", \
				        "0.096234,0.106094,0.116702,0.134523,0.163029,0.209763");
			}
			cell_rise(Timing_X2) {
				values ("0.079183,0.087983,0.098479,0.118123,0.155158,0.228298", \
				        "0.083232,0.092034,0.102570,0.122224,0.159272,0.232391", \
				        "0.091619,0.100419,0.110923,0.130518,0.167623,0.240766", \
				        "0.105899,0.114690,0.125187,0.144742,0.181756,0.254905", \
				        "0.126286,0.135138,0.145740,0.165441,0.202548,0.275769", \
				        "0.159689,0.168537,0.179070,0.198746,0.235743,0.309053", \
				        "0.217612,0.226560,0.237093,0.256729,0.293916,0.367341", \
				        "0.319846,0.329133,0.340002,0.359763,0.397276,0.471230");
			}
			fall_transition(Timing_X2) {
				values ("0.022088,0.025856,0.030334,0.038635,0.053929,0.082386", \
				        "0.022089,0.025854,0.030343,0.038649,0.053970,0.082395", \
				        "0.022090,0.025858,0.030331,0.038684,0.053977,0.082385", \
				        "0.022078,0.025850,0.030343,0.038677,0.053965,0.082398", \
				        "0.022067,0.025828,0.030316,0.038648,0.053944,0.082318", \
				        "0.020990,0.025002,0.029806,0.038529,0.054358,0.083472", \
				        "0.020648,0.024630,0.029386,0.038037,0.053651,0.082660", \
				        "0.020677,0.024654,0.029407,0.038018,0.053525,0.082306");
			}
			rise_transition(Timing_X2) {
				values ("0.012767,0.018695,0.026624,0.042970,0.076852,0.145541", \
				        "0.012773,0.018700,0.026653,0.043003,0.076830,0.145533", \
				        "0.012782,0.018708,0.026628,0.043011,0.076851,0.145554", \
				        "0.012779,0.018702,0.026626,0.043001,0.076831,0.145524", \
				        "0.012822,0.018813,0.026828,0.043207,0.077043,0.145614", \
				        "0.012864,0.018830,0.026833,0.043265,0.077128,0.145873", \
				        "0.013227,0.019144,0.027076,0.043497,0.077424,0.145903", \
				        "0.014326,0.020066,0.027806,0.044101,0.078161,0.146758");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B & !S";

			fall_power(Power_X2) {
				values ("0.003931,0.003126,0.002122,0.000188,-0.003704,-0.011457", \
				        "0.003911,0.003109,0.002102,0.000160,-0.003732,-0.011484", \
				        "0.003884,0.003078,0.002068,0.000122,-0.003790,-0.011549", \
				        "0.003830,0.003038,0.002029,0.000078,-0.003831,-0.011600", \
				        "0.003877,0.003068,0.002052,0.000090,-0.003806,-0.011565", \
				        "0.004266,0.003393,0.002335,0.000335,-0.003582,-0.011369", \
				        "0.005465,0.004527,0.003420,0.001337,-0.002632,-0.010456", \
				        "0.008404,0.007415,0.006205,0.004026,-0.000058,-0.007953");
			}
			rise_power(Power_X2) {
				values ("0.004571,0.005261,0.006239,0.008185,0.012069,0.019830", \
				        "0.004559,0.005260,0.006233,0.008176,0.012060,0.019824", \
				        "0.004574,0.005267,0.006243,0.008179,0.012057,0.019822", \
				        "0.004637,0.005334,0.006290,0.008225,0.012093,0.019850", \
				        "0.004872,0.005565,0.006500,0.008415,0.012269,0.020005", \
				        "0.005489,0.006153,0.007061,0.008949,0.012775,0.020482", \
				        "0.006949,0.007576,0.008472,0.010317,0.014092,0.021749", \
				        "0.010238,0.010780,0.011621,0.013414,0.017123,0.024690");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !S";

			fall_power(Power_X2) {
				values ("0.003912,0.003114,0.002077,0.000118,-0.003782,-0.011533", \
				        "0.003887,0.003094,0.002046,0.000096,-0.003803,-0.011565", \
				        "0.003881,0.003055,0.002019,0.000055,-0.003858,-0.011618", \
				        "0.003835,0.003001,0.001977,0.000012,-0.003898,-0.011657", \
				        "0.003846,0.003015,0.001984,0.000006,-0.003897,-0.011671", \
				        "0.004199,0.003294,0.002233,0.000219,-0.003699,-0.011494", \
				        "0.005298,0.004358,0.003226,0.001158,-0.002826,-0.010657", \
				        "0.008096,0.007101,0.005912,0.003720,-0.000366,-0.008259");
			}
			rise_power(Power_X2) {
				values ("0.004500,0.005216,0.006171,0.008122,0.012014,0.019781", \
				        "0.004487,0.005203,0.006171,0.008112,0.012005,0.019770", \
				        "0.004493,0.005185,0.006173,0.008111,0.011990,0.019752", \
				        "0.004579,0.005272,0.006228,0.008159,0.012028,0.019782", \
				        "0.004796,0.005478,0.006420,0.008335,0.012188,0.019931", \
				        "0.005392,0.006055,0.006975,0.008853,0.012674,0.020383", \
				        "0.006820,0.007448,0.008343,0.010184,0.013958,0.021604", \
				        "0.010057,0.010583,0.011435,0.013205,0.016911,0.024471");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A & S";

			fall_power(Power_X2) {
				values ("0.004752,0.003927,0.002886,0.000918,-0.002978,-0.010746", \
				        "0.004742,0.003912,0.002890,0.000908,-0.002986,-0.010748", \
				        "0.004770,0.003929,0.002915,0.000931,-0.002965,-0.010732", \
				        "0.004835,0.004003,0.002980,0.000992,-0.002909,-0.010673", \
				        "0.005121,0.004269,0.003217,0.001236,-0.002661,-0.010441", \
				        "0.005864,0.004958,0.003881,0.001848,-0.002093,-0.009895", \
				        "0.007382,0.006423,0.005265,0.003152,-0.000853,-0.008700", \
				        "0.010418,0.009415,0.008187,0.005970,0.001831,-0.006100");
			}
			rise_power(Power_X2) {
				values ("0.002544,0.003267,0.004243,0.006195,0.010083,0.017838", \
				        "0.002535,0.003269,0.004238,0.006201,0.010090,0.017840", \
				        "0.002541,0.003254,0.004233,0.006188,0.010067,0.017825", \
				        "0.002564,0.003273,0.004244,0.006184,0.010057,0.017819", \
				        "0.002709,0.003399,0.004355,0.006291,0.010149,0.017896", \
				        "0.003153,0.003835,0.004761,0.006675,0.010534,0.018255", \
				        "0.004361,0.005012,0.005913,0.007794,0.011612,0.019293", \
				        "0.007195,0.007760,0.008646,0.010448,0.014190,0.021810");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & S";

			fall_power(Power_X2) {
				values ("0.006121,0.005212,0.004121,0.002064,-0.001893,-0.009700", \
				        "0.006117,0.005231,0.004118,0.002063,-0.001890,-0.009701", \
				        "0.006158,0.005228,0.004118,0.002081,-0.001876,-0.009681", \
				        "0.006203,0.005287,0.004191,0.002141,-0.001817,-0.009625", \
				        "0.006372,0.005461,0.004348,0.002307,-0.001653,-0.009461", \
				        "0.006981,0.006044,0.004924,0.002830,-0.001145,-0.008979", \
				        "0.008396,0.007419,0.006199,0.004046,-0.000016,-0.007918", \
				        "0.011173,0.010127,0.008848,0.006566,0.002376,-0.005621");
			}
			rise_power(Power_X2) {
				values ("0.002555,0.003275,0.004251,0.006208,0.010092,0.017842", \
				        "0.002535,0.003279,0.004250,0.006208,0.010092,0.017843", \
				        "0.002556,0.003274,0.004247,0.006204,0.010084,0.017836", \
				        "0.002597,0.003300,0.004262,0.006203,0.010082,0.017827", \
				        "0.002750,0.003436,0.004392,0.006311,0.010179,0.017918", \
				        "0.003221,0.003877,0.004798,0.006702,0.010540,0.018254", \
				        "0.004419,0.005030,0.005916,0.007758,0.011540,0.019200", \
				        "0.007183,0.007696,0.008509,0.010270,0.013970,0.021529");
			}
		}

		internal_power () {

			related_pin	         : "S";
			when	                 : "!A & B";

			fall_power(Power_X2) {
				values ("0.005230,0.004414,0.003397,0.001421,-0.002507,-0.010284", \
				        "0.005258,0.004423,0.003398,0.001428,-0.002493,-0.010270", \
				        "0.005333,0.004480,0.003477,0.001500,-0.002406,-0.010186", \
				        "0.005595,0.004761,0.003737,0.001785,-0.002118,-0.009877", \
				        "0.006349,0.005499,0.004463,0.002481,-0.001418,-0.009188", \
				        "0.008119,0.007218,0.006110,0.004088,0.000148,-0.007657", \
				        "0.011968,0.011000,0.009847,0.007718,0.003701,-0.004159", \
				        "0.020198,0.019169,0.017924,0.015632,0.011476,0.003503");
			}
			rise_power(Power_X2) {
				values ("0.003161,0.003881,0.004847,0.006795,0.010695,0.018447", \
				        "0.003180,0.003908,0.004882,0.006828,0.010720,0.018467", \
				        "0.003256,0.003976,0.004940,0.006887,0.010771,0.018519", \
				        "0.003497,0.004205,0.005161,0.007107,0.010970,0.018713", \
				        "0.004195,0.004888,0.005826,0.007751,0.011601,0.019334", \
				        "0.005928,0.006601,0.007515,0.009407,0.013235,0.020934", \
				        "0.009871,0.010471,0.011370,0.013213,0.016998,0.024633", \
				        "0.018261,0.018755,0.019590,0.021344,0.025024,0.032570");
			}
		}

		internal_power () {

			related_pin	         : "S";
			when	                 : "A & !B";

			rise_power(Power_X2) {
				values ("0.006737,0.007444,0.008407,0.010362,0.014240,0.021999", \
				        "0.006758,0.007469,0.008431,0.010378,0.014273,0.022029", \
				        "0.006833,0.007567,0.008497,0.010462,0.014350,0.022109", \
				        "0.006990,0.007710,0.008671,0.010613,0.014498,0.022262", \
				        "0.007398,0.008108,0.009077,0.011017,0.014890,0.022649", \
				        "0.008280,0.009018,0.009975,0.011917,0.015786,0.023541", \
				        "0.010377,0.011071,0.012026,0.013960,0.017832,0.025583", \
				        "0.014803,0.015522,0.016467,0.018385,0.022241,0.029988");
			}
			fall_power(Power_X2) {
				values ("0.006661,0.005757,0.004644,0.002573,-0.001343,-0.009154", \
				        "0.006666,0.005755,0.004665,0.002610,-0.001318,-0.009124", \
				        "0.006708,0.005814,0.004702,0.002664,-0.001272,-0.009073", \
				        "0.006862,0.005945,0.004850,0.002784,-0.001152,-0.008961", \
				        "0.007235,0.006330,0.005229,0.003167,-0.000772,-0.008578", \
				        "0.008138,0.007242,0.006141,0.004099,0.000162,-0.007635", \
				        "0.010190,0.009278,0.008208,0.006175,0.002244,-0.005555", \
				        "0.014555,0.013684,0.012567,0.010522,0.006595,-0.001201");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND2_X1
 Cell Description	: Combinational cell (NAND2_X1) with drive strength X1
*******************************************************************************************/

cell (NAND2_X1) {

	area               	: 0.798000;

	cell_leakage_power 	: 4962.289500;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 1017.833000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 1204.568000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 7340.627000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 10286.130000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000494;
		fall_capacitance	: 0.000490;
		rise_capacitance	: 0.000498;
		fall_capacitance_range		(0.000414, 0.000591);
		rise_capacitance_range		(0.000415, 0.000610);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000003,0.000003,0.000002,0.000002");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000460;
		fall_capacitance	: 0.000446;
		rise_capacitance	: 0.000474;
		fall_capacitance_range		(0.000407, 0.000526);
		rise_capacitance_range		(0.000407, 0.000562);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000015,0.000011,0.000008,0.000005,0.000004,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.015310,0.018035,0.023564,0.034462,0.056212,0.099620", \
				        "0.018483,0.021100,0.026594,0.037459,0.059245,0.102617", \
				        "0.022774,0.026311,0.032609,0.043591,0.065298,0.108522", \
				        "0.026493,0.031366,0.039807,0.054520,0.077875,0.120879", \
				        "0.027728,0.034260,0.045874,0.065691,0.097425,0.146506", \
				        "0.022093,0.030864,0.046421,0.072942,0.115837,0.182583", \
				        "0.00003059,0.011874,0.032658,0.068043,0.125434,0.215323", \
				        "-0.056507,-0.041558,-0.014156,0.032572,0.109160,0.229447");
			}
			cell_rise(Timing_X1) {
				values ("0.024008,0.028787,0.038345,0.057387,0.095195,0.170633", \
				        "0.027871,0.032605,0.042037,0.060921,0.098746,0.174206", \
				        "0.036095,0.040778,0.050096,0.068730,0.106272,0.181616", \
				        "0.048710,0.055056,0.066340,0.085203,0.122189,0.197100", \
				        "0.066884,0.075149,0.090053,0.115281,0.155465,0.229229", \
				        "0.095023,0.105559,0.124633,0.157620,0.211892,0.296134", \
				        "0.140762,0.154320,0.178594,0.220696,0.291192,0.404457", \
				        "0.219410,0.236255,0.267257,0.320974,0.410983,0.557492");
			}
			fall_transition(Timing_X1) {
				values ("0.010009,0.012484,0.017312,0.026712,0.045556,0.083037", \
				        "0.010665,0.012966,0.017200,0.026667,0.045479,0.082963", \
				        "0.014378,0.016410,0.019710,0.027312,0.045533,0.082958", \
				        "0.020773,0.023060,0.027339,0.034100,0.047775,0.083048", \
				        "0.031558,0.034406,0.039548,0.048392,0.062712,0.089056", \
				        "0.050299,0.053932,0.060537,0.071573,0.090045,0.119956", \
				        "0.083688,0.088498,0.097118,0.111481,0.135159,0.173538", \
				        "0.145397,0.151578,0.162720,0.181901,0.212943,0.262091");
			}
			rise_transition(Timing_X1) {
				values ("0.017510,0.022083,0.031211,0.049094,0.084791,0.156482", \
				        "0.017510,0.022081,0.031310,0.049102,0.084852,0.156466", \
				        "0.019556,0.023193,0.031467,0.049128,0.084753,0.156482", \
				        "0.027053,0.030525,0.036698,0.050643,0.084808,0.156460", \
				        "0.038104,0.042698,0.050942,0.064132,0.089818,0.156426", \
				        "0.055673,0.061308,0.071846,0.089810,0.118592,0.168875", \
				        "0.086973,0.093355,0.105718,0.128055,0.166529,0.227119", \
				        "0.145874,0.152954,0.166782,0.192971,0.239807,0.319622");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019967,0.022682,0.028195,0.039001,0.060794,0.104218", \
				        "0.022796,0.025586,0.030962,0.041947,0.063571,0.107127", \
				        "0.027172,0.030273,0.036137,0.046996,0.068734,0.112195", \
				        "0.032145,0.036100,0.043246,0.056084,0.078932,0.122434", \
				        "0.035295,0.040867,0.050655,0.067383,0.095048,0.142021", \
				        "0.031950,0.039830,0.053759,0.077093,0.114309,0.172421", \
				        "0.013174,0.024148,0.043585,0.076291,0.128095,0.207108", \
				        "-0.039965,-0.024647,0.002095,0.047136,0.119123,0.229009");
			}
			cell_rise(Timing_X1) {
				values ("0.035122,0.039942,0.049633,0.068844,0.106862,0.182518", \
				        "0.038859,0.043681,0.053262,0.072414,0.110399,0.186068", \
				        "0.046886,0.051675,0.061183,0.080127,0.117971,0.193519", \
				        "0.062951,0.068234,0.077919,0.096518,0.133921,0.209051", \
				        "0.086300,0.093374,0.106358,0.129044,0.167131,0.241231", \
				        "0.120831,0.129937,0.146870,0.177020,0.227690,0.308206", \
				        "0.175944,0.187660,0.209087,0.247621,0.313748,0.422037", \
				        "0.269770,0.284425,0.311769,0.360347,0.444105,0.583956");
			}
			fall_transition(Timing_X1) {
				values ("0.010074,0.012579,0.017306,0.026701,0.045478,0.082997", \
				        "0.010188,0.012567,0.017244,0.026752,0.045613,0.082979", \
				        "0.011924,0.014092,0.018246,0.026867,0.045530,0.082959", \
				        "0.016250,0.018331,0.022532,0.030223,0.046610,0.083040", \
				        "0.024531,0.026762,0.031211,0.038817,0.053867,0.085784", \
				        "0.039415,0.042047,0.046997,0.055832,0.071397,0.101384", \
				        "0.065324,0.068612,0.074917,0.086004,0.104617,0.136554", \
				        "0.109006,0.113651,0.122182,0.137288,0.162014,0.201581");
			}
			rise_transition(Timing_X1) {
				values ("0.024595,0.029184,0.038470,0.056497,0.092386,0.164185", \
				        "0.024596,0.029211,0.038449,0.056413,0.092310,0.164237", \
				        "0.024712,0.029178,0.038459,0.056419,0.092387,0.164193", \
				        "0.029986,0.033315,0.040743,0.056929,0.092389,0.164225", \
				        "0.042066,0.046395,0.054171,0.066984,0.095292,0.164251", \
				        "0.059042,0.064977,0.075619,0.093451,0.121554,0.174029", \
				        "0.085372,0.092994,0.106818,0.130725,0.169912,0.230217", \
				        "0.131042,0.140558,0.157854,0.188082,0.239106,0.321680");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.000482,0.000240,-0.000245,-0.001208,-0.003138,-0.006998", \
				        "0.000481,0.000240,-0.000243,-0.001207,-0.003140,-0.007004", \
				        "0.000500,0.000255,-0.000224,-0.001192,-0.003133,-0.006993", \
				        "0.000561,0.000314,-0.000176,-0.001159,-0.003104,-0.006981", \
				        "0.000777,0.000505,-0.000029,-0.001046,-0.003029,-0.006936", \
				        "0.001363,0.001045,0.000445,-0.000673,-0.002759,-0.006754", \
				        "0.002716,0.002355,0.001667,0.000393,-0.001933,-0.006173", \
				        "0.005611,0.005203,0.004426,0.002972,0.000318,-0.004429");
			}
			rise_power(Power_X1) {
				values ("0.001051,0.001300,0.001792,0.002769,0.004713,0.008588", \
				        "0.001053,0.001298,0.001790,0.002763,0.004704,0.008581", \
				        "0.001087,0.001324,0.001809,0.002772,0.004706,0.008578", \
				        "0.001187,0.001418,0.001885,0.002832,0.004745,0.008602", \
				        "0.001442,0.001657,0.002106,0.003019,0.004892,0.008697", \
				        "0.002041,0.002228,0.002629,0.003486,0.005290,0.009012", \
				        "0.003396,0.003535,0.003855,0.004595,0.006263,0.009839", \
				        "0.006289,0.006379,0.006599,0.007157,0.008559,0.011831");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.000482,0.000240,-0.000247,-0.001213,-0.003144,-0.007010", \
				        "0.000475,0.000236,-0.000252,-0.001220,-0.003149,-0.007019", \
				        "0.000469,0.000223,-0.000259,-0.001227,-0.003160,-0.007030", \
				        "0.000479,0.000238,-0.000245,-0.001216,-0.003156,-0.007025", \
				        "0.000581,0.000325,-0.000176,-0.001159,-0.003110,-0.006989", \
				        "0.000986,0.000688,0.000129,-0.000938,-0.002962,-0.006898", \
				        "0.002067,0.001722,0.001077,-0.000137,-0.002377,-0.006512", \
				        "0.004539,0.004141,0.003394,0.001991,-0.000570,-0.005184");
			}
			rise_power(Power_X1) {
				values ("0.001993,0.002232,0.002718,0.003690,0.005630,0.009502", \
				        "0.001989,0.002230,0.002716,0.003687,0.005625,0.009496", \
				        "0.002011,0.002254,0.002731,0.003695,0.005625,0.009497", \
				        "0.002097,0.002334,0.002802,0.003753,0.005670,0.009524", \
				        "0.002326,0.002554,0.003013,0.003935,0.005812,0.009629", \
				        "0.002874,0.003082,0.003516,0.004401,0.006220,0.009952", \
				        "0.004078,0.004269,0.004666,0.005489,0.007208,0.010801", \
				        "0.006643,0.006807,0.007159,0.007902,0.009480,0.012848");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND2_X2
 Cell Description	: Combinational cell (NAND2_X2) with drive strength X2
*******************************************************************************************/

cell (NAND2_X2) {

	area               	: 0.798000;

	cell_leakage_power 	: 10335.129250;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 2118.898000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 2506.749000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 15292.590000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 21422.280000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000895;
		fall_capacitance	: 0.000886;
		rise_capacitance	: 0.000904;
		fall_capacitance_range		(0.000740, 0.001103);
		rise_capacitance_range		(0.000737, 0.001130);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000010,0.000009,0.000008,0.000007,0.000006,0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000863;
		fall_capacitance	: 0.000832;
		rise_capacitance	: 0.000894;
		fall_capacitance_range		(0.000705, 0.001016);
		rise_capacitance_range		(0.000725, 0.001067);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000046,0.000028,0.000022,0.000017,0.000014,0.000012,0.000009,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.011971,0.015995,0.021361,0.032027,0.053261,0.095631", \
				        "0.014757,0.019075,0.024410,0.035090,0.056278,0.098597", \
				        "0.017562,0.023450,0.030152,0.041284,0.062376,0.104501", \
				        "0.019370,0.027404,0.036275,0.051354,0.074946,0.116873", \
				        "0.018161,0.028900,0.040932,0.061180,0.093305,0.142371", \
				        "0.009374,0.023710,0.039838,0.066923,0.110089,0.176819", \
				        "-0.016484,0.002530,0.024030,0.060026,0.117744,0.207374", \
				        "-0.077177,-0.053286,-0.025217,0.022211,0.099044,0.218815");
			}
			cell_rise(Timing_X2) {
				values ("0.018033,0.024966,0.034372,0.052601,0.089158,0.162044", \
				        "0.022015,0.028806,0.037992,0.056303,0.092755,0.165677", \
				        "0.029346,0.037097,0.046057,0.064073,0.100248,0.173030", \
				        "0.039644,0.049956,0.061643,0.080509,0.116162,0.188452", \
				        "0.055191,0.068396,0.083695,0.109215,0.149532,0.220624", \
				        "0.080016,0.096823,0.116284,0.149515,0.203714,0.287353", \
				        "0.121479,0.142986,0.167810,0.210165,0.280274,0.392293", \
				        "0.195020,0.221615,0.253154,0.307268,0.396779,0.541303");
			}
			fall_transition(Timing_X2) {
				values ("0.006915,0.010487,0.014997,0.024254,0.042631,0.079387", \
				        "0.008489,0.011148,0.015089,0.024253,0.042654,0.079409", \
				        "0.011911,0.014913,0.018360,0.025284,0.042678,0.079417", \
				        "0.017723,0.021367,0.025586,0.032406,0.045479,0.079385", \
				        "0.027665,0.032210,0.037665,0.046330,0.060822,0.086219", \
				        "0.045181,0.051131,0.057898,0.069160,0.087642,0.117413", \
				        "0.076995,0.084758,0.093710,0.108301,0.132009,0.170196", \
				        "0.137368,0.146859,0.158261,0.177663,0.208868,0.257836");
			}
			rise_transition(Timing_X2) {
				values ("0.011798,0.018335,0.027245,0.044562,0.078999,0.148144", \
				        "0.012166,0.018327,0.027361,0.044482,0.078991,0.148146", \
				        "0.015790,0.020262,0.027805,0.044491,0.078984,0.148139", \
				        "0.022168,0.027799,0.033961,0.046781,0.079002,0.148143", \
				        "0.031711,0.038997,0.047576,0.061064,0.085124,0.148152", \
				        "0.047997,0.056657,0.067267,0.085363,0.114311,0.162458", \
				        "0.078155,0.087899,0.100294,0.122457,0.160653,0.220881", \
				        "0.136683,0.146870,0.160482,0.186368,0.232522,0.311071");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.015436,0.019505,0.024858,0.035439,0.056708,0.099123", \
				        "0.018028,0.022149,0.027536,0.038125,0.059412,0.101859", \
				        "0.021360,0.026315,0.032194,0.043070,0.064381,0.106906", \
				        "0.024434,0.031031,0.038494,0.051529,0.074220,0.116898", \
				        "0.024725,0.034088,0.044459,0.061690,0.089543,0.136109", \
				        "0.017651,0.030831,0.045473,0.069479,0.107179,0.165231", \
				        "-0.005522,0.012468,0.032752,0.066297,0.118626,0.197616", \
				        "-0.064912,-0.040082,-0.012216,0.033899,0.106525,0.216247");
			}
			cell_rise(Timing_X2) {
				values ("0.026461,0.033527,0.042860,0.061359,0.097973,0.170915", \
				        "0.030277,0.037297,0.046522,0.064985,0.101621,0.174535", \
				        "0.038558,0.045417,0.054520,0.072763,0.109165,0.181955", \
				        "0.052473,0.061125,0.071208,0.089233,0.125118,0.197476", \
				        "0.072270,0.083677,0.097188,0.120477,0.158494,0.229730", \
				        "0.102868,0.117379,0.134763,0.165453,0.216464,0.296860", \
				        "0.153211,0.171724,0.193740,0.232655,0.298768,0.406474", \
				        "0.241128,0.264422,0.292408,0.341504,0.425075,0.563452");
			}
			fall_transition(Timing_X2) {
				values ("0.006985,0.010493,0.015080,0.024249,0.042597,0.079417", \
				        "0.007478,0.010676,0.015105,0.024253,0.042636,0.079379", \
				        "0.009554,0.012546,0.016340,0.024630,0.042637,0.079417", \
				        "0.013760,0.016830,0.020580,0.028076,0.043921,0.079384", \
				        "0.021627,0.025050,0.029320,0.036806,0.051633,0.082660", \
				        "0.035639,0.039769,0.044917,0.053794,0.069168,0.098456", \
				        "0.059544,0.065020,0.071718,0.083134,0.101839,0.133455", \
				        "0.100692,0.108045,0.117096,0.132857,0.158041,0.197599");
			}
			rise_transition(Timing_X2) {
				values ("0.017233,0.023883,0.032684,0.050085,0.084722,0.154074", \
				        "0.017236,0.023882,0.032710,0.050181,0.084776,0.154099", \
				        "0.018356,0.024219,0.032698,0.050122,0.084805,0.154101", \
				        "0.024905,0.030017,0.036425,0.051040,0.084785,0.154043", \
				        "0.034865,0.041968,0.050190,0.063152,0.088967,0.154072", \
				        "0.049434,0.058879,0.069945,0.088176,0.116674,0.166165", \
				        "0.073343,0.085406,0.099503,0.123576,0.162893,0.223124", \
				        "0.116704,0.131781,0.149301,0.179483,0.229991,0.311664");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.000746,0.000021,-0.000934,-0.002862,-0.006730,-0.014464", \
				        "0.000744,0.000027,-0.000932,-0.002866,-0.006730,-0.014462", \
				        "0.000790,0.000063,-0.000901,-0.002841,-0.006715,-0.014439", \
				        "0.000965,0.000192,-0.000790,-0.002759,-0.006649,-0.014412", \
				        "0.001504,0.000631,-0.000448,-0.002504,-0.006488,-0.014313", \
				        "0.002835,0.001830,0.000590,-0.001694,-0.005905,-0.013927", \
				        "0.005764,0.004624,0.003203,0.000591,-0.004127,-0.012683", \
				        "0.011874,0.010598,0.009012,0.006040,0.000646,-0.008966");
			}
			rise_power(Power_X2) {
				values ("0.001642,0.002389,0.003375,0.005336,0.009226,0.016974", \
				        "0.001654,0.002393,0.003371,0.005324,0.009212,0.016974", \
				        "0.001737,0.002451,0.003416,0.005345,0.009216,0.016963", \
				        "0.001981,0.002660,0.003589,0.005474,0.009296,0.017011", \
				        "0.002566,0.003181,0.004061,0.005872,0.009605,0.017222", \
				        "0.003905,0.004411,0.005180,0.006867,0.010450,0.017882", \
				        "0.006837,0.007194,0.007792,0.009215,0.012507,0.019613", \
				        "0.012958,0.013174,0.013570,0.014622,0.017324,0.023796");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.000742,0.000023,-0.000942,-0.002874,-0.006741,-0.014476", \
				        "0.000726,0.000008,-0.000958,-0.002893,-0.006755,-0.014497", \
				        "0.000719,0.000002,-0.000965,-0.002894,-0.006768,-0.014518", \
				        "0.000774,0.000037,-0.000926,-0.002865,-0.006740,-0.014492", \
				        "0.001081,0.000275,-0.000749,-0.002734,-0.006649,-0.014418", \
				        "0.002076,0.001141,-0.000022,-0.002204,-0.006297,-0.014203", \
				        "0.004517,0.003432,0.002079,-0.000425,-0.004980,-0.013349", \
				        "0.009819,0.008592,0.007030,0.004149,-0.001074,-0.010440");
			}
			rise_power(Power_X2) {
				values ("0.003147,0.003868,0.004848,0.006787,0.010669,0.018421", \
				        "0.003143,0.003867,0.004836,0.006791,0.010658,0.018414", \
				        "0.003207,0.003921,0.004877,0.006808,0.010671,0.018415", \
				        "0.003417,0.004111,0.005051,0.006938,0.010764,0.018474", \
				        "0.003920,0.004601,0.005505,0.007338,0.011079,0.018698", \
				        "0.005133,0.005734,0.006592,0.008337,0.011944,0.019387", \
				        "0.007724,0.008258,0.009037,0.010647,0.014044,0.021187", \
				        "0.013132,0.013611,0.014287,0.015732,0.018828,0.025492");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND2_X4
 Cell Description	: Combinational cell (NAND2_X4) with drive strength X4
*******************************************************************************************/

cell (NAND2_X4) {

	area               	: 1.330000;

	cell_leakage_power 	: 20670.405000;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 4237.981000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 5013.739000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 30585.350000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 42844.550000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001715;
		fall_capacitance	: 0.001686;
		rise_capacitance	: 0.001743;
		fall_capacitance_range		(0.001373, 0.002129);
		rise_capacitance_range		(0.001425, 0.002181);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000043,0.000032,0.000025,0.000021,0.000019,0.000017,0.000015,0.000011");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002472;
		fall_capacitance	: 0.002420;
		rise_capacitance	: 0.002524;
		fall_capacitance_range		(0.002188, 0.002786);
		rise_capacitance_range		(0.002127, 0.002888);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000046,0.000034,0.000026,0.000020,0.000015,0.000009,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.011769,0.016494,0.021821,0.032477,0.053706,0.096112", \
				        "0.014561,0.019585,0.024886,0.035487,0.056724,0.099084", \
				        "0.017397,0.024169,0.030787,0.041733,0.062841,0.105033", \
				        "0.019250,0.028455,0.037261,0.052073,0.075428,0.117371", \
				        "0.018018,0.030412,0.042268,0.062187,0.094059,0.142904", \
				        "0.009320,0.025787,0.041622,0.068323,0.111181,0.177618", \
				        "-0.016395,0.005372,0.026435,0.062011,0.119268,0.208541", \
				        "-0.077162,-0.049579,-0.021961,0.024923,0.101163,0.220460");
			}
			cell_rise(Timing_X4) {
				values ("0.018438,0.026603,0.035834,0.054223,0.090822,0.163750", \
				        "0.022388,0.030376,0.039567,0.057867,0.094434,0.167380", \
				        "0.029752,0.038563,0.047482,0.065630,0.101918,0.174766", \
				        "0.040064,0.051926,0.063319,0.081998,0.117734,0.190123", \
				        "0.055577,0.070864,0.085877,0.111091,0.151036,0.222209", \
				        "0.080499,0.099864,0.119004,0.151889,0.205699,0.288943", \
				        "0.121974,0.146753,0.171179,0.213102,0.282769,0.394391", \
				        "0.195437,0.226247,0.257345,0.310864,0.399847,0.543945");
			}
			fall_transition(Timing_X4) {
				values ("0.006873,0.010922,0.015562,0.024728,0.043156,0.079968", \
				        "0.008452,0.011580,0.015631,0.024768,0.043174,0.079945", \
				        "0.011868,0.015224,0.018440,0.025556,0.043177,0.079999", \
				        "0.017717,0.021844,0.026051,0.032818,0.045812,0.079953", \
				        "0.027672,0.032862,0.038164,0.046809,0.061151,0.086678", \
				        "0.045259,0.052054,0.058692,0.069797,0.088138,0.117814", \
				        "0.077075,0.086016,0.094780,0.109174,0.132717,0.170750", \
				        "0.137605,0.148522,0.159713,0.178877,0.209809,0.258579");
			}
			rise_transition(Timing_X4) {
				values ("0.011973,0.019686,0.028401,0.045821,0.080270,0.149534", \
				        "0.012304,0.019684,0.028528,0.045797,0.080290,0.149543", \
				        "0.015908,0.021235,0.028766,0.045709,0.080333,0.149550", \
				        "0.022303,0.028677,0.034685,0.047814,0.080373,0.149560", \
				        "0.031899,0.040247,0.048559,0.061848,0.086117,0.149537", \
				        "0.048128,0.058193,0.068622,0.086594,0.115274,0.163547", \
				        "0.078039,0.089569,0.101897,0.123987,0.161994,0.221946", \
				        "0.136603,0.148526,0.162221,0.188054,0.234093,0.312464");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015976,0.020713,0.026027,0.036684,0.057968,0.100402", \
				        "0.018511,0.023277,0.028657,0.039322,0.060643,0.103097", \
				        "0.021746,0.027514,0.033304,0.044224,0.065584,0.108171", \
				        "0.024658,0.032342,0.039777,0.052606,0.075358,0.118096", \
				        "0.024707,0.035589,0.045822,0.063015,0.090708,0.137271", \
				        "0.017165,0.032572,0.047036,0.070901,0.108439,0.166413", \
				        "-0.006506,0.014561,0.034631,0.067899,0.120066,0.198927", \
				        "-0.066351,-0.037428,-0.009877,0.035907,0.108230,0.217763");
			}
			cell_rise(Timing_X4) {
				values ("0.026916,0.035162,0.044547,0.063049,0.099706,0.172705", \
				        "0.030733,0.038925,0.048210,0.066686,0.103333,0.176357", \
				        "0.038980,0.047021,0.056153,0.074434,0.110927,0.183841", \
				        "0.053094,0.062992,0.072863,0.090830,0.126799,0.199272", \
				        "0.073081,0.086188,0.099499,0.122412,0.160132,0.231456", \
				        "0.103739,0.120521,0.137673,0.167951,0.218565,0.298556", \
				        "0.154395,0.175620,0.197299,0.235880,0.301542,0.408749", \
				        "0.242154,0.269179,0.296787,0.345450,0.428480,0.566418");
			}
			fall_transition(Timing_X4) {
				values ("0.006910,0.010981,0.015546,0.024721,0.043169,0.079963", \
				        "0.007379,0.011055,0.015576,0.024763,0.043180,0.079992", \
				        "0.009325,0.012845,0.016715,0.025013,0.043134,0.079932", \
				        "0.013478,0.017035,0.020884,0.028347,0.044322,0.079954", \
				        "0.021353,0.025318,0.029576,0.037013,0.051860,0.083162", \
				        "0.035504,0.040259,0.045329,0.054024,0.069411,0.098783", \
				        "0.059568,0.065835,0.072421,0.083643,0.102213,0.133817", \
				        "0.101083,0.109421,0.118266,0.133738,0.158697,0.198099");
			}
			rise_transition(Timing_X4) {
				values ("0.017290,0.025017,0.033835,0.051231,0.086027,0.155475", \
				        "0.017271,0.025050,0.033917,0.051253,0.086097,0.155464", \
				        "0.018321,0.025243,0.033872,0.051245,0.086096,0.155482", \
				        "0.024794,0.030636,0.037219,0.052152,0.086111,0.155494", \
				        "0.034707,0.042918,0.050961,0.063778,0.090041,0.155438", \
				        "0.049171,0.060179,0.071066,0.089223,0.117444,0.167178", \
				        "0.072569,0.086739,0.100818,0.124827,0.163991,0.224017", \
				        "0.115222,0.132940,0.150471,0.180655,0.231183,0.312838");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.001736,0.000052,-0.001865,-0.005720,-0.013461,-0.028933", \
				        "0.001734,0.000066,-0.001861,-0.005722,-0.013460,-0.028929", \
				        "0.001834,0.000127,-0.001814,-0.005682,-0.013421,-0.028886", \
				        "0.002182,0.000376,-0.001595,-0.005520,-0.013301,-0.028820", \
				        "0.003261,0.001234,-0.000907,-0.005014,-0.012967,-0.028623", \
				        "0.005921,0.003593,0.001140,-0.003402,-0.011804,-0.027849", \
				        "0.011779,0.009128,0.006319,0.001127,-0.008286,-0.025363", \
				        "0.023978,0.021035,0.017879,0.011962,0.001213,-0.017975");
			}
			rise_power(Power_X4) {
				values ("0.003624,0.005360,0.007327,0.011243,0.019022,0.034535", \
				        "0.003633,0.005358,0.007304,0.011209,0.019002,0.034509", \
				        "0.003782,0.005449,0.007388,0.011245,0.019000,0.034495", \
				        "0.004264,0.005861,0.007723,0.011506,0.019158,0.034585", \
				        "0.005416,0.006872,0.008642,0.012284,0.019763,0.035003", \
				        "0.008079,0.009282,0.010848,0.014249,0.021437,0.036308", \
				        "0.013922,0.014783,0.016011,0.018905,0.025520,0.039770", \
				        "0.026150,0.026675,0.027494,0.029638,0.035111,0.048075");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.001720,0.000065,-0.001879,-0.005745,-0.013477,-0.028962", \
				        "0.001679,-0.000004,-0.001910,-0.005766,-0.013506,-0.028992", \
				        "0.001652,-0.000019,-0.001940,-0.005797,-0.013542,-0.029052", \
				        "0.001733,0.000034,-0.001884,-0.005753,-0.013493,-0.028997", \
				        "0.002328,0.000465,-0.001564,-0.005523,-0.013313,-0.028860", \
				        "0.004304,0.002142,-0.000158,-0.004486,-0.012655,-0.028445", \
				        "0.009195,0.006666,0.003984,-0.000995,-0.010079,-0.026773", \
				        "0.019799,0.016918,0.013840,0.008097,-0.002324,-0.021003");
			}
			rise_power(Power_X4) {
				values ("0.006551,0.008247,0.010207,0.014094,0.021851,0.037359", \
				        "0.006555,0.008248,0.010190,0.014078,0.021833,0.037338", \
				        "0.006667,0.008347,0.010274,0.014128,0.021861,0.037352", \
				        "0.007102,0.008723,0.010605,0.014385,0.022041,0.037461", \
				        "0.008134,0.009696,0.011519,0.015182,0.022664,0.037899", \
				        "0.010546,0.011955,0.013643,0.017153,0.024384,0.039258", \
				        "0.015700,0.016972,0.018512,0.021761,0.028566,0.042856", \
				        "0.026509,0.027637,0.029007,0.031895,0.038110,0.051475");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND3_X1
 Cell Description	: Combinational cell (NAND3_X1) with drive strength X1
*******************************************************************************************/

cell (NAND3_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 6847.813750;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 1266.230000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 7153.177000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 479.762000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 7406.860000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 1633.690000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 15587.120000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 1472.801000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 19782.870000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000534;
		fall_capacitance	: 0.000539;
		rise_capacitance	: 0.000529;
		fall_capacitance_range		(0.000453, 0.000651);
		rise_capacitance_range		(0.000455, 0.000664);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000007,0.000006,0.000006,0.000005,0.000005,0.000004,0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000003,0.000003,0.000002,0.000001,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000007,0.000006,0.000005,0.000005,0.000004,0.000004,0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000543;
		fall_capacitance	: 0.000542;
		rise_capacitance	: 0.000545;
		fall_capacitance_range		(0.000473, 0.000625);
		rise_capacitance_range		(0.000466, 0.000658);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000010,0.000009,0.000009,0.000009,0.000009,0.000008,0.000008");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000019,0.000014,0.000010,0.000008,0.000006,0.000005,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000507;
		fall_capacitance	: 0.000495;
		rise_capacitance	: 0.000519;
		fall_capacitance_range		(0.000428, 0.000566);
		rise_capacitance_range		(0.000424, 0.000620);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000007,0.000006,0.000005,0.000004,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.017136,0.020060,0.026014,0.037768,0.061080,0.107634", \
				        "0.020257,0.022993,0.028830,0.040526,0.063931,0.110444", \
				        "0.025478,0.028841,0.034939,0.046320,0.069594,0.115989", \
				        "0.030224,0.034823,0.043026,0.057456,0.081320,0.127475", \
				        "0.032424,0.038594,0.049712,0.069226,0.101175,0.151527", \
				        "0.027326,0.035605,0.050535,0.076621,0.119518,0.187475", \
				        "0.004740,0.015959,0.035942,0.070533,0.127707,0.218710", \
				        "-0.054855,-0.040781,-0.014366,0.031207,0.107265,0.228400");
			}
			cell_rise(Timing_X1) {
				values ("0.028017,0.032850,0.042529,0.061522,0.099354,0.174893", \
				        "0.031873,0.036634,0.046197,0.065089,0.102926,0.178447", \
				        "0.040110,0.044734,0.054158,0.072770,0.110430,0.185883", \
				        "0.054304,0.060165,0.070747,0.089206,0.126340,0.201295", \
				        "0.074713,0.082381,0.096402,0.120457,0.159673,0.233461", \
				        "0.106444,0.116213,0.134122,0.165585,0.218090,0.300722", \
				        "0.158134,0.170764,0.193612,0.233722,0.301711,0.412252", \
				        "0.246582,0.262343,0.291755,0.343174,0.430123,0.572669");
			}
			fall_transition(Timing_X1) {
				values ("0.013309,0.016106,0.021568,0.031749,0.051751,0.091715", \
				        "0.013231,0.016054,0.021096,0.031608,0.051696,0.091739", \
				        "0.016514,0.018580,0.022468,0.031642,0.051676,0.091787", \
				        "0.023288,0.025636,0.029993,0.037159,0.052889,0.091771", \
				        "0.034819,0.037530,0.042767,0.051546,0.066596,0.096250", \
				        "0.054621,0.058088,0.064461,0.075534,0.094448,0.125719", \
				        "0.089419,0.094056,0.102472,0.116742,0.140712,0.180141", \
				        "0.152734,0.158858,0.169856,0.188939,0.220246,0.270504");
			}
			rise_transition(Timing_X1) {
				values ("0.020945,0.025528,0.034675,0.052548,0.088216,0.159901", \
				        "0.020938,0.025482,0.034800,0.052457,0.088289,0.159896", \
				        "0.022087,0.026063,0.034704,0.052421,0.088291,0.159889", \
				        "0.029364,0.032517,0.038824,0.053460,0.088296,0.159880", \
				        "0.041247,0.045514,0.053446,0.065912,0.092433,0.159904", \
				        "0.059766,0.065041,0.074937,0.092182,0.120256,0.171253", \
				        "0.092255,0.098232,0.109924,0.131195,0.168487,0.228285", \
				        "0.152234,0.159133,0.172401,0.197525,0.242651,0.320407");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025386,0.028324,0.034300,0.045935,0.069273,0.115827", \
				        "0.028206,0.031175,0.036987,0.048681,0.071984,0.118558", \
				        "0.033121,0.036303,0.042262,0.053981,0.077298,0.123886", \
				        "0.039342,0.043297,0.050595,0.063862,0.087837,0.134486", \
				        "0.043891,0.049455,0.059402,0.076747,0.105723,0.155175", \
				        "0.041732,0.049550,0.063564,0.087701,0.126957,0.188749", \
				        "0.023653,0.034513,0.053905,0.087371,0.141616,0.225962", \
				        "-0.029573,-0.014693,0.011676,0.057235,0.131671,0.247809");
			}
			cell_rise(Timing_X1) {
				values ("0.041827,0.046650,0.056363,0.075561,0.113633,0.189366", \
				        "0.045460,0.050275,0.059878,0.079063,0.117152,0.192888", \
				        "0.053323,0.058118,0.067640,0.086684,0.124604,0.200286", \
				        "0.069976,0.074875,0.084240,0.102917,0.140434,0.215746", \
				        "0.096116,0.102618,0.114725,0.136277,0.173629,0.247878", \
				        "0.134707,0.143112,0.158895,0.187480,0.236270,0.315028", \
				        "0.195887,0.206803,0.226880,0.263495,0.327026,0.432390", \
				        "0.298901,0.312673,0.338562,0.385049,0.465799,0.601718");
			}
			fall_transition(Timing_X1) {
				values ("0.013714,0.016368,0.021631,0.031596,0.051771,0.091730", \
				        "0.013761,0.016463,0.021457,0.031671,0.051743,0.091713", \
				        "0.014972,0.017323,0.022054,0.031588,0.051644,0.091787", \
				        "0.019670,0.021891,0.026382,0.034437,0.052443,0.091779", \
				        "0.029143,0.031407,0.035996,0.043963,0.059745,0.093923", \
				        "0.046006,0.048645,0.053885,0.062995,0.079396,0.110575", \
				        "0.075098,0.078366,0.084799,0.096205,0.116150,0.150187", \
				        "0.123614,0.128279,0.136770,0.152295,0.178487,0.221248");
			}
			rise_transition(Timing_X1) {
				values ("0.029366,0.034021,0.043291,0.061259,0.097305,0.169240", \
				        "0.029376,0.034029,0.043209,0.061348,0.097306,0.169207", \
				        "0.029367,0.033995,0.043352,0.061324,0.097301,0.169221", \
				        "0.032977,0.036664,0.044693,0.061485,0.097274,0.169237", \
				        "0.045799,0.049812,0.057194,0.069962,0.099321,0.169237", \
				        "0.064157,0.069680,0.079725,0.096623,0.124025,0.177719", \
				        "0.092507,0.099553,0.112514,0.135154,0.172975,0.232303", \
				        "0.140996,0.149719,0.166070,0.194752,0.243712,0.324048");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029224,0.032157,0.038099,0.049854,0.073113,0.119704", \
				        "0.031849,0.034795,0.040731,0.052365,0.075729,0.122284", \
				        "0.035940,0.039079,0.044885,0.056559,0.079890,0.126518", \
				        "0.040839,0.044305,0.051012,0.063301,0.086907,0.133578", \
				        "0.044671,0.049073,0.057102,0.071699,0.097998,0.146440", \
				        "0.040731,0.047138,0.058681,0.078389,0.111111,0.166081", \
				        "0.016180,0.025645,0.042603,0.071304,0.117343,0.188436", \
				        "-0.049887,-0.036387,-0.012766,0.027937,0.093462,0.193535");
			}
			cell_rise(Timing_X1) {
				values ("0.053260,0.058240,0.068234,0.087907,0.126522,0.202802", \
				        "0.056880,0.061866,0.071697,0.091370,0.130007,0.206299", \
				        "0.064559,0.069610,0.079461,0.098941,0.137473,0.213686", \
				        "0.081192,0.086036,0.095783,0.115065,0.153283,0.229166", \
				        "0.112004,0.117976,0.129043,0.149039,0.186310,0.261267", \
				        "0.156742,0.164568,0.179157,0.205797,0.251820,0.328363", \
				        "0.226436,0.236212,0.254859,0.289058,0.349444,0.450769", \
				        "0.342835,0.355379,0.378791,0.421935,0.498369,0.628978");
			}
			fall_transition(Timing_X1) {
				values ("0.013688,0.016333,0.021648,0.031708,0.051751,0.091770", \
				        "0.013714,0.016297,0.021648,0.031567,0.051743,0.091746", \
				        "0.014232,0.016682,0.021715,0.031694,0.051756,0.091765", \
				        "0.016494,0.018931,0.023923,0.032984,0.052153,0.091762", \
				        "0.022756,0.025027,0.029606,0.038429,0.056373,0.093294", \
				        "0.036739,0.039131,0.043719,0.052185,0.068328,0.103051", \
				        "0.064483,0.066930,0.071893,0.081213,0.097697,0.129306", \
				        "0.113777,0.116733,0.122625,0.134017,0.154215,0.188719");
			}
			rise_transition(Timing_X1) {
				values ("0.036483,0.041172,0.050539,0.068740,0.104753,0.176878", \
				        "0.036484,0.041171,0.050550,0.068740,0.104795,0.176850", \
				        "0.036481,0.041160,0.050499,0.068724,0.104699,0.176887", \
				        "0.037276,0.041594,0.050623,0.068609,0.104760,0.176875", \
				        "0.048720,0.052512,0.059478,0.073646,0.105501,0.176846", \
				        "0.067887,0.073108,0.082822,0.099409,0.126218,0.182980", \
				        "0.094983,0.102208,0.115251,0.138009,0.175602,0.234400", \
				        "0.138564,0.147525,0.164505,0.194124,0.244289,0.325625");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.000743,0.000495,0.000016,-0.000946,-0.002877,-0.006740", \
				        "0.000740,0.000500,0.000015,-0.000946,-0.002877,-0.006740", \
				        "0.000759,0.000513,0.000033,-0.000933,-0.002870,-0.006733", \
				        "0.000820,0.000572,0.000081,-0.000898,-0.002848,-0.006719", \
				        "0.001029,0.000758,0.000236,-0.000778,-0.002759,-0.006672", \
				        "0.001612,0.001306,0.000710,-0.000396,-0.002480,-0.006476", \
				        "0.003003,0.002649,0.001972,0.000706,-0.001618,-0.005857", \
				        "0.006024,0.005621,0.004852,0.003402,0.000742,-0.004013");
			}
			rise_power(Power_X1) {
				values ("0.001202,0.001447,0.001941,0.002921,0.004870,0.008745", \
				        "0.001198,0.001447,0.001939,0.002915,0.004860,0.008737", \
				        "0.001229,0.001469,0.001956,0.002923,0.004862,0.008738", \
				        "0.001329,0.001562,0.002033,0.002983,0.004901,0.008760", \
				        "0.001594,0.001810,0.002260,0.003175,0.005050,0.008863", \
				        "0.002217,0.002408,0.002811,0.003670,0.005470,0.009195", \
				        "0.003629,0.003777,0.004105,0.004849,0.006514,0.010077", \
				        "0.006657,0.006761,0.006997,0.007562,0.008957,0.012212");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.000748,0.000504,0.000007,-0.000957,-0.002887,-0.006754", \
				        "0.000738,0.000496,0.000008,-0.000956,-0.002887,-0.006749", \
				        "0.000729,0.000489,0.000002,-0.000964,-0.002897,-0.006769", \
				        "0.000734,0.000493,0.000019,-0.000959,-0.002896,-0.006767", \
				        "0.000817,0.000568,0.000074,-0.000907,-0.002854,-0.006732", \
				        "0.001187,0.000900,0.000353,-0.000697,-0.002711,-0.006641", \
				        "0.002264,0.001934,0.001291,0.000089,-0.002123,-0.006253", \
				        "0.004795,0.004413,0.003674,0.002276,-0.000285,-0.004901");
			}
			rise_power(Power_X1) {
				values ("0.002325,0.002571,0.003058,0.004030,0.005965,0.009852", \
				        "0.002317,0.002559,0.003049,0.004020,0.005960,0.009845", \
				        "0.002333,0.002572,0.003058,0.004025,0.005960,0.009835", \
				        "0.002418,0.002651,0.003122,0.004078,0.005998,0.009860", \
				        "0.002649,0.002874,0.003335,0.004258,0.006144,0.009966", \
				        "0.003212,0.003422,0.003858,0.004748,0.006569,0.010300", \
				        "0.004455,0.004657,0.005058,0.005885,0.007607,0.011196", \
				        "0.007127,0.007306,0.007666,0.008411,0.009997,0.013356");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.000749,0.000508,0.000013,-0.000960,-0.002896,-0.006767", \
				        "0.000743,0.000494,0.000010,-0.000957,-0.002886,-0.006753", \
				        "0.000728,0.000489,0.000001,-0.000962,-0.002898,-0.006765", \
				        "0.000718,0.000482,0.000001,-0.000972,-0.002907,-0.006778", \
				        "0.000774,0.000521,0.000031,-0.000952,-0.002891,-0.006769", \
				        "0.001066,0.000795,0.000262,-0.000765,-0.002760,-0.006674", \
				        "0.002063,0.001751,0.001140,-0.000023,-0.002208,-0.006317", \
				        "0.004603,0.004232,0.003517,0.002156,-0.000335,-0.004913");
			}
			rise_power(Power_X1) {
				values ("0.003261,0.003505,0.003988,0.004956,0.006897,0.010778", \
				        "0.003252,0.003491,0.003975,0.004945,0.006886,0.010767", \
				        "0.003261,0.003503,0.003985,0.004952,0.006889,0.010766", \
				        "0.003331,0.003571,0.004044,0.005002,0.006929,0.010791", \
				        "0.003550,0.003785,0.004248,0.005183,0.007072,0.010900", \
				        "0.004099,0.004319,0.004766,0.005661,0.007491,0.011232", \
				        "0.005346,0.005549,0.005961,0.006806,0.008547,0.012152", \
				        "0.008045,0.008236,0.008603,0.009378,0.010990,0.014381");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND3_X2
 Cell Description	: Combinational cell (NAND3_X2) with drive strength X2
*******************************************************************************************/

cell (NAND3_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 14228.789937;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 2629.959000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 14863.820000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 993.640500;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 15389.770000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 3392.554000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 32391.610000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 3056.246000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 41112.720000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001024;
		fall_capacitance	: 0.001035;
		rise_capacitance	: 0.001012;
		fall_capacitance_range		(0.000856, 0.001290);
		rise_capacitance_range		(0.000830, 0.001296);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000011,0.000009,0.000008,0.000007,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000012,0.000009,0.000007,0.000006,0.000004,0.000003,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000017,0.000014,0.000012,0.000011,0.000010,0.000008,0.000006");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000969;
		fall_capacitance	: 0.000963;
		rise_capacitance	: 0.000976;
		fall_capacitance_range		(0.000840, 0.001157);
		rise_capacitance_range		(0.000797, 0.001198);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000025,0.000023,0.000022,0.000021,0.000021,0.000021,0.000021");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000046,0.000033,0.000026,0.000021,0.000017,0.000012,0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000972;
		fall_capacitance	: 0.000942;
		rise_capacitance	: 0.001002;
		fall_capacitance_range		(0.000833, 0.001113);
		rise_capacitance_range		(0.000806, 0.001193);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000008,0.000005,0.000002,0.000000,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000026,0.000020,0.000017,0.000014,0.000011,0.000008,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.013690,0.017975,0.023772,0.035214,0.057991,0.103400", \
				        "0.016834,0.020919,0.026618,0.038041,0.060780,0.106160", \
				        "0.020562,0.026045,0.032524,0.043861,0.066514,0.111720", \
				        "0.023361,0.030838,0.039357,0.054322,0.078226,0.123190", \
				        "0.023102,0.033119,0.044752,0.064700,0.096931,0.147280", \
				        "0.014847,0.028264,0.043744,0.070271,0.113561,0.181475", \
				        "-0.011498,0.006311,0.026895,0.062131,0.119642,0.210435", \
				        "-0.075392,-0.052914,-0.025896,0.020394,0.096733,0.217398");
			}
			cell_rise(Timing_X2) {
				values ("0.021697,0.028690,0.037994,0.056521,0.093070,0.166029", \
				        "0.025615,0.032519,0.041685,0.060049,0.096677,0.169620", \
				        "0.033676,0.040695,0.049667,0.067794,0.104145,0.176971", \
				        "0.045558,0.054980,0.065934,0.084233,0.119995,0.192350", \
				        "0.063381,0.075506,0.089828,0.114242,0.153398,0.224533", \
				        "0.091841,0.107301,0.125562,0.157215,0.209661,0.291749", \
				        "0.139226,0.159091,0.182422,0.222811,0.290485,0.399858", \
				        "0.222136,0.246998,0.276946,0.328803,0.415431,0.556181");
			}
			fall_transition(Timing_X2) {
				values ("0.009526,0.013718,0.018676,0.028543,0.048213,0.087427", \
				        "0.010306,0.013708,0.018486,0.028546,0.048321,0.087524", \
				        "0.013859,0.017024,0.020693,0.028978,0.048256,0.087428", \
				        "0.020176,0.023671,0.027892,0.035240,0.050076,0.087433", \
				        "0.030887,0.035220,0.040524,0.049381,0.064399,0.092877", \
				        "0.049478,0.055088,0.061695,0.072930,0.091750,0.122815", \
				        "0.082609,0.090066,0.098724,0.113256,0.137244,0.176473", \
				        "0.144225,0.153718,0.164952,0.184348,0.215826,0.265837");
			}
			rise_transition(Timing_X2) {
				values ("0.014873,0.021501,0.030395,0.047473,0.082091,0.151248", \
				        "0.014882,0.021416,0.030452,0.047602,0.082033,0.151251", \
				        "0.017547,0.022638,0.030598,0.047617,0.082043,0.151226", \
				        "0.024626,0.029847,0.035896,0.049155,0.082083,0.151226", \
				        "0.034986,0.041713,0.049769,0.062733,0.087426,0.151268", \
				        "0.052196,0.060270,0.070319,0.087632,0.115851,0.164449", \
				        "0.083350,0.092539,0.104295,0.125452,0.162413,0.221823", \
				        "0.142281,0.152558,0.165745,0.190677,0.235188,0.311717");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020196,0.024550,0.030308,0.041720,0.064487,0.109936", \
				        "0.022892,0.027257,0.033027,0.044395,0.067200,0.112682", \
				        "0.027080,0.032043,0.038058,0.049530,0.072352,0.117896", \
				        "0.031437,0.037929,0.045512,0.058977,0.082751,0.128384", \
				        "0.033104,0.042246,0.052691,0.070589,0.099863,0.148901", \
				        "0.027317,0.040097,0.054781,0.079591,0.119383,0.181205", \
				        "0.004990,0.022437,0.042586,0.076848,0.131647,0.216061", \
				        "-0.054073,-0.030327,-0.002918,0.043580,0.118667,0.234718");
			}
			cell_rise(Timing_X2) {
				values ("0.032735,0.039803,0.049200,0.067711,0.104440,0.177491", \
				        "0.036397,0.043424,0.052743,0.071269,0.108004,0.181066", \
				        "0.044432,0.051361,0.060544,0.078862,0.115456,0.188471", \
				        "0.060008,0.067864,0.077282,0.095190,0.131277,0.203876", \
				        "0.082705,0.093093,0.105596,0.127662,0.164618,0.236065", \
				        "0.117382,0.130593,0.146796,0.175850,0.224953,0.303418", \
				        "0.173615,0.190724,0.211335,0.248302,0.311887,0.416720", \
				        "0.270222,0.291956,0.318484,0.365554,0.446323,0.581010");
			}
			fall_transition(Timing_X2) {
				values ("0.010051,0.013854,0.018676,0.028587,0.048315,0.087527", \
				        "0.010248,0.013889,0.018750,0.028607,0.048314,0.087514", \
				        "0.012134,0.015388,0.019566,0.028771,0.048260,0.087493", \
				        "0.016932,0.020132,0.024219,0.032071,0.049134,0.087526", \
				        "0.025978,0.029484,0.033955,0.041799,0.057198,0.090028", \
				        "0.041968,0.046095,0.051403,0.060642,0.076939,0.107326", \
				        "0.069210,0.074427,0.081121,0.092940,0.112984,0.146788", \
				        "0.114913,0.122184,0.131252,0.147297,0.173986,0.216769");
			}
			rise_transition(Timing_X2) {
				values ("0.021625,0.028322,0.037323,0.054735,0.089365,0.158790", \
				        "0.021627,0.028293,0.037330,0.054722,0.089364,0.158792", \
				        "0.021971,0.028305,0.037328,0.054690,0.089360,0.158788", \
				        "0.027800,0.032595,0.039619,0.055070,0.089376,0.158755", \
				        "0.038902,0.045394,0.053168,0.065548,0.092669,0.158794", \
				        "0.054959,0.063614,0.073964,0.091291,0.119024,0.169444", \
				        "0.080855,0.091901,0.105119,0.127943,0.165873,0.225067", \
				        "0.126787,0.140739,0.157259,0.186027,0.234536,0.313961");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023125,0.027510,0.033245,0.044680,0.067456,0.112882", \
				        "0.025571,0.029912,0.035706,0.047152,0.069922,0.115398", \
				        "0.028961,0.033706,0.039442,0.050913,0.073761,0.119283", \
				        "0.032572,0.037957,0.044584,0.056919,0.080323,0.125942", \
				        "0.033757,0.041030,0.049477,0.064361,0.090580,0.138356", \
				        "0.025626,0.036337,0.048575,0.069119,0.102369,0.156987", \
				        "-0.003770,0.011730,0.029537,0.059279,0.106179,0.177458", \
				        "-0.074513,-0.053017,-0.028477,0.013044,0.079150,0.179333");
			}
			cell_rise(Timing_X2) {
				values ("0.041669,0.048964,0.058591,0.077492,0.114636,0.188077", \
				        "0.045324,0.052609,0.062121,0.081023,0.118190,0.191615", \
				        "0.053169,0.060425,0.069892,0.088621,0.125652,0.198982", \
				        "0.070122,0.077217,0.086467,0.104876,0.141479,0.214446", \
				        "0.097095,0.106574,0.118107,0.138578,0.174724,0.246679", \
				        "0.137099,0.149280,0.164378,0.191450,0.238108,0.314079", \
				        "0.201311,0.216713,0.235706,0.270386,0.331019,0.432125", \
				        "0.311070,0.330632,0.354698,0.398324,0.474727,0.604341");
			}
			fall_transition(Timing_X2) {
				values ("0.010038,0.013887,0.018742,0.028626,0.048312,0.087527", \
				        "0.010095,0.013908,0.018738,0.028540,0.048313,0.087526", \
				        "0.011017,0.014472,0.019122,0.028588,0.048209,0.087526", \
				        "0.013553,0.016977,0.021541,0.030493,0.048884,0.087491", \
				        "0.020203,0.023469,0.027776,0.036160,0.053482,0.089406", \
				        "0.034199,0.037703,0.042218,0.050384,0.066003,0.099534", \
				        "0.061367,0.065019,0.070011,0.079267,0.095582,0.126261", \
				        "0.107522,0.112150,0.118475,0.130381,0.150992,0.185376");
			}
			rise_transition(Timing_X2) {
				values ("0.027288,0.033995,0.043050,0.060477,0.095304,0.164820", \
				        "0.027290,0.033991,0.043073,0.060488,0.095324,0.164818", \
				        "0.027194,0.033980,0.043050,0.060475,0.095323,0.164822", \
				        "0.030023,0.035663,0.043715,0.060544,0.095313,0.164801", \
				        "0.041586,0.047719,0.055046,0.067958,0.097030,0.164779", \
				        "0.057921,0.066355,0.076457,0.093528,0.120719,0.173217", \
				        "0.081875,0.093238,0.106619,0.129753,0.167729,0.226677", \
				        "0.122397,0.136723,0.153992,0.183765,0.233762,0.314550");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.001159,0.000437,-0.000529,-0.002452,-0.006318,-0.014039", \
				        "0.001156,0.000437,-0.000529,-0.002452,-0.006320,-0.014047", \
				        "0.001195,0.000476,-0.000491,-0.002428,-0.006306,-0.014033", \
				        "0.001355,0.000609,-0.000384,-0.002350,-0.006238,-0.013998", \
				        "0.001855,0.001025,-0.000039,-0.002085,-0.006066,-0.013888", \
				        "0.003210,0.002236,0.001016,-0.001245,-0.005451,-0.013487", \
				        "0.006219,0.005109,0.003713,0.001117,-0.003595,-0.012156", \
				        "0.012555,0.011351,0.009770,0.006810,0.001408,-0.008233");
			}
			rise_power(Power_X2) {
				values ("0.001994,0.002743,0.003735,0.005704,0.009597,0.017360", \
				        "0.002002,0.002742,0.003730,0.005688,0.009585,0.017353", \
				        "0.002063,0.002800,0.003768,0.005705,0.009582,0.017345", \
				        "0.002317,0.003004,0.003940,0.005830,0.009663,0.017382", \
				        "0.002914,0.003541,0.004430,0.006245,0.009983,0.017599", \
				        "0.004297,0.004825,0.005607,0.007295,0.010878,0.018300", \
				        "0.007346,0.007736,0.008354,0.009784,0.013069,0.020152", \
				        "0.013736,0.013997,0.014431,0.015506,0.018215,0.024635");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.001158,0.000437,-0.000529,-0.002461,-0.006329,-0.014062", \
				        "0.001141,0.000426,-0.000545,-0.002475,-0.006344,-0.014080", \
				        "0.001139,0.000412,-0.000556,-0.002488,-0.006352,-0.014103", \
				        "0.001162,0.000434,-0.000531,-0.002461,-0.006335,-0.014089", \
				        "0.001413,0.000631,-0.000374,-0.002345,-0.006248,-0.014013", \
				        "0.002342,0.001440,0.000306,-0.001848,-0.005918,-0.013801", \
				        "0.004782,0.003735,0.002396,-0.000080,-0.004608,-0.012938", \
				        "0.010217,0.009002,0.007470,0.004600,-0.000618,-0.009988");
			}
			rise_power(Power_X2) {
				values ("0.003882,0.004612,0.005586,0.007537,0.011424,0.019176", \
				        "0.003863,0.004596,0.005571,0.007519,0.011410,0.019164", \
				        "0.003906,0.004638,0.005595,0.007537,0.011403,0.019156", \
				        "0.004094,0.004807,0.005750,0.007650,0.011489,0.019209", \
				        "0.004633,0.005296,0.006212,0.008052,0.011807,0.019431", \
				        "0.005857,0.006479,0.007328,0.009088,0.012707,0.020138", \
				        "0.008530,0.009097,0.009881,0.011505,0.014919,0.022036", \
				        "0.014138,0.014653,0.015347,0.016812,0.019931,0.026594");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.001167,0.000442,-0.000534,-0.002472,-0.006344,-0.014090", \
				        "0.001140,0.000425,-0.000544,-0.002471,-0.006341,-0.014080", \
				        "0.001138,0.000408,-0.000559,-0.002488,-0.006354,-0.014100", \
				        "0.001122,0.000405,-0.000558,-0.002501,-0.006368,-0.014119", \
				        "0.001287,0.000538,-0.000460,-0.002420,-0.006312,-0.014067", \
				        "0.002090,0.001235,0.000134,-0.001977,-0.006004,-0.013866", \
				        "0.004429,0.003426,0.002148,-0.000251,-0.004713,-0.013026", \
				        "0.009967,0.008802,0.007307,0.004516,-0.000613,-0.009909");
			}
			rise_power(Power_X2) {
				values ("0.005432,0.006153,0.007119,0.009068,0.012948,0.020705", \
				        "0.005407,0.006136,0.007102,0.009047,0.012933,0.020689", \
				        "0.005429,0.006171,0.007125,0.009059,0.012937,0.020684", \
				        "0.005600,0.006330,0.007268,0.009181,0.013020,0.020734", \
				        "0.006117,0.006805,0.007722,0.009578,0.013340,0.020971", \
				        "0.007315,0.007967,0.008838,0.010613,0.014248,0.021698", \
				        "0.010009,0.010591,0.011393,0.013053,0.016492,0.023641", \
				        "0.015720,0.016252,0.016978,0.018481,0.021648,0.028348");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND3_X4
 Cell Description	: Combinational cell (NAND3_X4) with drive strength X4
*******************************************************************************************/

cell (NAND3_X4) {

	area               	: 1.862000;

	cell_leakage_power 	: 29835.410000;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 5465.955000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 29865.000000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 2124.618000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 30848.200000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 6922.455000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 64852.720000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 6181.172000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 92423.160000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002728;
		fall_capacitance	: 0.002697;
		rise_capacitance	: 0.002758;
		fall_capacitance_range		(0.002225, 0.003424);
		rise_capacitance_range		(0.002360, 0.003557);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000039,0.000027,0.000020,0.000016,0.000013,0.000010,0.000004");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000039,0.000025,0.000017,0.000012,0.000008,0.000005,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000078,0.000054,0.000040,0.000032,0.000027,0.000024,0.000021,0.000016");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.005102;
		fall_capacitance	: 0.005029;
		rise_capacitance	: 0.005175;
		fall_capacitance_range		(0.004340, 0.005705);
		rise_capacitance_range		(0.004556, 0.005910);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000048,0.000039,0.000034,0.000032,0.000031,0.000030,0.000029");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000143,0.000092,0.000062,0.000043,0.000032,0.000023,0.000014,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000018,0.000009,0.000005,0.000002,0.000000,-0.000002,-0.000006");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.005607;
		fall_capacitance	: 0.005480;
		rise_capacitance	: 0.005733;
		fall_capacitance_range		(0.004753, 0.006172);
		rise_capacitance_range		(0.005059, 0.006420);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000024,0.000010,0.000002,-0.000002,-0.000007,-0.000014,-0.000025");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000050,0.000027,0.000014,0.000007,0.000002,-0.000002,-0.000008,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000081,0.000051,0.000033,0.000022,0.000015,0.000009,0.000002,-0.000009");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!((A1 & A2) & A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018962,0.024065,0.029816,0.041285,0.064107,0.109592", \
				        "0.021831,0.026801,0.032591,0.044030,0.066846,0.112307", \
				        "0.027380,0.032890,0.038631,0.049792,0.072486,0.117844", \
				        "0.033484,0.040737,0.048214,0.061568,0.084387,0.129410", \
				        "0.039437,0.048827,0.058504,0.076027,0.105733,0.153913", \
				        "0.044074,0.056000,0.068410,0.090812,0.129288,0.192726", \
				        "0.043142,0.058950,0.074856,0.103583,0.152693,0.234307", \
				        "0.030200,0.049808,0.070427,0.107167,0.170213,0.274627");
			}
			cell_rise(Timing_X4) {
				values ("0.017056,0.021037,0.025596,0.034671,0.052698,0.088583", \
				        "0.020987,0.024893,0.029481,0.038425,0.056465,0.092329", \
				        "0.027597,0.032530,0.037412,0.046266,0.064143,0.099845", \
				        "0.036092,0.042747,0.049509,0.061143,0.080079,0.115403", \
				        "0.047565,0.056316,0.065307,0.081025,0.107010,0.147690", \
				        "0.063579,0.074964,0.086713,0.107384,0.142130,0.197773", \
				        "0.085586,0.100805,0.116237,0.143525,0.189226,0.263149", \
				        "0.117589,0.137038,0.157391,0.193260,0.253736,0.351333");
			}
			fall_transition(Timing_X4) {
				values ("0.013572,0.018066,0.023009,0.032861,0.052500,0.091850", \
				        "0.013385,0.017826,0.022932,0.032858,0.052511,0.091849", \
				        "0.016253,0.019553,0.023854,0.032818,0.052562,0.091768", \
				        "0.022592,0.026414,0.030428,0.037536,0.053588,0.091771", \
				        "0.033030,0.037703,0.042722,0.051352,0.066417,0.095967", \
				        "0.051152,0.056815,0.062856,0.073661,0.092438,0.123913", \
				        "0.083467,0.090611,0.098095,0.111459,0.134636,0.174110", \
				        "0.144132,0.152538,0.161875,0.178522,0.207414,0.256037");
			}
			rise_transition(Timing_X4) {
				values ("0.010974,0.014873,0.019089,0.027597,0.044760,0.078733", \
				        "0.011528,0.014968,0.019125,0.027588,0.044673,0.078737", \
				        "0.015543,0.018024,0.021006,0.028076,0.044685,0.078762", \
				        "0.022337,0.025804,0.029096,0.034666,0.046896,0.078789", \
				        "0.033085,0.037366,0.041942,0.049705,0.062487,0.085535", \
				        "0.051340,0.056649,0.062361,0.072435,0.089601,0.117087", \
				        "0.083779,0.090397,0.097531,0.110032,0.132018,0.168624", \
				        "0.145109,0.152410,0.160817,0.176461,0.204093,0.250626");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.026086,0.031200,0.036965,0.048445,0.071255,0.116781", \
				        "0.028604,0.033683,0.039496,0.051022,0.073891,0.119463", \
				        "0.033213,0.038661,0.044415,0.056044,0.078997,0.124660", \
				        "0.039439,0.046068,0.052997,0.065712,0.089209,0.134998", \
				        "0.045676,0.054535,0.063578,0.079719,0.107485,0.155685", \
				        "0.050441,0.062150,0.074197,0.095507,0.131572,0.190382", \
				        "0.050948,0.066177,0.081982,0.109968,0.157331,0.234206", \
				        "0.037226,0.057908,0.078806,0.115869,0.178300,0.279440");
			}
			cell_rise(Timing_X4) {
				values ("0.022107,0.026147,0.030808,0.040004,0.058108,0.094086", \
				        "0.025910,0.029921,0.034497,0.043670,0.061793,0.097791", \
				        "0.033716,0.037951,0.042478,0.051440,0.069403,0.105316", \
				        "0.044849,0.050595,0.056552,0.067217,0.085352,0.120877", \
				        "0.059732,0.067394,0.075388,0.089746,0.114182,0.153182", \
				        "0.080634,0.090598,0.101112,0.119981,0.152622,0.205967", \
				        "0.111170,0.124184,0.137840,0.162603,0.205205,0.275670", \
				        "0.156944,0.174276,0.192330,0.224807,0.280444,0.372393");
			}
			fall_transition(Timing_X4) {
				values ("0.013672,0.018101,0.023040,0.032810,0.052546,0.091782", \
				        "0.013727,0.018172,0.023032,0.032856,0.052548,0.091811", \
				        "0.014984,0.018880,0.023344,0.032890,0.052473,0.091769", \
				        "0.019358,0.023101,0.027101,0.035256,0.053104,0.091771", \
				        "0.028352,0.032214,0.036507,0.044364,0.060123,0.093941", \
				        "0.043878,0.048456,0.053467,0.062355,0.078733,0.109836", \
				        "0.070114,0.075782,0.082043,0.093246,0.112775,0.146843", \
				        "0.115547,0.122829,0.130735,0.145298,0.170359,0.212295");
			}
			rise_transition(Timing_X4) {
				values ("0.014238,0.018083,0.022409,0.030912,0.048140,0.082322", \
				        "0.014213,0.018119,0.022370,0.030943,0.048080,0.082278", \
				        "0.016589,0.019503,0.023182,0.030889,0.048080,0.082248", \
				        "0.023701,0.026973,0.030363,0.036108,0.049492,0.082265", \
				        "0.034084,0.038568,0.043263,0.050846,0.063577,0.087780", \
				        "0.050356,0.056248,0.062502,0.073148,0.090724,0.118331", \
				        "0.077454,0.085396,0.093516,0.107569,0.131135,0.169185", \
				        "0.126213,0.136350,0.147064,0.165536,0.196439,0.246527");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.029832,0.034933,0.040733,0.052202,0.075023,0.120542", \
				        "0.032048,0.037102,0.042957,0.054446,0.077351,0.122885", \
				        "0.035558,0.040814,0.046461,0.058024,0.080983,0.126603", \
				        "0.039853,0.045674,0.051983,0.064074,0.087418,0.133160", \
				        "0.043823,0.051120,0.058684,0.072652,0.098254,0.145708", \
				        "0.043457,0.053608,0.063918,0.082000,0.112840,0.165837", \
				        "0.034263,0.047779,0.061729,0.086258,0.127153,0.192915", \
				        "0.005479,0.023976,0.042394,0.075120,0.129735,0.217168");
			}
			cell_rise(Timing_X4) {
				values ("0.025795,0.030041,0.034862,0.044250,0.062671,0.098955", \
				        "0.029550,0.033758,0.038519,0.047918,0.066346,0.102610", \
				        "0.037725,0.041763,0.046426,0.055677,0.073953,0.110118", \
				        "0.050985,0.056313,0.061794,0.071870,0.089881,0.125638", \
				        "0.068830,0.075903,0.083299,0.096825,0.120128,0.157995", \
				        "0.094201,0.103347,0.112955,0.130641,0.161634,0.213123", \
				        "0.132886,0.144428,0.156832,0.179548,0.219554,0.287129", \
				        "0.194228,0.209608,0.225621,0.255000,0.306276,0.392833");
			}
			fall_transition(Timing_X4) {
				values ("0.013697,0.018134,0.023006,0.032834,0.052546,0.091852", \
				        "0.013704,0.018138,0.022972,0.032822,0.052540,0.091812", \
				        "0.014255,0.018381,0.023157,0.032885,0.052510,0.091861", \
				        "0.016537,0.020679,0.025273,0.034320,0.052932,0.091763", \
				        "0.022839,0.026556,0.030964,0.039494,0.057214,0.093568", \
				        "0.037138,0.040869,0.045050,0.052837,0.068862,0.103087", \
				        "0.063073,0.067414,0.072280,0.081073,0.097061,0.128157", \
				        "0.106658,0.111951,0.118054,0.129527,0.149732,0.183968");
			}
			rise_transition(Timing_X4) {
				values ("0.017280,0.021135,0.025399,0.033874,0.051004,0.085182", \
				        "0.017150,0.021082,0.025301,0.033842,0.050965,0.085081", \
				        "0.018121,0.021504,0.025569,0.033774,0.051044,0.085202", \
				        "0.024868,0.027993,0.031225,0.037422,0.051752,0.085204", \
				        "0.035328,0.039686,0.044173,0.051812,0.064285,0.089504", \
				        "0.050860,0.056745,0.062964,0.073736,0.091394,0.118905", \
				        "0.075428,0.083490,0.091698,0.106207,0.130377,0.169007", \
				        "0.118336,0.128841,0.139958,0.158973,0.190862,0.242626");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.004855,0.003164,0.001234,-0.002593,-0.010310,-0.025762", \
				        "0.004812,0.003135,0.001217,-0.002623,-0.010330,-0.025767", \
				        "0.004910,0.003206,0.001277,-0.002574,-0.010303,-0.025729", \
				        "0.005351,0.003589,0.001626,-0.002335,-0.010122,-0.025635", \
				        "0.006742,0.004788,0.002653,-0.001483,-0.009500,-0.025253", \
				        "0.010479,0.008171,0.005716,0.001099,-0.007490,-0.023785", \
				        "0.019159,0.016445,0.013548,0.008115,-0.001692,-0.019355", \
				        "0.037623,0.034568,0.031232,0.024908,0.013373,-0.007011");
			}
			rise_power(Power_X4) {
				values ("0.005478,0.007211,0.009173,0.013090,0.020889,0.036411", \
				        "0.005505,0.007231,0.009186,0.013085,0.020873,0.036399", \
				        "0.005718,0.007397,0.009321,0.013176,0.020935,0.036410", \
				        "0.006360,0.008001,0.009853,0.013606,0.021234,0.036628", \
				        "0.008161,0.009594,0.011322,0.014889,0.022268,0.037381", \
				        "0.012298,0.013500,0.014975,0.018179,0.025066,0.039630", \
				        "0.021283,0.022236,0.023428,0.026075,0.032091,0.045551", \
				        "0.040037,0.040728,0.041635,0.043680,0.048534,0.060092");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004819,0.003162,0.001224,-0.002615,-0.010328,-0.025776", \
				        "0.004738,0.003066,0.001148,-0.002682,-0.010382,-0.025829", \
				        "0.004637,0.002993,0.001075,-0.002754,-0.010456,-0.025929", \
				        "0.004706,0.003029,0.001099,-0.002748,-0.010447,-0.025895", \
				        "0.005412,0.003594,0.001565,-0.002394,-0.010202,-0.025744", \
				        "0.008132,0.005970,0.003662,-0.000756,-0.009015,-0.024958", \
				        "0.015358,0.012762,0.009960,0.004731,-0.004749,-0.021962", \
				        "0.031376,0.028359,0.025093,0.018913,0.007642,-0.012310");
			}
			rise_power(Power_X4) {
				values ("0.009100,0.010806,0.012768,0.016675,0.024443,0.039954", \
				        "0.009087,0.010789,0.012739,0.016648,0.024436,0.039948", \
				        "0.009262,0.010929,0.012863,0.016714,0.024471,0.039960", \
				        "0.009847,0.011494,0.013397,0.017170,0.024774,0.040178", \
				        "0.011462,0.012992,0.014790,0.018412,0.025809,0.040937", \
				        "0.015212,0.016632,0.018267,0.021658,0.028679,0.043277", \
				        "0.023293,0.024569,0.026073,0.029159,0.035664,0.049372", \
				        "0.040041,0.041191,0.042538,0.045357,0.051269,0.063892");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.004859,0.003162,0.001216,-0.002632,-0.010366,-0.025821", \
				        "0.004744,0.003094,0.001162,-0.002670,-0.010365,-0.025809", \
				        "0.004646,0.002985,0.001067,-0.002757,-0.010453,-0.025902", \
				        "0.004628,0.002957,0.001029,-0.002830,-0.010520,-0.025962", \
				        "0.005090,0.003316,0.001330,-0.002603,-0.010375,-0.025876", \
				        "0.007584,0.005497,0.003217,-0.001116,-0.009339,-0.025182", \
				        "0.015063,0.012507,0.009777,0.004581,-0.004918,-0.022180", \
				        "0.032131,0.029176,0.025971,0.019871,0.008651,-0.011496");
			}
			rise_power(Power_X4) {
				values ("0.012137,0.013836,0.015768,0.019675,0.027464,0.043003", \
				        "0.012133,0.013807,0.015740,0.019641,0.027427,0.042973", \
				        "0.012272,0.013927,0.015859,0.019715,0.027472,0.042987", \
				        "0.012803,0.014466,0.016385,0.020159,0.027778,0.043202", \
				        "0.014427,0.015967,0.017777,0.021429,0.028846,0.044003", \
				        "0.018206,0.019695,0.021363,0.024766,0.031809,0.046399", \
				        "0.026721,0.028026,0.029526,0.032643,0.039143,0.052833", \
				        "0.044458,0.045642,0.046981,0.049794,0.055710,0.068233");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND4_X1
 Cell Description	: Combinational cell (NAND4_X1) with drive strength X1
*******************************************************************************************/

cell (NAND4_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 8831.584462;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 1581.355000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 2103.078000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 521.937200;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 1018.222000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 1739.296000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 2211.327000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 555.564200;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 1808.515000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 9048.876000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 16595.400000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 8044.980000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 16923.870000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 9523.832000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 27401.720000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 9321.439000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 32905.940000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000605;
		fall_capacitance	: 0.000624;
		rise_capacitance	: 0.000586;
		fall_capacitance_range		(0.000550, 0.000737);
		rise_capacitance_range		(0.000484, 0.000754);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000004,0.000004,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000008,0.000007,0.000006,0.000006,0.000005,0.000004,0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000008,0.000007,0.000007,0.000006,0.000006,0.000005,0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000009,0.000008,0.000007,0.000006,0.000006,0.000005,0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000572;
		fall_capacitance	: 0.000583;
		rise_capacitance	: 0.000561;
		fall_capacitance_range		(0.000502, 0.000669);
		rise_capacitance_range		(0.000467, 0.000702);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000018,0.000017,0.000017,0.000017,0.000016,0.000016,0.000015");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000013,0.000013,0.000012,0.000012,0.000012,0.000012,0.000011");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000030,0.000021,0.000015,0.000012,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,0.000000,-0.000000,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000013,0.000012,0.000012,0.000012,0.000012,0.000012,0.000011");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000576;
		fall_capacitance	: 0.000580;
		rise_capacitance	: 0.000572;
		fall_capacitance_range		(0.000512, 0.000647);
		rise_capacitance_range		(0.000481, 0.000702);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000018,0.000013,0.000010,0.000008,0.000006,0.000005,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000005,0.000004,0.000003,0.000003,0.000003,0.000003,0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000005,0.000003,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000578;
		fall_capacitance	: 0.000569;
		rise_capacitance	: 0.000588;
		fall_capacitance_range		(0.000506, 0.000624);
		rise_capacitance_range		(0.000470, 0.000695);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000008,0.000007,0.000006,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019903,0.022798,0.028800,0.040872,0.064655,0.112126", \
				        "0.022980,0.025741,0.031575,0.043539,0.067376,0.114824", \
				        "0.029256,0.032167,0.037710,0.049030,0.072783,0.120050", \
				        "0.035781,0.039855,0.047234,0.060609,0.083919,0.130962", \
				        "0.039800,0.045316,0.055497,0.073631,0.104247,0.153730", \
				        "0.036620,0.043828,0.057434,0.081778,0.122891,0.189293", \
				        "0.014724,0.024999,0.043039,0.075435,0.130064,0.218830", \
				        "-0.046604,-0.033679,-0.009550,0.033111,0.105679,0.223720");
			}
			cell_rise(Timing_X1) {
				values ("0.035719,0.040548,0.050210,0.069240,0.107124,0.182739", \
				        "0.039522,0.044287,0.053859,0.072809,0.110703,0.186351", \
				        "0.047623,0.052328,0.061680,0.080483,0.118240,0.193753", \
				        "0.063703,0.068905,0.078487,0.096882,0.134101,0.209161", \
				        "0.087517,0.094356,0.107149,0.129591,0.167437,0.241353", \
				        "0.124072,0.132784,0.149158,0.178589,0.228633,0.308827", \
				        "0.183303,0.194840,0.215630,0.253057,0.317718,0.424682", \
				        "0.284323,0.298562,0.325569,0.373436,0.456045,0.593634");
			}
			fall_transition(Timing_X1) {
				values ("0.018015,0.021057,0.026898,0.037478,0.057894,0.098585", \
				        "0.017370,0.020441,0.026369,0.037267,0.057909,0.098558", \
				        "0.019563,0.021799,0.026365,0.036456,0.057753,0.098591", \
				        "0.026729,0.028975,0.033295,0.040697,0.058088,0.098574", \
				        "0.039197,0.041770,0.046755,0.055076,0.070455,0.101762", \
				        "0.060467,0.063576,0.069589,0.080087,0.098487,0.129960", \
				        "0.097313,0.101483,0.109176,0.122681,0.145910,0.184753", \
				        "0.163316,0.168769,0.179037,0.197027,0.227268,0.276587");
			}
			rise_transition(Timing_X1) {
				values ("0.027962,0.032522,0.041676,0.059511,0.095267,0.166879", \
				        "0.027956,0.032504,0.041627,0.059421,0.095255,0.166936", \
				        "0.028185,0.032545,0.041731,0.059468,0.095231,0.166927", \
				        "0.033853,0.037007,0.044151,0.059868,0.095295,0.166890", \
				        "0.047326,0.051160,0.058282,0.070238,0.098308,0.166921", \
				        "0.067443,0.072302,0.081474,0.097548,0.124503,0.176619", \
				        "0.101668,0.107133,0.118070,0.138123,0.173775,0.232077", \
				        "0.163396,0.169756,0.182353,0.206019,0.249259,0.324709");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.031202,0.034202,0.040314,0.052185,0.075906,0.123378", \
				        "0.033979,0.036947,0.042940,0.054865,0.078619,0.126087", \
				        "0.039156,0.042196,0.048149,0.060115,0.083867,0.131355", \
				        "0.046950,0.050546,0.057403,0.070360,0.094445,0.141966", \
				        "0.053780,0.058866,0.068088,0.084702,0.113171,0.162826", \
				        "0.054128,0.061118,0.074140,0.097177,0.135764,0.197669", \
				        "0.038001,0.047680,0.065661,0.097530,0.150670,0.235212", \
				        "-0.014914,-0.001254,0.023002,0.066320,0.138741,0.254566");
			}
			cell_rise(Timing_X1) {
				values ("0.052392,0.057188,0.066881,0.086049,0.124098,0.199859", \
				        "0.056021,0.060813,0.070383,0.089591,0.127656,0.203439", \
				        "0.063760,0.068537,0.078029,0.097098,0.135075,0.210820", \
				        "0.080311,0.085033,0.094420,0.113195,0.150807,0.226220", \
				        "0.110193,0.116031,0.127122,0.147072,0.183921,0.258311", \
				        "0.154140,0.161598,0.176098,0.202714,0.248984,0.325586", \
				        "0.222905,0.232914,0.251238,0.285486,0.345787,0.447333", \
				        "0.338051,0.350642,0.374414,0.417859,0.494523,0.625477");
			}
			fall_transition(Timing_X1) {
				values ("0.019142,0.021888,0.027144,0.037501,0.057856,0.098591", \
				        "0.019126,0.021798,0.027255,0.037329,0.057838,0.098583", \
				        "0.019614,0.022134,0.027174,0.037518,0.057843,0.098607", \
				        "0.023894,0.026194,0.030862,0.039283,0.058299,0.098612", \
				        "0.034155,0.036363,0.040926,0.049067,0.065061,0.100196", \
				        "0.052599,0.055242,0.060205,0.069333,0.085790,0.117112", \
				        "0.084624,0.087569,0.093750,0.104877,0.124712,0.159281", \
				        "0.137574,0.141955,0.149939,0.164865,0.190711,0.233875");
			}
			rise_transition(Timing_X1) {
				values ("0.037964,0.042569,0.051874,0.069939,0.105929,0.177888", \
				        "0.037954,0.042590,0.051927,0.069922,0.105904,0.177874", \
				        "0.037950,0.042578,0.051890,0.069932,0.105838,0.177907", \
				        "0.039609,0.043685,0.052300,0.069852,0.105914,0.177889", \
				        "0.052296,0.055838,0.062522,0.075963,0.107060,0.177885", \
				        "0.073113,0.078007,0.087091,0.102827,0.128951,0.184650", \
				        "0.104142,0.110508,0.122353,0.143402,0.179347,0.236976", \
				        "0.156232,0.163900,0.178953,0.205564,0.252119,0.329758");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.038351,0.041398,0.047451,0.059296,0.083060,0.130525", \
				        "0.041074,0.044053,0.050137,0.061970,0.085703,0.133199", \
				        "0.045584,0.048701,0.054578,0.066559,0.090259,0.137763", \
				        "0.051917,0.055305,0.061961,0.074267,0.098161,0.145684", \
				        "0.058235,0.062478,0.070336,0.084919,0.111369,0.160296", \
				        "0.057457,0.063557,0.074722,0.094537,0.128036,0.184236", \
				        "0.036199,0.045084,0.061364,0.089888,0.137134,0.211695", \
				        "-0.027415,-0.014601,0.007857,0.048072,0.114615,0.219153");
			}
			cell_rise(Timing_X1) {
				values ("0.066904,0.071831,0.081708,0.101283,0.139884,0.216192", \
				        "0.070419,0.075345,0.085098,0.104702,0.143318,0.219645", \
				        "0.077937,0.082889,0.092652,0.112117,0.150650,0.226950", \
				        "0.094191,0.099025,0.108694,0.128027,0.166303,0.242314", \
				        "0.127401,0.132777,0.142766,0.161708,0.199176,0.274316", \
				        "0.177907,0.184881,0.198282,0.222987,0.266563,0.341479", \
				        "0.255370,0.264387,0.281459,0.313380,0.370633,0.468126", \
				        "0.383125,0.394675,0.416364,0.456823,0.529552,0.655349");
			}
			fall_transition(Timing_X1) {
				values ("0.019144,0.021820,0.027284,0.037420,0.057789,0.098612", \
				        "0.019129,0.021810,0.027290,0.037524,0.057800,0.098604", \
				        "0.019390,0.021928,0.027343,0.037510,0.057782,0.098602", \
				        "0.021669,0.024180,0.029147,0.038365,0.058026,0.098584", \
				        "0.028745,0.031005,0.035644,0.044342,0.062402,0.099877", \
				        "0.044900,0.047240,0.051892,0.060271,0.076439,0.110460", \
				        "0.076188,0.078524,0.083638,0.093063,0.110275,0.141996", \
				        "0.131287,0.134334,0.140198,0.151768,0.172804,0.209188");
			}
			rise_transition(Timing_X1) {
				values ("0.046242,0.050936,0.060232,0.078563,0.114660,0.186945", \
				        "0.046238,0.050928,0.060317,0.078531,0.114715,0.186942", \
				        "0.046235,0.050909,0.060350,0.078475,0.114686,0.186968", \
				        "0.046249,0.050837,0.060196,0.078540,0.114738,0.186944", \
				        "0.055337,0.058785,0.066083,0.081495,0.114904,0.186973", \
				        "0.077113,0.081796,0.090579,0.105936,0.132164,0.191362", \
				        "0.107664,0.114209,0.125946,0.147086,0.182711,0.239735", \
				        "0.155718,0.163708,0.179244,0.206639,0.254093,0.332497");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.041730,0.044731,0.050802,0.062764,0.086513,0.133957", \
				        "0.044319,0.047311,0.053389,0.065310,0.089080,0.136565", \
				        "0.048217,0.051323,0.057165,0.069068,0.092885,0.140369", \
				        "0.053258,0.056547,0.062923,0.074976,0.098801,0.146331", \
				        "0.057687,0.061369,0.068455,0.081782,0.107063,0.155562", \
				        "0.055684,0.060640,0.069752,0.086188,0.115346,0.167960", \
				        "0.031263,0.038572,0.052267,0.076193,0.115922,0.179903", \
				        "-0.044646,-0.033101,-0.012935,0.022662,0.080950,0.171133");
			}
			cell_rise(Timing_X1) {
				values ("0.079251,0.084386,0.094573,0.114691,0.154006,0.231153", \
				        "0.082806,0.087941,0.097984,0.118073,0.157425,0.234567", \
				        "0.090283,0.095465,0.105502,0.125461,0.164744,0.241863", \
				        "0.106384,0.111440,0.121511,0.141343,0.180387,0.257277", \
				        "0.140832,0.145864,0.155444,0.174731,0.213153,0.289206", \
				        "0.197477,0.204057,0.216627,0.240088,0.281749,0.356140", \
				        "0.282671,0.291161,0.307468,0.337861,0.392613,0.486842", \
				        "0.422225,0.433060,0.453366,0.491613,0.561272,0.683044");
			}
			fall_transition(Timing_X1) {
				values ("0.019146,0.021743,0.027208,0.037318,0.057881,0.098568", \
				        "0.019146,0.021790,0.027232,0.037521,0.057779,0.098612", \
				        "0.019217,0.021870,0.027256,0.037494,0.057903,0.098532", \
				        "0.020529,0.023046,0.028115,0.037825,0.057882,0.098524", \
				        "0.024148,0.026630,0.031824,0.041372,0.060697,0.099558", \
				        "0.035390,0.037692,0.042295,0.051095,0.068939,0.106415", \
				        "0.061692,0.063973,0.068594,0.077224,0.093294,0.126089", \
				        "0.114892,0.117206,0.121599,0.130846,0.148193,0.179589");
			}
			rise_transition(Timing_X1) {
				values ("0.054354,0.059115,0.068574,0.086965,0.123226,0.195647", \
				        "0.054357,0.059116,0.068549,0.086948,0.123203,0.195650", \
				        "0.054364,0.059118,0.068524,0.086980,0.123265,0.195606", \
				        "0.054127,0.058989,0.068507,0.086995,0.123251,0.195625", \
				        "0.058969,0.062909,0.071064,0.087828,0.123090,0.195655", \
				        "0.081029,0.085550,0.094049,0.108978,0.136043,0.198163", \
				        "0.112102,0.118482,0.130017,0.150755,0.185832,0.242183", \
				        "0.158081,0.165908,0.181515,0.209053,0.256660,0.334960");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.001328,0.001080,0.000589,-0.000363,-0.002317,-0.006157", \
				        "0.001323,0.001080,0.000596,-0.000364,-0.002293,-0.006149", \
				        "0.001341,0.001093,0.000609,-0.000351,-0.002285,-0.006147", \
				        "0.001399,0.001153,0.000664,-0.000316,-0.002258,-0.006134", \
				        "0.001587,0.001328,0.000817,-0.000191,-0.002175,-0.006087", \
				        "0.002150,0.001852,0.001283,0.000191,-0.001881,-0.005881", \
				        "0.003566,0.003214,0.002555,0.001308,-0.000980,-0.005227", \
				        "0.006658,0.006273,0.005521,0.004101,0.001472,-0.003282");
			}
			rise_power(Power_X1) {
				values ("0.001413,0.001664,0.002159,0.003140,0.005088,0.008967", \
				        "0.001403,0.001662,0.002156,0.003134,0.005084,0.008970", \
				        "0.001436,0.001684,0.002173,0.003144,0.005085,0.008964", \
				        "0.001535,0.001768,0.002249,0.003198,0.005119,0.008988", \
				        "0.001794,0.002015,0.002474,0.003393,0.005273,0.009095", \
				        "0.002421,0.002621,0.003037,0.003909,0.005715,0.009445", \
				        "0.003863,0.004025,0.004371,0.005137,0.006812,0.010377", \
				        "0.007004,0.007117,0.007376,0.007975,0.009394,0.012645");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.001334,0.001086,0.000594,-0.000368,-0.002302,-0.006164", \
				        "0.001324,0.001081,0.000591,-0.000372,-0.002303,-0.006176", \
				        "0.001316,0.001072,0.000588,-0.000376,-0.002313,-0.006185", \
				        "0.001324,0.001079,0.000612,-0.000376,-0.002313,-0.006186", \
				        "0.001387,0.001137,0.000645,-0.000332,-0.002274,-0.006143", \
				        "0.001723,0.001432,0.000905,-0.000123,-0.002137,-0.006056", \
				        "0.002752,0.002433,0.001815,0.000640,-0.001548,-0.005656", \
				        "0.005343,0.004956,0.004232,0.002861,0.000327,-0.004258");
			}
			rise_power(Power_X1) {
				values ("0.002747,0.002990,0.003477,0.004451,0.006392,0.010273", \
				        "0.002745,0.002979,0.003469,0.004444,0.006386,0.010269", \
				        "0.002748,0.002983,0.003474,0.004445,0.006384,0.010266", \
				        "0.002817,0.003054,0.003533,0.004493,0.006417,0.010282", \
				        "0.003031,0.003278,0.003740,0.004673,0.006565,0.010394", \
				        "0.003606,0.003831,0.004272,0.005166,0.006997,0.010735", \
				        "0.004914,0.005107,0.005515,0.006351,0.008088,0.011682", \
				        "0.007675,0.007865,0.008225,0.008989,0.010586,0.013955");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.001331,0.001091,0.000601,-0.000372,-0.002311,-0.006185", \
				        "0.001321,0.001082,0.000596,-0.000369,-0.002305,-0.006173", \
				        "0.001312,0.001070,0.000593,-0.000375,-0.002307,-0.006176", \
				        "0.001307,0.001063,0.000585,-0.000389,-0.002328,-0.006191", \
				        "0.001332,0.001088,0.000604,-0.000375,-0.002315,-0.006187", \
				        "0.001557,0.001300,0.000786,-0.000219,-0.002196,-0.006104", \
				        "0.002491,0.002187,0.001597,0.000455,-0.001694,-0.005768", \
				        "0.005002,0.004667,0.003950,0.002621,0.000149,-0.004394");
			}
			rise_power(Power_X1) {
				values ("0.003868,0.004102,0.004591,0.005557,0.007503,0.011385", \
				        "0.003845,0.004090,0.004570,0.005541,0.007490,0.011367", \
				        "0.003845,0.004085,0.004569,0.005541,0.007485,0.011365", \
				        "0.003913,0.004142,0.004620,0.005585,0.007517,0.011385", \
				        "0.004106,0.004342,0.004813,0.005754,0.007653,0.011486", \
				        "0.004646,0.004886,0.005337,0.006239,0.008080,0.011831", \
				        "0.005930,0.006149,0.006559,0.007409,0.009169,0.012786", \
				        "0.008706,0.008903,0.009280,0.010061,0.011699,0.015103");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X1) {
				values ("0.001327,0.001094,0.000603,-0.000368,-0.002305,-0.006178", \
				        "0.001326,0.001087,0.000601,-0.000374,-0.002316,-0.006185", \
				        "0.001309,0.001073,0.000591,-0.000379,-0.002316,-0.006184", \
				        "0.001305,0.001066,0.000583,-0.000392,-0.002322,-0.006186", \
				        "0.001313,0.001076,0.000590,-0.000382,-0.002321,-0.006194", \
				        "0.001517,0.001261,0.000756,-0.000257,-0.002228,-0.006124", \
				        "0.002380,0.002084,0.001513,0.000404,-0.001727,-0.005791", \
				        "0.004856,0.004497,0.003831,0.002549,0.000127,-0.004368");
			}
			rise_power(Power_X1) {
				values ("0.004867,0.005113,0.005605,0.006576,0.008526,0.012418", \
				        "0.004855,0.005104,0.005592,0.006564,0.008513,0.012404", \
				        "0.004856,0.005102,0.005592,0.006561,0.008505,0.012396", \
				        "0.004912,0.005157,0.005640,0.006599,0.008537,0.012420", \
				        "0.005110,0.005351,0.005819,0.006766,0.008673,0.012518", \
				        "0.005666,0.005880,0.006332,0.007251,0.009098,0.012861", \
				        "0.006897,0.007127,0.007564,0.008429,0.010194,0.013822", \
				        "0.009726,0.009930,0.010312,0.011114,0.012776,0.016205");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND4_X2
 Cell Description	: Combinational cell (NAND4_X2) with drive strength X2
*******************************************************************************************/

cell (NAND4_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 18202.737125;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 3258.701000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 4332.319000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 1073.289000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 2094.166000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 3582.317000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 4554.507000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 1140.510000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 3721.365000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 18648.730000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 34201.590000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 16578.020000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 34877.040000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 19626.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 56473.780000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 19207.040000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 67874.090000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001146;
		fall_capacitance	: 0.001181;
		rise_capacitance	: 0.001110;
		fall_capacitance_range		(0.000999, 0.001453);
		rise_capacitance_range		(0.000921, 0.001453);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000011,0.000008,0.000006,0.000005,0.000004,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000014,0.000011,0.000009,0.000007,0.000006,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000004,0.000002,0.000000,-0.000001,-0.000004,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000014,0.000012,0.000010,0.000009,0.000008,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000015,0.000013,0.000011,0.000010,0.000009,0.000007,0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000020,0.000017,0.000015,0.000014,0.000012,0.000011,0.000008");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001104;
		fall_capacitance	: 0.001118;
		rise_capacitance	: 0.001091;
		fall_capacitance_range		(0.000967, 0.001322);
		rise_capacitance_range		(0.000939, 0.001364);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000046,0.000042,0.000041,0.000039,0.000039,0.000038,0.000037,0.000036");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000029,0.000027,0.000026,0.000025,0.000025,0.000025,0.000024");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000096,0.000069,0.000048,0.000036,0.000028,0.000022,0.000016,0.000008");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000031,0.000030,0.000028,0.000028,0.000028,0.000027,0.000027");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.001083;
		fall_capacitance	: 0.001087;
		rise_capacitance	: 0.001079;
		fall_capacitance_range		(0.000985, 0.001257);
		rise_capacitance_range		(0.000849, 0.001340);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000000,-0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000012,0.000006,0.000003,0.000000,-0.000002,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000044,0.000032,0.000024,0.000019,0.000016,0.000011,0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000003,0.000002,0.000001,0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000009,0.000008,0.000007,0.000007,0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000016,0.000009,0.000004,0.000001,-0.000002,-0.000006,-0.000014");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.001094;
		fall_capacitance	: 0.001067;
		rise_capacitance	: 0.001120;
		fall_capacitance_range		(0.000963, 0.001207);
		rise_capacitance_range		(0.000892, 0.001332);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000010,0.000006,0.000004,0.000002,-0.000001,-0.000005,-0.000012");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000008,0.000004,0.000002,-0.000000,-0.000002,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000005,0.000003,0.000001,-0.000002,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000003,0.000000,-0.000001,-0.000004,-0.000008,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000030,0.000023,0.000019,0.000016,0.000013,0.000010,0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000008,0.000004,0.000002,-0.000000,-0.000002,-0.000006,-0.000013");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000010,0.000006,0.000003,0.000001,-0.000002,-0.000006,-0.000013");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.015515,0.019805,0.025680,0.037468,0.060787,0.107339", \
				        "0.018855,0.022712,0.028445,0.040136,0.063523,0.110013", \
				        "0.023769,0.028668,0.034620,0.045723,0.068915,0.115297", \
				        "0.027911,0.034658,0.042507,0.056600,0.080050,0.126100", \
				        "0.029080,0.038071,0.048772,0.067703,0.099034,0.149012", \
				        "0.022109,0.034110,0.048417,0.073690,0.115619,0.182629", \
				        "-0.004109,0.012149,0.031164,0.064638,0.120284,0.209643", \
				        "-0.070397,-0.049842,-0.024585,0.019349,0.093105,0.211681");
			}
			cell_rise(Timing_X2) {
				values ("0.027164,0.034198,0.043618,0.062046,0.098673,0.171674", \
				        "0.031023,0.037947,0.047166,0.065633,0.102242,0.175300", \
				        "0.039322,0.046080,0.055197,0.073308,0.109690,0.182642", \
				        "0.053307,0.061779,0.071878,0.089684,0.125535,0.198009", \
				        "0.073845,0.084824,0.098098,0.121147,0.158999,0.230232", \
				        "0.106467,0.120422,0.137314,0.167261,0.217700,0.297815", \
				        "0.160444,0.178572,0.200110,0.238212,0.303122,0.409551", \
				        "0.254088,0.276840,0.304767,0.353672,0.436755,0.573388");
			}
			fall_transition(Timing_X2) {
				values ("0.012796,0.017442,0.022815,0.033226,0.053290,0.093426", \
				        "0.012837,0.016929,0.022286,0.033038,0.053323,0.093369", \
				        "0.016185,0.019341,0.023481,0.032700,0.053267,0.093365", \
				        "0.022952,0.026409,0.030466,0.037981,0.054123,0.093361", \
				        "0.034525,0.038543,0.043524,0.052187,0.067398,0.097716", \
				        "0.054401,0.059438,0.065701,0.076516,0.095055,0.126458", \
				        "0.089220,0.096017,0.104110,0.118045,0.141566,0.180530", \
				        "0.152717,0.161614,0.172313,0.190887,0.221643,0.271143");
			}
			rise_transition(Timing_X2) {
				values ("0.019727,0.026309,0.035293,0.052428,0.086948,0.156098", \
				        "0.019724,0.026291,0.035062,0.052431,0.086859,0.156091", \
				        "0.021009,0.026708,0.035267,0.052401,0.086945,0.156103", \
				        "0.028232,0.032815,0.039130,0.053253,0.086962,0.156117", \
				        "0.039722,0.045871,0.053415,0.065511,0.091135,0.156088", \
				        "0.058050,0.065539,0.074943,0.091406,0.118652,0.167911", \
				        "0.090635,0.099084,0.110152,0.130286,0.165916,0.224199", \
				        "0.150613,0.160417,0.173013,0.196790,0.239676,0.314208");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024710,0.029216,0.035131,0.046819,0.070173,0.116745", \
				        "0.027393,0.031846,0.037796,0.049498,0.072868,0.119443", \
				        "0.032194,0.036951,0.042843,0.054646,0.078014,0.124661", \
				        "0.038100,0.044064,0.051233,0.064433,0.088413,0.135129", \
				        "0.041590,0.050012,0.059939,0.077276,0.106406,0.155910", \
				        "0.037693,0.049284,0.063161,0.087266,0.126880,0.189442", \
				        "0.016402,0.032463,0.051470,0.084604,0.138921,0.224341", \
				        "-0.042518,-0.020761,0.004946,0.049658,0.123610,0.240342");
			}
			cell_rise(Timing_X2) {
				values ("0.040933,0.047954,0.057311,0.075852,0.112578,0.185636", \
				        "0.044549,0.051544,0.060838,0.079390,0.116144,0.189276", \
				        "0.052415,0.059332,0.068522,0.086907,0.123563,0.196627", \
				        "0.068989,0.076074,0.085081,0.103083,0.139268,0.211944", \
				        "0.094956,0.104318,0.115893,0.136541,0.172564,0.244114", \
				        "0.134218,0.146138,0.161144,0.188391,0.235351,0.311623", \
				        "0.197160,0.212846,0.231862,0.266669,0.327416,0.428949", \
				        "0.304322,0.324255,0.348927,0.393287,0.470545,0.600971");
			}
			fall_transition(Timing_X2) {
				values ("0.014098,0.018114,0.023172,0.033214,0.053328,0.093420", \
				        "0.014083,0.018079,0.023169,0.033219,0.053325,0.093429", \
				        "0.015327,0.018805,0.023534,0.033155,0.053336,0.093419", \
				        "0.020220,0.023471,0.027636,0.035833,0.053928,0.093436", \
				        "0.030157,0.033545,0.038020,0.045821,0.061565,0.095583", \
				        "0.047655,0.051688,0.056823,0.066047,0.082515,0.113366", \
				        "0.077781,0.082579,0.088998,0.100559,0.120668,0.155229", \
				        "0.127521,0.134466,0.142939,0.158488,0.185064,0.228609");
			}
			rise_transition(Timing_X2) {
				values ("0.027935,0.034637,0.043653,0.060940,0.095708,0.165111", \
				        "0.027937,0.034578,0.043654,0.060912,0.095715,0.165122", \
				        "0.027921,0.034626,0.043653,0.060958,0.095721,0.165146", \
				        "0.031816,0.037102,0.044855,0.061041,0.095624,0.165145", \
				        "0.044321,0.050120,0.057228,0.069570,0.097868,0.165119", \
				        "0.062262,0.070074,0.079597,0.095866,0.122516,0.174152", \
				        "0.090358,0.100412,0.112611,0.134059,0.170378,0.228248", \
				        "0.139232,0.151722,0.167164,0.194166,0.240663,0.317801");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.030587,0.035086,0.041001,0.052690,0.076051,0.122588", \
				        "0.033151,0.037557,0.043536,0.055279,0.078648,0.125208", \
				        "0.037248,0.041909,0.047689,0.059541,0.082891,0.129518", \
				        "0.042292,0.047574,0.054175,0.066641,0.090394,0.137080", \
				        "0.045712,0.052747,0.061137,0.076204,0.102895,0.151457", \
				        "0.040161,0.050391,0.062495,0.083361,0.117910,0.174384", \
				        "0.013269,0.027962,0.045368,0.075383,0.124077,0.199619", \
				        "-0.055764,-0.035288,-0.011478,0.030110,0.098055,0.203718");
			}
			cell_rise(Timing_X2) {
				values ("0.052642,0.059859,0.069403,0.088314,0.125450,0.198956", \
				        "0.056150,0.063349,0.072830,0.091757,0.128921,0.202455", \
				        "0.063755,0.070981,0.080371,0.099162,0.136292,0.209779", \
				        "0.080346,0.087356,0.096674,0.115183,0.151948,0.225089", \
				        "0.110902,0.119456,0.130002,0.149192,0.185028,0.257226", \
				        "0.155980,0.166991,0.180858,0.206284,0.250643,0.324682", \
				        "0.226957,0.241145,0.258685,0.291301,0.349164,0.446909", \
				        "0.346558,0.364663,0.387085,0.428346,0.501549,0.627040");
			}
			fall_transition(Timing_X2) {
				values ("0.014110,0.018003,0.023114,0.033207,0.053293,0.093399", \
				        "0.014166,0.018101,0.023139,0.033190,0.053338,0.093444", \
				        "0.014802,0.018491,0.023303,0.033271,0.053293,0.093345", \
				        "0.017526,0.020977,0.025769,0.034705,0.053745,0.093395", \
				        "0.025193,0.028479,0.032811,0.041129,0.058565,0.095027", \
				        "0.041185,0.044740,0.049239,0.057592,0.073441,0.106320", \
				        "0.071787,0.075420,0.080506,0.090080,0.107210,0.138401", \
				        "0.123908,0.128572,0.134717,0.146854,0.168402,0.205060");
			}
			rise_transition(Timing_X2) {
				values ("0.034703,0.041473,0.050512,0.068131,0.102877,0.172577", \
				        "0.034712,0.041475,0.050538,0.068134,0.102900,0.172540", \
				        "0.034704,0.041479,0.050551,0.068120,0.102882,0.172537", \
				        "0.035782,0.041972,0.050565,0.068018,0.102953,0.172569", \
				        "0.047234,0.052714,0.059438,0.073143,0.103797,0.172576", \
				        "0.065817,0.073377,0.082688,0.098640,0.124685,0.179153", \
				        "0.092657,0.102926,0.115218,0.136843,0.173098,0.230522", \
				        "0.136880,0.149736,0.165807,0.193702,0.241386,0.319630");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.033263,0.037766,0.043717,0.055462,0.078755,0.125310", \
				        "0.035647,0.040088,0.046099,0.057781,0.081158,0.127702", \
				        "0.039154,0.043710,0.049558,0.061289,0.084649,0.131281", \
				        "0.043061,0.048014,0.054231,0.066338,0.089934,0.136597", \
				        "0.045474,0.051260,0.058500,0.071914,0.097186,0.145250", \
				        "0.038981,0.047356,0.057239,0.074516,0.104222,0.156617", \
				        "0.007831,0.020439,0.035321,0.060816,0.102108,0.166924", \
				        "-0.074273,-0.055566,-0.033988,0.003238,0.063257,0.154839");
			}
			cell_rise(Timing_X2) {
				values ("0.062542,0.070060,0.079944,0.099298,0.137122,0.211377", \
				        "0.066110,0.073598,0.083337,0.102753,0.140573,0.214851", \
				        "0.073653,0.081216,0.090965,0.110177,0.147933,0.222147", \
				        "0.090064,0.097391,0.107080,0.126119,0.163617,0.237513", \
				        "0.123450,0.131527,0.141412,0.159965,0.196608,0.269604", \
				        "0.173972,0.184379,0.197518,0.221643,0.264176,0.336946", \
				        "0.252236,0.265522,0.282215,0.313238,0.368736,0.463487", \
				        "0.383365,0.400163,0.421165,0.460088,0.530206,0.651732");
			}
			fall_transition(Timing_X2) {
				values ("0.014149,0.017974,0.023138,0.033265,0.053339,0.093446", \
				        "0.014167,0.018013,0.023092,0.033210,0.053272,0.093349", \
				        "0.014461,0.018146,0.023191,0.033176,0.053329,0.093446", \
				        "0.015923,0.019662,0.024543,0.034093,0.053592,0.093393", \
				        "0.020235,0.023647,0.028395,0.037704,0.056595,0.094619", \
				        "0.032327,0.035681,0.040166,0.048410,0.065490,0.101948", \
				        "0.059134,0.062445,0.066952,0.075498,0.090911,0.122487", \
				        "0.111492,0.114596,0.118948,0.128262,0.145642,0.176700");
			}
			rise_transition(Timing_X2) {
				values ("0.041364,0.048222,0.057321,0.075020,0.110051,0.179829", \
				        "0.041365,0.048228,0.057373,0.075039,0.110047,0.179822", \
				        "0.041357,0.048242,0.057370,0.075105,0.110051,0.179829", \
				        "0.041078,0.047898,0.057198,0.075098,0.110001,0.179810", \
				        "0.050086,0.055353,0.062465,0.077686,0.110159,0.179814", \
				        "0.069464,0.076729,0.085718,0.101210,0.127306,0.184418", \
				        "0.096213,0.106295,0.118419,0.139871,0.175738,0.232645", \
				        "0.137496,0.150423,0.166517,0.194673,0.242746,0.321340");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.001995,0.001260,0.000297,-0.001628,-0.005479,-0.013212", \
				        "0.001991,0.001279,0.000299,-0.001633,-0.005489,-0.013214", \
				        "0.002034,0.001308,0.000331,-0.001604,-0.005470,-0.013201", \
				        "0.002175,0.001425,0.000446,-0.001510,-0.005399,-0.013167", \
				        "0.002655,0.001829,0.000787,-0.001248,-0.005217,-0.013045", \
				        "0.003960,0.003018,0.001835,-0.000393,-0.004579,-0.012610", \
				        "0.007025,0.005961,0.004589,0.002034,-0.002644,-0.011208", \
				        "0.013625,0.012418,0.010863,0.007933,0.002564,-0.007082");
			}
			rise_power(Power_X2) {
				values ("0.002325,0.003074,0.004069,0.006038,0.009944,0.017709", \
				        "0.002326,0.003073,0.004061,0.006030,0.009933,0.017708", \
				        "0.002399,0.003126,0.004099,0.006041,0.009932,0.017693", \
				        "0.002624,0.003318,0.004268,0.006170,0.010011,0.017734", \
				        "0.003214,0.003862,0.004758,0.006590,0.010332,0.017961", \
				        "0.004615,0.005171,0.005975,0.007683,0.011273,0.018700", \
				        "0.007743,0.008168,0.008823,0.010290,0.013583,0.020667", \
				        "0.014383,0.014680,0.015149,0.016275,0.019012,0.025420");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.001991,0.001272,0.000297,-0.001628,-0.005502,-0.013245", \
				        "0.001998,0.001264,0.000287,-0.001637,-0.005500,-0.013243", \
				        "0.001982,0.001253,0.000279,-0.001655,-0.005526,-0.013270", \
				        "0.001981,0.001264,0.000295,-0.001637,-0.005503,-0.013255", \
				        "0.002185,0.001431,0.000721,-0.001529,-0.005428,-0.013184", \
				        "0.003033,0.002171,0.000940,-0.001050,-0.005083,-0.012967", \
				        "0.005456,0.004425,0.003138,0.000704,-0.003778,-0.012081", \
				        "0.010969,0.009817,0.008181,0.005492,0.000302,-0.009022");
			}
			rise_power(Power_X2) {
				values ("0.004625,0.005357,0.006332,0.008289,0.012171,0.019937", \
				        "0.004604,0.005342,0.006313,0.008270,0.012158,0.019928", \
				        "0.004627,0.005360,0.006331,0.008270,0.012151,0.019916", \
				        "0.004800,0.005510,0.006463,0.008376,0.012230,0.019959", \
				        "0.005323,0.006018,0.006934,0.008776,0.012545,0.020170", \
				        "0.006581,0.007202,0.008071,0.009836,0.013466,0.020917", \
				        "0.009325,0.009909,0.010704,0.012348,0.015773,0.022906", \
				        "0.015157,0.015674,0.016387,0.017873,0.021020,0.027688");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.002008,0.001280,0.000299,-0.001643,-0.005514,-0.013270", \
				        "0.001975,0.001266,0.000286,-0.001637,-0.005504,-0.013243", \
				        "0.001953,0.001245,0.000273,-0.001662,-0.005516,-0.013262", \
				        "0.001966,0.001231,0.000270,-0.001667,-0.005539,-0.013287", \
				        "0.002051,0.001309,0.000332,-0.001617,-0.005503,-0.013257", \
				        "0.002720,0.001902,0.000822,-0.001232,-0.005226,-0.013060", \
				        "0.004897,0.003962,0.002717,0.000372,-0.004030,-0.012269", \
				        "0.010473,0.009333,0.007881,0.005124,0.000033,-0.009218");
			}
			rise_power(Power_X2) {
				values ("0.006518,0.007251,0.008220,0.010170,0.014056,0.021815", \
				        "0.006496,0.007211,0.008191,0.010136,0.014024,0.021798", \
				        "0.006497,0.007231,0.008189,0.010132,0.014022,0.021784", \
				        "0.006667,0.007365,0.008308,0.010235,0.014084,0.021822", \
				        "0.007134,0.007828,0.008757,0.010617,0.014395,0.022047", \
				        "0.008340,0.008967,0.009875,0.011670,0.015321,0.022795", \
				        "0.011069,0.011667,0.012483,0.014164,0.017633,0.024812", \
				        "0.016922,0.017488,0.018210,0.019756,0.022971,0.029686");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X2) {
				values ("0.002003,0.001286,0.000298,-0.001638,-0.005512,-0.013260", \
				        "0.001974,0.001264,0.000292,-0.001641,-0.005507,-0.013251", \
				        "0.001961,0.001251,0.000271,-0.001650,-0.005518,-0.013259", \
				        "0.001946,0.001225,0.000254,-0.001674,-0.005535,-0.013286", \
				        "0.002018,0.001279,0.000303,-0.001648,-0.005527,-0.013282", \
				        "0.002614,0.001806,0.000758,-0.001299,-0.005277,-0.013095", \
				        "0.004693,0.003764,0.002572,0.000277,-0.004071,-0.012299", \
				        "0.010211,0.009127,0.007712,0.005056,0.000080,-0.009105");
			}
			rise_power(Power_X2) {
				values ("0.008243,0.008973,0.009956,0.011900,0.015789,0.023567", \
				        "0.008232,0.008962,0.009922,0.011871,0.015772,0.023544", \
				        "0.008243,0.008967,0.009932,0.011869,0.015758,0.023537", \
				        "0.008389,0.009088,0.010050,0.011975,0.015833,0.023577", \
				        "0.008843,0.009536,0.010465,0.012339,0.016138,0.023803", \
				        "0.010049,0.010688,0.011587,0.013393,0.017066,0.024544", \
				        "0.012760,0.013372,0.014206,0.015909,0.019399,0.026611", \
				        "0.018706,0.019291,0.020020,0.021590,0.024834,0.031606");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NAND4_X4
 Cell Description	: Combinational cell (NAND4_X4) with drive strength X4
*******************************************************************************************/

cell (NAND4_X4) {

	area               	: 2.394000;

	cell_leakage_power 	: 36405.632187;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 6517.547000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 8664.948000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 2146.815000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 4188.570000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 7164.849000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 9109.203000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 2281.224000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 7442.959000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 37297.680000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 68403.410000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 33156.260000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 69754.360000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 39252.790000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 112947.600000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 38414.200000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 135747.700000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002103;
		fall_capacitance	: 0.002176;
		rise_capacitance	: 0.002030;
		fall_capacitance_range		(0.001860, 0.002716);
		rise_capacitance_range		(0.001601, 0.002720);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000021,0.000014,0.000009,0.000007,0.000004,0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000013,0.000009,0.000006,0.000003,-0.000001,-0.000009");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000043,0.000030,0.000022,0.000017,0.000014,0.000010,0.000006,-0.000002");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000017,0.000008,0.000003,-0.000000,-0.000004,-0.000008,-0.000017");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000041,0.000029,0.000022,0.000018,0.000016,0.000014,0.000010,0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000032,0.000025,0.000020,0.000018,0.000015,0.000011,0.000005");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000049,0.000041,0.000035,0.000032,0.000030,0.000026,0.000021");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002305;
		fall_capacitance	: 0.002338;
		rise_capacitance	: 0.002273;
		fall_capacitance_range		(0.001991, 0.002741);
		rise_capacitance_range		(0.001952, 0.002825);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000080,0.000074,0.000070,0.000067,0.000066,0.000065,0.000064,0.000063");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000011,0.000006,0.000003,0.000001,-0.000000,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000040,0.000036,0.000034,0.000033,0.000033,0.000032,0.000031");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000184,0.000126,0.000084,0.000059,0.000044,0.000032,0.000020,0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000010,0.000006,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000010,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000055,0.000048,0.000044,0.000042,0.000041,0.000040,0.000040,0.000039");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.002418;
		fall_capacitance	: 0.002419;
		rise_capacitance	: 0.002418;
		fall_capacitance_range		(0.002096, 0.002772);
		rise_capacitance_range		(0.001997, 0.002941);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000007,0.000002,-0.000000,-0.000001,-0.000002,-0.000003,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000014,0.000009,0.000006,0.000004,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000042,0.000025,0.000014,0.000007,0.000002,-0.000003,-0.000011,-0.000025");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000103,0.000068,0.000044,0.000029,0.000020,0.000012,0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000012,0.000008,0.000005,0.000003,0.000001,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000017,0.000013,0.000010,0.000009,0.000008,0.000007,0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000020,0.000008,0.000001,-0.000004,-0.000010,-0.000018,-0.000032");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.002641;
		fall_capacitance	: 0.002585;
		rise_capacitance	: 0.002697;
		fall_capacitance_range		(0.002294, 0.002865);
		rise_capacitance_range		(0.002361, 0.003119);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000025,0.000017,0.000012,0.000008,0.000003,-0.000005,-0.000017");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000016,0.000008,0.000003,-0.000000,-0.000005,-0.000012,-0.000027");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000019,0.000011,0.000006,0.000002,-0.000003,-0.000011,-0.000025");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000015,0.000007,0.000002,-0.000002,-0.000007,-0.000014,-0.000029");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000056,0.000039,0.000027,0.000018,0.000012,0.000007,-0.000001,-0.000013");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000017,0.000009,0.000004,-0.000000,-0.000005,-0.000012,-0.000027");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000017,0.000009,0.000004,0.000000,-0.000005,-0.000013,-0.000028");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((A1 & A2) & A3) & A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015097,0.020085,0.025918,0.037630,0.060988,0.107588", \
				        "0.018528,0.023023,0.028690,0.040345,0.063725,0.110283", \
				        "0.023496,0.029112,0.034965,0.045959,0.069122,0.115573", \
				        "0.027773,0.035464,0.043244,0.057086,0.080328,0.126374", \
				        "0.029002,0.039400,0.049866,0.068527,0.099584,0.149313", \
				        "0.022296,0.036026,0.050079,0.075052,0.116590,0.183291", \
				        "-0.003782,0.014945,0.033598,0.066625,0.121834,0.210765", \
				        "-0.069754,-0.045889,-0.021222,0.022197,0.095357,0.213385");
			}
			cell_rise(Timing_X4) {
				values ("0.028235,0.036457,0.045805,0.064239,0.100957,0.174058", \
				        "0.032071,0.040146,0.049493,0.067844,0.104596,0.177716", \
				        "0.040267,0.048170,0.057251,0.075521,0.112056,0.185090", \
				        "0.054372,0.064123,0.073989,0.091831,0.127770,0.200367", \
				        "0.075013,0.087711,0.100782,0.123559,0.161089,0.232485", \
				        "0.107798,0.123826,0.140504,0.170190,0.220267,0.299959", \
				        "0.161741,0.182697,0.203934,0.241694,0.306252,0.412283", \
				        "0.255573,0.281973,0.309467,0.357905,0.440461,0.576700");
			}
			fall_transition(Timing_X4) {
				values ("0.012634,0.017923,0.023436,0.033757,0.053970,0.094118", \
				        "0.012716,0.017444,0.022841,0.033661,0.054024,0.094176", \
				        "0.016095,0.019666,0.023724,0.033163,0.053869,0.094185", \
				        "0.023001,0.026837,0.030908,0.038234,0.054722,0.094100", \
				        "0.034595,0.039206,0.044135,0.052659,0.067765,0.098305", \
				        "0.054581,0.060396,0.066500,0.077186,0.095588,0.126905", \
				        "0.089572,0.097363,0.105253,0.119009,0.142349,0.181162", \
				        "0.153252,0.163416,0.173950,0.192246,0.222762,0.272021");
			}
			rise_transition(Timing_X4) {
				values ("0.020475,0.028149,0.036915,0.054185,0.088877,0.158211", \
				        "0.020463,0.028158,0.037103,0.054164,0.088873,0.158213", \
				        "0.021625,0.028389,0.036929,0.054293,0.088881,0.158214", \
				        "0.028776,0.034030,0.040559,0.055043,0.088861,0.158180", \
				        "0.040461,0.047479,0.054813,0.066760,0.092864,0.158217", \
				        "0.058757,0.067484,0.076798,0.093015,0.120138,0.169614", \
				        "0.091207,0.101163,0.112165,0.132232,0.167742,0.225761", \
				        "0.151110,0.162465,0.175209,0.198872,0.241735,0.316182");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024834,0.030042,0.035916,0.047685,0.071064,0.117625", \
				        "0.027476,0.032639,0.038574,0.050323,0.073703,0.120343", \
				        "0.032197,0.037728,0.043574,0.055382,0.078851,0.125526", \
				        "0.038077,0.044993,0.052116,0.065175,0.089220,0.136020", \
				        "0.041500,0.051249,0.061068,0.078288,0.107254,0.156742", \
				        "0.037190,0.050861,0.064584,0.088519,0.127948,0.190368", \
				        "0.015890,0.034387,0.053209,0.086139,0.140252,0.225506", \
				        "-0.043553,-0.018265,0.007139,0.051602,0.125281,0.241785");
			}
			cell_rise(Timing_X4) {
				values ("0.042135,0.050319,0.059693,0.078276,0.115063,0.188279", \
				        "0.045712,0.053882,0.063213,0.081815,0.118636,0.191907", \
				        "0.053521,0.061605,0.070838,0.089317,0.126056,0.199254", \
				        "0.070120,0.078265,0.087296,0.105373,0.141702,0.214544", \
				        "0.096293,0.107188,0.118504,0.138868,0.174857,0.246617", \
				        "0.135820,0.149643,0.164452,0.191439,0.238022,0.314017", \
				        "0.198866,0.217063,0.235813,0.270395,0.330829,0.431969", \
				        "0.306304,0.329425,0.353762,0.397787,0.474669,0.604760");
			}
			fall_transition(Timing_X4) {
				values ("0.014140,0.018752,0.023678,0.033859,0.053931,0.094124", \
				        "0.014115,0.018735,0.023684,0.033851,0.053993,0.094170", \
				        "0.015258,0.019394,0.024066,0.033838,0.053963,0.094199", \
				        "0.020004,0.023753,0.027982,0.036244,0.054519,0.094153", \
				        "0.029940,0.033857,0.038141,0.046034,0.061907,0.096286", \
				        "0.047536,0.052165,0.057245,0.066299,0.082755,0.113754", \
				        "0.077740,0.083405,0.089728,0.101148,0.121095,0.155610", \
				        "0.127927,0.135828,0.144138,0.159542,0.185840,0.229199");
			}
			rise_transition(Timing_X4) {
				values ("0.028492,0.036307,0.045319,0.062736,0.097563,0.167269", \
				        "0.028488,0.036311,0.045323,0.062770,0.097630,0.167268", \
				        "0.028496,0.036270,0.045265,0.062684,0.097644,0.167254", \
				        "0.032108,0.038440,0.046236,0.062781,0.097643,0.167275", \
				        "0.044687,0.051321,0.058241,0.070713,0.099601,0.167251", \
				        "0.062667,0.071738,0.081187,0.097263,0.123666,0.175860", \
				        "0.090591,0.102248,0.114430,0.135791,0.172055,0.229716", \
				        "0.138820,0.153399,0.168871,0.195884,0.242416,0.319599");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031338,0.036567,0.042473,0.054161,0.077517,0.124109", \
				        "0.033890,0.039038,0.044968,0.056678,0.080091,0.126684", \
				        "0.037928,0.043282,0.049099,0.060832,0.084260,0.130904", \
				        "0.042950,0.049047,0.055524,0.067944,0.091737,0.138470", \
				        "0.046366,0.054463,0.062721,0.077682,0.104307,0.152862", \
				        "0.040571,0.052477,0.064429,0.085125,0.119431,0.175812", \
				        "0.013160,0.030295,0.047589,0.077385,0.125861,0.201197", \
				        "-0.056362,-0.032657,-0.009041,0.032265,0.100029,0.205557");
			}
			cell_rise(Timing_X4) {
				values ("0.053843,0.062307,0.071834,0.090753,0.127977,0.201641", \
				        "0.057353,0.065788,0.075267,0.094212,0.131464,0.205152", \
				        "0.064941,0.073361,0.082784,0.101653,0.138869,0.212485", \
				        "0.081474,0.089705,0.098982,0.117574,0.154425,0.227745", \
				        "0.112258,0.122172,0.132480,0.151501,0.187447,0.259818", \
				        "0.157753,0.170402,0.184167,0.209267,0.253368,0.327203", \
				        "0.228866,0.245418,0.262764,0.295171,0.352682,0.449982", \
				        "0.348880,0.369849,0.392027,0.433030,0.505861,0.630930");
			}
			fall_transition(Timing_X4) {
				values ("0.014162,0.018693,0.023730,0.033812,0.053984,0.094108", \
				        "0.014210,0.018753,0.023728,0.033830,0.054002,0.094146", \
				        "0.014776,0.019016,0.023868,0.033850,0.054003,0.094194", \
				        "0.017368,0.021471,0.026132,0.035269,0.054365,0.094105", \
				        "0.024837,0.028688,0.033063,0.041424,0.059033,0.095763", \
				        "0.040801,0.044930,0.049482,0.057819,0.073674,0.106857", \
				        "0.071549,0.075857,0.080874,0.090388,0.107500,0.138774", \
				        "0.124169,0.129506,0.135625,0.147555,0.168973,0.205448");
			}
			rise_transition(Timing_X4) {
				values ("0.035167,0.043087,0.052126,0.069804,0.104808,0.174658", \
				        "0.035164,0.043090,0.052156,0.069680,0.104769,0.174668", \
				        "0.035167,0.043095,0.052157,0.069772,0.104837,0.174624", \
				        "0.036107,0.043424,0.052212,0.069756,0.104761,0.174644", \
				        "0.047472,0.053800,0.060580,0.074462,0.105545,0.174650", \
				        "0.066170,0.074909,0.084011,0.099818,0.125843,0.180935", \
				        "0.093096,0.104857,0.117026,0.138542,0.174617,0.231865", \
				        "0.136788,0.151737,0.167745,0.195574,0.243204,0.321426");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.034765,0.039973,0.045878,0.057575,0.080920,0.127526", \
				        "0.037104,0.042258,0.048155,0.059889,0.083285,0.129867", \
				        "0.040550,0.045762,0.051579,0.063354,0.086764,0.133396", \
				        "0.044443,0.050127,0.056252,0.068344,0.091964,0.138664", \
				        "0.046801,0.053487,0.060614,0.073964,0.099290,0.147309", \
				        "0.040294,0.049906,0.059582,0.076689,0.106285,0.158660", \
				        "0.008688,0.023345,0.038056,0.063328,0.104376,0.168998", \
				        "-0.074257,-0.052489,-0.031078,0.005933,0.065737,0.157129");
			}
			cell_rise(Timing_X4) {
				values ("0.063658,0.072443,0.082286,0.101636,0.139496,0.213798", \
				        "0.067238,0.075972,0.085741,0.105102,0.143004,0.217309", \
				        "0.074841,0.083613,0.093294,0.112526,0.150361,0.224662", \
				        "0.091167,0.099782,0.109429,0.128478,0.165967,0.239933", \
				        "0.124714,0.134035,0.143810,0.162241,0.198932,0.271996", \
				        "0.175777,0.187626,0.200651,0.224577,0.266654,0.339295", \
				        "0.254229,0.269778,0.286121,0.316907,0.372049,0.466322", \
				        "0.385771,0.404977,0.426012,0.464705,0.534415,0.655367");
			}
			fall_transition(Timing_X4) {
				values ("0.014165,0.018722,0.023740,0.033806,0.053969,0.094133", \
				        "0.014201,0.018720,0.023751,0.033779,0.053985,0.094182", \
				        "0.014428,0.018803,0.023757,0.033835,0.053989,0.094189", \
				        "0.015835,0.020155,0.025066,0.034750,0.054215,0.094191", \
				        "0.019945,0.024053,0.028708,0.038158,0.057214,0.095370", \
				        "0.031885,0.035800,0.040213,0.048543,0.065862,0.102576", \
				        "0.058684,0.062632,0.067133,0.075591,0.091118,0.122962", \
				        "0.111791,0.115131,0.119595,0.128811,0.146031,0.177036");
			}
			rise_transition(Timing_X4) {
				values ("0.041676,0.049694,0.058865,0.076610,0.111705,0.181627", \
				        "0.041673,0.049702,0.058881,0.076612,0.111695,0.181634", \
				        "0.041675,0.049712,0.058853,0.076607,0.111718,0.181639", \
				        "0.041361,0.049421,0.058679,0.076597,0.111716,0.181634", \
				        "0.050162,0.056285,0.063670,0.078882,0.111703,0.181629", \
				        "0.069593,0.078065,0.086876,0.102302,0.128315,0.185957", \
				        "0.096538,0.108089,0.120098,0.141340,0.177025,0.233725", \
				        "0.137571,0.152767,0.168514,0.196528,0.244391,0.322836");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.004235,0.002527,0.000618,-0.003238,-0.010968,-0.026433", \
				        "0.004234,0.002536,0.000617,-0.003243,-0.010970,-0.026437", \
				        "0.004314,0.002616,0.000670,-0.003199,-0.010930,-0.026403", \
				        "0.004604,0.002855,0.000900,-0.003025,-0.010807,-0.026326", \
				        "0.005554,0.003643,0.001566,-0.002497,-0.010428,-0.026099", \
				        "0.008165,0.005979,0.003636,-0.000803,-0.009168,-0.025203", \
				        "0.014272,0.011814,0.009078,0.003995,-0.005337,-0.022430", \
				        "0.027467,0.024636,0.021568,0.015759,0.005042,-0.014212");
			}
			rise_power(Power_X4) {
				values ("0.005240,0.006985,0.008976,0.012902,0.020702,0.036232", \
				        "0.005241,0.006979,0.008940,0.012869,0.020684,0.036221", \
				        "0.005367,0.007068,0.009010,0.012898,0.020681,0.036215", \
				        "0.005786,0.007415,0.009318,0.013141,0.020830,0.036281", \
				        "0.006921,0.008458,0.010263,0.013944,0.021451,0.036715", \
				        "0.009662,0.010996,0.012639,0.016086,0.023290,0.038156", \
				        "0.015845,0.016894,0.018236,0.021229,0.027865,0.042067", \
				        "0.029077,0.029797,0.030778,0.033078,0.038622,0.051517");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004224,0.002543,0.000605,-0.003246,-0.010988,-0.026454", \
				        "0.004209,0.002508,0.000577,-0.003279,-0.011006,-0.026494", \
				        "0.004139,0.002480,0.000549,-0.003297,-0.011052,-0.026546", \
				        "0.004177,0.002493,0.000570,-0.003294,-0.011030,-0.026537", \
				        "0.004543,0.002798,0.000807,-0.003097,-0.010876,-0.026382", \
				        "0.006197,0.004198,0.002016,-0.002180,-0.010229,-0.025962", \
				        "0.011030,0.008638,0.006090,0.001253,-0.007673,-0.024255", \
				        "0.022084,0.019355,0.016401,0.010759,0.000393,-0.018239");
			}
			rise_power(Power_X4) {
				values ("0.009726,0.011428,0.013378,0.017287,0.025061,0.040593", \
				        "0.009695,0.011401,0.013337,0.017251,0.025031,0.040571", \
				        "0.009715,0.011411,0.013364,0.017254,0.025023,0.040551", \
				        "0.010055,0.011714,0.013615,0.017459,0.025158,0.040642", \
				        "0.011084,0.012656,0.014521,0.018228,0.025769,0.041065", \
				        "0.013556,0.015020,0.016771,0.020320,0.027599,0.042525", \
				        "0.019008,0.020371,0.021980,0.025278,0.032162,0.046472", \
				        "0.030651,0.031859,0.033302,0.036293,0.042596,0.055987");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.004265,0.002569,0.000603,-0.003275,-0.011038,-0.026530", \
				        "0.004201,0.002545,0.000586,-0.003273,-0.010995,-0.026481", \
				        "0.004177,0.002486,0.000551,-0.003299,-0.011039,-0.026517", \
				        "0.004136,0.002468,0.000517,-0.003325,-0.011073,-0.026557", \
				        "0.004313,0.002594,0.000630,-0.003263,-0.011017,-0.026529", \
				        "0.005556,0.003675,0.001560,-0.002539,-0.010500,-0.026146", \
				        "0.009979,0.007728,0.005258,0.000604,-0.008163,-0.024615", \
				        "0.021015,0.018361,0.015489,0.010007,-0.000154,-0.018615");
			}
			rise_power(Power_X4) {
				values ("0.013494,0.015189,0.017134,0.021026,0.028794,0.044326", \
				        "0.013425,0.015131,0.017077,0.020982,0.028766,0.044286", \
				        "0.013459,0.015147,0.017077,0.020965,0.028746,0.044273", \
				        "0.013741,0.015413,0.017309,0.021154,0.028874,0.044353", \
				        "0.014690,0.016312,0.018168,0.021908,0.029469,0.044797", \
				        "0.017058,0.018594,0.020385,0.023977,0.031305,0.046267", \
				        "0.022482,0.023923,0.025572,0.028941,0.035900,0.050275", \
				        "0.034184,0.035495,0.036981,0.040071,0.046498,0.059989");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X4) {
				values ("0.004235,0.002564,0.000605,-0.003266,-0.011011,-0.026508", \
				        "0.004215,0.002514,0.000582,-0.003285,-0.011015,-0.026517", \
				        "0.004164,0.002495,0.000546,-0.003310,-0.011035,-0.026529", \
				        "0.004135,0.002466,0.000512,-0.003337,-0.011071,-0.026551", \
				        "0.004244,0.002528,0.000578,-0.003267,-0.011066,-0.026571", \
				        "0.005345,0.003496,0.001412,-0.002661,-0.010599,-0.026226", \
				        "0.009466,0.007308,0.004954,0.000404,-0.008253,-0.024679", \
				        "0.020439,0.017937,0.015145,0.009836,-0.000073,-0.018359");
			}
			rise_power(Power_X4) {
				values ("0.016923,0.018634,0.020576,0.024478,0.032266,0.047819", \
				        "0.016885,0.018588,0.020526,0.024425,0.032218,0.047782", \
				        "0.016912,0.018628,0.020553,0.024419,0.032209,0.047765", \
				        "0.017205,0.018869,0.020766,0.024619,0.032350,0.047854", \
				        "0.018099,0.019733,0.021605,0.025363,0.032962,0.048295", \
				        "0.020522,0.022028,0.023829,0.027444,0.034794,0.049782", \
				        "0.025919,0.027359,0.029038,0.032460,0.039466,0.053877", \
				        "0.037757,0.039106,0.040647,0.043785,0.050296,0.063855");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR2_X1
 Cell Description	: Combinational cell (NOR2_X1) with drive strength X1
*******************************************************************************************/

cell (NOR2_X1) {

	area               	: 0.798000;

	cell_leakage_power 	: 4344.791250;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 4007.568000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 4108.671000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 3399.124000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 5863.802000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000481;
		fall_capacitance	: 0.000434;
		rise_capacitance	: 0.000528;
		fall_capacitance_range		(0.000362, 0.000566);
		rise_capacitance_range		(0.000427, 0.000644);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000498;
		fall_capacitance	: 0.000480;
		rise_capacitance	: 0.000516;
		fall_capacitance_range		(0.000385, 0.000567);
		rise_capacitance_range		(0.000439, 0.000602);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000019,0.000013,0.000009,0.000006,0.000004,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.013621,0.015961,0.020799,0.030284,0.049136,0.086844", \
				        "0.016959,0.019416,0.024113,0.033666,0.052524,0.090190", \
				        "0.021120,0.024487,0.030380,0.040419,0.059230,0.096760", \
				        "0.025111,0.029713,0.037693,0.051332,0.073005,0.110317", \
				        "0.027238,0.033487,0.044457,0.063009,0.092616,0.137882", \
				        "0.023507,0.032013,0.046978,0.072169,0.112393,0.174500", \
				        "0.005201,0.016842,0.037154,0.071393,0.126095,0.210411", \
				        "-0.044702,-0.029620,-0.002305,0.043793,0.118109,0.232906");
			}
			cell_rise(Timing_X1) {
				values ("0.031271,0.038054,0.051652,0.078330,0.131504,0.237571", \
				        "0.034465,0.041231,0.054679,0.081278,0.134436,0.240482", \
				        "0.041698,0.048223,0.061437,0.087839,0.140718,0.246629", \
				        "0.054998,0.062614,0.076269,0.102025,0.154330,0.259727", \
				        "0.073335,0.083082,0.100822,0.131214,0.183197,0.287245", \
				        "0.100653,0.112805,0.135104,0.174203,0.239390,0.345593", \
				        "0.144241,0.159578,0.187160,0.235835,0.318877,0.454745", \
				        "0.218566,0.237143,0.271647,0.331967,0.435084,0.607165");
			}
			fall_transition(Timing_X1) {
				values ("0.007645,0.009822,0.013827,0.022063,0.038517,0.071236", \
				        "0.008815,0.010554,0.014075,0.022070,0.038529,0.071218", \
				        "0.012627,0.014358,0.017311,0.023357,0.038540,0.071265", \
				        "0.018859,0.020940,0.024780,0.030822,0.041872,0.071275", \
				        "0.029543,0.032072,0.036802,0.044730,0.057795,0.079378", \
				        "0.048114,0.051432,0.057465,0.067460,0.084284,0.111427", \
				        "0.081036,0.085505,0.093551,0.106883,0.128525,0.163519", \
				        "0.141323,0.147166,0.157854,0.176010,0.205045,0.250395");
			}
			rise_transition(Timing_X1) {
				values ("0.026502,0.032742,0.045017,0.069267,0.117787,0.214836", \
				        "0.026308,0.032640,0.045136,0.069291,0.117786,0.214859", \
				        "0.026661,0.032473,0.044961,0.069357,0.117835,0.214879", \
				        "0.032695,0.037248,0.047109,0.069242,0.117820,0.214876", \
				        "0.043398,0.049205,0.059803,0.077893,0.118926,0.214852", \
				        "0.059938,0.067020,0.080105,0.102812,0.140349,0.218960", \
				        "0.089128,0.097005,0.112236,0.139983,0.188016,0.265815", \
				        "0.144294,0.152901,0.169556,0.201260,0.258905,0.358025");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.017945,0.020604,0.025855,0.035965,0.055545,0.093837", \
				        "0.021459,0.024002,0.029158,0.039221,0.058787,0.097067", \
				        "0.027830,0.030812,0.036068,0.045947,0.065379,0.103535", \
				        "0.034932,0.038952,0.046063,0.058617,0.079126,0.117040", \
				        "0.041366,0.046740,0.056452,0.073557,0.101378,0.144893", \
				        "0.044173,0.051391,0.064426,0.087251,0.124967,0.184522", \
				        "0.037284,0.046701,0.064016,0.094347,0.144706,0.225023", \
				        "0.007273,0.019851,0.042557,0.082493,0.149343,0.256552");
			}
			cell_rise(Timing_X1) {
				values ("0.044558,0.051327,0.064884,0.091519,0.144611,0.250637", \
				        "0.048291,0.054996,0.068447,0.095086,0.148268,0.254328", \
				        "0.055094,0.061879,0.075258,0.101796,0.154967,0.261041", \
				        "0.066809,0.074031,0.087628,0.114223,0.167235,0.273286", \
				        "0.082758,0.091598,0.107938,0.137379,0.190762,0.296575", \
				        "0.106698,0.117711,0.137800,0.173439,0.235604,0.344316", \
				        "0.147766,0.161424,0.186349,0.230137,0.305169,0.433006", \
				        "0.215872,0.233906,0.265601,0.321150,0.414362,0.569285");
			}
			fall_transition(Timing_X1) {
				values ("0.012144,0.014450,0.018655,0.026870,0.043249,0.076013", \
				        "0.012071,0.014220,0.018523,0.026898,0.043238,0.076021", \
				        "0.015289,0.016710,0.020060,0.026990,0.043255,0.075941", \
				        "0.021974,0.023905,0.027640,0.033313,0.045153,0.076012", \
				        "0.032614,0.035161,0.039824,0.047520,0.060144,0.082390", \
				        "0.050304,0.053725,0.059901,0.070085,0.086936,0.113815", \
				        "0.080677,0.085458,0.093841,0.107623,0.129984,0.165705", \
				        "0.134182,0.140989,0.152959,0.172303,0.202654,0.249728");
			}
			rise_transition(Timing_X1) {
				values ("0.026581,0.032712,0.045043,0.069279,0.117822,0.214865", \
				        "0.026574,0.032659,0.044960,0.069270,0.117788,0.214841", \
				        "0.026663,0.032788,0.045105,0.069269,0.117815,0.214868", \
				        "0.029678,0.034841,0.046036,0.069350,0.117791,0.214836", \
				        "0.038575,0.043915,0.054470,0.074258,0.118439,0.214859", \
				        "0.053760,0.059356,0.070635,0.091845,0.132296,0.217755", \
				        "0.078957,0.085024,0.097162,0.120385,0.164589,0.247933", \
				        "0.122927,0.129552,0.143074,0.168888,0.217571,0.308785");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("-0.000072,-0.000322,-0.000790,-0.001754,-0.003687,-0.007549", \
				        "-0.000068,-0.000305,-0.000782,-0.001747,-0.003681,-0.007543", \
				        "-0.000043,-0.000286,-0.000758,-0.001726,-0.003666,-0.007528", \
				        "0.000046,-0.000214,-0.000708,-0.001690,-0.003635,-0.007509", \
				        "0.000293,0.000008,-0.000533,-0.001566,-0.003556,-0.007464", \
				        "0.000883,0.000568,-0.000031,-0.001161,-0.003268,-0.007276", \
				        "0.002180,0.001832,0.001167,-0.000086,-0.002401,-0.006664", \
				        "0.004906,0.004529,0.003788,0.002401,-0.000171,-0.004870");
			}
			rise_power(Power_X1) {
				values ("0.001544,0.001795,0.002281,0.003253,0.005192,0.009065", \
				        "0.001547,0.001791,0.002281,0.003248,0.005188,0.009061", \
				        "0.001573,0.001815,0.002302,0.003264,0.005190,0.009061", \
				        "0.001669,0.001905,0.002372,0.003323,0.005235,0.009088", \
				        "0.001899,0.002118,0.002574,0.003492,0.005375,0.009188", \
				        "0.002429,0.002623,0.003040,0.003919,0.005735,0.009473", \
				        "0.003634,0.003790,0.004126,0.004902,0.006618,0.010226", \
				        "0.006294,0.006384,0.006602,0.007185,0.008650,0.012027");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.000907,0.000675,0.000188,-0.000773,-0.002707,-0.006572", \
				        "0.000908,0.000666,0.000183,-0.000780,-0.002713,-0.006576", \
				        "0.000907,0.000665,0.000195,-0.000771,-0.002708,-0.006570", \
				        "0.000946,0.000702,0.000225,-0.000745,-0.002688,-0.006559", \
				        "0.001099,0.000844,0.000344,-0.000652,-0.002620,-0.006518", \
				        "0.001547,0.001271,0.000731,-0.000321,-0.002363,-0.006336", \
				        "0.002627,0.002324,0.001734,0.000595,-0.001582,-0.005735", \
				        "0.004975,0.004644,0.004006,0.002767,0.000407,-0.004044");
			}
			rise_power(Power_X1) {
				values ("0.001793,0.002040,0.002533,0.003507,0.005444,0.009321", \
				        "0.001782,0.002024,0.002515,0.003488,0.005430,0.009304", \
				        "0.001780,0.002020,0.002504,0.003482,0.005421,0.009297", \
				        "0.001790,0.002025,0.002514,0.003483,0.005423,0.009300", \
				        "0.001841,0.002076,0.002554,0.003515,0.005443,0.009310", \
				        "0.002140,0.002349,0.002795,0.003710,0.005587,0.009411", \
				        "0.003070,0.003232,0.003593,0.004398,0.006157,0.009850", \
				        "0.005268,0.005374,0.005617,0.006231,0.007725,0.011144");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR2_X2
 Cell Description	: Combinational cell (NOR2_X2) with drive strength X2
*******************************************************************************************/

cell (NOR2_X2) {

	area               	: 0.798000;

	cell_leakage_power 	: 9198.896750;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 8512.084000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 8643.686000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 7184.727000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 12455.090000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000897;
		fall_capacitance	: 0.000804;
		rise_capacitance	: 0.000990;
		fall_capacitance_range		(0.000687, 0.001081);
		rise_capacitance_range		(0.000799, 0.001221);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000001,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000924;
		fall_capacitance	: 0.000891;
		rise_capacitance	: 0.000958;
		fall_capacitance_range		(0.000678, 0.001070);
		rise_capacitance_range		(0.000820, 0.001130);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000069,0.000049,0.000033,0.000023,0.000017,0.000013,0.000009,0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.010632,0.014080,0.018727,0.027875,0.046013,0.082229", \
				        "0.013325,0.017391,0.022075,0.031156,0.049326,0.085481", \
				        "0.016080,0.021645,0.027850,0.038049,0.056010,0.092037", \
				        "0.018146,0.025720,0.034012,0.047924,0.069546,0.105594", \
				        "0.017560,0.027846,0.039231,0.058064,0.087723,0.132650", \
				        "0.010041,0.024021,0.039552,0.065207,0.105461,0.166972", \
				        "-0.013495,0.005380,0.026437,0.061232,0.116053,0.199635", \
				        "-0.070203,-0.045977,-0.017914,0.028868,0.103292,0.217158");
			}
			cell_rise(Timing_X2) {
				values ("0.022968,0.033009,0.046279,0.072390,0.124278,0.227835", \
				        "0.026313,0.036151,0.049266,0.075263,0.127229,0.230830", \
				        "0.033678,0.043288,0.056169,0.081927,0.133533,0.236929", \
				        "0.044311,0.056748,0.071017,0.096149,0.147115,0.249963", \
				        "0.059741,0.075437,0.093731,0.124748,0.176181,0.277606", \
				        "0.084039,0.103397,0.126201,0.165769,0.231219,0.336280", \
				        "0.124256,0.148463,0.176658,0.225681,0.308590,0.443675", \
				        "0.195351,0.224734,0.259818,0.320588,0.423304,0.593685");
			}
			fall_transition(Timing_X2) {
				values ("0.005261,0.008022,0.011959,0.019822,0.035622,0.067179", \
				        "0.007082,0.009175,0.012238,0.019821,0.035618,0.067143", \
				        "0.010384,0.013067,0.016028,0.021447,0.035653,0.067183", \
				        "0.016043,0.019263,0.023024,0.029201,0.039794,0.067281", \
				        "0.025850,0.029927,0.034817,0.042607,0.055691,0.076636", \
				        "0.043093,0.048580,0.054805,0.065017,0.081643,0.108468", \
				        "0.074252,0.081543,0.089958,0.103478,0.125114,0.159542", \
				        "0.132766,0.141982,0.152946,0.171377,0.200522,0.245348");
			}
			rise_transition(Timing_X2) {
				values ("0.018201,0.027372,0.039321,0.063036,0.110443,0.205217", \
				        "0.017863,0.027254,0.039476,0.063145,0.110416,0.205202", \
				        "0.020026,0.027621,0.039233,0.063078,0.110449,0.205201", \
				        "0.026157,0.033683,0.042664,0.063437,0.110437,0.205211", \
				        "0.035244,0.044475,0.055462,0.073425,0.112191,0.205229", \
				        "0.050321,0.061219,0.074466,0.097471,0.135224,0.210425", \
				        "0.078450,0.090370,0.105565,0.133244,0.181221,0.258775", \
				        "0.133341,0.145745,0.162144,0.193439,0.250399,0.348635");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.013923,0.017811,0.022865,0.032533,0.051195,0.087900", \
				        "0.017527,0.021211,0.026174,0.035761,0.054415,0.091052", \
				        "0.022456,0.027275,0.032795,0.042593,0.061091,0.097569", \
				        "0.027415,0.033977,0.041498,0.054281,0.074791,0.111043", \
				        "0.031000,0.039784,0.049871,0.067202,0.095288,0.138541", \
				        "0.030041,0.041661,0.055127,0.078355,0.116225,0.175500", \
				        "0.018011,0.033220,0.051137,0.081908,0.132461,0.212252", \
				        "-0.018873,0.001116,0.024473,0.065080,0.132067,0.238508");
			}
			cell_rise(Timing_X2) {
				values ("0.033730,0.043720,0.056975,0.082981,0.134875,0.238402", \
				        "0.037390,0.047279,0.060532,0.086535,0.138458,0.242018", \
				        "0.043994,0.053942,0.066890,0.092973,0.144838,0.248460", \
				        "0.053865,0.065301,0.079152,0.105071,0.156776,0.260350", \
				        "0.067103,0.081245,0.097968,0.127685,0.180396,0.283657", \
				        "0.088780,0.106269,0.126776,0.162662,0.224565,0.331726", \
				        "0.126718,0.148645,0.174228,0.218365,0.293044,0.419407", \
				        "0.190310,0.218839,0.251510,0.307721,0.400867,0.554205");
			}
			fall_transition(Timing_X2) {
				values ("0.008544,0.011830,0.015770,0.023705,0.039462,0.071027", \
				        "0.009183,0.011845,0.015639,0.023693,0.039490,0.071038", \
				        "0.012838,0.015314,0.018196,0.024452,0.039475,0.071073", \
				        "0.018721,0.021817,0.025665,0.031414,0.042156,0.071023", \
				        "0.028301,0.032382,0.037282,0.045077,0.057658,0.078879", \
				        "0.044512,0.050115,0.056425,0.066892,0.083765,0.110407", \
				        "0.072717,0.080680,0.089415,0.103540,0.125865,0.161180", \
				        "0.123162,0.134575,0.147112,0.167017,0.197513,0.243988");
			}
			rise_transition(Timing_X2) {
				values ("0.018359,0.027352,0.039371,0.063137,0.110444,0.205205", \
				        "0.018371,0.027333,0.039485,0.063125,0.110443,0.205203", \
				        "0.018860,0.027470,0.039425,0.063019,0.110419,0.205229", \
				        "0.023289,0.030687,0.041084,0.063149,0.110389,0.205228", \
				        "0.031586,0.039513,0.050103,0.069390,0.111625,0.205181", \
				        "0.045751,0.054125,0.065389,0.086389,0.126505,0.208884", \
				        "0.069457,0.078566,0.090720,0.113807,0.157616,0.239865", \
				        "0.112241,0.121845,0.135339,0.161088,0.209324,0.299263");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("-0.000036,-0.000739,-0.001698,-0.003623,-0.007485,-0.015214", \
				        "-0.000020,-0.000723,-0.001681,-0.003608,-0.007471,-0.015194", \
				        "0.000052,-0.000682,-0.001634,-0.003583,-0.007451,-0.015167", \
				        "0.000285,-0.000520,-0.001515,-0.003490,-0.007383,-0.015134", \
				        "0.000862,-0.000025,-0.001128,-0.003213,-0.007207,-0.015033", \
				        "0.002161,0.001179,-0.000046,-0.002339,-0.006589,-0.014629", \
				        "0.004936,0.003872,0.002492,-0.000055,-0.004737,-0.013307", \
				        "0.010672,0.009490,0.007991,0.005170,-0.000034,-0.009507");
			}
			rise_power(Power_X2) {
				values ("0.002300,0.003033,0.004010,0.005967,0.009855,0.017604", \
				        "0.002308,0.003040,0.004013,0.005963,0.009850,0.017600", \
				        "0.002392,0.003105,0.004066,0.005990,0.009855,0.017597", \
				        "0.002608,0.003294,0.004231,0.006115,0.009945,0.017640", \
				        "0.003124,0.003761,0.004657,0.006486,0.010233,0.017847", \
				        "0.004303,0.004837,0.005653,0.007385,0.011003,0.018467", \
				        "0.006961,0.007328,0.007966,0.009469,0.012853,0.020049", \
				        "0.012623,0.012832,0.013209,0.014299,0.017145,0.023815");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.001560,0.000830,-0.000128,-0.002060,-0.005929,-0.013666", \
				        "0.001541,0.000813,-0.000136,-0.002069,-0.005935,-0.013662", \
				        "0.001554,0.000834,-0.000106,-0.002054,-0.005927,-0.013649", \
				        "0.001670,0.000919,-0.000034,-0.001981,-0.005874,-0.013626", \
				        "0.002040,0.001253,0.000242,-0.001765,-0.005717,-0.013528", \
				        "0.003048,0.002203,0.001101,-0.001034,-0.005149,-0.013129", \
				        "0.005405,0.004474,0.003262,0.000945,-0.003462,-0.011827", \
				        "0.010370,0.009371,0.008054,0.005539,0.000755,-0.008224");
			}
			rise_power(Power_X2) {
				values ("0.002805,0.003542,0.004528,0.006472,0.010349,0.018103", \
				        "0.002786,0.003513,0.004494,0.006443,0.010330,0.018084", \
				        "0.002780,0.003506,0.004485,0.006433,0.010317,0.018079", \
				        "0.002802,0.003526,0.004502,0.006445,0.010324,0.018078", \
				        "0.002988,0.003679,0.004637,0.006537,0.010386,0.018111", \
				        "0.003773,0.004363,0.005213,0.007026,0.010743,0.018361", \
				        "0.005906,0.006332,0.007002,0.008551,0.012012,0.019353", \
				        "0.010694,0.010927,0.011354,0.012482,0.015373,0.022133");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR2_X4
 Cell Description	: Combinational cell (NOR2_X4) with drive strength X4
*******************************************************************************************/

cell (NOR2_X4) {

	area               	: 1.330000;

	cell_leakage_power 	: 18884.310000;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 17518.760000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 17650.290000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 14732.300000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 25635.890000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001777;
		fall_capacitance	: 0.001595;
		rise_capacitance	: 0.001960;
		fall_capacitance_range		(0.001339, 0.002151);
		rise_capacitance_range		(0.001562, 0.002427);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000008,0.000004,0.000002,-0.000000,-0.000002,-0.000006,-0.000013");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002050;
		fall_capacitance	: 0.001977;
		rise_capacitance	: 0.002123;
		fall_capacitance_range		(0.001699, 0.002358);
		rise_capacitance_range		(0.001832, 0.002471);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000129,0.000089,0.000059,0.000040,0.000027,0.000019,0.000011,0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.010163,0.014157,0.018655,0.027630,0.045446,0.080990", \
				        "0.012627,0.017440,0.022030,0.030927,0.048719,0.084263", \
				        "0.015022,0.021562,0.027783,0.037771,0.055456,0.090866", \
				        "0.016483,0.025443,0.033798,0.047545,0.068899,0.104332", \
				        "0.014991,0.027200,0.038517,0.057249,0.086677,0.131163", \
				        "0.006141,0.022733,0.038208,0.063710,0.103696,0.164720", \
				        "-0.019211,0.003017,0.024008,0.058638,0.113103,0.196082", \
				        "-0.078990,-0.050321,-0.022316,0.024246,0.098240,0.211335");
			}
			cell_rise(Timing_X4) {
				values ("0.019992,0.031658,0.044937,0.071020,0.122915,0.226524", \
				        "0.023477,0.034849,0.047987,0.073961,0.125873,0.229485", \
				        "0.030750,0.042099,0.054820,0.080564,0.132240,0.235701", \
				        "0.040889,0.055574,0.069816,0.094922,0.145818,0.248700", \
				        "0.055805,0.074347,0.092622,0.123606,0.174989,0.276380", \
				        "0.079749,0.102607,0.125347,0.164852,0.230231,0.335234", \
				        "0.119875,0.148285,0.176406,0.225331,0.308074,0.443004", \
				        "0.191294,0.225890,0.260911,0.321509,0.423986,0.594002");
			}
			fall_transition(Timing_X4) {
				values ("0.004834,0.007908,0.011762,0.019516,0.035013,0.066051", \
				        "0.006676,0.009067,0.012085,0.019518,0.034999,0.066028", \
				        "0.009829,0.012911,0.015712,0.021108,0.035003,0.066009", \
				        "0.015232,0.019077,0.022981,0.029009,0.039373,0.066196", \
				        "0.024671,0.029599,0.034516,0.042284,0.055225,0.075884", \
				        "0.041463,0.048050,0.054304,0.064502,0.081056,0.107598", \
				        "0.071928,0.080805,0.089209,0.102768,0.124240,0.158430", \
				        "0.130030,0.140947,0.151928,0.170420,0.199408,0.243881");
			}
			rise_transition(Timing_X4) {
				values ("0.016103,0.026946,0.039046,0.062738,0.110140,0.204982", \
				        "0.015884,0.026766,0.038957,0.062814,0.110152,0.204933", \
				        "0.018560,0.027172,0.038857,0.062831,0.110152,0.204960", \
				        "0.024325,0.033273,0.042365,0.063078,0.110129,0.204982", \
				        "0.033102,0.043989,0.054986,0.073035,0.111878,0.204970", \
				        "0.048090,0.060675,0.073907,0.096977,0.134829,0.210138", \
				        "0.075869,0.089886,0.104995,0.132568,0.180580,0.258290", \
				        "0.131274,0.145352,0.161558,0.192689,0.249468,0.347710");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.013260,0.017805,0.022757,0.032242,0.050618,0.086706", \
				        "0.016851,0.021204,0.026063,0.035488,0.053827,0.089851", \
				        "0.021530,0.027172,0.032756,0.042301,0.060475,0.096344", \
				        "0.026110,0.033806,0.041114,0.053865,0.074164,0.109812", \
				        "0.029134,0.039437,0.049394,0.066570,0.094330,0.137188", \
				        "0.027286,0.040887,0.054239,0.077281,0.114798,0.173450", \
				        "0.013599,0.031551,0.049302,0.079888,0.130035,0.209113", \
				        "-0.025896,-0.002436,0.020875,0.061168,0.127743,0.233389");
			}
			cell_rise(Timing_X4) {
				values ("0.033436,0.045100,0.058358,0.084376,0.136235,0.239801", \
				        "0.036997,0.048588,0.061762,0.087913,0.139829,0.243448", \
				        "0.043298,0.055046,0.067980,0.094133,0.146111,0.249802", \
				        "0.052227,0.065910,0.079769,0.105859,0.157792,0.261484", \
				        "0.064210,0.081180,0.098109,0.128105,0.181091,0.284627", \
				        "0.084767,0.105759,0.126448,0.162580,0.224813,0.332347", \
				        "0.121833,0.148121,0.173861,0.218218,0.293116,0.419790", \
				        "0.184819,0.218785,0.251721,0.308118,0.401440,0.554963");
			}
			fall_transition(Timing_X4) {
				values ("0.007801,0.011496,0.015458,0.023256,0.038745,0.069850", \
				        "0.008626,0.011619,0.015340,0.023219,0.038739,0.069846", \
				        "0.012191,0.015018,0.017619,0.023981,0.038727,0.069861", \
				        "0.017822,0.021481,0.025126,0.030983,0.041578,0.069821", \
				        "0.027025,0.031905,0.036810,0.044573,0.057078,0.077940", \
				        "0.042667,0.049390,0.055778,0.066233,0.082991,0.109467", \
				        "0.069911,0.079486,0.088352,0.102581,0.124855,0.159906", \
				        "0.118881,0.132775,0.145453,0.165481,0.196029,0.242287");
			}
			rise_transition(Timing_X4) {
				values ("0.016446,0.026973,0.039076,0.062775,0.110145,0.204982", \
				        "0.016477,0.026921,0.039140,0.062694,0.110151,0.204979", \
				        "0.017050,0.027048,0.039121,0.062741,0.110147,0.204957", \
				        "0.021534,0.030240,0.040464,0.062804,0.110159,0.204948", \
				        "0.029792,0.039072,0.049643,0.069036,0.111291,0.204956", \
				        "0.043937,0.053696,0.064977,0.086046,0.126231,0.208621", \
				        "0.067731,0.078159,0.090303,0.113387,0.157233,0.239592", \
				        "0.111090,0.121796,0.135041,0.160617,0.208765,0.298757");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.000679,-0.000951,-0.002867,-0.006726,-0.014450,-0.029915", \
				        "0.000720,-0.000929,-0.002853,-0.006699,-0.014414,-0.029871", \
				        "0.000842,-0.000861,-0.002797,-0.006658,-0.014377,-0.029839", \
				        "0.001295,-0.000567,-0.002554,-0.006489,-0.014250,-0.029754", \
				        "0.002444,0.000383,-0.001793,-0.005939,-0.013905,-0.029553", \
				        "0.005076,0.002787,0.000353,-0.004202,-0.012680,-0.028745", \
				        "0.010683,0.008174,0.005459,0.000383,-0.008970,-0.026109", \
				        "0.022312,0.019561,0.016561,0.010925,0.000518,-0.018430");
			}
			rise_power(Power_X4) {
				values ("0.003889,0.005593,0.007574,0.011473,0.019240,0.034739", \
				        "0.003920,0.005628,0.007575,0.011463,0.019225,0.034740", \
				        "0.004105,0.005760,0.007681,0.011531,0.019261,0.034736", \
				        "0.004550,0.006156,0.008014,0.011797,0.019433,0.034838", \
				        "0.005612,0.007121,0.008894,0.012542,0.020019,0.035244", \
				        "0.008101,0.009330,0.010926,0.014368,0.021602,0.036506", \
				        "0.013549,0.014377,0.015613,0.018600,0.025356,0.039739", \
				        "0.025092,0.025452,0.026218,0.028371,0.034053,0.047357");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.003752,0.002063,0.000138,-0.003715,-0.011444,-0.026925", \
				        "0.003717,0.002051,0.000133,-0.003730,-0.011450,-0.026913", \
				        "0.003765,0.002081,0.000191,-0.003694,-0.011435,-0.026884", \
				        "0.003986,0.002258,0.000350,-0.003550,-0.011324,-0.026838", \
				        "0.004782,0.002936,0.000916,-0.003098,-0.011004,-0.026635", \
				        "0.006876,0.004866,0.002664,-0.001610,-0.009847,-0.025815", \
				        "0.011647,0.009465,0.007042,0.002404,-0.006417,-0.023166", \
				        "0.021706,0.019359,0.016733,0.011689,0.002125,-0.015862");
			}
			rise_power(Power_X4) {
				values ("0.004908,0.006615,0.008589,0.012479,0.020241,0.035737", \
				        "0.004848,0.006556,0.008532,0.012428,0.020210,0.035702", \
				        "0.004792,0.006520,0.008481,0.012388,0.020175,0.035690", \
				        "0.004776,0.006487,0.008450,0.012362,0.020134,0.035670", \
				        "0.005135,0.006771,0.008662,0.012486,0.020220,0.035688", \
				        "0.006779,0.008132,0.009818,0.013426,0.020890,0.036150", \
				        "0.011190,0.012123,0.013448,0.016542,0.023432,0.038116", \
				        "0.020958,0.021464,0.022272,0.024493,0.030253,0.043743");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR3_X1
 Cell Description	: Combinational cell (NOR3_X1) with drive strength X1
*******************************************************************************************/

cell (NOR3_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 5512.458500;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 6034.654000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 3502.683000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 4541.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 5885.186000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 3595.140000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 5871.086000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 5914.034000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 8755.325000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000591;
		fall_capacitance	: 0.000520;
		rise_capacitance	: 0.000662;
		fall_capacitance_range		(0.000451, 0.000668);
		rise_capacitance_range		(0.000550, 0.000815);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000592;
		fall_capacitance	: 0.000548;
		rise_capacitance	: 0.000635;
		fall_capacitance_range		(0.000462, 0.000646);
		rise_capacitance_range		(0.000544, 0.000749);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000053,0.000041,0.000029,0.000018,0.000012,0.000008,0.000005,0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000003,0.000002,0.000002,0.000002,0.000001,0.000001,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000586;
		fall_capacitance	: 0.000563;
		rise_capacitance	: 0.000609;
		fall_capacitance_range		(0.000455, 0.000661);
		rise_capacitance_range		(0.000531, 0.000710);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000007,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000006,0.000004,0.000003,0.000002,0.000000");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.015963,0.018351,0.023099,0.032613,0.051589,0.089297", \
				        "0.019445,0.021772,0.026549,0.036069,0.054983,0.092675", \
				        "0.024643,0.027696,0.033263,0.042881,0.061692,0.099283", \
				        "0.030128,0.034280,0.041784,0.054718,0.075575,0.112905", \
				        "0.034312,0.040026,0.050173,0.067706,0.096314,0.140649", \
				        "0.033359,0.041134,0.055061,0.078956,0.117805,0.178553", \
				        "0.018748,0.029506,0.048553,0.081216,0.134215,0.216786", \
				        "-0.026374,-0.012361,0.013616,0.057858,0.130180,0.243002");
			}
			cell_rise(Timing_X1) {
				values ("0.036843,0.044720,0.060518,0.091844,0.153812,0.277197", \
				        "0.039878,0.047664,0.063386,0.094588,0.156553,0.279962", \
				        "0.046949,0.054319,0.069682,0.100673,0.162373,0.285613", \
				        "0.062109,0.069640,0.083808,0.113646,0.174723,0.297363", \
				        "0.083672,0.093186,0.110918,0.142262,0.201197,0.322286", \
				        "0.114514,0.126390,0.148559,0.188398,0.256718,0.375777", \
				        "0.162232,0.177200,0.204387,0.253622,0.339462,0.483390", \
				        "0.241695,0.259547,0.293579,0.353956,0.459322,0.639078");
			}
			fall_transition(Timing_X1) {
				values ("0.009371,0.011471,0.015633,0.023886,0.040240,0.072984", \
				        "0.009976,0.011885,0.015542,0.023834,0.040280,0.072953", \
				        "0.013705,0.015345,0.018139,0.024647,0.040184,0.072978", \
				        "0.020204,0.022137,0.025960,0.031791,0.042941,0.072938", \
				        "0.031280,0.033664,0.038202,0.045808,0.058494,0.080497", \
				        "0.050534,0.053654,0.059366,0.069071,0.085434,0.112211", \
				        "0.084561,0.088745,0.096354,0.109206,0.130284,0.164584", \
				        "0.145928,0.151541,0.161737,0.179366,0.207787,0.252371");
			}
			rise_transition(Timing_X1) {
				values ("0.039078,0.046897,0.061801,0.089885,0.145300,0.255951", \
				        "0.038445,0.046398,0.061582,0.089860,0.145275,0.255957", \
				        "0.037275,0.044998,0.060787,0.089752,0.145309,0.255983", \
				        "0.040899,0.047058,0.060213,0.088509,0.145307,0.255989", \
				        "0.052065,0.058233,0.070107,0.092729,0.144379,0.255993", \
				        "0.069540,0.076828,0.090517,0.115212,0.159185,0.256618", \
				        "0.099411,0.107436,0.123275,0.152365,0.204437,0.293139", \
				        "0.154445,0.163443,0.180647,0.213625,0.274577,0.382101");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.022299,0.024916,0.030091,0.040191,0.059732,0.098044", \
				        "0.025687,0.028233,0.033391,0.043439,0.062973,0.101277", \
				        "0.032675,0.035300,0.040252,0.050162,0.069614,0.107853", \
				        "0.041640,0.045252,0.051796,0.063527,0.083327,0.121312", \
				        "0.050598,0.055477,0.064362,0.080272,0.106937,0.149198", \
				        "0.056664,0.063240,0.075284,0.096764,0.132794,0.190634", \
				        "0.053346,0.062018,0.078273,0.107136,0.155760,0.234020", \
				        "0.025870,0.037807,0.059442,0.098153,0.163619,0.269177");
			}
			cell_rise(Timing_X1) {
				values ("0.066306,0.074259,0.090077,0.121265,0.183129,0.306428", \
				        "0.069474,0.077382,0.093101,0.124304,0.186236,0.309587", \
				        "0.075542,0.083463,0.099163,0.130289,0.192217,0.315619", \
				        "0.086964,0.094934,0.110644,0.141696,0.203606,0.326996", \
				        "0.104836,0.114231,0.131811,0.164006,0.225728,0.348976", \
				        "0.131216,0.142632,0.164072,0.202610,0.271001,0.394732", \
				        "0.177199,0.191127,0.217249,0.264183,0.345988,0.486821", \
				        "0.255474,0.273540,0.306066,0.364454,0.464838,0.634306");
			}
			fall_transition(Timing_X1) {
				values ("0.014997,0.017191,0.021434,0.029558,0.045933,0.078612", \
				        "0.014742,0.017030,0.021299,0.029575,0.045901,0.078651", \
				        "0.016621,0.018305,0.022098,0.029584,0.045872,0.078661", \
				        "0.023660,0.025474,0.028992,0.034300,0.047286,0.078633", \
				        "0.034849,0.037228,0.041664,0.049001,0.061272,0.084097", \
				        "0.053422,0.056587,0.062408,0.072099,0.088478,0.114946", \
				        "0.085088,0.089559,0.097461,0.110660,0.132374,0.167310", \
				        "0.140254,0.146595,0.157921,0.176616,0.206400,0.252606");
			}
			rise_transition(Timing_X1) {
				values ("0.040962,0.047958,0.062034,0.089826,0.145291,0.255956", \
				        "0.040974,0.047960,0.062058,0.089778,0.145293,0.255967", \
				        "0.040979,0.047987,0.062025,0.089828,0.145279,0.255980", \
				        "0.042022,0.048581,0.062247,0.089798,0.145291,0.255980", \
				        "0.050639,0.056565,0.068271,0.092369,0.145324,0.255977", \
				        "0.067786,0.073764,0.085929,0.109330,0.155101,0.256882", \
				        "0.095743,0.102163,0.115215,0.140456,0.188851,0.281194", \
				        "0.143181,0.150366,0.164455,0.192222,0.245433,0.345281");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.023614,0.026539,0.032380,0.043433,0.064338,0.104157", \
				        "0.027180,0.029998,0.035709,0.046694,0.067544,0.107323", \
				        "0.035039,0.037689,0.042854,0.053454,0.074039,0.113716", \
				        "0.046361,0.049885,0.056230,0.067798,0.087899,0.127112", \
				        "0.058699,0.063364,0.072012,0.087518,0.113547,0.155077", \
				        "0.069787,0.076016,0.087377,0.108019,0.143001,0.199487", \
				        "0.075027,0.083043,0.098049,0.125216,0.171450,0.247258", \
				        "0.064276,0.074844,0.094332,0.129495,0.190339,0.290776");
			}
			cell_rise(Timing_X1) {
				values ("0.077475,0.085439,0.101249,0.132438,0.194286,0.317596", \
				        "0.081141,0.089042,0.104828,0.135973,0.197908,0.321256", \
				        "0.087758,0.095782,0.111471,0.142615,0.204536,0.327967", \
				        "0.099132,0.107113,0.122980,0.154089,0.215936,0.339349", \
				        "0.115731,0.124485,0.141455,0.173023,0.234810,0.358162", \
				        "0.135124,0.145337,0.164940,0.201098,0.267694,0.391677", \
				        "0.163529,0.175923,0.199311,0.241689,0.317902,0.455152", \
				        "0.219134,0.235065,0.263568,0.314733,0.403875,0.559054");
			}
			fall_transition(Timing_X1) {
				values ("0.018553,0.020979,0.025743,0.034466,0.051168,0.083996", \
				        "0.017886,0.020500,0.025405,0.034233,0.051142,0.083936", \
				        "0.019002,0.020996,0.025405,0.033718,0.050896,0.083938", \
				        "0.026441,0.028242,0.031659,0.037164,0.051228,0.083686", \
				        "0.038470,0.040749,0.044990,0.052101,0.063889,0.087623", \
				        "0.057725,0.060752,0.066355,0.075672,0.091667,0.117393", \
				        "0.089960,0.094174,0.101669,0.114427,0.135544,0.170077", \
				        "0.145517,0.151484,0.162214,0.180028,0.208813,0.254420");
			}
			rise_transition(Timing_X1) {
				values ("0.040962,0.047959,0.062036,0.089845,0.145233,0.255990", \
				        "0.040987,0.047916,0.061938,0.089791,0.145272,0.255977", \
				        "0.040995,0.047953,0.061878,0.089836,0.145230,0.255990", \
				        "0.041292,0.048188,0.062157,0.089839,0.145256,0.255963", \
				        "0.046446,0.052773,0.065317,0.091085,0.145279,0.255971", \
				        "0.058553,0.064972,0.078125,0.103261,0.152482,0.256828", \
				        "0.085424,0.091215,0.103769,0.128713,0.179025,0.277656", \
				        "0.134842,0.140448,0.152561,0.177129,0.227212,0.328177");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("-0.000057,-0.000295,-0.000773,-0.001738,-0.003665,-0.007524", \
				        "-0.000051,-0.000287,-0.000763,-0.001724,-0.003655,-0.007512", \
				        "-0.000019,-0.000262,-0.000731,-0.001697,-0.003634,-0.007493", \
				        "0.000080,-0.000176,-0.000669,-0.001652,-0.003595,-0.007470", \
				        "0.000340,0.000061,-0.000480,-0.001513,-0.003500,-0.007412", \
				        "0.000938,0.000633,0.000044,-0.001080,-0.003189,-0.007203", \
				        "0.002238,0.001907,0.001262,0.000034,-0.002268,-0.006537", \
				        "0.004997,0.004632,0.003929,0.002577,0.000046,-0.004629");
			}
			rise_power(Power_X1) {
				values ("0.001982,0.002225,0.002715,0.003684,0.005626,0.009501", \
				        "0.001979,0.002227,0.002717,0.003690,0.005624,0.009497", \
				        "0.002012,0.002253,0.002738,0.003702,0.005627,0.009506", \
				        "0.002114,0.002342,0.002817,0.003763,0.005676,0.009527", \
				        "0.002350,0.002569,0.003019,0.003943,0.005820,0.009630", \
				        "0.002858,0.003071,0.003496,0.004381,0.006199,0.009931", \
				        "0.004048,0.004216,0.004580,0.005380,0.007103,0.010720", \
				        "0.006693,0.006783,0.007045,0.007663,0.009167,0.012562");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.001148,0.000904,0.000419,-0.000540,-0.002474,-0.006340", \
				        "0.001143,0.000904,0.000420,-0.000541,-0.002471,-0.006335", \
				        "0.001146,0.000908,0.000432,-0.000531,-0.002463,-0.006322", \
				        "0.001196,0.000937,0.000466,-0.000501,-0.002443,-0.006318", \
				        "0.001343,0.001083,0.000584,-0.000406,-0.002371,-0.006267", \
				        "0.001771,0.001503,0.000972,-0.000072,-0.002102,-0.006071", \
				        "0.002841,0.002532,0.001960,0.000847,-0.001305,-0.005442", \
				        "0.005137,0.004817,0.004207,0.003005,0.000694,-0.003710");
			}
			rise_power(Power_X1) {
				values ("0.002306,0.002563,0.003056,0.004030,0.005971,0.009845", \
				        "0.002310,0.002549,0.003037,0.004014,0.005956,0.009828", \
				        "0.002292,0.002538,0.003020,0.003993,0.005930,0.009809", \
				        "0.002290,0.002541,0.003021,0.003991,0.005937,0.009810", \
				        "0.002325,0.002571,0.003053,0.004014,0.005947,0.009815", \
				        "0.002573,0.002793,0.003246,0.004177,0.006071,0.009903", \
				        "0.003404,0.003597,0.003984,0.004826,0.006607,0.010321", \
				        "0.005517,0.005627,0.005910,0.006578,0.008145,0.011609");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.002087,0.001848,0.001371,0.000411,-0.001509,-0.005356", \
				        "0.002076,0.001835,0.001357,0.000395,-0.001523,-0.005372", \
				        "0.002071,0.001828,0.001348,0.000390,-0.001529,-0.005381", \
				        "0.002085,0.001843,0.001369,0.000406,-0.001525,-0.005379", \
				        "0.002197,0.001949,0.001462,0.000479,-0.001468,-0.005346", \
				        "0.002594,0.002333,0.001809,0.000783,-0.001226,-0.005168", \
				        "0.003657,0.003375,0.002808,0.001702,-0.000435,-0.004548", \
				        "0.006133,0.005817,0.005200,0.003991,0.001675,-0.002738");
			}
			rise_power(Power_X1) {
				values ("0.002608,0.002848,0.003332,0.004314,0.006253,0.010124", \
				        "0.002600,0.002844,0.003333,0.004312,0.006249,0.010121", \
				        "0.002591,0.002836,0.003327,0.004303,0.006244,0.010118", \
				        "0.002582,0.002830,0.003318,0.004288,0.006228,0.010101", \
				        "0.002597,0.002834,0.003319,0.004287,0.006229,0.010102", \
				        "0.002700,0.002919,0.003398,0.004350,0.006271,0.010123", \
				        "0.003359,0.003552,0.003953,0.004811,0.006630,0.010400", \
				        "0.005592,0.005703,0.005977,0.006616,0.008143,0.011584");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR3_X2
 Cell Description	: Combinational cell (NOR3_X2) with drive strength X2
*******************************************************************************************/

cell (NOR3_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 11680.686375;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 12815.570000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 7393.554000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 9527.094000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 12498.490000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 7584.913000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 12467.770000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 12557.890000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 18600.210000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001142;
		fall_capacitance	: 0.000997;
		rise_capacitance	: 0.001286;
		fall_capacitance_range		(0.000853, 0.001332);
		rise_capacitance_range		(0.001049, 0.001588);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000007");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001080;
		fall_capacitance	: 0.000989;
		rise_capacitance	: 0.001172;
		fall_capacitance_range		(0.000820, 0.001224);
		rise_capacitance_range		(0.000957, 0.001394);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000130,0.000100,0.000068,0.000045,0.000030,0.000021,0.000014,0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000007,0.000005,0.000004,0.000003,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000008,0.000007,0.000006,0.000005,0.000004,0.000003,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.001106;
		fall_capacitance	: 0.001060;
		rise_capacitance	: 0.001153;
		fall_capacitance_range		(0.000859, 0.001270);
		rise_capacitance_range		(0.000996, 0.001357);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000021,0.000013,0.000008,0.000005,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000029,0.000021,0.000015,0.000011,0.000008,0.000005,0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.012643,0.016105,0.020743,0.029920,0.048090,0.084355", \
				        "0.015855,0.019545,0.024138,0.033288,0.051422,0.087688", \
				        "0.019696,0.024688,0.030443,0.040185,0.058208,0.094324", \
				        "0.023284,0.030065,0.037722,0.050997,0.071923,0.107841", \
				        "0.024692,0.033973,0.044492,0.062373,0.091043,0.135188", \
				        "0.019822,0.032472,0.046946,0.071335,0.110329,0.170650", \
				        "-0.0002922,0.017060,0.036791,0.070118,0.123402,0.205451", \
				        "-0.052918,-0.030358,-0.003620,0.041477,0.114174,0.226330");
			}
			cell_rise(Timing_X2) {
				values ("0.027292,0.038842,0.054423,0.084996,0.145591,0.266189", \
				        "0.030512,0.041826,0.057155,0.087738,0.148268,0.268932", \
				        "0.038363,0.048649,0.063480,0.093731,0.154014,0.274519", \
				        "0.051408,0.063487,0.077890,0.106768,0.166297,0.286105", \
				        "0.069663,0.084892,0.103191,0.135222,0.192974,0.311131", \
				        "0.097123,0.115886,0.138595,0.179011,0.247738,0.364944", \
				        "0.141235,0.164591,0.192407,0.242048,0.327967,0.471331", \
				        "0.216931,0.245233,0.279891,0.340830,0.446033,0.624321");
			}
			fall_transition(Timing_X2) {
				values ("0.006460,0.009464,0.013353,0.021260,0.037045,0.068586", \
				        "0.007858,0.010130,0.013418,0.021225,0.037032,0.068582", \
				        "0.011380,0.013898,0.016817,0.022275,0.037047,0.068550", \
				        "0.017296,0.020317,0.024091,0.030019,0.040568,0.068608", \
				        "0.027522,0.031335,0.035946,0.043629,0.056375,0.077305", \
				        "0.045521,0.050558,0.056484,0.066194,0.082488,0.109024", \
				        "0.077674,0.084479,0.092365,0.105506,0.126576,0.160431", \
				        "0.136734,0.145683,0.156256,0.174256,0.202851,0.247077");
			}
			rise_transition(Timing_X2) {
				values ("0.027888,0.039432,0.053920,0.081329,0.135408,0.243649", \
				        "0.026987,0.038935,0.053756,0.081272,0.135474,0.243671", \
				        "0.027358,0.037877,0.052906,0.081217,0.135456,0.243678", \
				        "0.033041,0.041422,0.053602,0.080245,0.135479,0.243681", \
				        "0.042810,0.052407,0.064438,0.086110,0.135109,0.243680", \
				        "0.058681,0.069839,0.083726,0.108628,0.151943,0.245238", \
				        "0.087257,0.099411,0.115196,0.144285,0.196210,0.284110", \
				        "0.141378,0.154606,0.171561,0.204224,0.264542,0.371095");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.017763,0.021611,0.026659,0.036286,0.054988,0.091682", \
				        "0.021209,0.024934,0.029922,0.039557,0.058240,0.094910", \
				        "0.027401,0.031679,0.036783,0.046314,0.064859,0.101454", \
				        "0.034236,0.040093,0.046753,0.058787,0.078552,0.114904", \
				        "0.040292,0.048122,0.057309,0.073651,0.100412,0.142579", \
				        "0.042383,0.052923,0.065360,0.087289,0.123592,0.181213", \
				        "0.033387,0.047402,0.064201,0.093713,0.142662,0.220615", \
				        "-0.001821,0.017014,0.039359,0.078837,0.144782,0.249942");
			}
			cell_rise(Timing_X2) {
				values ("0.051961,0.063756,0.079280,0.109690,0.170132,0.290656", \
				        "0.055066,0.066794,0.082242,0.112736,0.173215,0.293824", \
				        "0.061061,0.072820,0.088121,0.118589,0.179086,0.299738", \
				        "0.071854,0.084031,0.099476,0.129821,0.190251,0.310854", \
				        "0.086841,0.101657,0.119596,0.152130,0.212532,0.332921", \
				        "0.110674,0.128715,0.150599,0.189504,0.257680,0.379227", \
				        "0.153984,0.176136,0.202842,0.250127,0.331680,0.471056", \
				        "0.227922,0.256229,0.289673,0.348749,0.449086,0.617125");
			}
			fall_transition(Timing_X2) {
				values ("0.011117,0.014254,0.018274,0.026153,0.041825,0.073336", \
				        "0.011075,0.014138,0.018151,0.026049,0.041826,0.073366", \
				        "0.014146,0.016327,0.019611,0.026448,0.041837,0.073345", \
				        "0.020398,0.023297,0.026728,0.032418,0.043879,0.073407", \
				        "0.030552,0.034341,0.038913,0.046408,0.058731,0.080237", \
				        "0.047676,0.052799,0.058776,0.068761,0.085098,0.111420", \
				        "0.077171,0.084450,0.092722,0.106279,0.128032,0.162602", \
				        "0.129009,0.139549,0.151465,0.170853,0.200858,0.246651");
			}
			rise_transition(Timing_X2) {
				values ("0.030123,0.040308,0.054160,0.081232,0.135436,0.243677", \
				        "0.030124,0.040348,0.054061,0.081203,0.135468,0.243692", \
				        "0.030184,0.040380,0.054153,0.081239,0.135460,0.243682", \
				        "0.032749,0.041770,0.054550,0.081334,0.135473,0.243680", \
				        "0.041873,0.050581,0.062206,0.084982,0.135655,0.243652", \
				        "0.058131,0.067071,0.079213,0.102331,0.147040,0.245126", \
				        "0.084415,0.093984,0.107062,0.132098,0.180079,0.271095", \
				        "0.130495,0.140783,0.154780,0.182377,0.235097,0.333727");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.018539,0.022891,0.028519,0.039108,0.059025,0.097003", \
				        "0.022279,0.026378,0.031858,0.042336,0.062182,0.100108", \
				        "0.029725,0.033937,0.039106,0.049158,0.068729,0.106577", \
				        "0.038800,0.044508,0.051037,0.062899,0.082521,0.119905", \
				        "0.048019,0.055556,0.064373,0.080203,0.106472,0.147849", \
				        "0.055011,0.064939,0.076636,0.097647,0.132824,0.189135", \
				        "0.054928,0.067564,0.083079,0.110539,0.157098,0.232550", \
				        "0.036802,0.053305,0.073315,0.109077,0.170194,0.270085");
			}
			cell_rise(Timing_X2) {
				values ("0.061215,0.073049,0.088577,0.118985,0.179458,0.299981", \
				        "0.064792,0.076541,0.092057,0.122551,0.183070,0.303640", \
				        "0.071209,0.082998,0.098357,0.128842,0.189365,0.310028", \
				        "0.081960,0.093868,0.109206,0.139599,0.200038,0.320687", \
				        "0.095617,0.109227,0.126281,0.157875,0.218319,0.338820", \
				        "0.111772,0.127842,0.147729,0.184033,0.250257,0.372092", \
				        "0.138797,0.158377,0.182183,0.224669,0.300204,0.435422", \
				        "0.192964,0.217955,0.247146,0.298804,0.387394,0.540218");
			}
			fall_transition(Timing_X2) {
				values ("0.013812,0.017417,0.021849,0.030290,0.046290,0.077869", \
				        "0.013332,0.016965,0.021470,0.030019,0.046221,0.077861", \
				        "0.016064,0.018424,0.022098,0.029836,0.046016,0.077818", \
				        "0.023008,0.025767,0.029159,0.034427,0.047068,0.077667", \
				        "0.033869,0.037504,0.041782,0.049084,0.060983,0.082990", \
				        "0.051587,0.056460,0.062265,0.071839,0.087817,0.113556", \
				        "0.081769,0.088570,0.096398,0.109415,0.130641,0.164906", \
				        "0.134156,0.144096,0.155282,0.173592,0.202623,0.247852");
			}
			rise_transition(Timing_X2) {
				values ("0.030121,0.040298,0.054142,0.081305,0.135404,0.243669", \
				        "0.030138,0.040331,0.053992,0.081264,0.135426,0.243677", \
				        "0.030153,0.040354,0.054166,0.081280,0.135478,0.243691", \
				        "0.031167,0.040823,0.054283,0.081283,0.135434,0.243673", \
				        "0.037083,0.046494,0.058836,0.083327,0.135554,0.243662", \
				        "0.049487,0.058799,0.071567,0.096247,0.144346,0.245078", \
				        "0.076983,0.085273,0.097323,0.121409,0.170542,0.267353", \
				        "0.124576,0.132502,0.144346,0.168606,0.217792,0.316749");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("-0.000008,-0.000708,-0.001663,-0.003584,-0.007439,-0.015157", \
				        "0.000015,-0.000684,-0.001629,-0.003560,-0.007416,-0.015142", \
				        "0.000107,-0.000625,-0.001578,-0.003524,-0.007385,-0.015098", \
				        "0.000356,-0.000444,-0.001430,-0.003413,-0.007302,-0.015052", \
				        "0.000950,0.000079,-0.001008,-0.003103,-0.007101,-0.014927", \
				        "0.002217,0.001298,0.000110,-0.002175,-0.006430,-0.014485", \
				        "0.005021,0.003991,0.002670,0.000178,-0.004469,-0.013064", \
				        "0.010821,0.009694,0.008253,0.005519,0.000400,-0.009024");
			}
			rise_power(Power_X2) {
				values ("0.003058,0.003790,0.004770,0.006727,0.010604,0.018356", \
				        "0.003067,0.003799,0.004772,0.006715,0.010589,0.018396", \
				        "0.003143,0.003864,0.004827,0.006758,0.010606,0.018359", \
				        "0.003363,0.004065,0.005013,0.006887,0.010699,0.018408", \
				        "0.003847,0.004526,0.005441,0.007271,0.011007,0.018623", \
				        "0.005027,0.005608,0.006443,0.008189,0.011803,0.019270", \
				        "0.007631,0.008063,0.008743,0.010302,0.013706,0.020911", \
				        "0.013279,0.013519,0.013964,0.015126,0.018053,0.024772");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.002033,0.001314,0.000343,-0.001583,-0.005444,-0.013179", \
				        "0.002004,0.001310,0.000343,-0.001587,-0.005442,-0.013163", \
				        "0.002035,0.001310,0.000378,-0.001557,-0.005424,-0.013147", \
				        "0.002133,0.001399,0.000452,-0.001485,-0.005370,-0.013120", \
				        "0.002498,0.001721,0.000720,-0.001273,-0.005212,-0.013017", \
				        "0.003472,0.002641,0.001566,-0.000540,-0.004628,-0.012597", \
				        "0.005752,0.004855,0.003681,0.001425,-0.002922,-0.011244", \
				        "0.010626,0.009668,0.008412,0.005976,0.001304,-0.007577");
			}
			rise_power(Power_X2) {
				values ("0.003745,0.004478,0.005459,0.007404,0.011287,0.019030", \
				        "0.003726,0.004453,0.005429,0.007377,0.011264,0.019004", \
				        "0.003700,0.004432,0.005404,0.007357,0.011260,0.018999", \
				        "0.003706,0.004467,0.005400,0.007364,0.011234,0.018988", \
				        "0.003826,0.004526,0.005492,0.007412,0.011268,0.019010", \
				        "0.004456,0.005100,0.005981,0.007820,0.011587,0.019219", \
				        "0.006413,0.006904,0.007636,0.009278,0.012789,0.020185", \
				        "0.010972,0.011274,0.011781,0.013034,0.016058,0.022936");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.003596,0.002871,0.001913,-0.000008,-0.003847,-0.011560", \
				        "0.003571,0.002851,0.001888,-0.000028,-0.003870,-0.011578", \
				        "0.003563,0.002837,0.001890,-0.000031,-0.003886,-0.011591", \
				        "0.003613,0.002889,0.001941,0.000014,-0.003863,-0.011580", \
				        "0.003882,0.003145,0.002157,0.000186,-0.003726,-0.011501", \
				        "0.004819,0.004013,0.002947,0.000867,-0.003182,-0.011110", \
				        "0.007170,0.006301,0.005126,0.002873,-0.001457,-0.009753", \
				        "0.012431,0.011465,0.010186,0.007749,0.003040,-0.005875");
			}
			rise_power(Power_X2) {
				values ("0.004332,0.005063,0.006058,0.007991,0.011869,0.019616", \
				        "0.004322,0.005081,0.006052,0.007998,0.011873,0.019623", \
				        "0.004311,0.005035,0.006015,0.007969,0.011843,0.019598", \
				        "0.004301,0.005036,0.006007,0.007955,0.011833,0.019586", \
				        "0.004336,0.005044,0.006015,0.007963,0.011828,0.019584", \
				        "0.004662,0.005336,0.006261,0.008147,0.011971,0.019670", \
				        "0.006419,0.006914,0.007664,0.009307,0.012875,0.020347", \
				        "0.011380,0.011665,0.012146,0.013338,0.016262,0.023037");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR3_X4
 Cell Description	: Combinational cell (NOR3_X4) with drive strength X4
*******************************************************************************************/

cell (NOR3_X4) {

	area               	: 1.862000;

	cell_leakage_power 	: 23998.405000;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 26372.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 15149.970000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 19417.160000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 25722.720000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 15532.700000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 25661.280000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 25841.520000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 38289.020000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002143;
		fall_capacitance	: 0.001859;
		rise_capacitance	: 0.002428;
		fall_capacitance_range		(0.001542, 0.002544);
		rise_capacitance_range		(0.001982, 0.003031);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000013,0.000008,0.000004,0.000002,-0.000000,-0.000004,-0.000012");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000009,0.000005,0.000002,-0.000000,-0.000002,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000012,0.000006,0.000003,0.000001,-0.000002,-0.000006,-0.000014");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002390;
		fall_capacitance	: 0.002206;
		rise_capacitance	: 0.002573;
		fall_capacitance_range		(0.001886, 0.002689);
		rise_capacitance_range		(0.002172, 0.003010);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000261,0.000197,0.000131,0.000082,0.000052,0.000034,0.000021,0.000008");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000012,0.000007,0.000005,0.000003,0.000001,-0.000003,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000014,0.000011,0.000010,0.000008,0.000006,0.000003,-0.000003");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.002609;
		fall_capacitance	: 0.002514;
		rise_capacitance	: 0.002705;
		fall_capacitance_range		(0.002003, 0.002953);
		rise_capacitance_range		(0.002317, 0.003118);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000056,0.000036,0.000022,0.000014,0.000009,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000025,0.000015,0.000009,0.000005,0.000001,-0.000003,-0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000074,0.000053,0.000038,0.000027,0.000019,0.000013,0.000008,0.000000");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.011876,0.015925,0.020440,0.029475,0.047361,0.083045", \
				        "0.014921,0.019342,0.023849,0.032814,0.050738,0.086374", \
				        "0.018287,0.024250,0.030057,0.039680,0.057450,0.092995", \
				        "0.021113,0.029240,0.037077,0.050234,0.071059,0.106469", \
				        "0.021377,0.032496,0.043146,0.061051,0.089686,0.133582", \
				        "0.014734,0.029984,0.044597,0.069096,0.108100,0.168178", \
				        "-0.008044,0.012837,0.032844,0.066379,0.119656,0.201483", \
				        "-0.064358,-0.037185,-0.010185,0.035189,0.107966,0.219903");
			}
			cell_rise(Timing_X4) {
				values ("0.022069,0.035145,0.050555,0.081186,0.141725,0.262395", \
				        "0.025667,0.038211,0.053493,0.083918,0.144482,0.265136", \
				        "0.033884,0.045368,0.059919,0.090032,0.150279,0.270771", \
				        "0.046010,0.060330,0.074862,0.103228,0.162694,0.282465", \
				        "0.063414,0.081497,0.099886,0.131996,0.189548,0.307591", \
				        "0.090195,0.112404,0.135195,0.175721,0.244559,0.361741", \
				        "0.133441,0.161244,0.189201,0.238987,0.324998,0.468467", \
				        "0.208805,0.242570,0.277463,0.338610,0.443970,0.622185");
			}
			fall_transition(Timing_X4) {
				values ("0.005766,0.009082,0.012952,0.020690,0.036220,0.067315", \
				        "0.007338,0.009748,0.013106,0.020687,0.036211,0.067283", \
				        "0.010641,0.013568,0.016198,0.021888,0.036228,0.067300", \
				        "0.016189,0.019859,0.023581,0.029502,0.040013,0.067390", \
				        "0.025894,0.030539,0.035246,0.043040,0.055757,0.076476", \
				        "0.043170,0.049381,0.055431,0.065376,0.081701,0.108109", \
				        "0.074455,0.082811,0.090928,0.104227,0.125437,0.159118", \
				        "0.132621,0.143472,0.154251,0.172465,0.201169,0.245306");
			}
			rise_transition(Timing_X4) {
				values ("0.022914,0.037139,0.051924,0.079552,0.133847,0.242145", \
				        "0.022070,0.036492,0.051747,0.079598,0.133842,0.242147", \
				        "0.023543,0.035575,0.050611,0.079446,0.133786,0.242114", \
				        "0.029561,0.039629,0.051662,0.078233,0.133821,0.242140", \
				        "0.039119,0.050484,0.062483,0.084466,0.133373,0.242151", \
				        "0.054742,0.067711,0.081712,0.106742,0.150422,0.243695", \
				        "0.083089,0.097259,0.112937,0.142055,0.194219,0.282529", \
				        "0.137334,0.152433,0.169282,0.201837,0.262061,0.368825");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.016673,0.021216,0.026182,0.035688,0.054097,0.090222", \
				        "0.020172,0.024532,0.029465,0.038939,0.057332,0.093431", \
				        "0.026097,0.031164,0.036314,0.045688,0.063935,0.099973", \
				        "0.032379,0.039302,0.046003,0.058071,0.077594,0.113383", \
				        "0.037578,0.046867,0.056062,0.072334,0.099019,0.140911", \
				        "0.038367,0.050829,0.063338,0.085318,0.121430,0.178748", \
				        "0.027153,0.043924,0.060843,0.090297,0.139188,0.216790", \
				        "-0.011468,0.010888,0.033493,0.073034,0.138868,0.243726");
			}
			cell_rise(Timing_X4) {
				values ("0.048741,0.062524,0.078013,0.108427,0.168899,0.289469", \
				        "0.051783,0.065479,0.080929,0.111399,0.171936,0.292579", \
				        "0.057514,0.071281,0.086602,0.117053,0.177692,0.298434", \
				        "0.067281,0.081970,0.097527,0.128022,0.188607,0.309380", \
				        "0.080682,0.098556,0.116837,0.149851,0.210585,0.331273", \
				        "0.103081,0.124936,0.147127,0.186488,0.255193,0.377256", \
				        "0.145324,0.172033,0.199101,0.246826,0.328813,0.468781", \
				        "0.217849,0.252016,0.285957,0.345547,0.446425,0.614991");
			}
			fall_transition(Timing_X4) {
				values ("0.010122,0.013701,0.017589,0.025305,0.040786,0.071904", \
				        "0.010099,0.013551,0.017449,0.025275,0.040797,0.071864", \
				        "0.013292,0.015896,0.019031,0.025441,0.040807,0.071877", \
				        "0.019215,0.022652,0.026189,0.031833,0.043001,0.071923", \
				        "0.028904,0.033454,0.038061,0.045580,0.057908,0.079123", \
				        "0.045234,0.051485,0.057643,0.067678,0.084035,0.110288", \
				        "0.073463,0.082361,0.090910,0.104743,0.126592,0.161080", \
				        "0.123260,0.136374,0.148653,0.168394,0.198717,0.244544");
			}
			rise_transition(Timing_X4) {
				values ("0.026518,0.038533,0.052302,0.079603,0.133787,0.242148", \
				        "0.026520,0.038519,0.052260,0.079571,0.133841,0.242140", \
				        "0.026637,0.038556,0.052272,0.079595,0.133831,0.242144", \
				        "0.029697,0.040081,0.052843,0.079559,0.133828,0.242118", \
				        "0.038708,0.048985,0.060761,0.083472,0.134056,0.242130", \
				        "0.054818,0.065368,0.077572,0.100790,0.145701,0.243649", \
				        "0.081024,0.092120,0.105158,0.130355,0.178453,0.269758", \
				        "0.127516,0.138964,0.152828,0.180389,0.233069,0.331939");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.017128,0.022243,0.027785,0.038183,0.057727,0.095036", \
				        "0.020984,0.025748,0.031144,0.041429,0.060890,0.098130", \
				        "0.028230,0.033237,0.038459,0.048281,0.067496,0.104582", \
				        "0.036799,0.043470,0.050208,0.061887,0.081266,0.117922", \
				        "0.045282,0.054190,0.063070,0.078719,0.104835,0.145822", \
				        "0.051227,0.062825,0.074569,0.095533,0.130358,0.186228", \
				        "0.049190,0.064267,0.079681,0.107112,0.153407,0.228246", \
				        "0.027986,0.047574,0.067545,0.103320,0.164171,0.263390");
			}
			cell_rise(Timing_X4) {
				values ("0.060680,0.074433,0.089980,0.120413,0.180848,0.301456", \
				        "0.064286,0.077947,0.093517,0.123942,0.184447,0.305096", \
				        "0.070783,0.084473,0.099775,0.130188,0.190722,0.311403", \
				        "0.081368,0.095286,0.110570,0.140871,0.201330,0.321997", \
				        "0.093733,0.109961,0.127059,0.158801,0.219341,0.339938", \
				        "0.107493,0.126974,0.147176,0.183924,0.250622,0.372847", \
				        "0.132365,0.156126,0.180320,0.223291,0.299412,0.435306", \
				        "0.185555,0.215533,0.245342,0.297469,0.386521,0.539939");
			}
			fall_transition(Timing_X4) {
				values ("0.012411,0.016651,0.020993,0.029197,0.044992,0.076014", \
				        "0.012036,0.016113,0.020577,0.029012,0.044915,0.076013", \
				        "0.015180,0.017807,0.021304,0.028647,0.044720,0.075990", \
				        "0.021814,0.025124,0.028432,0.033816,0.045946,0.075795", \
				        "0.032232,0.036611,0.041055,0.048232,0.060082,0.081532", \
				        "0.049381,0.055245,0.061132,0.070654,0.086636,0.112141", \
				        "0.078604,0.086779,0.094741,0.107833,0.129079,0.163049", \
				        "0.129345,0.141477,0.152880,0.171431,0.200528,0.245464");
			}
			rise_transition(Timing_X4) {
				values ("0.026544,0.038527,0.052376,0.079565,0.133837,0.242146", \
				        "0.026550,0.038533,0.052420,0.079569,0.133833,0.242128", \
				        "0.026558,0.038529,0.052370,0.079603,0.133766,0.242145", \
				        "0.027613,0.038961,0.052523,0.079589,0.133799,0.242120", \
				        "0.033330,0.044481,0.056988,0.081578,0.133910,0.242136", \
				        "0.045844,0.056792,0.069626,0.094519,0.142728,0.243530", \
				        "0.074288,0.083755,0.095726,0.119735,0.168922,0.265906", \
				        "0.122669,0.131330,0.142882,0.167082,0.216175,0.315174");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.000840,-0.000807,-0.002698,-0.006539,-0.014252,-0.029724", \
				        "0.000877,-0.000752,-0.002669,-0.006506,-0.014214,-0.029661", \
				        "0.001053,-0.000645,-0.002569,-0.006436,-0.014140,-0.029592", \
				        "0.001520,-0.000320,-0.002306,-0.006231,-0.013989,-0.029503", \
				        "0.002655,0.000644,-0.001512,-0.005644,-0.013609,-0.029253", \
				        "0.005247,0.003060,0.000677,-0.003837,-0.012303,-0.028380", \
				        "0.010909,0.008495,0.005853,0.000875,-0.008400,-0.025552", \
				        "0.022647,0.019996,0.017109,0.011637,0.001403,-0.017439");
			}
			rise_power(Power_X4) {
				values ("0.005061,0.006770,0.008735,0.012642,0.020404,0.035900", \
				        "0.005080,0.006795,0.008727,0.012617,0.020401,0.035887", \
				        "0.005282,0.006920,0.008852,0.012698,0.020430,0.035909", \
				        "0.005746,0.007345,0.009217,0.012989,0.020616,0.036012", \
				        "0.006811,0.008306,0.010122,0.013773,0.021265,0.036462", \
				        "0.009211,0.010538,0.012192,0.015656,0.022884,0.037788", \
				        "0.014628,0.015546,0.016875,0.019939,0.026756,0.041122", \
				        "0.026133,0.026651,0.027473,0.029751,0.035564,0.048965");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004762,0.003095,0.001167,-0.002692,-0.010421,-0.025888", \
				        "0.004754,0.003080,0.001155,-0.002692,-0.010402,-0.025858", \
				        "0.004792,0.003102,0.001216,-0.002652,-0.010366,-0.025830", \
				        "0.004962,0.003266,0.001368,-0.002511,-0.010278,-0.025766", \
				        "0.005715,0.003889,0.001899,-0.002091,-0.009956,-0.025564", \
				        "0.007678,0.005739,0.003590,-0.000616,-0.008791,-0.024720", \
				        "0.012316,0.010220,0.007885,0.003350,-0.005340,-0.021998", \
				        "0.022205,0.019948,0.017421,0.012553,0.003185,-0.014572");
			}
			rise_power(Power_X4) {
				values ("0.006419,0.008139,0.010098,0.013972,0.021765,0.037231", \
				        "0.006344,0.008057,0.010034,0.013931,0.021701,0.037181", \
				        "0.006316,0.008010,0.009979,0.013886,0.021662,0.037172", \
				        "0.006270,0.007950,0.009927,0.013825,0.021613,0.037155", \
				        "0.006429,0.008111,0.010028,0.013886,0.021645,0.037138", \
				        "0.007814,0.009259,0.011029,0.014682,0.022233,0.037518", \
				        "0.011879,0.012981,0.014425,0.017659,0.024680,0.039432", \
				        "0.021290,0.021886,0.022849,0.025302,0.031327,0.045013");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.007852,0.006177,0.004249,0.000418,-0.007260,-0.022688", \
				        "0.007796,0.006119,0.004202,0.000358,-0.007306,-0.022722", \
				        "0.007757,0.006099,0.004211,0.000357,-0.007339,-0.022751", \
				        "0.007916,0.006214,0.004316,0.000463,-0.007274,-0.022722", \
				        "0.008511,0.006749,0.004786,0.000834,-0.006991,-0.022546", \
				        "0.010448,0.008543,0.006412,0.002250,-0.005872,-0.021735", \
				        "0.015258,0.013173,0.010851,0.006335,-0.002343,-0.018962", \
				        "0.025987,0.023686,0.021140,0.016230,0.006793,-0.011077");
			}
			rise_power(Power_X4) {
				values ("0.007595,0.009309,0.011267,0.015156,0.022913,0.038411", \
				        "0.007571,0.009284,0.011255,0.015137,0.022925,0.038429", \
				        "0.007569,0.009280,0.011217,0.015111,0.022884,0.038401", \
				        "0.007568,0.009251,0.011207,0.015079,0.022853,0.038359", \
				        "0.007513,0.009220,0.011194,0.015066,0.022833,0.038351", \
				        "0.008116,0.009681,0.011555,0.015357,0.023052,0.038472", \
				        "0.011779,0.012885,0.014347,0.017597,0.024750,0.039734", \
				        "0.021906,0.022581,0.023503,0.025826,0.031636,0.045136");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR4_X1
 Cell Description	: Combinational cell (NOR4_X1) with drive strength X1
*******************************************************************************************/

cell (NOR4_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 6658.466437;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 8078.524000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 3697.297000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 5006.854000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 5945.131000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 3814.224000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 5926.923000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 5981.540000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 8806.596000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 3623.628000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 5886.973000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 5909.075000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 8768.620000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 5891.602000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 8756.543000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 8784.163000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 11657.770000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000760;
		fall_capacitance	: 0.000668;
		rise_capacitance	: 0.000852;
		fall_capacitance_range		(0.000589, 0.000800);
		rise_capacitance_range		(0.000719, 0.001046);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000670;
		fall_capacitance	: 0.000600;
		rise_capacitance	: 0.000739;
		fall_capacitance_range		(0.000516, 0.000688);
		rise_capacitance_range		(0.000629, 0.000877);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000074,0.000060,0.000045,0.000031,0.000020,0.000013,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000003,0.000003,0.000002,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000003,0.000003,0.000002,0.000001,-0.000000");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000714;
		fall_capacitance	: 0.000661;
		rise_capacitance	: 0.000767;
		fall_capacitance_range		(0.000552, 0.000763);
		rise_capacitance_range		(0.000667, 0.000889);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000017,0.000012,0.000007,0.000005,0.000003,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000022,0.000017,0.000012,0.000008,0.000006,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000010,0.000007,0.000005,0.000003,0.000001,-0.000000,-0.000002");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000687;
		fall_capacitance	: 0.000660;
		rise_capacitance	: 0.000713;
		fall_capacitance_range		(0.000522, 0.000767);
		rise_capacitance_range		(0.000636, 0.000823);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000007,0.000006,0.000005,0.000003,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000009,0.000006,0.000004,0.000003,0.000002,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.021410,0.023785,0.028627,0.038149,0.057076,0.094836", \
				        "0.024835,0.027196,0.031918,0.041525,0.060441,0.098217", \
				        "0.031446,0.034058,0.038914,0.048348,0.067174,0.104865", \
				        "0.039557,0.043085,0.049618,0.061341,0.081091,0.118506", \
				        "0.047496,0.052321,0.061225,0.077120,0.103907,0.146551", \
				        "0.051879,0.058411,0.070614,0.092188,0.128516,0.186863", \
				        "0.044381,0.053653,0.070306,0.099919,0.149504,0.228791", \
				        "0.008942,0.021007,0.044130,0.084471,0.152344,0.260789");
			}
			cell_rise(Timing_X1) {
				values ("0.048403,0.056574,0.073353,0.107181,0.174370,0.307977", \
				        "0.051336,0.059490,0.076118,0.109880,0.177046,0.310698", \
				        "0.058130,0.066004,0.082347,0.115736,0.182701,0.316118", \
				        "0.074303,0.081034,0.096034,0.128208,0.194493,0.327295", \
				        "0.101282,0.109707,0.126032,0.155981,0.219594,0.350728", \
				        "0.138265,0.149264,0.169671,0.207522,0.274672,0.400969", \
				        "0.193130,0.206787,0.231932,0.278825,0.362640,0.507197", \
				        "0.280586,0.296561,0.328200,0.385277,0.487766,0.667057");
			}
			fall_transition(Timing_X1) {
				values ("0.013744,0.015825,0.020158,0.028304,0.044686,0.077363", \
				        "0.013764,0.015866,0.020119,0.028294,0.044666,0.077383", \
				        "0.016508,0.018072,0.021493,0.028458,0.044639,0.077393", \
				        "0.023796,0.025537,0.028879,0.034341,0.046627,0.077361", \
				        "0.035724,0.037840,0.042016,0.049170,0.061342,0.083599", \
				        "0.056315,0.059002,0.064178,0.073230,0.088914,0.114924", \
				        "0.092481,0.096101,0.102846,0.114712,0.134764,0.168154", \
				        "0.156942,0.161860,0.171020,0.187145,0.214036,0.257272");
			}
			rise_transition(Timing_X1) {
				values ("0.059654,0.068706,0.085874,0.117544,0.177497,0.296007", \
				        "0.058947,0.068047,0.085456,0.117377,0.177520,0.296010", \
				        "0.056877,0.066255,0.084148,0.116931,0.177498,0.295981", \
				        "0.057370,0.065203,0.081421,0.114777,0.177304,0.296001", \
				        "0.067461,0.074003,0.086773,0.114449,0.174584,0.296011", \
				        "0.086910,0.094017,0.107623,0.133190,0.182872,0.294072", \
				        "0.119104,0.126793,0.142361,0.171338,0.224679,0.321417", \
				        "0.175848,0.184625,0.201522,0.234070,0.295566,0.406495");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029939,0.032439,0.037498,0.047452,0.066968,0.105276", \
				        "0.033305,0.035754,0.040778,0.050806,0.070284,0.108599", \
				        "0.040255,0.042727,0.047569,0.057493,0.076960,0.115171", \
				        "0.052027,0.055089,0.060753,0.071360,0.090646,0.128708", \
				        "0.064884,0.069019,0.076849,0.091267,0.116110,0.156575", \
				        "0.076132,0.081886,0.092528,0.111960,0.145620,0.200855", \
				        "0.079666,0.087286,0.101778,0.128075,0.173580,0.248475", \
				        "0.060885,0.071408,0.090854,0.126490,0.188147,0.289655");
			}
			cell_rise(Timing_X1) {
				values ("0.092622,0.101137,0.118287,0.152114,0.219122,0.352577", \
				        "0.095564,0.104098,0.121165,0.154941,0.221998,0.355506", \
				        "0.101188,0.109752,0.126659,0.160519,0.227615,0.361175", \
				        "0.111910,0.120429,0.137401,0.171112,0.238211,0.371798", \
				        "0.132080,0.141012,0.158424,0.192161,0.259090,0.392509", \
				        "0.163253,0.174008,0.194568,0.232886,0.303161,0.435953", \
				        "0.214787,0.228358,0.253254,0.299428,0.382094,0.527803", \
				        "0.303748,0.320283,0.351010,0.407770,0.508120,0.681778");
			}
			fall_transition(Timing_X1) {
				values ("0.020441,0.022622,0.026924,0.035025,0.051268,0.084094", \
				        "0.020367,0.022554,0.026884,0.035023,0.051312,0.084085", \
				        "0.020780,0.022755,0.026828,0.034967,0.051289,0.084090", \
				        "0.027408,0.029088,0.032113,0.037994,0.051904,0.084064", \
				        "0.039780,0.041881,0.045953,0.052692,0.064369,0.088258", \
				        "0.060028,0.062753,0.067860,0.076993,0.092475,0.118072", \
				        "0.094276,0.098077,0.105084,0.117188,0.137688,0.171475", \
				        "0.153332,0.158719,0.168661,0.185689,0.213719,0.258371");
			}
			rise_transition(Timing_X1) {
				values ("0.065669,0.073164,0.088190,0.117985,0.177472,0.295984", \
				        "0.065646,0.073151,0.088217,0.117980,0.177480,0.295995", \
				        "0.065569,0.073082,0.088132,0.118008,0.177520,0.296000", \
				        "0.065398,0.072967,0.088153,0.118039,0.177523,0.296009", \
				        "0.070158,0.076710,0.090446,0.118614,0.177496,0.295995", \
				        "0.087840,0.094001,0.107008,0.131991,0.183247,0.296093", \
				        "0.118301,0.125043,0.138559,0.164622,0.215404,0.314707", \
				        "0.169174,0.176699,0.190950,0.219392,0.274668,0.379114");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033395,0.036196,0.041755,0.052646,0.073400,0.113119", \
				        "0.036773,0.039516,0.044985,0.055925,0.076661,0.116362", \
				        "0.043906,0.046575,0.051834,0.062529,0.083119,0.122762", \
				        "0.057816,0.060816,0.066356,0.076819,0.096755,0.136104", \
				        "0.074380,0.078352,0.085925,0.099800,0.123943,0.163881", \
				        "0.090803,0.096243,0.106362,0.125050,0.157475,0.211238", \
				        "0.102757,0.109748,0.123206,0.147996,0.191346,0.263739", \
				        "0.098351,0.107906,0.125712,0.158475,0.216228,0.313162");
			}
			cell_rise(Timing_X1) {
				values ("0.119076,0.127607,0.144764,0.178541,0.245531,0.379005", \
				        "0.122230,0.130684,0.147776,0.181581,0.248651,0.382137", \
				        "0.128174,0.136744,0.153688,0.187531,0.254654,0.388199", \
				        "0.139088,0.147688,0.164757,0.198487,0.265581,0.399142", \
				        "0.157457,0.166287,0.183603,0.217388,0.284385,0.417932", \
				        "0.181393,0.191589,0.211248,0.248281,0.317807,0.451258", \
				        "0.214759,0.227339,0.250640,0.293973,0.373175,0.517471", \
				        "0.281962,0.297386,0.325138,0.376894,0.469163,0.632139");
			}
			fall_transition(Timing_X1) {
				values ("0.025840,0.028163,0.032566,0.041068,0.057577,0.090205", \
				        "0.025456,0.027791,0.032424,0.040928,0.057473,0.090225", \
				        "0.024769,0.027024,0.031804,0.040426,0.057286,0.090204", \
				        "0.030374,0.031870,0.035020,0.041675,0.057113,0.090058", \
				        "0.043554,0.045537,0.049482,0.055909,0.067036,0.092547", \
				        "0.064467,0.067086,0.072026,0.080819,0.095852,0.120751", \
				        "0.099042,0.102736,0.109436,0.121171,0.141249,0.174531", \
				        "0.157998,0.163220,0.172739,0.189163,0.216544,0.260738");
			}
			rise_transition(Timing_X1) {
				values ("0.065770,0.073222,0.088157,0.118007,0.177507,0.295996", \
				        "0.065774,0.073222,0.088177,0.118008,0.177468,0.295978", \
				        "0.065779,0.073232,0.088121,0.117981,0.177491,0.295989", \
				        "0.065854,0.073272,0.088276,0.118028,0.177512,0.295974", \
				        "0.068362,0.075287,0.089493,0.118389,0.177536,0.296003", \
				        "0.081278,0.087957,0.101516,0.128043,0.181700,0.296164", \
				        "0.109738,0.116023,0.129192,0.155259,0.207871,0.312163", \
				        "0.163824,0.169916,0.182485,0.207887,0.259781,0.364784");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033558,0.036545,0.042508,0.054235,0.076302,0.117825", \
				        "0.037049,0.039972,0.045863,0.057451,0.079413,0.120912", \
				        "0.044634,0.047450,0.052996,0.064251,0.085938,0.127282", \
				        "0.059937,0.062945,0.068444,0.079126,0.099873,0.140679", \
				        "0.079047,0.083016,0.090475,0.104523,0.128441,0.168670", \
				        "0.099435,0.104782,0.114807,0.133172,0.165330,0.218503", \
				        "0.117881,0.124650,0.137591,0.161696,0.204122,0.275329", \
				        "0.126366,0.135321,0.152119,0.183247,0.238454,0.332150");
			}
			cell_rise(Timing_X1) {
				values ("0.129266,0.137816,0.155000,0.188754,0.255753,0.389216", \
				        "0.132880,0.141364,0.158492,0.192284,0.259349,0.392855", \
				        "0.139364,0.147961,0.164919,0.198797,0.265875,0.399435", \
				        "0.150434,0.159052,0.176145,0.209913,0.276994,0.410610", \
				        "0.168027,0.176756,0.193991,0.227738,0.294736,0.428298", \
				        "0.189491,0.199203,0.218052,0.254023,0.322700,0.456139", \
				        "0.212316,0.223670,0.245198,0.285808,0.361938,0.504131", \
				        "0.250399,0.264541,0.289983,0.337692,0.423738,0.580253");
			}
			fall_transition(Timing_X1) {
				values ("0.028462,0.030995,0.035941,0.045273,0.062649,0.096167", \
				        "0.027918,0.030496,0.035669,0.044913,0.062495,0.096107", \
				        "0.027081,0.029600,0.034595,0.044250,0.062172,0.095960", \
				        "0.032539,0.034030,0.037673,0.044837,0.061266,0.095503", \
				        "0.046789,0.048750,0.052553,0.058960,0.070032,0.096777", \
				        "0.068928,0.071457,0.076403,0.084809,0.099528,0.123842", \
				        "0.104968,0.108464,0.114898,0.126249,0.145809,0.178308", \
				        "0.166090,0.171141,0.180062,0.195579,0.221729,0.264786");
			}
			rise_transition(Timing_X1) {
				values ("0.065765,0.073214,0.088183,0.118017,0.177515,0.295995", \
				        "0.065773,0.073232,0.088155,0.118001,0.177517,0.296000", \
				        "0.065775,0.073211,0.088115,0.117972,0.177471,0.295985", \
				        "0.065809,0.073240,0.088207,0.118035,0.177516,0.296000", \
				        "0.067041,0.074209,0.088753,0.118163,0.177520,0.296002", \
				        "0.075993,0.083071,0.097250,0.124721,0.180278,0.296073", \
				        "0.096883,0.103695,0.117764,0.145512,0.200866,0.309193", \
				        "0.148938,0.155039,0.167337,0.192891,0.245654,0.353685");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("-0.000035,-0.000275,-0.000756,-0.001716,-0.003641,-0.007501", \
				        "-0.000031,-0.000269,-0.000743,-0.001704,-0.003630,-0.007487", \
				        "-0.000002,-0.000244,-0.000713,-0.001672,-0.003602,-0.007461", \
				        "0.000102,-0.000158,-0.000647,-0.001622,-0.003561,-0.007429", \
				        "0.000342,0.000069,-0.000450,-0.001475,-0.003460,-0.007360", \
				        "0.000925,0.000631,0.000060,-0.001042,-0.003134,-0.007139", \
				        "0.002202,0.001895,0.001277,0.000082,-0.002187,-0.006438", \
				        "0.004976,0.004635,0.003962,0.002655,0.000177,-0.004457");
			}
			rise_power(Power_X1) {
				values ("0.003060,0.003308,0.003785,0.004759,0.006696,0.010571", \
				        "0.003050,0.003303,0.003795,0.004756,0.006697,0.010570", \
				        "0.003080,0.003322,0.003813,0.004777,0.006709,0.010577", \
				        "0.003191,0.003419,0.003887,0.004839,0.006759,0.010600", \
				        "0.003406,0.003640,0.004099,0.005026,0.006905,0.010716", \
				        "0.003926,0.004151,0.004583,0.005473,0.007300,0.011033", \
				        "0.005073,0.005270,0.005659,0.006491,0.008228,0.011847", \
				        "0.007644,0.007783,0.008088,0.008772,0.010330,0.013753");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.001373,0.001131,0.000642,-0.000318,-0.002251,-0.006114", \
				        "0.001373,0.001134,0.000646,-0.000315,-0.002244,-0.006106", \
				        "0.001370,0.001141,0.000661,-0.000298,-0.002226,-0.006081", \
				        "0.001425,0.001177,0.000702,-0.000264,-0.002201,-0.006062", \
				        "0.001574,0.001318,0.000828,-0.000161,-0.002119,-0.006009", \
				        "0.001985,0.001719,0.001198,0.000173,-0.001847,-0.005807", \
				        "0.003010,0.002725,0.002170,0.001077,-0.001047,-0.005160", \
				        "0.005312,0.004994,0.004398,0.003229,0.000966,-0.003392");
			}
			rise_power(Power_X1) {
				values ("0.003471,0.003719,0.004209,0.005193,0.007133,0.011005", \
				        "0.003462,0.003705,0.004204,0.005176,0.007110,0.010986", \
				        "0.003456,0.003689,0.004178,0.005154,0.007092,0.010964", \
				        "0.003443,0.003697,0.004181,0.005149,0.007100,0.010979", \
				        "0.003474,0.003714,0.004199,0.005167,0.007103,0.010971", \
				        "0.003667,0.003899,0.004360,0.005307,0.007210,0.011045", \
				        "0.004412,0.004625,0.005029,0.005913,0.007733,0.011457", \
				        "0.006410,0.006547,0.006882,0.007625,0.009243,0.012752");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.002502,0.002267,0.001785,0.000827,-0.001093,-0.004941", \
				        "0.002498,0.002254,0.001773,0.000816,-0.001103,-0.004948", \
				        "0.002484,0.002248,0.001764,0.000811,-0.001107,-0.004950", \
				        "0.002500,0.002257,0.001781,0.000819,-0.001108,-0.004949", \
				        "0.002603,0.002352,0.001869,0.000892,-0.001046,-0.004921", \
				        "0.002946,0.002701,0.002193,0.001182,-0.000809,-0.004739", \
				        "0.003965,0.003688,0.003141,0.002066,-0.000033,-0.004115", \
				        "0.006321,0.006028,0.005443,0.004279,0.002028,-0.002315");
			}
			rise_power(Power_X1) {
				values ("0.003848,0.004096,0.004581,0.005555,0.007490,0.011358", \
				        "0.003832,0.004074,0.004572,0.005543,0.007480,0.011359", \
				        "0.003833,0.004071,0.004571,0.005547,0.007488,0.011363", \
				        "0.003829,0.004065,0.004548,0.005519,0.007460,0.011334", \
				        "0.003818,0.004055,0.004547,0.005521,0.007457,0.011354", \
				        "0.003863,0.004111,0.004589,0.005554,0.007476,0.011348", \
				        "0.004321,0.004563,0.004997,0.005897,0.007765,0.011562", \
				        "0.006259,0.006439,0.006756,0.007481,0.009114,0.012645");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X1) {
				values ("0.003479,0.003240,0.002766,0.001818,-0.000087,-0.003915", \
				        "0.003456,0.003221,0.002744,0.001800,-0.000107,-0.003931", \
				        "0.003434,0.003203,0.002728,0.001783,-0.000121,-0.003946", \
				        "0.003446,0.003202,0.002734,0.001779,-0.000129,-0.003955", \
				        "0.003517,0.003280,0.002804,0.001837,-0.000091,-0.003939", \
				        "0.003845,0.003598,0.003098,0.002099,0.000124,-0.003779", \
				        "0.004851,0.004579,0.004035,0.002965,0.000884,-0.003168", \
				        "0.007344,0.007058,0.006463,0.005297,0.003042,-0.001314");
			}
			rise_power(Power_X1) {
				values ("0.004209,0.004445,0.004942,0.005911,0.007853,0.011719", \
				        "0.004208,0.004444,0.004937,0.005911,0.007849,0.011718", \
				        "0.004197,0.004433,0.004925,0.005895,0.007836,0.011711", \
				        "0.004197,0.004426,0.004922,0.005896,0.007829,0.011705", \
				        "0.004184,0.004430,0.004917,0.005888,0.007830,0.011702", \
				        "0.004210,0.004450,0.004929,0.005891,0.007827,0.011702", \
				        "0.004537,0.004759,0.005202,0.006124,0.008002,0.011831", \
				        "0.006378,0.006536,0.006858,0.007588,0.009199,0.012750");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR4_X2
 Cell Description	: Combinational cell (NOR4_X2) with drive strength X2
*******************************************************************************************/

cell (NOR4_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 14110.436375;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 17149.320000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 7771.834000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 10425.900000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 12617.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 8010.263000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 12579.160000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 12691.760000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 18702.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 7621.025000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 12496.400000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 12544.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 18625.560000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 12507.620000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 18599.480000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 18657.210000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 24766.690000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001294;
		fall_capacitance	: 0.001095;
		rise_capacitance	: 0.001492;
		fall_capacitance_range		(0.000924, 0.001456);
		rise_capacitance_range		(0.001193, 0.001860);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001254;
		fall_capacitance	: 0.001119;
		rise_capacitance	: 0.001389;
		fall_capacitance_range		(0.000955, 0.001342);
		rise_capacitance_range		(0.001149, 0.001664);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000003,0.000001,0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000174,0.000140,0.000104,0.000070,0.000046,0.000031,0.000021,0.000013");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000011,0.000008,0.000006,0.000005,0.000003,0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000007,0.000007,0.000005,0.000004,0.000000");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000010,0.000005,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000011,0.000009,0.000008,0.000007,0.000006,0.000004,0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.001253;
		fall_capacitance	: 0.001151;
		rise_capacitance	: 0.001356;
		fall_capacitance_range		(0.000961, 0.001389);
		rise_capacitance_range		(0.001129, 0.001613);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000067,0.000046,0.000030,0.000018,0.000011,0.000006,0.000003,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000005,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000076,0.000059,0.000043,0.000030,0.000020,0.000014,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000004,0.000002,0.000000,-0.000001,-0.000002,-0.000004,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000008,0.000005,0.000002,0.000001,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000028,0.000019,0.000012,0.000007,0.000003,-0.000000,-0.000004");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.001280;
		fall_capacitance	: 0.001226;
		rise_capacitance	: 0.001334;
		fall_capacitance_range		(0.001008, 0.001461);
		rise_capacitance_range		(0.001156, 0.001566);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000012,0.000007,0.000004,0.000002,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000027,0.000020,0.000015,0.000011,0.000009,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000018,0.000012,0.000008,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000017,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000017,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000025,0.000016,0.000011,0.000007,0.000004,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.015118,0.018609,0.023249,0.032490,0.050699,0.086979", \
				        "0.018594,0.021994,0.026658,0.035819,0.054035,0.090324", \
				        "0.023467,0.027986,0.033408,0.042713,0.060836,0.097017", \
				        "0.028688,0.034785,0.041956,0.054393,0.074709,0.110595", \
				        "0.032438,0.040740,0.050504,0.067335,0.095040,0.138181", \
				        "0.030661,0.041978,0.055360,0.078397,0.116027,0.175059", \
				        "0.014367,0.030217,0.048497,0.080142,0.131613,0.211980", \
				        "-0.033335,-0.012606,0.012659,0.055644,0.126150,0.236256");
			}
			cell_rise(Timing_X2) {
				values ("0.030351,0.041872,0.058326,0.091832,0.158425,0.290674", \
				        "0.033641,0.044893,0.061125,0.094525,0.161076,0.293368", \
				        "0.041615,0.051971,0.067586,0.100407,0.166599,0.298726", \
				        "0.056928,0.068172,0.082165,0.113083,0.178447,0.309752", \
				        "0.078486,0.092688,0.110318,0.141995,0.203782,0.333262", \
				        "0.109699,0.127450,0.149331,0.189192,0.258676,0.383985", \
				        "0.158105,0.180365,0.207075,0.256049,0.342255,0.489265", \
				        "0.238792,0.265465,0.299106,0.358765,0.463811,0.645163");
			}
			fall_transition(Timing_X2) {
				values ("0.008305,0.011422,0.015230,0.023099,0.038921,0.070489", \
				        "0.009063,0.011545,0.015195,0.023137,0.038963,0.070481", \
				        "0.012730,0.015050,0.017795,0.023808,0.038939,0.070509", \
				        "0.018896,0.021755,0.025370,0.031117,0.041790,0.070511", \
				        "0.029491,0.033042,0.037422,0.044855,0.057310,0.078497", \
				        "0.048135,0.052781,0.058325,0.067884,0.083851,0.109987", \
				        "0.081393,0.087657,0.095097,0.107758,0.128401,0.161770", \
				        "0.141882,0.150318,0.160341,0.177702,0.205574,0.249195");
			}
			rise_transition(Timing_X2) {
				values ("0.036749,0.050634,0.068154,0.099796,0.159223,0.276485", \
				        "0.035710,0.049857,0.067502,0.099569,0.159227,0.276463", \
				        "0.035169,0.048060,0.065885,0.099101,0.159216,0.276493", \
				        "0.040071,0.049980,0.065021,0.096650,0.159002,0.276486", \
				        "0.050748,0.060624,0.073844,0.099223,0.156538,0.276460", \
				        "0.067915,0.079115,0.093267,0.119482,0.168131,0.275378", \
				        "0.097642,0.109712,0.125666,0.155355,0.209702,0.306260", \
				        "0.152189,0.165576,0.182649,0.215704,0.277751,0.389594");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022035,0.025791,0.030768,0.040409,0.059135,0.095899", \
				        "0.025403,0.029097,0.034071,0.043702,0.062431,0.099222", \
				        "0.032306,0.036166,0.040970,0.050515,0.069133,0.105826", \
				        "0.041076,0.046272,0.052567,0.063832,0.082809,0.119285", \
				        "0.049727,0.056734,0.065182,0.080429,0.106137,0.147116", \
				        "0.055158,0.064710,0.076169,0.096810,0.131539,0.187593", \
				        "0.050235,0.063063,0.078734,0.106611,0.153746,0.229716", \
				        "0.019483,0.036894,0.057903,0.095679,0.159540,0.262650");
			}
			cell_rise(Timing_X2) {
				values ("0.067273,0.080282,0.097414,0.130932,0.197309,0.329389", \
				        "0.070188,0.083074,0.100238,0.133688,0.200156,0.332281", \
				        "0.075741,0.088648,0.105504,0.139125,0.205574,0.337797", \
				        "0.086332,0.099217,0.116158,0.149640,0.215994,0.348259", \
				        "0.103737,0.118374,0.136659,0.170750,0.237011,0.368996", \
				        "0.130134,0.147786,0.169803,0.209682,0.281309,0.413080", \
				        "0.176830,0.198887,0.225438,0.273638,0.358255,0.505095", \
				        "0.258932,0.286168,0.318942,0.378416,0.481439,0.657038");
			}
			fall_transition(Timing_X2) {
				values ("0.013989,0.017127,0.021034,0.028899,0.044665,0.076255", \
				        "0.013800,0.017003,0.020975,0.028917,0.044654,0.076255", \
				        "0.015706,0.018091,0.021469,0.028993,0.044646,0.076237", \
				        "0.022405,0.025092,0.028469,0.033731,0.046100,0.076230", \
				        "0.033147,0.036596,0.040851,0.048068,0.060119,0.082077", \
				        "0.051152,0.055863,0.061469,0.071005,0.086960,0.112811", \
				        "0.082089,0.088714,0.096449,0.109398,0.130592,0.164545", \
				        "0.136067,0.145568,0.156747,0.175171,0.204448,0.249583");
			}
			rise_transition(Timing_X2) {
				values ("0.044829,0.055939,0.070720,0.100363,0.159226,0.276455", \
				        "0.044775,0.055858,0.070825,0.100369,0.159233,0.276480", \
				        "0.044626,0.055827,0.070839,0.100341,0.159176,0.276471", \
				        "0.045093,0.055861,0.070797,0.100307,0.159213,0.276480", \
				        "0.053029,0.062636,0.075460,0.102065,0.159226,0.276490", \
				        "0.070319,0.079737,0.092704,0.117634,0.167279,0.276929", \
				        "0.098817,0.108834,0.122419,0.148837,0.199839,0.298183", \
				        "0.147617,0.158368,0.172686,0.201350,0.256922,0.361534");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024250,0.028507,0.034076,0.044696,0.064617,0.102687", \
				        "0.027712,0.031862,0.037395,0.047934,0.067827,0.105890", \
				        "0.035407,0.039246,0.044363,0.054628,0.074363,0.112277", \
				        "0.046676,0.051737,0.057612,0.068630,0.087956,0.125595", \
				        "0.058848,0.065572,0.073732,0.088377,0.113339,0.153437", \
				        "0.069488,0.078453,0.089241,0.108911,0.142443,0.197004", \
				        "0.073265,0.084908,0.099330,0.125463,0.170156,0.243563", \
				        "0.057425,0.073013,0.092032,0.126510,0.186166,0.284486");
			}
			cell_rise(Timing_X2) {
				values ("0.090028,0.103066,0.120114,0.153682,0.220061,0.352150", \
				        "0.093110,0.106032,0.123084,0.156712,0.223138,0.355279", \
				        "0.098992,0.112011,0.128949,0.162475,0.228916,0.361128", \
				        "0.109568,0.122654,0.139631,0.173022,0.239468,0.371710", \
				        "0.125663,0.139727,0.157599,0.191411,0.257732,0.389913", \
				        "0.144604,0.160957,0.181720,0.220022,0.290587,0.422978", \
				        "0.174024,0.194410,0.219173,0.264079,0.344635,0.489387", \
				        "0.238491,0.263680,0.293361,0.347375,0.441484,0.604900");
			}
			fall_transition(Timing_X2) {
				values ("0.018197,0.021575,0.025841,0.034031,0.049967,0.081504", \
				        "0.017513,0.021124,0.025573,0.033870,0.049911,0.081499", \
				        "0.018250,0.021238,0.025237,0.033378,0.049735,0.081462", \
				        "0.025243,0.027815,0.031103,0.036566,0.050034,0.081298", \
				        "0.036728,0.040045,0.044271,0.051104,0.062658,0.085483", \
				        "0.055338,0.059815,0.065231,0.074374,0.089984,0.115224", \
				        "0.086852,0.093044,0.100441,0.112945,0.133561,0.167166", \
				        "0.140683,0.149886,0.160454,0.178236,0.206723,0.251373");
			}
			rise_transition(Timing_X2) {
				values ("0.044992,0.055993,0.070791,0.100323,0.159194,0.276484", \
				        "0.045002,0.056018,0.070840,0.100284,0.159189,0.276466", \
				        "0.045022,0.055972,0.070799,0.100310,0.159222,0.276462", \
				        "0.045301,0.056169,0.070980,0.100382,0.159216,0.276485", \
				        "0.050319,0.060163,0.073656,0.101340,0.159248,0.276494", \
				        "0.063366,0.073275,0.086676,0.113192,0.165374,0.276951", \
				        "0.093288,0.102057,0.114783,0.140224,0.192139,0.295385", \
				        "0.145870,0.154250,0.166457,0.191476,0.242885,0.347031");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.023873,0.028402,0.034403,0.045689,0.066836,0.106527", \
				        "0.027563,0.031924,0.037779,0.048943,0.070000,0.109572", \
				        "0.035881,0.039814,0.045159,0.055915,0.076624,0.116044", \
				        "0.048651,0.053716,0.059617,0.070686,0.090522,0.129355", \
				        "0.063277,0.069925,0.077958,0.092691,0.117481,0.157459", \
				        "0.077703,0.086483,0.097098,0.116474,0.149536,0.203509", \
				        "0.087958,0.099298,0.113152,0.138371,0.181938,0.253922", \
				        "0.085887,0.100464,0.118108,0.150647,0.207346,0.302081");
			}
			cell_rise(Timing_X2) {
				values ("0.098759,0.111791,0.128919,0.162394,0.228773,0.360855", \
				        "0.102278,0.115253,0.132423,0.165878,0.232315,0.364472", \
				        "0.108566,0.121558,0.138542,0.172127,0.238563,0.370789", \
				        "0.119156,0.132235,0.149148,0.182662,0.249060,0.381317", \
				        "0.134906,0.148606,0.166110,0.199677,0.265981,0.398148", \
				        "0.151660,0.167037,0.186642,0.223378,0.292713,0.424997", \
				        "0.169924,0.188171,0.210872,0.252699,0.329624,0.471973", \
				        "0.206763,0.229656,0.256615,0.306139,0.393488,0.549729");
			}
			fall_transition(Timing_X2) {
				values ("0.019697,0.023599,0.028493,0.037461,0.054303,0.086462", \
				        "0.018895,0.023011,0.027951,0.037157,0.054146,0.086386", \
				        "0.019742,0.023005,0.027436,0.036345,0.053749,0.086291", \
				        "0.027271,0.029829,0.033064,0.038948,0.053396,0.085867", \
				        "0.039773,0.043071,0.047174,0.053862,0.065158,0.088834", \
				        "0.059565,0.063887,0.069185,0.078170,0.093231,0.117872", \
				        "0.092412,0.098509,0.105578,0.117582,0.137599,0.170392", \
				        "0.149200,0.157833,0.167740,0.184422,0.211415,0.254663");
			}
			rise_transition(Timing_X2) {
				values ("0.044993,0.055977,0.070835,0.100342,0.159178,0.276473", \
				        "0.045006,0.055989,0.070835,0.100379,0.159201,0.276490", \
				        "0.045020,0.056016,0.070775,0.100314,0.159221,0.276492", \
				        "0.045121,0.056085,0.070789,0.100303,0.159204,0.276482", \
				        "0.048063,0.058290,0.072301,0.100760,0.159221,0.276487", \
				        "0.057020,0.067602,0.081748,0.109235,0.163479,0.276738", \
				        "0.080267,0.089823,0.103281,0.130397,0.184934,0.292231", \
				        "0.134646,0.142551,0.154139,0.178840,0.230239,0.336413");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.000028,-0.000682,-0.001627,-0.003544,-0.007395,-0.015111", \
				        "0.000044,-0.000659,-0.001609,-0.003525,-0.007368,-0.015081", \
				        "0.000139,-0.000597,-0.001539,-0.003470,-0.007330,-0.015041", \
				        "0.000389,-0.000382,-0.001372,-0.003343,-0.007222,-0.014983", \
				        "0.001012,0.000149,-0.000929,-0.003013,-0.007002,-0.014834", \
				        "0.002302,0.001388,0.000214,-0.002044,-0.006290,-0.014344", \
				        "0.005068,0.004083,0.002819,0.000359,-0.004272,-0.012855", \
				        "0.010922,0.009821,0.008434,0.005761,0.000722,-0.008652");
			}
			rise_power(Power_X2) {
				values ("0.004039,0.004772,0.005745,0.007692,0.011577,0.019334", \
				        "0.004044,0.004768,0.005746,0.007692,0.011573,0.019345", \
				        "0.004123,0.004845,0.005805,0.007730,0.011590,0.019326", \
				        "0.004344,0.005042,0.005995,0.007872,0.011694,0.019390", \
				        "0.004870,0.005534,0.006443,0.008285,0.012028,0.019627", \
				        "0.006026,0.006631,0.007470,0.009234,0.012875,0.020312", \
				        "0.008571,0.009043,0.009777,0.011377,0.014804,0.022004", \
				        "0.014156,0.014473,0.014992,0.016230,0.019196,0.025957");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.002475,0.001737,0.000777,-0.001152,-0.005010,-0.012748", \
				        "0.002462,0.001741,0.000789,-0.001134,-0.004998,-0.012717", \
				        "0.002488,0.001767,0.000819,-0.001100,-0.004964,-0.012671", \
				        "0.002594,0.001861,0.000920,-0.001013,-0.004901,-0.012638", \
				        "0.002955,0.002170,0.001194,-0.000793,-0.004727,-0.012524", \
				        "0.003868,0.003074,0.002019,-0.000062,-0.004117,-0.012080", \
				        "0.006121,0.005245,0.004107,0.001891,-0.002411,-0.010694", \
				        "0.010956,0.010024,0.008811,0.006430,0.001823,-0.006969");
			}
			rise_power(Power_X2) {
				values ("0.004868,0.005624,0.006598,0.008552,0.012429,0.020170", \
				        "0.004870,0.005585,0.006563,0.008522,0.012400,0.020152", \
				        "0.004847,0.005571,0.006537,0.008496,0.012375,0.020127", \
				        "0.004804,0.005570,0.006551,0.008494,0.012372,0.020129", \
				        "0.004921,0.005639,0.006609,0.008532,0.012398,0.020142", \
				        "0.005466,0.006121,0.007034,0.008890,0.012664,0.020314", \
				        "0.007280,0.007830,0.008602,0.010288,0.013851,0.021268", \
				        "0.011684,0.012035,0.012627,0.013973,0.017104,0.024039");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.004357,0.003676,0.002708,0.000805,-0.003040,-0.010750", \
				        "0.004382,0.003653,0.002692,0.000785,-0.003053,-0.010761", \
				        "0.004340,0.003639,0.002689,0.000778,-0.003079,-0.010766", \
				        "0.004409,0.003695,0.002742,0.000817,-0.003049,-0.010762", \
				        "0.004651,0.003910,0.002939,0.000980,-0.002923,-0.010683", \
				        "0.005510,0.004729,0.003685,0.001632,-0.002388,-0.010283", \
				        "0.007755,0.006855,0.005766,0.003570,-0.000694,-0.008927", \
				        "0.012756,0.011866,0.010642,0.008276,0.003689,-0.005101");
			}
			rise_power(Power_X2) {
				values ("0.005641,0.006356,0.007335,0.009276,0.013163,0.020903", \
				        "0.005610,0.006370,0.007317,0.009259,0.013147,0.020897", \
				        "0.005602,0.006338,0.007315,0.009266,0.013140,0.020908", \
				        "0.005590,0.006314,0.007286,0.009225,0.013117,0.020864", \
				        "0.005593,0.006331,0.007287,0.009226,0.013107,0.020851", \
				        "0.005761,0.006476,0.007424,0.009339,0.013182,0.020916", \
				        "0.007119,0.007701,0.008520,0.010258,0.013911,0.021453", \
				        "0.011649,0.012030,0.012563,0.013907,0.017001,0.023940");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X2) {
				values ("0.006040,0.005333,0.004380,0.002477,-0.001342,-0.008999", \
				        "0.006015,0.005297,0.004333,0.002442,-0.001374,-0.009026", \
				        "0.005979,0.005278,0.004324,0.002413,-0.001412,-0.009074", \
				        "0.006012,0.005294,0.004344,0.002435,-0.001405,-0.009078", \
				        "0.006195,0.005479,0.004519,0.002569,-0.001298,-0.009032", \
				        "0.007010,0.006225,0.005205,0.003173,-0.000812,-0.008666", \
				        "0.009296,0.008427,0.007298,0.005113,0.000874,-0.007323", \
				        "0.014655,0.013731,0.012510,0.010115,0.005495,-0.003325");
			}
			rise_power(Power_X2) {
				values ("0.006365,0.007083,0.008084,0.010014,0.013886,0.021629", \
				        "0.006362,0.007074,0.008063,0.010006,0.013895,0.021634", \
				        "0.006343,0.007068,0.008058,0.009997,0.013882,0.021627", \
				        "0.006336,0.007056,0.008036,0.009977,0.013858,0.021611", \
				        "0.006331,0.007067,0.008026,0.009972,0.013837,0.021601", \
				        "0.006405,0.007124,0.008093,0.010022,0.013877,0.021612", \
				        "0.007425,0.008065,0.008902,0.010688,0.014399,0.021995", \
				        "0.012028,0.012397,0.012933,0.014238,0.017290,0.024227");
			}
		}
	}

}


/******************************************************************************************
 Module          	: NOR4_X4
 Cell Description	: Combinational cell (NOR4_X4) with drive strength X4
*******************************************************************************************/

cell (NOR4_X4) {

	area               	: 2.394000;

	cell_leakage_power 	: 28226.493125;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 34301.170000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 15556.180000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 20885.250000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 25236.810000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 16034.940000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 25160.210000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 25386.250000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 37407.270000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 15253.370000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 24994.000000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 25090.680000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 37252.000000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 25016.530000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 37199.620000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 37315.540000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 49534.070000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002447;
		fall_capacitance	: 0.002066;
		rise_capacitance	: 0.002828;
		fall_capacitance_range		(0.001830, 0.002791);
		rise_capacitance_range		(0.002224, 0.003590);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000016,0.000010,0.000006,0.000003,0.000001,-0.000003,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000011,0.000005,0.000002,-0.000000,-0.000002,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000014,0.000008,0.000004,0.000001,-0.000002,-0.000006,-0.000014");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000011,0.000005,0.000002,0.000000,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000012,0.000006,0.000002,0.000000,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000017,0.000010,0.000007,0.000004,0.000001,-0.000003,-0.000011");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000012,0.000006,0.000002,0.000000,-0.000002,-0.000005,-0.000011");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002652;
		fall_capacitance	: 0.002381;
		rise_capacitance	: 0.002922;
		fall_capacitance_range		(0.002100, 0.002834);
		rise_capacitance_range		(0.002451, 0.003467);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000004,0.000002,0.000000,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000012,0.000006,0.000003,0.000001,-0.000002,-0.000005,-0.000012");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000351,0.000284,0.000207,0.000134,0.000083,0.000052,0.000033,0.000016");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000017,0.000011,0.000008,0.000006,0.000003,-0.000001,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000016,0.000013,0.000011,0.000009,0.000007,0.000003,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000018,0.000009,0.000003,-0.000000,-0.000003,-0.000008,-0.000015");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000018,0.000015,0.000013,0.000011,0.000009,0.000006,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.002838;
		fall_capacitance	: 0.002639;
		rise_capacitance	: 0.003037;
		fall_capacitance_range		(0.002187, 0.003120);
		rise_capacitance_range		(0.002593, 0.003558);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000007,0.000004,0.000001,-0.000000,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000120,0.000081,0.000052,0.000032,0.000019,0.000011,0.000004,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000009,0.000004,0.000001,-0.000001,-0.000003,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000146,0.000113,0.000081,0.000055,0.000036,0.000024,0.000015,0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000009,0.000003,0.000000,-0.000002,-0.000004,-0.000007,-0.000013");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000016,0.000009,0.000004,0.000001,-0.000001,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000077,0.000055,0.000038,0.000024,0.000013,0.000006,-0.000000,-0.000008");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.002995;
		fall_capacitance	: 0.002894;
		rise_capacitance	: 0.003096;
		fall_capacitance_range		(0.002445, 0.003348);
		rise_capacitance_range		(0.002735, 0.003566);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000023,0.000014,0.000008,0.000004,0.000001,-0.000003,-0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000071,0.000049,0.000036,0.000027,0.000020,0.000015,0.000010,0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000034,0.000023,0.000016,0.000010,0.000006,0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000051,0.000032,0.000019,0.000011,0.000006,0.000002,-0.000003,-0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000051,0.000032,0.000019,0.000011,0.000006,0.000002,-0.000002,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000071,0.000047,0.000031,0.000020,0.000013,0.000008,0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000050,0.000031,0.000018,0.000011,0.000005,0.000001,-0.000003,-0.000009");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015643,0.019772,0.024410,0.033592,0.051818,0.088219", \
				        "0.019109,0.023124,0.027762,0.036950,0.055182,0.091501", \
				        "0.024108,0.029306,0.034569,0.043808,0.061956,0.098205", \
				        "0.029342,0.036359,0.043424,0.055788,0.075798,0.111771", \
				        "0.033057,0.042621,0.052210,0.068889,0.096397,0.139348", \
				        "0.031183,0.044294,0.057449,0.080247,0.117647,0.176487", \
				        "0.014712,0.032996,0.051100,0.082394,0.133550,0.213666", \
				        "-0.033126,-0.008956,0.015918,0.058559,0.128609,0.238364");
			}
			cell_rise(Timing_X4) {
				values ("0.028134,0.041072,0.057270,0.090558,0.156786,0.288529", \
				        "0.031552,0.044191,0.060101,0.093253,0.159474,0.291212", \
				        "0.039880,0.051343,0.066639,0.099155,0.165047,0.296629", \
				        "0.055061,0.067806,0.081456,0.112004,0.176956,0.307747", \
				        "0.076543,0.092832,0.110089,0.141229,0.202408,0.331305", \
				        "0.107986,0.128202,0.149712,0.188957,0.257657,0.382219", \
				        "0.156124,0.181697,0.208025,0.256349,0.341769,0.487803", \
				        "0.236508,0.267384,0.300554,0.359600,0.463826,0.644039");
			}
			fall_transition(Timing_X4) {
				values ("0.008652,0.012130,0.016089,0.023962,0.039789,0.071422", \
				        "0.009326,0.012355,0.016047,0.023954,0.039788,0.071385", \
				        "0.012934,0.015528,0.018130,0.024526,0.039782,0.071389", \
				        "0.019027,0.022359,0.025828,0.031370,0.042467,0.071429", \
				        "0.029432,0.033619,0.037952,0.045400,0.057854,0.079185", \
				        "0.047787,0.053265,0.058891,0.068418,0.084485,0.110660", \
				        "0.080734,0.088163,0.095558,0.108256,0.128971,0.162437", \
				        "0.140972,0.150906,0.160896,0.178196,0.206088,0.249776");
			}
			rise_transition(Timing_X4) {
				values ("0.034770,0.051212,0.068856,0.100699,0.160230,0.277156", \
				        "0.033634,0.050347,0.068356,0.100624,0.160226,0.277149", \
				        "0.033518,0.048544,0.066608,0.100025,0.160200,0.277160", \
				        "0.038959,0.050410,0.065415,0.097231,0.159960,0.277131", \
				        "0.049799,0.061136,0.074279,0.099806,0.157209,0.277140", \
				        "0.067181,0.079985,0.093965,0.119969,0.168603,0.275844", \
				        "0.097083,0.111057,0.126728,0.156166,0.210199,0.306516", \
				        "0.151791,0.167245,0.184190,0.216885,0.278501,0.389819");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022542,0.026976,0.031941,0.041588,0.060325,0.097137", \
				        "0.025920,0.030281,0.035260,0.044872,0.063619,0.100450", \
				        "0.032858,0.037292,0.042140,0.051650,0.070304,0.107051", \
				        "0.041780,0.047754,0.053803,0.064927,0.083927,0.120486", \
				        "0.050527,0.058677,0.066948,0.082038,0.107476,0.148272", \
				        "0.056071,0.067038,0.078402,0.098753,0.133330,0.189115", \
				        "0.051135,0.066026,0.081477,0.109085,0.155950,0.231607", \
				        "0.020347,0.040530,0.061434,0.098751,0.162243,0.265027");
			}
			cell_rise(Timing_X4) {
				values ("0.066743,0.081715,0.098723,0.131931,0.198009,0.329630", \
				        "0.069630,0.084504,0.101374,0.134773,0.200808,0.332462", \
				        "0.074892,0.089852,0.106658,0.140010,0.206225,0.337975", \
				        "0.084960,0.099899,0.116785,0.150144,0.216398,0.348223", \
				        "0.101489,0.118532,0.136769,0.170846,0.237055,0.368865", \
				        "0.127344,0.147987,0.169820,0.209537,0.280965,0.412613", \
				        "0.173791,0.199446,0.225695,0.273543,0.357689,0.504205", \
				        "0.254855,0.286689,0.319238,0.378173,0.480728,0.655844");
			}
			fall_transition(Timing_X4) {
				values ("0.014214,0.017801,0.021691,0.029632,0.045363,0.077044", \
				        "0.014003,0.017690,0.021683,0.029594,0.045352,0.077044", \
				        "0.015740,0.018586,0.022297,0.029506,0.045359,0.077004", \
				        "0.022368,0.025474,0.028701,0.034151,0.046671,0.077052", \
				        "0.033006,0.037082,0.041295,0.048393,0.060423,0.082638", \
				        "0.050781,0.056274,0.061823,0.071467,0.087380,0.113287", \
				        "0.081251,0.088994,0.096720,0.109721,0.130984,0.165070", \
				        "0.134416,0.145630,0.156724,0.175220,0.204620,0.249916");
			}
			rise_transition(Timing_X4) {
				values ("0.044068,0.057080,0.072030,0.101526,0.160193,0.277153", \
				        "0.044008,0.057052,0.071942,0.101537,0.160241,0.277150", \
				        "0.043816,0.056944,0.071900,0.101492,0.160218,0.277162", \
				        "0.044332,0.056924,0.071946,0.101522,0.160233,0.277129", \
				        "0.052199,0.063518,0.076423,0.103152,0.160245,0.277156", \
				        "0.069518,0.080546,0.093521,0.118468,0.168152,0.277599", \
				        "0.098057,0.109712,0.123217,0.149630,0.200506,0.298734", \
				        "0.147126,0.159518,0.173763,0.202325,0.257568,0.361952");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024783,0.029785,0.035365,0.045902,0.065779,0.103896", \
				        "0.028228,0.033107,0.038669,0.049141,0.068996,0.107032", \
				        "0.035891,0.040383,0.045592,0.055812,0.075513,0.113508", \
				        "0.047373,0.053140,0.059083,0.069844,0.089101,0.126787", \
				        "0.059724,0.067510,0.075441,0.089971,0.114753,0.154589", \
				        "0.070720,0.080952,0.091701,0.111028,0.144338,0.198524", \
				        "0.074673,0.088148,0.102388,0.128152,0.172619,0.245672", \
				        "0.058983,0.077060,0.095829,0.130054,0.189323,0.287195");
			}
			cell_rise(Timing_X4) {
				values ("0.092093,0.107094,0.124057,0.157327,0.223405,0.355005", \
				        "0.095171,0.110107,0.126988,0.160251,0.226406,0.358054", \
				        "0.101077,0.116093,0.132827,0.166132,0.232289,0.364016", \
				        "0.111699,0.126723,0.143480,0.176608,0.242695,0.374402", \
				        "0.127242,0.143559,0.161208,0.194797,0.260856,0.392501", \
				        "0.144494,0.163800,0.184475,0.222628,0.293117,0.425250", \
				        "0.172636,0.196073,0.220679,0.265475,0.345971,0.490655", \
				        "0.235722,0.264799,0.294514,0.348121,0.441832,0.605117");
			}
			fall_transition(Timing_X4) {
				values ("0.018443,0.022384,0.026542,0.034653,0.050609,0.082220", \
				        "0.017754,0.021974,0.026247,0.034532,0.050566,0.082238", \
				        "0.018316,0.021829,0.025879,0.034094,0.050424,0.082180", \
				        "0.025203,0.028149,0.031280,0.036947,0.050620,0.082082", \
				        "0.036626,0.040503,0.044634,0.051429,0.062964,0.086059", \
				        "0.055109,0.060319,0.065619,0.074894,0.090358,0.115562", \
				        "0.086282,0.093465,0.100839,0.113358,0.133991,0.167609", \
				        "0.139452,0.150184,0.160681,0.178412,0.206990,0.251726");
			}
			rise_transition(Timing_X4) {
				values ("0.044242,0.057151,0.072079,0.101531,0.160190,0.277150", \
				        "0.044259,0.057161,0.072039,0.101533,0.160220,0.277129", \
				        "0.044273,0.057132,0.072053,0.101525,0.160221,0.277154", \
				        "0.044512,0.057262,0.072144,0.101502,0.160198,0.277120", \
				        "0.049278,0.060915,0.074411,0.102337,0.160268,0.277127", \
				        "0.062334,0.073966,0.087555,0.113928,0.166175,0.277572", \
				        "0.092611,0.102954,0.115717,0.141188,0.192962,0.295932", \
				        "0.145520,0.155376,0.167513,0.192557,0.243812,0.347651");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024363,0.029693,0.035682,0.046953,0.068028,0.107790", \
				        "0.028043,0.033194,0.039043,0.050206,0.071211,0.110869", \
				        "0.036342,0.040959,0.046394,0.057115,0.077783,0.117231", \
				        "0.049338,0.055125,0.061105,0.072007,0.091686,0.130585", \
				        "0.064184,0.071958,0.079760,0.094389,0.118845,0.158679", \
				        "0.079096,0.089151,0.099575,0.118712,0.151538,0.205196", \
				        "0.089972,0.102834,0.116506,0.141423,0.184728,0.256273", \
				        "0.088110,0.104961,0.122456,0.154763,0.211037,0.305353");
			}
			cell_rise(Timing_X4) {
				values ("0.103465,0.118472,0.135353,0.168669,0.234766,0.366334", \
				        "0.106976,0.121927,0.138877,0.172215,0.238341,0.369962", \
				        "0.113172,0.128159,0.145027,0.178341,0.244538,0.376217", \
				        "0.123647,0.138737,0.155455,0.188758,0.254889,0.386649", \
				        "0.139483,0.155160,0.172240,0.205614,0.271639,0.403319", \
				        "0.155384,0.173255,0.192666,0.229140,0.298107,0.429934", \
				        "0.171285,0.192498,0.215087,0.256896,0.333832,0.475982", \
				        "0.205490,0.231957,0.259045,0.308309,0.395650,0.551922");
			}
			fall_transition(Timing_X4) {
				values ("0.019915,0.024435,0.029178,0.038165,0.054973,0.087221", \
				        "0.019103,0.023841,0.028724,0.037843,0.054819,0.087182", \
				        "0.019804,0.023681,0.028029,0.037041,0.054432,0.087055", \
				        "0.027214,0.030169,0.033209,0.039333,0.053984,0.086636", \
				        "0.039658,0.043460,0.047469,0.054125,0.065390,0.089385", \
				        "0.059311,0.064404,0.069678,0.078544,0.093622,0.118227", \
				        "0.092332,0.099046,0.106059,0.118052,0.137987,0.170818", \
				        "0.148358,0.158371,0.168198,0.184785,0.211815,0.255152");
			}
			rise_transition(Timing_X4) {
				values ("0.044252,0.057113,0.072059,0.101531,0.160237,0.277135", \
				        "0.044258,0.057123,0.071993,0.101480,0.160236,0.277139", \
				        "0.044276,0.057159,0.072069,0.101464,0.160203,0.277124", \
				        "0.044351,0.057177,0.072050,0.101539,0.160216,0.277154", \
				        "0.047014,0.059081,0.073143,0.101802,0.160236,0.277140", \
				        "0.055723,0.068170,0.082346,0.109977,0.164196,0.277405", \
				        "0.078846,0.090230,0.103905,0.131022,0.185571,0.292680", \
				        "0.134502,0.143616,0.155238,0.179850,0.231077,0.336939");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.001003,-0.000640,-0.002541,-0.006369,-0.014074,-0.029531", \
				        "0.001064,-0.000582,-0.002509,-0.006333,-0.014023,-0.029448", \
				        "0.001204,-0.000488,-0.002400,-0.006246,-0.013946,-0.029370", \
				        "0.001634,-0.000157,-0.002094,-0.006015,-0.013766,-0.029256", \
				        "0.002713,0.000783,-0.001328,-0.005415,-0.013349,-0.028981", \
				        "0.005217,0.003099,0.000801,-0.003638,-0.012031,-0.028066", \
				        "0.010689,0.008405,0.005889,0.001036,-0.008107,-0.025156", \
				        "0.022349,0.019868,0.017107,0.011784,0.001760,-0.016904");
			}
			rise_power(Power_X4) {
				values ("0.007931,0.009617,0.011597,0.015505,0.023269,0.038751", \
				        "0.007951,0.009645,0.011600,0.015485,0.023255,0.038737", \
				        "0.008113,0.009779,0.011711,0.015550,0.023276,0.038770", \
				        "0.008626,0.010193,0.012083,0.015840,0.023504,0.038896", \
				        "0.009669,0.011169,0.013016,0.016672,0.024135,0.039341", \
				        "0.012032,0.013372,0.015074,0.018560,0.025837,0.040726", \
				        "0.017053,0.018256,0.019693,0.022888,0.029750,0.044153", \
				        "0.028370,0.029051,0.030111,0.032590,0.038590,0.052098");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.005687,0.004028,0.002103,-0.001749,-0.009469,-0.024951", \
				        "0.005712,0.004039,0.002122,-0.001720,-0.009445,-0.024896", \
				        "0.005764,0.004079,0.002179,-0.001670,-0.009375,-0.024821", \
				        "0.005946,0.004244,0.002348,-0.001511,-0.009265,-0.024758", \
				        "0.006609,0.004817,0.002848,-0.001092,-0.008946,-0.024527", \
				        "0.008397,0.006545,0.004443,0.000307,-0.007796,-0.023667", \
				        "0.012838,0.010838,0.008575,0.004154,-0.004441,-0.020948", \
				        "0.022471,0.020356,0.017930,0.013179,0.004030,-0.013559");
			}
			rise_power(Power_X4) {
				values ("0.009585,0.011322,0.013296,0.017178,0.024936,0.040414", \
				        "0.009552,0.011274,0.013209,0.017126,0.024892,0.040381", \
				        "0.009475,0.011232,0.013165,0.017066,0.024841,0.040355", \
				        "0.009402,0.011149,0.013125,0.017019,0.024795,0.040341", \
				        "0.009526,0.011183,0.013163,0.017024,0.024796,0.040300", \
				        "0.010599,0.012139,0.013987,0.017695,0.025305,0.040627", \
				        "0.014287,0.015554,0.017134,0.020506,0.027635,0.042468", \
				        "0.023137,0.024016,0.025225,0.027857,0.034134,0.047999");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.009566,0.007866,0.005932,0.002096,-0.005550,-0.020973", \
				        "0.009486,0.007816,0.005898,0.002064,-0.005591,-0.021010", \
				        "0.009473,0.007784,0.005902,0.002046,-0.005615,-0.021032", \
				        "0.009539,0.007858,0.005986,0.002130,-0.005587,-0.021007", \
				        "0.010019,0.008303,0.006370,0.002436,-0.005342,-0.020855", \
				        "0.011738,0.009900,0.007869,0.003754,-0.004272,-0.020067", \
				        "0.016208,0.014198,0.011937,0.007583,-0.000920,-0.017359", \
				        "0.026303,0.024093,0.021729,0.016982,0.007836,-0.009712");
			}
			rise_power(Power_X4) {
				values ("0.011063,0.012807,0.014767,0.018658,0.026420,0.041900", \
				        "0.011057,0.012771,0.014737,0.018617,0.026395,0.041881", \
				        "0.011061,0.012763,0.014735,0.018636,0.026378,0.041887", \
				        "0.011040,0.012740,0.014685,0.018572,0.026342,0.041851", \
				        "0.010977,0.012728,0.014677,0.018569,0.026330,0.041815", \
				        "0.011228,0.012913,0.014817,0.018675,0.026387,0.041875", \
				        "0.013889,0.015221,0.016863,0.020362,0.027700,0.042840", \
				        "0.022913,0.023797,0.024937,0.027620,0.033865,0.047735");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X4) {
				values ("0.012795,0.011143,0.009247,0.005434,-0.002184,-0.017518", \
				        "0.012756,0.011071,0.009169,0.005358,-0.002257,-0.017572", \
				        "0.012681,0.011022,0.009134,0.005291,-0.002322,-0.017636", \
				        "0.012732,0.011074,0.009186,0.005361,-0.002306,-0.017655", \
				        "0.013155,0.011453,0.009535,0.005642,-0.002098,-0.017539", \
				        "0.014761,0.012959,0.010912,0.006864,-0.001095,-0.016795", \
				        "0.019320,0.017338,0.015110,0.010752,0.002282,-0.014111", \
				        "0.030138,0.027977,0.025541,0.020754,0.011532,-0.006085");
			}
			rise_power(Power_X4) {
				values ("0.012580,0.014289,0.016241,0.020123,0.027886,0.043363", \
				        "0.012561,0.014274,0.016231,0.020110,0.027877,0.043369", \
				        "0.012525,0.014241,0.016179,0.020077,0.027853,0.043353", \
				        "0.012531,0.014209,0.016159,0.020045,0.027820,0.043333", \
				        "0.012513,0.014224,0.016156,0.020042,0.027785,0.043312", \
				        "0.012579,0.014288,0.016250,0.020093,0.027832,0.043327", \
				        "0.014466,0.015908,0.017618,0.021219,0.028689,0.043954", \
				        "0.023536,0.024392,0.025499,0.028151,0.034251,0.048238");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI211_X1
 Cell Description	: Combinational cell (OAI211_X1) with drive strength X1
*******************************************************************************************/

cell (OAI211_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 8370.957269;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 2416.765000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 2787.462000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 8313.230000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 19573.530000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 1844.191000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 2815.369000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 8737.442000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 19490.610000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 1844.190000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 2815.363000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 8737.444000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 20199.900000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 510.874300;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 1497.191000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 7495.365000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 24856.390000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000522;
		fall_capacitance	: 0.000523;
		rise_capacitance	: 0.000521;
		fall_capacitance_range		(0.000450, 0.000592);
		rise_capacitance_range		(0.000445, 0.000645);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000001,0.000001,0.000000");
			}

		}

		internal_power () {

			when      	: "!B & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000001,0.000001,0.000000");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000001,0.000001,0.000000");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000018,0.000012,0.000008,0.000006,0.000004,0.000003,-0.000000");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.000527;
		fall_capacitance	: 0.000515;
		rise_capacitance	: 0.000538;
		fall_capacitance_range		(0.000452, 0.000571);
		rise_capacitance_range		(0.000456, 0.000639);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000007,0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "!A & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003,-0.000006");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000619;
		fall_capacitance	: 0.000598;
		rise_capacitance	: 0.000641;
		fall_capacitance_range		(0.000535, 0.000710);
		rise_capacitance_range		(0.000536, 0.000816);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000009,0.000007,0.000005,0.000004,0.000003,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000007,0.000005,0.000004,0.000003,0.000002,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000002,0.000001,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000001");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000623;
		fall_capacitance	: 0.000630;
		rise_capacitance	: 0.000617;
		fall_capacitance_range		(0.000539, 0.000725);
		rise_capacitance_range		(0.000529, 0.000760);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000007,0.000006,0.000005,0.000004,0.000003,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000009,0.000008,0.000007,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000022,0.000015,0.000010,0.000006,0.000004,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000007,0.000006,0.000005,0.000004,0.000003,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & B)";

		timing () {

			related_pin	   : "A";
			when	           : "B & !C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.043005,0.046069,0.052308,0.064425,0.088293,0.135435", \
				        "0.046075,0.049146,0.055222,0.067343,0.091207,0.138358", \
				        "0.051523,0.054664,0.060757,0.072787,0.096615,0.143782", \
				        "0.061383,0.064695,0.071171,0.083500,0.107375,0.154578", \
				        "0.073848,0.078056,0.085997,0.100721,0.127221,0.175350", \
				        "0.083056,0.088965,0.099852,0.119854,0.154360,0.211872", \
				        "0.079405,0.087481,0.102782,0.130494,0.178202,0.255870", \
				        "0.043948,0.055517,0.076422,0.114657,0.180233,0.287327");
			}
			cell_rise(Timing_X1) {
				values ("0.062472,0.067329,0.077244,0.096564,0.134938,0.211119", \
				        "0.066047,0.070892,0.080664,0.100025,0.138441,0.214624", \
				        "0.073636,0.078498,0.088251,0.107506,0.145804,0.221909", \
				        "0.089806,0.094659,0.104337,0.123429,0.161414,0.237291", \
				        "0.121817,0.127298,0.137752,0.156804,0.194101,0.269193", \
				        "0.168628,0.176011,0.189958,0.215459,0.260152,0.335864", \
				        "0.239709,0.248793,0.266919,0.300069,0.359300,0.459244", \
				        "0.354637,0.366885,0.389520,0.431943,0.507583,0.637617");
			}
			fall_transition(Timing_X1) {
				values ("0.025735,0.028342,0.033819,0.043808,0.063655,0.103804", \
				        "0.025721,0.028404,0.033849,0.043634,0.063770,0.103781", \
				        "0.025665,0.028329,0.033718,0.043772,0.063769,0.103819", \
				        "0.028000,0.030310,0.034951,0.044287,0.063637,0.103832", \
				        "0.036837,0.038994,0.043613,0.051705,0.068188,0.104720", \
				        "0.054540,0.056947,0.061734,0.070445,0.086576,0.118575", \
				        "0.085840,0.088811,0.094573,0.105085,0.123964,0.157463", \
				        "0.139747,0.143475,0.151148,0.164711,0.188938,0.229936");
			}
			rise_transition(Timing_X1) {
				values ("0.055580,0.060761,0.071023,0.091257,0.130146,0.204385", \
				        "0.055581,0.060709,0.071141,0.091258,0.130180,0.204388", \
				        "0.055578,0.060755,0.071084,0.091238,0.130169,0.204379", \
				        "0.056040,0.060963,0.071130,0.091290,0.130153,0.204386", \
				        "0.067142,0.070940,0.078888,0.095282,0.130633,0.204373", \
				        "0.098696,0.102703,0.110417,0.124289,0.150209,0.209768", \
				        "0.144297,0.149451,0.158966,0.177065,0.209079,0.261625", \
				        "0.212431,0.218417,0.230338,0.252583,0.293641,0.365129");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & !C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035368,0.038306,0.044271,0.055927,0.079288,0.125870", \
				        "0.038409,0.041350,0.047145,0.058874,0.082243,0.128836", \
				        "0.043812,0.046799,0.052695,0.064275,0.087650,0.134248", \
				        "0.052308,0.055742,0.062366,0.074875,0.098363,0.145035", \
				        "0.060876,0.065565,0.074256,0.089967,0.117349,0.165796", \
				        "0.063641,0.070434,0.082740,0.104585,0.141270,0.200798", \
				        "0.051319,0.060589,0.077912,0.108486,0.159612,0.240798", \
				        "0.005238,0.018436,0.041723,0.083745,0.154080,0.266205");
			}
			cell_rise(Timing_X1) {
				values ("0.061732,0.066556,0.076309,0.095643,0.133924,0.209914", \
				        "0.065308,0.070123,0.079746,0.099094,0.137388,0.213441", \
				        "0.072910,0.077715,0.087327,0.106549,0.144778,0.220730", \
				        "0.089080,0.093888,0.103431,0.122476,0.160408,0.236086", \
				        "0.120880,0.126369,0.136756,0.155978,0.193119,0.267984", \
				        "0.167239,0.174579,0.188454,0.214095,0.258928,0.334694", \
				        "0.237458,0.246535,0.264669,0.297891,0.357319,0.457461", \
				        "0.350735,0.363136,0.385715,0.428387,0.504299,0.634536");
			}
			fall_transition(Timing_X1) {
				values ("0.019693,0.022341,0.027828,0.037648,0.057828,0.097835", \
				        "0.019704,0.022371,0.027838,0.037609,0.057828,0.097847", \
				        "0.020052,0.022620,0.027829,0.037684,0.057832,0.097833", \
				        "0.023819,0.026039,0.030477,0.039062,0.057939,0.097805", \
				        "0.033553,0.035633,0.040097,0.047980,0.064012,0.099340", \
				        "0.051771,0.054165,0.058909,0.067567,0.083561,0.114745", \
				        "0.084306,0.086907,0.092476,0.102686,0.121358,0.154598", \
				        "0.138882,0.142540,0.149602,0.162877,0.186709,0.227373");
			}
			rise_transition(Timing_X1) {
				values ("0.043918,0.048555,0.057941,0.076069,0.112213,0.184335", \
				        "0.043908,0.048568,0.057882,0.076067,0.112158,0.184338", \
				        "0.043912,0.048563,0.057941,0.076094,0.112202,0.184329", \
				        "0.044383,0.048767,0.057865,0.076042,0.112157,0.184338", \
				        "0.055351,0.058783,0.065716,0.080063,0.112724,0.184300", \
				        "0.077703,0.082340,0.091182,0.106430,0.132312,0.189759", \
				        "0.109499,0.116102,0.127740,0.148773,0.184332,0.241059", \
				        "0.160941,0.168690,0.184144,0.211305,0.258491,0.336524");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.031307,0.033755,0.038853,0.048828,0.068691,0.108292", \
				        "0.034490,0.036984,0.041891,0.051830,0.071687,0.111338", \
				        "0.040640,0.043175,0.048120,0.058023,0.077933,0.117570", \
				        "0.049998,0.053180,0.059187,0.070303,0.090518,0.130255", \
				        "0.058435,0.063073,0.071468,0.086610,0.112280,0.155158", \
				        "0.060784,0.067372,0.079458,0.100782,0.136679,0.193924", \
				        "0.047232,0.056440,0.073407,0.103466,0.153689,0.233364", \
				        "-0.001086,0.011831,0.034810,0.076113,0.145335,0.255855");
			}
			cell_rise(Timing_X1) {
				values ("0.064630,0.069431,0.079052,0.098332,0.136447,0.212338", \
				        "0.068217,0.073005,0.082492,0.101787,0.139952,0.215891", \
				        "0.075776,0.080594,0.090109,0.109255,0.147333,0.223174", \
				        "0.092103,0.096728,0.106234,0.125182,0.162995,0.238554", \
				        "0.124207,0.129689,0.139781,0.158725,0.195783,0.270535", \
				        "0.171813,0.178844,0.192541,0.217694,0.262057,0.337359", \
				        "0.243318,0.252380,0.270025,0.302889,0.361705,0.461092", \
				        "0.359063,0.371255,0.393397,0.435388,0.510363,0.639802");
			}
			fall_transition(Timing_X1) {
				values ("0.018082,0.020335,0.024749,0.033232,0.050138,0.083836", \
				        "0.018085,0.020332,0.024612,0.033231,0.050096,0.083773", \
				        "0.018565,0.020688,0.024737,0.033224,0.050077,0.083845", \
				        "0.023638,0.025471,0.028964,0.035400,0.050605,0.083851", \
				        "0.034549,0.036391,0.040236,0.046980,0.059653,0.086633", \
				        "0.053615,0.055844,0.060071,0.068011,0.082461,0.108367", \
				        "0.087445,0.089722,0.094838,0.104355,0.121917,0.152779", \
				        "0.144088,0.147393,0.153747,0.166093,0.188491,0.227272");
			}
			rise_transition(Timing_X1) {
				values ("0.045275,0.049958,0.059337,0.077554,0.113807,0.186049", \
				        "0.045274,0.049975,0.059392,0.077643,0.113851,0.186065", \
				        "0.045279,0.049954,0.059326,0.077627,0.113850,0.186032", \
				        "0.045649,0.050116,0.059411,0.077639,0.113824,0.186064", \
				        "0.056210,0.059542,0.066606,0.081418,0.114197,0.186071", \
				        "0.078959,0.083519,0.092260,0.107366,0.133199,0.191132", \
				        "0.111198,0.117718,0.129252,0.150095,0.185291,0.241750", \
				        "0.163261,0.170788,0.186077,0.212884,0.259683,0.337272");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.048811,0.051871,0.058116,0.070257,0.094118,0.141250", \
				        "0.051377,0.054440,0.060714,0.072854,0.096703,0.143851", \
				        "0.055669,0.058876,0.064965,0.077002,0.100851,0.148010", \
				        "0.062482,0.065774,0.072198,0.084218,0.108084,0.155212", \
				        "0.070922,0.074599,0.081659,0.095155,0.120493,0.168348", \
				        "0.076951,0.081769,0.090724,0.107279,0.136832,0.189751", \
				        "0.067515,0.074328,0.087312,0.110565,0.150477,0.216138", \
				        "0.018680,0.028946,0.047461,0.080982,0.138014,0.229476");
			}
			cell_rise(Timing_X1) {
				values ("0.073933,0.078904,0.088946,0.108724,0.147574,0.224329", \
				        "0.077545,0.082517,0.092453,0.112164,0.151091,0.227825", \
				        "0.085139,0.090152,0.100080,0.119719,0.158502,0.235176", \
				        "0.101250,0.106245,0.116146,0.135642,0.174192,0.250595", \
				        "0.135036,0.140183,0.149975,0.168933,0.206885,0.282511", \
				        "0.187968,0.194809,0.207779,0.231919,0.274442,0.349171", \
				        "0.266870,0.275475,0.292492,0.323830,0.380240,0.476746", \
				        "0.394344,0.405786,0.426686,0.466528,0.538698,0.663971");
			}
			fall_transition(Timing_X1) {
				values ("0.025719,0.028365,0.033623,0.043632,0.063704,0.103832", \
				        "0.025715,0.028374,0.033550,0.043811,0.063765,0.103828", \
				        "0.025671,0.028319,0.033696,0.043787,0.063758,0.103758", \
				        "0.026877,0.029277,0.034345,0.044070,0.063776,0.103766", \
				        "0.031355,0.033776,0.038857,0.048232,0.066488,0.104615", \
				        "0.043962,0.046203,0.050833,0.059475,0.076826,0.112951", \
				        "0.071111,0.073561,0.078380,0.087395,0.104022,0.136841", \
				        "0.122114,0.125071,0.130818,0.141598,0.160982,0.195002");
			}
			rise_transition(Timing_X1) {
				values ("0.064335,0.069366,0.079646,0.099535,0.138135,0.212194", \
				        "0.064329,0.069400,0.079587,0.099536,0.138134,0.212212", \
				        "0.064352,0.069409,0.079608,0.099543,0.138122,0.212211", \
				        "0.064124,0.069272,0.079595,0.099519,0.138117,0.212198", \
				        "0.070977,0.075201,0.083765,0.101345,0.138118,0.212192", \
				        "0.100759,0.104735,0.112368,0.126149,0.153665,0.215776", \
				        "0.145537,0.150773,0.160423,0.178746,0.210786,0.263156", \
				        "0.209021,0.215136,0.228148,0.251477,0.293633,0.366030");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.041164,0.044088,0.050050,0.061756,0.085096,0.131708", \
				        "0.043712,0.046634,0.052557,0.064374,0.087695,0.134330", \
				        "0.047967,0.051039,0.056847,0.068549,0.091856,0.138512", \
				        "0.054142,0.057392,0.063753,0.075606,0.099033,0.145695", \
				        "0.060658,0.064537,0.071810,0.085515,0.110980,0.158810", \
				        "0.061796,0.067244,0.077168,0.094944,0.125682,0.179303", \
				        "0.043849,0.051799,0.066609,0.092350,0.135210,0.203455", \
				        "-0.016080,-0.004240,0.016696,0.053983,0.115594,0.211721");
			}
			cell_rise(Timing_X1) {
				values ("0.073130,0.078084,0.088019,0.107720,0.146521,0.223064", \
				        "0.076743,0.081667,0.091520,0.111179,0.150014,0.226556", \
				        "0.084343,0.089304,0.099123,0.118721,0.157425,0.233911", \
				        "0.100463,0.105408,0.115200,0.134615,0.173112,0.249346", \
				        "0.134161,0.139298,0.149058,0.167959,0.205823,0.281253", \
				        "0.186553,0.193394,0.206355,0.230554,0.273245,0.347919", \
				        "0.264618,0.273289,0.290296,0.321687,0.378288,0.475002", \
				        "0.390626,0.402137,0.423116,0.463095,0.535481,0.660910");
			}
			fall_transition(Timing_X1) {
				values ("0.019687,0.022289,0.027531,0.037759,0.057735,0.097889", \
				        "0.019707,0.022247,0.027699,0.037638,0.057730,0.097811", \
				        "0.019802,0.022342,0.027758,0.037810,0.057770,0.097859", \
				        "0.021630,0.024126,0.028903,0.038275,0.057826,0.097805", \
				        "0.026938,0.029302,0.034238,0.043178,0.061588,0.099028", \
				        "0.040743,0.042969,0.047535,0.055960,0.072716,0.108010", \
				        "0.069498,0.071719,0.076358,0.085164,0.101418,0.133265", \
				        "0.123004,0.125576,0.130659,0.140773,0.159497,0.192867");
			}
			rise_transition(Timing_X1) {
				values ("0.050964,0.055640,0.064999,0.083335,0.119518,0.191894", \
				        "0.050966,0.055627,0.064994,0.083348,0.119543,0.191884", \
				        "0.050960,0.055645,0.065047,0.083290,0.119573,0.191879", \
				        "0.050779,0.055530,0.065028,0.083370,0.119588,0.191851", \
				        "0.057944,0.061635,0.069290,0.085255,0.119556,0.191889", \
				        "0.080773,0.085282,0.093872,0.108817,0.135149,0.195484", \
				        "0.112593,0.119067,0.130591,0.151420,0.186646,0.242895", \
				        "0.160649,0.168428,0.184102,0.211715,0.259431,0.337923");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037153,0.039623,0.044735,0.054724,0.074556,0.114130", \
				        "0.039736,0.042308,0.047373,0.057401,0.077184,0.116815", \
				        "0.044204,0.046818,0.051719,0.061622,0.081455,0.121150", \
				        "0.050874,0.053750,0.059244,0.069665,0.089702,0.129368", \
				        "0.057997,0.061601,0.068325,0.080850,0.103621,0.145274", \
				        "0.059108,0.064380,0.073999,0.091112,0.120399,0.169497", \
				        "0.040725,0.048514,0.062978,0.088259,0.130184,0.196338", \
				        "-0.020352,-0.008712,0.011918,0.048661,0.109303,0.203966");
			}
			cell_rise(Timing_X1) {
				values ("0.077042,0.081877,0.091656,0.111154,0.149684,0.225974", \
				        "0.080710,0.085507,0.095135,0.114634,0.153200,0.229470", \
				        "0.088266,0.093211,0.102872,0.122212,0.160656,0.236836", \
				        "0.104570,0.109217,0.118957,0.138146,0.176405,0.252325", \
				        "0.138231,0.143348,0.152773,0.171597,0.209175,0.284355", \
				        "0.192014,0.198456,0.211281,0.234975,0.276961,0.351307", \
				        "0.271349,0.280054,0.296540,0.327408,0.383470,0.479190", \
				        "0.399753,0.411012,0.431597,0.470913,0.542383,0.666902");
			}
			fall_transition(Timing_X1) {
				values ("0.018075,0.020308,0.024762,0.033143,0.050166,0.083854", \
				        "0.018071,0.020222,0.024755,0.033284,0.050085,0.083775", \
				        "0.018244,0.020366,0.024804,0.033208,0.050004,0.083828", \
				        "0.020565,0.022633,0.026720,0.034319,0.050490,0.083846", \
				        "0.027131,0.029045,0.032999,0.040553,0.055282,0.085782", \
				        "0.042085,0.044052,0.047951,0.055345,0.069259,0.097748", \
				        "0.071867,0.073828,0.078025,0.085927,0.100699,0.128088", \
				        "0.126863,0.129121,0.133571,0.142628,0.159905,0.190959");
			}
			rise_transition(Timing_X1) {
				values ("0.052166,0.056910,0.066398,0.084888,0.121310,0.193808", \
				        "0.052165,0.056920,0.066386,0.084854,0.121308,0.193798", \
				        "0.052167,0.056911,0.066336,0.084869,0.121272,0.193818", \
				        "0.052150,0.056899,0.066404,0.084782,0.121285,0.193819", \
				        "0.058788,0.062536,0.070380,0.086609,0.121321,0.193779", \
				        "0.081865,0.086452,0.094860,0.109730,0.136334,0.197146", \
				        "0.114453,0.120748,0.132178,0.152919,0.187814,0.243813", \
				        "0.162913,0.170492,0.186083,0.213493,0.260857,0.339019");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.021600,0.024494,0.030493,0.042326,0.065685,0.112303", \
				        "0.024723,0.027546,0.033376,0.045171,0.068624,0.115217", \
				        "0.031396,0.034238,0.039593,0.050965,0.074350,0.120869", \
				        "0.039333,0.043172,0.050276,0.063284,0.086115,0.132360", \
				        "0.045727,0.051045,0.060714,0.078253,0.108013,0.156401", \
				        "0.046324,0.053315,0.066578,0.090174,0.130237,0.195232", \
				        "0.030392,0.040396,0.058224,0.090159,0.144025,0.231197", \
				        "-0.021978,-0.008911,0.015193,0.057812,0.130366,0.247873");
			}
			cell_rise(Timing_X1) {
				values ("0.053187,0.059948,0.073513,0.100193,0.153532,0.259656", \
				        "0.056242,0.063013,0.076430,0.103179,0.156477,0.262664", \
				        "0.063024,0.069684,0.083065,0.109539,0.162684,0.268795", \
				        "0.077812,0.084286,0.097376,0.123471,0.176083,0.281753", \
				        "0.103851,0.111819,0.126762,0.153490,0.204915,0.309282", \
				        "0.142738,0.152354,0.171155,0.205514,0.265085,0.368290", \
				        "0.204086,0.216903,0.239890,0.282548,0.357729,0.485091", \
				        "0.307843,0.323373,0.352753,0.405588,0.498814,0.658749");
			}
			fall_transition(Timing_X1) {
				values ("0.019155,0.022038,0.027548,0.037828,0.057758,0.097876", \
				        "0.018459,0.021409,0.027044,0.037675,0.057819,0.097885", \
				        "0.019987,0.022138,0.027271,0.037084,0.057662,0.097864", \
				        "0.027258,0.029426,0.033692,0.040767,0.057956,0.097852", \
				        "0.040149,0.042549,0.047095,0.055310,0.070181,0.100935", \
				        "0.062249,0.065174,0.070832,0.080720,0.098404,0.128992", \
				        "0.100178,0.104193,0.111446,0.124476,0.146647,0.184214", \
				        "0.166662,0.172073,0.182100,0.199808,0.229340,0.277288");
			}
			rise_transition(Timing_X1) {
				values ("0.045320,0.051464,0.063747,0.087945,0.136446,0.233519", \
				        "0.045312,0.051483,0.063820,0.087965,0.136478,0.233495", \
				        "0.045246,0.051400,0.063734,0.087955,0.136466,0.233537", \
				        "0.046978,0.052375,0.063898,0.087904,0.136410,0.233514", \
				        "0.059004,0.063806,0.072987,0.092231,0.136562,0.233510", \
				        "0.078857,0.084840,0.096183,0.116501,0.152827,0.235604", \
				        "0.111989,0.118665,0.131908,0.156449,0.200864,0.276217", \
				        "0.171532,0.178850,0.193863,0.221990,0.274482,0.368034");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.028792,0.031918,0.038160,0.050345,0.074235,0.121346", \
				        "0.031566,0.034587,0.040876,0.053124,0.077025,0.124096", \
				        "0.037814,0.040622,0.046542,0.058706,0.082616,0.129645", \
				        "0.048634,0.052172,0.058723,0.070968,0.094189,0.141061", \
				        "0.058953,0.063769,0.072726,0.089153,0.117477,0.164908", \
				        "0.065359,0.071750,0.083754,0.105667,0.143623,0.206264", \
				        "0.060423,0.068829,0.084675,0.113544,0.163761,0.247182", \
				        "0.028354,0.039605,0.060262,0.098135,0.164029,0.274033");
			}
			cell_rise(Timing_X1) {
				values ("0.066322,0.073128,0.086605,0.113363,0.166606,0.272731", \
				        "0.069865,0.076565,0.090079,0.116849,0.170194,0.276454", \
				        "0.076289,0.083080,0.096542,0.123331,0.176713,0.283050", \
				        "0.088458,0.095166,0.108669,0.135327,0.188638,0.295013", \
				        "0.109733,0.117433,0.132045,0.159321,0.212232,0.318221", \
				        "0.143620,0.152649,0.169898,0.201983,0.260495,0.366921", \
				        "0.201272,0.211977,0.232874,0.271345,0.340238,0.462143", \
				        "0.296603,0.311426,0.337787,0.386159,0.470329,0.615434");
			}
			fall_transition(Timing_X1) {
				values ("0.025995,0.028603,0.033906,0.043822,0.063648,0.103839", \
				        "0.025377,0.028244,0.033709,0.043718,0.063687,0.103820", \
				        "0.024947,0.027612,0.033182,0.043453,0.063677,0.103796", \
				        "0.030876,0.033008,0.037104,0.045190,0.063340,0.103816", \
				        "0.043792,0.046172,0.050632,0.058744,0.073411,0.105804", \
				        "0.065141,0.068245,0.073948,0.084008,0.101743,0.132225", \
				        "0.101332,0.105099,0.112686,0.125924,0.148767,0.187031", \
				        "0.162647,0.168645,0.178857,0.197052,0.227365,0.276926");
			}
			rise_transition(Timing_X1) {
				values ("0.045299,0.051438,0.063812,0.087951,0.136478,0.233527", \
				        "0.045313,0.051437,0.063657,0.087875,0.136460,0.233535", \
				        "0.045300,0.051422,0.063763,0.087937,0.136407,0.233501", \
				        "0.046117,0.051869,0.063807,0.087940,0.136459,0.233519", \
				        "0.054262,0.059388,0.069546,0.090574,0.136531,0.233496", \
				        "0.069998,0.075382,0.086235,0.106977,0.147180,0.235233", \
				        "0.097187,0.102848,0.114165,0.136238,0.179386,0.261943", \
				        "0.144669,0.150946,0.163475,0.187476,0.233536,0.322301");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004114,0.004346,0.004834,0.005822,0.007750,0.011623", \
				        "0.004092,0.004339,0.004823,0.005795,0.007738,0.011623", \
				        "0.004103,0.004345,0.004819,0.005793,0.007731,0.011616", \
				        "0.004152,0.004393,0.004873,0.005831,0.007762,0.011634", \
				        "0.004341,0.004577,0.005048,0.005990,0.007890,0.011725", \
				        "0.004847,0.005073,0.005521,0.006434,0.008279,0.012035", \
				        "0.006031,0.006223,0.006649,0.007507,0.009272,0.012902", \
				        "0.008581,0.008775,0.009155,0.009942,0.011583,0.015013");
			}
			fall_power(Power_X1) {
				values ("0.001997,0.001764,0.001280,0.000309,-0.001627,-0.005497", \
				        "0.001990,0.001751,0.001269,0.000306,-0.001628,-0.005493", \
				        "0.001969,0.001749,0.001257,0.000292,-0.001638,-0.005506", \
				        "0.001979,0.001741,0.001255,0.000287,-0.001648,-0.005516", \
				        "0.001996,0.001750,0.001273,0.000308,-0.001626,-0.005492", \
				        "0.002173,0.001924,0.001422,0.000426,-0.001532,-0.005429", \
				        "0.002955,0.002664,0.002088,0.000997,-0.001106,-0.005122", \
				        "0.005143,0.004812,0.004140,0.002867,0.000478,-0.003952");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.003874,0.004120,0.004619,0.005572,0.007513,0.011392", \
				        "0.003870,0.004106,0.004589,0.005558,0.007500,0.011383", \
				        "0.003867,0.004110,0.004589,0.005558,0.007500,0.011379", \
				        "0.003920,0.004159,0.004637,0.005601,0.007530,0.011395", \
				        "0.004123,0.004347,0.004816,0.005758,0.007656,0.011489", \
				        "0.004617,0.004843,0.005291,0.006200,0.008042,0.011808", \
				        "0.005792,0.005993,0.006417,0.007273,0.009037,0.012665", \
				        "0.008346,0.008552,0.008922,0.009719,0.011353,0.014773");
			}
			fall_power(Power_X1) {
				values ("0.000953,0.000708,0.000217,-0.000752,-0.002690,-0.006553", \
				        "0.000948,0.000702,0.000218,-0.000747,-0.002685,-0.006556", \
				        "0.000932,0.000692,0.000209,-0.000760,-0.002695,-0.006564", \
				        "0.000918,0.000678,0.000199,-0.000768,-0.002703,-0.006575", \
				        "0.000943,0.000707,0.000221,-0.000747,-0.002684,-0.006553", \
				        "0.001182,0.000913,0.000404,-0.000605,-0.002578,-0.006485", \
				        "0.002073,0.001770,0.001171,0.000039,-0.002104,-0.006159", \
				        "0.004429,0.004084,0.003375,0.002049,-0.000424,-0.004931");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & C2";

			rise_power(Power_X1) {
				values ("0.003980,0.004238,0.004714,0.005687,0.007628,0.011511", \
				        "0.003980,0.004223,0.004709,0.005681,0.007621,0.011512", \
				        "0.003981,0.004224,0.004710,0.005680,0.007617,0.011500", \
				        "0.004043,0.004278,0.004758,0.005720,0.007649,0.011519", \
				        "0.004228,0.004469,0.004939,0.005882,0.007781,0.011621", \
				        "0.004746,0.004968,0.005422,0.006328,0.008181,0.011943", \
				        "0.005926,0.006128,0.006550,0.007412,0.009188,0.012821", \
				        "0.008516,0.008709,0.009081,0.009878,0.011515,0.014953");
			}
			fall_power(Power_X1) {
				values ("0.001162,0.000922,0.000434,-0.000529,-0.002466,-0.006334", \
				        "0.001164,0.000917,0.000425,-0.000531,-0.002467,-0.006330", \
				        "0.001139,0.000906,0.000417,-0.000543,-0.002473,-0.006340", \
				        "0.001134,0.000899,0.000417,-0.000550,-0.002482,-0.006346", \
				        "0.001163,0.000926,0.000440,-0.000526,-0.002458,-0.006324", \
				        "0.001417,0.001143,0.000637,-0.000374,-0.002349,-0.006254", \
				        "0.002334,0.002028,0.001430,0.000298,-0.001843,-0.005909", \
				        "0.004748,0.004385,0.003691,0.002365,-0.000107,-0.004623");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005010,0.005250,0.005738,0.006707,0.008653,0.012542", \
				        "0.005008,0.005242,0.005726,0.006696,0.008642,0.012527", \
				        "0.005008,0.005245,0.005731,0.006700,0.008642,0.012529", \
				        "0.005064,0.005299,0.005783,0.006743,0.008674,0.012552", \
				        "0.005245,0.005485,0.005957,0.006898,0.008806,0.012644", \
				        "0.005760,0.005986,0.006435,0.007349,0.009197,0.012966", \
				        "0.006938,0.007144,0.007574,0.008443,0.010211,0.013851", \
				        "0.009563,0.009746,0.010132,0.010934,0.012591,0.016029");
			}
			fall_power(Power_X1) {
				values ("0.002001,0.001758,0.001277,0.000303,-0.001633,-0.005506", \
				        "0.001994,0.001753,0.001275,0.000308,-0.001623,-0.005491", \
				        "0.001977,0.001750,0.001261,0.000296,-0.001634,-0.005494", \
				        "0.001976,0.001738,0.001259,0.000292,-0.001647,-0.005510", \
				        "0.001988,0.001738,0.001265,0.000295,-0.001644,-0.005524", \
				        "0.002139,0.001872,0.001382,0.000394,-0.001561,-0.005449", \
				        "0.002828,0.002562,0.002001,0.000921,-0.001156,-0.005169", \
				        "0.005006,0.004668,0.004028,0.002788,0.000440,-0.003959");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.004782,0.005017,0.005501,0.006474,0.008422,0.012304", \
				        "0.004771,0.005013,0.005494,0.006465,0.008405,0.012294", \
				        "0.004771,0.005016,0.005496,0.006467,0.008404,0.012290", \
				        "0.004831,0.005069,0.005550,0.006509,0.008440,0.012314", \
				        "0.005016,0.005244,0.005722,0.006665,0.008572,0.012413", \
				        "0.005528,0.005755,0.006201,0.007118,0.008962,0.012731", \
				        "0.006695,0.006917,0.007344,0.008208,0.009977,0.013623", \
				        "0.009326,0.009519,0.009902,0.010701,0.012362,0.015790");
			}
			fall_power(Power_X1) {
				values ("0.000956,0.000718,0.000221,-0.000749,-0.002689,-0.006563", \
				        "0.000941,0.000700,0.000218,-0.000748,-0.002682,-0.006548", \
				        "0.000937,0.000698,0.000214,-0.000753,-0.002685,-0.006554", \
				        "0.000937,0.000686,0.000203,-0.000760,-0.002702,-0.006569", \
				        "0.000931,0.000692,0.000210,-0.000764,-0.002701,-0.006577", \
				        "0.001113,0.000857,0.000348,-0.000643,-0.002608,-0.006499", \
				        "0.001918,0.001627,0.001054,-0.000056,-0.002166,-0.006206", \
				        "0.004257,0.003905,0.003224,0.001936,-0.000475,-0.004946");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & C2";

			rise_power(Power_X1) {
				values ("0.004913,0.005137,0.005630,0.006605,0.008547,0.012430", \
				        "0.004899,0.005136,0.005626,0.006597,0.008540,0.012432", \
				        "0.004908,0.005150,0.005634,0.006601,0.008542,0.012425", \
				        "0.004970,0.005203,0.005686,0.006649,0.008577,0.012449", \
				        "0.005145,0.005399,0.005860,0.006809,0.008711,0.012556", \
				        "0.005680,0.005886,0.006348,0.007264,0.009120,0.012893", \
				        "0.006849,0.007069,0.007497,0.008364,0.010150,0.013799", \
				        "0.009476,0.009682,0.010069,0.010879,0.012542,0.015995");
			}
			fall_power(Power_X1) {
				values ("0.001158,0.000924,0.000434,-0.000543,-0.002474,-0.006344", \
				        "0.001155,0.000919,0.000432,-0.000539,-0.002465,-0.006330", \
				        "0.001159,0.000911,0.000426,-0.000544,-0.002471,-0.006334", \
				        "0.001129,0.000902,0.000421,-0.000551,-0.002484,-0.006346", \
				        "0.001146,0.000908,0.000424,-0.000546,-0.002479,-0.006356", \
				        "0.001351,0.001083,0.000577,-0.000417,-0.002382,-0.006271", \
				        "0.002152,0.001856,0.001295,0.000195,-0.001917,-0.005958", \
				        "0.004496,0.004153,0.003492,0.002210,-0.000196,-0.004667");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X1) {
				values ("0.000909,0.000667,0.000184,-0.000774,-0.002702,-0.006568", \
				        "0.000931,0.000678,0.000192,-0.000769,-0.002696,-0.006562", \
				        "0.000945,0.000693,0.000214,-0.000750,-0.002686,-0.006550", \
				        "0.001003,0.000755,0.000272,-0.000710,-0.002653,-0.006529", \
				        "0.001206,0.000940,0.000428,-0.000585,-0.002563,-0.006473", \
				        "0.001773,0.001474,0.000913,-0.000181,-0.002261,-0.006262", \
				        "0.003113,0.002791,0.002151,0.000937,-0.001339,-0.005584", \
				        "0.006065,0.005713,0.004994,0.003635,0.001071,-0.003633");
			}
			rise_power(Power_X1) {
				values ("0.002124,0.002372,0.002859,0.003836,0.005778,0.009654", \
				        "0.002121,0.002367,0.002857,0.003832,0.005772,0.009654", \
				        "0.002143,0.002382,0.002870,0.003841,0.005782,0.009654", \
				        "0.002221,0.002458,0.002937,0.003896,0.005820,0.009679", \
				        "0.002448,0.002677,0.003137,0.004066,0.005958,0.009775", \
				        "0.003012,0.003216,0.003644,0.004537,0.006361,0.010101", \
				        "0.004298,0.004471,0.004848,0.005648,0.007360,0.010961", \
				        "0.007168,0.007285,0.007570,0.008215,0.009700,0.013051");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X1) {
				values ("0.001925,0.001679,0.001191,0.000233,-0.001696,-0.005551", \
				        "0.001917,0.001674,0.001187,0.000229,-0.001700,-0.005547", \
				        "0.001921,0.001677,0.001194,0.000235,-0.001695,-0.005554", \
				        "0.001957,0.001719,0.001234,0.000259,-0.001674,-0.005543", \
				        "0.002111,0.001858,0.001360,0.000365,-0.001597,-0.005493", \
				        "0.002559,0.002295,0.001764,0.000722,-0.001310,-0.005293", \
				        "0.003717,0.003418,0.002845,0.001723,-0.000450,-0.004608", \
				        "0.006308,0.005987,0.005355,0.004126,0.001775,-0.002700");
			}
			rise_power(Power_X1) {
				values ("0.002365,0.002609,0.003106,0.004088,0.006028,0.009907", \
				        "0.002353,0.002596,0.003085,0.004064,0.006013,0.009896", \
				        "0.002331,0.002570,0.003062,0.004043,0.005994,0.009881", \
				        "0.002325,0.002567,0.003057,0.004035,0.005986,0.009876", \
				        "0.002395,0.002631,0.003112,0.004076,0.006002,0.009879", \
				        "0.002734,0.002950,0.003401,0.004320,0.006204,0.010014", \
				        "0.003739,0.003921,0.004308,0.005132,0.006891,0.010567", \
				        "0.006167,0.006301,0.006584,0.007243,0.008756,0.012143");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI211_X2
 Cell Description	: Combinational cell (OAI211_X2) with drive strength X2
*******************************************************************************************/

cell (OAI211_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 17388.676687;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 5018.213000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 5787.383000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 17271.880000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 40674.240000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 3826.611000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 5843.522000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 18152.120000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 40489.630000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 3826.616000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 5843.529000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 18152.130000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 41948.070000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 1056.243000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 3104.590000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 15571.470000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 51652.580000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000997;
		fall_capacitance	: 0.000997;
		rise_capacitance	: 0.000997;
		fall_capacitance_range		(0.000838, 0.001163);
		rise_capacitance_range		(0.000818, 0.001250);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000004,0.000003,0.000002,0.000002,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!B & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000003,0.000002,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000004,0.000003,0.000003,0.000002,0.000002,0.000001");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000065,0.000044,0.000030,0.000022,0.000016,0.000012,0.000009,0.000003");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.000984;
		fall_capacitance	: 0.000956;
		rise_capacitance	: 0.001013;
		fall_capacitance_range		(0.000806, 0.001088);
		rise_capacitance_range		(0.000831, 0.001211);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000002,0.000001,-0.000001,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000003,0.000000,-0.000002,-0.000003,-0.000005,-0.000007,-0.000012");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000022,0.000016,0.000012,0.000009,0.000006,0.000003,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000003,0.000000,-0.000001,-0.000003,-0.000005,-0.000007,-0.000013");
			}

		}

		internal_power () {

			when      	: "!A & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000002,0.000000,-0.000002,-0.000003,-0.000005,-0.000007,-0.000013");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001108;
		fall_capacitance	: 0.001057;
		rise_capacitance	: 0.001160;
		fall_capacitance_range		(0.000928, 0.001321);
		rise_capacitance_range		(0.000961, 0.001510);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000020,0.000014,0.000010,0.000008,0.000006,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000023,0.000016,0.000012,0.000009,0.000007,0.000004,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000027,0.000021,0.000016,0.000013,0.000011,0.000009,0.000004");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000011,0.000007,0.000003,0.000001,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000014,0.000010,0.000006,0.000003,0.000002,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000018,0.000013,0.000009,0.000006,0.000003,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000018,0.000013,0.000009,0.000006,0.000003,0.000001,-0.000001");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001161;
		fall_capacitance	: 0.001176;
		rise_capacitance	: 0.001146;
		fall_capacitance_range		(0.000958, 0.001390);
		rise_capacitance_range		(0.000982, 0.001441);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000017,0.000013,0.000010,0.000008,0.000006,0.000004,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000021,0.000017,0.000015,0.000013,0.000011,0.000008,0.000004");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000080,0.000056,0.000038,0.000026,0.000018,0.000012,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000009,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000008,0.000005,0.000003,0.000002,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000016,0.000012,0.000009,0.000008,0.000006,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & B)";

		timing () {

			related_pin	   : "A";
			when	           : "B & !C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.036908,0.041419,0.047456,0.059261,0.082451,0.128356", \
				        "0.039919,0.044414,0.050409,0.062161,0.085382,0.131288", \
				        "0.045285,0.049877,0.055767,0.067462,0.090698,0.136656", \
				        "0.054293,0.059344,0.065810,0.078046,0.101313,0.147301", \
				        "0.064302,0.070994,0.079082,0.094099,0.120536,0.167930", \
				        "0.069786,0.079028,0.090339,0.110754,0.145734,0.203195", \
				        "0.061060,0.073963,0.089677,0.118102,0.166378,0.244308", \
				        "0.019778,0.037532,0.059063,0.097992,0.164286,0.271630");
			}
			cell_rise(Timing_X2) {
				values ("0.052980,0.060097,0.069609,0.088358,0.125309,0.198718", \
				        "0.056518,0.063610,0.073041,0.091818,0.128798,0.202283", \
				        "0.064159,0.071228,0.080652,0.099209,0.136179,0.209586", \
				        "0.080586,0.087541,0.096778,0.115227,0.151760,0.224896", \
				        "0.110398,0.119020,0.129662,0.148785,0.184597,0.256854", \
				        "0.153629,0.164700,0.178875,0.204527,0.249317,0.323685", \
				        "0.219782,0.234426,0.252422,0.285708,0.344611,0.443743", \
				        "0.329742,0.348150,0.371106,0.413455,0.488456,0.616905");
			}
			fall_transition(Timing_X2) {
				values ("0.021041,0.024888,0.029947,0.039750,0.059360,0.098625", \
				        "0.021013,0.024883,0.030039,0.039740,0.059342,0.098586", \
				        "0.021087,0.024871,0.029855,0.039600,0.059257,0.098627", \
				        "0.024244,0.027599,0.032033,0.040632,0.059388,0.098549", \
				        "0.033243,0.036432,0.040640,0.048805,0.064785,0.099923", \
				        "0.050314,0.054095,0.058858,0.067525,0.083555,0.114619", \
				        "0.080761,0.085183,0.091047,0.101653,0.120541,0.153592", \
				        "0.132353,0.138577,0.146197,0.160158,0.184497,0.225260");
			}
			rise_transition(Timing_X2) {
				values ("0.045588,0.053094,0.063057,0.082222,0.119097,0.190003", \
				        "0.045591,0.053133,0.063034,0.082208,0.119106,0.190016", \
				        "0.045611,0.053094,0.063107,0.082210,0.119100,0.190002", \
				        "0.047001,0.053851,0.063221,0.082208,0.119124,0.190019", \
				        "0.061138,0.065904,0.073080,0.087791,0.120169,0.190004", \
				        "0.089752,0.095996,0.103608,0.117763,0.142313,0.197086", \
				        "0.130920,0.138647,0.148350,0.166607,0.198754,0.251319", \
				        "0.194439,0.203303,0.215435,0.237805,0.279081,0.350462");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & !C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.030568,0.034853,0.040602,0.052185,0.074918,0.120357", \
				        "0.033547,0.037872,0.043649,0.055087,0.077866,0.123364", \
				        "0.038789,0.043234,0.048905,0.060336,0.083141,0.128647", \
				        "0.046120,0.051480,0.058154,0.070539,0.093650,0.139278", \
				        "0.052298,0.059820,0.068735,0.084682,0.112078,0.159887", \
				        "0.052040,0.062529,0.075245,0.097440,0.134459,0.193770", \
				        "0.035314,0.050307,0.067963,0.099008,0.150378,0.231465", \
				        "-0.015048,0.005041,0.029024,0.071319,0.141871,0.253712");
			}
			cell_rise(Timing_X2) {
				values ("0.052289,0.059326,0.068735,0.087416,0.124300,0.197564", \
				        "0.055828,0.062873,0.072195,0.090866,0.127831,0.201130", \
				        "0.063472,0.070499,0.079757,0.098322,0.135200,0.208452", \
				        "0.079921,0.086807,0.095972,0.114301,0.150791,0.223740", \
				        "0.109462,0.118065,0.128699,0.147917,0.183674,0.255711", \
				        "0.152170,0.163228,0.177352,0.203138,0.248090,0.322574", \
				        "0.217567,0.232202,0.250115,0.283566,0.342643,0.441974", \
				        "0.325691,0.344303,0.367368,0.409905,0.485202,0.613877");
			}
			fall_transition(Timing_X2) {
				values ("0.016060,0.019948,0.024984,0.034790,0.054385,0.093626", \
				        "0.016112,0.019931,0.024922,0.034769,0.054386,0.093659", \
				        "0.016784,0.020391,0.025059,0.034759,0.054374,0.093646", \
				        "0.020998,0.024194,0.028500,0.036648,0.054778,0.093569", \
				        "0.030598,0.033806,0.038008,0.045739,0.061396,0.095467", \
				        "0.048256,0.051898,0.056649,0.065286,0.081081,0.111524", \
				        "0.079724,0.083788,0.089418,0.099756,0.118424,0.151275", \
				        "0.132081,0.137961,0.145017,0.158688,0.182648,0.223110");
			}
			rise_transition(Timing_X2) {
				values ("0.036092,0.042814,0.051868,0.069306,0.104101,0.173759", \
				        "0.036086,0.042822,0.051781,0.069376,0.104115,0.173720", \
				        "0.036096,0.042800,0.051889,0.069364,0.104119,0.173705", \
				        "0.037551,0.043543,0.052121,0.069258,0.104187,0.173748", \
				        "0.049910,0.055174,0.061667,0.075005,0.105275,0.173753", \
				        "0.069933,0.077320,0.086234,0.101764,0.127246,0.180848", \
				        "0.099531,0.109198,0.121118,0.142165,0.177693,0.234181", \
				        "0.148150,0.160265,0.175714,0.202775,0.249641,0.326816");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027242,0.030885,0.035840,0.045581,0.064919,0.103610", \
				        "0.030405,0.034079,0.038943,0.048692,0.068104,0.106752", \
				        "0.036403,0.040186,0.045020,0.054771,0.074179,0.112907", \
				        "0.044235,0.049290,0.055436,0.066658,0.086660,0.125488", \
				        "0.050282,0.057576,0.066273,0.081673,0.107563,0.150217", \
				        "0.049574,0.059810,0.072203,0.093980,0.130122,0.187411", \
				        "0.031750,0.046477,0.063791,0.094293,0.144783,0.224386", \
				        "-0.020840,-0.001201,0.022445,0.064011,0.133472,0.243740");
			}
			cell_rise(Timing_X2) {
				values ("0.055043,0.062095,0.071412,0.089967,0.126768,0.199944", \
				        "0.058581,0.065616,0.074852,0.093473,0.130282,0.203509", \
				        "0.066286,0.073235,0.082434,0.100899,0.137633,0.210814", \
				        "0.082654,0.089583,0.098636,0.116883,0.153281,0.226120", \
				        "0.112993,0.121287,0.131637,0.150577,0.186219,0.258146", \
				        "0.156797,0.167596,0.181385,0.206791,0.251195,0.325146", \
				        "0.223612,0.238024,0.255564,0.288498,0.346973,0.445591", \
				        "0.334324,0.352280,0.375008,0.416805,0.491238,0.619203");
			}
			fall_transition(Timing_X2) {
				values ("0.014859,0.018082,0.022210,0.030567,0.047097,0.080126", \
				        "0.014874,0.018120,0.022217,0.030565,0.047103,0.080144", \
				        "0.015828,0.018613,0.022547,0.030478,0.047022,0.080046", \
				        "0.021303,0.023916,0.027340,0.033541,0.047785,0.080147", \
				        "0.031782,0.034641,0.038309,0.045098,0.057544,0.083493", \
				        "0.050333,0.053583,0.057952,0.065912,0.080277,0.105822", \
				        "0.083046,0.086709,0.091877,0.101445,0.119001,0.149601", \
				        "0.137714,0.142885,0.149299,0.161882,0.184413,0.223080");
			}
			rise_transition(Timing_X2) {
				values ("0.037370,0.044127,0.053240,0.070850,0.105694,0.175409", \
				        "0.037374,0.044167,0.053169,0.070854,0.105710,0.175405", \
				        "0.037365,0.044130,0.053200,0.070845,0.105712,0.175399", \
				        "0.038618,0.044761,0.053455,0.070855,0.105705,0.175356", \
				        "0.050770,0.055924,0.062529,0.076089,0.106648,0.175403", \
				        "0.071172,0.078501,0.087337,0.102659,0.128044,0.182167", \
				        "0.101300,0.110723,0.122534,0.143406,0.178647,0.234789", \
				        "0.150517,0.162445,0.177558,0.204340,0.250717,0.327442");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.041310,0.045895,0.051927,0.063731,0.086901,0.132817", \
				        "0.043719,0.048263,0.054339,0.066173,0.089360,0.135272", \
				        "0.047774,0.052424,0.058290,0.070032,0.093297,0.139303", \
				        "0.053807,0.058689,0.064956,0.076856,0.100103,0.146119", \
				        "0.060684,0.066290,0.073365,0.086782,0.111832,0.158839", \
				        "0.063275,0.070892,0.080192,0.097106,0.126791,0.179143", \
				        "0.048504,0.059529,0.073001,0.097014,0.137626,0.203406", \
				        "-0.006204,0.009606,0.028784,0.063108,0.120871,0.212875");
			}
			cell_rise(Timing_X2) {
				values ("0.061908,0.069182,0.078879,0.097891,0.135317,0.209198", \
				        "0.065565,0.072823,0.082423,0.101394,0.138862,0.212732", \
				        "0.073201,0.080498,0.090050,0.108903,0.146279,0.220060", \
				        "0.089556,0.096686,0.106193,0.124939,0.161948,0.235475", \
				        "0.122084,0.130136,0.140117,0.158490,0.194747,0.267497", \
				        "0.170475,0.180819,0.194182,0.218512,0.261366,0.334427", \
				        "0.243983,0.257479,0.274425,0.305988,0.362453,0.458456", \
				        "0.365623,0.382670,0.404021,0.443850,0.515476,0.639547");
			}
			fall_transition(Timing_X2) {
				values ("0.021041,0.024812,0.030012,0.039753,0.059324,0.098627", \
				        "0.021029,0.024850,0.030006,0.039741,0.059365,0.098580", \
				        "0.021028,0.024821,0.029948,0.039728,0.059356,0.098574", \
				        "0.022671,0.026283,0.031006,0.040233,0.059371,0.098585", \
				        "0.027541,0.030984,0.035748,0.044815,0.062854,0.099738", \
				        "0.040633,0.043949,0.048503,0.056773,0.073540,0.108478", \
				        "0.067559,0.071255,0.076135,0.085047,0.101300,0.133051", \
				        "0.117128,0.121672,0.127574,0.138439,0.157794,0.191430");
			}
			rise_transition(Timing_X2) {
				values ("0.052545,0.059990,0.069717,0.088700,0.125409,0.196213", \
				        "0.052531,0.059967,0.069745,0.088705,0.125411,0.196197", \
				        "0.052547,0.059954,0.069745,0.088715,0.125420,0.196194", \
				        "0.052658,0.059940,0.069658,0.088711,0.125415,0.196214", \
				        "0.062945,0.068358,0.076110,0.092053,0.125780,0.196211", \
				        "0.091416,0.097667,0.105280,0.119191,0.144487,0.201523", \
				        "0.131246,0.139197,0.149236,0.167760,0.199993,0.252534", \
				        "0.189541,0.199180,0.212053,0.235629,0.278169,0.350681");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034951,0.039342,0.045145,0.056585,0.079328,0.124766", \
				        "0.037353,0.041683,0.047529,0.059023,0.081789,0.127236", \
				        "0.041334,0.045798,0.051459,0.062888,0.085697,0.131248", \
				        "0.046575,0.051457,0.057663,0.069500,0.092483,0.138086", \
				        "0.051358,0.057371,0.064746,0.078473,0.103712,0.150782", \
				        "0.049147,0.057756,0.068105,0.086275,0.117208,0.170297", \
				        "0.026646,0.039403,0.054604,0.081034,0.124405,0.192601", \
				        "-0.037660,-0.019470,0.002079,0.039741,0.101611,0.197725");
			}
			cell_rise(Timing_X2) {
				values ("0.061159,0.068380,0.078011,0.096957,0.134294,0.208012", \
				        "0.064813,0.072020,0.081511,0.100463,0.137833,0.211548", \
				        "0.072459,0.079687,0.089141,0.107966,0.145252,0.218888", \
				        "0.088816,0.095920,0.105281,0.123961,0.160935,0.234279", \
				        "0.121152,0.129231,0.139139,0.157633,0.193770,0.266309", \
				        "0.169056,0.179397,0.192732,0.217150,0.260150,0.333276", \
				        "0.241747,0.255330,0.272184,0.303877,0.360504,0.456711", \
				        "0.361842,0.378983,0.400499,0.440429,0.512292,0.636566");
			}
			fall_transition(Timing_X2) {
				values ("0.016082,0.019829,0.024888,0.034796,0.054372,0.093593", \
				        "0.016094,0.019866,0.024903,0.034772,0.054346,0.093649", \
				        "0.016382,0.020051,0.024926,0.034753,0.054433,0.093603", \
				        "0.018431,0.021995,0.026726,0.035794,0.054705,0.093616", \
				        "0.024188,0.027501,0.032049,0.040826,0.058557,0.095089", \
				        "0.038229,0.041500,0.045912,0.054066,0.070211,0.104484", \
				        "0.066750,0.070110,0.074734,0.083409,0.099345,0.130130", \
				        "0.118471,0.122426,0.127587,0.137880,0.156664,0.189643");
			}
			rise_transition(Timing_X2) {
				values ("0.041693,0.048470,0.057546,0.075171,0.110067,0.179767", \
				        "0.041695,0.048471,0.057467,0.075194,0.110067,0.179787", \
				        "0.041697,0.048472,0.057463,0.075201,0.110062,0.179780", \
				        "0.041838,0.048416,0.057461,0.075144,0.110080,0.179762", \
				        "0.052050,0.057067,0.064015,0.078500,0.110479,0.179786", \
				        "0.072487,0.079733,0.088404,0.103660,0.129214,0.185163", \
				        "0.101468,0.111194,0.123043,0.144090,0.179432,0.235612", \
				        "0.146377,0.158609,0.174358,0.201945,0.249504,0.327435");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031689,0.035410,0.040332,0.050045,0.069398,0.108088", \
				        "0.034135,0.037860,0.042757,0.052523,0.071892,0.110568", \
				        "0.038321,0.042113,0.046891,0.056658,0.076108,0.114828", \
				        "0.044067,0.048401,0.053861,0.064222,0.084040,0.122841", \
				        "0.049239,0.054923,0.061817,0.074475,0.097194,0.138311", \
				        "0.046961,0.055330,0.065377,0.082952,0.112562,0.161436", \
				        "0.023978,0.036537,0.051456,0.077362,0.119808,0.186120", \
				        "-0.041468,-0.023613,-0.002303,0.034801,0.095798,0.190433");
			}
			cell_rise(Timing_X2) {
				values ("0.064784,0.071884,0.081291,0.100064,0.137184,0.210691", \
				        "0.068403,0.075517,0.084854,0.103625,0.140716,0.214244", \
				        "0.076094,0.083201,0.092546,0.111171,0.148197,0.221608", \
				        "0.092479,0.099550,0.108754,0.127222,0.163951,0.237056", \
				        "0.125295,0.132999,0.142710,0.160890,0.196898,0.269190", \
				        "0.174313,0.184389,0.197347,0.221290,0.263760,0.336336", \
				        "0.248303,0.261870,0.278272,0.309439,0.365500,0.460791", \
				        "0.370975,0.387538,0.408724,0.448037,0.518975,0.642411");
			}
			fall_transition(Timing_X2) {
				values ("0.014868,0.018069,0.022200,0.030529,0.047100,0.080090", \
				        "0.014873,0.018072,0.022216,0.030566,0.047160,0.080148", \
				        "0.015270,0.018348,0.022270,0.030553,0.047167,0.080120", \
				        "0.017874,0.020817,0.024740,0.032168,0.047674,0.080090", \
				        "0.024788,0.027550,0.031313,0.038400,0.052882,0.082406", \
				        "0.039768,0.042661,0.046500,0.053637,0.067153,0.094795", \
				        "0.069377,0.072209,0.076369,0.084172,0.098698,0.125435", \
				        "0.122602,0.126050,0.130432,0.139729,0.157092,0.187853");
			}
			rise_transition(Timing_X2) {
				values ("0.042834,0.049695,0.058848,0.076664,0.111702,0.181590", \
				        "0.042832,0.049672,0.058769,0.076664,0.111729,0.181591", \
				        "0.042831,0.049686,0.058835,0.076591,0.111731,0.181598", \
				        "0.043005,0.049675,0.058832,0.076667,0.111688,0.181598", \
				        "0.052770,0.057778,0.064927,0.079850,0.112003,0.181571", \
				        "0.073690,0.080886,0.089464,0.104574,0.130113,0.186650", \
				        "0.103316,0.112755,0.124567,0.145413,0.180429,0.236435", \
				        "0.148559,0.160698,0.176141,0.203489,0.250790,0.328343");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.018430,0.022769,0.028547,0.040069,0.062845,0.108289", \
				        "0.021637,0.025703,0.031440,0.042915,0.065746,0.111124", \
				        "0.027768,0.032206,0.037800,0.048785,0.071518,0.116801", \
				        "0.034030,0.040154,0.047447,0.060596,0.083222,0.128285", \
				        "0.038335,0.046584,0.056550,0.074358,0.104267,0.152404", \
				        "0.035937,0.047062,0.060536,0.084561,0.124798,0.189601", \
				        "0.016207,0.031635,0.049768,0.082114,0.136252,0.223261", \
				        "-0.041324,-0.021338,0.003311,0.046535,0.119428,0.236663");
			}
			cell_rise(Timing_X2) {
				values ("0.044905,0.054907,0.068150,0.094245,0.146320,0.250058", \
				        "0.047977,0.057893,0.071060,0.097143,0.149294,0.253053", \
				        "0.054774,0.064558,0.077612,0.103532,0.155437,0.259141", \
				        "0.069674,0.079288,0.092041,0.117472,0.168784,0.271998", \
				        "0.093278,0.105432,0.120608,0.147658,0.197771,0.299567", \
				        "0.129055,0.144326,0.163247,0.197740,0.257290,0.358814", \
				        "0.187447,0.206729,0.230043,0.272698,0.347653,0.474204", \
				        "0.286748,0.310537,0.340290,0.393418,0.486466,0.644951");
			}
			fall_transition(Timing_X2) {
				values ("0.015376,0.019725,0.024858,0.034762,0.054415,0.093633", \
				        "0.014945,0.019009,0.024431,0.034703,0.054346,0.093584", \
				        "0.017583,0.020530,0.024960,0.034324,0.054314,0.093572", \
				        "0.024580,0.027778,0.031761,0.038761,0.055031,0.093601", \
				        "0.036914,0.040543,0.045246,0.053222,0.067881,0.097441", \
				        "0.058083,0.062600,0.068307,0.078345,0.095954,0.126244", \
				        "0.094403,0.100636,0.108176,0.121273,0.143535,0.180778", \
				        "0.158689,0.167246,0.177512,0.195520,0.225213,0.273007");
			}
			rise_transition(Timing_X2) {
				values ("0.036855,0.045882,0.057950,0.081547,0.128880,0.223761", \
				        "0.036860,0.045892,0.057913,0.081540,0.128942,0.223735", \
				        "0.036702,0.045844,0.057945,0.081486,0.128928,0.223756", \
				        "0.040227,0.047618,0.058420,0.081473,0.128907,0.223759", \
				        "0.052215,0.059683,0.068834,0.086959,0.129322,0.223762", \
				        "0.070640,0.079798,0.091122,0.111568,0.147237,0.226658", \
				        "0.102659,0.112693,0.125892,0.150317,0.194537,0.269240", \
				        "0.160822,0.172229,0.187036,0.214931,0.266793,0.359290");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024284,0.028881,0.034950,0.046744,0.069937,0.115805", \
				        "0.027067,0.031578,0.037678,0.049519,0.072699,0.118526", \
				        "0.033628,0.037764,0.043451,0.055221,0.078363,0.124093", \
				        "0.042511,0.048087,0.054961,0.067321,0.089949,0.135520", \
				        "0.050363,0.057880,0.067099,0.083860,0.112415,0.159491", \
				        "0.053612,0.063570,0.075900,0.098112,0.136405,0.199124", \
				        "0.044624,0.057834,0.074002,0.103346,0.153869,0.237282", \
				        "0.007882,0.025071,0.046233,0.084520,0.150744,0.260579");
			}
			cell_rise(Timing_X2) {
				values ("0.055541,0.065505,0.078719,0.104861,0.156884,0.260571", \
				        "0.058933,0.068822,0.082091,0.108293,0.160417,0.264202", \
				        "0.065112,0.075062,0.088201,0.114393,0.166577,0.270467", \
				        "0.077080,0.086996,0.100178,0.126218,0.178209,0.282132", \
				        "0.096694,0.108256,0.122957,0.150250,0.201920,0.305371", \
				        "0.128888,0.142541,0.159835,0.191861,0.249870,0.354383", \
				        "0.183061,0.200479,0.221490,0.259993,0.328358,0.448740", \
				        "0.274395,0.296832,0.323762,0.372426,0.456503,0.600129");
			}
			fall_transition(Timing_X2) {
				values ("0.021119,0.025071,0.029924,0.039658,0.059356,0.098625", \
				        "0.020347,0.024640,0.029854,0.039668,0.059345,0.098555", \
				        "0.020977,0.024574,0.029532,0.039369,0.059371,0.098547", \
				        "0.027620,0.030821,0.034776,0.042100,0.059456,0.098554", \
				        "0.039879,0.043526,0.048237,0.056147,0.070643,0.101442", \
				        "0.060226,0.064855,0.070661,0.080878,0.098679,0.128967", \
				        "0.094349,0.100764,0.108513,0.121960,0.144886,0.183026", \
				        "0.153590,0.162779,0.173434,0.191961,0.222508,0.271877");
			}
			rise_transition(Timing_X2) {
				values ("0.036865,0.045885,0.057849,0.081514,0.128926,0.223767", \
				        "0.036856,0.045862,0.057941,0.081514,0.128938,0.223765", \
				        "0.036875,0.045881,0.057920,0.081457,0.128930,0.223763", \
				        "0.038658,0.046774,0.058152,0.081505,0.128882,0.223737", \
				        "0.047325,0.054965,0.064989,0.084966,0.129248,0.223748", \
				        "0.062339,0.070282,0.081124,0.101568,0.141072,0.226050", \
				        "0.088417,0.096888,0.108149,0.129934,0.172484,0.253912", \
				        "0.134000,0.143655,0.156313,0.180243,0.225801,0.313117");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.007512,0.008238,0.009206,0.011158,0.015037,0.022791", \
				        "0.007482,0.008204,0.009181,0.011127,0.015010,0.022774", \
				        "0.007482,0.008220,0.009183,0.011123,0.015010,0.022766", \
				        "0.007620,0.008341,0.009297,0.011217,0.015071,0.022807", \
				        "0.008052,0.008766,0.009690,0.011553,0.015352,0.023012", \
				        "0.009150,0.009806,0.010700,0.012504,0.016187,0.023680", \
				        "0.011646,0.012257,0.013083,0.014778,0.018280,0.025509", \
				        "0.017054,0.017614,0.018353,0.019905,0.023141,0.029932");
			}
			fall_power(Power_X2) {
				values ("0.003346,0.002615,0.001643,-0.000295,-0.004162,-0.011902", \
				        "0.003311,0.002588,0.001621,-0.000304,-0.004174,-0.011891", \
				        "0.003297,0.002576,0.001601,-0.000325,-0.004185,-0.011923", \
				        "0.003286,0.002562,0.001606,-0.000334,-0.004212,-0.011943", \
				        "0.003357,0.002619,0.001649,-0.000284,-0.004144,-0.011891", \
				        "0.003829,0.003040,0.002011,0.000014,-0.003937,-0.011754", \
				        "0.005617,0.004717,0.003554,0.001300,-0.002954,-0.011065", \
				        "0.010394,0.009367,0.007994,0.005373,0.000490,-0.008491");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.007027,0.007759,0.008722,0.010668,0.014555,0.022312", \
				        "0.007010,0.007733,0.008702,0.010643,0.014524,0.022296", \
				        "0.007013,0.007741,0.008707,0.010643,0.014524,0.022288", \
				        "0.007159,0.007854,0.008786,0.010732,0.014588,0.022324", \
				        "0.007599,0.008266,0.009173,0.011078,0.014866,0.022530", \
				        "0.008664,0.009329,0.010213,0.012021,0.015704,0.023205", \
				        "0.011167,0.011787,0.012606,0.014305,0.017801,0.025027", \
				        "0.016583,0.017141,0.017915,0.019441,0.022669,0.029447");
			}
			fall_power(Power_X2) {
				values ("0.001650,0.000908,-0.000067,-0.002000,-0.005872,-0.013618", \
				        "0.001615,0.000901,-0.000080,-0.002007,-0.005867,-0.013603", \
				        "0.001593,0.000879,-0.000094,-0.002025,-0.005888,-0.013629", \
				        "0.001573,0.000853,-0.000113,-0.002038,-0.005905,-0.013657", \
				        "0.001658,0.000925,-0.000044,-0.001980,-0.005857,-0.013595", \
				        "0.002264,0.001447,0.000391,-0.001642,-0.005620,-0.013438", \
				        "0.004306,0.003354,0.002122,-0.000205,-0.004549,-0.012719", \
				        "0.009410,0.008271,0.006838,0.004124,-0.000923,-0.010038");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & C2";

			rise_power(Power_X2) {
				values ("0.007254,0.007985,0.008960,0.010907,0.014798,0.022558", \
				        "0.007246,0.007965,0.008936,0.010886,0.014772,0.022540", \
				        "0.007257,0.007969,0.008947,0.010886,0.014763,0.022528", \
				        "0.007369,0.008094,0.009051,0.010975,0.014829,0.022564", \
				        "0.007833,0.008515,0.009449,0.011319,0.015115,0.022783", \
				        "0.008927,0.009574,0.010469,0.012279,0.015975,0.023473", \
				        "0.011409,0.012045,0.012869,0.014583,0.018094,0.025335", \
				        "0.016898,0.017441,0.018190,0.019749,0.022983,0.029806");
			}
			fall_power(Power_X2) {
				values ("0.002012,0.001283,0.000313,-0.001619,-0.005484,-0.013220", \
				        "0.001989,0.001266,0.000302,-0.001625,-0.005485,-0.013215", \
				        "0.001966,0.001247,0.000285,-0.001646,-0.005509,-0.013237", \
				        "0.001952,0.001239,0.000276,-0.001650,-0.005512,-0.013256", \
				        "0.002039,0.001316,0.000349,-0.001592,-0.005461,-0.013192", \
				        "0.002672,0.001879,0.000812,-0.001234,-0.005210,-0.013035", \
				        "0.004762,0.003811,0.002587,0.000260,-0.004085,-0.012266", \
				        "0.009946,0.008832,0.007410,0.004688,-0.000338,-0.009497");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.008959,0.009712,0.010686,0.012623,0.016521,0.024286", \
				        "0.008973,0.009698,0.010664,0.012616,0.016495,0.024265", \
				        "0.008985,0.009711,0.010677,0.012617,0.016505,0.024260", \
				        "0.009127,0.009844,0.010790,0.012717,0.016573,0.024297", \
				        "0.009531,0.010261,0.011184,0.013056,0.016853,0.024518", \
				        "0.010652,0.011312,0.012213,0.014021,0.017711,0.025209", \
				        "0.013153,0.013795,0.014638,0.016346,0.019865,0.027090", \
				        "0.018708,0.019277,0.020048,0.021616,0.024875,0.031686");
			}
			fall_power(Power_X2) {
				values ("0.003337,0.002612,0.001640,-0.000308,-0.004180,-0.011934", \
				        "0.003310,0.002596,0.001632,-0.000307,-0.004165,-0.011899", \
				        "0.003297,0.002577,0.001608,-0.000324,-0.004183,-0.011915", \
				        "0.003284,0.002557,0.001600,-0.000340,-0.004210,-0.011941", \
				        "0.003316,0.002590,0.001625,-0.000309,-0.004195,-0.011949", \
				        "0.003714,0.002951,0.001940,-0.000057,-0.003984,-0.011770", \
				        "0.005418,0.004549,0.003407,0.001203,-0.003024,-0.011129", \
				        "0.010243,0.009211,0.007882,0.005352,0.000525,-0.008434");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.008508,0.009234,0.010201,0.012145,0.016034,0.023797", \
				        "0.008518,0.009219,0.010183,0.012123,0.016017,0.023783", \
				        "0.008516,0.009233,0.010196,0.012134,0.016022,0.023777", \
				        "0.008645,0.009377,0.010313,0.012236,0.016091,0.023815", \
				        "0.009068,0.009774,0.010705,0.012586,0.016379,0.024037", \
				        "0.010186,0.010828,0.011736,0.013546,0.017234,0.024736", \
				        "0.012689,0.013329,0.014151,0.015871,0.019388,0.026617", \
				        "0.018253,0.018802,0.019569,0.021150,0.024405,0.031199");
			}
			fall_power(Power_X2) {
				values ("0.001654,0.000907,-0.000067,-0.002009,-0.005883,-0.013631", \
				        "0.001627,0.000897,-0.000071,-0.002000,-0.005863,-0.013600", \
				        "0.001599,0.000881,-0.000085,-0.002021,-0.005882,-0.013607", \
				        "0.001577,0.000858,-0.000106,-0.002041,-0.005907,-0.013646", \
				        "0.001621,0.000900,-0.000078,-0.002028,-0.005904,-0.013658", \
				        "0.002117,0.001336,0.000301,-0.001715,-0.005672,-0.013468", \
				        "0.004013,0.003120,0.001941,-0.000330,-0.004631,-0.012794", \
				        "0.009143,0.008061,0.006673,0.004026,-0.000898,-0.009986");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & C2";

			rise_power(Power_X2) {
				values ("0.008755,0.009486,0.010457,0.012405,0.016291,0.024053", \
				        "0.008755,0.009478,0.010446,0.012390,0.016274,0.024042", \
				        "0.008764,0.009515,0.010460,0.012400,0.016278,0.024033", \
				        "0.008908,0.009624,0.010578,0.012504,0.016360,0.024087", \
				        "0.009336,0.010038,0.010984,0.012863,0.016655,0.024326", \
				        "0.010453,0.011113,0.012018,0.013834,0.017528,0.025038", \
				        "0.012962,0.013615,0.014452,0.016185,0.019718,0.026964", \
				        "0.018555,0.019102,0.019890,0.021490,0.024767,0.031601");
			}
			fall_power(Power_X2) {
				values ("0.002036,0.001304,0.000308,-0.001627,-0.005499,-0.013249", \
				        "0.001986,0.001282,0.000305,-0.001625,-0.005490,-0.013220", \
				        "0.001970,0.001258,0.000281,-0.001643,-0.005503,-0.013243", \
				        "0.001958,0.001229,0.000277,-0.001664,-0.005528,-0.013264", \
				        "0.002014,0.001279,0.000305,-0.001633,-0.005511,-0.013259", \
				        "0.002523,0.001737,0.000704,-0.001306,-0.005270,-0.013064", \
				        "0.004443,0.003548,0.002366,0.000108,-0.004195,-0.012354", \
				        "0.009599,0.008520,0.007143,0.004509,-0.000407,-0.009486");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X2) {
				values ("0.001564,0.000840,-0.000123,-0.002050,-0.005908,-0.013621", \
				        "0.001564,0.000870,-0.000117,-0.002040,-0.005899,-0.013617", \
				        "0.001618,0.000887,-0.000081,-0.002013,-0.005876,-0.013597", \
				        "0.001763,0.001019,0.000043,-0.001918,-0.005806,-0.013557", \
				        "0.002228,0.001416,0.000378,-0.001654,-0.005620,-0.013439", \
				        "0.003465,0.002548,0.001398,-0.000807,-0.004978,-0.013000", \
				        "0.006316,0.005322,0.004028,0.001550,-0.003057,-0.011580", \
				        "0.012481,0.011356,0.009925,0.007168,0.001986,-0.007479");
			}
			rise_power(Power_X2) {
				values ("0.003890,0.004631,0.005611,0.007569,0.011467,0.019213", \
				        "0.003900,0.004621,0.005609,0.007561,0.011459,0.019217", \
				        "0.003933,0.004660,0.005639,0.007576,0.011467,0.019213", \
				        "0.004112,0.004814,0.005779,0.007684,0.011524,0.019252", \
				        "0.004607,0.005284,0.006197,0.008052,0.011819,0.019454", \
				        "0.005803,0.006419,0.007270,0.009041,0.012676,0.020141", \
				        "0.008542,0.009046,0.009775,0.011354,0.014761,0.021938", \
				        "0.014600,0.014928,0.015464,0.016703,0.019625,0.026268");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X2) {
				values ("0.003197,0.002444,0.001473,-0.000447,-0.004306,-0.012024", \
				        "0.003167,0.002440,0.001466,-0.000457,-0.004314,-0.012025", \
				        "0.003183,0.002447,0.001485,-0.000447,-0.004306,-0.012030", \
				        "0.003276,0.002542,0.001571,-0.000377,-0.004255,-0.012000", \
				        "0.003639,0.002858,0.001853,-0.000140,-0.004081,-0.011890", \
				        "0.004632,0.003805,0.002727,0.000625,-0.003460,-0.011439", \
				        "0.007086,0.006202,0.005037,0.002744,-0.001626,-0.010010", \
				        "0.012530,0.011562,0.010279,0.007789,0.003014,-0.005995");
			}
			rise_power(Power_X2) {
				values ("0.004387,0.005138,0.006114,0.008062,0.011963,0.019725", \
				        "0.004352,0.005092,0.006075,0.008028,0.011934,0.019696", \
				        "0.004317,0.005052,0.006036,0.007996,0.011898,0.019677", \
				        "0.004310,0.005050,0.006028,0.007984,0.011881,0.019669", \
				        "0.004504,0.005221,0.006174,0.008084,0.011949,0.019683", \
				        "0.005329,0.005959,0.006844,0.008655,0.012400,0.020009", \
				        "0.007546,0.008052,0.008809,0.010417,0.013894,0.021215", \
				        "0.012709,0.013063,0.013612,0.014867,0.017814,0.024524");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI211_X4
 Cell Description	: Combinational cell (OAI211_X4) with drive strength X4
*******************************************************************************************/

cell (OAI211_X4) {

	area               	: 2.394000;

	cell_leakage_power 	: 34801.947875;

	leakage_power () {
		when      	: "!A & !B & !C1 & !C2";
		value      	: 10038.970000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & !C2";
		value      	: 11576.040000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & !C2";
		value      	: 34544.810000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & !C2";
		value      	: 81348.340000;
	}
	leakage_power () {
		when      	: "!A & !B & !C1 & C2";
		value      	: 7655.738000;
	}
	leakage_power () {
		when      	: "A & !B & !C1 & C2";
		value      	: 11688.290000;
	}
	leakage_power () {
		when      	: "!A & B & !C1 & C2";
		value      	: 36305.290000;
	}
	leakage_power () {
		when      	: "A & B & !C1 & C2";
		value      	: 81103.410000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & !C2";
		value      	: 7655.759000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & !C2";
		value      	: 11688.320000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & !C2";
		value      	: 36305.320000;
	}
	leakage_power () {
		when      	: "A & B & C1 & !C2";
		value      	: 84020.180000;
	}
	leakage_power () {
		when      	: "!A & !B & C1 & C2";
		value      	: 2117.258000;
	}
	leakage_power () {
		when      	: "A & !B & C1 & C2";
		value      	: 6210.451000;
	}
	leakage_power () {
		when      	: "!A & B & C1 & C2";
		value      	: 31143.990000;
	}
	leakage_power () {
		when      	: "A & B & C1 & C2";
		value      	: 103429.000000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.002031;
		fall_capacitance	: 0.002022;
		rise_capacitance	: 0.002040;
		fall_capacitance_range		(0.001721, 0.002388);
		rise_capacitance_range		(0.001703, 0.002531);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000017,0.000012,0.000010,0.000009,0.000008,0.000008,0.000007");
			}

		}

		internal_power () {

			when      	: "!B & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000019,0.000015,0.000012,0.000011,0.000010,0.000010,0.000009");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000018,0.000014,0.000012,0.000011,0.000010,0.000010,0.000009");
			}

		}

		internal_power () {

			when      	: "!B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000009,0.000005,0.000002,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "B & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000138,0.000093,0.000065,0.000047,0.000036,0.000028,0.000020,0.000010");
			}

		}
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001900;
		fall_capacitance	: 0.001842;
		rise_capacitance	: 0.001959;
		fall_capacitance_range		(0.001633, 0.002145);
		rise_capacitance_range		(0.001587, 0.002364);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000018,0.000010,0.000005,0.000001,-0.000003,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000011,0.000003,-0.000002,-0.000005,-0.000009,-0.000015,-0.000026");
			}

		}

		internal_power () {

			when      	: "A & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000074,0.000051,0.000036,0.000026,0.000020,0.000014,0.000008,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000012,0.000004,-0.000001,-0.000005,-0.000008,-0.000014,-0.000026");
			}

		}

		internal_power () {

			when      	: "!A & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000011,0.000004,-0.000001,-0.000005,-0.000008,-0.000014,-0.000026");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002213;
		fall_capacitance	: 0.002111;
		rise_capacitance	: 0.002315;
		fall_capacitance_range		(0.001808, 0.002698);
		rise_capacitance_range		(0.001860, 0.003009);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000075,0.000051,0.000036,0.000028,0.000022,0.000018,0.000014,0.000006");
			}

		}

		internal_power () {

			when      	: "A & !B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000075,0.000051,0.000035,0.000024,0.000018,0.000013,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000086,0.000062,0.000046,0.000036,0.000029,0.000025,0.000020,0.000012");
			}

		}

		internal_power () {

			when      	: "A & B & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000030,0.000017,0.000008,0.000002,-0.000003,-0.000010,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000035,0.000023,0.000014,0.000008,0.000003,0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000043,0.000031,0.000021,0.000013,0.000008,0.000003,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000044,0.000032,0.000022,0.000015,0.000009,0.000004,-0.000000");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002399;
		fall_capacitance	: 0.002422;
		rise_capacitance	: 0.002375;
		fall_capacitance_range		(0.002063, 0.002891);
		rise_capacitance_range		(0.002038, 0.002956);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000033,0.000025,0.000019,0.000015,0.000012,0.000007,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000056,0.000044,0.000036,0.000030,0.000027,0.000023,0.000019,0.000011");
			}

		}

		internal_power () {

			when      	: "A & B & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000149,0.000103,0.000067,0.000044,0.000029,0.000017,0.000006,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000019,0.000013,0.000008,0.000006,0.000003,0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000049,0.000037,0.000029,0.000024,0.000020,0.000017,0.000013,0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000020,0.000014,0.000010,0.000007,0.000004,0.000002,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & B)";

		timing () {

			related_pin	   : "A";
			when	           : "B & !C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.032488,0.037847,0.043933,0.055775,0.079049,0.125001", \
				        "0.035393,0.040735,0.046808,0.058679,0.081984,0.127949", \
				        "0.040731,0.046151,0.051980,0.063862,0.087163,0.133187", \
				        "0.048960,0.055198,0.061857,0.074248,0.097687,0.143764", \
				        "0.057337,0.065649,0.074194,0.089663,0.116613,0.164341", \
				        "0.060469,0.072018,0.083929,0.105091,0.140812,0.199128", \
				        "0.049267,0.065069,0.081521,0.110794,0.160166,0.239208", \
				        "0.005148,0.027058,0.049251,0.089301,0.156868,0.265487");
			}
			cell_rise(Timing_X4) {
				values ("0.045014,0.053198,0.062625,0.080953,0.117284,0.189458", \
				        "0.048585,0.056727,0.066116,0.084418,0.120802,0.193038", \
				        "0.056261,0.064422,0.073634,0.092023,0.128270,0.200410", \
				        "0.072987,0.080861,0.089925,0.107972,0.143876,0.215678", \
				        "0.100111,0.110682,0.121754,0.141476,0.176832,0.247694", \
				        "0.139839,0.153467,0.168096,0.194399,0.240007,0.314608", \
				        "0.201845,0.219618,0.238192,0.272177,0.331847,0.431687", \
				        "0.306131,0.328682,0.352264,0.395543,0.471413,0.600411");
			}
			fall_transition(Timing_X4) {
				values ("0.017861,0.022345,0.027264,0.037006,0.056658,0.096057", \
				        "0.017820,0.022238,0.027273,0.036997,0.056711,0.096092", \
				        "0.018096,0.022377,0.027172,0.036982,0.056704,0.096043", \
				        "0.021692,0.025491,0.029878,0.038295,0.056881,0.096094", \
				        "0.030646,0.034433,0.038733,0.046687,0.062731,0.097503", \
				        "0.047118,0.051690,0.056655,0.065466,0.081576,0.112714", \
				        "0.076229,0.081812,0.088049,0.098947,0.118195,0.151652", \
				        "0.125525,0.133335,0.141468,0.156075,0.181207,0.222667");
			}
			rise_transition(Timing_X4) {
				values ("0.037830,0.046486,0.056220,0.075037,0.111245,0.180932", \
				        "0.037824,0.046453,0.056216,0.075079,0.111228,0.180932", \
				        "0.037829,0.046476,0.056153,0.075051,0.111243,0.180932", \
				        "0.040573,0.047970,0.056687,0.075049,0.111242,0.180934", \
				        "0.056310,0.062134,0.068710,0.082340,0.113005,0.180929", \
				        "0.083034,0.090415,0.098277,0.112766,0.137169,0.189520", \
				        "0.121866,0.131042,0.140896,0.159549,0.192124,0.245248", \
				        "0.183576,0.194137,0.206353,0.228924,0.270401,0.342103");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & !C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.026594,0.031657,0.037459,0.048911,0.071762,0.117343", \
				        "0.029460,0.034523,0.040328,0.051826,0.074696,0.120277", \
				        "0.034390,0.039789,0.045435,0.056977,0.079899,0.125516", \
				        "0.040486,0.047243,0.054174,0.066827,0.090302,0.136064", \
				        "0.044661,0.054134,0.063610,0.080223,0.108234,0.156546", \
				        "0.041571,0.054971,0.068358,0.091486,0.129529,0.189798", \
				        "0.022469,0.040745,0.059282,0.091479,0.144156,0.226454", \
				        "-0.031379,-0.006230,0.018630,0.062387,0.134426,0.247648");
			}
			cell_rise(Timing_X4) {
				values ("0.044388,0.052529,0.061771,0.080129,0.116374,0.188399", \
				        "0.047948,0.056066,0.065276,0.083648,0.119921,0.191976", \
				        "0.055664,0.063734,0.072865,0.091162,0.127361,0.199342", \
				        "0.072347,0.080223,0.089216,0.107163,0.142983,0.214634", \
				        "0.099143,0.109738,0.120737,0.140552,0.175950,0.246626", \
				        "0.138394,0.152056,0.166607,0.193045,0.238808,0.313582", \
				        "0.200110,0.217430,0.235932,0.270068,0.329940,0.429978", \
				        "0.302085,0.324913,0.348556,0.392116,0.468276,0.597510");
			}
			fall_transition(Timing_X4) {
				values ("0.013205,0.017667,0.022499,0.032407,0.052138,0.091470", \
				        "0.013237,0.017675,0.022528,0.032362,0.052125,0.091561", \
				        "0.014344,0.018225,0.022826,0.032449,0.052113,0.091549", \
				        "0.018866,0.022483,0.026540,0.034646,0.052615,0.091558", \
				        "0.028368,0.032156,0.036323,0.044091,0.059713,0.093535", \
				        "0.045594,0.050002,0.054743,0.063534,0.079402,0.109971", \
				        "0.076077,0.081059,0.086900,0.097539,0.116508,0.149563", \
				        "0.126475,0.133434,0.140941,0.155140,0.179770,0.220836");
			}
			rise_transition(Timing_X4) {
				values ("0.029474,0.037174,0.046009,0.063168,0.097490,0.165865", \
				        "0.029476,0.037154,0.046007,0.063153,0.097444,0.165898", \
				        "0.029467,0.037151,0.046014,0.063180,0.097496,0.165876", \
				        "0.032303,0.038740,0.046629,0.063106,0.097481,0.165910", \
				        "0.044655,0.051264,0.058193,0.070500,0.099311,0.165883", \
				        "0.062857,0.071812,0.081227,0.097207,0.123227,0.174560", \
				        "0.090007,0.102093,0.114364,0.135961,0.172072,0.229046", \
				        "0.136672,0.151674,0.167575,0.195118,0.242313,0.319724");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B & C1 & C2";
			sdf_cond	   : "(B == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023829,0.028166,0.033063,0.042783,0.062199,0.100919", \
				        "0.026936,0.031234,0.036112,0.045893,0.065337,0.104064", \
				        "0.032557,0.037274,0.042149,0.051931,0.071438,0.110196", \
				        "0.038936,0.045381,0.051863,0.063462,0.083832,0.122728", \
				        "0.042968,0.052160,0.061366,0.077429,0.104110,0.147352", \
				        "0.039436,0.052492,0.065621,0.088271,0.125481,0.183729", \
				        "0.019314,0.037195,0.055363,0.086993,0.138726,0.219531", \
				        "-0.036771,-0.012188,0.012257,0.055290,0.126216,0.237848");
			}
			cell_rise(Timing_X4) {
				values ("0.047006,0.055102,0.064272,0.082552,0.118728,0.190667", \
				        "0.050607,0.058639,0.067774,0.086076,0.122263,0.194249", \
				        "0.058299,0.066293,0.075365,0.093574,0.129694,0.201633", \
				        "0.075057,0.082800,0.091706,0.109602,0.145322,0.216895", \
				        "0.102601,0.112972,0.123766,0.143168,0.178358,0.248935", \
				        "0.143176,0.156300,0.170595,0.196640,0.241866,0.316052", \
				        "0.205714,0.223285,0.241308,0.275023,0.334214,0.433524", \
				        "0.310947,0.332983,0.356287,0.398948,0.474261,0.602759");
			}
			fall_transition(Timing_X4) {
				values ("0.012324,0.016045,0.020150,0.028486,0.045001,0.078103", \
				        "0.012359,0.016059,0.020182,0.028445,0.045133,0.078088", \
				        "0.013933,0.016962,0.020619,0.028458,0.045125,0.078067", \
				        "0.019466,0.022478,0.025842,0.031897,0.046049,0.078042", \
				        "0.029702,0.033059,0.036840,0.043565,0.056137,0.081863", \
				        "0.047779,0.051690,0.056024,0.064040,0.078655,0.104453", \
				        "0.079457,0.083924,0.089217,0.098998,0.116919,0.147947", \
				        "0.132165,0.138156,0.144928,0.158037,0.181339,0.220617");
			}
			rise_transition(Timing_X4) {
				values ("0.030650,0.038433,0.047239,0.064494,0.098954,0.167451", \
				        "0.030651,0.038397,0.047239,0.064567,0.098963,0.167454", \
				        "0.030643,0.038399,0.047260,0.064531,0.098919,0.167436", \
				        "0.033119,0.039741,0.047818,0.064568,0.098913,0.167405", \
				        "0.045554,0.052008,0.058699,0.071388,0.100576,0.167452", \
				        "0.064089,0.072955,0.082194,0.098054,0.123864,0.175647", \
				        "0.091967,0.103580,0.115726,0.137077,0.172898,0.229601", \
				        "0.139020,0.153714,0.169331,0.196511,0.243267,0.320221");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036213,0.041675,0.047707,0.059572,0.082848,0.128804", \
				        "0.038666,0.044029,0.050119,0.062014,0.085320,0.131288", \
				        "0.042688,0.048129,0.054020,0.065896,0.089233,0.135257", \
				        "0.048309,0.054159,0.060463,0.072605,0.096004,0.142071", \
				        "0.054249,0.061132,0.068427,0.082122,0.107462,0.154708", \
				        "0.054803,0.064347,0.074121,0.091565,0.121889,0.174732", \
				        "0.037074,0.050918,0.065064,0.089951,0.131664,0.198427", \
				        "-0.020262,-0.000582,0.019200,0.054606,0.113691,0.206900");
			}
			cell_rise(Timing_X4) {
				values ("0.053679,0.062132,0.071694,0.090438,0.127216,0.199881", \
				        "0.057287,0.065716,0.075253,0.093946,0.130794,0.203423", \
				        "0.064966,0.073434,0.082846,0.101533,0.138250,0.210853", \
				        "0.081550,0.089709,0.099088,0.117510,0.153884,0.226151", \
				        "0.112344,0.122222,0.132511,0.151237,0.186788,0.258208", \
				        "0.157383,0.170023,0.183783,0.208685,0.252249,0.325205", \
				        "0.227019,0.243186,0.260574,0.292725,0.349903,0.446577", \
				        "0.343282,0.364039,0.385807,0.426378,0.498724,0.623249");
			}
			fall_transition(Timing_X4) {
				values ("0.017871,0.022311,0.027165,0.036998,0.056668,0.096057", \
				        "0.017847,0.022238,0.027229,0.037036,0.056687,0.096042", \
				        "0.017942,0.022292,0.027135,0.036996,0.056643,0.096040", \
				        "0.019743,0.023968,0.028574,0.037829,0.056846,0.096095", \
				        "0.024955,0.028899,0.033488,0.042429,0.060499,0.097248", \
				        "0.038141,0.042053,0.046485,0.054751,0.071303,0.106364", \
				        "0.064490,0.068977,0.074024,0.083050,0.099588,0.131236", \
				        "0.112420,0.118133,0.124250,0.135641,0.155540,0.189507");
			}
			rise_transition(Timing_X4) {
				values ("0.044792,0.053241,0.062775,0.081441,0.117443,0.187097", \
				        "0.044776,0.053227,0.062782,0.081415,0.117452,0.187108", \
				        "0.044790,0.053234,0.062744,0.081455,0.117439,0.187104", \
				        "0.045545,0.053481,0.062790,0.081438,0.117442,0.187100", \
				        "0.058228,0.063924,0.071072,0.086058,0.118160,0.187087", \
				        "0.084740,0.092137,0.099939,0.114256,0.139028,0.193707", \
				        "0.121609,0.131434,0.141630,0.160637,0.193455,0.246578", \
				        "0.177572,0.189176,0.202406,0.226389,0.269342,0.342327");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.030346,0.035459,0.041275,0.052717,0.075614,0.121191", \
				        "0.032752,0.037817,0.043607,0.055080,0.077982,0.123578", \
				        "0.036597,0.041813,0.047515,0.059017,0.081952,0.127606", \
				        "0.041220,0.047124,0.053343,0.065372,0.088626,0.134348", \
				        "0.044568,0.052095,0.059800,0.073819,0.099526,0.146933", \
				        "0.039742,0.050726,0.061663,0.080611,0.112404,0.166075", \
				        "0.013808,0.030020,0.046116,0.073751,0.118365,0.187706", \
				        "-0.053233,-0.030422,-0.008059,0.030992,0.094336,0.191851");
			}
			cell_rise(Timing_X4) {
				values ("0.052985,0.061412,0.070847,0.089542,0.126268,0.198769", \
				        "0.056606,0.064982,0.074401,0.093099,0.129835,0.202338", \
				        "0.064319,0.072695,0.082046,0.100618,0.137304,0.209745", \
				        "0.080888,0.088992,0.098256,0.116593,0.152946,0.225071", \
				        "0.111403,0.121349,0.131561,0.150442,0.185851,0.257104", \
				        "0.155970,0.168653,0.182406,0.207350,0.251072,0.324140", \
				        "0.224927,0.241101,0.258475,0.290656,0.348026,0.444903", \
				        "0.339577,0.360546,0.382391,0.423098,0.495687,0.620391");
			}
			fall_transition(Timing_X4) {
				values ("0.013194,0.017612,0.022544,0.032411,0.052119,0.091530", \
				        "0.013221,0.017600,0.022513,0.032369,0.052137,0.091535", \
				        "0.013702,0.017914,0.022663,0.032413,0.052113,0.091537", \
				        "0.015914,0.019970,0.024600,0.033737,0.052456,0.091560", \
				        "0.022083,0.025896,0.030256,0.038787,0.056571,0.093077", \
				        "0.036284,0.040105,0.044437,0.052375,0.068502,0.102711", \
				        "0.064681,0.068590,0.073214,0.081951,0.097872,0.128769", \
				        "0.115095,0.119658,0.125008,0.135622,0.154776,0.188148");
			}
			rise_transition(Timing_X4) {
				values ("0.034936,0.042696,0.051573,0.068930,0.103309,0.171874", \
				        "0.034933,0.042715,0.051646,0.068879,0.103337,0.171871", \
				        "0.034932,0.042719,0.051662,0.068950,0.103285,0.171869", \
				        "0.035759,0.042987,0.051629,0.068891,0.103268,0.171878", \
				        "0.046969,0.053285,0.059968,0.073656,0.104082,0.171922", \
				        "0.065634,0.074365,0.083458,0.099195,0.124879,0.178541", \
				        "0.091872,0.104008,0.116226,0.137882,0.173825,0.230595", \
				        "0.134364,0.149400,0.165779,0.193961,0.242012,0.320356");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027614,0.031935,0.036863,0.046614,0.066037,0.104757", \
				        "0.030087,0.034371,0.039307,0.049078,0.068554,0.107292", \
				        "0.034131,0.038631,0.043476,0.053265,0.072768,0.111517", \
				        "0.039195,0.044489,0.050050,0.060623,0.080667,0.119554", \
				        "0.042780,0.049942,0.057214,0.070289,0.093444,0.134910", \
				        "0.037864,0.048506,0.059181,0.077571,0.108062,0.157604", \
				        "0.011471,0.027343,0.043167,0.070257,0.114008,0.181438", \
				        "-0.056724,-0.034315,-0.012234,0.026222,0.088655,0.184738");
			}
			cell_rise(Timing_X4) {
				values ("0.056405,0.064724,0.074015,0.092545,0.129023,0.201340", \
				        "0.060099,0.068326,0.077560,0.096110,0.132582,0.204910", \
				        "0.067780,0.076030,0.085187,0.103650,0.140100,0.212337", \
				        "0.084433,0.092401,0.101488,0.119690,0.155810,0.227716", \
				        "0.115459,0.125112,0.135080,0.153524,0.188807,0.259853", \
				        "0.161350,0.173529,0.186928,0.211426,0.254616,0.327076", \
				        "0.231651,0.247587,0.264396,0.296199,0.352901,0.448892", \
				        "0.348876,0.368997,0.390619,0.430582,0.502252,0.626146");
			}
			fall_transition(Timing_X4) {
				values ("0.012330,0.016026,0.020188,0.028471,0.045003,0.078072", \
				        "0.012336,0.015997,0.020116,0.028414,0.045117,0.078059", \
				        "0.013015,0.016369,0.020368,0.028481,0.045134,0.078133", \
				        "0.015784,0.019095,0.022844,0.030324,0.045703,0.078096", \
				        "0.022925,0.026148,0.029752,0.036971,0.051234,0.080711", \
				        "0.037975,0.041329,0.045173,0.052289,0.065662,0.093210", \
				        "0.067450,0.070721,0.074836,0.082731,0.097291,0.124076", \
				        "0.119326,0.123102,0.127763,0.137285,0.155045,0.186168");
			}
			rise_transition(Timing_X4) {
				values ("0.035942,0.043832,0.052847,0.070263,0.104803,0.173621", \
				        "0.035941,0.043808,0.052811,0.070263,0.104886,0.173632", \
				        "0.035941,0.043835,0.052797,0.070211,0.104838,0.173633", \
				        "0.036703,0.044063,0.052795,0.070238,0.104881,0.173623", \
				        "0.047734,0.053918,0.060591,0.074638,0.105511,0.173613", \
				        "0.066855,0.075525,0.084414,0.099994,0.125691,0.179955", \
				        "0.093649,0.105538,0.117688,0.139083,0.174797,0.231271", \
				        "0.136488,0.151372,0.167437,0.195363,0.243126,0.321130");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015747,0.020823,0.026644,0.038130,0.060978,0.106514", \
				        "0.019134,0.023789,0.029505,0.040986,0.063855,0.109411", \
				        "0.024323,0.029995,0.035865,0.046825,0.069606,0.114992", \
				        "0.029101,0.036807,0.044608,0.058343,0.081341,0.126488", \
				        "0.031310,0.041777,0.052305,0.070864,0.101668,0.150655", \
				        "0.026134,0.040265,0.054601,0.079573,0.120996,0.187021", \
				        "0.002828,0.022200,0.041453,0.075219,0.130872,0.219458", \
				        "-0.058985,-0.033657,-0.007894,0.037084,0.112020,0.231304");
			}
			cell_rise(Timing_X4) {
				values ("0.035941,0.047605,0.060812,0.087028,0.139145,0.242867", \
				        "0.039051,0.050601,0.063781,0.090003,0.142048,0.245881", \
				        "0.046073,0.057402,0.070407,0.096364,0.148259,0.251998", \
				        "0.060470,0.072463,0.085055,0.110432,0.161665,0.264821", \
				        "0.081708,0.096965,0.112746,0.140638,0.190807,0.292479", \
				        "0.115460,0.133981,0.153640,0.189058,0.249802,0.351933", \
				        "0.170334,0.194159,0.218361,0.262193,0.338452,0.466443", \
				        "0.265193,0.294886,0.325776,0.380521,0.475293,0.635406");
			}
			fall_transition(Timing_X4) {
				values ("0.012376,0.017272,0.022479,0.032387,0.052163,0.091551", \
				        "0.012352,0.016924,0.022087,0.032372,0.052136,0.091477", \
				        "0.015588,0.018974,0.023078,0.032068,0.052135,0.091487", \
				        "0.022338,0.026045,0.030117,0.037212,0.053097,0.091508", \
				        "0.034047,0.038552,0.043396,0.051629,0.066371,0.095829", \
				        "0.054102,0.059867,0.065949,0.076301,0.094313,0.124895", \
				        "0.088942,0.096877,0.104787,0.118533,0.141387,0.179200", \
				        "0.151324,0.161974,0.172873,0.191675,0.222283,0.270875");
			}
			rise_transition(Timing_X4) {
				values ("0.029360,0.039869,0.051888,0.075482,0.123019,0.217870", \
				        "0.029305,0.039876,0.051870,0.075606,0.123005,0.217890", \
				        "0.029261,0.039658,0.051978,0.075583,0.123008,0.217869", \
				        "0.034361,0.042488,0.052899,0.075526,0.123021,0.217866", \
				        "0.045372,0.054563,0.064353,0.082054,0.123623,0.217889", \
				        "0.062775,0.073608,0.085366,0.106430,0.142709,0.221278", \
				        "0.093707,0.105827,0.119205,0.144144,0.189126,0.264875", \
				        "0.150795,0.164346,0.179572,0.207964,0.260401,0.353733");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020917,0.026415,0.032527,0.044393,0.067631,0.113532", \
				        "0.023741,0.029157,0.035297,0.047169,0.070375,0.116239", \
				        "0.030278,0.035434,0.041131,0.052873,0.076043,0.121817", \
				        "0.037884,0.044907,0.051985,0.064928,0.087642,0.133249", \
				        "0.044127,0.053462,0.063086,0.080347,0.109607,0.157252", \
				        "0.045151,0.057606,0.070379,0.093421,0.132540,0.196165", \
				        "0.033483,0.049761,0.066640,0.096962,0.148621,0.233170", \
				        "-0.006971,0.014340,0.036331,0.075926,0.143634,0.254994");
			}
			cell_rise(Timing_X4) {
				values ("0.049170,0.060868,0.074150,0.100287,0.152384,0.256081", \
				        "0.052461,0.064049,0.077273,0.103678,0.155880,0.259705", \
				        "0.058443,0.070148,0.083295,0.109577,0.161887,0.265888", \
				        "0.069631,0.081676,0.094833,0.121006,0.173213,0.277288", \
				        "0.086974,0.101299,0.116532,0.144597,0.196646,0.300366", \
				        "0.116406,0.133522,0.151535,0.184503,0.243601,0.349001", \
				        "0.167731,0.188789,0.210894,0.250672,0.320387,0.442146", \
				        "0.253157,0.281356,0.309720,0.360274,0.446362,0.591844");
			}
			fall_transition(Timing_X4) {
				values ("0.017933,0.022517,0.027290,0.037041,0.056711,0.096019", \
				        "0.017051,0.021958,0.027172,0.037060,0.056711,0.096025", \
				        "0.018474,0.022391,0.027165,0.036633,0.056714,0.096098", \
				        "0.025125,0.028768,0.032631,0.040092,0.057011,0.096107", \
				        "0.036682,0.041138,0.045956,0.054158,0.068831,0.099302", \
				        "0.055758,0.061695,0.067847,0.078446,0.096567,0.127136", \
				        "0.088367,0.096278,0.104462,0.118608,0.142134,0.180845", \
				        "0.144283,0.156034,0.167588,0.187092,0.218707,0.268919");
			}
			rise_transition(Timing_X4) {
				values ("0.029352,0.039871,0.051854,0.075493,0.123018,0.217885", \
				        "0.029355,0.039835,0.051869,0.075518,0.123022,0.217865", \
				        "0.029383,0.039829,0.051811,0.075581,0.123022,0.217866", \
				        "0.032060,0.041154,0.052293,0.075535,0.122973,0.217888", \
				        "0.040668,0.049764,0.060075,0.079728,0.123434,0.217889", \
				        "0.055392,0.064742,0.075669,0.096335,0.136092,0.220506", \
				        "0.080823,0.090936,0.102431,0.124353,0.167120,0.248997", \
				        "0.125499,0.136900,0.149810,0.174064,0.219989,0.307672");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.012982,0.014678,0.016641,0.020534,0.028290,0.043813", \
				        "0.012947,0.014640,0.016585,0.020489,0.028263,0.043785", \
				        "0.012974,0.014668,0.016611,0.020490,0.028255,0.043789", \
				        "0.013292,0.014935,0.016847,0.020679,0.028392,0.043856", \
				        "0.014227,0.015835,0.017699,0.021421,0.028965,0.044284", \
				        "0.016504,0.018018,0.019798,0.023378,0.030701,0.045649", \
				        "0.021656,0.023082,0.024714,0.028078,0.035011,0.049384", \
				        "0.032759,0.034022,0.035498,0.038560,0.044937,0.058432");
			}
			fall_power(Power_X4) {
				values ("0.006071,0.004402,0.002460,-0.001399,-0.009134,-0.024607", \
				        "0.006033,0.004351,0.002423,-0.001430,-0.009152,-0.024606", \
				        "0.005992,0.004321,0.002379,-0.001470,-0.009201,-0.024674", \
				        "0.005976,0.004299,0.002388,-0.001477,-0.009225,-0.024713", \
				        "0.006209,0.004449,0.002505,-0.001355,-0.009098,-0.024580", \
				        "0.007277,0.005436,0.003348,-0.000707,-0.008629,-0.024256", \
				        "0.011260,0.009085,0.006680,0.002109,-0.006513,-0.022800", \
				        "0.021325,0.018785,0.015969,0.010638,0.000702,-0.017447");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.012025,0.013721,0.015674,0.019560,0.027332,0.042840", \
				        "0.011981,0.013676,0.015629,0.019513,0.027291,0.042816", \
				        "0.011999,0.013708,0.015642,0.019526,0.027285,0.042809", \
				        "0.012355,0.013980,0.015884,0.019728,0.027416,0.042889", \
				        "0.013262,0.014873,0.016730,0.020454,0.028003,0.043317", \
				        "0.015572,0.017083,0.018853,0.022417,0.029742,0.044687", \
				        "0.020754,0.022120,0.023770,0.027106,0.034041,0.048423", \
				        "0.031799,0.033076,0.034559,0.037611,0.043999,0.057443");
			}
			fall_power(Power_X4) {
				values ("0.002883,0.001226,-0.000724,-0.004583,-0.012315,-0.027806", \
				        "0.002860,0.001204,-0.000737,-0.004607,-0.012322,-0.027795", \
				        "0.002809,0.001149,-0.000795,-0.004643,-0.012385,-0.027866", \
				        "0.002762,0.001116,-0.000813,-0.004662,-0.012410,-0.027912", \
				        "0.003036,0.001308,-0.000653,-0.004528,-0.012266,-0.027764", \
				        "0.004479,0.002535,0.000375,-0.003771,-0.011758,-0.027431", \
				        "0.008937,0.006631,0.004119,-0.000636,-0.009455,-0.025904", \
				        "0.019579,0.016888,0.013938,0.008391,-0.001839,-0.020278");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B & C1 & C2";

			rise_power(Power_X4) {
				values ("0.012568,0.014274,0.016215,0.020114,0.027874,0.043407", \
				        "0.012526,0.014230,0.016169,0.020066,0.027840,0.043384", \
				        "0.012555,0.014233,0.016188,0.020066,0.027849,0.043368", \
				        "0.012862,0.014522,0.016436,0.020285,0.027979,0.043457", \
				        "0.013809,0.015451,0.017288,0.021014,0.028570,0.043858", \
				        "0.016189,0.017643,0.019411,0.023008,0.030354,0.045295", \
				        "0.021281,0.022741,0.024371,0.027738,0.034706,0.049115", \
				        "0.032531,0.033785,0.035267,0.038325,0.044725,0.058244");
			}
			fall_power(Power_X4) {
				values ("0.003281,0.001589,-0.000352,-0.004218,-0.011946,-0.027423", \
				        "0.003233,0.001565,-0.000387,-0.004238,-0.011969,-0.027421", \
				        "0.003168,0.001505,-0.000422,-0.004274,-0.012001,-0.027486", \
				        "0.003152,0.001482,-0.000430,-0.004281,-0.012017,-0.027489", \
				        "0.003419,0.001696,-0.000244,-0.004146,-0.011875,-0.027370", \
				        "0.004917,0.002963,0.000816,-0.003333,-0.011330,-0.027015", \
				        "0.009490,0.007174,0.004656,-0.000110,-0.008935,-0.025405", \
				        "0.020293,0.017591,0.014657,0.009129,-0.001113,-0.019594");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.015930,0.017657,0.019588,0.023499,0.031235,0.046776", \
				        "0.015920,0.017602,0.019556,0.023451,0.031217,0.046739", \
				        "0.015960,0.017658,0.019593,0.023471,0.031222,0.046747", \
				        "0.016278,0.017910,0.019825,0.023677,0.031371,0.046831", \
				        "0.017166,0.018819,0.020655,0.024391,0.031975,0.047266", \
				        "0.019474,0.021012,0.022781,0.026380,0.033727,0.048693", \
				        "0.024633,0.026131,0.027789,0.031173,0.038125,0.052544", \
				        "0.036049,0.037309,0.038832,0.041931,0.048381,0.061903");
			}
			fall_power(Power_X4) {
				values ("0.006119,0.004388,0.002439,-0.001424,-0.009179,-0.024672", \
				        "0.006024,0.004369,0.002428,-0.001427,-0.009148,-0.024606", \
				        "0.005996,0.004325,0.002382,-0.001469,-0.009187,-0.024660", \
				        "0.005949,0.004287,0.002373,-0.001502,-0.009241,-0.024725", \
				        "0.006086,0.004366,0.002443,-0.001434,-0.009200,-0.024714", \
				        "0.007063,0.005223,0.003177,-0.000848,-0.008740,-0.024332", \
				        "0.010793,0.008730,0.006396,0.001904,-0.006664,-0.022930", \
				        "0.020978,0.018490,0.015775,0.010567,0.000808,-0.017271");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.014989,0.016693,0.018645,0.022498,0.030279,0.045812", \
				        "0.014945,0.016665,0.018595,0.022485,0.030246,0.045767", \
				        "0.014990,0.016695,0.018620,0.022488,0.030254,0.045772", \
				        "0.015280,0.016974,0.018869,0.022701,0.030404,0.045854", \
				        "0.016229,0.017861,0.019702,0.023433,0.030991,0.046303", \
				        "0.018534,0.020023,0.021839,0.025424,0.032753,0.047730", \
				        "0.023740,0.025175,0.026828,0.030206,0.037175,0.051584", \
				        "0.035058,0.036398,0.037847,0.040993,0.047446,0.060956");
			}
			fall_power(Power_X4) {
				values ("0.002937,0.001234,-0.000721,-0.004602,-0.012364,-0.027856", \
				        "0.002858,0.001197,-0.000734,-0.004595,-0.012325,-0.027808", \
				        "0.002823,0.001144,-0.000782,-0.004628,-0.012344,-0.027837", \
				        "0.002780,0.001112,-0.000823,-0.004681,-0.012422,-0.027931", \
				        "0.002933,0.001226,-0.000740,-0.004615,-0.012393,-0.027897", \
				        "0.004143,0.002270,0.000161,-0.003930,-0.011875,-0.027492", \
				        "0.008357,0.006154,0.003722,-0.000897,-0.009622,-0.026035", \
				        "0.019058,0.016478,0.013627,0.008207,-0.001791,-0.020138");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A & C1 & C2";

			rise_power(Power_X4) {
				values ("0.015530,0.017281,0.019201,0.023096,0.030864,0.046391", \
				        "0.015541,0.017248,0.019170,0.023071,0.030830,0.046384", \
				        "0.015598,0.017290,0.019213,0.023085,0.030853,0.046383", \
				        "0.015875,0.017547,0.019468,0.023308,0.031010,0.046488", \
				        "0.016792,0.018464,0.020314,0.024068,0.031630,0.046949", \
				        "0.019151,0.020668,0.022474,0.026075,0.033438,0.048443", \
				        "0.024376,0.025853,0.027477,0.030915,0.037918,0.052355", \
				        "0.035723,0.037081,0.038606,0.041750,0.048219,0.061822");
			}
			fall_power(Power_X4) {
				values ("0.003306,0.001583,-0.000363,-0.004235,-0.011990,-0.027508", \
				        "0.003237,0.001560,-0.000387,-0.004227,-0.011963,-0.027412", \
				        "0.003202,0.001518,-0.000412,-0.004270,-0.011981,-0.027446", \
				        "0.003134,0.001491,-0.000461,-0.004307,-0.012034,-0.027552", \
				        "0.003316,0.001613,-0.000350,-0.004231,-0.011996,-0.027513", \
				        "0.004550,0.002659,0.000578,-0.003522,-0.011468,-0.027102", \
				        "0.008802,0.006585,0.004185,-0.000438,-0.009146,-0.025566", \
				        "0.019587,0.017015,0.014190,0.008802,-0.001215,-0.019546");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X4) {
				values ("0.002783,0.001097,-0.000832,-0.004676,-0.012395,-0.027851", \
				        "0.002789,0.001116,-0.000799,-0.004660,-0.012378,-0.027836", \
				        "0.002871,0.001186,-0.000749,-0.004615,-0.012339,-0.027781", \
				        "0.003188,0.001428,-0.000522,-0.004433,-0.012200,-0.027709", \
				        "0.004168,0.002267,0.000160,-0.003899,-0.011836,-0.027473", \
				        "0.006727,0.004596,0.002253,-0.002182,-0.010556,-0.026595", \
				        "0.012617,0.010229,0.007571,0.002580,-0.006685,-0.023763", \
				        "0.025076,0.022407,0.019488,0.013892,0.003490,-0.015531");
			}
			rise_power(Power_X4) {
				values ("0.006369,0.008066,0.010067,0.013983,0.021767,0.037290", \
				        "0.006366,0.008089,0.010044,0.013966,0.021763,0.037270", \
				        "0.006497,0.008166,0.010116,0.013991,0.021754,0.037285", \
				        "0.006895,0.008528,0.010422,0.014224,0.021918,0.037365", \
				        "0.007949,0.009500,0.011306,0.014994,0.022516,0.037759", \
				        "0.010494,0.011847,0.013502,0.017014,0.024246,0.039133", \
				        "0.016172,0.017260,0.018644,0.021720,0.028495,0.042790", \
				        "0.028514,0.029220,0.030207,0.032568,0.038292,0.051488");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X4) {
				values ("0.005774,0.004145,0.002150,-0.001702,-0.009406,-0.024854", \
				        "0.005738,0.004074,0.002140,-0.001714,-0.009430,-0.024852", \
				        "0.005781,0.004091,0.002180,-0.001682,-0.009404,-0.024852", \
				        "0.005969,0.004293,0.002367,-0.001530,-0.009302,-0.024796", \
				        "0.006783,0.004978,0.002965,-0.001038,-0.008934,-0.024566", \
				        "0.008933,0.006971,0.004789,0.000544,-0.007686,-0.023652", \
				        "0.014040,0.011866,0.009498,0.004884,-0.003941,-0.020738", \
				        "0.024990,0.022676,0.020111,0.015074,0.005472,-0.012634");
			}
			rise_power(Power_X4) {
				values ("0.007349,0.009078,0.011063,0.014984,0.022765,0.038283", \
				        "0.007264,0.008990,0.010970,0.014906,0.022717,0.038251", \
				        "0.007153,0.008883,0.010874,0.014809,0.022638,0.038200", \
				        "0.007110,0.008827,0.010810,0.014726,0.022553,0.038119", \
				        "0.007527,0.009159,0.011075,0.014920,0.022637,0.038144", \
				        "0.009200,0.010687,0.012419,0.016045,0.023502,0.038737", \
				        "0.013918,0.015040,0.016470,0.019624,0.026521,0.041113", \
				        "0.024486,0.025274,0.026275,0.028688,0.034470,0.047799");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI21_X1
 Cell Description	: Combinational cell (OAI21_X1) with drive strength X1
*******************************************************************************************/

cell (OAI21_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 6566.606375;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 1896.190000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 10340.550000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 2209.009000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 10703.250000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 2209.004000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 9993.793000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 1271.495000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 13909.560000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000450;
		fall_capacitance	: 0.000438;
		rise_capacitance	: 0.000462;
		fall_capacitance_range		(0.000376, 0.000505);
		rise_capacitance_range		(0.000398, 0.000559);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000001");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000564;
		fall_capacitance	: 0.000529;
		rise_capacitance	: 0.000599;
		fall_capacitance_range		(0.000451, 0.000646);
		rise_capacitance_range		(0.000499, 0.000746);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000006,0.000005,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000557;
		fall_capacitance	: 0.000551;
		rise_capacitance	: 0.000562;
		fall_capacitance_range		(0.000468, 0.000642);
		rise_capacitance_range		(0.000481, 0.000679);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000020,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000009,0.000008,0.000006,0.000005,0.000005,0.000004,0.000003,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(A & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.035620,0.038475,0.044368,0.055812,0.078147,0.122177", \
				        "0.038773,0.041713,0.047379,0.058811,0.081139,0.125213", \
				        "0.044198,0.047176,0.052970,0.064214,0.086469,0.130524", \
				        "0.053160,0.056414,0.062713,0.074574,0.096911,0.140956", \
				        "0.063713,0.067839,0.075558,0.089801,0.115212,0.160773", \
				        "0.071028,0.076847,0.087555,0.106730,0.139466,0.193984", \
				        "0.066158,0.074184,0.089223,0.116079,0.161445,0.234370", \
				        "0.030895,0.042240,0.063011,0.100373,0.163644,0.264921");
			}
			cell_rise(Timing_X1) {
				values ("0.052758,0.057668,0.067495,0.086989,0.125362,0.201473", \
				        "0.056417,0.061305,0.071061,0.090452,0.128868,0.205028", \
				        "0.064201,0.069079,0.078854,0.098100,0.136351,0.212405", \
				        "0.080612,0.085471,0.095093,0.114203,0.152118,0.227885", \
				        "0.110582,0.116468,0.127684,0.147780,0.184891,0.259870", \
				        "0.152893,0.160895,0.175775,0.202757,0.249376,0.326452", \
				        "0.217382,0.227247,0.246524,0.281521,0.343278,0.446325", \
				        "0.322370,0.335335,0.359326,0.403816,0.482571,0.616782");
			}
			fall_transition(Timing_X1) {
				values ("0.020159,0.022651,0.027682,0.037061,0.055648,0.093104", \
				        "0.020099,0.022590,0.027621,0.036991,0.055749,0.093193", \
				        "0.020112,0.022567,0.027554,0.036838,0.055629,0.093193", \
				        "0.023036,0.025185,0.029597,0.038031,0.055795,0.093117", \
				        "0.030961,0.033126,0.037481,0.045296,0.061030,0.094631", \
				        "0.046524,0.048860,0.053525,0.061871,0.077446,0.108216", \
				        "0.074208,0.077287,0.082920,0.092994,0.110906,0.142596", \
				        "0.122711,0.126498,0.134095,0.147360,0.170249,0.208439");
			}
			rise_transition(Timing_X1) {
				values ("0.047700,0.052903,0.063389,0.083686,0.122774,0.197222", \
				        "0.047702,0.052940,0.063444,0.083640,0.122780,0.197243", \
				        "0.047679,0.052944,0.063325,0.083694,0.122761,0.197232", \
				        "0.049030,0.053773,0.063668,0.083661,0.122773,0.197228", \
				        "0.063184,0.066497,0.073888,0.089364,0.123775,0.197227", \
				        "0.094158,0.098224,0.106155,0.120532,0.146046,0.203958", \
				        "0.138555,0.143853,0.153610,0.172383,0.205245,0.258630", \
				        "0.204694,0.210694,0.223052,0.246104,0.288521,0.361741");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.028985,0.031694,0.037260,0.048108,0.069897,0.113370", \
				        "0.032093,0.034883,0.040270,0.051136,0.072875,0.116393", \
				        "0.037374,0.040232,0.045699,0.056498,0.078252,0.121706", \
				        "0.044514,0.047959,0.054454,0.066504,0.088620,0.132164", \
				        "0.051153,0.055820,0.064404,0.079640,0.105917,0.151914", \
				        "0.052068,0.058888,0.071107,0.092256,0.127258,0.183567", \
				        "0.038273,0.047675,0.065049,0.095048,0.144047,0.220405", \
				        "-0.008264,0.005179,0.028846,0.070442,0.138741,0.245199");
			}
			cell_rise(Timing_X1) {
				values ("0.052043,0.056904,0.066639,0.086049,0.124354,0.200303", \
				        "0.055689,0.060567,0.070205,0.089561,0.127879,0.203845", \
				        "0.063486,0.068347,0.077968,0.097166,0.135350,0.211250", \
				        "0.079925,0.084751,0.094275,0.113259,0.151130,0.226713", \
				        "0.109621,0.115493,0.126730,0.146898,0.183953,0.258686", \
				        "0.151431,0.159383,0.174253,0.201310,0.248118,0.325298", \
				        "0.215035,0.224878,0.244150,0.279254,0.341242,0.444522", \
				        "0.318215,0.331352,0.355448,0.400147,0.479185,0.613638");
			}
			fall_transition(Timing_X1) {
				values ("0.014588,0.016988,0.021930,0.031287,0.050174,0.087581", \
				        "0.014598,0.017036,0.021973,0.031349,0.050174,0.087533", \
				        "0.015343,0.017643,0.022124,0.031372,0.050141,0.087612", \
				        "0.019297,0.021411,0.025729,0.033608,0.050714,0.087595", \
				        "0.027923,0.030024,0.034311,0.041874,0.057142,0.089738", \
				        "0.044008,0.046345,0.050889,0.059325,0.074518,0.104510", \
				        "0.072981,0.075774,0.081154,0.090970,0.108516,0.139794", \
				        "0.122359,0.125899,0.132963,0.145831,0.168378,0.206192");
			}
			rise_transition(Timing_X1) {
				values ("0.037129,0.041761,0.051050,0.069137,0.105194,0.177289", \
				        "0.037135,0.041756,0.050987,0.069209,0.105214,0.177282", \
				        "0.037122,0.041746,0.051039,0.069168,0.105179,0.177286", \
				        "0.038509,0.042601,0.051199,0.069130,0.105252,0.177262", \
				        "0.050897,0.054610,0.061350,0.075014,0.106306,0.177278", \
				        "0.071508,0.076536,0.085963,0.102041,0.128388,0.184067", \
				        "0.100968,0.108046,0.120523,0.142832,0.179746,0.237666", \
				        "0.149016,0.157497,0.173962,0.202771,0.252123,0.332456");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.024488,0.026561,0.030836,0.039236,0.055939,0.089251", \
				        "0.027895,0.029986,0.034100,0.042492,0.059204,0.092540", \
				        "0.034111,0.036421,0.040682,0.049013,0.065795,0.099129", \
				        "0.041761,0.044899,0.050680,0.060985,0.078992,0.112476", \
				        "0.048220,0.052695,0.060903,0.075307,0.099235,0.138059", \
				        "0.048499,0.055115,0.066955,0.087440,0.121111,0.173955", \
				        "0.033410,0.042544,0.059470,0.088710,0.136469,0.210516", \
				        "-0.015901,-0.002738,0.020372,0.061095,0.127907,0.231993");
			}
			cell_rise(Timing_X1) {
				values ("0.054507,0.059297,0.068953,0.088241,0.126408,0.202261", \
				        "0.058180,0.062962,0.072531,0.091794,0.129943,0.205795", \
				        "0.065984,0.070793,0.080324,0.099407,0.137443,0.213192", \
				        "0.082497,0.087180,0.096667,0.115548,0.153277,0.228711", \
				        "0.112684,0.118523,0.129436,0.149292,0.186229,0.260813", \
				        "0.155671,0.163328,0.178027,0.204676,0.250943,0.327642", \
				        "0.220626,0.230310,0.249163,0.283905,0.345350,0.447929", \
				        "0.326226,0.339131,0.362677,0.406765,0.485031,0.618787");
			}
			fall_transition(Timing_X1) {
				values ("0.012049,0.013963,0.017645,0.024707,0.038992,0.067395", \
				        "0.012076,0.014012,0.017662,0.024663,0.038983,0.067453", \
				        "0.013525,0.015044,0.018179,0.024843,0.038969,0.067376", \
				        "0.018903,0.020535,0.023635,0.029033,0.040447,0.067391", \
				        "0.028464,0.030232,0.033763,0.039980,0.051067,0.072500", \
				        "0.045306,0.047395,0.051480,0.058894,0.072079,0.095131", \
				        "0.075430,0.077788,0.082642,0.091619,0.107800,0.135773", \
				        "0.126569,0.129732,0.135929,0.147634,0.168604,0.204015");
			}
			rise_transition(Timing_X1) {
				values ("0.038055,0.042720,0.052085,0.070364,0.106471,0.178665", \
				        "0.038056,0.042700,0.052054,0.070364,0.106523,0.178666", \
				        "0.038050,0.042708,0.052118,0.070375,0.106484,0.178667", \
				        "0.039290,0.043469,0.052366,0.070326,0.106464,0.178663", \
				        "0.051491,0.055143,0.061903,0.075764,0.107410,0.178637", \
				        "0.072433,0.077368,0.086716,0.102745,0.128976,0.185118", \
				        "0.102160,0.109202,0.121586,0.143649,0.180339,0.238053", \
				        "0.150791,0.159013,0.175349,0.203794,0.252740,0.332672");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.019622,0.022331,0.027914,0.038906,0.060673,0.104125", \
				        "0.022789,0.025434,0.030905,0.041875,0.063682,0.107102", \
				        "0.028844,0.031826,0.037337,0.048120,0.069793,0.113164", \
				        "0.035431,0.039504,0.046954,0.060132,0.082385,0.125493", \
				        "0.040559,0.046089,0.056225,0.074111,0.103893,0.151155", \
				        "0.039927,0.047459,0.061199,0.085422,0.125624,0.189729", \
				        "0.024374,0.034449,0.053114,0.085883,0.140143,0.226623", \
				        "-0.026016,-0.012184,0.012854,0.056733,0.130091,0.247070");
			}
			cell_rise(Timing_X1) {
				values ("0.045163,0.051916,0.065387,0.092142,0.145368,0.251456", \
				        "0.048185,0.054939,0.068314,0.095091,0.148320,0.254485", \
				        "0.055002,0.061663,0.075046,0.101446,0.154514,0.260523", \
				        "0.069938,0.076513,0.089412,0.115461,0.167951,0.273531", \
				        "0.093224,0.101761,0.117561,0.145451,0.196793,0.301021", \
				        "0.127977,0.138331,0.158238,0.194156,0.255632,0.359730", \
				        "0.182807,0.196095,0.220550,0.265268,0.343195,0.473622", \
				        "0.274491,0.291171,0.322119,0.377523,0.474282,0.638739");
			}
			fall_transition(Timing_X1) {
				values ("0.014531,0.017060,0.021950,0.031363,0.050081,0.087624", \
				        "0.014337,0.016833,0.021689,0.031330,0.050061,0.087561", \
				        "0.017110,0.018836,0.022999,0.031326,0.050173,0.087557", \
				        "0.024203,0.026269,0.030275,0.036670,0.051397,0.087587", \
				        "0.036325,0.038746,0.043408,0.051363,0.065312,0.092322", \
				        "0.057062,0.060154,0.065836,0.075840,0.093205,0.122405", \
				        "0.093144,0.097270,0.104783,0.117984,0.140035,0.176752", \
				        "0.157076,0.162581,0.172999,0.190933,0.220433,0.267631");
			}
			rise_transition(Timing_X1) {
				values ("0.038665,0.044816,0.057066,0.081297,0.129828,0.226893", \
				        "0.038650,0.044798,0.057132,0.081275,0.129787,0.226902", \
				        "0.038337,0.044644,0.057152,0.081355,0.129821,0.226890", \
				        "0.041585,0.046722,0.057616,0.081177,0.129812,0.226900", \
				        "0.053920,0.058976,0.068546,0.086985,0.130170,0.226873", \
				        "0.072823,0.079072,0.090925,0.111953,0.148424,0.229657", \
				        "0.104341,0.111709,0.125490,0.151059,0.196695,0.272745", \
				        "0.162541,0.170176,0.185878,0.215216,0.269528,0.365080");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.025916,0.028843,0.034723,0.046150,0.068489,0.112467", \
				        "0.028885,0.031760,0.037653,0.049091,0.071426,0.115407", \
				        "0.035459,0.038192,0.043708,0.055042,0.077387,0.121274", \
				        "0.045037,0.048732,0.055542,0.067814,0.089820,0.133547", \
				        "0.054137,0.059129,0.068305,0.085070,0.113213,0.159053", \
				        "0.059662,0.066276,0.078594,0.100831,0.138805,0.200520", \
				        "0.054763,0.063489,0.079761,0.109202,0.159613,0.242223", \
				        "0.024922,0.036516,0.057814,0.096537,0.162991,0.272409");
			}
			cell_rise(Timing_X1) {
				values ("0.058328,0.065108,0.078603,0.105296,0.158469,0.264522", \
				        "0.061924,0.068597,0.082073,0.108806,0.162042,0.268209", \
				        "0.068464,0.075235,0.088596,0.115348,0.168628,0.274860", \
				        "0.080708,0.087440,0.100920,0.127494,0.180695,0.286931", \
				        "0.100334,0.108284,0.123403,0.151346,0.204255,0.310176", \
				        "0.130646,0.140343,0.158408,0.191584,0.251319,0.358473", \
				        "0.182235,0.193786,0.215997,0.256144,0.327130,0.451160", \
				        "0.266952,0.282682,0.310773,0.361527,0.448906,0.597587");
			}
			fall_transition(Timing_X1) {
				values ("0.020316,0.022843,0.027730,0.037003,0.055606,0.093190", \
				        "0.019986,0.022663,0.027522,0.037003,0.055659,0.093100", \
				        "0.020685,0.022950,0.027682,0.036762,0.055711,0.093116", \
				        "0.027558,0.029613,0.033398,0.040061,0.056152,0.093167", \
				        "0.039807,0.042195,0.046877,0.054511,0.068186,0.096595", \
				        "0.059848,0.062996,0.068856,0.078941,0.096303,0.125301", \
				        "0.093896,0.098028,0.105873,0.119283,0.141989,0.179402", \
				        "0.152367,0.158568,0.169334,0.187984,0.218416,0.267217");
			}
			rise_transition(Timing_X1) {
				values ("0.038659,0.044749,0.057060,0.081255,0.129813,0.226893", \
				        "0.038663,0.044772,0.057110,0.081281,0.129802,0.226876", \
				        "0.038662,0.044799,0.057060,0.081274,0.129818,0.226892", \
				        "0.040024,0.045661,0.057311,0.081301,0.129808,0.226859", \
				        "0.048804,0.054008,0.064203,0.084658,0.130024,0.226884", \
				        "0.064503,0.069908,0.080938,0.101729,0.141864,0.229007", \
				        "0.091100,0.096881,0.108509,0.130862,0.174304,0.257109", \
				        "0.137281,0.143685,0.156614,0.181195,0.228137,0.317766");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X1) {
				values ("0.003535,0.003772,0.004254,0.005229,0.007168,0.011047", \
				        "0.003528,0.003765,0.004248,0.005219,0.007162,0.011037", \
				        "0.003540,0.003777,0.004260,0.005228,0.007159,0.011042", \
				        "0.003597,0.003839,0.004314,0.005274,0.007199,0.011056", \
				        "0.003791,0.004032,0.004500,0.005433,0.007324,0.011159", \
				        "0.004299,0.004518,0.004964,0.005863,0.007709,0.011463", \
				        "0.005443,0.005627,0.006053,0.006903,0.008659,0.012284", \
				        "0.007900,0.008087,0.008457,0.009239,0.010869,0.014292");
			}
			fall_power(Power_X1) {
				values ("0.001744,0.001502,0.001015,0.000048,-0.001887,-0.005754", \
				        "0.001731,0.001485,0.001005,0.000043,-0.001887,-0.005751", \
				        "0.001720,0.001475,0.000998,0.000030,-0.001902,-0.005768", \
				        "0.001715,0.001478,0.000998,0.000027,-0.001910,-0.005784", \
				        "0.001737,0.001502,0.001017,0.000052,-0.001883,-0.005755", \
				        "0.001948,0.001688,0.001179,0.000178,-0.001788,-0.005685", \
				        "0.002742,0.002450,0.001878,0.000760,-0.001350,-0.005386", \
				        "0.004906,0.004563,0.003894,0.002615,0.000216,-0.004229");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X1) {
				values ("0.003298,0.003537,0.004020,0.004995,0.006933,0.010809", \
				        "0.003292,0.003531,0.004013,0.004986,0.006925,0.010802", \
				        "0.003297,0.003542,0.004024,0.004990,0.006925,0.010800", \
				        "0.003368,0.003604,0.004079,0.005038,0.006965,0.010822", \
				        "0.003571,0.003799,0.004264,0.005202,0.007093,0.010922", \
				        "0.004062,0.004285,0.004733,0.005634,0.007473,0.011225", \
				        "0.005196,0.005404,0.005822,0.006671,0.008424,0.012053", \
				        "0.007689,0.007858,0.008227,0.009006,0.010638,0.014050");
			}
			fall_power(Power_X1) {
				values ("0.000692,0.000449,-0.000043,-0.001013,-0.002948,-0.006815", \
				        "0.000680,0.000447,-0.000049,-0.001000,-0.002943,-0.006810", \
				        "0.000667,0.000429,-0.000058,-0.001023,-0.002954,-0.006823", \
				        "0.000660,0.000419,-0.000060,-0.001032,-0.002965,-0.006842", \
				        "0.000695,0.000451,-0.000034,-0.001002,-0.002939,-0.006808", \
				        "0.000962,0.000694,0.000169,-0.000849,-0.002827,-0.006736", \
				        "0.001879,0.001573,0.000964,-0.000186,-0.002345,-0.006422", \
				        "0.004207,0.003843,0.003138,0.001795,-0.000671,-0.005197");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2";

			rise_power(Power_X1) {
				values ("0.003378,0.003620,0.004091,0.005077,0.007016,0.010899", \
				        "0.003376,0.003613,0.004100,0.005070,0.007012,0.010888", \
				        "0.003386,0.003628,0.004108,0.005076,0.007011,0.010885", \
				        "0.003464,0.003689,0.004171,0.005128,0.007052,0.010910", \
				        "0.003655,0.003893,0.004360,0.005297,0.007186,0.011016", \
				        "0.004166,0.004383,0.004833,0.005742,0.007583,0.011337", \
				        "0.005309,0.005508,0.005928,0.006786,0.008550,0.012189", \
				        "0.007811,0.007997,0.008367,0.009150,0.010786,0.014222");
			}
			fall_power(Power_X1) {
				values ("0.000908,0.000662,0.000170,-0.000802,-0.002731,-0.006595", \
				        "0.000894,0.000654,0.000167,-0.000796,-0.002728,-0.006594", \
				        "0.000881,0.000630,0.000156,-0.000807,-0.002735,-0.006600", \
				        "0.000867,0.000635,0.000159,-0.000810,-0.002744,-0.006613", \
				        "0.000918,0.000676,0.000187,-0.000778,-0.002710,-0.006580", \
				        "0.001206,0.000930,0.000411,-0.000613,-0.002599,-0.006507", \
				        "0.002148,0.001841,0.001240,0.000085,-0.002080,-0.006172", \
				        "0.004535,0.004166,0.003463,0.002128,-0.000350,-0.004873");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X1) {
				values ("0.000645,0.000409,-0.000077,-0.001040,-0.002964,-0.006831", \
				        "0.000653,0.000414,-0.000069,-0.001027,-0.002958,-0.006823", \
				        "0.000671,0.000428,-0.000050,-0.001015,-0.002948,-0.006814", \
				        "0.000738,0.000497,0.000001,-0.000976,-0.002919,-0.006794", \
				        "0.000960,0.000686,0.000161,-0.000853,-0.002835,-0.006740", \
				        "0.001522,0.001222,0.000645,-0.000457,-0.002540,-0.006541", \
				        "0.002848,0.002511,0.001861,0.000634,-0.001655,-0.005897", \
				        "0.005679,0.005312,0.004597,0.003224,0.000662,-0.004029");
			}
			rise_power(Power_X1) {
				values ("0.001815,0.002064,0.002547,0.003524,0.005465,0.009345", \
				        "0.001809,0.002060,0.002551,0.003522,0.005466,0.009339", \
				        "0.001836,0.002078,0.002564,0.003529,0.005464,0.009337", \
				        "0.001920,0.002156,0.002628,0.003583,0.005502,0.009362", \
				        "0.002153,0.002373,0.002832,0.003754,0.005640,0.009458", \
				        "0.002690,0.002893,0.003321,0.004207,0.006026,0.009766", \
				        "0.003925,0.004102,0.004463,0.005262,0.006979,0.010585", \
				        "0.006690,0.006805,0.007068,0.007697,0.009180,0.012544");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X1) {
				values ("0.001669,0.001425,0.000934,-0.000024,-0.001958,-0.005815", \
				        "0.001657,0.001416,0.000929,-0.000029,-0.001958,-0.005817", \
				        "0.001657,0.001420,0.000934,-0.000025,-0.001958,-0.005810", \
				        "0.001696,0.001451,0.000971,0.000000,-0.001937,-0.005804", \
				        "0.001840,0.001591,0.001094,0.000101,-0.001864,-0.005757", \
				        "0.002290,0.002015,0.001484,0.000439,-0.001591,-0.005569", \
				        "0.003396,0.003101,0.002522,0.001392,-0.000782,-0.004930", \
				        "0.005876,0.005547,0.004910,0.003689,0.001331,-0.003122");
			}
			rise_power(Power_X1) {
				values ("0.002060,0.002312,0.002801,0.003777,0.005719,0.009598", \
				        "0.002045,0.002285,0.002778,0.003757,0.005703,0.009579", \
				        "0.002029,0.002271,0.002763,0.003737,0.005686,0.009570", \
				        "0.002026,0.002274,0.002760,0.003737,0.005679,0.009562", \
				        "0.002093,0.002331,0.002811,0.003773,0.005702,0.009573", \
				        "0.002406,0.002619,0.003077,0.003996,0.005874,0.009693", \
				        "0.003372,0.003546,0.003932,0.004752,0.006506,0.010197", \
				        "0.005683,0.005815,0.006088,0.006734,0.008244,0.011644");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI21_X2
 Cell Description	: Combinational cell (OAI21_X2) with drive strength X2
*******************************************************************************************/

cell (OAI21_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 13669.022750;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 3946.050000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 21540.780000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 4596.544000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 22257.790000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 4596.539000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 20799.020000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 2644.039000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 28971.420000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000869;
		fall_capacitance	: 0.000840;
		rise_capacitance	: 0.000899;
		fall_capacitance_range		(0.000727, 0.000995);
		rise_capacitance_range		(0.000754, 0.001088);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000022,0.000016,0.000012,0.000010,0.000007,0.000005,0.000001");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001025;
		fall_capacitance	: 0.000950;
		rise_capacitance	: 0.001100;
		fall_capacitance_range		(0.000816, 0.001212);
		rise_capacitance_range		(0.000912, 0.001392);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000002,0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000023,0.000017,0.000013,0.000010,0.000008,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "!A & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000017,0.000012,0.000008,0.000005,0.000002,0.000001,-0.000002");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001059;
		fall_capacitance	: 0.001052;
		rise_capacitance	: 0.001066;
		fall_capacitance_range		(0.000854, 0.001247);
		rise_capacitance_range		(0.000909, 0.001306);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000007,0.000005,0.000003,0.000002,0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000074,0.000052,0.000035,0.000024,0.000017,0.000012,0.000007,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000017,0.000014,0.000011,0.000009,0.000008,0.000006,0.000003");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(A & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031085,0.035344,0.040992,0.052057,0.073769,0.116661", \
				        "0.034157,0.038450,0.043983,0.055025,0.076742,0.119694", \
				        "0.039457,0.043785,0.049292,0.060288,0.082021,0.124955", \
				        "0.047427,0.052353,0.058627,0.070323,0.092091,0.135160", \
				        "0.055943,0.062427,0.070278,0.084576,0.109773,0.154688", \
				        "0.060209,0.069219,0.080127,0.099526,0.132439,0.186594", \
				        "0.050935,0.063682,0.078982,0.106215,0.151788,0.224543", \
				        "0.010568,0.027988,0.049179,0.086957,0.150352,0.251373");
			}
			cell_rise(Timing_X2) {
				values ("0.045456,0.052583,0.062087,0.080803,0.117812,0.191226", \
				        "0.049120,0.056250,0.065697,0.084398,0.121399,0.194795", \
				        "0.056931,0.064014,0.073409,0.091998,0.128856,0.202206", \
				        "0.073687,0.080556,0.089818,0.108135,0.144648,0.217633", \
				        "0.101069,0.110260,0.121559,0.141626,0.177560,0.249673", \
				        "0.140523,0.152370,0.167329,0.194246,0.240630,0.316366", \
				        "0.201298,0.216540,0.235546,0.270373,0.331395,0.433153", \
				        "0.302204,0.321513,0.345635,0.389650,0.467190,0.599185");
			}
			fall_transition(Timing_X2) {
				values ("0.016832,0.020449,0.025143,0.034286,0.052602,0.089436", \
				        "0.016786,0.020380,0.025102,0.034274,0.052650,0.089443", \
				        "0.017057,0.020516,0.025036,0.034194,0.052614,0.089399", \
				        "0.020348,0.023491,0.027847,0.035676,0.052903,0.089399", \
				        "0.028301,0.031436,0.035621,0.043260,0.058742,0.091270", \
				        "0.043341,0.046982,0.051609,0.059975,0.075273,0.105296", \
				        "0.070524,0.074864,0.080622,0.090707,0.108452,0.139644", \
				        "0.117117,0.123241,0.130754,0.144166,0.167086,0.204887");
			}
			rise_transition(Timing_X2) {
				values ("0.040014,0.047549,0.057497,0.076796,0.113839,0.184865", \
				        "0.040005,0.047556,0.057542,0.076782,0.113838,0.184849", \
				        "0.039978,0.047510,0.057499,0.076815,0.113847,0.184842", \
				        "0.042491,0.049025,0.058214,0.076787,0.113842,0.184852", \
				        "0.058439,0.063355,0.070000,0.083917,0.115531,0.184832", \
				        "0.086497,0.092924,0.100706,0.115219,0.139805,0.193195", \
				        "0.126506,0.134537,0.144533,0.163464,0.196239,0.249465", \
				        "0.188275,0.197444,0.209848,0.233012,0.275557,0.348516");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025511,0.029490,0.034868,0.045601,0.066812,0.109206", \
				        "0.028564,0.032621,0.037962,0.048596,0.069865,0.112296", \
				        "0.033506,0.037824,0.043094,0.053751,0.075014,0.117502", \
				        "0.039654,0.044918,0.051387,0.063191,0.085026,0.127700", \
				        "0.044457,0.051799,0.060484,0.075707,0.101830,0.147176", \
				        "0.042935,0.053398,0.065747,0.087050,0.121952,0.177728", \
				        "0.025903,0.040618,0.058023,0.088074,0.136896,0.212668", \
				        "-0.024435,-0.004083,0.019858,0.061286,0.129160,0.234692");
			}
			cell_rise(Timing_X2) {
				values ("0.044778,0.051857,0.061277,0.079961,0.116856,0.190109", \
				        "0.048444,0.055527,0.064837,0.083545,0.120436,0.193670", \
				        "0.056254,0.063309,0.072585,0.091101,0.127921,0.201098", \
				        "0.073024,0.079880,0.089013,0.107258,0.143675,0.216498", \
				        "0.100042,0.109257,0.120499,0.140650,0.176624,0.248536", \
				        "0.139039,0.150855,0.165828,0.192809,0.239371,0.315262", \
				        "0.198586,0.214221,0.233165,0.268130,0.329372,0.431354", \
				        "0.297966,0.317514,0.341765,0.386018,0.463856,0.596099");
			}
			fall_transition(Timing_X2) {
				values ("0.012245,0.015820,0.020384,0.029637,0.048037,0.084690", \
				        "0.012272,0.015855,0.020487,0.029627,0.048001,0.084763", \
				        "0.013347,0.016523,0.020768,0.029644,0.047953,0.084670", \
				        "0.017422,0.020385,0.024396,0.032038,0.048665,0.084754", \
				        "0.025827,0.028951,0.033021,0.040517,0.055453,0.087151", \
				        "0.041427,0.044980,0.049631,0.057760,0.072827,0.102185", \
				        "0.069752,0.073746,0.079252,0.089139,0.106577,0.137360", \
				        "0.117163,0.122902,0.129886,0.142975,0.165563,0.202988");
			}
			rise_transition(Timing_X2) {
				values ("0.031224,0.037898,0.046784,0.064305,0.099109,0.168599", \
				        "0.031220,0.037879,0.046904,0.064406,0.099126,0.168584", \
				        "0.031201,0.037894,0.046906,0.064403,0.099082,0.168585", \
				        "0.033817,0.039463,0.047565,0.064289,0.099127,0.168625", \
				        "0.046580,0.052156,0.059082,0.071554,0.100858,0.168620", \
				        "0.065267,0.073133,0.082558,0.098710,0.124850,0.177004", \
				        "0.093057,0.103274,0.115930,0.138017,0.174665,0.232053", \
				        "0.138838,0.151893,0.168055,0.196531,0.245193,0.324380");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021739,0.024811,0.028881,0.037074,0.053380,0.085947", \
				        "0.025108,0.028209,0.032275,0.040449,0.056777,0.089322", \
				        "0.030846,0.034399,0.038683,0.046926,0.063271,0.095858", \
				        "0.037295,0.042183,0.047981,0.058375,0.076260,0.109015", \
				        "0.041870,0.048935,0.057215,0.071718,0.095649,0.134195", \
				        "0.039763,0.049897,0.061891,0.082498,0.116198,0.168672", \
				        "0.021367,0.035746,0.052745,0.082043,0.129629,0.203209", \
				        "-0.031683,-0.011810,0.011636,0.052184,0.118671,0.221922");
			}
			cell_rise(Timing_X2) {
				values ("0.047113,0.054131,0.063453,0.082038,0.118832,0.191990", \
				        "0.050786,0.057801,0.067019,0.085593,0.122390,0.195570", \
				        "0.058670,0.065622,0.074807,0.093233,0.129896,0.202960", \
				        "0.075377,0.082197,0.091282,0.109415,0.145714,0.218404", \
				        "0.103268,0.112195,0.123220,0.143006,0.178794,0.250558", \
				        "0.143229,0.154829,0.169468,0.196120,0.242170,0.317537", \
				        "0.204508,0.219585,0.238190,0.272693,0.333393,0.434758", \
				        "0.306151,0.325038,0.348986,0.392475,0.469606,0.601294");
			}
			fall_transition(Timing_X2) {
				values ("0.010109,0.012913,0.016246,0.023288,0.037203,0.065129", \
				        "0.010218,0.012915,0.016314,0.023256,0.037259,0.065085", \
				        "0.012155,0.014285,0.017250,0.023512,0.037206,0.065119", \
				        "0.017370,0.019715,0.022590,0.027955,0.038987,0.065126", \
				        "0.026539,0.029228,0.032765,0.038822,0.049779,0.070757", \
				        "0.042929,0.046051,0.050112,0.057544,0.070667,0.093338", \
				        "0.072333,0.075827,0.080674,0.089653,0.105821,0.133508", \
				        "0.121781,0.126643,0.132915,0.144794,0.165790,0.200909");
			}
			rise_transition(Timing_X2) {
				values ("0.032106,0.038820,0.047907,0.065521,0.100312,0.169919", \
				        "0.032107,0.038844,0.047840,0.065467,0.100281,0.169913", \
				        "0.032099,0.038827,0.047904,0.065527,0.100307,0.169925", \
				        "0.034449,0.040195,0.048421,0.065513,0.100308,0.169903", \
				        "0.047176,0.052698,0.059423,0.072256,0.101917,0.169930", \
				        "0.066201,0.073948,0.083258,0.099336,0.125258,0.177979", \
				        "0.094132,0.104348,0.116901,0.138743,0.175200,0.232330", \
				        "0.140617,0.153526,0.169331,0.197507,0.245692,0.324439");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.017327,0.021377,0.026807,0.037494,0.058746,0.101122", \
				        "0.020535,0.024411,0.029820,0.040517,0.061737,0.104111", \
				        "0.025968,0.030618,0.036238,0.046731,0.067908,0.110077", \
				        "0.031341,0.037683,0.045202,0.058372,0.080419,0.122457", \
				        "0.034784,0.043369,0.053563,0.071463,0.101163,0.148129", \
				        "0.032015,0.043581,0.057413,0.081629,0.121697,0.185398", \
				        "0.013049,0.029008,0.047692,0.080452,0.134585,0.220405", \
				        "-0.041015,-0.020186,0.005065,0.048982,0.122101,0.238190");
			}
			cell_rise(Timing_X2) {
				values ("0.039327,0.049283,0.062428,0.088584,0.140571,0.244226", \
				        "0.042376,0.052238,0.065410,0.091494,0.143505,0.247209", \
				        "0.049269,0.058978,0.071990,0.097827,0.149665,0.253281", \
				        "0.063688,0.073855,0.086483,0.111860,0.163079,0.266182", \
				        "0.085164,0.098053,0.113888,0.141787,0.192010,0.293719", \
				        "0.117583,0.133638,0.153462,0.189186,0.250248,0.352614", \
				        "0.169831,0.190167,0.214668,0.258966,0.336204,0.465297", \
				        "0.258707,0.283755,0.314775,0.369899,0.465817,0.628175");
			}
			fall_transition(Timing_X2) {
				values ("0.012113,0.015896,0.020373,0.029642,0.048043,0.084773", \
				        "0.012179,0.015687,0.020226,0.029602,0.048030,0.084705", \
				        "0.015496,0.018077,0.021884,0.029835,0.048036,0.084776", \
				        "0.022282,0.025377,0.029287,0.035651,0.049568,0.084762", \
				        "0.033905,0.037556,0.042270,0.050087,0.063918,0.090133", \
				        "0.053964,0.058652,0.064473,0.074439,0.091629,0.120511", \
				        "0.088791,0.095188,0.102889,0.116009,0.137986,0.174258", \
				        "0.151178,0.159825,0.170261,0.188221,0.217677,0.264496");
			}
			rise_transition(Timing_X2) {
				values ("0.032462,0.041474,0.053448,0.077177,0.124573,0.219383", \
				        "0.032454,0.041474,0.053558,0.077177,0.124570,0.219360", \
				        "0.032346,0.041365,0.053533,0.077152,0.124491,0.219384", \
				        "0.037085,0.044044,0.054573,0.077120,0.124571,0.219382", \
				        "0.048810,0.056555,0.066173,0.083732,0.125191,0.219375", \
				        "0.066533,0.076048,0.087793,0.108747,0.144624,0.222878", \
				        "0.097533,0.108044,0.121805,0.147104,0.192227,0.267487", \
				        "0.154497,0.166312,0.181678,0.210603,0.264053,0.358285");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022527,0.026843,0.032552,0.043590,0.065257,0.108136", \
				        "0.025508,0.029720,0.035400,0.046522,0.068200,0.111012", \
				        "0.031968,0.036177,0.041623,0.052610,0.074226,0.116918", \
				        "0.039994,0.045717,0.052553,0.065017,0.086655,0.129197", \
				        "0.047100,0.054816,0.064205,0.080911,0.109197,0.154771", \
				        "0.050046,0.060288,0.072769,0.095198,0.133150,0.194707", \
				        "0.041812,0.055356,0.071820,0.101420,0.151821,0.234097", \
				        "0.007934,0.025718,0.047268,0.086067,0.152433,0.261262");
			}
			cell_rise(Timing_X2) {
				values ("0.049951,0.059859,0.073010,0.099104,0.151070,0.254718", \
				        "0.053402,0.063259,0.076524,0.102654,0.154612,0.258342", \
				        "0.059754,0.069646,0.082678,0.108834,0.160939,0.264707", \
				        "0.071553,0.081660,0.094850,0.120798,0.172701,0.276440", \
				        "0.089565,0.101624,0.116726,0.144516,0.196299,0.299720", \
				        "0.118760,0.133183,0.151169,0.184098,0.243089,0.348288", \
				        "0.167866,0.186003,0.208048,0.247956,0.318087,0.440269", \
				        "0.249335,0.273058,0.301284,0.351886,0.438535,0.585246");
			}
			fall_transition(Timing_X2) {
				values ("0.016932,0.020613,0.025200,0.034282,0.052617,0.089389", \
				        "0.016551,0.020413,0.025051,0.034266,0.052657,0.089382", \
				        "0.018197,0.021278,0.025525,0.034167,0.052665,0.089436", \
				        "0.025180,0.028140,0.031782,0.038290,0.053510,0.089450", \
				        "0.036768,0.040438,0.045099,0.052865,0.066368,0.093615", \
				        "0.055966,0.060761,0.066567,0.076831,0.094205,0.122943", \
				        "0.088512,0.095149,0.103079,0.116537,0.139215,0.176410", \
				        "0.145283,0.154852,0.165859,0.184600,0.215016,0.263422");
			}
			rise_transition(Timing_X2) {
				values ("0.032465,0.041456,0.053450,0.077097,0.124534,0.219363", \
				        "0.032461,0.041464,0.053520,0.077143,0.124540,0.219382", \
				        "0.032498,0.041462,0.053439,0.077121,0.124556,0.219376", \
				        "0.034880,0.042785,0.054003,0.077179,0.124535,0.219361", \
				        "0.043773,0.051458,0.061617,0.081216,0.125012,0.219381", \
				        "0.058677,0.066717,0.077662,0.098147,0.137690,0.222012", \
				        "0.084217,0.092882,0.104413,0.126530,0.169384,0.250935", \
				        "0.128843,0.138656,0.151557,0.176021,0.222359,0.310559");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X2) {
				values ("0.006604,0.007336,0.008301,0.010245,0.014129,0.021888", \
				        "0.006594,0.007325,0.008297,0.010233,0.014114,0.021879", \
				        "0.006630,0.007359,0.008306,0.010246,0.014121,0.021867", \
				        "0.006785,0.007491,0.008436,0.010355,0.014206,0.021924", \
				        "0.007220,0.007905,0.008843,0.010698,0.014482,0.022132", \
				        "0.008287,0.008951,0.009825,0.011632,0.015289,0.022772", \
				        "0.010694,0.011309,0.012123,0.013806,0.017297,0.024510", \
				        "0.015897,0.016442,0.017183,0.018721,0.021935,0.028727");
			}
			fall_power(Power_X2) {
				values ("0.002920,0.002202,0.001228,-0.000700,-0.004571,-0.012313", \
				        "0.002907,0.002181,0.001212,-0.000711,-0.004576,-0.012311", \
				        "0.002890,0.002176,0.001191,-0.000736,-0.004593,-0.012340", \
				        "0.002893,0.002162,0.001202,-0.000734,-0.004607,-0.012372", \
				        "0.002949,0.002223,0.001257,-0.000679,-0.004551,-0.012291", \
				        "0.003483,0.002697,0.001644,-0.000370,-0.004343,-0.012153", \
				        "0.005297,0.004383,0.003206,0.000941,-0.003345,-0.011478", \
				        "0.009986,0.008929,0.007567,0.004941,0.000046,-0.008943");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X2) {
				values ("0.006131,0.006852,0.007821,0.009764,0.013645,0.021404", \
				        "0.006123,0.006845,0.007809,0.009749,0.013631,0.021401", \
				        "0.006152,0.006865,0.007829,0.009759,0.013636,0.021387", \
				        "0.006307,0.007007,0.007958,0.009869,0.013711,0.021441", \
				        "0.006740,0.007424,0.008356,0.010220,0.013998,0.021427", \
				        "0.007808,0.008463,0.009350,0.011144,0.014809,0.022474", \
				        "0.010246,0.010831,0.011652,0.013339,0.016819,0.023419", \
				        "0.015481,0.015974,0.016707,0.018252,0.021466,0.028454");
			}
			fall_power(Power_X2) {
				values ("0.001234,0.000503,-0.000476,-0.002415,-0.006281,-0.014018", \
				        "0.001205,0.000485,-0.000484,-0.002415,-0.006281,-0.014011", \
				        "0.001180,0.000461,-0.000506,-0.002437,-0.006297,-0.014041", \
				        "0.001155,0.000449,-0.000518,-0.002449,-0.006309,-0.014074", \
				        "0.001281,0.000540,-0.000434,-0.002379,-0.006254,-0.014002", \
				        "0.001930,0.001107,0.000042,-0.002024,-0.006014,-0.013836", \
				        "0.004000,0.003024,0.001783,-0.000549,-0.004934,-0.013136", \
				        "0.008968,0.007836,0.006393,0.003673,-0.001353,-0.010483");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2";

			rise_power(Power_X2) {
				values ("0.006281,0.007008,0.007985,0.009929,0.013817,0.021572", \
				        "0.006273,0.007011,0.007975,0.009918,0.013795,0.021562", \
				        "0.006315,0.007047,0.008002,0.009931,0.013805,0.021567", \
				        "0.006474,0.007190,0.008131,0.010041,0.013893,0.021615", \
				        "0.006925,0.007608,0.008545,0.010412,0.014189,0.021839", \
				        "0.008006,0.008661,0.009545,0.011351,0.015028,0.022511", \
				        "0.010434,0.011037,0.011864,0.013567,0.017068,0.024306", \
				        "0.015740,0.016236,0.016990,0.018523,0.021756,0.028594");
			}
			fall_power(Power_X2) {
				values ("0.001603,0.000869,-0.000087,-0.002029,-0.005892,-0.013629", \
				        "0.001583,0.000858,-0.000104,-0.002034,-0.005903,-0.013632", \
				        "0.001545,0.000839,-0.000120,-0.002054,-0.005911,-0.013647", \
				        "0.001550,0.000830,-0.000121,-0.002052,-0.005914,-0.013660", \
				        "0.001681,0.000938,-0.000042,-0.001981,-0.005851,-0.013587", \
				        "0.002358,0.001547,0.000470,-0.001594,-0.005593,-0.013431", \
				        "0.004474,0.003506,0.002282,-0.000061,-0.004451,-0.012680", \
				        "0.009537,0.008444,0.007014,0.004292,-0.000746,-0.009898");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X2) {
				values ("0.001157,0.000429,-0.000535,-0.002458,-0.006319,-0.014036", \
				        "0.001161,0.000443,-0.000520,-0.002448,-0.006310,-0.014034", \
				        "0.001199,0.000473,-0.000485,-0.002420,-0.006287,-0.014004", \
				        "0.001348,0.000598,-0.000377,-0.002336,-0.006232,-0.013949", \
				        "0.001837,0.001001,-0.000041,-0.002075,-0.006048,-0.013845", \
				        "0.003058,0.002127,0.000964,-0.001257,-0.005438,-0.013447", \
				        "0.005822,0.004798,0.003494,0.001022,-0.003599,-0.012095", \
				        "0.011730,0.010609,0.009156,0.006396,0.001240,-0.008301");
			}
			rise_power(Power_X2) {
				values ("0.003505,0.004240,0.005221,0.007171,0.011061,0.018816", \
				        "0.003497,0.004228,0.005212,0.007165,0.011050,0.018808", \
				        "0.003554,0.004276,0.005242,0.007185,0.011054,0.018811", \
				        "0.003730,0.004433,0.005389,0.007286,0.011128,0.018852", \
				        "0.004225,0.004888,0.005804,0.007657,0.011420,0.019046", \
				        "0.005374,0.005979,0.006830,0.008589,0.012220,0.019691", \
				        "0.008004,0.008485,0.009204,0.010787,0.014189,0.021390", \
				        "0.013791,0.014107,0.014619,0.015829,0.018773,0.025450");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X2) {
				values ("0.002782,0.002047,0.001074,-0.000850,-0.004711,-0.012438", \
				        "0.002762,0.002042,0.001068,-0.000857,-0.004715,-0.012434", \
				        "0.002783,0.002030,0.001083,-0.000845,-0.004712,-0.012434", \
				        "0.002861,0.002131,0.001161,-0.000781,-0.004665,-0.012409", \
				        "0.003193,0.002430,0.001430,-0.000562,-0.004508,-0.012307", \
				        "0.004147,0.003345,0.002272,0.000160,-0.003920,-0.011897", \
				        "0.006543,0.005650,0.004465,0.002182,-0.002189,-0.010533", \
				        "0.011719,0.010746,0.009462,0.006967,0.002226,-0.006761");
			}
			rise_power(Power_X2) {
				values ("0.004001,0.004743,0.005726,0.007678,0.011563,0.019315", \
				        "0.003972,0.004700,0.005689,0.007645,0.011534,0.019293", \
				        "0.003948,0.004682,0.005658,0.007616,0.011513,0.019284", \
				        "0.003960,0.004677,0.005665,0.007611,0.011499,0.019270", \
				        "0.004134,0.004842,0.005793,0.007706,0.011564,0.019295", \
				        "0.004885,0.005525,0.006407,0.008227,0.011965,0.019569", \
				        "0.006992,0.007509,0.008244,0.009857,0.013348,0.020665", \
				        "0.011888,0.012238,0.012767,0.014018,0.016979,0.023739");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI21_X4
 Cell Description	: Combinational cell (OAI21_X4) with drive strength X4
*******************************************************************************************/

cell (OAI21_X4) {

	area               	: 1.862000;

	cell_leakage_power 	: 27361.942125;

	leakage_power () {
		when      	: "!A & !B1 & !B2";
		value      	: 7893.358000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2";
		value      	: 43081.490000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2";
		value      	: 9194.343000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2";
		value      	: 44577.680000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2";
		value      	: 9194.348000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2";
		value      	: 41660.120000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2";
		value      	: 5289.338000;
	}
	leakage_power () {
		when      	: "A & B1 & B2";
		value      	: 58004.860000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001660;
		fall_capacitance	: 0.001602;
		rise_capacitance	: 0.001719;
		fall_capacitance_range		(0.001355, 0.001939);
		rise_capacitance_range		(0.001406, 0.002109);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000072,0.000050,0.000036,0.000027,0.000021,0.000016,0.000011,0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002111;
		fall_capacitance	: 0.001967;
		rise_capacitance	: 0.002255;
		fall_capacitance_range		(0.001721, 0.002519);
		rise_capacitance_range		(0.001827, 0.002840);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000024,0.000014,0.000008,0.000003,0.000000,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000047,0.000034,0.000026,0.000021,0.000017,0.000013,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000042,0.000033,0.000024,0.000017,0.000010,0.000005,0.000001,-0.000003");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002041;
		fall_capacitance	: 0.002033;
		rise_capacitance	: 0.002048;
		fall_capacitance_range		(0.001789, 0.002423);
		rise_capacitance_range		(0.001733, 0.002522);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000019,0.000012,0.000007,0.000004,0.000002,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000147,0.000100,0.000065,0.000043,0.000029,0.000018,0.000009,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000038,0.000029,0.000023,0.000020,0.000016,0.000012,0.000006");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(A & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.028928,0.033995,0.039724,0.050818,0.072582,0.115567", \
				        "0.031951,0.036978,0.042606,0.053800,0.075600,0.118621", \
				        "0.037210,0.042332,0.047820,0.058866,0.080677,0.123758", \
				        "0.044775,0.050689,0.056991,0.068701,0.090766,0.133909", \
				        "0.052567,0.060366,0.068378,0.082858,0.108265,0.153391", \
				        "0.055761,0.066635,0.077800,0.097438,0.130626,0.185104", \
				        "0.045428,0.060576,0.076150,0.103695,0.149653,0.222767", \
				        "0.003849,0.024832,0.046236,0.084383,0.148153,0.249497");
			}
			cell_rise(Timing_X4) {
				values ("0.041129,0.049394,0.058725,0.077162,0.113511,0.185751", \
				        "0.044817,0.053009,0.062373,0.080766,0.117171,0.189380", \
				        "0.052673,0.060842,0.070080,0.088357,0.124674,0.196779", \
				        "0.069350,0.077439,0.086448,0.104478,0.140376,0.212149", \
				        "0.095026,0.106004,0.117462,0.137736,0.173262,0.244119", \
				        "0.132460,0.146557,0.161666,0.188794,0.235340,0.310875", \
				        "0.190657,0.208766,0.227906,0.262884,0.323955,0.425565", \
				        "0.287969,0.310904,0.335300,0.379445,0.456977,0.588546");
			}
			fall_transition(Timing_X4) {
				values ("0.015312,0.019526,0.024082,0.033281,0.051666,0.088596", \
				        "0.015238,0.019470,0.024091,0.033259,0.051698,0.088575", \
				        "0.015658,0.019619,0.024035,0.033215,0.051662,0.088567", \
				        "0.019091,0.022732,0.026888,0.034728,0.051954,0.088566", \
				        "0.026942,0.030627,0.034702,0.042307,0.057928,0.090532", \
				        "0.041631,0.045977,0.050694,0.058951,0.074436,0.104594", \
				        "0.068088,0.073468,0.079340,0.089590,0.107561,0.138865", \
				        "0.113411,0.120920,0.128711,0.142460,0.165722,0.203844");
			}
			rise_transition(Timing_X4) {
				values ("0.036067,0.044662,0.054340,0.073316,0.109649,0.179480", \
				        "0.036059,0.044709,0.054415,0.073320,0.109672,0.179480", \
				        "0.035990,0.044684,0.054413,0.073349,0.109659,0.179470", \
				        "0.039489,0.046709,0.055348,0.073366,0.109666,0.179472", \
				        "0.056142,0.061921,0.068207,0.081607,0.111768,0.179474", \
				        "0.083002,0.090436,0.098338,0.112772,0.137219,0.188790", \
				        "0.121479,0.130894,0.141020,0.159900,0.192786,0.245969", \
				        "0.182499,0.193251,0.205449,0.228602,0.270941,0.343620");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & !B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023428,0.028139,0.033504,0.044218,0.065501,0.107964", \
				        "0.026433,0.031152,0.036392,0.047048,0.068357,0.110910", \
				        "0.031128,0.036279,0.041555,0.052238,0.073586,0.116134", \
				        "0.036635,0.043049,0.049607,0.061537,0.083592,0.126314", \
				        "0.040392,0.049351,0.058274,0.073800,0.100137,0.145719", \
				        "0.037435,0.050218,0.062889,0.084600,0.119887,0.176035", \
				        "0.018982,0.036771,0.054563,0.085115,0.134411,0.210624", \
				        "-0.032865,-0.008294,0.016056,0.058041,0.126473,0.232450");
			}
			cell_rise(Timing_X4) {
				values ("0.040476,0.048683,0.057952,0.076323,0.112596,0.184641", \
				        "0.044173,0.052322,0.061572,0.079925,0.116227,0.188280", \
				        "0.052031,0.060141,0.069286,0.087513,0.123732,0.195683", \
				        "0.068666,0.076793,0.085752,0.103637,0.139434,0.211045", \
				        "0.093956,0.105000,0.116474,0.136805,0.172407,0.243042", \
				        "0.130908,0.145039,0.160105,0.187352,0.234116,0.309798", \
				        "0.188161,0.206442,0.225536,0.260660,0.321957,0.423794", \
				        "0.283650,0.306867,0.331403,0.375843,0.453684,0.585512");
			}
			fall_transition(Timing_X4) {
				values ("0.010782,0.014897,0.019440,0.028699,0.047135,0.083969", \
				        "0.010869,0.014933,0.019486,0.028689,0.047060,0.083878", \
				        "0.012207,0.015774,0.019913,0.028707,0.047073,0.083875", \
				        "0.016327,0.019819,0.023641,0.031216,0.047799,0.083950", \
				        "0.024675,0.028294,0.032260,0.039773,0.054645,0.086487", \
				        "0.040103,0.044283,0.048865,0.057076,0.072130,0.101566", \
				        "0.067845,0.072713,0.078246,0.088261,0.105825,0.136704", \
				        "0.114374,0.121045,0.128231,0.141625,0.164428,0.202115");
			}
			rise_transition(Timing_X4) {
				values ("0.027515,0.035181,0.043929,0.061117,0.095379,0.163781", \
				        "0.027532,0.035182,0.043996,0.061131,0.095450,0.163838", \
				        "0.027452,0.035147,0.043965,0.061194,0.095432,0.163841", \
				        "0.031075,0.037292,0.045012,0.061192,0.095443,0.163827", \
				        "0.043490,0.050219,0.057190,0.069538,0.097532,0.163828", \
				        "0.061072,0.070409,0.080004,0.096321,0.122676,0.173215", \
				        "0.087288,0.099771,0.112551,0.134751,0.171554,0.228918", \
				        "0.132034,0.147726,0.163962,0.192546,0.241105,0.320005");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020125,0.023728,0.027880,0.036045,0.052384,0.084987", \
				        "0.023465,0.027069,0.031162,0.039376,0.055756,0.088363", \
				        "0.028845,0.033157,0.037498,0.045776,0.062161,0.094808", \
				        "0.034527,0.040507,0.046493,0.057050,0.075154,0.107978", \
				        "0.038058,0.046664,0.055195,0.069954,0.094240,0.133038", \
				        "0.034493,0.046888,0.059211,0.080197,0.114323,0.167200", \
				        "0.014752,0.032080,0.049430,0.079217,0.127311,0.201335", \
				        "-0.039775,-0.015820,0.008040,0.049121,0.116152,0.219867");
			}
			cell_rise(Timing_X4) {
				values ("0.042751,0.050874,0.060055,0.078317,0.114497,0.186447", \
				        "0.046432,0.054492,0.063647,0.081919,0.118124,0.190080", \
				        "0.054364,0.062357,0.071404,0.089543,0.125629,0.197503", \
				        "0.071053,0.078995,0.087924,0.105714,0.141400,0.212908", \
				        "0.097201,0.107916,0.119078,0.139072,0.174490,0.245003", \
				        "0.135173,0.148966,0.163703,0.190571,0.236834,0.311995", \
				        "0.193888,0.211771,0.230545,0.265215,0.325927,0.427129", \
				        "0.291972,0.314270,0.338569,0.382247,0.459368,0.590645");
			}
			fall_transition(Timing_X4) {
				values ("0.009033,0.012140,0.015558,0.022567,0.036498,0.064512", \
				        "0.009157,0.012160,0.015603,0.022563,0.036552,0.064517", \
				        "0.011388,0.013794,0.016655,0.022856,0.036522,0.064518", \
				        "0.016468,0.019240,0.022141,0.027567,0.038393,0.064521", \
				        "0.025503,0.028660,0.032154,0.038275,0.049330,0.070357", \
				        "0.041762,0.045381,0.049492,0.056981,0.070057,0.092909", \
				        "0.070649,0.074891,0.079794,0.088919,0.105151,0.132953", \
				        "0.119367,0.124937,0.131380,0.143466,0.164704,0.200070");
			}
			rise_transition(Timing_X4) {
				values ("0.028349,0.036095,0.044966,0.062209,0.096532,0.165065", \
				        "0.028350,0.036067,0.044981,0.062219,0.096550,0.165088", \
				        "0.028345,0.036094,0.044962,0.062215,0.096622,0.165084", \
				        "0.031581,0.037966,0.045803,0.062209,0.096624,0.165099", \
				        "0.044101,0.050781,0.057679,0.070033,0.098568,0.165047", \
				        "0.061988,0.071234,0.080711,0.096889,0.123076,0.174093", \
				        "0.088578,0.100810,0.113471,0.135465,0.172007,0.229128", \
				        "0.133845,0.149468,0.165194,0.193408,0.241536,0.320016");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015710,0.020457,0.025856,0.036551,0.057855,0.100317", \
				        "0.018974,0.023542,0.028946,0.039588,0.060870,0.103312", \
				        "0.023793,0.029501,0.035329,0.045797,0.067008,0.109323", \
				        "0.028289,0.036032,0.043787,0.057336,0.079547,0.121626", \
				        "0.030499,0.041027,0.051499,0.069815,0.099935,0.147286", \
				        "0.026057,0.040280,0.054571,0.079263,0.119908,0.184167", \
				        "0.004994,0.024439,0.043712,0.077148,0.132016,0.218626", \
				        "-0.051599,-0.026198,-0.0003321,0.044479,0.118577,0.235673");
			}
			cell_rise(Timing_X4) {
				values ("0.033857,0.045450,0.058718,0.084859,0.136844,0.240571", \
				        "0.036938,0.048486,0.061676,0.087764,0.139789,0.243526", \
				        "0.044040,0.055318,0.068253,0.094156,0.146026,0.249687", \
				        "0.057982,0.070233,0.082913,0.108184,0.159424,0.262549", \
				        "0.078102,0.093713,0.109835,0.138152,0.188442,0.290139", \
				        "0.109286,0.128494,0.148654,0.184844,0.246452,0.349137", \
				        "0.159562,0.184010,0.208924,0.253816,0.331664,0.461436", \
				        "0.245888,0.276220,0.307772,0.363736,0.460441,0.623574");
			}
			fall_transition(Timing_X4) {
				values ("0.010639,0.014906,0.019470,0.028654,0.047113,0.083940", \
				        "0.010982,0.014823,0.019398,0.028689,0.047055,0.083893", \
				        "0.014476,0.017582,0.021021,0.028955,0.047065,0.083984", \
				        "0.021038,0.024625,0.028487,0.034941,0.048863,0.083986", \
				        "0.032258,0.036731,0.041504,0.049477,0.063305,0.089565", \
				        "0.051683,0.057442,0.063436,0.073571,0.090995,0.120006", \
				        "0.085670,0.093490,0.101407,0.114795,0.137073,0.173641", \
				        "0.147014,0.157490,0.168226,0.186565,0.216413,0.263632");
			}
			rise_transition(Timing_X4) {
				values ("0.028251,0.038784,0.050902,0.074521,0.121966,0.216881", \
				        "0.028179,0.038781,0.050920,0.074557,0.121952,0.216869", \
				        "0.028309,0.038555,0.050810,0.074535,0.121926,0.216847", \
				        "0.033876,0.041809,0.052108,0.074359,0.121929,0.216881", \
				        "0.044742,0.054096,0.064005,0.081626,0.122673,0.216870", \
				        "0.061849,0.073051,0.085040,0.106306,0.142563,0.220543", \
				        "0.092168,0.104704,0.118563,0.144134,0.189712,0.265530", \
				        "0.148599,0.162484,0.178062,0.207233,0.261003,0.355704");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.020895,0.026011,0.031747,0.042866,0.064591,0.107517", \
				        "0.023886,0.028948,0.034665,0.045764,0.067499,0.110419", \
				        "0.030248,0.035352,0.040901,0.051884,0.073554,0.116340", \
				        "0.037688,0.044598,0.051633,0.064253,0.085991,0.128614", \
				        "0.043984,0.053298,0.062811,0.079797,0.108365,0.154197", \
				        "0.045880,0.058254,0.070912,0.093664,0.132000,0.193917", \
				        "0.036216,0.052543,0.069291,0.099343,0.150248,0.233000", \
				        "0.0004637,0.021773,0.043793,0.083144,0.150185,0.259711");
			}
			cell_rise(Timing_X4) {
				values ("0.047410,0.059002,0.072272,0.098341,0.150323,0.254017", \
				        "0.050768,0.062291,0.075603,0.101763,0.153853,0.257618", \
				        "0.056912,0.068512,0.081585,0.107799,0.159964,0.263869", \
				        "0.067989,0.080135,0.093298,0.119384,0.171471,0.275441", \
				        "0.084501,0.099068,0.114464,0.142732,0.194832,0.298532", \
				        "0.111831,0.129398,0.147803,0.181288,0.240929,0.346705", \
				        "0.158961,0.180791,0.203436,0.244029,0.314922,0.437932", \
				        "0.237053,0.265831,0.294978,0.346484,0.434222,0.581977");
			}
			fall_transition(Timing_X4) {
				values ("0.015427,0.019580,0.024126,0.033284,0.051688,0.088587", \
				        "0.015007,0.019393,0.024089,0.033257,0.051657,0.088601", \
				        "0.017074,0.020460,0.024598,0.033134,0.051682,0.088606", \
				        "0.023855,0.027367,0.030998,0.037576,0.052659,0.088632", \
				        "0.035007,0.039427,0.044160,0.052041,0.065663,0.092915", \
				        "0.053508,0.059384,0.065409,0.075835,0.093386,0.122307", \
				        "0.085046,0.093100,0.101287,0.115097,0.138111,0.175603", \
				        "0.139822,0.151589,0.163047,0.182300,0.213353,0.262296");
			}
			rise_transition(Timing_X4) {
				values ("0.028271,0.038726,0.050872,0.074557,0.121919,0.216880", \
				        "0.028274,0.038745,0.050895,0.074452,0.121912,0.216850", \
				        "0.028313,0.038763,0.050831,0.074498,0.121966,0.216851", \
				        "0.031237,0.040242,0.051310,0.074489,0.121942,0.216865", \
				        "0.039991,0.049051,0.059276,0.078791,0.122512,0.216868", \
				        "0.054793,0.064247,0.075160,0.095875,0.135535,0.219610", \
				        "0.079954,0.090196,0.101830,0.123998,0.167053,0.248797", \
				        "0.124296,0.135742,0.148771,0.173334,0.219853,0.308204");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2";

			rise_power(Power_X4) {
				values ("0.012410,0.014116,0.016070,0.019966,0.027729,0.043242", \
				        "0.012423,0.014101,0.016049,0.019937,0.027710,0.043210", \
				        "0.012490,0.014174,0.016100,0.019974,0.027714,0.043203", \
				        "0.012810,0.014473,0.016360,0.020186,0.027872,0.043317", \
				        "0.013721,0.015329,0.017193,0.020903,0.028443,0.043740", \
				        "0.015942,0.017450,0.019208,0.022799,0.030108,0.045047", \
				        "0.020886,0.022288,0.023900,0.027258,0.034188,0.048579", \
				        "0.031461,0.032696,0.034183,0.037235,0.043617,0.057145");
			}
			fall_power(Power_X4) {
				values ("0.005529,0.003855,0.001922,-0.001934,-0.009664,-0.025140", \
				        "0.005508,0.003819,0.001890,-0.001966,-0.009690,-0.025153", \
				        "0.005460,0.003778,0.001850,-0.002007,-0.009734,-0.025219", \
				        "0.005444,0.003787,0.001859,-0.002007,-0.009756,-0.025261", \
				        "0.005642,0.003927,0.001977,-0.001881,-0.009624,-0.025122", \
				        "0.006789,0.004917,0.002822,-0.001225,-0.009169,-0.024806", \
				        "0.010628,0.008454,0.006080,0.001510,-0.007113,-0.023421", \
				        "0.020316,0.017776,0.015005,0.009724,-0.000120,-0.018193");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & !B2";

			rise_power(Power_X4) {
				values ("0.011467,0.013168,0.015107,0.018997,0.026763,0.042259", \
				        "0.011431,0.013136,0.015083,0.018968,0.026735,0.042250", \
				        "0.011534,0.013195,0.015131,0.018997,0.026743,0.042233", \
				        "0.011847,0.013527,0.015402,0.019223,0.026902,0.042343", \
				        "0.012753,0.014368,0.016218,0.019943,0.027489,0.042774", \
				        "0.015007,0.016453,0.018257,0.021837,0.029144,0.044098", \
				        "0.019937,0.021327,0.022948,0.026297,0.033228,0.047626", \
				        "0.030501,0.031808,0.033259,0.036313,0.042667,0.056202");
			}
			fall_power(Power_X4) {
				values ("0.002211,0.000523,-0.001414,-0.005275,-0.013014,-0.028489", \
				        "0.002165,0.000490,-0.001431,-0.005304,-0.013037,-0.028514", \
				        "0.002119,0.000448,-0.001488,-0.005335,-0.013069,-0.028550", \
				        "0.002082,0.000425,-0.001501,-0.005354,-0.013093,-0.028623", \
				        "0.002378,0.000646,-0.001328,-0.005222,-0.012966,-0.028468", \
				        "0.003846,0.001859,-0.000305,-0.004443,-0.012449,-0.028135", \
				        "0.008197,0.005874,0.003347,-0.001386,-0.010208,-0.026662", \
				        "0.018435,0.015737,0.012808,0.007304,-0.002834,-0.021211");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2";

			rise_power(Power_X4) {
				values ("0.011854,0.013543,0.015497,0.019395,0.027155,0.042668", \
				        "0.011830,0.013538,0.015476,0.019364,0.027131,0.042650", \
				        "0.011910,0.013607,0.015527,0.019398,0.027140,0.042657", \
				        "0.012284,0.013918,0.015811,0.019633,0.027312,0.042739", \
				        "0.013180,0.014801,0.016651,0.020387,0.027927,0.043208", \
				        "0.015410,0.016932,0.018708,0.022302,0.029634,0.044598", \
				        "0.020388,0.021798,0.023452,0.026814,0.033797,0.048240", \
				        "0.031162,0.032369,0.033867,0.036915,0.043321,0.056935");
			}
			fall_power(Power_X4) {
				values ("0.002708,0.001028,-0.000902,-0.004764,-0.012500,-0.027963", \
				        "0.002674,0.001000,-0.000940,-0.004790,-0.012524,-0.028014", \
				        "0.002613,0.000947,-0.000972,-0.004827,-0.012555,-0.028054", \
				        "0.002641,0.000933,-0.000984,-0.004820,-0.012554,-0.028060", \
				        "0.002952,0.001180,-0.000782,-0.004675,-0.012417,-0.027901", \
				        "0.004412,0.002481,0.000309,-0.003854,-0.011886,-0.027567", \
				        "0.008872,0.006588,0.004075,-0.000663,-0.009502,-0.026001", \
				        "0.019322,0.016643,0.013745,0.008259,-0.001892,-0.020307");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X4) {
				values ("0.002081,0.000395,-0.001524,-0.005379,-0.013096,-0.028558", \
				        "0.002097,0.000421,-0.001506,-0.005353,-0.013068,-0.028537", \
				        "0.002173,0.000481,-0.001451,-0.005310,-0.013032,-0.028498", \
				        "0.002475,0.000715,-0.001241,-0.005149,-0.012912,-0.028423", \
				        "0.003438,0.001525,-0.000571,-0.004647,-0.012573,-0.028196", \
				        "0.005939,0.003789,0.001440,-0.002994,-0.011353,-0.027389", \
				        "0.011567,0.009157,0.006525,0.001554,-0.007684,-0.024717", \
				        "0.023452,0.020798,0.017882,0.012342,0.002003,-0.016909");
			}
			rise_power(Power_X4) {
				values ("0.006491,0.008212,0.010172,0.014078,0.021847,0.037356", \
				        "0.006471,0.008198,0.010154,0.014054,0.021836,0.037344", \
				        "0.006615,0.008284,0.010234,0.014085,0.021844,0.037350", \
				        "0.007005,0.008630,0.010525,0.014319,0.021993,0.037413", \
				        "0.008012,0.009575,0.011380,0.015060,0.022564,0.037835", \
				        "0.010414,0.011766,0.013446,0.016947,0.024203,0.039125", \
				        "0.015780,0.016840,0.018254,0.021377,0.028172,0.042536", \
				        "0.027507,0.028185,0.029170,0.031540,0.037368,0.050678");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X4) {
				values ("0.005249,0.003561,0.001630,-0.002230,-0.009952,-0.025409", \
				        "0.005240,0.003547,0.001607,-0.002238,-0.009961,-0.025411", \
				        "0.005253,0.003559,0.001659,-0.002210,-0.009955,-0.025400", \
				        "0.005438,0.003738,0.001817,-0.002078,-0.009845,-0.025342", \
				        "0.006157,0.004348,0.002365,-0.001632,-0.009514,-0.025142", \
				        "0.008191,0.006233,0.004069,-0.000156,-0.008345,-0.024301", \
				        "0.013023,0.010872,0.008502,0.003917,-0.004853,-0.021585", \
				        "0.023437,0.021084,0.018526,0.013528,0.004019,-0.013998");
			}
			rise_power(Power_X4) {
				values ("0.007488,0.009210,0.011174,0.015076,0.022844,0.038354", \
				        "0.007408,0.009125,0.011101,0.015015,0.022797,0.038310", \
				        "0.007307,0.009034,0.011018,0.014936,0.022732,0.038280", \
				        "0.007260,0.008994,0.010970,0.014883,0.022680,0.038228", \
				        "0.007622,0.009262,0.011177,0.015022,0.022753,0.038253", \
				        "0.009174,0.010645,0.012402,0.016029,0.023524,0.038772", \
				        "0.013528,0.014664,0.016120,0.019301,0.026268,0.040930", \
				        "0.023449,0.024228,0.025257,0.027684,0.033569,0.047046");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI221_X1
 Cell Description	: Combinational cell (OAI221_X1) with drive strength X1
*******************************************************************************************/

cell (OAI221_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 13077.389597;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 2483.284000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 3128.685000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 8337.093000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 19597.400000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 8337.099000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 19597.400000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 14120.360000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 25382.380000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 2002.591000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 4123.988000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 8761.313000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 19907.650000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 8761.323000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 19198.340000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 14544.600000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 24567.320000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 2002.588000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 4124.010000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 8761.315000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 20616.930000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 8761.324000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 19907.650000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 14544.610000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 25276.590000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 674.986100;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 2843.279000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 7519.206000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 25273.380000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 7519.223000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 24564.300000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 13302.530000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 29933.720000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000525;
		fall_capacitance	: 0.000525;
		rise_capacitance	: 0.000526;
		fall_capacitance_range		(0.000456, 0.000592);
		rise_capacitance_range		(0.000454, 0.000645);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000007,0.000006,0.000006,0.000006,0.000006,0.000005");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000018,0.000013,0.000009,0.000007,0.000005,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000006,0.000006,0.000005,0.000005,0.000005,0.000004");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000018,0.000013,0.000009,0.000007,0.000005,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000007,0.000006,0.000006,0.000006,0.000006,0.000005");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000016,0.000012,0.000009,0.000007,0.000005,0.000004,0.000001");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000594;
		fall_capacitance	: 0.000556;
		rise_capacitance	: 0.000631;
		fall_capacitance_range		(0.000498, 0.000610);
		rise_capacitance_range		(0.000522, 0.000773);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000002,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000002,0.000001,-0.000000,-0.000001,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000011,0.000008,0.000006,0.000004,0.000002,0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000001,-0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002,-0.000003,-0.000006");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000001,-0.000000,-0.000002,-0.000005");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000626;
		fall_capacitance	: 0.000617;
		rise_capacitance	: 0.000634;
		fall_capacitance_range		(0.000529, 0.000674);
		rise_capacitance_range		(0.000539, 0.000737);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000009,0.000007,0.000005,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000000,-0.000001,-0.000002,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000003,-0.000006");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000610;
		fall_capacitance	: 0.000586;
		rise_capacitance	: 0.000634;
		fall_capacitance_range		(0.000512, 0.000698);
		rise_capacitance_range		(0.000529, 0.000810);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000001,0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000007,0.000006,0.000005,0.000004,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000002,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000016,0.000013,0.000012,0.000011,0.000010,0.000009,0.000006");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000008,0.000007,0.000006,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000004,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000012,0.000010,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000011,0.000009,0.000008,0.000006,0.000005,0.000004,0.000002");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000629;
		fall_capacitance	: 0.000638;
		rise_capacitance	: 0.000621;
		fall_capacitance_range		(0.000539, 0.000732);
		rise_capacitance_range		(0.000533, 0.000770);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000022,0.000014,0.000010,0.000006,0.000004,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000009,0.000008,0.000007,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000010,0.000008,0.000007,0.000006,0.000005,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000009,0.000008,0.000007,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000021,0.000014,0.000009,0.000006,0.000004,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000009,0.000008,0.000007,0.000006,0.000005,0.000004,0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000022,0.000014,0.000010,0.000006,0.000004,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000004,0.000003,0.000002,0.000002,0.000001,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000014,0.000012,0.000011,0.000010,0.000010,0.000008,0.000006");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.052114,0.055230,0.061502,0.073859,0.098042,0.145543", \
				        "0.055139,0.058221,0.064419,0.076810,0.100944,0.148462", \
				        "0.060514,0.063709,0.069921,0.082117,0.106306,0.153830", \
				        "0.070886,0.074135,0.080484,0.092817,0.117028,0.164567", \
				        "0.086257,0.090108,0.097511,0.111502,0.137375,0.185350", \
				        "0.100957,0.106181,0.116174,0.134700,0.167257,0.223126", \
				        "0.105108,0.112396,0.126191,0.151637,0.196416,0.270869", \
				        "0.080117,0.090379,0.109344,0.144431,0.206001,0.308479");
			}
			cell_rise(Timing_X1) {
				values ("0.062766,0.067749,0.077701,0.096973,0.135424,0.211767", \
				        "0.066376,0.071325,0.081189,0.100488,0.138969,0.215246", \
				        "0.074049,0.078975,0.088689,0.108076,0.146372,0.222619", \
				        "0.090265,0.095203,0.104936,0.124054,0.162018,0.238041", \
				        "0.122466,0.127980,0.138568,0.157330,0.194736,0.270000", \
				        "0.169979,0.177083,0.191060,0.216474,0.261076,0.336665", \
				        "0.241404,0.251164,0.268982,0.302047,0.360926,0.460614", \
				        "0.360686,0.372388,0.395100,0.436838,0.511642,0.640889");
			}
			fall_transition(Timing_X1) {
				values ("0.031742,0.034405,0.039765,0.049913,0.069887,0.110081", \
				        "0.031726,0.034424,0.039934,0.049922,0.069931,0.110079", \
				        "0.031671,0.034328,0.039830,0.049731,0.069930,0.110080", \
				        "0.032671,0.035122,0.040319,0.050007,0.069862,0.110034", \
				        "0.040441,0.042668,0.047553,0.055997,0.072936,0.110578", \
				        "0.057855,0.060304,0.065047,0.073803,0.090301,0.122839", \
				        "0.089007,0.091913,0.097722,0.108290,0.127140,0.160822", \
				        "0.142419,0.146462,0.154015,0.167787,0.192064,0.233143");
			}
			rise_transition(Timing_X1) {
				values ("0.079985,0.084694,0.094011,0.113319,0.151264,0.224560", \
				        "0.079939,0.084659,0.093868,0.113304,0.151305,0.224572", \
				        "0.079980,0.084718,0.093992,0.113383,0.151303,0.224575", \
				        "0.080404,0.084945,0.093860,0.113429,0.151264,0.224568", \
				        "0.091377,0.094681,0.101804,0.117446,0.151732,0.224572", \
				        "0.126110,0.129285,0.134940,0.146265,0.171285,0.229977", \
				        "0.178866,0.182833,0.190772,0.205867,0.233587,0.281645", \
				        "0.208892,0.214675,0.226584,0.249017,0.290523,0.362524");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.043787,0.046877,0.053038,0.065200,0.089064,0.136198", \
				        "0.046825,0.049868,0.055954,0.068082,0.091972,0.139108", \
				        "0.052232,0.055360,0.061450,0.073475,0.097323,0.144474", \
				        "0.062091,0.065396,0.071848,0.084144,0.108030,0.155225", \
				        "0.074692,0.078914,0.086776,0.101398,0.127847,0.175951", \
				        "0.084284,0.090025,0.100898,0.120736,0.155121,0.212519", \
				        "0.080963,0.089139,0.104269,0.131792,0.179245,0.256708", \
				        "0.046482,0.057930,0.078662,0.116610,0.181841,0.288589");
			}
			cell_rise(Timing_X1) {
				values ("0.062041,0.066957,0.076806,0.096096,0.134399,0.210529", \
				        "0.065662,0.070559,0.080297,0.099602,0.137949,0.214073", \
				        "0.073326,0.078210,0.087850,0.107148,0.145350,0.221446", \
				        "0.089542,0.094452,0.104046,0.123107,0.160996,0.236853", \
				        "0.121563,0.127065,0.137565,0.156492,0.193782,0.268794", \
				        "0.168555,0.175640,0.189621,0.215108,0.259860,0.335467", \
				        "0.239059,0.248890,0.266628,0.299857,0.358929,0.458811", \
				        "0.354864,0.366851,0.389695,0.431912,0.507238,0.637136");
			}
			fall_transition(Timing_X1) {
				values ("0.026275,0.028901,0.034273,0.044314,0.064234,0.104433", \
				        "0.026270,0.028948,0.034407,0.044356,0.064349,0.104405", \
				        "0.026186,0.028868,0.034333,0.044140,0.064331,0.104427", \
				        "0.028447,0.030766,0.035537,0.044800,0.064326,0.104348", \
				        "0.037264,0.039464,0.044132,0.052193,0.068674,0.105295", \
				        "0.055055,0.057530,0.062267,0.070941,0.087123,0.119089", \
				        "0.086636,0.089373,0.095231,0.105656,0.124551,0.158014", \
				        "0.140088,0.144352,0.151682,0.165395,0.189599,0.230531");
			}
			rise_transition(Timing_X1) {
				values ("0.055871,0.061065,0.071352,0.091564,0.130396,0.204622", \
				        "0.055886,0.061050,0.071401,0.091554,0.130438,0.204625", \
				        "0.055888,0.061050,0.071480,0.091535,0.130433,0.204624", \
				        "0.056387,0.061318,0.071414,0.091582,0.130406,0.204624", \
				        "0.067773,0.071384,0.079334,0.095673,0.130928,0.204621", \
				        "0.099210,0.103460,0.110957,0.124803,0.150644,0.210081", \
				        "0.145255,0.150196,0.159777,0.177725,0.209580,0.262022", \
				        "0.213932,0.219415,0.231342,0.253428,0.294355,0.365644");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.052114,0.055230,0.061502,0.073859,0.098042,0.145543", \
				        "0.055139,0.058221,0.064419,0.076810,0.100944,0.148462", \
				        "0.060514,0.063709,0.069921,0.082117,0.106306,0.153830", \
				        "0.070886,0.074135,0.080484,0.092817,0.117028,0.164567", \
				        "0.086257,0.090108,0.097511,0.111502,0.137375,0.185350", \
				        "0.100957,0.106181,0.116174,0.134700,0.167257,0.223126", \
				        "0.105108,0.112396,0.126191,0.151637,0.196416,0.270869", \
				        "0.080117,0.090379,0.109344,0.144431,0.206001,0.308479");
			}
			cell_rise(Timing_X1) {
				values ("0.062766,0.067749,0.077701,0.096973,0.135424,0.211767", \
				        "0.066376,0.071325,0.081189,0.100488,0.138969,0.215246", \
				        "0.074049,0.078975,0.088689,0.108076,0.146372,0.222619", \
				        "0.090265,0.095203,0.104936,0.124054,0.162018,0.238041", \
				        "0.122466,0.127980,0.138568,0.157330,0.194736,0.270000", \
				        "0.169979,0.177083,0.191060,0.216474,0.261076,0.336665", \
				        "0.241404,0.251164,0.268982,0.302047,0.360926,0.460614", \
				        "0.359049,0.370899,0.393654,0.435552,0.510669,0.640300");
			}
			fall_transition(Timing_X1) {
				values ("0.031742,0.034405,0.039765,0.049913,0.069887,0.110081", \
				        "0.031726,0.034424,0.039934,0.049922,0.069931,0.110079", \
				        "0.031671,0.034328,0.039830,0.049731,0.069930,0.110080", \
				        "0.032671,0.035122,0.040319,0.050007,0.069862,0.110034", \
				        "0.040441,0.042668,0.047553,0.055997,0.072936,0.110578", \
				        "0.057855,0.060304,0.065047,0.073803,0.090301,0.122839", \
				        "0.089007,0.091913,0.097722,0.108290,0.127140,0.160822", \
				        "0.142419,0.146462,0.154015,0.167787,0.192064,0.233143");
			}
			rise_transition(Timing_X1) {
				values ("0.079985,0.084694,0.094011,0.113319,0.151264,0.224560", \
				        "0.079939,0.084659,0.093868,0.113304,0.151305,0.224572", \
				        "0.079980,0.084718,0.093992,0.113383,0.151303,0.224575", \
				        "0.080404,0.084945,0.093860,0.113429,0.151264,0.224568", \
				        "0.091377,0.094681,0.101804,0.117446,0.151732,0.224572", \
				        "0.126110,0.129285,0.134940,0.146265,0.171285,0.229977", \
				        "0.178866,0.182833,0.190772,0.205867,0.233587,0.281645", \
				        "0.258143,0.262432,0.272281,0.290658,0.326707,0.392310");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2 & C2 | B1 & C1";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (B1 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037001,0.039575,0.044816,0.055120,0.075275,0.115073", \
				        "0.040098,0.042665,0.047836,0.058143,0.078294,0.118098", \
				        "0.045551,0.048202,0.053340,0.063496,0.083597,0.123400", \
				        "0.054778,0.057688,0.063341,0.074066,0.094290,0.134098", \
				        "0.065523,0.069343,0.076350,0.089463,0.112865,0.154568", \
				        "0.072275,0.077530,0.087450,0.105474,0.136412,0.187660", \
				        "0.064526,0.072041,0.086010,0.111312,0.154696,0.224808", \
				        "0.022001,0.032551,0.052010,0.087348,0.147812,0.245842");
			}
			cell_rise(Timing_X1) {
				values ("0.061890,0.066784,0.076556,0.095911,0.134197,0.210330", \
				        "0.065490,0.070354,0.080047,0.099420,0.137729,0.213841", \
				        "0.073166,0.078038,0.087740,0.106963,0.145140,0.221190", \
				        "0.089499,0.094406,0.103929,0.123016,0.160866,0.236673", \
				        "0.121830,0.127236,0.137714,0.156621,0.193851,0.268776", \
				        "0.169246,0.176402,0.190305,0.215741,0.260356,0.335831", \
				        "0.241242,0.250989,0.268641,0.301685,0.360552,0.460126", \
				        "0.360686,0.372388,0.395100,0.436838,0.511642,0.640889");
			}
			fall_transition(Timing_X1) {
				values ("0.021557,0.023796,0.028516,0.036892,0.053689,0.087602", \
				        "0.021523,0.023825,0.028477,0.036822,0.053759,0.087588", \
				        "0.021569,0.023726,0.028260,0.036811,0.053753,0.087682", \
				        "0.024588,0.026568,0.030496,0.038053,0.054031,0.087577", \
				        "0.033268,0.035182,0.039073,0.046012,0.059956,0.089632", \
				        "0.050034,0.052223,0.056400,0.064017,0.077942,0.105045", \
				        "0.079939,0.082386,0.087601,0.096913,0.113451,0.142510", \
				        "0.130943,0.134784,0.141433,0.153744,0.175326,0.211357");
			}
			rise_transition(Timing_X1) {
				values ("0.055560,0.060667,0.071045,0.091128,0.129860,0.203992", \
				        "0.055568,0.060692,0.070964,0.091142,0.129892,0.204000", \
				        "0.055551,0.060705,0.071076,0.091120,0.129892,0.203995", \
				        "0.056087,0.060955,0.070990,0.091156,0.129870,0.204003", \
				        "0.067208,0.070908,0.078755,0.095175,0.130386,0.203988", \
				        "0.098077,0.102376,0.109927,0.123920,0.149864,0.209354", \
				        "0.142729,0.147643,0.157445,0.175719,0.207822,0.260635", \
				        "0.208892,0.214675,0.226584,0.249017,0.290523,0.362524");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.050095,0.053210,0.059400,0.071495,0.095362,0.142482", \
				        "0.053090,0.056216,0.062261,0.074456,0.098329,0.145482", \
				        "0.057814,0.061022,0.067084,0.079123,0.103000,0.150169", \
				        "0.065022,0.068314,0.074831,0.086807,0.110683,0.157902", \
				        "0.074111,0.077721,0.084733,0.098151,0.123411,0.171204", \
				        "0.081589,0.086248,0.095031,0.111249,0.140485,0.193087", \
				        "0.074591,0.081354,0.093959,0.116753,0.156058,0.220891", \
				        "0.028800,0.039008,0.057235,0.090339,0.146738,0.237287");
			}
			cell_rise(Timing_X1) {
				values ("0.112488,0.119540,0.133619,0.161406,0.216051,0.324105", \
				        "0.115303,0.122360,0.136353,0.164152,0.218828,0.326883", \
				        "0.121538,0.128581,0.142611,0.170257,0.224860,0.332853", \
				        "0.135244,0.142310,0.156206,0.183746,0.238066,0.345802", \
				        "0.165547,0.172171,0.185819,0.212847,0.266323,0.373076", \
				        "0.222915,0.231104,0.246373,0.274778,0.327147,0.431595", \
				        "0.309510,0.319739,0.338728,0.374833,0.440699,0.555635", \
				        "0.448271,0.460508,0.484289,0.528899,0.610833,0.756018");
			}
			fall_transition(Timing_X1) {
				values ("0.026061,0.028722,0.034083,0.044141,0.064038,0.104146", \
				        "0.026065,0.028707,0.034084,0.044153,0.064106,0.104172", \
				        "0.026032,0.028634,0.033989,0.044004,0.064117,0.104146", \
				        "0.027133,0.029549,0.034573,0.044375,0.064107,0.104143", \
				        "0.031557,0.033944,0.039058,0.048393,0.066631,0.104820", \
				        "0.044274,0.046506,0.051053,0.059767,0.076999,0.113071", \
				        "0.071806,0.074096,0.078885,0.087862,0.104261,0.136882", \
				        "0.122656,0.125704,0.131454,0.142159,0.161554,0.195383");
			}
			rise_transition(Timing_X1) {
				values ("0.102226,0.108879,0.121837,0.147665,0.198039,0.296567", \
				        "0.102224,0.108877,0.121843,0.147690,0.198062,0.296617", \
				        "0.102234,0.108888,0.121860,0.147669,0.198036,0.296585", \
				        "0.102184,0.108867,0.121853,0.147692,0.198050,0.296561", \
				        "0.103519,0.109700,0.122093,0.147549,0.198036,0.296592", \
				        "0.124136,0.129357,0.139171,0.159803,0.202986,0.296505", \
				        "0.166798,0.172786,0.184978,0.207365,0.247581,0.322769", \
				        "0.227655,0.234972,0.249889,0.277754,0.328714,0.417913");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.042607,0.045582,0.051556,0.063309,0.086645,0.133272", \
				        "0.045553,0.048566,0.054385,0.066180,0.089539,0.136176", \
				        "0.050211,0.053294,0.059124,0.070803,0.094250,0.140967", \
				        "0.056809,0.060090,0.066544,0.078396,0.101891,0.148629", \
				        "0.064139,0.067957,0.075168,0.088784,0.114148,0.161937", \
				        "0.067190,0.072364,0.082077,0.099382,0.129700,0.182958", \
				        "0.052246,0.060010,0.074216,0.099325,0.141315,0.208650", \
				        "-0.004699,0.006961,0.027604,0.064320,0.125057,0.220145");
			}
			cell_rise(Timing_X1) {
				values ("0.111195,0.118208,0.132189,0.159870,0.214335,0.322021", \
				        "0.114018,0.121053,0.134912,0.162589,0.217116,0.324825", \
				        "0.120274,0.127254,0.141187,0.168725,0.223151,0.330797", \
				        "0.133950,0.140993,0.154744,0.182191,0.236370,0.343730", \
				        "0.164304,0.170818,0.184415,0.211309,0.264643,0.371026", \
				        "0.221417,0.229473,0.244620,0.273113,0.325503,0.429546", \
				        "0.306885,0.317226,0.336132,0.372287,0.438314,0.553364", \
				        "0.444202,0.456497,0.480352,0.525045,0.607032,0.752315");
			}
			fall_transition(Timing_X1) {
				values ("0.020255,0.022853,0.028278,0.038359,0.058398,0.098420", \
				        "0.020269,0.022882,0.028273,0.038169,0.058336,0.098451", \
				        "0.020352,0.022931,0.028303,0.038253,0.058393,0.098458", \
				        "0.022088,0.024501,0.029255,0.038850,0.058474,0.098389", \
				        "0.027378,0.029674,0.034526,0.043606,0.061929,0.099446", \
				        "0.041346,0.043560,0.047865,0.056304,0.072888,0.108361", \
				        "0.070176,0.072254,0.076956,0.085652,0.101817,0.133482", \
				        "0.123210,0.125952,0.131026,0.141257,0.160114,0.193352");
			}
			rise_transition(Timing_X1) {
				values ("0.078008,0.084426,0.097112,0.122047,0.171383,0.269722", \
				        "0.078012,0.084424,0.097125,0.122085,0.171382,0.269704", \
				        "0.078008,0.084407,0.097111,0.122048,0.171357,0.269709", \
				        "0.077998,0.084431,0.097105,0.122064,0.171400,0.269723", \
				        "0.079337,0.085253,0.097350,0.121963,0.171416,0.269738", \
				        "0.098312,0.103968,0.114451,0.134313,0.176368,0.269690", \
				        "0.130737,0.137806,0.151564,0.176257,0.219432,0.296018", \
				        "0.178237,0.187064,0.204511,0.236003,0.291770,0.386692");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.038429,0.040948,0.046017,0.055944,0.075851,0.115487", \
				        "0.041409,0.043954,0.048851,0.058975,0.078747,0.118436", \
				        "0.046219,0.048855,0.053791,0.063729,0.083623,0.123307", \
				        "0.053279,0.056156,0.061711,0.072085,0.092156,0.131884", \
				        "0.061165,0.064725,0.071369,0.083740,0.106359,0.147894", \
				        "0.064118,0.069146,0.078526,0.095263,0.124055,0.172672", \
				        "0.048624,0.056245,0.070118,0.094790,0.135899,0.201079", \
				        "-0.009608,0.001821,0.022283,0.058393,0.118237,0.211846");
			}
			cell_rise(Timing_X1) {
				values ("0.116560,0.123496,0.137271,0.164641,0.218833,0.326121", \
				        "0.119428,0.126372,0.140007,0.167420,0.221640,0.328920", \
				        "0.125731,0.132615,0.146333,0.173561,0.227716,0.334923", \
				        "0.139503,0.146442,0.159974,0.187153,0.240996,0.347934", \
				        "0.169913,0.176265,0.189793,0.216414,0.269364,0.375428", \
				        "0.227650,0.235733,0.250439,0.278432,0.330518,0.434264", \
				        "0.314857,0.324889,0.343526,0.379206,0.444584,0.558598", \
				        "0.454375,0.466089,0.489966,0.533995,0.615089,0.759509");
			}
			fall_transition(Timing_X1) {
				values ("0.018519,0.020728,0.025220,0.033678,0.050599,0.084225", \
				        "0.018496,0.020729,0.025156,0.033624,0.050461,0.084239", \
				        "0.018608,0.020821,0.025222,0.033650,0.050591,0.084266", \
				        "0.020852,0.022918,0.026912,0.034770,0.050841,0.084260", \
				        "0.027396,0.029319,0.033272,0.040673,0.055601,0.085999", \
				        "0.042680,0.044571,0.048347,0.055549,0.069435,0.097734", \
				        "0.072631,0.074491,0.078681,0.086566,0.101023,0.128112", \
				        "0.127180,0.129606,0.134040,0.143221,0.160583,0.191427");
			}
			rise_transition(Timing_X1) {
				values ("0.080117,0.086560,0.099284,0.124472,0.174033,0.272589", \
				        "0.080105,0.086563,0.099330,0.124429,0.174001,0.272555", \
				        "0.080096,0.086562,0.099301,0.124474,0.174034,0.272582", \
				        "0.080106,0.086557,0.099325,0.124460,0.174009,0.272575", \
				        "0.081292,0.087301,0.099528,0.124420,0.174000,0.272559", \
				        "0.100123,0.105643,0.116021,0.136130,0.178654,0.272531", \
				        "0.133128,0.140089,0.153834,0.178256,0.221209,0.297980", \
				        "0.181244,0.190182,0.207234,0.238472,0.293925,0.388409");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.058247,0.061439,0.067711,0.080027,0.104174,0.151685", \
				        "0.061181,0.064342,0.070474,0.082807,0.107043,0.154539", \
				        "0.065918,0.069160,0.075291,0.087533,0.111640,0.159143", \
				        "0.073360,0.076651,0.083122,0.095273,0.119366,0.166906", \
				        "0.083493,0.086992,0.093929,0.107201,0.132363,0.180205", \
				        "0.093611,0.097945,0.106204,0.121839,0.150468,0.202663", \
				        "0.092699,0.098787,0.110358,0.131689,0.169058,0.232159", \
				        "0.059980,0.068921,0.085422,0.115650,0.168104,0.254390");
			}
			cell_rise(Timing_X1) {
				values ("0.125563,0.132698,0.146759,0.174493,0.229137,0.337153", \
				        "0.129272,0.136336,0.150249,0.177976,0.232639,0.340679", \
				        "0.135851,0.142995,0.157046,0.184747,0.239424,0.347453", \
				        "0.147825,0.154936,0.169041,0.196874,0.251578,0.359643", \
				        "0.171595,0.178748,0.192756,0.220515,0.275000,0.382934", \
				        "0.217420,0.225261,0.240552,0.269586,0.324158,0.431370", \
				        "0.293157,0.302646,0.320180,0.353831,0.416851,0.532116", \
				        "0.421401,0.433000,0.453725,0.494153,0.568540,0.702790");
			}
			fall_transition(Timing_X1) {
				values ("0.031738,0.034382,0.039801,0.049756,0.069903,0.110029", \
				        "0.031730,0.034339,0.039660,0.049913,0.069926,0.110079", \
				        "0.031709,0.034355,0.039583,0.049722,0.069913,0.110079", \
				        "0.032308,0.034833,0.039934,0.049886,0.069917,0.110075", \
				        "0.036176,0.038664,0.043858,0.053423,0.071935,0.110567", \
				        "0.047514,0.049828,0.054579,0.063665,0.081544,0.118153", \
				        "0.073661,0.076182,0.081057,0.090170,0.107114,0.140767", \
				        "0.122628,0.125629,0.131663,0.142634,0.162244,0.196739");
			}
			rise_transition(Timing_X1) {
				values ("0.102237,0.108872,0.121897,0.147726,0.198053,0.296592", \
				        "0.102249,0.108875,0.121830,0.147676,0.198051,0.296588", \
				        "0.102258,0.108861,0.121892,0.147714,0.198033,0.296579", \
				        "0.102263,0.108879,0.121835,0.147666,0.198047,0.296594", \
				        "0.103029,0.109501,0.122079,0.147671,0.198061,0.296590", \
				        "0.117405,0.123187,0.133939,0.156013,0.201686,0.296597", \
				        "0.147529,0.153552,0.165242,0.188043,0.231331,0.314514", \
				        "0.193588,0.199925,0.213309,0.238320,0.285917,0.375984");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.049965,0.053088,0.059267,0.071366,0.095200,0.142355", \
				        "0.052898,0.055999,0.062180,0.074139,0.098069,0.145201", \
				        "0.057616,0.060806,0.066849,0.078838,0.102654,0.149797", \
				        "0.064793,0.068069,0.074535,0.086561,0.110392,0.157576", \
				        "0.073648,0.077285,0.084333,0.097772,0.123037,0.170862", \
				        "0.080239,0.084980,0.093946,0.110356,0.139808,0.192560", \
				        "0.072526,0.079412,0.092266,0.115386,0.155012,0.220145", \
				        "0.030851,0.040843,0.059026,0.091850,0.147829,0.237916");
			}
			cell_rise(Timing_X1) {
				values ("0.124274,0.131340,0.145299,0.172954,0.227473,0.335123", \
				        "0.127981,0.134996,0.148842,0.176505,0.230995,0.338676", \
				        "0.134557,0.141664,0.155577,0.183196,0.237741,0.345400", \
				        "0.146524,0.153640,0.167620,0.195294,0.249886,0.357604", \
				        "0.170369,0.177426,0.191316,0.218947,0.273321,0.380880", \
				        "0.215997,0.223719,0.238917,0.267922,0.322506,0.429309", \
				        "0.291186,0.300644,0.318036,0.351699,0.414744,0.529863", \
				        "0.418346,0.430043,0.450691,0.491159,0.565633,0.699747");
			}
			fall_transition(Timing_X1) {
				values ("0.026261,0.028926,0.034265,0.044339,0.064342,0.104373", \
				        "0.026267,0.028910,0.034110,0.044299,0.064326,0.104426", \
				        "0.026253,0.028847,0.034197,0.044213,0.064340,0.104427", \
				        "0.027421,0.029852,0.034876,0.044540,0.064365,0.104395", \
				        "0.031844,0.034233,0.039357,0.048689,0.066925,0.105134", \
				        "0.044447,0.046718,0.051281,0.060057,0.077338,0.113403", \
				        "0.071717,0.074036,0.078864,0.087771,0.104319,0.137097", \
				        "0.121623,0.124695,0.130405,0.141083,0.160495,0.194488");
			}
			rise_transition(Timing_X1) {
				values ("0.077990,0.084434,0.097116,0.122097,0.171410,0.269701", \
				        "0.078023,0.084429,0.097109,0.122071,0.171404,0.269727", \
				        "0.077996,0.084441,0.097089,0.122079,0.171393,0.269730", \
				        "0.078002,0.084424,0.097100,0.122079,0.171409,0.269726", \
				        "0.078863,0.085092,0.097365,0.122049,0.171413,0.269736", \
				        "0.091894,0.097737,0.108937,0.130465,0.175069,0.269779", \
				        "0.115304,0.121844,0.134490,0.158466,0.203357,0.287763", \
				        "0.152429,0.159819,0.174631,0.201990,0.252704,0.346088");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.044390,0.047041,0.052309,0.062669,0.082947,0.123067", \
				        "0.047357,0.049999,0.055128,0.065555,0.085830,0.125942", \
				        "0.052242,0.054941,0.060024,0.070274,0.090567,0.130696", \
				        "0.060039,0.062896,0.068481,0.078846,0.099197,0.139338", \
				        "0.069888,0.073210,0.079576,0.091667,0.113986,0.155370", \
				        "0.076661,0.081261,0.089945,0.105697,0.133346,0.181112", \
				        "0.068389,0.075188,0.087788,0.110405,0.149144,0.211983", \
				        "0.025419,0.035229,0.053221,0.085593,0.140712,0.229300");
			}
			cell_rise(Timing_X1) {
				values ("0.129661,0.136649,0.150355,0.177781,0.231945,0.339183", \
				        "0.133365,0.140302,0.153926,0.181311,0.235499,0.342807", \
				        "0.139980,0.146929,0.160595,0.188005,0.242222,0.349491", \
				        "0.151923,0.158911,0.172737,0.200123,0.254365,0.361689", \
				        "0.175832,0.182774,0.196508,0.223859,0.277824,0.385029", \
				        "0.222041,0.229654,0.244639,0.273144,0.327238,0.433644", \
				        "0.298494,0.308036,0.324889,0.358101,0.420551,0.534852", \
				        "0.427965,0.438849,0.459789,0.499505,0.573243,0.706361");
			}
			fall_transition(Timing_X1) {
				values ("0.023703,0.025932,0.030430,0.038740,0.055545,0.089294", \
				        "0.023697,0.025924,0.030431,0.038730,0.055644,0.089272", \
				        "0.023693,0.025889,0.030241,0.038818,0.055601,0.089292", \
				        "0.025292,0.027305,0.031401,0.039325,0.055660,0.089286", \
				        "0.031042,0.033014,0.037171,0.044633,0.059700,0.090684", \
				        "0.045417,0.047342,0.051236,0.058425,0.072740,0.101692", \
				        "0.073905,0.075974,0.080264,0.088273,0.103065,0.130808", \
				        "0.125246,0.128044,0.133130,0.142854,0.160722,0.192138");
			}
			rise_transition(Timing_X1) {
				values ("0.080088,0.086563,0.099342,0.124409,0.174003,0.272583", \
				        "0.080091,0.086571,0.099307,0.124458,0.174004,0.272560", \
				        "0.080108,0.086570,0.099338,0.124443,0.174032,0.272551", \
				        "0.080086,0.086577,0.099323,0.124482,0.174003,0.272569", \
				        "0.080889,0.087172,0.099542,0.124423,0.173984,0.272553", \
				        "0.093770,0.099590,0.110773,0.132459,0.177452,0.272589", \
				        "0.117443,0.123903,0.136562,0.160646,0.205483,0.290100", \
				        "0.154711,0.162124,0.176861,0.204178,0.254789,0.348246");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & !B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029994,0.033110,0.039394,0.051549,0.075477,0.122610", \
				        "0.032963,0.035974,0.042213,0.054476,0.078392,0.125512", \
				        "0.039270,0.042145,0.048034,0.060179,0.084086,0.131125", \
				        "0.050630,0.054064,0.060482,0.072564,0.095743,0.142632", \
				        "0.061763,0.066428,0.075229,0.091277,0.119266,0.166508", \
				        "0.068620,0.074798,0.086618,0.108193,0.145845,0.208116", \
				        "0.061346,0.069878,0.085823,0.114908,0.165311,0.248821", \
				        "0.019627,0.031162,0.052527,0.091581,0.159414,0.271775");
			}
			cell_rise(Timing_X1) {
				values ("0.055357,0.062250,0.075962,0.102732,0.156185,0.262782", \
				        "0.058439,0.065291,0.078948,0.105607,0.159187,0.265785", \
				        "0.065187,0.071933,0.085524,0.112062,0.165376,0.271838", \
				        "0.079888,0.086494,0.099639,0.125961,0.178719,0.284843", \
				        "0.106716,0.114555,0.129476,0.155844,0.207587,0.312348", \
				        "0.146426,0.156140,0.174800,0.208855,0.268009,0.371342", \
				        "0.209421,0.222017,0.244883,0.287133,0.361925,0.488864", \
				        "0.315973,0.331234,0.360170,0.412344,0.504973,0.664404");
			}
			fall_transition(Timing_X1) {
				values ("0.026414,0.029145,0.034440,0.044278,0.064311,0.104359", \
				        "0.025901,0.028837,0.034137,0.044395,0.064228,0.104430", \
				        "0.025251,0.027905,0.033511,0.044017,0.064332,0.104360", \
				        "0.030797,0.033068,0.037077,0.045399,0.063843,0.104367", \
				        "0.043549,0.045910,0.050661,0.058697,0.073418,0.106101", \
				        "0.065511,0.068442,0.073979,0.084027,0.101678,0.132253", \
				        "0.103463,0.107333,0.114693,0.127583,0.149832,0.187469", \
				        "0.169703,0.175324,0.185352,0.202909,0.232491,0.280591");
			}
			rise_transition(Timing_X1) {
				values ("0.064923,0.071878,0.085501,0.112255,0.163402,0.261695", \
				        "0.064920,0.071870,0.085550,0.112299,0.163424,0.261717", \
				        "0.064863,0.071864,0.085496,0.112273,0.163404,0.261716", \
				        "0.066368,0.072617,0.085598,0.112264,0.163380,0.261714", \
				        "0.079700,0.084374,0.094532,0.116289,0.163434,0.261714", \
				        "0.109755,0.114753,0.124263,0.142745,0.179393,0.263692", \
				        "0.156826,0.161594,0.171878,0.192828,0.232766,0.303966", \
				        "0.235292,0.239941,0.250015,0.271697,0.316865,0.403043");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & !B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.022380,0.025251,0.031244,0.043068,0.066438,0.113081", \
				        "0.025470,0.028305,0.034134,0.045928,0.069389,0.115997", \
				        "0.032179,0.034983,0.040311,0.051724,0.075101,0.121640", \
				        "0.040313,0.044150,0.051169,0.064091,0.086864,0.133131", \
				        "0.047037,0.052245,0.061873,0.079275,0.108894,0.157166", \
				        "0.048034,0.054966,0.068024,0.091501,0.131375,0.196180", \
				        "0.032662,0.042572,0.060150,0.091876,0.145501,0.232441", \
				        "-0.019103,-0.006219,0.017630,0.060053,0.132301,0.249478");
			}
			cell_rise(Timing_X1) {
				values ("0.054412,0.061218,0.074754,0.101451,0.154771,0.260924", \
				        "0.057485,0.064256,0.077713,0.104397,0.157727,0.263928", \
				        "0.064249,0.070936,0.084296,0.110774,0.163921,0.270043", \
				        "0.078980,0.085517,0.098571,0.124698,0.177320,0.283017", \
				        "0.105478,0.113270,0.128112,0.154705,0.206159,0.310541", \
				        "0.144643,0.154286,0.172928,0.207081,0.266403,0.369536", \
				        "0.206524,0.219243,0.242104,0.284513,0.359434,0.486518", \
				        "0.310914,0.326260,0.355467,0.408018,0.500968,0.660586");
			}
			fall_transition(Timing_X1) {
				values ("0.019676,0.022604,0.027956,0.038386,0.058302,0.098452", \
				        "0.018995,0.021886,0.027623,0.038237,0.058377,0.098450", \
				        "0.020453,0.022682,0.027885,0.037646,0.058255,0.098425", \
				        "0.027676,0.029853,0.034058,0.041225,0.058438,0.098420", \
				        "0.040632,0.042997,0.047555,0.055700,0.070512,0.101435", \
				        "0.062855,0.065719,0.071341,0.081245,0.098894,0.129434", \
				        "0.100916,0.104876,0.112091,0.125047,0.147160,0.184706", \
				        "0.167640,0.173014,0.182961,0.200584,0.230012,0.277883");
			}
			rise_transition(Timing_X1) {
				values ("0.046437,0.052627,0.064813,0.089028,0.137585,0.234698", \
				        "0.046431,0.052616,0.064913,0.089099,0.137590,0.234723", \
				        "0.046367,0.052582,0.064804,0.089054,0.137610,0.234734", \
				        "0.047980,0.053371,0.065041,0.089097,0.137631,0.234702", \
				        "0.059935,0.064713,0.073790,0.093182,0.137702,0.234730", \
				        "0.080015,0.086013,0.097254,0.117425,0.153725,0.236750", \
				        "0.113379,0.119976,0.133172,0.157658,0.201891,0.277101", \
				        "0.173170,0.180450,0.195387,0.223419,0.275762,0.369178");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.020670,0.023159,0.028198,0.038139,0.057848,0.097175", \
				        "0.023797,0.026184,0.031150,0.041077,0.060845,0.100169", \
				        "0.030082,0.032668,0.037437,0.047121,0.066773,0.106010", \
				        "0.037052,0.040582,0.047093,0.058901,0.079062,0.117986", \
				        "0.042115,0.046979,0.055945,0.072006,0.099234,0.143069", \
				        "0.040440,0.046983,0.059211,0.081152,0.118121,0.177713", \
				        "0.020635,0.029988,0.046642,0.076520,0.126736,0.207502", \
				        "-0.038991,-0.026853,-0.004118,0.036054,0.104249,0.214196");
			}
			cell_rise(Timing_X1) {
				values ("0.054378,0.061175,0.074701,0.101405,0.154726,0.260880", \
				        "0.057391,0.064144,0.077596,0.104286,0.157610,0.263828", \
				        "0.064109,0.070807,0.084168,0.110638,0.163778,0.269886", \
				        "0.079001,0.085506,0.098561,0.124650,0.177225,0.282888", \
				        "0.105852,0.113590,0.128399,0.154925,0.206317,0.310590", \
				        "0.145606,0.155323,0.173891,0.207932,0.267097,0.370091", \
				        "0.209184,0.221768,0.244529,0.286705,0.361407,0.488177", \
				        "0.317675,0.332700,0.361513,0.413523,0.505842,0.664837");
			}
			fall_transition(Timing_X1) {
				values ("0.016486,0.018916,0.023440,0.031936,0.048956,0.082809", \
				        "0.016080,0.018526,0.023190,0.031854,0.048973,0.082858", \
				        "0.018390,0.020133,0.023869,0.031781,0.048935,0.082850", \
				        "0.025666,0.027526,0.031149,0.037056,0.050337,0.082832", \
				        "0.038255,0.040417,0.044621,0.051634,0.064417,0.088707", \
				        "0.059933,0.062540,0.067683,0.076632,0.092329,0.119127", \
				        "0.097310,0.100916,0.107659,0.119440,0.139535,0.173063", \
				        "0.163306,0.168320,0.177513,0.193731,0.220747,0.264268");
			}
			rise_transition(Timing_X1) {
				values ("0.046411,0.052614,0.064802,0.089025,0.137589,0.234700", \
				        "0.046405,0.052616,0.064907,0.089097,0.137647,0.234702", \
				        "0.046341,0.052544,0.064801,0.089056,0.137618,0.234738", \
				        "0.047964,0.053401,0.065037,0.089088,0.137629,0.234697", \
				        "0.059768,0.064595,0.073665,0.093115,0.137698,0.234727", \
				        "0.079415,0.085491,0.096766,0.117025,0.153449,0.236688", \
				        "0.111885,0.118475,0.131778,0.156438,0.200966,0.276378", \
				        "0.170238,0.177570,0.192368,0.220455,0.273132,0.367079");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & !B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037954,0.041118,0.047458,0.059830,0.084001,0.131496", \
				        "0.040766,0.043840,0.050139,0.062529,0.086724,0.134195", \
				        "0.046438,0.049530,0.055675,0.068116,0.092324,0.139737", \
				        "0.059004,0.062207,0.068262,0.079988,0.103879,0.151158", \
				        "0.073571,0.077845,0.086076,0.101275,0.128079,0.174890", \
				        "0.085230,0.091087,0.101969,0.122318,0.158202,0.218468", \
				        "0.087076,0.094568,0.109094,0.135967,0.183469,0.263833", \
				        "0.063445,0.073665,0.092572,0.127794,0.190242,0.296179");
			}
			cell_rise(Timing_X1) {
				values ("0.068511,0.075361,0.088949,0.115866,0.169298,0.275818", \
				        "0.072049,0.078839,0.092488,0.119364,0.172824,0.279494", \
				        "0.078508,0.085343,0.098852,0.125784,0.179342,0.286122", \
				        "0.090571,0.097420,0.111075,0.137773,0.191280,0.298065", \
				        "0.112177,0.119865,0.134497,0.161691,0.214802,0.321281", \
				        "0.146689,0.155643,0.172909,0.204828,0.263276,0.369945", \
				        "0.205285,0.216027,0.236764,0.274949,0.343665,0.465559", \
				        "0.302724,0.317242,0.343436,0.391283,0.474958,0.619849");
			}
			fall_transition(Timing_X1) {
				values ("0.031948,0.034604,0.039980,0.049912,0.069833,0.110050", \
				        "0.031970,0.034699,0.039931,0.049779,0.069874,0.110079", \
				        "0.030793,0.033682,0.039442,0.049920,0.069889,0.110013", \
				        "0.034212,0.036362,0.040915,0.049986,0.069562,0.110031", \
				        "0.046978,0.049366,0.054006,0.061942,0.076751,0.111060", \
				        "0.068642,0.071675,0.077273,0.087274,0.104816,0.135293", \
				        "0.105157,0.108932,0.116395,0.129462,0.152147,0.190288", \
				        "0.167454,0.173199,0.183218,0.201027,0.231060,0.280508");
			}
			rise_transition(Timing_X1) {
				values ("0.064918,0.071858,0.085533,0.112271,0.163425,0.261722", \
				        "0.064927,0.071839,0.085499,0.112262,0.163420,0.261736", \
				        "0.064922,0.071857,0.085516,0.112292,0.163391,0.261725", \
				        "0.065598,0.072172,0.085580,0.112293,0.163422,0.261710", \
				        "0.074597,0.079892,0.091115,0.114778,0.163474,0.261733", \
				        "0.097406,0.102351,0.112428,0.132886,0.173897,0.263376", \
				        "0.134017,0.138806,0.148299,0.168477,0.209703,0.289822", \
				        "0.195975,0.200061,0.209324,0.228947,0.270341,0.354843");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & !B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.029388,0.032520,0.038726,0.050886,0.074764,0.121841", \
				        "0.032186,0.035194,0.041446,0.053681,0.077557,0.124600", \
				        "0.038396,0.041204,0.047126,0.059223,0.083138,0.130139", \
				        "0.049325,0.052837,0.059338,0.071520,0.094713,0.141556", \
				        "0.059885,0.064626,0.073566,0.089858,0.118065,0.165408", \
				        "0.066559,0.072847,0.084820,0.106562,0.144390,0.206854", \
				        "0.061831,0.070183,0.085956,0.114745,0.164749,0.247958", \
				        "0.030237,0.041366,0.061965,0.099569,0.165267,0.274991");
			}
			cell_rise(Timing_X1) {
				values ("0.067557,0.074339,0.087852,0.114603,0.167854,0.273992", \
				        "0.071100,0.077793,0.091296,0.118079,0.171418,0.277697", \
				        "0.077560,0.084319,0.097748,0.124552,0.177926,0.284294", \
				        "0.089634,0.096409,0.109869,0.136532,0.189857,0.296260", \
				        "0.111045,0.118677,0.133267,0.160497,0.213427,0.319456", \
				        "0.145190,0.154094,0.171284,0.203308,0.261720,0.368120", \
				        "0.203113,0.213810,0.234531,0.272891,0.341627,0.463409", \
				        "0.299007,0.313776,0.339953,0.388090,0.472005,0.616859");
			}
			fall_transition(Timing_X1) {
				values ("0.026263,0.028898,0.034236,0.044130,0.063993,0.104165", \
				        "0.025736,0.028656,0.034087,0.044066,0.064104,0.104152", \
				        "0.025263,0.027882,0.033522,0.043817,0.064039,0.104121", \
				        "0.031136,0.033239,0.037362,0.045480,0.063653,0.104151", \
				        "0.044121,0.046506,0.051004,0.059053,0.073649,0.106087", \
				        "0.065630,0.068618,0.074314,0.084359,0.102033,0.132467", \
				        "0.101847,0.105638,0.113198,0.126349,0.149125,0.187312", \
				        "0.163466,0.169398,0.179617,0.197648,0.227855,0.277294");
			}
			rise_transition(Timing_X1) {
				values ("0.046439,0.052580,0.064955,0.089111,0.137647,0.234723", \
				        "0.046435,0.052620,0.064883,0.089078,0.137643,0.234740", \
				        "0.046441,0.052611,0.064950,0.089113,0.137617,0.234714", \
				        "0.047171,0.052960,0.064983,0.089109,0.137650,0.234735", \
				        "0.055217,0.060292,0.070518,0.091663,0.137721,0.234720", \
				        "0.070951,0.076320,0.087166,0.107979,0.148199,0.236375", \
				        "0.098117,0.103846,0.115187,0.137217,0.180366,0.262941", \
				        "0.145732,0.152010,0.164540,0.188506,0.234561,0.323369");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026264,0.028905,0.034225,0.044458,0.064664,0.104419", \
				        "0.029179,0.031722,0.037026,0.047348,0.067536,0.107273", \
				        "0.035675,0.038070,0.042913,0.053168,0.073370,0.113050", \
				        "0.045228,0.048499,0.054527,0.065683,0.085477,0.124957", \
				        "0.053834,0.058274,0.066524,0.081593,0.107525,0.149938", \
				        "0.057618,0.063509,0.074695,0.094993,0.129928,0.187389", \
				        "0.048135,0.055960,0.070756,0.097814,0.144594,0.221720", \
				        "0.007867,0.018478,0.037953,0.073542,0.135449,0.238199");
			}
			cell_rise(Timing_X1) {
				values ("0.067518,0.074293,0.087806,0.114562,0.167809,0.273945", \
				        "0.071019,0.077711,0.091200,0.117976,0.171315,0.277599", \
				        "0.077430,0.084211,0.097610,0.124398,0.177774,0.284144", \
				        "0.089544,0.096295,0.109756,0.136402,0.189690,0.296077", \
				        "0.111041,0.118630,0.133217,0.160434,0.213310,0.319296", \
				        "0.145601,0.154466,0.171613,0.203560,0.261881,0.368182", \
				        "0.204982,0.215712,0.236251,0.274373,0.342838,0.464317", \
				        "0.304784,0.319195,0.345063,0.392611,0.475877,0.620073");
			}
			fall_transition(Timing_X1) {
				values ("0.021757,0.024067,0.028388,0.036799,0.053751,0.087672", \
				        "0.021279,0.023746,0.028451,0.036919,0.053759,0.087659", \
				        "0.021793,0.023862,0.028191,0.036440,0.053827,0.087624", \
				        "0.028605,0.030485,0.033940,0.039973,0.054475,0.087671", \
				        "0.041295,0.043394,0.047650,0.054534,0.067094,0.092090", \
				        "0.062300,0.065013,0.070104,0.079214,0.094945,0.121645", \
				        "0.098073,0.101511,0.108386,0.120416,0.140904,0.175113", \
				        "0.159356,0.164850,0.174320,0.190922,0.218531,0.263236");
			}
			rise_transition(Timing_X1) {
				values ("0.046417,0.052558,0.064945,0.089103,0.137648,0.234719", \
				        "0.046410,0.052560,0.064867,0.089069,0.137647,0.234738", \
				        "0.046416,0.052588,0.064940,0.089106,0.137620,0.234709", \
				        "0.047153,0.052954,0.064883,0.089102,0.137650,0.234731", \
				        "0.055207,0.060291,0.070531,0.091664,0.137724,0.234715", \
				        "0.070755,0.076159,0.087053,0.107897,0.148159,0.236368", \
				        "0.097215,0.102968,0.114420,0.136546,0.179914,0.262694", \
				        "0.143938,0.150172,0.162677,0.186621,0.232927,0.322206");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.003081,0.002842,0.002364,0.001395,-0.000533,-0.004403", \
				        "0.003074,0.002831,0.002351,0.001389,-0.000546,-0.004401", \
				        "0.003066,0.002823,0.002341,0.001375,-0.000555,-0.004418", \
				        "0.003067,0.002822,0.002339,0.001375,-0.000561,-0.004428", \
				        "0.003080,0.002834,0.002360,0.001393,-0.000537,-0.004405", \
				        "0.003219,0.002980,0.002487,0.001500,-0.000452,-0.004346", \
				        "0.003905,0.003626,0.003075,0.002012,-0.000055,-0.004050", \
				        "0.005936,0.005619,0.004995,0.003756,0.001435,-0.002931");
			}
			rise_power(Power_X1) {
				values ("0.004282,0.004515,0.004997,0.005976,0.007916,0.011792", \
				        "0.004268,0.004517,0.004987,0.005963,0.007909,0.011794", \
				        "0.004271,0.004510,0.004997,0.005963,0.007910,0.011784", \
				        "0.004330,0.004571,0.005048,0.006010,0.007941,0.011809", \
				        "0.004517,0.004761,0.005228,0.006165,0.008066,0.011901", \
				        "0.005046,0.005252,0.005704,0.006612,0.008468,0.012221", \
				        "0.006194,0.006415,0.006836,0.007694,0.009458,0.013080", \
				        "0.008781,0.008971,0.009351,0.010142,0.011770,0.015201");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.004038,0.004291,0.004765,0.005743,0.007681,0.011561", \
				        "0.004027,0.004279,0.004758,0.005733,0.007674,0.011557", \
				        "0.004033,0.004280,0.004762,0.005733,0.007673,0.011551", \
				        "0.004091,0.004325,0.004812,0.005775,0.007706,0.011569", \
				        "0.004294,0.004532,0.004993,0.005935,0.007835,0.011669", \
				        "0.004794,0.005026,0.005472,0.006380,0.008230,0.011987", \
				        "0.005970,0.006185,0.006608,0.007467,0.009225,0.012848", \
				        "0.008555,0.008743,0.009122,0.009910,0.011535,0.014961");
			}
			fall_power(Power_X1) {
				values ("0.002070,0.001835,0.001349,0.000380,-0.001555,-0.005426", \
				        "0.002071,0.001815,0.001339,0.000372,-0.001550,-0.005426", \
				        "0.002057,0.001812,0.001330,0.000365,-0.001574,-0.005439", \
				        "0.002046,0.001802,0.001325,0.000357,-0.001580,-0.005445", \
				        "0.002056,0.001827,0.001346,0.000377,-0.001554,-0.005427", \
				        "0.002251,0.001998,0.001495,0.000500,-0.001463,-0.005353", \
				        "0.003038,0.002731,0.002163,0.001071,-0.001034,-0.005053", \
				        "0.005214,0.004873,0.004214,0.002939,0.000552,-0.003875");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C2";

			rise_power(Power_X1) {
				values ("0.004282,0.004515,0.004997,0.005976,0.007916,0.011792", \
				        "0.004268,0.004517,0.004987,0.005963,0.007909,0.011794", \
				        "0.004271,0.004510,0.004997,0.005963,0.007910,0.011784", \
				        "0.004330,0.004571,0.005048,0.006010,0.007941,0.011809", \
				        "0.004517,0.004761,0.005228,0.006165,0.008066,0.011901", \
				        "0.005046,0.005252,0.005704,0.006612,0.008468,0.012221", \
				        "0.006194,0.006415,0.006836,0.007694,0.009458,0.013080", \
				        "0.008781,0.008971,0.009351,0.010142,0.011770,0.015201");
			}
			fall_power(Power_X1) {
				values ("0.003081,0.002842,0.002364,0.001395,-0.000533,-0.004403", \
				        "0.003074,0.002831,0.002351,0.001389,-0.000546,-0.004401", \
				        "0.003066,0.002823,0.002341,0.001375,-0.000555,-0.004418", \
				        "0.003067,0.002822,0.002339,0.001375,-0.000561,-0.004428", \
				        "0.003080,0.002834,0.002360,0.001393,-0.000537,-0.004405", \
				        "0.003219,0.002980,0.002487,0.001500,-0.000452,-0.004346", \
				        "0.003905,0.003626,0.003075,0.002012,-0.000055,-0.004050", \
				        "0.005936,0.005619,0.004995,0.003756,0.001435,-0.002931");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2 & C2 | B1 & C1";

			rise_power(Power_X1) {
				values ("0.003976,0.004243,0.004716,0.005690,0.007628,0.011508", \
				        "0.003978,0.004225,0.004707,0.005676,0.007619,0.011500", \
				        "0.003986,0.004230,0.004710,0.005680,0.007620,0.011494", \
				        "0.004051,0.004287,0.004769,0.005729,0.007654,0.011520", \
				        "0.004274,0.004504,0.004961,0.005898,0.007797,0.011632", \
				        "0.004794,0.005011,0.005462,0.006364,0.008213,0.011964", \
				        "0.006014,0.006214,0.006634,0.007489,0.009249,0.012867", \
				        "0.008652,0.008844,0.009219,0.010009,0.011639,0.015058");
			}
			fall_power(Power_X1) {
				values ("0.002248,0.002000,0.001519,0.000554,-0.001377,-0.005243", \
				        "0.002232,0.001987,0.001512,0.000547,-0.001382,-0.005242", \
				        "0.002220,0.001987,0.001500,0.000537,-0.001393,-0.005259", \
				        "0.002227,0.001985,0.001508,0.000536,-0.001401,-0.005269", \
				        "0.002252,0.002011,0.001530,0.000566,-0.001368,-0.005238", \
				        "0.002465,0.002211,0.001708,0.000710,-0.001259,-0.005158", \
				        "0.003317,0.003019,0.002451,0.001350,-0.000766,-0.004814", \
				        "0.005611,0.005282,0.004630,0.003357,0.000959,-0.003504");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005458,0.005691,0.006180,0.007153,0.009097,0.012990", \
				        "0.005444,0.005686,0.006168,0.007143,0.009088,0.012983", \
				        "0.005443,0.005686,0.006170,0.007141,0.009084,0.012974", \
				        "0.005483,0.005728,0.006213,0.007178,0.009115,0.012993", \
				        "0.005695,0.005910,0.006384,0.007335,0.009239,0.013088", \
				        "0.006165,0.006389,0.006854,0.007775,0.009627,0.013409", \
				        "0.007319,0.007537,0.007965,0.008844,0.010627,0.014290", \
				        "0.009859,0.010068,0.010459,0.011276,0.012957,0.016427");
			}
			fall_power(Power_X1) {
				values ("0.001993,0.001759,0.001270,0.000298,-0.001641,-0.005511", \
				        "0.001982,0.001749,0.001267,0.000304,-0.001628,-0.005494", \
				        "0.001980,0.001729,0.001255,0.000293,-0.001636,-0.005499", \
				        "0.001956,0.001719,0.001240,0.000278,-0.001647,-0.005513", \
				        "0.001955,0.001734,0.001247,0.000285,-0.001651,-0.005517", \
				        "0.002181,0.001924,0.001413,0.000416,-0.001547,-0.005438", \
				        "0.002966,0.002690,0.002133,0.001056,-0.001047,-0.005095", \
				        "0.005151,0.004858,0.004234,0.003023,0.000698,-0.003705");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005208,0.005458,0.005949,0.006924,0.008861,0.012753", \
				        "0.005205,0.005456,0.005939,0.006908,0.008854,0.012737", \
				        "0.005200,0.005449,0.005941,0.006909,0.008849,0.012729", \
				        "0.005248,0.005504,0.005985,0.006945,0.008883,0.012757", \
				        "0.005430,0.005680,0.006155,0.007097,0.009003,0.012854", \
				        "0.005935,0.006161,0.006625,0.007541,0.009394,0.013166", \
				        "0.007085,0.007306,0.007737,0.008600,0.010397,0.014049", \
				        "0.009640,0.009815,0.010230,0.011052,0.012723,0.016201");
			}
			fall_power(Power_X1) {
				values ("0.000983,0.000743,0.000252,-0.000721,-0.002655,-0.006527", \
				        "0.000970,0.000740,0.000247,-0.000715,-0.002646,-0.006515", \
				        "0.000952,0.000718,0.000243,-0.000722,-0.002649,-0.006518", \
				        "0.000943,0.000698,0.000221,-0.000739,-0.002667,-0.006533", \
				        "0.000961,0.000712,0.000232,-0.000734,-0.002673,-0.006543", \
				        "0.001207,0.000945,0.000432,-0.000574,-0.002555,-0.006454", \
				        "0.002067,0.001789,0.001224,0.000118,-0.002012,-0.006088", \
				        "0.004399,0.004087,0.003429,0.002184,-0.000195,-0.004649");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & C2";

			rise_power(Power_X1) {
				values ("0.005362,0.005594,0.006082,0.007055,0.009001,0.012898", \
				        "0.005350,0.005594,0.006075,0.007048,0.008992,0.012886", \
				        "0.005353,0.005589,0.006081,0.007050,0.008993,0.012885", \
				        "0.005407,0.005641,0.006126,0.007093,0.009024,0.012901", \
				        "0.005613,0.005819,0.006305,0.007253,0.009156,0.013008", \
				        "0.006080,0.006317,0.006774,0.007697,0.009557,0.013330", \
				        "0.007240,0.007458,0.007896,0.008781,0.010573,0.014236", \
				        "0.009787,0.009990,0.010408,0.011226,0.012914,0.016407");
			}
			fall_power(Power_X1) {
				values ("0.001156,0.000919,0.000429,-0.000544,-0.002475,-0.006342", \
				        "0.001147,0.000914,0.000424,-0.000541,-0.002465,-0.006327", \
				        "0.001136,0.000898,0.000416,-0.000544,-0.002472,-0.006334", \
				        "0.001113,0.000880,0.000403,-0.000559,-0.002487,-0.006345", \
				        "0.001144,0.000907,0.000418,-0.000552,-0.002487,-0.006353", \
				        "0.001399,0.001138,0.000625,-0.000386,-0.002363,-0.006255", \
				        "0.002271,0.002009,0.001435,0.000332,-0.001795,-0.005872", \
				        "0.004656,0.004315,0.003668,0.002428,0.000057,-0.004399");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005679,0.005933,0.006421,0.007391,0.009340,0.013221", \
				        "0.005675,0.005913,0.006405,0.007375,0.009316,0.013210", \
				        "0.005664,0.005901,0.006389,0.007362,0.009310,0.013197", \
				        "0.005658,0.005901,0.006389,0.007360,0.009309,0.013203", \
				        "0.005701,0.005930,0.006421,0.007390,0.009332,0.013218", \
				        "0.005942,0.006165,0.006643,0.007589,0.009491,0.013342", \
				        "0.006763,0.006982,0.007426,0.008318,0.010150,0.013881", \
				        "0.008800,0.009002,0.009407,0.010239,0.011942,0.015480");
			}
			fall_power(Power_X1) {
				values ("0.002998,0.002768,0.002283,0.001313,-0.000627,-0.004495", \
				        "0.002996,0.002762,0.002283,0.001311,-0.000622,-0.004487", \
				        "0.002982,0.002744,0.002258,0.001293,-0.000635,-0.004496", \
				        "0.002969,0.002736,0.002255,0.001288,-0.000641,-0.004517", \
				        "0.002978,0.002743,0.002261,0.001298,-0.000645,-0.004509", \
				        "0.003081,0.002843,0.002348,0.001382,-0.000566,-0.004448", \
				        "0.003647,0.003383,0.002873,0.001853,-0.000164,-0.004137", \
				        "0.005416,0.005135,0.004576,0.003458,0.001280,-0.002925");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005448,0.005701,0.006188,0.007162,0.009102,0.012989", \
				        "0.005437,0.005684,0.006175,0.007146,0.009083,0.012975", \
				        "0.005430,0.005674,0.006158,0.007132,0.009075,0.012963", \
				        "0.005423,0.005669,0.006155,0.007132,0.009076,0.012971", \
				        "0.005459,0.005705,0.006189,0.007163,0.009096,0.012978", \
				        "0.005699,0.005939,0.006410,0.007356,0.009258,0.013102", \
				        "0.006542,0.006754,0.007194,0.008092,0.009917,0.013642", \
				        "0.008567,0.008781,0.009169,0.010003,0.011717,0.015244");
			}
			fall_power(Power_X1) {
				values ("0.001996,0.001764,0.001275,0.000300,-0.001643,-0.005511", \
				        "0.002003,0.001743,0.001269,0.000296,-0.001639,-0.005504", \
				        "0.001981,0.001731,0.001253,0.000285,-0.001645,-0.005514", \
				        "0.001975,0.001724,0.001243,0.000278,-0.001662,-0.005533", \
				        "0.001960,0.001717,0.001245,0.000280,-0.001661,-0.005531", \
				        "0.002084,0.001836,0.001349,0.000373,-0.001574,-0.005458", \
				        "0.002714,0.002442,0.001917,0.000881,-0.001156,-0.005141", \
				        "0.004614,0.004296,0.003702,0.002567,0.000353,-0.003891");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & C2";

			rise_power(Power_X1) {
				values ("0.005589,0.005843,0.006326,0.007300,0.009245,0.013128", \
				        "0.005580,0.005826,0.006311,0.007283,0.009226,0.013120", \
				        "0.005568,0.005816,0.006292,0.007267,0.009214,0.013105", \
				        "0.005563,0.005805,0.006297,0.007269,0.009217,0.013111", \
				        "0.005601,0.005846,0.006330,0.007320,0.009236,0.013122", \
				        "0.005856,0.006080,0.006557,0.007490,0.009407,0.013255", \
				        "0.006690,0.006893,0.007344,0.008213,0.010079,0.013813", \
				        "0.008711,0.008929,0.009333,0.010167,0.011883,0.015426");
			}
			fall_power(Power_X1) {
				values ("0.002179,0.001944,0.001450,0.000480,-0.001458,-0.005328", \
				        "0.002150,0.001926,0.001443,0.000478,-0.001452,-0.005320", \
				        "0.002153,0.001907,0.001422,0.000463,-0.001466,-0.005327", \
				        "0.002145,0.001902,0.001423,0.000453,-0.001478,-0.005348", \
				        "0.002137,0.001907,0.001438,0.000461,-0.001474,-0.005345", \
				        "0.002279,0.002022,0.001549,0.000563,-0.001386,-0.005262", \
				        "0.002906,0.002648,0.002125,0.001091,-0.000947,-0.004932", \
				        "0.004844,0.004538,0.003953,0.002807,0.000589,-0.003654");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & !B1 & B2 & !C2";

			rise_power(Power_X1) {
				values ("0.002399,0.002645,0.003138,0.004112,0.006055,0.009938", \
				        "0.002396,0.002647,0.003135,0.004115,0.006054,0.009936", \
				        "0.002420,0.002664,0.003150,0.004118,0.006058,0.009932", \
				        "0.002497,0.002732,0.003215,0.004169,0.006091,0.009950", \
				        "0.002722,0.002953,0.003412,0.004341,0.006229,0.010052", \
				        "0.003270,0.003484,0.003917,0.004807,0.006631,0.010374", \
				        "0.004517,0.004705,0.005095,0.005912,0.007633,0.011242", \
				        "0.007289,0.007437,0.007744,0.008426,0.009960,0.013326");
			}
			fall_power(Power_X1) {
				values ("0.002022,0.001779,0.001301,0.000344,-0.001579,-0.005441", \
				        "0.002041,0.001794,0.001309,0.000353,-0.001574,-0.005434", \
				        "0.002058,0.001812,0.001323,0.000364,-0.001565,-0.005424", \
				        "0.002100,0.001863,0.001371,0.000400,-0.001538,-0.005402", \
				        "0.002263,0.002003,0.001507,0.000511,-0.001455,-0.005353", \
				        "0.002728,0.002458,0.001916,0.000857,-0.001178,-0.005157", \
				        "0.003963,0.003651,0.003048,0.001878,-0.000342,-0.004516", \
				        "0.006791,0.006455,0.005766,0.004454,0.001967,-0.002638");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & !B2 & !C2";

			rise_power(Power_X1) {
				values ("0.002165,0.002413,0.002904,0.003875,0.005823,0.009698", \
				        "0.002161,0.002411,0.002905,0.003876,0.005818,0.009695", \
				        "0.002188,0.002423,0.002913,0.003883,0.005821,0.009700", \
				        "0.002261,0.002501,0.002979,0.003932,0.005856,0.009712", \
				        "0.002492,0.002718,0.003176,0.004107,0.005997,0.009819", \
				        "0.003041,0.003253,0.003686,0.004576,0.006403,0.010141", \
				        "0.004314,0.004500,0.004876,0.005687,0.007397,0.011003", \
				        "0.007182,0.007311,0.007597,0.008240,0.009744,0.013094");
			}
			fall_power(Power_X1) {
				values ("0.000980,0.000739,0.000255,-0.000704,-0.002634,-0.006497", \
				        "0.000989,0.000740,0.000260,-0.000696,-0.002627,-0.006491", \
				        "0.001010,0.000763,0.000319,-0.000682,-0.002614,-0.006480", \
				        "0.001058,0.000819,0.000335,-0.000644,-0.002583,-0.006458", \
				        "0.001267,0.000999,0.000467,-0.000517,-0.002500,-0.006406", \
				        "0.001819,0.001527,0.000990,-0.000127,-0.002196,-0.006195", \
				        "0.003153,0.002831,0.002262,0.000984,-0.001294,-0.005520", \
				        "0.006082,0.005733,0.005012,0.003670,0.001123,-0.003572");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & B2 & !C2";

			rise_power(Power_X1) {
				values ("0.002119,0.002369,0.002857,0.003837,0.005780,0.009662", \
				        "0.002120,0.002364,0.002855,0.003827,0.005772,0.009649", \
				        "0.002135,0.002379,0.002865,0.003835,0.005773,0.009642", \
				        "0.002219,0.002457,0.002932,0.003889,0.005807,0.009674", \
				        "0.002463,0.002687,0.003143,0.004069,0.005954,0.009782", \
				        "0.003028,0.003239,0.003671,0.004559,0.006376,0.010121", \
				        "0.004327,0.004506,0.004884,0.005698,0.007419,0.011027", \
				        "0.007248,0.007387,0.007663,0.008311,0.009810,0.013170");
			}
			fall_power(Power_X1) {
				values ("0.001198,0.000952,0.000462,-0.000490,-0.002417,-0.006274", \
				        "0.001213,0.000959,0.000472,-0.000486,-0.002410,-0.006269", \
				        "0.001219,0.000976,0.000492,-0.000469,-0.002399,-0.006258", \
				        "0.001289,0.001044,0.000556,-0.000425,-0.002364,-0.006234", \
				        "0.001493,0.001242,0.000724,-0.000289,-0.002269,-0.006171", \
				        "0.002094,0.001792,0.001228,0.000136,-0.001943,-0.005943", \
				        "0.003477,0.003153,0.002520,0.001305,-0.000973,-0.005230", \
				        "0.006508,0.006153,0.005452,0.004097,0.001556,-0.003150");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & !B1 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.002651,0.002890,0.003388,0.004363,0.006308,0.010187", \
				        "0.002629,0.002871,0.003365,0.004342,0.006289,0.010175", \
				        "0.002609,0.002852,0.003345,0.004323,0.006273,0.010167", \
				        "0.002599,0.002848,0.003338,0.004312,0.006257,0.010149", \
				        "0.002675,0.002907,0.003392,0.004350,0.006283,0.010157", \
				        "0.003001,0.003221,0.003676,0.004595,0.006480,0.010295", \
				        "0.003965,0.004167,0.004561,0.005399,0.007159,0.010845", \
				        "0.006305,0.006455,0.006772,0.007463,0.009006,0.012412");
			}
			fall_power(Power_X1) {
				values ("0.002989,0.002753,0.002276,0.001313,-0.000607,-0.004463", \
				        "0.003001,0.002758,0.002268,0.001312,-0.000613,-0.004462", \
				        "0.002998,0.002754,0.002269,0.001314,-0.000606,-0.004457", \
				        "0.003027,0.002784,0.002303,0.001336,-0.000594,-0.004450", \
				        "0.003144,0.002909,0.002422,0.001435,-0.000521,-0.004412", \
				        "0.003545,0.003292,0.002774,0.001760,-0.000258,-0.004213", \
				        "0.004619,0.004330,0.003775,0.002680,0.000544,-0.003564", \
				        "0.007084,0.006809,0.006197,0.005000,0.002694,-0.001723");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & !B2 & !C1";

			rise_power(Power_X1) {
				values ("0.002409,0.002654,0.003151,0.004127,0.006077,0.009951", \
				        "0.002396,0.002636,0.003128,0.004100,0.006056,0.009945", \
				        "0.002378,0.002619,0.003109,0.004088,0.006040,0.009929", \
				        "0.002374,0.002604,0.003100,0.004076,0.006027,0.009918", \
				        "0.002434,0.002675,0.003155,0.004116,0.006050,0.009925", \
				        "0.002778,0.002993,0.003444,0.004363,0.006235,0.010060", \
				        "0.003778,0.003958,0.004342,0.005174,0.006931,0.010621", \
				        "0.006197,0.006328,0.006621,0.007275,0.008786,0.012187");
			}
			fall_power(Power_X1) {
				values ("0.001955,0.001714,0.001223,0.000266,-0.001659,-0.005518", \
				        "0.001940,0.001708,0.001218,0.000261,-0.001665,-0.005529", \
				        "0.001953,0.001712,0.001223,0.000268,-0.001663,-0.005523", \
				        "0.001996,0.001751,0.001263,0.000292,-0.001645,-0.005513", \
				        "0.002149,0.001891,0.001392,0.000399,-0.001563,-0.005467", \
				        "0.002587,0.002321,0.001794,0.000752,-0.001278,-0.005255", \
				        "0.003731,0.003452,0.002870,0.001744,-0.000424,-0.004579", \
				        "0.006321,0.006001,0.005377,0.004157,0.001793,-0.002673");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.002372,0.002613,0.003100,0.004083,0.006028,0.009904", \
				        "0.002347,0.002590,0.003084,0.004061,0.006009,0.009895", \
				        "0.002326,0.002571,0.003057,0.004039,0.005992,0.009878", \
				        "0.002324,0.002565,0.003049,0.004028,0.005981,0.009871", \
				        "0.002394,0.002632,0.003109,0.004070,0.006002,0.009878", \
				        "0.002735,0.002953,0.003407,0.004326,0.006205,0.010013", \
				        "0.003760,0.003951,0.004340,0.005166,0.006919,0.010596", \
				        "0.006246,0.006375,0.006665,0.007322,0.008838,0.012223");
			}
			fall_power(Power_X1) {
				values ("0.002177,0.001922,0.001432,0.000477,-0.001447,-0.005298", \
				        "0.002162,0.001920,0.001430,0.000473,-0.001451,-0.005303", \
				        "0.002159,0.001925,0.001433,0.000481,-0.001446,-0.005295", \
				        "0.002197,0.001964,0.001480,0.000509,-0.001422,-0.005285", \
				        "0.002360,0.002111,0.001615,0.000625,-0.001336,-0.005238", \
				        "0.002847,0.002564,0.002042,0.000995,-0.001035,-0.005011", \
				        "0.004035,0.003745,0.003166,0.002038,-0.000131,-0.004296", \
				        "0.006721,0.006397,0.005770,0.004542,0.002181,-0.002287");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI221_X2
 Cell Description	: Combinational cell (OAI221_X2) with drive strength X2
*******************************************************************************************/

cell (OAI221_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 27163.317750;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 5155.251000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 6495.326000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 17320.820000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 40723.210000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 17320.830000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 40723.170000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 29339.730000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 52745.760000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 4154.535000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 8561.411000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 18201.080000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 41325.020000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 18201.080000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 39866.570000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 30220.030000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 51036.250000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 4154.540000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 8561.427000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 18201.080000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 42783.390000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 18201.080000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 41324.990000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 30220.030000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 52494.640000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 1396.122000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 5900.366000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 15620.410000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 52487.850000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 15620.420000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 51029.800000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 27639.410000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 62200.540000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000979;
		fall_capacitance	: 0.000974;
		rise_capacitance	: 0.000984;
		fall_capacitance_range		(0.000814, 0.001132);
		rise_capacitance_range		(0.000816, 0.001230);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000018,0.000017,0.000016,0.000015,0.000015,0.000014,0.000013");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000064,0.000044,0.000031,0.000023,0.000018,0.000014,0.000010,0.000006");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000003,0.000002,0.000000,-0.000000,-0.000001,-0.000002,-0.000005");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000016,0.000015,0.000014,0.000013,0.000013,0.000012,0.000012");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000064,0.000045,0.000032,0.000023,0.000018,0.000014,0.000011,0.000005");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000018,0.000017,0.000016,0.000015,0.000015,0.000014,0.000013");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000057,0.000040,0.000029,0.000022,0.000018,0.000014,0.000010,0.000006");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001127;
		fall_capacitance	: 0.001044;
		rise_capacitance	: 0.001211;
		fall_capacitance_range		(0.000920, 0.001178);
		rise_capacitance_range		(0.000970, 0.001492);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000001,-0.000002,-0.000006,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000014,0.000010,0.000006,0.000003,0.000000,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000013,0.000007,0.000003,-0.000000,-0.000003,-0.000006,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000014,0.000009,0.000005,0.000002,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000012,0.000006,0.000003,-0.000000,-0.000003,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000042,0.000030,0.000022,0.000016,0.000011,0.000008,0.000005,0.000000");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000001,-0.000002,-0.000006,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000004,0.000002,0.000001,-0.000001,-0.000002,-0.000006,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000011,0.000007,0.000003,0.000000,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000012,0.000006,0.000002,-0.000000,-0.000003,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000011,0.000008,0.000004,0.000001,-0.000003,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000013,0.000007,0.000003,0.000001,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000011,0.000007,0.000003,0.000000,-0.000004,-0.000010");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001187;
		fall_capacitance	: 0.001167;
		rise_capacitance	: 0.001207;
		fall_capacitance_range		(0.001008, 0.001299);
		rise_capacitance_range		(0.001008, 0.001412);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000004,0.000001,-0.000001,-0.000003,-0.000006,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000072,0.000050,0.000034,0.000024,0.000017,0.000011,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000072,0.000050,0.000034,0.000024,0.000017,0.000011,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000026,0.000019,0.000014,0.000010,0.000008,0.000004,0.000000");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000018,0.000010,0.000005,0.000002,0.000000,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000072,0.000050,0.000034,0.000024,0.000017,0.000011,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000009,0.000004,0.000001,-0.000001,-0.000003,-0.000006,-0.000012");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000008,0.000004,0.000001,-0.000001,-0.000003,-0.000006,-0.000012");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001109;
		fall_capacitance	: 0.001060;
		rise_capacitance	: 0.001158;
		fall_capacitance_range		(0.000926, 0.001316);
		rise_capacitance_range		(0.000929, 0.001515);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000010,0.000006,0.000003,0.000000,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000021,0.000017,0.000013,0.000010,0.000007,0.000004,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000018,0.000013,0.000009,0.000006,0.000003,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000014,0.000010,0.000007,0.000004,0.000002,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000011,0.000007,0.000003,0.000001,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000027,0.000021,0.000016,0.000014,0.000011,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000016,0.000012,0.000009,0.000006,0.000003,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000030,0.000024,0.000021,0.000018,0.000016,0.000014,0.000009");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000011,0.000007,0.000003,0.000001,-0.000002,-0.000005,-0.000011");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000029,0.000023,0.000019,0.000016,0.000013,0.000010,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000018,0.000013,0.000009,0.000006,0.000003,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000027,0.000021,0.000016,0.000014,0.000012,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000025,0.000020,0.000016,0.000014,0.000011,0.000009,0.000005");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001170;
		fall_capacitance	: 0.001181;
		rise_capacitance	: 0.001160;
		fall_capacitance_range		(0.001008, 0.001397);
		rise_capacitance_range		(0.000969, 0.001452);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000079,0.000056,0.000038,0.000026,0.000018,0.000012,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000021,0.000017,0.000015,0.000013,0.000011,0.000008,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000029,0.000023,0.000019,0.000017,0.000015,0.000013,0.000010,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000021,0.000017,0.000015,0.000013,0.000011,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000008,0.000005,0.000003,0.000002,0.000001,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000078,0.000055,0.000037,0.000025,0.000018,0.000012,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000021,0.000017,0.000015,0.000013,0.000011,0.000009,0.000005");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000079,0.000056,0.000038,0.000026,0.000018,0.000012,0.000006,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000012,0.000009,0.000007,0.000005,0.000004,0.000003,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000026,0.000022,0.000019,0.000018,0.000016,0.000014,0.000009");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.044293,0.048896,0.054995,0.066964,0.090426,0.136630", \
				        "0.047275,0.051805,0.057889,0.069904,0.093372,0.139575", \
				        "0.052556,0.057211,0.063177,0.075136,0.098609,0.144852", \
				        "0.062403,0.067313,0.073629,0.085697,0.109182,0.155437", \
				        "0.075519,0.081532,0.089058,0.103300,0.129016,0.176088", \
				        "0.085959,0.094320,0.104656,0.123616,0.156747,0.212622", \
				        "0.084493,0.095963,0.110283,0.136502,0.182014,0.257082", \
				        "0.052387,0.068325,0.087901,0.123944,0.186474,0.289675");
			}
			cell_rise(Timing_X2) {
				values ("0.053159,0.060334,0.069970,0.088628,0.125650,0.199224", \
				        "0.056792,0.063919,0.073517,0.092136,0.129198,0.202772", \
				        "0.064458,0.071599,0.081131,0.099601,0.136608,0.210140", \
				        "0.080911,0.087949,0.097226,0.115697,0.152235,0.225482", \
				        "0.111108,0.119511,0.130240,0.149238,0.185061,0.257466", \
				        "0.154566,0.165726,0.179852,0.205400,0.250074,0.324291", \
				        "0.221856,0.236396,0.254334,0.287403,0.345966,0.444892", \
				        "0.335899,0.353526,0.376571,0.418206,0.492464,0.620171");
			}
			fall_transition(Timing_X2) {
				values ("0.026021,0.029850,0.035067,0.044848,0.064429,0.103806", \
				        "0.026024,0.029898,0.034974,0.044760,0.064485,0.103806", \
				        "0.025927,0.029814,0.035005,0.044816,0.064455,0.103806", \
				        "0.027932,0.031308,0.036024,0.045209,0.064360,0.103729", \
				        "0.036192,0.039506,0.043899,0.052161,0.068542,0.104641", \
				        "0.053181,0.056910,0.061692,0.070314,0.086573,0.118175", \
				        "0.083241,0.087744,0.093676,0.104331,0.123204,0.156474", \
				        "0.134417,0.140925,0.148591,0.162657,0.187104,0.227996");
			}
			rise_transition(Timing_X2) {
				values ("0.065104,0.071961,0.080833,0.099496,0.135740,0.206048", \
				        "0.065102,0.071959,0.080770,0.099554,0.135733,0.206018", \
				        "0.065090,0.072038,0.080778,0.099549,0.135753,0.206016", \
				        "0.066643,0.072767,0.081239,0.099541,0.135788,0.206021", \
				        "0.079759,0.084437,0.090764,0.105301,0.136834,0.206033", \
				        "0.113287,0.118273,0.124253,0.135925,0.158846,0.213120", \
				        "0.160842,0.166844,0.175257,0.190746,0.219139,0.267795", \
				        "0.190855,0.200127,0.211793,0.234404,0.275926,0.347812");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.037437,0.041961,0.047984,0.059802,0.083008,0.128940", \
				        "0.040395,0.044889,0.050911,0.062680,0.085912,0.131834", \
				        "0.045720,0.050290,0.056186,0.067891,0.091130,0.137110", \
				        "0.054714,0.059781,0.066232,0.078418,0.101702,0.147696", \
				        "0.064970,0.071528,0.079613,0.094532,0.120917,0.168300", \
				        "0.070677,0.079857,0.091078,0.111392,0.146241,0.203631", \
				        "0.062492,0.075341,0.090926,0.119147,0.167195,0.244982", \
				        "0.022181,0.039669,0.061023,0.099717,0.165701,0.272747");
			}
			cell_rise(Timing_X2) {
				values ("0.052480,0.059605,0.069106,0.087745,0.124672,0.198064", \
				        "0.056109,0.063170,0.072634,0.091280,0.128236,0.201640", \
				        "0.063779,0.070868,0.080248,0.098747,0.135637,0.209022", \
				        "0.080238,0.087217,0.096443,0.114794,0.151253,0.224310", \
				        "0.110160,0.118557,0.129267,0.148387,0.184155,0.256309", \
				        "0.153100,0.164274,0.178332,0.204037,0.248840,0.323190", \
				        "0.219409,0.234071,0.251969,0.285183,0.343976,0.443112", \
				        "0.329457,0.347605,0.370788,0.412898,0.487772,0.616210");
			}
			fall_transition(Timing_X2) {
				values ("0.021526,0.025381,0.030339,0.040268,0.059810,0.099176", \
				        "0.021511,0.025360,0.030458,0.040258,0.059872,0.099098", \
				        "0.021580,0.025360,0.030361,0.040145,0.059792,0.099183", \
				        "0.024668,0.028015,0.032572,0.041215,0.059912,0.099096", \
				        "0.033678,0.036923,0.041384,0.049287,0.065305,0.100468", \
				        "0.050975,0.054611,0.059407,0.068024,0.084073,0.115136", \
				        "0.081338,0.085750,0.091626,0.102220,0.121106,0.154135", \
				        "0.132702,0.139100,0.146655,0.160721,0.185054,0.225836");
			}
			rise_transition(Timing_X2) {
				values ("0.045829,0.053279,0.063234,0.082352,0.119218,0.190092", \
				        "0.045839,0.053318,0.063271,0.082365,0.119218,0.190081", \
				        "0.045829,0.053261,0.063269,0.082364,0.119225,0.190083", \
				        "0.047401,0.054089,0.063407,0.082359,0.119248,0.190073", \
				        "0.061532,0.066407,0.073492,0.088077,0.120351,0.190083", \
				        "0.090256,0.096563,0.104153,0.118188,0.142644,0.197277", \
				        "0.131820,0.139213,0.149034,0.167141,0.199146,0.251611", \
				        "0.195588,0.204587,0.216306,0.238635,0.279695,0.350843");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.044293,0.048896,0.054995,0.066964,0.090426,0.136630", \
				        "0.047275,0.051805,0.057889,0.069904,0.093372,0.139575", \
				        "0.052556,0.057211,0.063177,0.075136,0.098609,0.144852", \
				        "0.062403,0.067313,0.073629,0.085697,0.109182,0.155437", \
				        "0.075519,0.081532,0.089058,0.103300,0.129016,0.176088", \
				        "0.085959,0.094320,0.104656,0.123616,0.156747,0.212622", \
				        "0.084493,0.095963,0.110283,0.136502,0.182014,0.257082", \
				        "0.052387,0.068325,0.087901,0.123944,0.186474,0.289675");
			}
			cell_rise(Timing_X2) {
				values ("0.053159,0.060334,0.069970,0.088628,0.125650,0.199224", \
				        "0.056792,0.063919,0.073517,0.092136,0.129198,0.202772", \
				        "0.064458,0.071599,0.081131,0.099601,0.136608,0.210140", \
				        "0.080911,0.087949,0.097226,0.115697,0.152235,0.225482", \
				        "0.111108,0.119511,0.130240,0.149238,0.185061,0.257466", \
				        "0.154566,0.165726,0.179852,0.205400,0.250074,0.324291", \
				        "0.221856,0.236396,0.254334,0.287403,0.345966,0.444892", \
				        "0.333841,0.351763,0.374807,0.416591,0.491197,0.619338");
			}
			fall_transition(Timing_X2) {
				values ("0.026021,0.029850,0.035067,0.044848,0.064429,0.103806", \
				        "0.026024,0.029898,0.034974,0.044760,0.064485,0.103806", \
				        "0.025927,0.029814,0.035005,0.044816,0.064455,0.103806", \
				        "0.027932,0.031308,0.036024,0.045209,0.064360,0.103729", \
				        "0.036192,0.039506,0.043899,0.052161,0.068542,0.104641", \
				        "0.053181,0.056910,0.061692,0.070314,0.086573,0.118175", \
				        "0.083241,0.087744,0.093676,0.104331,0.123204,0.156474", \
				        "0.134417,0.140925,0.148591,0.162657,0.187104,0.227996");
			}
			rise_transition(Timing_X2) {
				values ("0.065104,0.071961,0.080833,0.099496,0.135740,0.206048", \
				        "0.065102,0.071959,0.080770,0.099554,0.135733,0.206018", \
				        "0.065090,0.072038,0.080778,0.099549,0.135753,0.206016", \
				        "0.066643,0.072767,0.081239,0.099541,0.135788,0.206021", \
				        "0.079759,0.084437,0.090764,0.105301,0.136834,0.206033", \
				        "0.113287,0.118273,0.124253,0.135925,0.158846,0.213120", \
				        "0.160842,0.166844,0.175257,0.190746,0.219139,0.267795", \
				        "0.234440,0.241406,0.251175,0.270110,0.306736,0.372987");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2 & C2 | B1 & C1";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (B1 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031697,0.035533,0.040607,0.050599,0.070183,0.108907", \
				        "0.034699,0.038539,0.043607,0.053532,0.073150,0.111891", \
				        "0.040077,0.043944,0.048915,0.058793,0.078388,0.117157", \
				        "0.048237,0.052711,0.058358,0.069005,0.088822,0.127664", \
				        "0.056698,0.062644,0.069967,0.083296,0.106668,0.147909", \
				        "0.059810,0.068241,0.078514,0.096913,0.128289,0.179575", \
				        "0.047318,0.059231,0.073658,0.099599,0.143534,0.213955", \
				        "-0.001116,0.015331,0.035399,0.071456,0.132640,0.230972");
			}
			cell_rise(Timing_X2) {
				values ("0.052281,0.059383,0.068884,0.087554,0.124470,0.197844", \
				        "0.055908,0.062980,0.072357,0.091094,0.128012,0.201397", \
				        "0.063637,0.070724,0.080058,0.098565,0.135421,0.208775", \
				        "0.080237,0.087177,0.096389,0.114725,0.151139,0.224170", \
				        "0.110407,0.118796,0.129444,0.148539,0.184249,0.256309", \
				        "0.153965,0.165116,0.179107,0.204729,0.249386,0.323576", \
				        "0.221772,0.236304,0.254138,0.287177,0.345718,0.444517", \
				        "0.335899,0.353526,0.376571,0.418206,0.492464,0.620171");
			}
			fall_transition(Timing_X2) {
				values ("0.017648,0.020931,0.025209,0.033433,0.050016,0.083178", \
				        "0.017618,0.020914,0.025090,0.033381,0.050035,0.083243", \
				        "0.017948,0.021045,0.025129,0.033378,0.050024,0.083168", \
				        "0.021519,0.024329,0.028182,0.035119,0.050444,0.083252", \
				        "0.030226,0.033056,0.036845,0.043571,0.057129,0.085610", \
				        "0.046473,0.049701,0.053985,0.061544,0.075369,0.101762", \
				        "0.075334,0.079283,0.084523,0.093964,0.110476,0.139198", \
				        "0.124454,0.130183,0.137056,0.149724,0.171366,0.207252");
			}
			rise_transition(Timing_X2) {
				values ("0.045566,0.053023,0.062950,0.081998,0.118799,0.189613", \
				        "0.045567,0.052994,0.062894,0.082006,0.118796,0.189608", \
				        "0.045554,0.053001,0.062942,0.082001,0.118795,0.189608", \
				        "0.047124,0.053767,0.063121,0.081995,0.118815,0.189607", \
				        "0.061059,0.065991,0.072957,0.087653,0.119908,0.189607", \
				        "0.089120,0.095493,0.103183,0.117327,0.141917,0.196679", \
				        "0.129305,0.136843,0.146841,0.165205,0.197501,0.250325", \
				        "0.190855,0.200127,0.211793,0.234404,0.275926,0.347812");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042545,0.047134,0.053155,0.064863,0.088075,0.133946", \
				        "0.045330,0.049827,0.055878,0.067678,0.090909,0.136815", \
				        "0.049674,0.054323,0.060189,0.071953,0.095197,0.141157", \
				        "0.056041,0.060925,0.067198,0.079068,0.102323,0.148360", \
				        "0.063549,0.069047,0.076063,0.089409,0.114358,0.161266", \
				        "0.067602,0.074969,0.084111,0.100670,0.130025,0.182060", \
				        "0.054911,0.065802,0.078920,0.102547,0.142601,0.207704", \
				        "0.002023,0.017720,0.036835,0.070931,0.128337,0.219716");
			}
			cell_rise(Timing_X2) {
				values ("0.095132,0.105478,0.119224,0.146260,0.199491,0.304794", \
				        "0.097947,0.108294,0.122011,0.149001,0.202304,0.307609", \
				        "0.104238,0.114576,0.128216,0.155125,0.208333,0.313615", \
				        "0.118226,0.128508,0.141996,0.168734,0.221571,0.326495", \
				        "0.149264,0.158752,0.172021,0.198151,0.250095,0.353961", \
				        "0.202608,0.215021,0.230440,0.259360,0.311476,0.412865", \
				        "0.283668,0.299132,0.318444,0.354962,0.421182,0.536227", \
				        "0.416720,0.434999,0.459555,0.504420,0.586308,0.731143");
			}
			fall_transition(Timing_X2) {
				values ("0.021363,0.025182,0.030231,0.039944,0.059572,0.098799", \
				        "0.021358,0.025166,0.030321,0.039952,0.059570,0.098868", \
				        "0.021334,0.025133,0.030287,0.039936,0.059654,0.098871", \
				        "0.022918,0.026480,0.031244,0.040461,0.059699,0.098827", \
				        "0.027767,0.031159,0.035960,0.044959,0.062970,0.099864", \
				        "0.041028,0.044291,0.048643,0.056918,0.073616,0.108562", \
				        "0.068245,0.071774,0.076607,0.085455,0.101649,0.133131", \
				        "0.117574,0.122298,0.128024,0.138940,0.158428,0.191820");
			}
			rise_transition(Timing_X2) {
				values ("0.084549,0.094197,0.106771,0.131768,0.180555,0.276515", \
				        "0.084536,0.094206,0.106794,0.131769,0.180563,0.276505", \
				        "0.084581,0.094219,0.106812,0.131774,0.180591,0.276490", \
				        "0.084526,0.094190,0.106792,0.131762,0.180582,0.276487", \
				        "0.087904,0.096530,0.108027,0.131847,0.180592,0.276491", \
				        "0.110904,0.118755,0.128522,0.147582,0.187819,0.276613", \
				        "0.149289,0.158671,0.171042,0.193734,0.234220,0.306922", \
				        "0.205124,0.216893,0.231615,0.259756,0.311233,0.400728");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.036349,0.040721,0.046516,0.058022,0.080816,0.126345", \
				        "0.039073,0.043398,0.049226,0.060745,0.083560,0.129140", \
				        "0.043339,0.047842,0.053498,0.064948,0.087884,0.133493", \
				        "0.048950,0.053856,0.060087,0.071913,0.094952,0.140671", \
				        "0.054580,0.060445,0.067732,0.081362,0.106504,0.153544", \
				        "0.054219,0.062480,0.072495,0.090273,0.120798,0.173547", \
				        "0.034136,0.046610,0.061351,0.087231,0.129853,0.197290", \
				        "-0.028555,-0.010582,0.010845,0.048218,0.109609,0.205065");
			}
			cell_rise(Timing_X2) {
				values ("0.093926,0.104240,0.117888,0.144773,0.197877,0.302824", \
				        "0.096748,0.107028,0.120587,0.147539,0.200685,0.305651", \
				        "0.103032,0.113313,0.126835,0.153645,0.206729,0.311644", \
				        "0.117031,0.127252,0.140648,0.167284,0.219962,0.324526", \
				        "0.148094,0.157539,0.170694,0.196685,0.248476,0.352011", \
				        "0.200886,0.213366,0.228711,0.257664,0.309907,0.410912", \
				        "0.280992,0.296547,0.315870,0.352427,0.418774,0.533959", \
				        "0.412578,0.430922,0.455610,0.500515,0.582522,0.727474");
			}
			fall_transition(Timing_X2) {
				values ("0.016578,0.020399,0.025475,0.035311,0.054979,0.094241", \
				        "0.016594,0.020377,0.025511,0.035256,0.054981,0.094233", \
				        "0.016798,0.020473,0.025461,0.035228,0.054930,0.094241", \
				        "0.018830,0.022410,0.027075,0.036152,0.055173,0.094188", \
				        "0.024610,0.027903,0.032479,0.041157,0.058953,0.095522", \
				        "0.038818,0.042014,0.046412,0.054231,0.070426,0.104773", \
				        "0.067285,0.070604,0.075257,0.083879,0.099718,0.130474", \
				        "0.118477,0.122696,0.127901,0.138353,0.157288,0.190253");
			}
			rise_transition(Timing_X2) {
				values ("0.064581,0.073894,0.086313,0.110644,0.158757,0.254688", \
				        "0.064560,0.073921,0.086242,0.110656,0.158749,0.254670", \
				        "0.064570,0.073907,0.086312,0.110590,0.158702,0.254697", \
				        "0.064601,0.073919,0.086280,0.110638,0.158719,0.254687", \
				        "0.068053,0.076291,0.087591,0.110774,0.158770,0.254677", \
				        "0.087740,0.096404,0.107123,0.126489,0.166052,0.254859", \
				        "0.117076,0.128058,0.142086,0.167030,0.210491,0.285263", \
				        "0.161262,0.175305,0.192587,0.224259,0.280172,0.374830");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.032887,0.036592,0.041534,0.051291,0.070667,0.109357", \
				        "0.035669,0.039339,0.044267,0.054045,0.073460,0.112185", \
				        "0.040119,0.043971,0.048684,0.058508,0.077979,0.116730", \
				        "0.046194,0.050528,0.055967,0.066295,0.086084,0.124960", \
				        "0.052178,0.057726,0.064520,0.077029,0.099599,0.140600", \
				        "0.051683,0.059707,0.069453,0.086684,0.115835,0.164248", \
				        "0.031058,0.043300,0.057786,0.083149,0.124936,0.190396", \
				        "-0.032893,-0.015202,0.005936,0.042774,0.103322,0.197339");
			}
			cell_rise(Timing_X2) {
				values ("0.098920,0.109094,0.122481,0.149163,0.202010,0.306623", \
				        "0.101760,0.111901,0.125226,0.151968,0.204835,0.309471", \
				        "0.108054,0.118243,0.131567,0.158118,0.210895,0.315520", \
				        "0.122199,0.132171,0.145473,0.171828,0.224211,0.328457", \
				        "0.153079,0.162533,0.175549,0.201331,0.252876,0.356085", \
				        "0.207065,0.219349,0.234287,0.262800,0.314529,0.415281", \
				        "0.288779,0.303958,0.323058,0.359051,0.424755,0.539011", \
				        "0.422633,0.440710,0.464834,0.509084,0.590272,0.734488");
			}
			fall_transition(Timing_X2) {
				values ("0.015253,0.018455,0.022668,0.030890,0.047500,0.080512", \
				        "0.015256,0.018464,0.022672,0.030938,0.047533,0.080508", \
				        "0.015571,0.018587,0.022698,0.030910,0.047545,0.080490", \
				        "0.018140,0.021062,0.024880,0.032311,0.047847,0.080445", \
				        "0.025090,0.027816,0.031468,0.038659,0.052968,0.082587", \
				        "0.040341,0.043152,0.046964,0.053935,0.067333,0.094843", \
				        "0.069887,0.072770,0.076874,0.084732,0.099052,0.125515", \
				        "0.122612,0.126261,0.130812,0.140262,0.157752,0.188341");
			}
			rise_transition(Timing_X2) {
				values ("0.066541,0.075941,0.088382,0.112866,0.161207,0.257354", \
				        "0.066552,0.075941,0.088368,0.112930,0.161240,0.257372", \
				        "0.066543,0.075938,0.088425,0.112926,0.161242,0.257340", \
				        "0.066555,0.075935,0.088432,0.112907,0.161247,0.257360", \
				        "0.069700,0.078073,0.089530,0.112963,0.161215,0.257372", \
				        "0.089517,0.098041,0.108695,0.128101,0.168034,0.257486", \
				        "0.119438,0.130269,0.144188,0.168991,0.212145,0.286928", \
				        "0.164205,0.177947,0.195089,0.226549,0.282133,0.376347");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.049239,0.053857,0.059931,0.071900,0.095349,0.141553", \
				        "0.051962,0.056505,0.062590,0.074532,0.098002,0.144224", \
				        "0.056336,0.061020,0.066882,0.078838,0.102296,0.148591", \
				        "0.063067,0.067916,0.074189,0.086039,0.109478,0.155773", \
				        "0.071643,0.076967,0.083840,0.096983,0.121813,0.168688", \
				        "0.078452,0.085372,0.093911,0.109795,0.138452,0.190040", \
				        "0.071913,0.081756,0.093917,0.115926,0.154046,0.217326", \
				        "0.032467,0.046452,0.063580,0.094671,0.148103,0.235139");
			}
			cell_rise(Timing_X2) {
				values ("0.105683,0.116069,0.129823,0.156820,0.210055,0.315324", \
				        "0.109283,0.119611,0.133303,0.160276,0.213539,0.318845", \
				        "0.115619,0.126015,0.139715,0.166709,0.219957,0.325303", \
				        "0.127339,0.137773,0.151545,0.178603,0.231910,0.337160", \
				        "0.151572,0.161767,0.175446,0.202351,0.255365,0.360523", \
				        "0.195089,0.206796,0.222086,0.251052,0.305158,0.409383", \
				        "0.267343,0.281744,0.299220,0.332944,0.395617,0.509656", \
				        "0.390642,0.407520,0.429260,0.469794,0.544032,0.677153");
			}
			fall_transition(Timing_X2) {
				values ("0.026029,0.029858,0.035054,0.044844,0.064475,0.103767", \
				        "0.026013,0.029859,0.035060,0.044915,0.064457,0.103788", \
				        "0.026002,0.029817,0.035017,0.044759,0.064477,0.103801", \
				        "0.027116,0.030721,0.035514,0.045111,0.064407,0.103723", \
				        "0.031329,0.034884,0.039773,0.048958,0.067147,0.104596", \
				        "0.043431,0.046811,0.051421,0.059986,0.077254,0.112746", \
				        "0.069422,0.073158,0.078090,0.087076,0.103681,0.136110", \
				        "0.116562,0.121561,0.127656,0.138803,0.158530,0.192589");
			}
			rise_transition(Timing_X2) {
				values ("0.084560,0.094202,0.106791,0.131772,0.180578,0.276506", \
				        "0.084560,0.094231,0.106800,0.131756,0.180579,0.276479", \
				        "0.084555,0.094201,0.106784,0.131790,0.180581,0.276472", \
				        "0.084569,0.094192,0.106790,0.131758,0.180577,0.276494", \
				        "0.086738,0.095853,0.107706,0.131890,0.180600,0.276495", \
				        "0.102826,0.111190,0.121711,0.142626,0.185788,0.276813", \
				        "0.130223,0.139173,0.150923,0.173522,0.216229,0.297204", \
				        "0.173173,0.182931,0.196200,0.221188,0.268502,0.357547");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042393,0.046931,0.052920,0.064685,0.087904,0.133819", \
				        "0.045112,0.049578,0.055613,0.067387,0.090571,0.136536", \
				        "0.049477,0.054093,0.059920,0.071670,0.094860,0.140863", \
				        "0.055777,0.060644,0.066906,0.078770,0.102030,0.148060", \
				        "0.062981,0.068529,0.075591,0.088987,0.113958,0.160928", \
				        "0.066159,0.073717,0.083010,0.099768,0.129351,0.181560", \
				        "0.053365,0.064400,0.077728,0.101545,0.141830,0.207118", \
				        "0.006234,0.021774,0.040459,0.074028,0.130596,0.221033");
			}
			cell_rise(Timing_X2) {
				values ("0.104483,0.114827,0.128451,0.155357,0.208431,0.313357", \
				        "0.108075,0.118364,0.131905,0.158821,0.211914,0.316881", \
				        "0.114427,0.124753,0.138346,0.165229,0.218355,0.323344", \
				        "0.126137,0.136526,0.150174,0.177160,0.230286,0.335203", \
				        "0.150376,0.160529,0.174092,0.200875,0.253762,0.358552", \
				        "0.193604,0.205260,0.220454,0.249403,0.303576,0.407416", \
				        "0.265325,0.279760,0.297087,0.330821,0.393536,0.507449", \
				        "0.387505,0.404533,0.426287,0.466851,0.541144,0.674181");
			}
			fall_transition(Timing_X2) {
				values ("0.021538,0.025358,0.030514,0.040264,0.059798,0.099102", \
				        "0.021530,0.025303,0.030381,0.040266,0.059858,0.099189", \
				        "0.021569,0.025337,0.030356,0.040250,0.059877,0.099150", \
				        "0.023169,0.026735,0.031533,0.040824,0.059990,0.099121", \
				        "0.028005,0.031444,0.036235,0.045247,0.063272,0.100257", \
				        "0.041127,0.044419,0.048864,0.057182,0.073953,0.108921", \
				        "0.068104,0.071636,0.076434,0.085274,0.101558,0.133297", \
				        "0.116059,0.120880,0.126694,0.137637,0.157110,0.190766");
			}
			rise_transition(Timing_X2) {
				values ("0.064573,0.073899,0.086316,0.110627,0.158759,0.254686", \
				        "0.064567,0.073918,0.086288,0.110654,0.158758,0.254688", \
				        "0.064573,0.073917,0.086251,0.110601,0.158706,0.254683", \
				        "0.064564,0.073904,0.086317,0.110649,0.158749,0.254670", \
				        "0.066834,0.075566,0.087239,0.110728,0.158727,0.254697", \
				        "0.080444,0.089186,0.100351,0.121481,0.163958,0.255038", \
				        "0.102180,0.111984,0.124641,0.148509,0.192896,0.275529", \
				        "0.137139,0.148613,0.163321,0.190637,0.240823,0.332955");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.037792,0.041655,0.046799,0.056827,0.076588,0.115628", \
				        "0.040564,0.044399,0.049502,0.059499,0.079269,0.118344", \
				        "0.045141,0.049079,0.054013,0.064034,0.083786,0.122907", \
				        "0.052070,0.056350,0.061837,0.072109,0.091999,0.131150", \
				        "0.060018,0.065211,0.071700,0.083833,0.106042,0.146841", \
				        "0.063200,0.070547,0.079535,0.095749,0.123779,0.171324", \
				        "0.049838,0.060707,0.073810,0.097189,0.136600,0.199767", \
				        "0.001432,0.016710,0.035173,0.068247,0.124069,0.213089");
			}
			cell_rise(Timing_X2) {
				values ("0.109485,0.119685,0.133065,0.159771,0.212560,0.317170", \
				        "0.113091,0.123208,0.136540,0.163212,0.216089,0.320734", \
				        "0.119397,0.129603,0.142998,0.169645,0.222490,0.327174", \
				        "0.131137,0.141386,0.154864,0.181566,0.234399,0.339031", \
				        "0.155428,0.165403,0.178832,0.205398,0.257950,0.362412", \
				        "0.199459,0.210996,0.225829,0.254393,0.308010,0.411482", \
				        "0.272635,0.286766,0.303778,0.337023,0.399094,0.512232", \
				        "0.397067,0.413273,0.435056,0.474992,0.548389,0.680563");
			}
			fall_transition(Timing_X2) {
				values ("0.019534,0.022741,0.027013,0.035147,0.051682,0.084657", \
				        "0.019517,0.022736,0.026966,0.035134,0.051685,0.084632", \
				        "0.019648,0.022725,0.026854,0.035131,0.051559,0.084595", \
				        "0.021713,0.024676,0.028613,0.036207,0.051863,0.084637", \
				        "0.027914,0.030717,0.034543,0.041749,0.056507,0.086428", \
				        "0.042390,0.045226,0.049069,0.056217,0.069971,0.098087", \
				        "0.070440,0.073551,0.077838,0.085896,0.100486,0.127640", \
				        "0.119791,0.124068,0.129244,0.139277,0.157368,0.188605");
			}
			rise_transition(Timing_X2) {
				values ("0.066547,0.075947,0.088418,0.112921,0.161239,0.257375", \
				        "0.066544,0.075954,0.088387,0.112867,0.161208,0.257351", \
				        "0.066547,0.075944,0.088390,0.112930,0.161242,0.257369", \
				        "0.066543,0.075944,0.088441,0.112887,0.161235,0.257369", \
				        "0.068600,0.077487,0.089279,0.113054,0.161241,0.257337", \
				        "0.082232,0.090961,0.102133,0.123371,0.166210,0.257633", \
				        "0.104166,0.113935,0.126612,0.150427,0.194871,0.277658", \
				        "0.139306,0.150807,0.165350,0.192566,0.242723,0.334860");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & !B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025502,0.030076,0.036114,0.047994,0.071181,0.117095", \
				        "0.028446,0.032906,0.039016,0.050883,0.074099,0.120004", \
				        "0.035084,0.039158,0.044900,0.056667,0.079819,0.125619", \
				        "0.044563,0.049984,0.056646,0.068877,0.091456,0.137073", \
				        "0.053097,0.060406,0.069338,0.085877,0.114168,0.161027", \
				        "0.056338,0.066190,0.078286,0.100330,0.138364,0.200875", \
				        "0.044298,0.057760,0.074108,0.103806,0.154791,0.238580", \
				        "-0.003608,0.014255,0.036281,0.076068,0.144686,0.257388");
			}
			cell_rise(Timing_X2) {
				values ("0.046889,0.056961,0.070402,0.096596,0.148784,0.252827", \
				        "0.049957,0.059966,0.073250,0.099402,0.151723,0.255797", \
				        "0.056703,0.066622,0.079883,0.105776,0.157807,0.261877", \
				        "0.071733,0.081255,0.094236,0.119653,0.171230,0.274763", \
				        "0.096031,0.108093,0.123198,0.149877,0.200178,0.302320", \
				        "0.132710,0.147911,0.166760,0.200895,0.260039,0.361532", \
				        "0.192693,0.211641,0.234814,0.277059,0.351592,0.477679", \
				        "0.295088,0.318333,0.347503,0.399926,0.492266,0.650176");
			}
			fall_transition(Timing_X2) {
				values ("0.021554,0.025475,0.030506,0.040281,0.059885,0.099178", \
				        "0.020843,0.025183,0.030323,0.040185,0.059829,0.099180", \
				        "0.021166,0.024885,0.029810,0.039811,0.059827,0.099150", \
				        "0.027478,0.030641,0.034786,0.042183,0.059763,0.099180", \
				        "0.039719,0.043372,0.048012,0.055929,0.070664,0.101699", \
				        "0.060828,0.065304,0.071043,0.081010,0.098650,0.128984", \
				        "0.097080,0.103372,0.110851,0.123922,0.146233,0.183657", \
				        "0.161255,0.169932,0.180225,0.198181,0.227976,0.275909");
			}
			rise_transition(Timing_X2) {
				values ("0.053130,0.063303,0.076354,0.102017,0.151256,0.246685", \
				        "0.053123,0.063293,0.076369,0.101994,0.151253,0.246689", \
				        "0.052980,0.063274,0.076331,0.102043,0.151277,0.246714", \
				        "0.056190,0.064813,0.076719,0.102005,0.151241,0.246716", \
				        "0.071514,0.078134,0.087284,0.107212,0.151581,0.246678", \
				        "0.099105,0.106357,0.115898,0.134412,0.169199,0.249435", \
				        "0.143159,0.150267,0.160496,0.181416,0.221390,0.291813", \
				        "0.218293,0.225222,0.235298,0.257108,0.302258,0.388219");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & !B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.019185,0.023518,0.029289,0.040820,0.063636,0.109124", \
				        "0.022367,0.026448,0.032196,0.043677,0.066530,0.111939", \
				        "0.028550,0.032961,0.038484,0.049533,0.072244,0.117622", \
				        "0.035059,0.041084,0.048312,0.061405,0.083995,0.129109", \
				        "0.039666,0.047779,0.057656,0.075391,0.105182,0.153208", \
				        "0.037606,0.048661,0.062009,0.085867,0.125941,0.190602", \
				        "0.018435,0.033647,0.051691,0.083829,0.137730,0.224581", \
				        "-0.038389,-0.018772,0.005825,0.048785,0.121398,0.238366");
			}
			cell_rise(Timing_X2) {
				values ("0.045996,0.055985,0.069217,0.095332,0.147371,0.251052", \
				        "0.049057,0.058955,0.072110,0.098174,0.150313,0.254022", \
				        "0.055818,0.065620,0.078681,0.104573,0.156451,0.260110", \
				        "0.070797,0.080332,0.093090,0.118477,0.169818,0.272985", \
				        "0.094746,0.106780,0.121826,0.148708,0.198792,0.300559", \
				        "0.130824,0.146035,0.164832,0.199096,0.258411,0.359783", \
				        "0.189729,0.208812,0.231994,0.274425,0.349100,0.475352", \
				        "0.289636,0.313123,0.342698,0.395538,0.488256,0.646401");
			}
			fall_transition(Timing_X2) {
				values ("0.015952,0.020149,0.025363,0.035225,0.054945,0.094233", \
				        "0.015457,0.019577,0.024983,0.035223,0.054886,0.094232", \
				        "0.017924,0.020885,0.025507,0.034787,0.054967,0.094196", \
				        "0.024995,0.028135,0.032107,0.039187,0.055521,0.094197", \
				        "0.037398,0.041011,0.045672,0.053658,0.068313,0.097897", \
				        "0.058666,0.063154,0.068790,0.078814,0.096391,0.126659", \
				        "0.095166,0.101325,0.108821,0.121884,0.144078,0.181293", \
				        "0.159734,0.168224,0.178417,0.196277,0.225893,0.273616");
			}
			rise_transition(Timing_X2) {
				values ("0.037840,0.046871,0.058897,0.082483,0.129916,0.224731", \
				        "0.037842,0.046870,0.058852,0.082542,0.129919,0.224709", \
				        "0.037700,0.046807,0.058924,0.082523,0.129888,0.224733", \
				        "0.041033,0.048494,0.059355,0.082540,0.129918,0.224730", \
				        "0.053073,0.060493,0.069566,0.087755,0.130283,0.224716", \
				        "0.071740,0.080792,0.092110,0.112366,0.147970,0.227530", \
				        "0.103927,0.113882,0.126994,0.151342,0.195427,0.269948", \
				        "0.162302,0.173695,0.188383,0.216197,0.267906,0.360233");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.017785,0.021433,0.026301,0.036072,0.055262,0.093657", \
				        "0.020974,0.024436,0.029334,0.038979,0.058250,0.096558", \
				        "0.026593,0.030647,0.035679,0.045104,0.064224,0.102489", \
				        "0.032036,0.037651,0.044256,0.056349,0.076521,0.114467", \
				        "0.035093,0.042705,0.051855,0.068215,0.095665,0.139400", \
				        "0.030533,0.040946,0.053514,0.075777,0.112934,0.172452", \
				        "0.007057,0.021488,0.038521,0.068796,0.119333,0.200017", \
				        "-0.057445,-0.038791,-0.015474,0.025256,0.093789,0.203570");
			}
			cell_rise(Timing_X2) {
				values ("0.045940,0.055902,0.069139,0.095262,0.147295,0.250996", \
				        "0.048926,0.058816,0.071979,0.098038,0.150168,0.253909", \
				        "0.055710,0.065496,0.078544,0.104414,0.156283,0.259932", \
				        "0.070859,0.080343,0.093076,0.118453,0.169721,0.272854", \
				        "0.095122,0.107149,0.122148,0.148952,0.198960,0.300630", \
				        "0.131941,0.147099,0.165809,0.199984,0.259139,0.360355", \
				        "0.192583,0.211466,0.234508,0.276697,0.351134,0.477058", \
				        "0.296882,0.319894,0.349064,0.401280,0.493276,0.650738");
			}
			fall_transition(Timing_X2) {
				values ("0.013349,0.016795,0.021039,0.029430,0.046108,0.079286", \
				        "0.013266,0.016447,0.020799,0.029375,0.046109,0.079274", \
				        "0.016372,0.018777,0.022259,0.029617,0.046079,0.079313", \
				        "0.023309,0.026092,0.029479,0.035540,0.048012,0.079251", \
				        "0.035351,0.038587,0.042827,0.049962,0.062569,0.086069", \
				        "0.056084,0.060228,0.065460,0.074367,0.090089,0.116728", \
				        "0.092049,0.097748,0.104647,0.116563,0.136705,0.170062", \
				        "0.156080,0.163987,0.173384,0.189808,0.217017,0.260442");
			}
			rise_transition(Timing_X2) {
				values ("0.037832,0.046853,0.058862,0.082496,0.129905,0.224729", \
				        "0.037831,0.046860,0.058852,0.082538,0.129918,0.224707", \
				        "0.037686,0.046812,0.058921,0.082497,0.129891,0.224729", \
				        "0.041007,0.048434,0.059385,0.082531,0.129900,0.224729", \
				        "0.052885,0.060301,0.069441,0.087676,0.130273,0.224714", \
				        "0.071115,0.080188,0.091621,0.111925,0.147653,0.227437", \
				        "0.102391,0.112386,0.125609,0.150149,0.194437,0.269202", \
				        "0.159505,0.170903,0.185377,0.213221,0.265211,0.358077");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & !B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031943,0.036588,0.042700,0.054700,0.078153,0.124303", \
				        "0.034714,0.039258,0.045408,0.057443,0.080891,0.126983", \
				        "0.040535,0.045023,0.051049,0.063123,0.086521,0.132525", \
				        "0.052074,0.057113,0.063318,0.075073,0.098049,0.143976", \
				        "0.063638,0.070425,0.078817,0.094538,0.121602,0.167813", \
				        "0.071585,0.080610,0.091876,0.112653,0.148984,0.209582", \
				        "0.068579,0.080464,0.095404,0.122738,0.170787,0.251457", \
				        "0.039197,0.054917,0.074326,0.110141,0.173224,0.279371");
			}
			cell_rise(Timing_X2) {
				values ("0.057535,0.067547,0.081043,0.107103,0.159348,0.263324", \
				        "0.060953,0.070877,0.084364,0.110524,0.162823,0.267021", \
				        "0.067089,0.077155,0.090394,0.116672,0.169003,0.273246", \
				        "0.079044,0.089021,0.102438,0.128505,0.180659,0.284876", \
				        "0.099106,0.110591,0.125312,0.152440,0.204271,0.308138", \
				        "0.131862,0.145445,0.162746,0.194558,0.252464,0.357108", \
				        "0.187166,0.204381,0.225239,0.263450,0.331586,0.451895", \
				        "0.280612,0.302566,0.329301,0.377318,0.460906,0.604240");
			}
			fall_transition(Timing_X2) {
				values ("0.026158,0.030079,0.035147,0.044808,0.064372,0.103806", \
				        "0.026051,0.030014,0.035094,0.044790,0.064408,0.103789", \
				        "0.025280,0.029225,0.034431,0.044735,0.064499,0.103725", \
				        "0.030301,0.033530,0.037453,0.045825,0.064252,0.103737", \
				        "0.042595,0.046228,0.050817,0.058726,0.073282,0.105549", \
				        "0.063164,0.067772,0.073553,0.083589,0.101246,0.131478", \
				        "0.097822,0.103984,0.111681,0.124957,0.147733,0.185749", \
				        "0.157990,0.166803,0.177185,0.195308,0.225613,0.274845");
			}
			rise_transition(Timing_X2) {
				values ("0.053127,0.063284,0.076316,0.102014,0.151247,0.246698", \
				        "0.053130,0.063276,0.076319,0.101989,0.151266,0.246707", \
				        "0.053133,0.063276,0.076355,0.102033,0.151279,0.246665", \
				        "0.054740,0.064050,0.076472,0.101992,0.151254,0.246709", \
				        "0.065707,0.073191,0.083465,0.105372,0.151534,0.246716", \
				        "0.086684,0.093964,0.103898,0.123805,0.163145,0.248945", \
				        "0.121451,0.128075,0.137555,0.157379,0.197847,0.276760", \
				        "0.180001,0.186210,0.195651,0.215380,0.256433,0.339819");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & !B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024854,0.029425,0.035508,0.047278,0.070430,0.116228", \
				        "0.027641,0.032113,0.038185,0.050011,0.073165,0.118938", \
				        "0.034154,0.038265,0.043962,0.055719,0.078828,0.124505", \
				        "0.043207,0.048720,0.055517,0.067852,0.090398,0.135934", \
				        "0.051237,0.058688,0.067815,0.084514,0.112930,0.159895", \
				        "0.054696,0.064588,0.076797,0.098912,0.137038,0.199583", \
				        "0.045905,0.059146,0.075196,0.104374,0.154698,0.237869", \
				        "0.009604,0.026719,0.047676,0.085782,0.151761,0.261301");
			}
			cell_rise(Timing_X2) {
				values ("0.056634,0.066571,0.079815,0.105933,0.157937,0.261577", \
				        "0.060056,0.069893,0.083203,0.109351,0.161489,0.265243", \
				        "0.066194,0.076147,0.089261,0.115446,0.167607,0.271465", \
				        "0.078133,0.088029,0.101243,0.127244,0.179266,0.283116", \
				        "0.097954,0.109415,0.124057,0.151275,0.202921,0.306358", \
				        "0.130357,0.143877,0.161096,0.193028,0.250908,0.355340", \
				        "0.184850,0.202158,0.223020,0.261360,0.329545,0.449765", \
				        "0.276678,0.298955,0.325751,0.374119,0.457940,0.601313");
			}
			fall_transition(Timing_X2) {
				values ("0.021432,0.025340,0.030354,0.040064,0.059576,0.098883", \
				        "0.020692,0.024946,0.030226,0.040007,0.059613,0.098881", \
				        "0.021256,0.024900,0.029804,0.039681,0.059671,0.098817", \
				        "0.027896,0.031116,0.035035,0.042388,0.059761,0.098814", \
				        "0.040212,0.043833,0.048513,0.056361,0.070841,0.101668", \
				        "0.060664,0.065259,0.071025,0.081175,0.098912,0.129140", \
				        "0.095030,0.101321,0.108971,0.122313,0.145173,0.183247", \
				        "0.154421,0.163555,0.174108,0.192469,0.222898,0.272140");
			}
			rise_transition(Timing_X2) {
				values ("0.037853,0.046868,0.058924,0.082525,0.129916,0.224703", \
				        "0.037847,0.046871,0.058922,0.082532,0.129917,0.224729", \
				        "0.037860,0.046825,0.058823,0.082496,0.129875,0.224714", \
				        "0.039535,0.047654,0.059115,0.082529,0.129902,0.224698", \
				        "0.048160,0.055807,0.065805,0.085889,0.130179,0.224725", \
				        "0.063167,0.071146,0.081951,0.102351,0.141859,0.226983", \
				        "0.089313,0.097759,0.109051,0.130769,0.173335,0.254717", \
				        "0.135017,0.144604,0.157195,0.181144,0.226673,0.313958");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022306,0.026154,0.031317,0.041272,0.060851,0.099538", \
				        "0.025230,0.028977,0.034145,0.044153,0.063729,0.102348", \
				        "0.031651,0.035386,0.040228,0.050098,0.069599,0.108158", \
				        "0.039426,0.044542,0.050643,0.062073,0.081723,0.120092", \
				        "0.045695,0.052668,0.061065,0.076510,0.102654,0.145134", \
				        "0.046423,0.055726,0.067126,0.087753,0.123052,0.180560", \
				        "0.033007,0.045476,0.060549,0.088017,0.135120,0.212248", \
				        "-0.011745,0.004517,0.024366,0.060372,0.122620,0.225270");
			}
			cell_rise(Timing_X2) {
				values ("0.056569,0.066511,0.079751,0.105854,0.157870,0.261504", \
				        "0.059946,0.069800,0.082995,0.109143,0.161333,0.265132", \
				        "0.066087,0.076023,0.089126,0.115304,0.167457,0.271331", \
				        "0.078060,0.087938,0.101129,0.127098,0.179076,0.282927", \
				        "0.097955,0.109410,0.124036,0.151227,0.202818,0.306206", \
				        "0.130916,0.144401,0.161552,0.193390,0.251150,0.355460", \
				        "0.187095,0.204237,0.224930,0.263006,0.330906,0.450802", \
				        "0.282990,0.304770,0.331169,0.378945,0.462033,0.604658");
			}
			fall_transition(Timing_X2) {
				values ("0.017752,0.021035,0.025177,0.033428,0.050046,0.083195", \
				        "0.017237,0.020815,0.025190,0.033468,0.049967,0.083239", \
				        "0.018804,0.021639,0.025637,0.033414,0.050064,0.083268", \
				        "0.025802,0.028493,0.031843,0.037785,0.051157,0.083257", \
				        "0.037787,0.041067,0.045198,0.052237,0.064685,0.088824", \
				        "0.057804,0.061989,0.067306,0.076308,0.092205,0.118705", \
				        "0.091810,0.097640,0.104595,0.116850,0.137447,0.171507", \
				        "0.151101,0.159545,0.169352,0.186275,0.214104,0.258651");
			}
			rise_transition(Timing_X2) {
				values ("0.037840,0.046850,0.058920,0.082537,0.129922,0.224690", \
				        "0.037839,0.046838,0.058917,0.082530,0.129903,0.224729", \
				        "0.037849,0.046843,0.058794,0.082499,0.129873,0.224712", \
				        "0.039537,0.047680,0.059116,0.082536,0.129900,0.224695", \
				        "0.048148,0.055766,0.065810,0.085891,0.130192,0.224722", \
				        "0.062878,0.070896,0.081760,0.102228,0.141791,0.226971", \
				        "0.088362,0.096833,0.108248,0.130115,0.172840,0.254435", \
				        "0.133406,0.142876,0.155405,0.179226,0.224960,0.312729");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("0.005089,0.004398,0.003423,0.001489,-0.002372,-0.010104", \
				        "0.005101,0.004367,0.003400,0.001481,-0.002385,-0.010093", \
				        "0.005075,0.004349,0.003390,0.001462,-0.002404,-0.010128", \
				        "0.005044,0.004353,0.003392,0.001455,-0.002410,-0.010150", \
				        "0.005125,0.004403,0.003437,0.001505,-0.002360,-0.010106", \
				        "0.005534,0.004754,0.003752,0.001768,-0.002160,-0.009948", \
				        "0.007137,0.006271,0.005142,0.002947,-0.001242,-0.009298", \
				        "0.011665,0.010660,0.009341,0.006807,0.002030,-0.006826");
			}
			rise_power(Power_X2) {
				values ("0.007827,0.008562,0.009527,0.011478,0.015360,0.023125", \
				        "0.007812,0.008539,0.009507,0.011461,0.015340,0.023110", \
				        "0.007815,0.008555,0.009519,0.011468,0.015344,0.023103", \
				        "0.007959,0.008673,0.009633,0.011555,0.015407,0.023142", \
				        "0.008412,0.009097,0.010035,0.011892,0.015689,0.023346", \
				        "0.009519,0.010158,0.011051,0.012850,0.016530,0.024023", \
				        "0.012003,0.012602,0.013448,0.015144,0.018627,0.025843", \
				        "0.017419,0.017964,0.018724,0.020268,0.023497,0.030289");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.007345,0.008080,0.009046,0.010995,0.014874,0.022634", \
				        "0.007327,0.008065,0.009033,0.010982,0.014859,0.022622", \
				        "0.007360,0.008082,0.009038,0.010977,0.014859,0.022611", \
				        "0.007493,0.008200,0.009156,0.011081,0.014923,0.022651", \
				        "0.007908,0.008626,0.009555,0.011418,0.015212,0.022860", \
				        "0.009013,0.009677,0.010579,0.012378,0.016052,0.023533", \
				        "0.011502,0.012147,0.012974,0.014660,0.018137,0.025362", \
				        "0.016974,0.017502,0.018255,0.019798,0.023025,0.029817");
			}
			fall_power(Power_X2) {
				values ("0.003477,0.002752,0.001780,-0.000153,-0.004019,-0.011757", \
				        "0.003438,0.002738,0.001761,-0.000162,-0.004028,-0.011748", \
				        "0.003447,0.002723,0.001743,-0.000180,-0.004047,-0.011778", \
				        "0.003414,0.002726,0.001748,-0.000186,-0.004067,-0.011799", \
				        "0.003492,0.002757,0.001802,-0.000134,-0.004005,-0.011747", \
				        "0.003971,0.003193,0.002172,0.000160,-0.003786,-0.011592", \
				        "0.005789,0.004864,0.003711,0.001463,-0.002793,-0.010910", \
				        "0.010582,0.009527,0.008154,0.005546,0.000646,-0.008327");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C2";

			rise_power(Power_X2) {
				values ("0.007827,0.008562,0.009527,0.011478,0.015360,0.023125", \
				        "0.007812,0.008539,0.009507,0.011461,0.015340,0.023110", \
				        "0.007815,0.008555,0.009519,0.011468,0.015344,0.023103", \
				        "0.007959,0.008673,0.009633,0.011555,0.015407,0.023142", \
				        "0.008412,0.009097,0.010035,0.011892,0.015689,0.023346", \
				        "0.009519,0.010158,0.011051,0.012850,0.016530,0.024023", \
				        "0.012003,0.012602,0.013448,0.015144,0.018627,0.025843", \
				        "0.017419,0.017964,0.018724,0.020268,0.023497,0.030289");
			}
			fall_power(Power_X2) {
				values ("0.005089,0.004398,0.003423,0.001489,-0.002372,-0.010104", \
				        "0.005101,0.004367,0.003400,0.001481,-0.002385,-0.010093", \
				        "0.005075,0.004349,0.003390,0.001462,-0.002404,-0.010128", \
				        "0.005044,0.004353,0.003392,0.001455,-0.002410,-0.010150", \
				        "0.005125,0.004403,0.003437,0.001505,-0.002360,-0.010106", \
				        "0.005534,0.004754,0.003752,0.001768,-0.002160,-0.009948", \
				        "0.007137,0.006271,0.005142,0.002947,-0.001242,-0.009298", \
				        "0.011665,0.010660,0.009341,0.006807,0.002030,-0.006826");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2 & C2 | B1 & C1";

			rise_power(Power_X2) {
				values ("0.007254,0.007990,0.008937,0.010884,0.014763,0.022530", \
				        "0.007244,0.007948,0.008918,0.010865,0.014750,0.022513", \
				        "0.007258,0.007964,0.008932,0.010872,0.014741,0.022501", \
				        "0.007401,0.008106,0.009059,0.010978,0.014826,0.022558", \
				        "0.007863,0.008544,0.009488,0.011351,0.015133,0.022766", \
				        "0.008993,0.009662,0.010553,0.012353,0.016024,0.023499", \
				        "0.011593,0.012198,0.013032,0.014719,0.018213,0.025425", \
				        "0.017166,0.017706,0.018471,0.020009,0.023228,0.030023");
			}
			fall_power(Power_X2) {
				values ("0.003775,0.003064,0.002090,0.000162,-0.003701,-0.011437", \
				        "0.003780,0.003048,0.002075,0.000155,-0.003711,-0.011424", \
				        "0.003756,0.003037,0.002061,0.000131,-0.003730,-0.011459", \
				        "0.003719,0.003024,0.002071,0.000141,-0.003734,-0.011476", \
				        "0.003841,0.003113,0.002139,0.000203,-0.003669,-0.011397", \
				        "0.004408,0.003609,0.002575,0.000556,-0.003414,-0.011224", \
				        "0.006359,0.005435,0.004263,0.002004,-0.002297,-0.010456", \
				        "0.011390,0.010347,0.008967,0.006349,0.001452,-0.007596");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.009740,0.010461,0.011432,0.013382,0.017267,0.025044", \
				        "0.009722,0.010451,0.011417,0.013367,0.017255,0.025034", \
				        "0.009733,0.010449,0.011430,0.013367,0.017255,0.025030", \
				        "0.009852,0.010570,0.011521,0.013447,0.017318,0.025065", \
				        "0.010280,0.010958,0.011906,0.013789,0.017586,0.025270", \
				        "0.011318,0.011997,0.012888,0.014727,0.018427,0.025944", \
				        "0.013737,0.014388,0.015242,0.016979,0.020532,0.027771", \
				        "0.019109,0.019674,0.020459,0.022066,0.025381,0.032280");
			}
			fall_power(Power_X2) {
				values ("0.003356,0.002625,0.001649,-0.000289,-0.004165,-0.011906", \
				        "0.003319,0.002611,0.001646,-0.000281,-0.004129,-0.011859", \
				        "0.003301,0.002573,0.001617,-0.000306,-0.004164,-0.011891", \
				        "0.003262,0.002558,0.001594,-0.000332,-0.004191,-0.011916", \
				        "0.003333,0.002592,0.001632,-0.000315,-0.004186,-0.011930", \
				        "0.003842,0.003072,0.002045,0.000028,-0.003924,-0.011716", \
				        "0.005673,0.004797,0.003664,0.001468,-0.002781,-0.010935", \
				        "0.010458,0.009509,0.008210,0.005737,0.001012,-0.007914");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.009264,0.009988,0.010958,0.012905,0.016789,0.024556", \
				        "0.009249,0.009968,0.010935,0.012886,0.016767,0.024548", \
				        "0.009245,0.009950,0.010945,0.012887,0.016766,0.024539", \
				        "0.009355,0.010082,0.011052,0.012974,0.016828,0.024580", \
				        "0.009792,0.010483,0.011421,0.013307,0.017102,0.024788", \
				        "0.010840,0.011521,0.012419,0.014241,0.017939,0.025464", \
				        "0.013267,0.013902,0.014775,0.016498,0.020049,0.027295", \
				        "0.018626,0.019173,0.019992,0.021596,0.024910,0.031771");
			}
			fall_power(Power_X2) {
				values ("0.001718,0.000982,0.000006,-0.001936,-0.005806,-0.013557", \
				        "0.001665,0.000964,-0.000000,-0.001927,-0.005783,-0.013505", \
				        "0.001641,0.000932,-0.000034,-0.001948,-0.005803,-0.013525", \
				        "0.001602,0.000898,-0.000060,-0.001991,-0.005841,-0.013552", \
				        "0.001687,0.000953,-0.000020,-0.001959,-0.005827,-0.013574", \
				        "0.002312,0.001511,0.000475,-0.001568,-0.005549,-0.013367", \
				        "0.004306,0.003408,0.002241,-0.000014,-0.004323,-0.012540", \
				        "0.009313,0.008310,0.006978,0.004436,-0.000387,-0.009411");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & C2";

			rise_power(Power_X2) {
				values ("0.009531,0.010258,0.011229,0.013170,0.017054,0.024833", \
				        "0.009510,0.010221,0.011207,0.013153,0.017041,0.024815", \
				        "0.009516,0.010244,0.011218,0.013158,0.017034,0.024821", \
				        "0.009644,0.010365,0.011331,0.013256,0.017111,0.024858", \
				        "0.010084,0.010756,0.011718,0.013595,0.017398,0.025068", \
				        "0.011122,0.011814,0.012716,0.014544,0.018254,0.025781", \
				        "0.013572,0.014210,0.015074,0.016825,0.020392,0.027664", \
				        "0.018935,0.019504,0.020307,0.021939,0.025267,0.032191");
			}
			fall_power(Power_X2) {
				values ("0.002028,0.001300,0.000322,-0.001608,-0.005479,-0.013220", \
				        "0.001993,0.001278,0.000316,-0.001605,-0.005453,-0.013173", \
				        "0.001957,0.001255,0.000288,-0.001627,-0.005481,-0.013207", \
				        "0.001935,0.001217,0.000269,-0.001659,-0.005504,-0.013237", \
				        "0.002020,0.001300,0.000321,-0.001625,-0.005496,-0.013234", \
				        "0.002666,0.001879,0.000830,-0.001209,-0.005199,-0.013001", \
				        "0.004675,0.003785,0.002619,0.000369,-0.003926,-0.012135", \
				        "0.009733,0.008728,0.007413,0.004880,0.000070,-0.008954");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.010208,0.010948,0.011927,0.013863,0.017760,0.025533", \
				        "0.010210,0.010922,0.011897,0.013841,0.017724,0.025491", \
				        "0.010208,0.010908,0.011880,0.013829,0.017708,0.025492", \
				        "0.010184,0.010895,0.011877,0.013830,0.017725,0.025493", \
				        "0.010316,0.011003,0.011978,0.013910,0.017771,0.025527", \
				        "0.010871,0.011580,0.012509,0.014400,0.018172,0.025835", \
				        "0.012706,0.013378,0.014238,0.016014,0.019627,0.027047", \
				        "0.017044,0.017639,0.018437,0.020073,0.023438,0.030412");
			}
			fall_power(Power_X2) {
				values ("0.004959,0.004235,0.003270,0.001325,-0.002546,-0.010304", \
				        "0.004930,0.004217,0.003250,0.001320,-0.002543,-0.010283", \
				        "0.004930,0.004196,0.003226,0.001292,-0.002574,-0.010314", \
				        "0.004907,0.004181,0.003222,0.001283,-0.002591,-0.010329", \
				        "0.004891,0.004181,0.003238,0.001303,-0.002574,-0.010335", \
				        "0.005228,0.004478,0.003496,0.001533,-0.002377,-0.010142", \
				        "0.006608,0.005779,0.004731,0.002646,-0.001430,-0.009413", \
				        "0.010587,0.009659,0.008488,0.006196,0.001758,-0.006739");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.009736,0.010478,0.011447,0.013391,0.017273,0.025044", \
				        "0.009695,0.010455,0.011411,0.013361,0.017248,0.025018", \
				        "0.009708,0.010428,0.011402,0.013352,0.017242,0.025008", \
				        "0.009691,0.010416,0.011400,0.013351,0.017232,0.025013", \
				        "0.009815,0.010529,0.011490,0.013430,0.017290,0.025050", \
				        "0.010417,0.011104,0.012026,0.013911,0.017688,0.025339", \
				        "0.012237,0.012903,0.013763,0.015532,0.019150,0.026557", \
				        "0.016587,0.017181,0.017969,0.019590,0.022964,0.029953");
			}
			fall_power(Power_X2) {
				values ("0.003332,0.002601,0.001626,-0.000309,-0.004189,-0.011944", \
				        "0.003315,0.002589,0.001629,-0.000321,-0.004188,-0.011921", \
				        "0.003287,0.002571,0.001595,-0.000343,-0.004207,-0.011946", \
				        "0.003260,0.002542,0.001585,-0.000357,-0.004231,-0.011980", \
				        "0.003278,0.002548,0.001597,-0.000345,-0.004224,-0.011981", \
				        "0.003625,0.002873,0.001882,-0.000082,-0.003997,-0.011781", \
				        "0.005133,0.004271,0.003209,0.001114,-0.002998,-0.011031", \
				        "0.009262,0.008348,0.007136,0.004799,0.000311,-0.008275");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & C2";

			rise_power(Power_X2) {
				values ("0.010010,0.010750,0.011712,0.013655,0.017538,0.025313", \
				        "0.009994,0.010715,0.011685,0.013633,0.017518,0.025285", \
				        "0.009964,0.010693,0.011672,0.013613,0.017503,0.025283", \
				        "0.009961,0.010692,0.011668,0.013618,0.017510,0.025283", \
				        "0.010080,0.010806,0.011773,0.013707,0.017560,0.025318", \
				        "0.010676,0.011385,0.012315,0.014190,0.017977,0.025638", \
				        "0.012530,0.013191,0.014049,0.015839,0.019458,0.026877", \
				        "0.016869,0.017442,0.018260,0.019914,0.023274,0.030316");
			}
			fall_power(Power_X2) {
				values ("0.003637,0.002939,0.001952,0.000014,-0.003853,-0.011602", \
				        "0.003611,0.002902,0.001938,0.000002,-0.003860,-0.011585", \
				        "0.003582,0.002876,0.001907,-0.000021,-0.003880,-0.011614", \
				        "0.003562,0.002867,0.001908,-0.000035,-0.003899,-0.011647", \
				        "0.003600,0.002881,0.001921,-0.000007,-0.003886,-0.011631", \
				        "0.003972,0.003215,0.002231,0.000267,-0.003649,-0.011430", \
				        "0.005500,0.004679,0.003592,0.001490,-0.002626,-0.010645", \
				        "0.009683,0.008773,0.007578,0.005240,0.000739,-0.007849");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & !B1 & B2 & !C2";

			rise_power(Power_X2) {
				values ("0.004435,0.005175,0.006160,0.008113,0.012005,0.019769", \
				        "0.004421,0.005169,0.006155,0.008097,0.011993,0.019760", \
				        "0.004473,0.005204,0.006182,0.008124,0.012003,0.019758", \
				        "0.004652,0.005359,0.006312,0.008227,0.012067,0.019791", \
				        "0.005151,0.005819,0.006745,0.008592,0.012366,0.020006", \
				        "0.006313,0.006939,0.007802,0.009566,0.013203,0.020682", \
				        "0.008969,0.009500,0.010253,0.011865,0.015298,0.022482", \
				        "0.014805,0.015228,0.015801,0.017106,0.020121,0.026785");
			}
			fall_power(Power_X2) {
				values ("0.003388,0.002671,0.001701,-0.000212,-0.004061,-0.011781", \
				        "0.003407,0.002691,0.001717,-0.000204,-0.004054,-0.011779", \
				        "0.003442,0.002712,0.001753,-0.000174,-0.004037,-0.011755", \
				        "0.003534,0.002823,0.001851,-0.000102,-0.003973,-0.011717", \
				        "0.003906,0.003145,0.002131,0.000134,-0.003806,-0.011605", \
				        "0.004954,0.004118,0.003014,0.000877,-0.003222,-0.011181", \
				        "0.007622,0.006660,0.005441,0.003065,-0.001436,-0.009838", \
				        "0.013577,0.012513,0.011142,0.008464,0.003443,-0.005890");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & !B2 & !C2";

			rise_power(Power_X2) {
				values ("0.003946,0.004694,0.005673,0.007619,0.011525,0.019286", \
				        "0.003949,0.004687,0.005668,0.007618,0.011509,0.019286", \
				        "0.003985,0.004720,0.005698,0.007632,0.011514,0.019273", \
				        "0.004162,0.004879,0.005834,0.007738,0.011586,0.019320", \
				        "0.004666,0.005336,0.006254,0.008107,0.011886,0.019516", \
				        "0.005847,0.006468,0.007320,0.009088,0.012728,0.020183", \
				        "0.008571,0.009083,0.009824,0.011397,0.014808,0.021989", \
				        "0.014599,0.014951,0.015488,0.016731,0.019664,0.026319");
			}
			fall_power(Power_X2) {
				values ("0.001699,0.000979,0.000013,-0.001907,-0.005765,-0.013488", \
				        "0.001715,0.000989,0.000026,-0.001894,-0.005762,-0.013467", \
				        "0.001749,0.001019,0.000063,-0.001870,-0.005741,-0.013454", \
				        "0.001895,0.001147,0.000176,-0.001775,-0.005668,-0.013418", \
				        "0.002335,0.001544,0.000502,-0.001527,-0.005484,-0.013296", \
				        "0.003577,0.002666,0.001509,-0.000680,-0.004853,-0.012862", \
				        "0.006399,0.005394,0.004109,0.001654,-0.002951,-0.011449", \
				        "0.012552,0.011424,0.009994,0.007240,0.002084,-0.007367");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & B2 & !C2";

			rise_power(Power_X2) {
				values ("0.003839,0.004595,0.005583,0.007532,0.011428,0.019189", \
				        "0.003846,0.004588,0.005566,0.007519,0.011414,0.019179", \
				        "0.003891,0.004618,0.005598,0.007534,0.011416,0.019172", \
				        "0.004089,0.004789,0.005739,0.007649,0.011492,0.019220", \
				        "0.004600,0.005278,0.006187,0.008035,0.011808,0.019423", \
				        "0.005812,0.006434,0.007292,0.009053,0.012692,0.020150", \
				        "0.008602,0.009096,0.009837,0.011419,0.014850,0.022058", \
				        "0.014757,0.015089,0.015635,0.016872,0.019821,0.026447");
			}
			fall_power(Power_X2) {
				values ("0.002077,0.001353,0.000392,-0.001528,-0.005382,-0.013092", \
				        "0.002098,0.001364,0.000407,-0.001517,-0.005377,-0.013077", \
				        "0.002134,0.001400,0.000446,-0.001701,-0.005351,-0.013071", \
				        "0.002286,0.001545,0.000564,-0.001390,-0.005272,-0.013021", \
				        "0.002760,0.001956,0.000918,-0.001114,-0.005078,-0.012892", \
				        "0.004067,0.003132,0.001998,-0.000207,-0.004394,-0.012418", \
				        "0.006990,0.006007,0.004715,0.002252,-0.002351,-0.010925", \
				        "0.013327,0.012253,0.010798,0.008068,0.002918,-0.006551");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & !B1 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.004927,0.005674,0.006661,0.008613,0.012504,0.020259", \
				        "0.004901,0.005631,0.006633,0.008584,0.012472,0.020246", \
				        "0.004847,0.005597,0.006580,0.008541,0.012449,0.020222", \
				        "0.004853,0.005593,0.006573,0.008525,0.012428,0.020202", \
				        "0.005058,0.005760,0.006722,0.008629,0.012488,0.020234", \
				        "0.005837,0.006485,0.007378,0.009199,0.012934,0.020542", \
				        "0.007970,0.008522,0.009289,0.010937,0.014439,0.021744", \
				        "0.012954,0.013361,0.013959,0.015277,0.018309,0.025056");
			}
			fall_power(Power_X2) {
				values ("0.004954,0.004229,0.003247,0.001329,-0.002526,-0.010240", \
				        "0.004928,0.004224,0.003242,0.001320,-0.002534,-0.010238", \
				        "0.004946,0.004217,0.003250,0.001335,-0.002522,-0.010237", \
				        "0.005027,0.004301,0.003333,0.001389,-0.002476,-0.010222", \
				        "0.005310,0.004564,0.003581,0.001604,-0.002311,-0.010111", \
				        "0.006229,0.005418,0.004372,0.002308,-0.001746,-0.009681", \
				        "0.008524,0.007656,0.006529,0.004301,0.000008,-0.008298", \
				        "0.013803,0.012855,0.011612,0.009188,0.004507,-0.004414");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & !B2 & !C1";

			rise_power(Power_X2) {
				values ("0.004448,0.005187,0.006168,0.008123,0.012010,0.019779", \
				        "0.004402,0.005149,0.006132,0.008084,0.011981,0.019760", \
				        "0.004380,0.005116,0.006097,0.008059,0.011964,0.019741", \
				        "0.004385,0.005106,0.006091,0.008039,0.011940,0.019719", \
				        "0.004577,0.005281,0.006237,0.008145,0.011999,0.019748", \
				        "0.005373,0.006015,0.006900,0.008719,0.012457,0.020086", \
				        "0.007579,0.008111,0.008854,0.010465,0.013948,0.021259", \
				        "0.012725,0.013092,0.013651,0.014912,0.017878,0.024580");
			}
			fall_power(Power_X2) {
				values ("0.003261,0.002520,0.001563,-0.000365,-0.004222,-0.011937", \
				        "0.003265,0.002523,0.001551,-0.000373,-0.004229,-0.011946", \
				        "0.003260,0.002531,0.001565,-0.000361,-0.004229,-0.011945", \
				        "0.003331,0.002624,0.001655,-0.000294,-0.004174,-0.011912", \
				        "0.003701,0.002934,0.001937,-0.000054,-0.004001,-0.011807", \
				        "0.004697,0.003883,0.002812,0.000712,-0.003389,-0.011358", \
				        "0.007185,0.006276,0.005101,0.002824,-0.001557,-0.009923", \
				        "0.012596,0.011630,0.010342,0.007867,0.003090,-0.005930");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.004354,0.005101,0.006081,0.008036,0.011939,0.019680", \
				        "0.004324,0.005052,0.006033,0.007995,0.011898,0.019666", \
				        "0.004269,0.005011,0.005994,0.007955,0.011865,0.019639", \
				        "0.004281,0.005015,0.005992,0.007944,0.011848,0.019615", \
				        "0.004476,0.005192,0.006144,0.008052,0.011915,0.019643", \
				        "0.005296,0.005951,0.006835,0.008652,0.012381,0.019999", \
				        "0.007574,0.008110,0.008846,0.010464,0.013943,0.021260", \
				        "0.012867,0.013195,0.013750,0.015009,0.017964,0.024671");
			}
			fall_power(Power_X2) {
				values ("0.003638,0.002912,0.001934,0.000014,-0.003849,-0.011623", \
				        "0.003622,0.002940,0.001927,0.000010,-0.003847,-0.011547", \
				        "0.003635,0.002903,0.001949,0.000024,-0.003839,-0.011553", \
				        "0.003714,0.003003,0.002039,0.000096,-0.003776,-0.011525", \
				        "0.004099,0.003327,0.002336,0.000343,-0.003597,-0.011398", \
				        "0.005161,0.004332,0.003258,0.001153,-0.002941,-0.010919", \
				        "0.007723,0.006832,0.005653,0.003376,-0.001014,-0.009402", \
				        "0.013349,0.012377,0.011095,0.008611,0.003825,-0.005198");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI221_X4
 Cell Description	: Combinational cell (OAI221_X4) with drive strength X4
*******************************************************************************************/

cell (OAI221_X4) {

	area               	: 3.192000;

	cell_leakage_power 	: 54344.516219;

	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & !C2";
		value      	: 10311.780000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & !C2";
		value      	: 12990.640000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & !C2";
		value      	: 34642.710000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & !C2";
		value      	: 81445.830000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & !C2";
		value      	: 34642.930000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & !C2";
		value      	: 81446.050000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & !C2";
		value      	: 58680.500000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & !C2";
		value      	: 105490.900000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & !C1 & C2";
		value      	: 8310.356000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & !C1 & C2";
		value      	: 17122.800000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & !C1 & C2";
		value      	: 36403.210000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & !C1 & C2";
		value      	: 82711.780000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & !C1 & C2";
		value      	: 36403.430000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & !C1 & C2";
		value      	: 79794.970000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & !C1 & C2";
		value      	: 60441.100000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & !C1 & C2";
		value      	: 102134.100000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & !C2";
		value      	: 8310.358000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & !C2";
		value      	: 17122.830000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & !C2";
		value      	: 36403.230000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & !C2";
		value      	: 85628.730000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & !C2";
		value      	: 36403.450000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & !C2";
		value      	: 82712.010000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & !C2";
		value      	: 60441.130000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & !C2";
		value      	: 105051.100000;
	}
	leakage_power () {
		when      	: "!A & !B1 & !B2 & C1 & C2";
		value      	: 2792.655000;
	}
	leakage_power () {
		when      	: "A & !B1 & !B2 & C1 & C2";
		value      	: 11800.700000;
	}
	leakage_power () {
		when      	: "!A & B1 & !B2 & C1 & C2";
		value      	: 31241.880000;
	}
	leakage_power () {
		when      	: "A & B1 & !B2 & C1 & C2";
		value      	: 105037.400000;
	}
	leakage_power () {
		when      	: "!A & !B1 & B2 & C1 & C2";
		value      	: 31242.110000;
	}
	leakage_power () {
		when      	: "A & !B1 & B2 & C1 & C2";
		value      	: 102121.400000;
	}
	leakage_power () {
		when      	: "!A & B1 & B2 & C1 & C2";
		value      	: 55279.850000;
	}
	leakage_power () {
		when      	: "A & B1 & B2 & C1 & C2";
		value      	: 124462.600000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001825;
		fall_capacitance	: 0.001817;
		rise_capacitance	: 0.001834;
		fall_capacitance_range		(0.001545, 0.002133);
		rise_capacitance_range		(0.001481, 0.002331);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000031,0.000027,0.000024,0.000023,0.000022,0.000020,0.000018");
			}

		}

		internal_power () {

			when      	: "!B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000136,0.000092,0.000062,0.000045,0.000034,0.000026,0.000018,0.000008");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000011,0.000005,0.000002,-0.000000,-0.000002,-0.000005,-0.000010");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000028,0.000024,0.000021,0.000019,0.000018,0.000017,0.000016");
			}

		}

		internal_power () {

			when      	: "B1 & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000137,0.000093,0.000063,0.000045,0.000035,0.000026,0.000018,0.000008");
			}

		}

		internal_power () {

			when      	: "!B1 & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000032,0.000027,0.000024,0.000023,0.000022,0.000020,0.000018");
			}

		}

		internal_power () {

			when      	: "B1 & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000120,0.000081,0.000058,0.000043,0.000033,0.000026,0.000018,0.000008");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002198;
		fall_capacitance	: 0.002035;
		rise_capacitance	: 0.002362;
		fall_capacitance_range		(0.001797, 0.002302);
		rise_capacitance_range		(0.001930, 0.002927);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B2 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000014,0.000007,0.000003,-0.000000,-0.000004,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000058,0.000037,0.000024,0.000015,0.000008,0.000001,-0.000007,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000059,0.000034,0.000017,0.000007,0.000000,-0.000005,-0.000012,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000058,0.000036,0.000023,0.000013,0.000006,-0.000000,-0.000008,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000057,0.000032,0.000016,0.000007,0.000000,-0.000005,-0.000012,-0.000024");
			}

		}

		internal_power () {

			when      	: "A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000100,0.000068,0.000046,0.000032,0.000022,0.000015,0.000008,-0.000001");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000014,0.000007,0.000003,-0.000000,-0.000004,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "A & B2 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000014,0.000007,0.000003,-0.000000,-0.000004,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000039,0.000026,0.000016,0.000008,0.000001,-0.000007,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000059,0.000033,0.000017,0.000006,-0.000000,-0.000006,-0.000013,-0.000024");
			}

		}

		internal_power () {

			when      	: "A & B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000039,0.000027,0.000017,0.000009,0.000002,-0.000006,-0.000019");
			}

		}

		internal_power () {

			when      	: "!A & !B2 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000036,0.000020,0.000010,0.000003,-0.000002,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & B2 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000039,0.000026,0.000016,0.000008,0.000001,-0.000007,-0.000020");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002405;
		fall_capacitance	: 0.002368;
		rise_capacitance	: 0.002442;
		fall_capacitance_range		(0.001970, 0.002618);
		rise_capacitance_range		(0.002074, 0.002856);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A & !B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000016,0.000007,0.000002,-0.000002,-0.000007,-0.000013,-0.000024");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & !C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000135,0.000092,0.000060,0.000040,0.000027,0.000016,0.000006,-0.000009");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000135,0.000092,0.000060,0.000040,0.000027,0.000016,0.000005,-0.000009");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000072,0.000050,0.000036,0.000026,0.000019,0.000013,0.000007,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000037,0.000021,0.000011,0.000005,0.000001,-0.000003,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000019");
			}

		}

		internal_power () {

			when      	: "A & B1 & C1 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000135,0.000092,0.000060,0.000040,0.000027,0.000016,0.000005,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000016,0.000008,0.000002,-0.000002,-0.000007,-0.000013,-0.000024");
			}

		}

		internal_power () {

			when      	: "!A & B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000020,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000020");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & C1 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000016,0.000007,0.000001,-0.000003,-0.000007,-0.000013,-0.000025");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002300;
		fall_capacitance	: 0.002201;
		rise_capacitance	: 0.002398;
		fall_capacitance_range		(0.001856, 0.002727);
		rise_capacitance_range		(0.001970, 0.003119);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000020,0.000011,0.000005,0.000001,-0.000004,-0.000011,-0.000023");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000048,0.000039,0.000032,0.000025,0.000018,0.000012,0.000007,0.000001");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000034,0.000026,0.000018,0.000011,0.000006,0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000028,0.000020,0.000013,0.000007,0.000003,0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000033,0.000022,0.000013,0.000006,0.000001,-0.000003,-0.000010,-0.000023");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000054,0.000042,0.000033,0.000027,0.000023,0.000018,0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000040,0.000031,0.000024,0.000017,0.000011,0.000006,0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000055,0.000043,0.000036,0.000031,0.000027,0.000022,0.000014");
			}

		}

		internal_power () {

			when      	: "A & B1 & !B2 & C2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000022,0.000013,0.000006,0.000001,-0.000003,-0.000010,-0.000023");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000074,0.000059,0.000047,0.000039,0.000032,0.000028,0.000022,0.000012");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000034,0.000026,0.000018,0.000011,0.000006,0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000054,0.000042,0.000033,0.000027,0.000023,0.000018,0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000051,0.000040,0.000033,0.000027,0.000023,0.000018,0.000009");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002231;
		fall_capacitance	: 0.002260;
		rise_capacitance	: 0.002201;
		fall_capacitance_range		(0.001828, 0.002682);
		rise_capacitance_range		(0.001833, 0.002794);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A & B1 & !B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000159,0.000109,0.000071,0.000046,0.000030,0.000018,0.000006,-0.000008");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000045,0.000036,0.000030,0.000026,0.000022,0.000017,0.000009");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000021,0.000013,0.000008,0.000005,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000051,0.000042,0.000035,0.000031,0.000027,0.000021,0.000011");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000046,0.000037,0.000030,0.000026,0.000022,0.000017,0.000009");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000032,0.000020,0.000012,0.000007,0.000004,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A & B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000158,0.000107,0.000069,0.000045,0.000029,0.000017,0.000006,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A & B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000021,0.000013,0.000008,0.000005,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000034,0.000021,0.000013,0.000008,0.000005,0.000002,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A & B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000061,0.000046,0.000037,0.000030,0.000026,0.000022,0.000017,0.000009");
			}

		}

		internal_power () {

			when      	: "A & !B1 & B2 & C1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000159,0.000108,0.000071,0.000046,0.000030,0.000018,0.000006,-0.000009");
			}

		}

		internal_power () {

			when      	: "A & !B1 & !B2 & C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000026,0.000018,0.000013,0.000010,0.000007,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A & !B1 & !B2 & !C1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000066,0.000050,0.000041,0.000035,0.000030,0.000027,0.000022,0.000013");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((C1 | C2) & A) & (B1 | B2))";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.044951,0.050368,0.056465,0.068482,0.092064,0.138453", \
				        "0.047941,0.053298,0.059364,0.071435,0.095037,0.141457", \
				        "0.053224,0.058702,0.064573,0.076634,0.100249,0.146688", \
				        "0.063153,0.068837,0.075199,0.087217,0.110840,0.157295", \
				        "0.076422,0.083451,0.090864,0.105001,0.130723,0.177902", \
				        "0.087382,0.096989,0.107162,0.125996,0.158826,0.214587", \
				        "0.086603,0.099836,0.113993,0.139801,0.185043,0.259634", \
				        "0.055813,0.074269,0.093400,0.128955,0.190959,0.293426");
			}
			cell_rise(Timing_X4) {
				values ("0.053011,0.061231,0.070694,0.089052,0.125544,0.198126", \
				        "0.056583,0.064796,0.074196,0.092646,0.129137,0.201727", \
				        "0.064232,0.072419,0.081716,0.100103,0.136627,0.209049", \
				        "0.080690,0.088709,0.097864,0.115952,0.152175,0.224338", \
				        "0.110506,0.120372,0.130876,0.149558,0.184928,0.256261", \
				        "0.153858,0.166504,0.180516,0.205612,0.249689,0.322999", \
				        "0.220748,0.237193,0.254653,0.287246,0.345080,0.442875", \
				        "0.333515,0.354187,0.376538,0.417633,0.490851,0.616945");
			}
			fall_transition(Timing_X4) {
				values ("0.026095,0.030635,0.035707,0.045474,0.065236,0.104848", \
				        "0.026081,0.030616,0.035607,0.045504,0.065301,0.104874", \
				        "0.025981,0.030525,0.035528,0.045460,0.065237,0.104813", \
				        "0.027872,0.031865,0.036568,0.045862,0.065242,0.104860", \
				        "0.035966,0.039803,0.044143,0.052495,0.069211,0.105631", \
				        "0.052772,0.057132,0.061997,0.070593,0.086841,0.118803", \
				        "0.082664,0.087943,0.093907,0.104563,0.123492,0.156840", \
				        "0.133676,0.141136,0.148902,0.162946,0.187334,0.228285");
			}
			rise_transition(Timing_X4) {
				values ("0.064522,0.072469,0.081446,0.099732,0.135199,0.204475", \
				        "0.064533,0.072433,0.081414,0.099678,0.135211,0.204475", \
				        "0.064535,0.072436,0.081412,0.099672,0.135206,0.204448", \
				        "0.066012,0.073147,0.081650,0.099728,0.135201,0.204442", \
				        "0.079433,0.084681,0.091245,0.105418,0.136305,0.204470", \
				        "0.112614,0.118291,0.124312,0.135870,0.158414,0.211808", \
				        "0.130264,0.139244,0.148826,0.190677,0.218736,0.266875", \
				        "0.192655,0.202929,0.214672,0.236727,0.277407,0.348059");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.038019,0.043326,0.049370,0.061206,0.084511,0.130615", \
				        "0.041005,0.046255,0.052260,0.064160,0.087503,0.133619", \
				        "0.046313,0.051686,0.057540,0.069338,0.092676,0.138839", \
				        "0.055435,0.061297,0.067722,0.079817,0.103271,0.149462", \
				        "0.065908,0.073538,0.081471,0.096247,0.122600,0.170037", \
				        "0.072116,0.082685,0.093802,0.113866,0.148345,0.205590", \
				        "0.064741,0.079400,0.094824,0.122599,0.170225,0.247566", \
				        "0.025670,0.045906,0.066782,0.104977,0.170248,0.276585");
			}
			cell_rise(Timing_X4) {
				values ("0.052348,0.060515,0.069929,0.088311,0.124627,0.196998", \
				        "0.055923,0.064085,0.073440,0.091787,0.128191,0.200602", \
				        "0.063572,0.071704,0.080965,0.099307,0.135672,0.207958", \
				        "0.080040,0.088008,0.097124,0.115154,0.151228,0.223231", \
				        "0.109568,0.119465,0.129928,0.148736,0.183988,0.255130", \
				        "0.152423,0.165089,0.179043,0.204277,0.248476,0.321906", \
				        "0.218156,0.234713,0.252327,0.285079,0.343145,0.441116", \
				        "0.326708,0.347869,0.370414,0.412054,0.485943,0.612828");
			}
			fall_transition(Timing_X4) {
				values ("0.021732,0.026195,0.031194,0.041032,0.060763,0.100260", \
				        "0.021717,0.026220,0.031195,0.041036,0.060716,0.100306", \
				        "0.021766,0.026113,0.031104,0.041002,0.060747,0.100219", \
				        "0.024713,0.028567,0.033029,0.041833,0.060817,0.100297", \
				        "0.033618,0.037376,0.041639,0.049526,0.065916,0.101465", \
				        "0.050689,0.055067,0.059862,0.068436,0.084459,0.115846", \
				        "0.081103,0.086213,0.092154,0.102675,0.121512,0.154683", \
				        "0.132380,0.139722,0.147368,0.161302,0.185606,0.226370");
			}
			rise_transition(Timing_X4) {
				values ("0.046268,0.054784,0.064335,0.083197,0.119402,0.189207", \
				        "0.046277,0.054800,0.064369,0.083190,0.119404,0.189200", \
				        "0.046275,0.054783,0.064354,0.083170,0.119384,0.189202", \
				        "0.047808,0.055514,0.064608,0.083189,0.119381,0.189210", \
				        "0.062207,0.067607,0.074424,0.088927,0.120548,0.189199", \
				        "0.090779,0.097786,0.105193,0.118923,0.142909,0.196647", \
				        "0.131982,0.140791,0.150272,0.168091,0.199558,0.251302", \
				        "0.196252,0.206281,0.218118,0.239975,0.280310,0.350430");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "!B1 & B2 & C2";
			sdf_cond	   : "(B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.044951,0.050368,0.056465,0.068482,0.092064,0.138453", \
				        "0.047941,0.053298,0.059364,0.071435,0.095037,0.141457", \
				        "0.053224,0.058702,0.064573,0.076634,0.100249,0.146688", \
				        "0.063153,0.068837,0.075199,0.087217,0.110840,0.157295", \
				        "0.076422,0.083451,0.090864,0.105001,0.130723,0.177902", \
				        "0.087382,0.096989,0.107162,0.125996,0.158826,0.214587", \
				        "0.086603,0.099836,0.113993,0.139801,0.185043,0.259634", \
				        "0.055813,0.074269,0.093400,0.128955,0.190959,0.293426");
			}
			cell_rise(Timing_X4) {
				values ("0.053011,0.061231,0.070694,0.089052,0.125544,0.198126", \
				        "0.056583,0.064796,0.074196,0.092646,0.129137,0.201727", \
				        "0.064232,0.072419,0.081716,0.100103,0.136627,0.209049", \
				        "0.080690,0.088709,0.097864,0.115952,0.152175,0.224338", \
				        "0.110506,0.120372,0.130876,0.149558,0.184928,0.256261", \
				        "0.153858,0.166504,0.180516,0.205612,0.249689,0.322999", \
				        "0.220228,0.236979,0.254636,0.287246,0.345080,0.442875", \
				        "0.331018,0.351913,0.374364,0.415677,0.489307,0.615879");
			}
			fall_transition(Timing_X4) {
				values ("0.026095,0.030635,0.035707,0.045474,0.065236,0.104848", \
				        "0.026081,0.030616,0.035607,0.045504,0.065301,0.104874", \
				        "0.025981,0.030525,0.035528,0.045460,0.065237,0.104813", \
				        "0.027872,0.031865,0.036568,0.045862,0.065242,0.104860", \
				        "0.035966,0.039803,0.044143,0.052495,0.069211,0.105631", \
				        "0.052772,0.057132,0.061997,0.070593,0.086841,0.118803", \
				        "0.082664,0.087943,0.093907,0.104563,0.123492,0.156840", \
				        "0.133676,0.141136,0.148902,0.162946,0.187334,0.228285");
			}
			rise_transition(Timing_X4) {
				values ("0.064522,0.072469,0.081446,0.099732,0.135199,0.204475", \
				        "0.064533,0.072433,0.081414,0.099678,0.135211,0.204475", \
				        "0.064535,0.072436,0.081412,0.099672,0.135206,0.204448", \
				        "0.066012,0.073147,0.081650,0.099728,0.135201,0.204442", \
				        "0.079433,0.084681,0.091245,0.105418,0.136305,0.204470", \
				        "0.112614,0.118291,0.124312,0.135870,0.158414,0.211808", \
				        "0.160154,0.167265,0.175270,0.190677,0.218736,0.266875", \
				        "0.233776,0.241628,0.251433,0.270118,0.306278,0.371724");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B1 & B2 & C2 | B1 & C1";
			sdf_cond	   : "(B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (B1 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.032498,0.037025,0.042132,0.052151,0.071846,0.110795", \
				        "0.035532,0.039993,0.045127,0.055170,0.074874,0.113858", \
				        "0.040866,0.045419,0.050387,0.060378,0.080134,0.119127", \
				        "0.049192,0.054358,0.060003,0.070528,0.090512,0.129586", \
				        "0.057952,0.064846,0.071972,0.085171,0.108495,0.149797", \
				        "0.061614,0.071280,0.081359,0.099502,0.130605,0.181711", \
				        "0.050093,0.063570,0.077783,0.103320,0.146815,0.216787", \
				        "0.003015,0.021934,0.041457,0.076977,0.137502,0.235101");
			}
			cell_rise(Timing_X4) {
				values ("0.052133,0.060358,0.069699,0.088109,0.124474,0.196812", \
				        "0.055730,0.063892,0.073218,0.091614,0.127978,0.200363", \
				        "0.063441,0.071569,0.080764,0.099132,0.135490,0.207757", \
				        "0.080056,0.087994,0.097114,0.115108,0.151129,0.223091", \
				        "0.109869,0.119709,0.130161,0.148915,0.184109,0.255161", \
				        "0.153397,0.166017,0.179864,0.205033,0.249075,0.322328", \
				        "0.220748,0.237193,0.254653,0.287219,0.344987,0.442589", \
				        "0.333515,0.354187,0.376538,0.417633,0.490851,0.616945");
			}
			fall_transition(Timing_X4) {
				values ("0.017979,0.021775,0.026009,0.034280,0.050969,0.084437", \
				        "0.017934,0.021732,0.025989,0.034290,0.050983,0.084431", \
				        "0.018202,0.021879,0.025924,0.034195,0.050905,0.084448", \
				        "0.021638,0.024966,0.028686,0.035736,0.051286,0.084430", \
				        "0.030255,0.033453,0.037046,0.043960,0.057684,0.086666", \
				        "0.046309,0.050176,0.054408,0.061904,0.075799,0.102493", \
				        "0.075086,0.079746,0.085025,0.094403,0.110911,0.139746", \
				        "0.124126,0.130792,0.137662,0.150180,0.171848,0.207780");
			}
			rise_transition(Timing_X4) {
				values ("0.046262,0.054809,0.064397,0.083197,0.119378,0.189198", \
				        "0.046273,0.054804,0.064398,0.083164,0.119405,0.189200", \
				        "0.046272,0.054780,0.064396,0.083169,0.119384,0.189199", \
				        "0.047796,0.055525,0.064560,0.083184,0.119380,0.189203", \
				        "0.062012,0.067435,0.074272,0.088859,0.120523,0.189200", \
				        "0.090134,0.097251,0.104724,0.118484,0.142595,0.196528", \
				        "0.130264,0.139244,0.148826,0.166820,0.198502,0.250502", \
				        "0.192655,0.202929,0.214672,0.236727,0.277407,0.348059");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.043910,0.049222,0.055274,0.067126,0.090434,0.136579", \
				        "0.046599,0.051897,0.058000,0.069874,0.093213,0.139367", \
				        "0.050862,0.056272,0.062138,0.074048,0.097432,0.143645", \
				        "0.057180,0.062884,0.069077,0.080977,0.104409,0.150707", \
				        "0.064676,0.071079,0.078075,0.091410,0.116415,0.163509", \
				        "0.068713,0.077392,0.086362,0.102842,0.132115,0.184249", \
				        "0.056400,0.068875,0.081879,0.105274,0.145076,0.209963", \
				        "0.003693,0.021976,0.040675,0.074425,0.131466,0.222426");
			}
			cell_rise(Timing_X4) {
				values ("0.093190,0.105323,0.119033,0.146106,0.199378,0.304733", \
				        "0.096052,0.108118,0.121852,0.148933,0.202188,0.307569", \
				        "0.102476,0.114437,0.128131,0.155136,0.208328,0.313639", \
				        "0.116401,0.128500,0.141954,0.168695,0.221531,0.326492", \
				        "0.147669,0.158734,0.172069,0.198168,0.250069,0.353978", \
				        "0.201128,0.215320,0.230704,0.259508,0.311518,0.412948", \
				        "0.281795,0.299996,0.319052,0.355472,0.421582,0.536411", \
				        "0.414743,0.436239,0.460690,0.505456,0.587143,0.731734");
			}
			fall_transition(Timing_X4) {
				values ("0.021735,0.026131,0.031211,0.040989,0.060760,0.100251", \
				        "0.021730,0.026161,0.031192,0.041020,0.060784,0.100236", \
				        "0.021704,0.026120,0.031119,0.041003,0.060715,0.100297", \
				        "0.023188,0.027352,0.032081,0.041476,0.060793,0.100302", \
				        "0.027900,0.031939,0.036679,0.045761,0.063957,0.101220", \
				        "0.040881,0.044707,0.049064,0.057445,0.074309,0.109808", \
				        "0.067756,0.072019,0.076951,0.085837,0.102092,0.133956", \
				        "0.116855,0.122404,0.128309,0.139253,0.158743,0.192392");
			}
			rise_transition(Timing_X4) {
				values ("0.085248,0.096396,0.109019,0.133959,0.182816,0.278811", \
				        "0.085252,0.096403,0.108989,0.133941,0.182822,0.278806", \
				        "0.085255,0.096394,0.108981,0.133961,0.182812,0.278814", \
				        "0.085267,0.096427,0.109030,0.133957,0.182811,0.278811", \
				        "0.088726,0.098607,0.110153,0.134058,0.182816,0.278813", \
				        "0.111590,0.120854,0.130438,0.149542,0.189924,0.278941", \
				        "0.150335,0.161279,0.173523,0.196059,0.236348,0.308995", \
				        "0.206715,0.220339,0.235013,0.262926,0.313853,0.403070");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.037126,0.042196,0.048023,0.059521,0.082442,0.128127", \
				        "0.039775,0.044863,0.050706,0.062241,0.085212,0.130914", \
				        "0.043941,0.049129,0.054806,0.066365,0.089414,0.135193", \
				        "0.049488,0.055188,0.061311,0.073164,0.096337,0.142265", \
				        "0.054985,0.061815,0.069082,0.082565,0.107859,0.155037", \
				        "0.054270,0.064025,0.073979,0.091630,0.122124,0.174952", \
				        "0.033951,0.048360,0.063026,0.088778,0.131302,0.198671", \
				        "-0.029511,-0.008388,0.012754,0.050034,0.111262,0.206594");
			}
			cell_rise(Timing_X4) {
				values ("0.091932,0.103998,0.117598,0.144516,0.197641,0.302610", \
				        "0.094792,0.106801,0.120416,0.147366,0.200474,0.305437", \
				        "0.101234,0.113155,0.126650,0.153576,0.206597,0.311517", \
				        "0.115129,0.127203,0.140519,0.167151,0.219791,0.324365", \
				        "0.146461,0.157455,0.170674,0.196605,0.248342,0.351880", \
				        "0.199218,0.213547,0.228856,0.257716,0.309851,0.410849", \
				        "0.279007,0.297354,0.316294,0.352783,0.419025,0.533999", \
				        "0.410320,0.431846,0.456437,0.501270,0.583115,0.727790");
			}
			fall_transition(Timing_X4) {
				values ("0.016575,0.021051,0.026005,0.035827,0.055658,0.095097", \
				        "0.016592,0.020984,0.025941,0.035858,0.055618,0.095104", \
				        "0.016809,0.021151,0.026074,0.035868,0.055640,0.095151", \
				        "0.018789,0.022908,0.027529,0.036743,0.055866,0.095179", \
				        "0.024455,0.028270,0.032662,0.041499,0.059553,0.096406", \
				        "0.038450,0.042274,0.046564,0.054561,0.070849,0.105585", \
				        "0.066693,0.070695,0.075451,0.084023,0.100055,0.131017", \
				        "0.117899,0.122770,0.128096,0.138571,0.157573,0.190595");
			}
			rise_transition(Timing_X4) {
				values ("0.063729,0.074566,0.086952,0.111287,0.159512,0.255601", \
				        "0.063719,0.074572,0.086938,0.111310,0.159505,0.255598", \
				        "0.063726,0.074570,0.086942,0.111355,0.159521,0.255587", \
				        "0.063758,0.074575,0.086929,0.111356,0.159514,0.255583", \
				        "0.067321,0.076839,0.088207,0.111418,0.159524,0.255570", \
				        "0.086758,0.096946,0.107592,0.126956,0.166702,0.255732", \
				        "0.115969,0.128803,0.142730,0.167616,0.211030,0.285950", \
				        "0.159918,0.176224,0.193492,0.225085,0.280870,0.375487");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A & !B2 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.033619,0.037951,0.042852,0.052642,0.072155,0.111037", \
				        "0.036325,0.040643,0.045570,0.055417,0.074951,0.113861", \
				        "0.040700,0.045093,0.049913,0.059755,0.079389,0.118273", \
				        "0.046700,0.051763,0.057112,0.067452,0.087360,0.126401", \
				        "0.052587,0.059043,0.065796,0.078229,0.100840,0.141975", \
				        "0.051772,0.061240,0.070890,0.088009,0.117097,0.165561", \
				        "0.030953,0.045087,0.059486,0.084749,0.126394,0.191780", \
				        "-0.033603,-0.012867,0.007979,0.044708,0.105095,0.198955");
			}
			cell_rise(Timing_X4) {
				values ("0.096945,0.108839,0.122245,0.148949,0.201791,0.306415", \
				        "0.099847,0.111671,0.125061,0.151825,0.204617,0.309292", \
				        "0.106295,0.118085,0.131368,0.158019,0.210801,0.315388", \
				        "0.120300,0.132106,0.145371,0.171682,0.224041,0.328297", \
				        "0.151533,0.162399,0.175532,0.201248,0.252771,0.355994", \
				        "0.205034,0.219573,0.234429,0.262831,0.314486,0.415216", \
				        "0.286821,0.304620,0.323453,0.359393,0.424979,0.539020", \
				        "0.420417,0.441478,0.465704,0.509844,0.590807,0.734762");
			}
			fall_transition(Timing_X4) {
				values ("0.015347,0.019135,0.023284,0.031659,0.048303,0.081551", \
				        "0.015336,0.019141,0.023255,0.031639,0.048301,0.081560", \
				        "0.015691,0.019249,0.023360,0.031611,0.048418,0.081618", \
				        "0.018191,0.021626,0.025489,0.033050,0.048736,0.081610", \
				        "0.025077,0.028268,0.031929,0.039261,0.053783,0.083711", \
				        "0.040257,0.043586,0.047359,0.054385,0.067903,0.095716", \
				        "0.069882,0.073300,0.077498,0.085291,0.099601,0.126260", \
				        "0.123248,0.127283,0.131767,0.141144,0.158597,0.189174");
			}
			rise_transition(Timing_X4) {
				values ("0.065692,0.076651,0.089095,0.113606,0.162016,0.258261", \
				        "0.065699,0.076651,0.089086,0.113656,0.161995,0.258270", \
				        "0.065694,0.076655,0.089093,0.113602,0.162000,0.258293", \
				        "0.065708,0.076629,0.089137,0.113570,0.162026,0.258292", \
				        "0.068967,0.078676,0.090160,0.113691,0.161986,0.258296", \
				        "0.088693,0.098604,0.109183,0.128636,0.168712,0.258399", \
				        "0.118390,0.130943,0.144895,0.169604,0.212720,0.287638", \
				        "0.162860,0.178915,0.195997,0.227369,0.282838,0.377052");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & !C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.050269,0.055690,0.061787,0.073802,0.097377,0.143759", \
				        "0.052910,0.058272,0.064342,0.076363,0.099963,0.146367", \
				        "0.057184,0.062668,0.068597,0.080593,0.104178,0.150611", \
				        "0.063901,0.069549,0.075730,0.087643,0.111248,0.157731", \
				        "0.072482,0.078704,0.085544,0.098701,0.123557,0.170582", \
				        "0.079430,0.087490,0.095916,0.111720,0.140297,0.191949", \
				        "0.073197,0.084581,0.096569,0.118415,0.156307,0.219433", \
				        "0.034162,0.050292,0.067111,0.097902,0.151060,0.237677");
			}
			cell_rise(Timing_X4) {
				values ("0.106530,0.118607,0.132358,0.159342,0.212583,0.317941", \
				        "0.110091,0.122172,0.135789,0.162822,0.216124,0.321546", \
				        "0.116412,0.128501,0.142158,0.169206,0.222500,0.327879", \
				        "0.127780,0.140010,0.153836,0.180938,0.234162,0.339629", \
				        "0.151503,0.163487,0.177216,0.204195,0.257406,0.362760", \
				        "0.194453,0.207956,0.223360,0.252396,0.306673,0.411197", \
				        "0.265792,0.282564,0.300111,0.333870,0.396712,0.510975", \
				        "0.388329,0.408549,0.429844,0.470476,0.544811,0.678113");
			}
			fall_transition(Timing_X4) {
				values ("0.026107,0.030557,0.035615,0.045486,0.065249,0.104865", \
				        "0.026105,0.030592,0.035604,0.045477,0.065268,0.104859", \
				        "0.026053,0.030537,0.035584,0.045437,0.065291,0.104870", \
				        "0.027156,0.031318,0.036178,0.045789,0.065273,0.104857", \
				        "0.031251,0.035461,0.040285,0.049472,0.067894,0.105576", \
				        "0.043115,0.047084,0.051583,0.060353,0.077808,0.113655", \
				        "0.068770,0.073187,0.078160,0.087244,0.103969,0.136719", \
				        "0.115542,0.121262,0.127465,0.138784,0.158585,0.192842");
			}
			rise_transition(Timing_X4) {
				values ("0.085238,0.096401,0.109011,0.133942,0.182820,0.278781", \
				        "0.085252,0.096403,0.109005,0.133940,0.182822,0.278804", \
				        "0.085247,0.096393,0.109016,0.133969,0.182826,0.278811", \
				        "0.085242,0.096394,0.108980,0.133977,0.182818,0.278782", \
				        "0.087527,0.097978,0.109875,0.134045,0.182814,0.278816", \
				        "0.103546,0.113345,0.123782,0.144684,0.187946,0.279105", \
				        "0.131204,0.141751,0.153228,0.175784,0.218506,0.299474", \
				        "0.174463,0.185863,0.199025,0.223913,0.271079,0.359897");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.042805,0.048110,0.054128,0.065922,0.089198,0.135249", \
				        "0.045443,0.050744,0.056691,0.068550,0.091874,0.137949", \
				        "0.049727,0.055096,0.060830,0.072743,0.096031,0.142169", \
				        "0.055968,0.061657,0.067813,0.079716,0.103095,0.149243", \
				        "0.063133,0.069612,0.076635,0.089995,0.115006,0.162069", \
				        "0.066152,0.075053,0.084258,0.100940,0.130454,0.182698", \
				        "0.053208,0.066045,0.079350,0.102998,0.143175,0.208362", \
				        "0.005729,0.023807,0.042307,0.075727,0.132202,0.222490");
			}
			cell_rise(Timing_X4) {
				values ("0.105266,0.117333,0.130907,0.157800,0.210873,0.315852", \
				        "0.108822,0.120859,0.134427,0.161360,0.214452,0.319457", \
				        "0.115156,0.127201,0.140722,0.167620,0.220744,0.325750", \
				        "0.126514,0.138693,0.152352,0.179365,0.232462,0.337501", \
				        "0.150299,0.162173,0.175799,0.202661,0.255680,0.360660", \
				        "0.192803,0.206342,0.221635,0.250647,0.304990,0.409077", \
				        "0.263647,0.280429,0.297845,0.331627,0.394490,0.508612", \
				        "0.385001,0.405448,0.426645,0.467329,0.541738,0.674945");
			}
			fall_transition(Timing_X4) {
				values ("0.021274,0.025718,0.030723,0.040482,0.060273,0.099766", \
				        "0.021268,0.025722,0.030729,0.040507,0.060272,0.099768", \
				        "0.021314,0.025730,0.030676,0.040529,0.060263,0.099776", \
				        "0.022868,0.027024,0.031735,0.041104,0.060359,0.099754", \
				        "0.027649,0.031627,0.036412,0.045464,0.063610,0.100779", \
				        "0.040598,0.044463,0.048905,0.057272,0.074084,0.109434", \
				        "0.067229,0.071493,0.076391,0.085253,0.101626,0.133604", \
				        "0.114861,0.120472,0.126416,0.137440,0.157030,0.190868");
			}
			rise_transition(Timing_X4) {
				values ("0.063719,0.074560,0.086993,0.111348,0.159515,0.255579", \
				        "0.063723,0.074559,0.086997,0.111356,0.159521,0.255562", \
				        "0.063728,0.074569,0.086991,0.111319,0.159497,0.255596", \
				        "0.063713,0.074577,0.086989,0.111323,0.159466,0.255592", \
				        "0.066127,0.076188,0.087822,0.111462,0.159494,0.255560", \
				        "0.079506,0.089815,0.100936,0.122085,0.164652,0.255914", \
				        "0.101065,0.112656,0.125302,0.149181,0.193577,0.276345", \
				        "0.135868,0.149214,0.163983,0.191299,0.241512,0.333744");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A & !B1 & C1 & C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.038194,0.042712,0.047879,0.057920,0.077746,0.116944", \
				        "0.040885,0.045377,0.050471,0.060527,0.080367,0.119603", \
				        "0.045378,0.049919,0.054855,0.064957,0.084789,0.124029", \
				        "0.052252,0.057240,0.062626,0.072920,0.092928,0.132208", \
				        "0.060181,0.066222,0.072677,0.084769,0.106991,0.147880", \
				        "0.063243,0.071867,0.080800,0.096913,0.124839,0.172386", \
				        "0.049780,0.062384,0.075412,0.098649,0.137945,0.201018", \
				        "0.001067,0.018872,0.037137,0.070045,0.125762,0.214620");
			}
			cell_rise(Timing_X4) {
				values ("0.110321,0.122203,0.135600,0.162240,0.215033,0.319616", \
				        "0.113865,0.125707,0.139010,0.165719,0.218614,0.323262", \
				        "0.120144,0.132067,0.145387,0.171997,0.224890,0.329614", \
				        "0.131538,0.143513,0.157023,0.183755,0.236601,0.341320", \
				        "0.155351,0.167056,0.180516,0.207123,0.259844,0.364492", \
				        "0.198747,0.212065,0.227013,0.255624,0.309393,0.413088", \
				        "0.271025,0.287531,0.304467,0.337817,0.400032,0.513347", \
				        "0.394622,0.413512,0.435422,0.475453,0.548957,0.681303");
			}
			fall_transition(Timing_X4) {
				values ("0.019445,0.023120,0.027295,0.035715,0.052259,0.085442", \
				        "0.019421,0.023182,0.027312,0.035553,0.052194,0.085448", \
				        "0.019546,0.023161,0.027323,0.035684,0.052196,0.085417", \
				        "0.021593,0.025017,0.028887,0.036604,0.052531,0.085355", \
				        "0.027739,0.031011,0.034814,0.042252,0.056903,0.087204", \
				        "0.042131,0.045506,0.049229,0.056386,0.070337,0.098701", \
				        "0.070121,0.073790,0.078210,0.086146,0.100848,0.128156", \
				        "0.119646,0.124563,0.129748,0.139728,0.157856,0.189127");
			}
			rise_transition(Timing_X4) {
				values ("0.065696,0.076645,0.089138,0.113663,0.162006,0.258290", \
				        "0.065699,0.076650,0.089139,0.113613,0.162027,0.258281", \
				        "0.065693,0.076653,0.089137,0.113633,0.162011,0.258283", \
				        "0.065697,0.076653,0.089121,0.113651,0.162022,0.258287", \
				        "0.067836,0.078117,0.089911,0.113729,0.162021,0.258290", \
				        "0.081273,0.091629,0.102790,0.124004,0.166915,0.258555", \
				        "0.103061,0.114599,0.127277,0.151115,0.195596,0.278519", \
				        "0.138084,0.151458,0.166081,0.193284,0.243464,0.335719");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & !B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.025225,0.030600,0.036675,0.048534,0.071806,0.117834", \
				        "0.028148,0.033506,0.039585,0.051433,0.074681,0.120671", \
				        "0.034841,0.039624,0.045479,0.057219,0.080427,0.126323", \
				        "0.044332,0.050672,0.057219,0.069449,0.092038,0.137798", \
				        "0.052782,0.061379,0.070233,0.086681,0.114924,0.161756", \
				        "0.056026,0.067501,0.079530,0.101481,0.139435,0.201881", \
				        "0.043902,0.059508,0.075808,0.105395,0.156281,0.239963", \
				        "-0.004079,0.016824,0.038591,0.078312,0.146719,0.259269");
			}
			cell_rise(Timing_X4) {
				values ("0.045813,0.057498,0.070906,0.097137,0.149452,0.253633", \
				        "0.048827,0.060537,0.073847,0.100107,0.152392,0.256677", \
				        "0.055702,0.067183,0.080356,0.106459,0.158581,0.262812", \
				        "0.070644,0.081812,0.094713,0.120351,0.171905,0.275599", \
				        "0.094837,0.108979,0.123938,0.150427,0.200842,0.303147", \
				        "0.131744,0.149157,0.167944,0.201889,0.260843,0.362341", \
				        "0.191378,0.213427,0.236412,0.278567,0.352852,0.478710", \
				        "0.293460,0.320722,0.349735,0.401929,0.493942,0.651669");
			}
			fall_transition(Timing_X4) {
				values ("0.021300,0.025820,0.030677,0.040527,0.060234,0.099704", \
				        "0.020513,0.025535,0.030689,0.040528,0.060250,0.099737", \
				        "0.020854,0.025186,0.030200,0.040121,0.060233,0.099758", \
				        "0.027170,0.030766,0.034810,0.042669,0.060151,0.099778", \
				        "0.039284,0.043537,0.048073,0.056113,0.070831,0.102129", \
				        "0.060137,0.065477,0.071210,0.081243,0.098855,0.129289", \
				        "0.096161,0.103470,0.111007,0.124079,0.146456,0.184030", \
				        "0.159823,0.169958,0.180355,0.198334,0.228258,0.276333");
			}
			rise_transition(Timing_X4) {
				values ("0.053150,0.064724,0.077593,0.102975,0.151882,0.247366", \
				        "0.053146,0.064719,0.077585,0.102952,0.151866,0.247381", \
				        "0.052952,0.064685,0.077595,0.102951,0.151863,0.247388", \
				        "0.056130,0.066042,0.077877,0.102957,0.151862,0.247376", \
				        "0.071171,0.078748,0.087937,0.107831,0.152141,0.247355", \
				        "0.097839,0.106379,0.116039,0.134507,0.169358,0.249947", \
				        "0.141187,0.149702,0.160126,0.181152,0.221276,0.291958", \
				        "0.215564,0.223778,0.234259,0.256402,0.301899,0.388202");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & !B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019059,0.024151,0.029935,0.041490,0.064396,0.110039", \
				        "0.022232,0.027063,0.032858,0.044348,0.067300,0.112953", \
				        "0.028456,0.033583,0.039028,0.050194,0.073010,0.118580", \
				        "0.035022,0.041993,0.049203,0.062269,0.084747,0.130062", \
				        "0.039550,0.049090,0.058839,0.076444,0.106145,0.154144", \
				        "0.037558,0.050395,0.063668,0.087330,0.127301,0.191930", \
				        "0.018332,0.035979,0.053945,0.085902,0.139614,0.226380", \
				        "-0.038431,-0.015146,0.008970,0.051667,0.124045,0.240865");
			}
			cell_rise(Timing_X4) {
				values ("0.044937,0.056550,0.069810,0.095964,0.148064,0.251909", \
				        "0.047971,0.059527,0.072723,0.098917,0.151050,0.254958", \
				        "0.054848,0.066214,0.079232,0.105253,0.157251,0.261091", \
				        "0.069760,0.080929,0.093662,0.119128,0.170565,0.273880", \
				        "0.093579,0.107735,0.122647,0.149314,0.199497,0.301450", \
				        "0.129979,0.147358,0.166070,0.200158,0.259267,0.360646", \
				        "0.188493,0.210699,0.233695,0.275996,0.350446,0.476453", \
				        "0.288195,0.315823,0.345085,0.397691,0.490082,0.647997");
			}
			fall_transition(Timing_X4) {
				values ("0.015943,0.020819,0.025876,0.035856,0.055661,0.095143", \
				        "0.015420,0.020227,0.025656,0.035833,0.055612,0.095183", \
				        "0.017846,0.021279,0.025934,0.035353,0.055660,0.095163", \
				        "0.024915,0.028506,0.032233,0.039380,0.056153,0.095154", \
				        "0.037215,0.041473,0.046013,0.054091,0.068732,0.098615", \
				        "0.058378,0.063672,0.069316,0.079296,0.096896,0.127234", \
				        "0.094775,0.101995,0.109437,0.122514,0.144738,0.182028", \
				        "0.159173,0.169036,0.179260,0.197071,0.226689,0.274491");
			}
			rise_transition(Timing_X4) {
				values ("0.037958,0.048418,0.060433,0.084180,0.131647,0.226636", \
				        "0.037943,0.048424,0.060521,0.084093,0.131618,0.226644", \
				        "0.037735,0.048407,0.060515,0.084116,0.131629,0.226646", \
				        "0.041012,0.049817,0.060790,0.084155,0.131637,0.226639", \
				        "0.053067,0.061589,0.070679,0.089074,0.131932,0.226611", \
				        "0.071742,0.082154,0.093420,0.113570,0.149240,0.229273", \
				        "0.103990,0.115624,0.128600,0.152873,0.196809,0.271316", \
				        "0.162483,0.175572,0.190298,0.218021,0.269608,0.361853");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A & B1 & B2 & !C2";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.017684,0.021982,0.026877,0.036579,0.055958,0.094446", \
				        "0.020873,0.025022,0.029898,0.039588,0.058894,0.097380", \
				        "0.026523,0.031239,0.036249,0.045650,0.064893,0.103290", \
				        "0.032027,0.038498,0.045119,0.057094,0.077151,0.115264", \
				        "0.035008,0.043911,0.053005,0.069212,0.096560,0.140236", \
				        "0.030482,0.042573,0.055053,0.077141,0.114224,0.173662", \
				        "0.006936,0.023667,0.040605,0.070717,0.121081,0.201668", \
				        "-0.057559,-0.035459,-0.012588,0.027891,0.096204,0.205852");
			}
			cell_rise(Timing_X4) {
				values ("0.044860,0.056471,0.069724,0.095903,0.148001,0.251879", \
				        "0.047838,0.059414,0.072600,0.098782,0.150929,0.254863", \
				        "0.054735,0.066101,0.079155,0.105083,0.157069,0.260937", \
				        "0.069817,0.080941,0.093685,0.119085,0.170466,0.273753", \
				        "0.093988,0.108082,0.122970,0.149562,0.199668,0.301523", \
				        "0.131099,0.148443,0.167063,0.201060,0.260006,0.361225", \
				        "0.191419,0.213409,0.236223,0.278289,0.352506,0.478170", \
				        "0.295550,0.322643,0.351473,0.403466,0.495133,0.652365");
			}
			fall_transition(Timing_X4) {
				values ("0.013364,0.017278,0.021547,0.029892,0.046628,0.080116", \
				        "0.013234,0.017067,0.021344,0.029864,0.046643,0.080115", \
				        "0.016299,0.019031,0.022599,0.029893,0.046594,0.080060", \
				        "0.023220,0.026412,0.029754,0.035740,0.048420,0.080001", \
				        "0.035167,0.038958,0.043186,0.050279,0.062899,0.086611", \
				        "0.055768,0.060631,0.065888,0.074798,0.090501,0.117216", \
				        "0.091511,0.098176,0.105081,0.116993,0.137171,0.170613", \
				        "0.155175,0.164334,0.173828,0.190277,0.217511,0.261016");
			}
			rise_transition(Timing_X4) {
				values ("0.037935,0.048428,0.060429,0.084176,0.131647,0.226617", \
				        "0.037927,0.048429,0.060509,0.084145,0.131623,0.226619", \
				        "0.037716,0.048357,0.060490,0.084160,0.131631,0.226637", \
				        "0.040994,0.049769,0.060706,0.084158,0.131646,0.226637", \
				        "0.052866,0.061432,0.070569,0.089052,0.131907,0.226606", \
				        "0.071108,0.081584,0.092888,0.113159,0.148919,0.229182", \
				        "0.102424,0.114111,0.127248,0.151665,0.195831,0.270567", \
				        "0.159731,0.172620,0.187283,0.215030,0.266885,0.359665");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & !B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.032373,0.037806,0.043993,0.055989,0.079541,0.125906", \
				        "0.035137,0.040574,0.046747,0.058758,0.082276,0.128622", \
				        "0.040952,0.046241,0.052472,0.064465,0.087954,0.134189", \
				        "0.052662,0.058492,0.064745,0.076336,0.099480,0.145586", \
				        "0.064527,0.072455,0.080702,0.096266,0.123225,0.169435", \
				        "0.072871,0.083370,0.094577,0.115173,0.151252,0.211662", \
				        "0.070208,0.084096,0.098802,0.126042,0.173904,0.254309", \
				        "0.041247,0.059468,0.078631,0.114447,0.177182,0.283107");
			}
			cell_rise(Timing_X4) {
				values ("0.059295,0.071034,0.084437,0.110625,0.162919,0.267083", \
				        "0.062592,0.074287,0.087701,0.114064,0.166427,0.270722", \
				        "0.068578,0.080352,0.093575,0.119961,0.172451,0.276880", \
				        "0.080179,0.091905,0.105190,0.131490,0.183842,0.288369", \
				        "0.099839,0.113399,0.128115,0.155183,0.207308,0.311456", \
				        "0.132184,0.148108,0.165371,0.197268,0.255169,0.360105", \
				        "0.187329,0.207142,0.228076,0.266159,0.334255,0.454704", \
				        "0.280255,0.305786,0.332303,0.380290,0.463729,0.607162");
			}
			fall_transition(Timing_X4) {
				values ("0.026282,0.030802,0.035717,0.045478,0.065284,0.104852", \
				        "0.026188,0.030822,0.035707,0.045494,0.065233,0.104864", \
				        "0.025296,0.030039,0.035269,0.045418,0.065309,0.104866", \
				        "0.030173,0.033843,0.037800,0.046349,0.065049,0.104876", \
				        "0.042401,0.046570,0.051091,0.059003,0.073668,0.106402", \
				        "0.062822,0.068219,0.073998,0.084079,0.101663,0.132012", \
				        "0.097179,0.104512,0.112128,0.125392,0.148296,0.186412", \
				        "0.156861,0.167079,0.177524,0.195690,0.226169,0.275614");
			}
			rise_transition(Timing_X4) {
				values ("0.053145,0.064700,0.077605,0.102939,0.151874,0.247368", \
				        "0.053143,0.064697,0.077552,0.102961,0.151872,0.247381", \
				        "0.053146,0.064707,0.077531,0.102991,0.151865,0.247380", \
				        "0.054676,0.065324,0.077669,0.102948,0.151883,0.247344", \
				        "0.065529,0.074055,0.084246,0.106073,0.152101,0.247347", \
				        "0.086068,0.094443,0.104362,0.124216,0.163492,0.249492", \
				        "0.120322,0.128137,0.137751,0.157669,0.198123,0.277148", \
				        "0.178467,0.185886,0.195553,0.215355,0.256649,0.340220");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & !B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.025382,0.030795,0.036833,0.048672,0.071961,0.118057", \
				        "0.028153,0.033504,0.039609,0.051478,0.074743,0.120770", \
				        "0.034682,0.039492,0.045367,0.057161,0.080394,0.126313", \
				        "0.044045,0.050437,0.057033,0.069305,0.091965,0.137771", \
				        "0.052396,0.061088,0.070026,0.086545,0.114832,0.161722", \
				        "0.056361,0.067796,0.079807,0.101747,0.139634,0.202000", \
				        "0.048188,0.063254,0.079114,0.108084,0.158177,0.241134", \
				        "0.012231,0.032008,0.052734,0.090612,0.156332,0.265657");
			}
			cell_rise(Timing_X4) {
				values ("0.058428,0.070037,0.083313,0.109421,0.161557,0.265372", \
				        "0.061733,0.073302,0.086607,0.112842,0.165056,0.268984", \
				        "0.067720,0.079391,0.092507,0.118801,0.171104,0.275161", \
				        "0.079316,0.090963,0.104159,0.130290,0.182479,0.286667", \
				        "0.098720,0.112241,0.126867,0.154065,0.205944,0.309757", \
				        "0.130718,0.146623,0.163840,0.195741,0.253693,0.358390", \
				        "0.185105,0.205003,0.225885,0.264135,0.332294,0.452658", \
				        "0.276458,0.302280,0.328855,0.377136,0.460851,0.604311");
			}
			fall_transition(Timing_X4) {
				values ("0.021833,0.026329,0.031190,0.041036,0.060760,0.100278", \
				        "0.021101,0.026027,0.031137,0.040999,0.060737,0.100286", \
				        "0.021499,0.025793,0.030790,0.040629,0.060761,0.100305", \
				        "0.027983,0.031572,0.035472,0.043273,0.060738,0.100320", \
				        "0.040293,0.044511,0.049025,0.056889,0.071491,0.102756", \
				        "0.060651,0.066034,0.071849,0.081946,0.099601,0.129968", \
				        "0.094985,0.102208,0.109862,0.123247,0.146093,0.184268", \
				        "0.153950,0.164468,0.175089,0.193438,0.223936,0.273307");
			}
			rise_transition(Timing_X4) {
				values ("0.037944,0.048408,0.060413,0.084175,0.131621,0.226632", \
				        "0.037940,0.048436,0.060451,0.084198,0.131645,0.226641", \
				        "0.037947,0.048418,0.060462,0.084193,0.131630,0.226645", \
				        "0.039523,0.049096,0.060586,0.084156,0.131640,0.226629", \
				        "0.048263,0.057093,0.067061,0.087345,0.131885,0.226609", \
				        "0.063434,0.072720,0.083425,0.103888,0.143340,0.228789", \
				        "0.089853,0.099619,0.110921,0.132586,0.175042,0.256385", \
				        "0.135935,0.147006,0.159516,0.183220,0.228631,0.315895");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A & B1 & B2 & !C1";
			sdf_cond	   : "(A == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022779,0.027359,0.032501,0.042513,0.062213,0.101096", \
				        "0.025676,0.030175,0.035344,0.045383,0.065055,0.103932", \
				        "0.032155,0.036505,0.041407,0.051351,0.070960,0.109709", \
				        "0.040236,0.046121,0.052241,0.063552,0.083066,0.121679", \
				        "0.046833,0.054878,0.063218,0.078404,0.104441,0.146723", \
				        "0.047988,0.058717,0.069947,0.090385,0.125522,0.182817", \
				        "0.035045,0.049354,0.064337,0.091520,0.138357,0.215309", \
				        "-0.009330,0.009424,0.029061,0.064959,0.126867,0.229277");
			}
			cell_rise(Timing_X4) {
				values ("0.058371,0.069966,0.083218,0.109387,0.161475,0.265319", \
				        "0.061627,0.073176,0.086450,0.112703,0.164954,0.268940", \
				        "0.067614,0.079257,0.092303,0.118582,0.170937,0.275067", \
				        "0.079231,0.090829,0.104031,0.130094,0.182301,0.286487", \
				        "0.098695,0.112188,0.126805,0.153978,0.205813,0.309577", \
				        "0.131243,0.147105,0.164250,0.196056,0.253886,0.358460", \
				        "0.187351,0.207071,0.227758,0.265758,0.333623,0.453649", \
				        "0.282726,0.308094,0.334314,0.381958,0.464932,0.607637");
			}
			fall_transition(Timing_X4) {
				values ("0.018094,0.021896,0.025971,0.034278,0.050944,0.084384", \
				        "0.017532,0.021699,0.025949,0.034235,0.050927,0.084446", \
				        "0.018956,0.022250,0.026094,0.034050,0.050972,0.084394", \
				        "0.025894,0.029002,0.032167,0.038188,0.051961,0.084364", \
				        "0.037820,0.041613,0.045734,0.052748,0.065206,0.089680", \
				        "0.057715,0.062659,0.067924,0.077026,0.092808,0.119416", \
				        "0.091604,0.098305,0.105286,0.117455,0.138163,0.172335", \
				        "0.150328,0.160122,0.169945,0.186902,0.214765,0.259495");
			}
			rise_transition(Timing_X4) {
				values ("0.037931,0.048414,0.060459,0.084076,0.131645,0.226632", \
				        "0.037933,0.048415,0.060428,0.084094,0.131639,0.226629", \
				        "0.037934,0.048385,0.060453,0.084191,0.131628,0.226642", \
				        "0.039529,0.049041,0.060592,0.084165,0.131636,0.226612", \
				        "0.048263,0.057124,0.067077,0.087363,0.131890,0.226608", \
				        "0.063162,0.072486,0.083263,0.103778,0.143287,0.228778", \
				        "0.088904,0.098724,0.110062,0.131906,0.174583,0.256106", \
				        "0.134348,0.145271,0.157699,0.181394,0.226931,0.314668");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X4) {
				values ("0.011194,0.009531,0.007601,0.003755,-0.003977,-0.019448", \
				        "0.011196,0.009477,0.007570,0.003717,-0.003980,-0.019443", \
				        "0.011142,0.009488,0.007529,0.003678,-0.004042,-0.019508", \
				        "0.011108,0.009445,0.007527,0.003665,-0.004068,-0.019556", \
				        "0.011244,0.009539,0.007611,0.003770,-0.003956,-0.019441", \
				        "0.011998,0.010214,0.008234,0.004272,-0.003571,-0.019137", \
				        "0.015261,0.013243,0.010983,0.006620,-0.001746,-0.017821", \
				        "0.024362,0.022003,0.019403,0.014375,0.004834,-0.012887");
			}
			rise_power(Power_X4) {
				values ("0.015311,0.017035,0.018989,0.022871,0.030644,0.046170", \
				        "0.015300,0.016990,0.018937,0.022849,0.030616,0.046137", \
				        "0.015326,0.017001,0.018952,0.022849,0.030612,0.046120", \
				        "0.015608,0.017247,0.019170,0.023018,0.030730,0.046202", \
				        "0.016470,0.018103,0.019976,0.023711,0.031300,0.046604", \
				        "0.018715,0.020225,0.022004,0.025611,0.032989,0.047946", \
				        "0.023707,0.025182,0.026823,0.030226,0.037204,0.051632", \
				        "0.034666,0.035913,0.037472,0.040570,0.047021,0.060612");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C1 & !C2 | B1 & !B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.014367,0.016065,0.018013,0.021909,0.029665,0.045192", \
				        "0.014357,0.016021,0.017968,0.021876,0.029644,0.045164", \
				        "0.014331,0.016052,0.017984,0.021873,0.029638,0.045164", \
				        "0.014652,0.016298,0.018201,0.022057,0.029770,0.045227", \
				        "0.015523,0.017139,0.019009,0.022743,0.030320,0.045664", \
				        "0.017730,0.019287,0.021048,0.024652,0.031998,0.046985", \
				        "0.022769,0.024224,0.025861,0.029259,0.036250,0.050672", \
				        "0.033728,0.034998,0.036513,0.039621,0.046069,0.059627");
			}
			fall_power(Power_X4) {
				values ("0.008066,0.006365,0.004434,0.000576,-0.007163,-0.022636", \
				        "0.008019,0.006334,0.004403,0.000544,-0.007175,-0.022635", \
				        "0.007990,0.006321,0.004357,0.000497,-0.007227,-0.022718", \
				        "0.007950,0.006286,0.004362,0.000494,-0.007241,-0.022735", \
				        "0.008102,0.006377,0.004448,0.000593,-0.007139,-0.022625", \
				        "0.009037,0.007215,0.005176,0.001158,-0.006702,-0.022335", \
				        "0.012627,0.010534,0.008227,0.003763,-0.004736,-0.020960", \
				        "0.022294,0.019852,0.017136,0.011941,0.002177,-0.015762");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B1 & B2 & C2";

			rise_power(Power_X4) {
				values ("0.015311,0.017035,0.018989,0.022871,0.030644,0.046170", \
				        "0.015300,0.016990,0.018937,0.022849,0.030616,0.046137", \
				        "0.015326,0.017001,0.018952,0.022849,0.030612,0.046120", \
				        "0.015608,0.017247,0.019170,0.023018,0.030730,0.046202", \
				        "0.016470,0.018103,0.019976,0.023711,0.031300,0.046604", \
				        "0.018715,0.020225,0.022004,0.025611,0.032989,0.047946", \
				        "0.023707,0.025182,0.026823,0.030226,0.037204,0.051632", \
				        "0.034666,0.035913,0.037472,0.040570,0.047021,0.060612");
			}
			fall_power(Power_X4) {
				values ("0.011194,0.009531,0.007601,0.003755,-0.003977,-0.019448", \
				        "0.011196,0.009477,0.007570,0.003717,-0.003980,-0.019443", \
				        "0.011142,0.009488,0.007529,0.003678,-0.004042,-0.019508", \
				        "0.011108,0.009445,0.007527,0.003665,-0.004068,-0.019556", \
				        "0.011244,0.009539,0.007611,0.003770,-0.003956,-0.019441", \
				        "0.011998,0.010214,0.008234,0.004272,-0.003571,-0.019137", \
				        "0.015261,0.013243,0.010983,0.006620,-0.001746,-0.017821", \
				        "0.024362,0.022003,0.019403,0.014375,0.004834,-0.012887");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B1 & B2 & C2 | B1 & C1";

			rise_power(Power_X4) {
				values ("0.014266,0.015951,0.017878,0.021784,0.029548,0.045067", \
				        "0.014190,0.015897,0.017828,0.021736,0.029502,0.045034", \
				        "0.014220,0.015928,0.017856,0.021751,0.029505,0.045012", \
				        "0.014578,0.016213,0.018109,0.021953,0.029659,0.045099", \
				        "0.015524,0.017107,0.018972,0.022701,0.030264,0.045559", \
				        "0.017813,0.019338,0.021122,0.024711,0.032062,0.047003", \
				        "0.023016,0.024462,0.026094,0.029499,0.036470,0.050874", \
				        "0.034286,0.035559,0.037075,0.040179,0.046613,0.060187");
			}
			fall_power(Power_X4) {
				values ("0.008426,0.006737,0.004785,0.000925,-0.006785,-0.022274", \
				        "0.008422,0.006691,0.004758,0.000908,-0.006820,-0.022278", \
				        "0.008335,0.006667,0.004737,0.000894,-0.006855,-0.022341", \
				        "0.008318,0.006655,0.004739,0.000873,-0.006870,-0.022374", \
				        "0.008490,0.006778,0.004843,0.000996,-0.006740,-0.022218", \
				        "0.009584,0.007754,0.005698,0.001646,-0.006247,-0.021883", \
				        "0.013488,0.011360,0.009037,0.004538,-0.004039,-0.020355", \
				        "0.023679,0.021146,0.018442,0.013234,0.003454,-0.014649");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.018912,0.020590,0.022538,0.026430,0.034204,0.049768", \
				        "0.018849,0.020552,0.022508,0.026395,0.034182,0.049737", \
				        "0.018900,0.020576,0.022521,0.026406,0.034173,0.049716", \
				        "0.019126,0.020836,0.022737,0.026591,0.034306,0.049800", \
				        "0.020004,0.021622,0.023470,0.027260,0.034880,0.050218", \
				        "0.022107,0.023675,0.025468,0.029130,0.036525,0.051575", \
				        "0.026966,0.028463,0.030168,0.033654,0.040738,0.055266", \
				        "0.037676,0.038944,0.040617,0.043826,0.050437,0.064236");
			}
			fall_power(Power_X4) {
				values ("0.007907,0.006233,0.004291,0.000435,-0.007311,-0.022801", \
				        "0.007913,0.006210,0.004282,0.000442,-0.007275,-0.022739", \
				        "0.007835,0.006180,0.004235,0.000390,-0.007318,-0.022773", \
				        "0.007789,0.006099,0.004183,0.000336,-0.007384,-0.022838", \
				        "0.007864,0.006163,0.004238,0.000366,-0.007373,-0.022863", \
				        "0.008800,0.006993,0.004975,0.000966,-0.006904,-0.022469", \
				        "0.012386,0.010360,0.008119,0.003735,-0.004732,-0.020967", \
				        "0.021917,0.019655,0.017088,0.012176,0.002744,-0.015017");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.017930,0.019635,0.021579,0.025475,0.033237,0.048796", \
				        "0.017910,0.019607,0.021538,0.025434,0.033209,0.048757", \
				        "0.017932,0.019632,0.021562,0.025443,0.033207,0.048746", \
				        "0.018178,0.019883,0.021776,0.025625,0.033349,0.048843", \
				        "0.019006,0.020676,0.022530,0.026306,0.033897,0.049258", \
				        "0.021129,0.022745,0.024534,0.028162,0.035566,0.050600", \
				        "0.026045,0.027527,0.029225,0.032700,0.039793,0.054299", \
				        "0.036787,0.038047,0.039692,0.042892,0.049490,0.063260");
			}
			fall_power(Power_X4) {
				values ("0.004391,0.002719,0.000759,-0.003118,-0.010860,-0.026364", \
				        "0.004369,0.002675,0.000744,-0.003105,-0.010813,-0.026288", \
				        "0.004266,0.002622,0.000690,-0.003148,-0.010862,-0.026306", \
				        "0.004194,0.002541,0.000577,-0.003219,-0.010929,-0.026397", \
				        "0.004308,0.002620,0.000674,-0.003196,-0.010937,-0.026420", \
				        "0.005468,0.003626,0.001561,-0.002499,-0.010409,-0.026009", \
				        "0.009401,0.007295,0.005002,0.000520,-0.008074,-0.024432", \
				        "0.019435,0.017038,0.014414,0.009323,-0.000276,-0.018287");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A & !B2 & C1 & C2";

			rise_power(Power_X4) {
				values ("0.018488,0.020199,0.022136,0.026030,0.033819,0.049350", \
				        "0.018479,0.020188,0.022105,0.025990,0.033776,0.049321", \
				        "0.018491,0.020207,0.022123,0.026013,0.033782,0.049321", \
				        "0.018799,0.020458,0.022363,0.026208,0.033928,0.049437", \
				        "0.019640,0.021243,0.023136,0.026888,0.034496,0.049869", \
				        "0.021683,0.023344,0.025132,0.028811,0.036227,0.051279", \
				        "0.026638,0.028156,0.029871,0.033370,0.040489,0.055036", \
				        "0.037415,0.038709,0.040347,0.043597,0.050250,0.064061");
			}
			fall_power(Power_X4) {
				values ("0.005098,0.003389,0.001438,-0.002421,-0.010154,-0.025654", \
				        "0.005024,0.003365,0.001433,-0.002401,-0.010108,-0.025579", \
				        "0.004983,0.003305,0.001377,-0.002450,-0.010178,-0.025617", \
				        "0.004878,0.003232,0.001320,-0.002522,-0.010220,-0.025691", \
				        "0.004980,0.003345,0.001387,-0.002473,-0.010213,-0.025703", \
				        "0.006202,0.004377,0.002323,-0.001743,-0.009663,-0.025270", \
				        "0.010140,0.008096,0.005784,0.001344,-0.007237,-0.023630", \
				        "0.020229,0.017950,0.015291,0.010227,0.000639,-0.017342");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.019851,0.021570,0.023518,0.027398,0.035167,0.050709", \
				        "0.019833,0.021533,0.023458,0.027353,0.035115,0.050676", \
				        "0.019765,0.021479,0.023416,0.027321,0.035107,0.050658", \
				        "0.019689,0.021429,0.023387,0.027302,0.035083,0.050633", \
				        "0.019874,0.021564,0.023505,0.027392,0.035153,0.050673", \
				        "0.021051,0.022661,0.024537,0.028298,0.035899,0.051217", \
				        "0.024668,0.026211,0.027960,0.031509,0.038760,0.053580", \
				        "0.033379,0.034750,0.036355,0.039610,0.046332,0.060313");
			}
			fall_power(Power_X4) {
				values ("0.010933,0.009239,0.007300,0.003422,-0.004316,-0.019819", \
				        "0.010853,0.009203,0.007263,0.003403,-0.004321,-0.019775", \
				        "0.010813,0.009202,0.007215,0.003354,-0.004371,-0.019839", \
				        "0.010774,0.009102,0.007192,0.003327,-0.004403,-0.019882", \
				        "0.010827,0.009144,0.007238,0.003378,-0.004386,-0.019896", \
				        "0.011466,0.009721,0.007743,0.003838,-0.003981,-0.019514", \
				        "0.014169,0.012294,0.010203,0.006055,-0.002094,-0.018074", \
				        "0.022110,0.020010,0.017668,0.013133,0.004302,-0.012722");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.018903,0.020631,0.022565,0.026437,0.034212,0.049740", \
				        "0.018885,0.020557,0.022495,0.026387,0.034172,0.049709", \
				        "0.018811,0.020521,0.022466,0.026354,0.034146,0.049682", \
				        "0.018760,0.020488,0.022420,0.026335,0.034125,0.049665", \
				        "0.018916,0.020623,0.022557,0.026437,0.034181,0.049699", \
				        "0.020082,0.021710,0.023575,0.027329,0.034928,0.050275", \
				        "0.023728,0.025290,0.027010,0.030555,0.037807,0.052612", \
				        "0.032442,0.033799,0.035390,0.038670,0.045401,0.059361");
			}
			fall_power(Power_X4) {
				values ("0.007388,0.005738,0.003767,-0.000097,-0.007857,-0.023361", \
				        "0.007327,0.005671,0.003733,-0.000113,-0.007840,-0.023317", \
				        "0.007301,0.005632,0.003692,-0.000159,-0.007898,-0.023374", \
				        "0.007268,0.005584,0.003653,-0.000216,-0.007953,-0.023446", \
				        "0.007306,0.005620,0.003692,-0.000172,-0.007934,-0.023442", \
				        "0.008007,0.006253,0.004274,0.000335,-0.007484,-0.023052", \
				        "0.010926,0.009057,0.006920,0.002723,-0.005499,-0.021555", \
				        "0.019318,0.017212,0.014764,0.010093,0.001118,-0.016043");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A & !B1 & C1 & C2";

			rise_power(Power_X4) {
				values ("0.019471,0.021182,0.023131,0.027010,0.034773,0.050316", \
				        "0.019425,0.021126,0.023057,0.026957,0.034732,0.050283", \
				        "0.019381,0.021085,0.023013,0.026917,0.034706,0.050249", \
				        "0.019319,0.021047,0.022984,0.026905,0.034673,0.050253", \
				        "0.019510,0.021193,0.023150,0.026998,0.034759,0.050285", \
				        "0.020670,0.022292,0.024159,0.027920,0.035524,0.050868", \
				        "0.024273,0.025892,0.027608,0.031199,0.038458,0.053282", \
				        "0.033052,0.034341,0.036029,0.039334,0.046081,0.060108");
			}
			fall_power(Power_X4) {
				values ("0.008117,0.006402,0.004468,0.000584,-0.007157,-0.022671", \
				        "0.008042,0.006374,0.004423,0.000563,-0.007169,-0.022621", \
				        "0.008013,0.006330,0.004377,0.000515,-0.007217,-0.022709", \
				        "0.007934,0.006286,0.004360,0.000487,-0.007256,-0.022737", \
				        "0.008029,0.006314,0.004391,0.000530,-0.007215,-0.022727", \
				        "0.008739,0.006991,0.005014,0.001070,-0.006753,-0.022317", \
				        "0.011767,0.009851,0.007721,0.003520,-0.004716,-0.020779", \
				        "0.020185,0.018112,0.015635,0.010987,0.002009,-0.015184");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & !B1 & B2 & !C2";

			rise_power(Power_X4) {
				values ("0.008359,0.010077,0.012041,0.015948,0.023733,0.039247", \
				        "0.008326,0.010068,0.012030,0.015927,0.023730,0.039238", \
				        "0.008450,0.010136,0.012086,0.015969,0.023734,0.039237", \
				        "0.008806,0.010454,0.012362,0.016163,0.023865,0.039314", \
				        "0.009811,0.011364,0.013204,0.016898,0.024450,0.039726", \
				        "0.012137,0.013592,0.015309,0.018851,0.026134,0.041076", \
				        "0.017427,0.018703,0.020224,0.023440,0.030288,0.044661", \
				        "0.029108,0.030043,0.031236,0.033886,0.039914,0.053273");
			}
			fall_power(Power_X4) {
				values ("0.007542,0.005862,0.003920,0.000083,-0.007625,-0.023049", \
				        "0.007554,0.005904,0.003938,0.000101,-0.007604,-0.023043", \
				        "0.007658,0.005927,0.004010,0.000153,-0.007561,-0.022988", \
				        "0.007839,0.006145,0.004202,0.000307,-0.007446,-0.022925", \
				        "0.008518,0.006759,0.004754,0.000771,-0.007091,-0.022696", \
				        "0.010656,0.008689,0.006485,0.002231,-0.005939,-0.021860", \
				        "0.015997,0.013775,0.011279,0.006544,-0.002398,-0.019206", \
				        "0.027879,0.025386,0.022629,0.017324,0.007237,-0.011357");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & !B2 & !C2";

			rise_power(Power_X4) {
				values ("0.007399,0.009118,0.011075,0.014975,0.022758,0.038263", \
				        "0.007380,0.009099,0.011061,0.014963,0.022747,0.038297", \
				        "0.007500,0.009171,0.011116,0.014984,0.022751,0.038286", \
				        "0.007809,0.009490,0.011393,0.015221,0.022903,0.038343", \
				        "0.008836,0.010403,0.012229,0.015949,0.023477,0.038754", \
				        "0.011226,0.012656,0.014351,0.017895,0.025170,0.040100", \
				        "0.016673,0.017826,0.019325,0.022505,0.029333,0.043694", \
				        "0.028734,0.029523,0.030605,0.033126,0.039022,0.052331");
			}
			fall_power(Power_X4) {
				values ("0.004341,0.002670,0.000767,-0.003073,-0.010796,-0.026226", \
				        "0.004413,0.002720,0.000794,-0.003055,-0.010777,-0.026230", \
				        "0.004494,0.002786,0.000856,-0.002996,-0.010726,-0.026187", \
				        "0.004759,0.003032,0.001069,-0.002830,-0.010602,-0.026099", \
				        "0.005639,0.003780,0.001725,-0.002318,-0.010227,-0.025871", \
				        "0.008053,0.005963,0.003680,-0.000679,-0.008989,-0.025015", \
				        "0.013701,0.011388,0.008813,0.003934,-0.005230,-0.022222", \
				        "0.026001,0.023391,0.020531,0.015051,0.004748,-0.014116");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A & B1 & B2 & !C2";

			rise_power(Power_X4) {
				values ("0.007275,0.009006,0.010974,0.014871,0.022647,0.038185", \
				        "0.007245,0.009000,0.010946,0.014851,0.022645,0.038176", \
				        "0.007364,0.009058,0.011011,0.014884,0.022647,0.038163", \
				        "0.007779,0.009394,0.011305,0.015110,0.022798,0.038236", \
				        "0.008782,0.010381,0.012189,0.015890,0.023419,0.038682", \
				        "0.011245,0.012658,0.014388,0.017923,0.025198,0.040101", \
				        "0.016787,0.017982,0.019444,0.022646,0.029490,0.043880", \
				        "0.029117,0.029919,0.031001,0.033499,0.039414,0.052748");
			}
			fall_power(Power_X4) {
				values ("0.004720,0.003052,0.001134,-0.002712,-0.010428,-0.025875", \
				        "0.004802,0.003078,0.001160,-0.002684,-0.010403,-0.025856", \
				        "0.004860,0.003149,0.001222,-0.002631,-0.010364,-0.025810", \
				        "0.005154,0.003415,0.001466,-0.002437,-0.010223,-0.025710", \
				        "0.006107,0.004236,0.002153,-0.001894,-0.009829,-0.025465", \
				        "0.008630,0.006559,0.004251,-0.000147,-0.008487,-0.024539", \
				        "0.014525,0.012199,0.009636,0.004734,-0.004461,-0.021552", \
				        "0.027145,0.024582,0.021744,0.016303,0.006028,-0.012918");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & !B1 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.009335,0.011070,0.013035,0.016945,0.024721,0.040238", \
				        "0.009256,0.010971,0.012952,0.016896,0.024684,0.040202", \
				        "0.009124,0.010876,0.012849,0.016789,0.024608,0.040153", \
				        "0.009091,0.010811,0.012791,0.016709,0.024514,0.040083", \
				        "0.009419,0.011089,0.013017,0.016863,0.024599,0.040117", \
				        "0.010945,0.012484,0.014268,0.017928,0.025442,0.040671", \
				        "0.015203,0.016510,0.018063,0.021368,0.028352,0.043022", \
				        "0.025173,0.026148,0.027338,0.030014,0.036061,0.049610");
			}
			fall_power(Power_X4) {
				values ("0.010875,0.009220,0.007271,0.003431,-0.004266,-0.019687", \
				        "0.010899,0.009207,0.007262,0.003421,-0.004270,-0.019704", \
				        "0.010925,0.009190,0.007281,0.003440,-0.004270,-0.019707", \
				        "0.011037,0.009354,0.007433,0.003552,-0.004180,-0.019659", \
				        "0.011657,0.009885,0.007918,0.003972,-0.003852,-0.019431", \
				        "0.013408,0.011568,0.009474,0.005348,-0.002735,-0.018590", \
				        "0.018028,0.016002,0.013751,0.009331,0.000713,-0.015836", \
				        "0.028544,0.026343,0.023886,0.019043,0.009698,-0.008121");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & !B2 & !C1";

			rise_power(Power_X4) {
				values ("0.008361,0.010105,0.012065,0.015962,0.023750,0.039271", \
				        "0.008277,0.010000,0.011987,0.015903,0.023710,0.039237", \
				        "0.008172,0.009907,0.011881,0.015818,0.023627,0.039191", \
				        "0.008110,0.009852,0.011825,0.015729,0.023557,0.039121", \
				        "0.008484,0.010123,0.012045,0.015886,0.023624,0.039136", \
				        "0.010005,0.011514,0.013319,0.016965,0.024471,0.039733", \
				        "0.014404,0.015656,0.017162,0.020418,0.027402,0.042066", \
				        "0.024698,0.025546,0.026671,0.029228,0.035163,0.048629");
			}
			fall_power(Power_X4) {
				values ("0.007762,0.006069,0.004120,0.000267,-0.007445,-0.022901", \
				        "0.007738,0.006041,0.004100,0.000244,-0.007464,-0.022897", \
				        "0.007775,0.006057,0.004131,0.000277,-0.007448,-0.022892", \
				        "0.007942,0.006255,0.004298,0.000408,-0.007340,-0.022820", \
				        "0.008626,0.006841,0.004851,0.000874,-0.007004,-0.022630", \
				        "0.010644,0.008715,0.006568,0.002379,-0.005789,-0.021735", \
				        "0.015530,0.013448,0.011098,0.006578,-0.002171,-0.018880", \
				        "0.026405,0.024042,0.021534,0.016569,0.007067,-0.010930");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A & B1 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.008262,0.010012,0.011953,0.015862,0.023658,0.039159", \
				        "0.008191,0.009911,0.011865,0.015790,0.023596,0.039131", \
				        "0.008089,0.009796,0.011764,0.015699,0.023517,0.039071", \
				        "0.008005,0.009744,0.011706,0.015619,0.023425,0.039007", \
				        "0.008345,0.010038,0.011948,0.015788,0.023509,0.039039", \
				        "0.009999,0.011479,0.013267,0.016931,0.024405,0.039626", \
				        "0.014511,0.015724,0.017239,0.020489,0.027480,0.042096", \
				        "0.025062,0.025906,0.026972,0.029512,0.035443,0.048907");
			}
			fall_power(Power_X4) {
				values ("0.008117,0.006423,0.004480,0.000631,-0.007083,-0.022515", \
				        "0.008091,0.006381,0.004463,0.000615,-0.007086,-0.022538", \
				        "0.008137,0.006418,0.004495,0.000647,-0.007075,-0.022495", \
				        "0.008325,0.006597,0.004679,0.000790,-0.006950,-0.022456", \
				        "0.009036,0.007256,0.005255,0.001276,-0.006589,-0.022206", \
				        "0.011171,0.009218,0.007068,0.002870,-0.005311,-0.021277", \
				        "0.016252,0.014129,0.011802,0.007301,-0.001497,-0.018258", \
				        "0.027411,0.025155,0.022598,0.017650,0.008122,-0.009922");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI222_X1
 Cell Description	: Combinational cell (OAI222_X1) with drive strength X1
*******************************************************************************************/

cell (OAI222_X1) {

	area               	: 2.128000;

	cell_leakage_power 	: 16818.540947;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 2580.073000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 3160.512000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 2282.162000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 4470.301000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 3160.497000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 3299.079000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 4470.291000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 4213.025000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 2282.166000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 4470.304000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 990.886600;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 3223.681000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 4470.289000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 4213.021000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 3223.669000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 2961.490000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 8554.747000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 19621.200000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 10191.940000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 20324.680000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 19621.180000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 25402.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 19615.390000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 24982.490000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 10191.920000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 19615.390000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 9046.159000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 24981.310000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 18906.090000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 24273.200000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 24272.100000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 29639.150000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 8554.750000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 19621.220000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 10191.940000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 21033.950000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 19621.180000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 25402.570000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 20324.680000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 25691.640000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 10191.940000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 20324.690000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 9046.168000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 25690.390000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 19615.400000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 24982.500000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 24981.290000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 30348.120000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 14338.030000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 25406.210000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 15975.290000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 25693.640000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 25406.180000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 31188.800000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 24984.410000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 30351.900000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 15975.290000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 24984.420000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 14829.600000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 30350.750000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 24275.030000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 29642.770000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 29641.690000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 35009.230000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000659;
		fall_capacitance	: 0.000637;
		rise_capacitance	: 0.000681;
		fall_capacitance_range		(0.000542, 0.000739);
		rise_capacitance_range		(0.000570, 0.000863);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000001,0.000000,-0.000001,-0.000003,-0.000006");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000613;
		fall_capacitance	: 0.000620;
		rise_capacitance	: 0.000607;
		fall_capacitance_range		(0.000523, 0.000707);
		rise_capacitance_range		(0.000525, 0.000752);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000023,0.000016,0.000010,0.000006,0.000003,0.000001,-0.000002,-0.000005");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000639;
		fall_capacitance	: 0.000611;
		rise_capacitance	: 0.000666;
		fall_capacitance_range		(0.000534, 0.000674);
		rise_capacitance_range		(0.000578, 0.000823);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000005,0.000003,0.000002,0.000000,-0.000002,-0.000005");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000621;
		fall_capacitance	: 0.000620;
		rise_capacitance	: 0.000622;
		fall_capacitance_range		(0.000522, 0.000685);
		rise_capacitance_range		(0.000546, 0.000738);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000007,0.000004,0.000003,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.000641;
		fall_capacitance	: 0.000605;
		rise_capacitance	: 0.000677;
		fall_capacitance_range		(0.000537, 0.000649);
		rise_capacitance_range		(0.000561, 0.000824);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000002,-0.000005");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.000650;
		fall_capacitance	: 0.000642;
		rise_capacitance	: 0.000658;
		fall_capacitance_range		(0.000539, 0.000694);
		rise_capacitance_range		(0.000555, 0.000763);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) & (B1 | B2)) & (C1 | C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039490,0.042627,0.049010,0.061381,0.085588,0.133147", \
				        "0.042502,0.045540,0.051885,0.064293,0.088498,0.136052", \
				        "0.048411,0.051478,0.057579,0.070030,0.094307,0.141769", \
				        "0.061930,0.064922,0.070624,0.082074,0.105937,0.153314", \
				        "0.078295,0.082376,0.090120,0.104905,0.130757,0.177077", \
				        "0.091876,0.097366,0.107897,0.127577,0.162600,0.221807", \
				        "0.093758,0.101203,0.115414,0.141779,0.188761,0.268308", \
				        "0.063929,0.074133,0.093139,0.128740,0.191749,0.298570");
			}
			cell_rise(Timing_X1) {
				values ("0.059955,0.066854,0.080699,0.107359,0.161013,0.267900", \
				        "0.063158,0.069991,0.083734,0.110412,0.164043,0.271006", \
				        "0.069994,0.076809,0.090279,0.116984,0.170345,0.277174", \
				        "0.084696,0.091383,0.104813,0.130937,0.183926,0.290220", \
				        "0.113342,0.120865,0.135071,0.160862,0.212773,0.317889", \
				        "0.155640,0.164992,0.183086,0.215988,0.273791,0.376861", \
				        "0.221952,0.234001,0.256195,0.297304,0.370624,0.495797", \
				        "0.335287,0.349770,0.377387,0.427856,0.518326,0.675487");
			}
			fall_transition(Timing_X1) {
				values ("0.035080,0.037907,0.043353,0.053096,0.073256,0.113564", \
				        "0.034868,0.037634,0.043171,0.053303,0.073337,0.113565", \
				        "0.033123,0.036206,0.042125,0.052968,0.073303,0.113585", \
				        "0.035425,0.037664,0.042581,0.052063,0.072523,0.113617", \
				        "0.048334,0.050688,0.055216,0.063109,0.078379,0.113694", \
				        "0.070813,0.073663,0.079103,0.088877,0.106272,0.136667", \
				        "0.109442,0.113082,0.120127,0.132727,0.154816,0.192243", \
				        "0.176674,0.181920,0.191611,0.208634,0.237778,0.285739");
			}
			rise_transition(Timing_X1) {
				values ("0.100772,0.107211,0.119781,0.144997,0.194642,0.292226", \
				        "0.100775,0.107223,0.119762,0.145012,0.194648,0.292222", \
				        "0.100715,0.107190,0.119719,0.145002,0.194641,0.292217", \
				        "0.101283,0.107273,0.119616,0.145018,0.194611,0.292201", \
				        "0.112510,0.117160,0.126867,0.147950,0.194503,0.292235", \
				        "0.144277,0.148434,0.156448,0.172489,0.208999,0.293700", \
				        "0.198082,0.202039,0.210795,0.228744,0.264403,0.332543", \
				        "0.236202,0.241016,0.251652,0.273746,0.319193,0.405499");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2 & C1 & !C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.030753,0.033789,0.040107,0.052336,0.076337,0.123545", \
				        "0.033827,0.036760,0.043008,0.055313,0.079300,0.126521", \
				        "0.040423,0.043227,0.048997,0.061065,0.085085,0.132232", \
				        "0.052866,0.056087,0.062189,0.073812,0.096739,0.143766", \
				        "0.065320,0.069841,0.078218,0.093870,0.121070,0.167664", \
				        "0.073861,0.079825,0.091228,0.112239,0.149108,0.210459", \
				        "0.068939,0.077069,0.092403,0.120766,0.170253,0.252699", \
				        "0.030047,0.041189,0.061882,0.099951,0.166423,0.277364");
			}
			cell_rise(Timing_X1) {
				values ("0.058983,0.065812,0.079418,0.106158,0.159495,0.265971", \
				        "0.062177,0.068930,0.082534,0.109118,0.162565,0.269111", \
				        "0.069022,0.075755,0.089097,0.115714,0.168846,0.275305", \
				        "0.083764,0.090360,0.103588,0.129646,0.182414,0.288349", \
				        "0.112110,0.119594,0.133848,0.159643,0.211318,0.315976", \
				        "0.153854,0.163111,0.181208,0.214223,0.272182,0.374952", \
				        "0.218984,0.231126,0.253298,0.294549,0.368039,0.493385", \
				        "0.328258,0.343102,0.371063,0.422075,0.513099,0.670852");
			}
			fall_transition(Timing_X1) {
				values ("0.028785,0.031698,0.037416,0.047450,0.067471,0.107760", \
				        "0.028049,0.031011,0.036896,0.047457,0.067582,0.107732", \
				        "0.026915,0.029782,0.035492,0.046483,0.067517,0.107768", \
				        "0.032176,0.034420,0.038493,0.047143,0.066467,0.107750", \
				        "0.045337,0.047691,0.052335,0.060206,0.074919,0.108566", \
				        "0.067661,0.070525,0.076074,0.085892,0.103395,0.133889", \
				        "0.106055,0.109817,0.116983,0.129753,0.151856,0.189419", \
				        "0.173066,0.178324,0.188207,0.205480,0.234869,0.282850");
			}
			rise_transition(Timing_X1) {
				values ("0.071280,0.077974,0.091004,0.116952,0.167202,0.265202", \
				        "0.071301,0.077967,0.090964,0.116937,0.167206,0.265176", \
				        "0.071217,0.077931,0.090969,0.116970,0.167198,0.265178", \
				        "0.071892,0.078068,0.090773,0.116930,0.167206,0.265190", \
				        "0.083361,0.088171,0.098226,0.119961,0.167086,0.265204", \
				        "0.112283,0.117224,0.126714,0.144958,0.181699,0.266738", \
				        "0.157919,0.163000,0.173517,0.194524,0.234378,0.305658", \
				        "0.234919,0.239733,0.250567,0.272958,0.318486,0.404698");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & !B2 & !C1 & C2 | !A2 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039490,0.042627,0.049010,0.061381,0.085588,0.133147", \
				        "0.042502,0.045540,0.051885,0.064293,0.088498,0.136052", \
				        "0.048411,0.051478,0.057579,0.070030,0.094307,0.141769", \
				        "0.061930,0.064922,0.070624,0.082074,0.105937,0.153314", \
				        "0.078295,0.082376,0.090120,0.104905,0.130757,0.177077", \
				        "0.091876,0.097366,0.107897,0.127577,0.162600,0.221807", \
				        "0.093758,0.101203,0.115414,0.141779,0.188761,0.268308", \
				        "0.063929,0.074133,0.093139,0.128740,0.191749,0.298570");
			}
			cell_rise(Timing_X1) {
				values ("0.059955,0.066854,0.080699,0.107359,0.161013,0.267900", \
				        "0.063158,0.069991,0.083734,0.110412,0.164043,0.271006", \
				        "0.069994,0.076809,0.090279,0.116984,0.170345,0.277174", \
				        "0.084696,0.091383,0.104813,0.130937,0.183926,0.290220", \
				        "0.113342,0.120865,0.135071,0.160862,0.212773,0.317889", \
				        "0.155640,0.164992,0.183086,0.215988,0.273791,0.376861", \
				        "0.221952,0.234001,0.256195,0.297304,0.370624,0.495797", \
				        "0.333747,0.348417,0.376031,0.426641,0.517373,0.674870");
			}
			fall_transition(Timing_X1) {
				values ("0.035080,0.037907,0.043353,0.053096,0.073256,0.113564", \
				        "0.034868,0.037634,0.043171,0.053303,0.073337,0.113565", \
				        "0.033123,0.036206,0.042125,0.052968,0.073303,0.113585", \
				        "0.035425,0.037664,0.042581,0.052063,0.072523,0.113617", \
				        "0.048334,0.050688,0.055216,0.063109,0.078379,0.113694", \
				        "0.070813,0.073663,0.079103,0.088877,0.106272,0.136667", \
				        "0.109442,0.113082,0.120127,0.132727,0.154816,0.192243", \
				        "0.176674,0.181920,0.191611,0.208634,0.237778,0.285739");
			}
			rise_transition(Timing_X1) {
				values ("0.100772,0.107211,0.119781,0.144997,0.194642,0.292226", \
				        "0.100775,0.107223,0.119762,0.145012,0.194648,0.292222", \
				        "0.100715,0.107190,0.119719,0.145002,0.194641,0.292217", \
				        "0.101283,0.107273,0.119616,0.145018,0.194611,0.292201", \
				        "0.112510,0.117160,0.126867,0.147950,0.194503,0.292235", \
				        "0.144277,0.148434,0.156448,0.172489,0.208999,0.293700", \
				        "0.198082,0.202039,0.210795,0.228744,0.264403,0.332543", \
				        "0.286753,0.290187,0.298621,0.317005,0.357273,0.437380");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026713,0.029222,0.034500,0.044805,0.064926,0.104592", \
				        "0.029945,0.032413,0.037534,0.047828,0.067983,0.107631", \
				        "0.037132,0.039348,0.043982,0.053936,0.074064,0.113656", \
				        "0.048257,0.051220,0.056819,0.067308,0.086423,0.125738", \
				        "0.058847,0.062940,0.070614,0.085048,0.109846,0.151050", \
				        "0.064446,0.070042,0.080556,0.100011,0.133987,0.190112", \
				        "0.054688,0.062283,0.076729,0.103202,0.149261,0.225541", \
				        "0.007337,0.017758,0.037250,0.073194,0.135776,0.239572");
			}
			cell_rise(Timing_X1) {
				values ("0.058952,0.065780,0.079343,0.106146,0.159513,0.266047", \
				        "0.062114,0.068874,0.082482,0.109121,0.162497,0.269131", \
				        "0.068970,0.075656,0.089065,0.115686,0.168821,0.275337", \
				        "0.083843,0.090438,0.103673,0.129706,0.182467,0.288414", \
				        "0.112543,0.119954,0.134206,0.159969,0.211606,0.316221", \
				        "0.154931,0.164274,0.182289,0.215210,0.273006,0.375711", \
				        "0.221830,0.233817,0.255920,0.296972,0.370229,0.495274", \
				        "0.335287,0.349770,0.377387,0.427856,0.518326,0.675487");
			}
			fall_transition(Timing_X1) {
				values ("0.024002,0.026491,0.031442,0.039950,0.056863,0.090779", \
				        "0.023218,0.025856,0.030935,0.039888,0.056971,0.090763", \
				        "0.023105,0.025404,0.030029,0.038816,0.056695,0.090784", \
				        "0.029724,0.031581,0.035034,0.041230,0.056524,0.090626", \
				        "0.042778,0.044816,0.048812,0.055682,0.068155,0.093961", \
				        "0.064692,0.067293,0.072246,0.080925,0.096463,0.122796", \
				        "0.102695,0.105982,0.112509,0.124007,0.143849,0.177180", \
				        "0.168899,0.173866,0.182828,0.198592,0.225199,0.268525");
			}
			rise_transition(Timing_X1) {
				values ("0.071734,0.078600,0.092080,0.118570,0.169433,0.267647", \
				        "0.071707,0.078603,0.092062,0.118560,0.169462,0.267645", \
				        "0.071636,0.078554,0.092058,0.118591,0.169451,0.267618", \
				        "0.072295,0.078710,0.091849,0.118552,0.169414,0.267644", \
				        "0.083621,0.088720,0.099226,0.121566,0.169312,0.267639", \
				        "0.113385,0.118410,0.127937,0.146357,0.183685,0.269100", \
				        "0.159691,0.164659,0.175108,0.196228,0.236065,0.307394", \
				        "0.236202,0.241016,0.251652,0.273746,0.319193,0.405499");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B2 & C1 & C2 | !A2 & B1 & C1";
			sdf_cond	   : "(A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.028168,0.030751,0.036074,0.046439,0.066678,0.106546", \
				        "0.031273,0.033772,0.039010,0.049407,0.069683,0.109527", \
				        "0.038005,0.040345,0.045154,0.055366,0.075657,0.115445", \
				        "0.049052,0.052027,0.057664,0.068321,0.087826,0.127416", \
				        "0.059416,0.063646,0.071360,0.085876,0.110896,0.152446", \
				        "0.064923,0.070497,0.081134,0.100690,0.134878,0.191272", \
				        "0.054878,0.062743,0.077174,0.103827,0.150047,0.226524", \
				        "0.007630,0.018176,0.037795,0.073844,0.136500,0.240410");
			}
			cell_rise(Timing_X1) {
				values ("0.058978,0.065798,0.079397,0.106135,0.159480,0.265955", \
				        "0.062111,0.068862,0.082464,0.109099,0.162464,0.268976", \
				        "0.068914,0.075600,0.088990,0.115608,0.168721,0.275189", \
				        "0.083760,0.090346,0.103556,0.129581,0.182321,0.288231", \
				        "0.112449,0.119855,0.134094,0.159846,0.211454,0.316013", \
				        "0.154845,0.164143,0.182148,0.215065,0.272855,0.375499", \
				        "0.221635,0.233660,0.255693,0.296775,0.370027,0.495033", \
				        "0.334862,0.349338,0.376996,0.427534,0.517977,0.675095");
			}
			fall_transition(Timing_X1) {
				values ("0.024039,0.026467,0.030942,0.039442,0.056417,0.090459", \
				        "0.023464,0.026036,0.030868,0.039472,0.056505,0.090420", \
				        "0.023230,0.025470,0.030092,0.038757,0.056342,0.090447", \
				        "0.029525,0.031446,0.034910,0.041234,0.056399,0.090413", \
				        "0.042356,0.044404,0.048420,0.055443,0.068001,0.093946", \
				        "0.064011,0.066619,0.071683,0.080517,0.096189,0.122743", \
				        "0.101441,0.105021,0.111671,0.123311,0.143410,0.177026", \
				        "0.167545,0.172413,0.181631,0.197657,0.224658,0.268317");
			}
			rise_transition(Timing_X1) {
				values ("0.071267,0.077949,0.090982,0.116945,0.167200,0.265198", \
				        "0.071275,0.077955,0.090952,0.116927,0.167197,0.265195", \
				        "0.071204,0.077923,0.090944,0.116959,0.167197,0.265175", \
				        "0.071880,0.078065,0.090762,0.116918,0.167205,0.265185", \
				        "0.083186,0.088081,0.098116,0.119904,0.167082,0.265197", \
				        "0.111653,0.116629,0.126214,0.144512,0.181437,0.266676", \
				        "0.156164,0.161302,0.172007,0.193242,0.233358,0.304962", \
				        "0.231341,0.236185,0.247088,0.269706,0.315687,0.402517");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.047985,0.051178,0.057487,0.069997,0.094476,0.142330", \
				        "0.050879,0.053956,0.060248,0.072851,0.097293,0.145160", \
				        "0.056618,0.059717,0.065886,0.078489,0.102941,0.150743", \
				        "0.069629,0.072477,0.078120,0.090224,0.114549,0.162231", \
				        "0.089407,0.093247,0.100459,0.114520,0.139368,0.185945", \
				        "0.107860,0.113043,0.122870,0.141483,0.174984,0.232260", \
				        "0.117965,0.124720,0.137851,0.162542,0.207123,0.283713", \
				        "0.104513,0.113841,0.130936,0.163611,0.222096,0.323308");
			}
			cell_rise(Timing_X1) {
				values ("0.080240,0.087177,0.100912,0.127748,0.181245,0.288212", \
				        "0.083799,0.090504,0.104421,0.131178,0.184825,0.291885", \
				        "0.089866,0.096769,0.110409,0.137504,0.191291,0.298505", \
				        "0.101042,0.108041,0.121770,0.148878,0.202843,0.310169", \
				        "0.122458,0.130021,0.144566,0.171777,0.225447,0.332770", \
				        "0.157170,0.165961,0.183144,0.214872,0.273222,0.380479", \
				        "0.216842,0.227441,0.247907,0.285564,0.353870,0.475776", \
				        "0.319511,0.333318,0.358696,0.405071,0.487395,0.631212");
			}
			fall_transition(Timing_X1) {
				values ("0.039983,0.042787,0.048089,0.058347,0.078527,0.118986", \
				        "0.040017,0.042766,0.048126,0.058375,0.078552,0.118938", \
				        "0.039068,0.042175,0.047997,0.058268,0.078533,0.118977", \
				        "0.039126,0.041791,0.046958,0.057110,0.078151,0.119018", \
				        "0.051084,0.053406,0.057995,0.065942,0.081939,0.118717", \
				        "0.073655,0.076454,0.081872,0.091665,0.108919,0.139365", \
				        "0.110910,0.114673,0.121757,0.134560,0.156913,0.194637", \
				        "0.174416,0.179710,0.189459,0.206685,0.236340,0.285579");
			}
			rise_transition(Timing_X1) {
				values ("0.100772,0.107166,0.119763,0.145002,0.194650,0.292221", \
				        "0.100793,0.107196,0.119833,0.145005,0.194647,0.292216", \
				        "0.100763,0.107210,0.119714,0.144998,0.194622,0.292229", \
				        "0.100990,0.107255,0.119744,0.144991,0.194638,0.292207", \
				        "0.108061,0.113334,0.124143,0.146832,0.194639,0.292223", \
				        "0.131346,0.135794,0.144923,0.163443,0.204090,0.293583", \
				        "0.171091,0.175445,0.184194,0.202688,0.241333,0.319131", \
				        "0.198254,0.202515,0.212078,0.231993,0.273813,0.358825");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & !B2 & !C1 & C2 | !A1 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.047985,0.051178,0.057487,0.069997,0.094476,0.142330", \
				        "0.050879,0.053956,0.060248,0.072851,0.097293,0.145160", \
				        "0.056618,0.059717,0.065886,0.078489,0.102941,0.150743", \
				        "0.069629,0.072477,0.078120,0.090224,0.114549,0.162231", \
				        "0.089407,0.093247,0.100459,0.114520,0.139368,0.185945", \
				        "0.107860,0.113043,0.122870,0.141483,0.174984,0.232260", \
				        "0.117965,0.124720,0.137851,0.162542,0.207123,0.283713", \
				        "0.104513,0.113841,0.130936,0.163611,0.222096,0.323308");
			}
			cell_rise(Timing_X1) {
				values ("0.080240,0.087177,0.100912,0.127748,0.181245,0.288212", \
				        "0.083799,0.090504,0.104421,0.131178,0.184825,0.291885", \
				        "0.089866,0.096769,0.110409,0.137504,0.191291,0.298505", \
				        "0.101042,0.108041,0.121770,0.148878,0.202843,0.310169", \
				        "0.122458,0.130021,0.144566,0.171777,0.225447,0.332770", \
				        "0.157170,0.165961,0.183144,0.214872,0.273222,0.380479", \
				        "0.216842,0.227441,0.247907,0.285564,0.353870,0.475776", \
				        "0.317571,0.331553,0.357058,0.403761,0.486477,0.630946");
			}
			fall_transition(Timing_X1) {
				values ("0.039983,0.042787,0.048089,0.058347,0.078527,0.118986", \
				        "0.040017,0.042766,0.048126,0.058375,0.078552,0.118938", \
				        "0.039068,0.042175,0.047997,0.058268,0.078533,0.118977", \
				        "0.039126,0.041791,0.046958,0.057110,0.078151,0.119018", \
				        "0.051084,0.053406,0.057995,0.065942,0.081939,0.118717", \
				        "0.073655,0.076454,0.081872,0.091665,0.108919,0.139365", \
				        "0.110910,0.114673,0.121757,0.134560,0.156913,0.194637", \
				        "0.174416,0.179710,0.189459,0.206685,0.236340,0.285579");
			}
			rise_transition(Timing_X1) {
				values ("0.100772,0.107166,0.119763,0.145002,0.194650,0.292221", \
				        "0.100793,0.107196,0.119833,0.145005,0.194647,0.292216", \
				        "0.100763,0.107210,0.119714,0.144998,0.194622,0.292229", \
				        "0.100990,0.107255,0.119744,0.144991,0.194638,0.292207", \
				        "0.108061,0.113334,0.124143,0.146832,0.194639,0.292223", \
				        "0.131346,0.135794,0.144923,0.163443,0.204090,0.293583", \
				        "0.171091,0.175445,0.184194,0.202688,0.241333,0.319131", \
				        "0.240037,0.243335,0.251261,0.268560,0.306805,0.387910");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & !B2 & C1 & !C2 | !A1 & !B1 & B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.038860,0.042032,0.048383,0.060800,0.085054,0.132654", \
				        "0.041734,0.044772,0.051159,0.063590,0.087846,0.135438", \
				        "0.047557,0.050641,0.056763,0.069266,0.093570,0.141111", \
				        "0.061064,0.064105,0.069818,0.081291,0.105168,0.152588", \
				        "0.077325,0.081453,0.089210,0.104036,0.129991,0.176394", \
				        "0.091187,0.096746,0.107309,0.126998,0.161998,0.221233", \
				        "0.095443,0.102729,0.116767,0.142930,0.189538,0.268608", \
				        "0.074680,0.084686,0.102926,0.137485,0.198592,0.303095");
			}
			cell_rise(Timing_X1) {
				values ("0.079264,0.086079,0.099763,0.126414,0.179813,0.286333", \
				        "0.082802,0.089499,0.103121,0.129841,0.183383,0.290019", \
				        "0.088890,0.095718,0.109205,0.136204,0.189771,0.296585", \
				        "0.100076,0.106962,0.120670,0.147637,0.201324,0.308306", \
				        "0.121311,0.128811,0.143360,0.170528,0.223995,0.330876", \
				        "0.155664,0.164378,0.181537,0.213344,0.271629,0.378569", \
				        "0.214669,0.225155,0.245567,0.283437,0.351771,0.473542", \
				        "0.313705,0.327866,0.353382,0.400440,0.483339,0.627797");
			}
			fall_transition(Timing_X1) {
				values ("0.034500,0.037357,0.042649,0.052726,0.072860,0.113127", \
				        "0.034200,0.037135,0.042700,0.052753,0.072848,0.113121", \
				        "0.032495,0.035601,0.041643,0.052361,0.072893,0.113201", \
				        "0.035097,0.037417,0.042027,0.051724,0.072093,0.113229", \
				        "0.048136,0.050423,0.055065,0.062923,0.078104,0.113395", \
				        "0.070352,0.073225,0.078773,0.088563,0.106071,0.136528", \
				        "0.107089,0.110898,0.118202,0.131132,0.153733,0.191701", \
				        "0.169772,0.175176,0.185163,0.202716,0.232803,0.282225");
			}
			rise_transition(Timing_X1) {
				values ("0.071286,0.077961,0.090977,0.116925,0.167201,0.265178", \
				        "0.071282,0.077930,0.090935,0.116925,0.167202,0.265177", \
				        "0.071292,0.077943,0.090967,0.116954,0.167201,0.265202", \
				        "0.071522,0.078024,0.090963,0.116941,0.167204,0.265191", \
				        "0.078954,0.084332,0.095389,0.118800,0.167216,0.265176", \
				        "0.100558,0.105546,0.115577,0.135864,0.176755,0.266551", \
				        "0.135716,0.140587,0.150436,0.170850,0.212058,0.292261", \
				        "0.196169,0.200614,0.210301,0.230448,0.272357,0.357201");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033189,0.035816,0.041192,0.051669,0.072129,0.112140", \
				        "0.036205,0.038745,0.044093,0.054638,0.075084,0.115095", \
				        "0.042569,0.045050,0.050061,0.060522,0.081027,0.120979", \
				        "0.055648,0.058393,0.063618,0.073580,0.093198,0.133014", \
				        "0.069694,0.073467,0.080591,0.094198,0.117888,0.158080", \
				        "0.080375,0.085532,0.095321,0.113515,0.145735,0.199865", \
				        "0.079436,0.086262,0.099372,0.123816,0.167094,0.240139", \
				        "0.049554,0.058817,0.076135,0.108626,0.166143,0.263765");
			}
			cell_rise(Timing_X1) {
				values ("0.079245,0.086067,0.099626,0.126398,0.179841,0.286412", \
				        "0.082762,0.089472,0.103118,0.129801,0.183380,0.290064", \
				        "0.088818,0.095713,0.109232,0.136143,0.189729,0.296613", \
				        "0.100013,0.106900,0.120616,0.147564,0.201265,0.308285", \
				        "0.121279,0.128746,0.143324,0.170471,0.223936,0.330845", \
				        "0.156064,0.164793,0.181871,0.213603,0.271818,0.378701", \
				        "0.216536,0.227111,0.247399,0.284945,0.353044,0.474543", \
				        "0.319511,0.333318,0.358696,0.405071,0.487395,0.631212");
			}
			fall_transition(Timing_X1) {
				values ("0.028968,0.031437,0.035959,0.044406,0.061445,0.095303", \
				        "0.028528,0.031029,0.035818,0.044447,0.061412,0.095278", \
				        "0.027260,0.029720,0.034409,0.043876,0.061385,0.095351", \
				        "0.031997,0.033870,0.037303,0.044771,0.060662,0.095291", \
				        "0.045165,0.047213,0.051210,0.057988,0.070347,0.097521", \
				        "0.066926,0.069497,0.074471,0.083186,0.098642,0.124933", \
				        "0.103217,0.106703,0.113284,0.124952,0.145105,0.178975", \
				        "0.165663,0.170662,0.179787,0.195755,0.222980,0.267442");
			}
			rise_transition(Timing_X1) {
				values ("0.071716,0.078565,0.092078,0.118540,0.169468,0.267641", \
				        "0.071731,0.078571,0.092059,0.118544,0.169470,0.267628", \
				        "0.071722,0.078579,0.092053,0.118606,0.169436,0.267635", \
				        "0.071953,0.078672,0.092070,0.118544,0.169445,0.267638", \
				        "0.079487,0.085038,0.096513,0.120475,0.169461,0.267635", \
				        "0.101937,0.107054,0.117176,0.137647,0.178988,0.268972", \
				        "0.137514,0.142501,0.152266,0.172880,0.214279,0.294490", \
				        "0.198254,0.202515,0.212078,0.231993,0.273813,0.358825");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2 & C1 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034757,0.037423,0.042840,0.053320,0.073873,0.114107", \
				        "0.037713,0.040280,0.045578,0.056248,0.076801,0.117026", \
				        "0.043772,0.046358,0.051442,0.062034,0.082652,0.122807", \
				        "0.056543,0.059326,0.064636,0.074759,0.094712,0.134729", \
				        "0.070410,0.074255,0.081419,0.095167,0.118988,0.159594", \
				        "0.080944,0.086122,0.095978,0.114283,0.146642,0.201071", \
				        "0.079831,0.086763,0.099880,0.124474,0.167914,0.241170", \
				        "0.049977,0.059378,0.076706,0.109335,0.166888,0.264652");
			}
			cell_rise(Timing_X1) {
				values ("0.079268,0.086072,0.099627,0.126401,0.179794,0.286315", \
				        "0.082756,0.089460,0.103101,0.129774,0.183317,0.289955", \
				        "0.088787,0.095657,0.109179,0.136086,0.189646,0.296472", \
				        "0.099961,0.106841,0.120548,0.147493,0.201150,0.308133", \
				        "0.121175,0.128668,0.143226,0.170378,0.223818,0.330675", \
				        "0.155920,0.164608,0.181716,0.213451,0.271651,0.378499", \
				        "0.216397,0.226924,0.247219,0.284774,0.352843,0.474296", \
				        "0.319197,0.333074,0.358355,0.404813,0.487128,0.630894");
			}
			fall_transition(Timing_X1) {
				values ("0.028610,0.030986,0.035372,0.043951,0.060974,0.094996", \
				        "0.028428,0.030820,0.035562,0.044015,0.060981,0.094950", \
				        "0.027339,0.029807,0.034686,0.043662,0.060954,0.095050", \
				        "0.031868,0.033708,0.037147,0.044607,0.060509,0.095063", \
				        "0.044773,0.046851,0.050854,0.057741,0.070248,0.097519", \
				        "0.066267,0.068903,0.073941,0.082798,0.098392,0.124906", \
				        "0.102292,0.105767,0.112485,0.124310,0.144702,0.178829", \
				        "0.164405,0.169404,0.178703,0.194869,0.222447,0.267213");
			}
			rise_transition(Timing_X1) {
				values ("0.071268,0.077931,0.090951,0.116917,0.167200,0.265176", \
				        "0.071264,0.077931,0.090963,0.116917,0.167203,0.265173", \
				        "0.071264,0.077940,0.090913,0.116947,0.167200,0.265199", \
				        "0.071508,0.078030,0.090942,0.116936,0.167201,0.265186", \
				        "0.078963,0.084361,0.095409,0.118809,0.167216,0.265174", \
				        "0.100395,0.105439,0.115506,0.135822,0.176746,0.266549", \
				        "0.134761,0.139699,0.149642,0.170223,0.211661,0.292044", \
				        "0.194087,0.198520,0.208245,0.228436,0.270665,0.356031");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.060546,0.063694,0.069944,0.082277,0.106445,0.153989", \
				        "0.063775,0.066829,0.072955,0.085323,0.109519,0.157094", \
				        "0.069526,0.072711,0.078824,0.091091,0.115268,0.162826", \
				        "0.080094,0.083266,0.089575,0.101931,0.126139,0.173756", \
				        "0.096965,0.100681,0.107782,0.121312,0.146723,0.194533", \
				        "0.114932,0.119892,0.129254,0.146907,0.178318,0.233117", \
				        "0.123656,0.130531,0.143678,0.167994,0.211167,0.283683", \
				        "0.103849,0.113880,0.132049,0.166208,0.226248,0.326436");
			}
			cell_rise(Timing_X1) {
				values ("0.105731,0.112684,0.126667,0.154100,0.208369,0.316227", \
				        "0.108688,0.115584,0.129500,0.156986,0.211325,0.319195", \
				        "0.115071,0.121901,0.135765,0.163192,0.217426,0.325247", \
				        "0.128729,0.135763,0.149556,0.176707,0.230581,0.338140", \
				        "0.159052,0.165552,0.179205,0.205695,0.258925,0.365457", \
				        "0.214740,0.223106,0.238518,0.267203,0.319707,0.423843", \
				        "0.298436,0.308912,0.327993,0.364519,0.431094,0.547062", \
				        "0.432795,0.444770,0.469399,0.514514,0.597118,0.743938");
			}
			fall_transition(Timing_X1) {
				values ("0.034858,0.037504,0.043010,0.053004,0.073199,0.113450", \
				        "0.034868,0.037537,0.042890,0.053088,0.073211,0.113494", \
				        "0.034864,0.037508,0.043062,0.053042,0.073270,0.113538", \
				        "0.035314,0.037939,0.043301,0.053013,0.073260,0.113535", \
				        "0.042153,0.044478,0.049417,0.057867,0.075481,0.113792", \
				        "0.059590,0.061945,0.066768,0.075318,0.091861,0.124815", \
				        "0.091956,0.094654,0.100215,0.110389,0.128892,0.162195", \
				        "0.148008,0.151959,0.158987,0.172109,0.195437,0.235409");
			}
			rise_transition(Timing_X1) {
				values ("0.129295,0.135564,0.148125,0.173098,0.222479,0.320357", \
				        "0.129297,0.135552,0.148150,0.173083,0.222508,0.320356", \
				        "0.129293,0.135576,0.148142,0.173109,0.222494,0.320357", \
				        "0.129334,0.135586,0.148146,0.173093,0.222480,0.320357", \
				        "0.131353,0.137076,0.148877,0.173018,0.222487,0.320336", \
				        "0.153860,0.158492,0.167783,0.187247,0.228563,0.320277", \
				        "0.204144,0.209349,0.219862,0.239498,0.275900,0.348647", \
				        "0.229136,0.236628,0.250701,0.277829,0.328009,0.416655");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.051891,0.054897,0.061110,0.073237,0.097100,0.144265", \
				        "0.055090,0.058086,0.064129,0.076295,0.100180,0.147353", \
				        "0.060806,0.063944,0.070019,0.082041,0.105953,0.153115", \
				        "0.071177,0.074368,0.080654,0.092882,0.116772,0.164012", \
				        "0.085759,0.089693,0.097119,0.111169,0.136984,0.184779", \
				        "0.098827,0.104226,0.114444,0.133202,0.166160,0.222282", \
				        "0.100194,0.107808,0.122144,0.148358,0.194102,0.269321", \
				        "0.070332,0.081429,0.101308,0.138165,0.201837,0.306220");
			}
			cell_rise(Timing_X1) {
				values ("0.104460,0.111351,0.125192,0.152510,0.206696,0.314089", \
				        "0.107452,0.114281,0.128036,0.155422,0.209601,0.317043", \
				        "0.113794,0.120569,0.134332,0.161606,0.215720,0.323092", \
				        "0.127454,0.134454,0.148069,0.175152,0.228866,0.336000", \
				        "0.157871,0.164247,0.177788,0.204175,0.257185,0.363341", \
				        "0.213346,0.221351,0.236736,0.265467,0.318008,0.421739", \
				        "0.295707,0.306238,0.325178,0.361893,0.428568,0.544649", \
				        "0.427064,0.439103,0.463905,0.509391,0.592293,0.739587");
			}
			fall_transition(Timing_X1) {
				values ("0.029170,0.031869,0.037253,0.047308,0.067379,0.107512", \
				        "0.029163,0.031850,0.037126,0.047179,0.067351,0.107558", \
				        "0.029154,0.031814,0.037270,0.047334,0.067420,0.107580", \
				        "0.030434,0.032823,0.038045,0.047570,0.067369,0.107498", \
				        "0.038512,0.040786,0.045575,0.053856,0.070742,0.108165", \
				        "0.056468,0.058840,0.063546,0.072064,0.088398,0.120735", \
				        "0.089207,0.091826,0.097400,0.107586,0.125975,0.159088", \
				        "0.145629,0.149494,0.156435,0.169485,0.192788,0.232661");
			}
			rise_transition(Timing_X1) {
				values ("0.100134,0.106564,0.119307,0.144755,0.194723,0.292945", \
				        "0.100129,0.106554,0.119305,0.144749,0.194731,0.292956", \
				        "0.100125,0.106530,0.119300,0.144757,0.194733,0.292969", \
				        "0.100144,0.106561,0.119348,0.144759,0.194716,0.292949", \
				        "0.102359,0.108142,0.120070,0.144683,0.194741,0.292955", \
				        "0.124854,0.129850,0.139289,0.159072,0.200836,0.292924", \
				        "0.167912,0.173834,0.185631,0.207718,0.247421,0.321412", \
				        "0.232147,0.239629,0.253666,0.280579,0.330404,0.418700");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !B2 & !C1 & C2 | A2 & !B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.060546,0.063694,0.069944,0.082277,0.106445,0.153989", \
				        "0.063775,0.066829,0.072955,0.085323,0.109519,0.157094", \
				        "0.069526,0.072711,0.078824,0.091091,0.115268,0.162826", \
				        "0.080094,0.083266,0.089575,0.101931,0.126139,0.173756", \
				        "0.096965,0.100681,0.107782,0.121312,0.146723,0.194533", \
				        "0.114932,0.119892,0.129254,0.146907,0.178318,0.233117", \
				        "0.123656,0.130531,0.143678,0.167994,0.211167,0.283683", \
				        "0.103849,0.113880,0.132049,0.166208,0.226248,0.326436");
			}
			cell_rise(Timing_X1) {
				values ("0.105731,0.112684,0.126667,0.154100,0.208369,0.316227", \
				        "0.108688,0.115584,0.129500,0.156986,0.211325,0.319195", \
				        "0.115071,0.121901,0.135765,0.163192,0.217426,0.325247", \
				        "0.128729,0.135763,0.149556,0.176707,0.230581,0.338140", \
				        "0.159052,0.165552,0.179205,0.205695,0.258925,0.365457", \
				        "0.214740,0.223106,0.238518,0.267203,0.319707,0.423843", \
				        "0.298436,0.308912,0.327993,0.364519,0.431094,0.547062", \
				        "0.431654,0.443625,0.468410,0.513644,0.596453,0.743576");
			}
			fall_transition(Timing_X1) {
				values ("0.034858,0.037504,0.043010,0.053004,0.073199,0.113450", \
				        "0.034868,0.037537,0.042890,0.053088,0.073211,0.113494", \
				        "0.034864,0.037508,0.043062,0.053042,0.073270,0.113538", \
				        "0.035314,0.037939,0.043301,0.053013,0.073260,0.113535", \
				        "0.042153,0.044478,0.049417,0.057867,0.075481,0.113792", \
				        "0.059590,0.061945,0.066768,0.075318,0.091861,0.124815", \
				        "0.091956,0.094654,0.100215,0.110389,0.128892,0.162195", \
				        "0.148008,0.151959,0.158987,0.172109,0.195437,0.235409");
			}
			rise_transition(Timing_X1) {
				values ("0.129295,0.135564,0.148125,0.173098,0.222479,0.320357", \
				        "0.129297,0.135552,0.148150,0.173083,0.222508,0.320356", \
				        "0.129293,0.135576,0.148142,0.173109,0.222494,0.320357", \
				        "0.129334,0.135586,0.148146,0.173093,0.222480,0.320357", \
				        "0.131353,0.137076,0.148877,0.173018,0.222487,0.320336", \
				        "0.153860,0.158492,0.167783,0.187247,0.228563,0.320277", \
				        "0.204144,0.209349,0.219862,0.239498,0.275900,0.348647", \
				        "0.279587,0.285845,0.298076,0.321668,0.367147,0.450156");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A2 & !B2 & C1 & C2 | A1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.044275,0.046848,0.052058,0.062326,0.082524,0.122357", \
				        "0.047589,0.050136,0.055252,0.065486,0.085679,0.125525", \
				        "0.053384,0.056048,0.061068,0.071298,0.091486,0.131365", \
				        "0.063380,0.066184,0.071629,0.082168,0.102342,0.142222", \
				        "0.076163,0.079689,0.086290,0.098841,0.121572,0.162788", \
				        "0.086304,0.091209,0.100447,0.117429,0.147100,0.197102", \
				        "0.082955,0.090096,0.103249,0.127312,0.168952,0.237068", \
				        "0.044919,0.055237,0.073792,0.107991,0.166959,0.262732");
			}
			cell_rise(Timing_X1) {
				values ("0.104256,0.111144,0.124936,0.152293,0.206465,0.313840", \
				        "0.107190,0.114044,0.127759,0.155115,0.209300,0.316712", \
				        "0.113472,0.120332,0.134089,0.161352,0.215429,0.322803", \
				        "0.127436,0.134361,0.147954,0.175022,0.228700,0.335781", \
				        "0.158170,0.164463,0.177991,0.204389,0.257317,0.363357", \
				        "0.214281,0.222384,0.237567,0.266276,0.318707,0.422317", \
				        "0.298029,0.308505,0.327481,0.364032,0.430526,0.546329", \
				        "0.432795,0.444770,0.469399,0.514514,0.597118,0.743938");
			}
			fall_transition(Timing_X1) {
				values ("0.024026,0.026322,0.030993,0.039449,0.056397,0.090312", \
				        "0.023998,0.026314,0.030939,0.039277,0.056414,0.090343", \
				        "0.023997,0.026243,0.030894,0.039489,0.056367,0.090354", \
				        "0.026136,0.028106,0.031979,0.040164,0.056395,0.090280", \
				        "0.034315,0.036257,0.040145,0.047336,0.061409,0.091833", \
				        "0.051254,0.053338,0.057520,0.065056,0.078886,0.106337", \
				        "0.082111,0.084437,0.089414,0.098457,0.114706,0.143448", \
				        "0.135666,0.139168,0.145392,0.157204,0.178001,0.213209");
			}
			rise_transition(Timing_X1) {
				values ("0.100121,0.106564,0.119297,0.144747,0.194704,0.292937", \
				        "0.100121,0.106561,0.119326,0.144758,0.194710,0.292938", \
				        "0.100113,0.106548,0.119315,0.144752,0.194717,0.292963", \
				        "0.100136,0.106550,0.119310,0.144751,0.194704,0.292947", \
				        "0.102268,0.108120,0.120034,0.144684,0.194728,0.292945", \
				        "0.124408,0.129427,0.138951,0.158786,0.200676,0.292903", \
				        "0.166705,0.172669,0.184557,0.206666,0.246535,0.320825", \
				        "0.229136,0.236628,0.250701,0.277829,0.328009,0.416655");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.069001,0.072156,0.078471,0.090940,0.115362,0.163226", \
				        "0.072137,0.075208,0.081365,0.093901,0.118350,0.166222", \
				        "0.077855,0.081072,0.087204,0.099668,0.124015,0.171882", \
				        "0.088409,0.091623,0.097960,0.110460,0.134908,0.182795", \
				        "0.106795,0.110333,0.117177,0.130461,0.155577,0.203584", \
				        "0.128672,0.133297,0.142089,0.158884,0.189158,0.242921", \
				        "0.143995,0.150405,0.162615,0.185592,0.226691,0.296783", \
				        "0.137661,0.146566,0.163248,0.194840,0.251087,0.346699");
			}
			cell_rise(Timing_X1) {
				values ("0.126012,0.132925,0.146950,0.174257,0.228600,0.336351", \
				        "0.129609,0.136573,0.150408,0.177799,0.232218,0.340102", \
				        "0.136012,0.143015,0.156962,0.184382,0.238794,0.346754", \
				        "0.147241,0.154314,0.168540,0.195999,0.250543,0.358657", \
				        "0.170042,0.177038,0.191158,0.218690,0.273160,0.381339", \
				        "0.213440,0.221208,0.236809,0.266041,0.321170,0.428671", \
				        "0.285057,0.294712,0.312650,0.346888,0.410834,0.527358", \
				        "0.408224,0.419733,0.441266,0.482431,0.557774,0.693555");
			}
			fall_transition(Timing_X1) {
				values ("0.039798,0.042499,0.048070,0.058221,0.078441,0.118921", \
				        "0.039786,0.042530,0.047914,0.058254,0.078428,0.118970", \
				        "0.039801,0.042479,0.047925,0.058184,0.078514,0.118979", \
				        "0.039945,0.042643,0.048128,0.058114,0.078543,0.118977", \
				        "0.045514,0.047936,0.052993,0.061651,0.080019,0.119067", \
				        "0.062357,0.064750,0.069631,0.078215,0.095110,0.128661", \
				        "0.093887,0.096656,0.102355,0.112605,0.131300,0.165080", \
				        "0.147510,0.151283,0.158550,0.171888,0.195723,0.236512");
			}
			rise_transition(Timing_X1) {
				values ("0.129296,0.135577,0.148137,0.173105,0.222504,0.320341", \
				        "0.129307,0.135569,0.148158,0.173111,0.222498,0.320317", \
				        "0.129294,0.135565,0.148134,0.173077,0.222501,0.320357", \
				        "0.129325,0.135554,0.148158,0.173117,0.222474,0.320340", \
				        "0.130541,0.136608,0.148661,0.173102,0.222486,0.320365", \
				        "0.145938,0.151154,0.161370,0.182572,0.226784,0.320454", \
				        "0.180945,0.186448,0.196973,0.217823,0.258386,0.339558", \
				        "0.194223,0.200620,0.213270,0.237771,0.284714,0.374083");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & !B1 & C1 & !C2 | !A1 & A2 & !B1 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.059988,0.063059,0.069358,0.081715,0.105953,0.153567", \
				        "0.063138,0.066159,0.072297,0.084699,0.108940,0.156554", \
				        "0.068829,0.072016,0.078123,0.090421,0.114632,0.162226", \
				        "0.079386,0.082564,0.088892,0.101258,0.125477,0.173120", \
				        "0.096151,0.099846,0.106926,0.120566,0.145999,0.193899", \
				        "0.113735,0.118746,0.128242,0.145993,0.177511,0.232410", \
				        "0.122640,0.129539,0.142754,0.167180,0.210515,0.283102", \
				        "0.107709,0.117577,0.135511,0.169174,0.228471,0.327637");
			}
			cell_rise(Timing_X1) {
				values ("0.124702,0.131629,0.145464,0.172704,0.226879,0.334260", \
				        "0.128364,0.135199,0.148930,0.176234,0.230486,0.337933", \
				        "0.134746,0.141690,0.155427,0.182824,0.237092,0.344623", \
				        "0.145962,0.153023,0.167047,0.194423,0.248839,0.356532", \
				        "0.168817,0.175722,0.189689,0.217099,0.271449,0.379195", \
				        "0.211858,0.219608,0.235094,0.264349,0.319447,0.426513", \
				        "0.282829,0.292574,0.310359,0.344651,0.408594,0.524972", \
				        "0.403451,0.415271,0.436728,0.478305,0.554042,0.690290");
			}
			fall_transition(Timing_X1) {
				values ("0.034303,0.037045,0.042504,0.052608,0.072751,0.113124", \
				        "0.034302,0.037036,0.042444,0.052565,0.072807,0.113139", \
				        "0.034281,0.036995,0.042486,0.052625,0.072852,0.113197", \
				        "0.034859,0.037419,0.042876,0.052657,0.072813,0.113144", \
				        "0.041760,0.044077,0.048988,0.057557,0.075196,0.113523", \
				        "0.059207,0.061616,0.066439,0.075041,0.091634,0.124611", \
				        "0.090801,0.093512,0.099253,0.109594,0.128398,0.161920", \
				        "0.144130,0.148137,0.155335,0.168790,0.192756,0.233617");
			}
			rise_transition(Timing_X1) {
				values ("0.100122,0.106539,0.119309,0.144772,0.194736,0.292967", \
				        "0.100125,0.106545,0.119328,0.144767,0.194729,0.292971", \
				        "0.100136,0.106545,0.119322,0.144771,0.194732,0.292958", \
				        "0.100135,0.106541,0.119303,0.144760,0.194716,0.292945", \
				        "0.101431,0.107605,0.119827,0.144771,0.194728,0.292966", \
				        "0.117007,0.122504,0.132978,0.154356,0.199018,0.293091", \
				        "0.147574,0.153435,0.164844,0.187202,0.229895,0.312281", \
				        "0.196179,0.202492,0.215113,0.239477,0.286122,0.375158");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !B1 & !C1 & C2 | A2 & !B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.069001,0.072156,0.078471,0.090940,0.115362,0.163226", \
				        "0.072137,0.075208,0.081365,0.093901,0.118350,0.166222", \
				        "0.077855,0.081072,0.087204,0.099668,0.124015,0.171882", \
				        "0.088409,0.091623,0.097960,0.110460,0.134908,0.182795", \
				        "0.106795,0.110333,0.117177,0.130461,0.155577,0.203584", \
				        "0.128672,0.133297,0.142089,0.158884,0.189158,0.242921", \
				        "0.143995,0.150405,0.162615,0.185592,0.226691,0.296783", \
				        "0.137661,0.146566,0.163248,0.194840,0.251087,0.346699");
			}
			cell_rise(Timing_X1) {
				values ("0.126012,0.132925,0.146950,0.174257,0.228600,0.336351", \
				        "0.129609,0.136573,0.150408,0.177799,0.232218,0.340102", \
				        "0.136012,0.143015,0.156962,0.184382,0.238794,0.346754", \
				        "0.147241,0.154314,0.168540,0.195999,0.250543,0.358657", \
				        "0.170042,0.177038,0.191158,0.218690,0.273160,0.381339", \
				        "0.213440,0.221208,0.236809,0.266041,0.321170,0.428671", \
				        "0.285057,0.294712,0.312650,0.346888,0.410834,0.527358", \
				        "0.406791,0.418622,0.440127,0.481514,0.557200,0.693545");
			}
			fall_transition(Timing_X1) {
				values ("0.039798,0.042499,0.048070,0.058221,0.078441,0.118921", \
				        "0.039786,0.042530,0.047914,0.058254,0.078428,0.118970", \
				        "0.039801,0.042479,0.047925,0.058184,0.078514,0.118979", \
				        "0.039945,0.042643,0.048128,0.058114,0.078543,0.118977", \
				        "0.045514,0.047936,0.052993,0.061651,0.080019,0.119067", \
				        "0.062357,0.064750,0.069631,0.078215,0.095110,0.128661", \
				        "0.093887,0.096656,0.102355,0.112605,0.131300,0.165080", \
				        "0.147510,0.151283,0.158550,0.171888,0.195723,0.236512");
			}
			rise_transition(Timing_X1) {
				values ("0.129296,0.135577,0.148137,0.173105,0.222504,0.320341", \
				        "0.129307,0.135569,0.148158,0.173111,0.222498,0.320317", \
				        "0.129294,0.135565,0.148134,0.173077,0.222501,0.320357", \
				        "0.129325,0.135554,0.148158,0.173117,0.222474,0.320340", \
				        "0.130541,0.136608,0.148661,0.173102,0.222486,0.320365", \
				        "0.145938,0.151154,0.161370,0.182572,0.226784,0.320454", \
				        "0.180945,0.186448,0.196973,0.217823,0.258386,0.339558", \
				        "0.236559,0.241963,0.253585,0.275818,0.319521,0.405339");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & A2 & !B1 & C1 | A1 & !B1 & C1 & C2 | A2 & !B1 & C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) || (A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1) || (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.050832,0.053462,0.058747,0.069232,0.089760,0.130014", \
				        "0.054105,0.056678,0.061918,0.072387,0.092875,0.133117", \
				        "0.059857,0.062570,0.067683,0.078125,0.098611,0.138872", \
				        "0.070272,0.073026,0.078416,0.089000,0.109462,0.149721", \
				        "0.085255,0.088571,0.094830,0.106943,0.129223,0.170274", \
				        "0.099531,0.104061,0.112620,0.128644,0.157051,0.205836", \
				        "0.103324,0.109715,0.121805,0.144230,0.183619,0.249200", \
				        "0.079342,0.088511,0.105238,0.136465,0.191240,0.282126");
			}
			cell_rise(Timing_X1) {
				values ("0.124513,0.131348,0.145206,0.172519,0.226660,0.334047", \
				        "0.128114,0.134983,0.148650,0.175952,0.230204,0.337679", \
				        "0.134507,0.141467,0.155213,0.182555,0.236792,0.344320", \
				        "0.145784,0.152806,0.166766,0.194155,0.248579,0.356243", \
				        "0.168671,0.175532,0.189489,0.216915,0.271228,0.378940", \
				        "0.211892,0.219792,0.235164,0.264434,0.319451,0.426436", \
				        "0.284402,0.294169,0.311744,0.345937,0.409651,0.525752", \
				        "0.408224,0.419733,0.441266,0.482431,0.557774,0.693555");
			}
			fall_transition(Timing_X1) {
				values ("0.028358,0.030655,0.035441,0.043895,0.060906,0.095028", \
				        "0.028357,0.030671,0.035269,0.043914,0.060966,0.095046", \
				        "0.028309,0.030592,0.035358,0.043751,0.060962,0.095040", \
				        "0.029501,0.031664,0.035966,0.044246,0.060858,0.094997", \
				        "0.036937,0.038935,0.042985,0.050503,0.064758,0.096106", \
				        "0.053510,0.055640,0.059841,0.067495,0.081519,0.109467", \
				        "0.083302,0.085728,0.090854,0.100069,0.116520,0.145649", \
				        "0.134247,0.137887,0.144326,0.156425,0.177664,0.213629");
			}
			rise_transition(Timing_X1) {
				values ("0.100109,0.106547,0.119301,0.144762,0.194722,0.292965", \
				        "0.100115,0.106544,0.119332,0.144765,0.194714,0.292959", \
				        "0.100110,0.106547,0.119321,0.144761,0.194714,0.292955", \
				        "0.100111,0.106558,0.119309,0.144753,0.194706,0.292937", \
				        "0.101448,0.107620,0.119832,0.144773,0.194715,0.292965", \
				        "0.116969,0.122449,0.132931,0.154326,0.199011,0.293086", \
				        "0.146926,0.152763,0.164295,0.186765,0.229566,0.312120", \
				        "0.194223,0.200620,0.213270,0.237771,0.284714,0.374083");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.070332,0.073465,0.079782,0.092116,0.116353,0.163978", \
				        "0.073562,0.076753,0.082998,0.095334,0.119568,0.167212", \
				        "0.078794,0.081997,0.088141,0.100377,0.124617,0.172291", \
				        "0.087226,0.090464,0.096872,0.109066,0.133295,0.181021", \
				        "0.099247,0.102689,0.109445,0.122520,0.147398,0.195164", \
				        "0.112522,0.116646,0.124436,0.139317,0.167066,0.218603", \
				        "0.116641,0.122003,0.132953,0.152779,0.188339,0.249715", \
				        "0.084885,0.093661,0.108995,0.138034,0.189036,0.273335");
			}
			cell_rise(Timing_X1) {
				values ("0.152275,0.159356,0.173203,0.200897,0.255445,0.363287", \
				        "0.155182,0.162151,0.175998,0.203555,0.258256,0.366100", \
				        "0.161175,0.168300,0.182140,0.209657,0.264238,0.372096", \
				        "0.174986,0.181932,0.195590,0.222995,0.277428,0.385020", \
				        "0.204597,0.211071,0.224936,0.251894,0.305509,0.412365", \
				        "0.266335,0.273999,0.287225,0.313570,0.366117,0.471054", \
				        "0.365013,0.374172,0.391751,0.425039,0.486803,0.595879", \
				        "0.517226,0.528193,0.550698,0.592107,0.669363,0.808493");
			}
			fall_transition(Timing_X1) {
				values ("0.034295,0.036942,0.042367,0.052567,0.072856,0.113184", \
				        "0.034292,0.036982,0.042371,0.052629,0.072750,0.113140", \
				        "0.034290,0.036950,0.042419,0.052501,0.072824,0.113192", \
				        "0.034435,0.037026,0.042282,0.052660,0.072770,0.113119", \
				        "0.037749,0.040241,0.045427,0.055074,0.074017,0.113371", \
				        "0.047792,0.050150,0.055139,0.064460,0.082823,0.120092", \
				        "0.073436,0.075952,0.080847,0.089931,0.107283,0.141569", \
				        "0.124762,0.127528,0.133328,0.144062,0.163448,0.197765");
			}
			rise_transition(Timing_X1) {
				values ("0.101203,0.107839,0.120653,0.146140,0.196117,0.295363", \
				        "0.101189,0.107859,0.120649,0.146156,0.196153,0.295374", \
				        "0.101194,0.107853,0.120647,0.146140,0.196114,0.295353", \
				        "0.101202,0.107836,0.120692,0.146122,0.196158,0.295370", \
				        "0.101069,0.107816,0.120732,0.146158,0.196152,0.295374", \
				        "0.113495,0.118985,0.129771,0.151845,0.197613,0.295374", \
				        "0.150501,0.157005,0.169893,0.193051,0.234238,0.313530", \
				        "0.202948,0.211220,0.227385,0.257438,0.310922,0.402895");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.070332,0.073465,0.079782,0.092116,0.116353,0.163978", \
				        "0.073562,0.076753,0.082998,0.095334,0.119568,0.167212", \
				        "0.078794,0.081997,0.088141,0.100377,0.124617,0.172291", \
				        "0.087226,0.090464,0.096872,0.109066,0.133295,0.181021", \
				        "0.099247,0.102689,0.109445,0.122520,0.147398,0.195164", \
				        "0.112522,0.116646,0.124436,0.139317,0.167066,0.218603", \
				        "0.116641,0.122003,0.132953,0.152779,0.188339,0.249715", \
				        "0.084885,0.093661,0.108995,0.138034,0.189036,0.273335");
			}
			cell_rise(Timing_X1) {
				values ("0.144861,0.152100,0.166419,0.194713,0.250113,0.359337", \
				        "0.147708,0.154867,0.169160,0.197398,0.252871,0.362058", \
				        "0.153799,0.160981,0.175282,0.203421,0.258747,0.368038", \
				        "0.167159,0.174451,0.188567,0.216621,0.271841,0.380820", \
				        "0.196739,0.203309,0.217468,0.245129,0.299686,0.407805", \
				        "0.258051,0.265772,0.279855,0.306474,0.359545,0.465638", \
				        "0.355395,0.365189,0.382744,0.416715,0.479336,0.589878", \
				        "0.506353,0.517914,0.540459,0.582684,0.661017,0.801236");
			}
			fall_transition(Timing_X1) {
				values ("0.034295,0.036942,0.042367,0.052567,0.072856,0.113184", \
				        "0.034292,0.036982,0.042371,0.052629,0.072750,0.113140", \
				        "0.034290,0.036950,0.042419,0.052501,0.072824,0.113192", \
				        "0.034435,0.037026,0.042282,0.052660,0.072770,0.113119", \
				        "0.037749,0.040241,0.045427,0.055074,0.074017,0.113371", \
				        "0.047792,0.050150,0.055139,0.064460,0.082823,0.120092", \
				        "0.073436,0.075952,0.080847,0.089931,0.107283,0.141569", \
				        "0.124762,0.127528,0.133328,0.144062,0.163448,0.197765");
			}
			rise_transition(Timing_X1) {
				values ("0.150419,0.156719,0.169138,0.193833,0.242945,0.340938", \
				        "0.150352,0.156720,0.169141,0.193826,0.242940,0.340952", \
				        "0.150346,0.156709,0.169161,0.193832,0.242942,0.340940", \
				        "0.150376,0.156708,0.169144,0.193822,0.242946,0.340948", \
				        "0.150024,0.156392,0.169064,0.193837,0.242930,0.340942", \
				        "0.163399,0.168767,0.178928,0.200103,0.244659,0.340950", \
				        "0.211214,0.216233,0.226800,0.246436,0.282958,0.360462", \
				        "0.283000,0.288999,0.302417,0.327261,0.373591,0.456932");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.061825,0.064880,0.071082,0.083262,0.107159,0.154383", \
				        "0.065030,0.068186,0.074300,0.086447,0.110362,0.157620", \
				        "0.070235,0.073400,0.079434,0.091492,0.115402,0.162673", \
				        "0.078619,0.081818,0.088167,0.100203,0.124045,0.171386", \
				        "0.089620,0.093132,0.099974,0.113069,0.137981,0.185547", \
				        "0.100218,0.104581,0.112774,0.128200,0.156498,0.208375", \
				        "0.098209,0.104219,0.115953,0.137217,0.174673,0.237693", \
				        "0.056708,0.066162,0.083312,0.114704,0.168834,0.256697");
			}
			cell_rise(Timing_X1) {
				values ("0.143387,0.150603,0.164859,0.193032,0.248288,0.357177", \
				        "0.146298,0.153374,0.167516,0.195709,0.251043,0.359910", \
				        "0.152382,0.159490,0.173690,0.201752,0.256968,0.365882", \
				        "0.165739,0.172944,0.187001,0.214961,0.270032,0.378676", \
				        "0.195228,0.201831,0.215894,0.243519,0.297869,0.405635", \
				        "0.256489,0.264161,0.278198,0.304923,0.357739,0.463497", \
				        "0.352833,0.362534,0.380190,0.414230,0.477003,0.587668", \
				        "0.502237,0.513540,0.536433,0.578684,0.657200,0.797570");
			}
			fall_transition(Timing_X1) {
				values ("0.029251,0.031827,0.037248,0.047315,0.067478,0.107757", \
				        "0.029246,0.031884,0.037140,0.047284,0.067498,0.107717", \
				        "0.029248,0.031864,0.037226,0.047373,0.067452,0.107754", \
				        "0.029735,0.032283,0.037492,0.047496,0.067445,0.107700", \
				        "0.033547,0.036046,0.041139,0.050525,0.069249,0.108134", \
				        "0.044789,0.047048,0.051769,0.060870,0.078714,0.115472", \
				        "0.071548,0.073935,0.078698,0.087834,0.104618,0.138026", \
				        "0.124412,0.127207,0.132624,0.143055,0.162069,0.195862");
			}
			rise_transition(Timing_X1) {
				values ("0.123174,0.129660,0.142330,0.167615,0.217463,0.316011", \
				        "0.123176,0.129629,0.142325,0.167636,0.217483,0.316019", \
				        "0.123174,0.129659,0.142326,0.167624,0.217472,0.316017", \
				        "0.123171,0.129660,0.142312,0.167612,0.217468,0.315994", \
				        "0.122758,0.129305,0.142223,0.167646,0.217471,0.316011", \
				        "0.136276,0.141781,0.152179,0.173989,0.219229,0.315997", \
				        "0.179914,0.185577,0.197304,0.218815,0.257746,0.335640", \
				        "0.242597,0.249872,0.264520,0.291829,0.341686,0.429336");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.055094,0.057667,0.062967,0.073376,0.093734,0.133931", \
				        "0.058314,0.060969,0.066184,0.076524,0.096928,0.137146", \
				        "0.063595,0.066278,0.071427,0.081670,0.102080,0.142328", \
				        "0.072407,0.075175,0.080567,0.090830,0.111176,0.151462", \
				        "0.084271,0.087404,0.093475,0.105106,0.126920,0.167876", \
				        "0.095336,0.099524,0.107311,0.121869,0.148139,0.194760", \
				        "0.092768,0.098681,0.110154,0.130885,0.167340,0.227792", \
				        "0.049956,0.059216,0.076133,0.107034,0.160310,0.246647");
			}
			cell_rise(Timing_X1) {
				values ("0.150568,0.157660,0.171655,0.199404,0.254244,0.362444", \
				        "0.153440,0.160474,0.174394,0.202130,0.256968,0.365272", \
				        "0.159554,0.166597,0.180548,0.208219,0.262990,0.371211", \
				        "0.173118,0.180221,0.193867,0.221482,0.276107,0.384084", \
				        "0.202625,0.209058,0.223041,0.250226,0.303990,0.411282", \
				        "0.264080,0.271762,0.285214,0.311587,0.364224,0.469551", \
				        "0.362268,0.371785,0.389051,0.422512,0.484499,0.593928", \
				        "0.514083,0.525104,0.547647,0.589198,0.666661,0.805931");
			}
			fall_transition(Timing_X1) {
				values ("0.026656,0.028871,0.033343,0.041818,0.058701,0.092558", \
				        "0.026667,0.028874,0.033439,0.041927,0.058766,0.092576", \
				        "0.026642,0.028816,0.033371,0.041731,0.058818,0.092575", \
				        "0.027426,0.029505,0.033759,0.041859,0.058810,0.092479", \
				        "0.032408,0.034372,0.038657,0.046280,0.061685,0.093388", \
				        "0.045828,0.047756,0.051666,0.059218,0.073749,0.103412", \
				        "0.074376,0.076467,0.080708,0.088670,0.103549,0.131582", \
				        "0.128940,0.131487,0.136205,0.145633,0.162980,0.193947");
			}
			rise_transition(Timing_X1) {
				values ("0.125052,0.131690,0.144540,0.170175,0.220454,0.319420", \
				        "0.125038,0.131691,0.144540,0.170155,0.220441,0.319413", \
				        "0.125030,0.131704,0.144541,0.170175,0.220456,0.319408", \
				        "0.125057,0.131686,0.144543,0.170161,0.220452,0.319416", \
				        "0.124911,0.131566,0.144570,0.170165,0.220437,0.319407", \
				        "0.137850,0.143413,0.154062,0.176254,0.222078,0.319416", \
				        "0.181874,0.187457,0.199319,0.220765,0.259646,0.338284", \
				        "0.245205,0.252510,0.267122,0.294425,0.344126,0.431590");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & B1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.041278,0.043282,0.047345,0.055343,0.071210,0.102738", \
				        "0.044715,0.046763,0.050696,0.058750,0.074655,0.106210", \
				        "0.050917,0.052983,0.056931,0.064800,0.080734,0.112271", \
				        "0.060832,0.063163,0.067711,0.075997,0.092034,0.123667", \
				        "0.072005,0.075056,0.080797,0.091405,0.110569,0.144655", \
				        "0.078735,0.083120,0.091274,0.106214,0.132173,0.175505", \
				        "0.067536,0.074132,0.086505,0.108651,0.146504,0.207363", \
				        "0.010888,0.021167,0.039951,0.073372,0.129569,0.218469");
			}
			cell_rise(Timing_X1) {
				values ("0.152275,0.159356,0.173203,0.200897,0.255445,0.363287", \
				        "0.155182,0.162151,0.175998,0.203555,0.258256,0.366100", \
				        "0.161175,0.168300,0.182140,0.209657,0.264238,0.372096", \
				        "0.174986,0.181932,0.195590,0.222995,0.277428,0.385020", \
				        "0.204597,0.211071,0.224936,0.251894,0.305509,0.412365", \
				        "0.266335,0.273999,0.287225,0.313570,0.366117,0.471054", \
				        "0.365013,0.374172,0.391751,0.425039,0.486803,0.595879", \
				        "0.517226,0.528193,0.550698,0.592107,0.669363,0.808493");
			}
			fall_transition(Timing_X1) {
				values ("0.017354,0.019083,0.022566,0.029495,0.043086,0.070074", \
				        "0.017349,0.019063,0.022647,0.029446,0.043093,0.070183", \
				        "0.017440,0.019254,0.022758,0.029493,0.043088,0.070145", \
				        "0.019901,0.021436,0.024521,0.030640,0.043242,0.070192", \
				        "0.027475,0.029087,0.032269,0.038268,0.049576,0.072737", \
				        "0.043189,0.044944,0.048409,0.054904,0.066724,0.088956", \
				        "0.073746,0.075530,0.079401,0.086737,0.100240,0.124432", \
				        "0.132336,0.134349,0.138019,0.146112,0.161939,0.190539");
			}
			rise_transition(Timing_X1) {
				values ("0.101203,0.107839,0.120653,0.146140,0.196117,0.295363", \
				        "0.101189,0.107859,0.120649,0.146156,0.196153,0.295374", \
				        "0.101194,0.107853,0.120647,0.146140,0.196114,0.295353", \
				        "0.101202,0.107836,0.120692,0.146122,0.196158,0.295370", \
				        "0.101069,0.107816,0.120732,0.146158,0.196152,0.295374", \
				        "0.113495,0.118985,0.129771,0.151845,0.197613,0.295374", \
				        "0.150501,0.157005,0.169893,0.193051,0.234238,0.313530", \
				        "0.202948,0.211220,0.227385,0.257438,0.310922,0.402895");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.078967,0.082135,0.088450,0.100880,0.125326,0.173203", \
				        "0.082091,0.085332,0.091587,0.104011,0.128438,0.176291", \
				        "0.087333,0.090556,0.096764,0.109045,0.133446,0.181334", \
				        "0.095800,0.099058,0.105518,0.117826,0.142185,0.190081", \
				        "0.108555,0.111930,0.118644,0.131601,0.156353,0.204247", \
				        "0.123543,0.127469,0.135020,0.149543,0.176947,0.228128", \
				        "0.131778,0.137081,0.147272,0.166245,0.200487,0.260632", \
				        "0.110653,0.118371,0.132801,0.159831,0.208083,0.289079");
			}
			cell_rise(Timing_X1) {
				values ("0.165423,0.172403,0.186319,0.213861,0.268541,0.376346", \
				        "0.169116,0.176072,0.189883,0.217439,0.272091,0.379974", \
				        "0.175691,0.182640,0.196593,0.224098,0.278820,0.386647", \
				        "0.187423,0.194587,0.208490,0.236131,0.290865,0.398746", \
				        "0.211350,0.218186,0.232123,0.259716,0.314186,0.422038", \
				        "0.260163,0.267907,0.281966,0.309483,0.363418,0.470611", \
				        "0.344360,0.353572,0.369291,0.401065,0.461492,0.573072", \
				        "0.484208,0.493998,0.514315,0.551730,0.622560,0.752085");
			}
			fall_transition(Timing_X1) {
				values ("0.039790,0.042488,0.048010,0.058321,0.078495,0.118906", \
				        "0.039788,0.042474,0.047974,0.058332,0.078441,0.118948", \
				        "0.039792,0.042486,0.047871,0.058203,0.078553,0.118988", \
				        "0.039814,0.042492,0.047867,0.058109,0.078490,0.118959", \
				        "0.042691,0.045227,0.050386,0.060036,0.079442,0.119047", \
				        "0.051752,0.054218,0.059346,0.068901,0.087677,0.125174", \
				        "0.076171,0.078635,0.083568,0.092913,0.110659,0.145794", \
				        "0.125672,0.128611,0.134480,0.145241,0.164755,0.199705");
			}
			rise_transition(Timing_X1) {
				values ("0.101172,0.107850,0.120688,0.146156,0.196151,0.295351", \
				        "0.101183,0.107855,0.120652,0.146125,0.196150,0.295383", \
				        "0.101199,0.107860,0.120689,0.146152,0.196147,0.295369", \
				        "0.101201,0.107856,0.120659,0.146146,0.196132,0.295363", \
				        "0.101165,0.107829,0.120666,0.146166,0.196157,0.295377", \
				        "0.109900,0.115655,0.127197,0.150433,0.197563,0.295362", \
				        "0.134812,0.140991,0.153781,0.177562,0.222060,0.308417", \
				        "0.173496,0.180702,0.195138,0.222026,0.272292,0.365576");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.078967,0.082135,0.088450,0.100880,0.125326,0.173203", \
				        "0.082091,0.085332,0.091587,0.104011,0.128438,0.176291", \
				        "0.087333,0.090556,0.096764,0.109045,0.133446,0.181334", \
				        "0.095800,0.099058,0.105518,0.117826,0.142185,0.190081", \
				        "0.108555,0.111930,0.118644,0.131601,0.156353,0.204247", \
				        "0.123543,0.127469,0.135020,0.149543,0.176947,0.228128", \
				        "0.131778,0.137081,0.147272,0.166245,0.200487,0.260632", \
				        "0.110653,0.118371,0.132801,0.159831,0.208083,0.289079");
			}
			cell_rise(Timing_X1) {
				values ("0.157902,0.165151,0.179501,0.207698,0.263203,0.372387", \
				        "0.161602,0.168783,0.183022,0.211281,0.266742,0.375913", \
				        "0.168271,0.175483,0.189773,0.217963,0.273348,0.382633", \
				        "0.180093,0.187333,0.201773,0.230078,0.285551,0.394824", \
				        "0.203779,0.210951,0.225232,0.253474,0.308862,0.417978", \
				        "0.252436,0.259923,0.274731,0.302851,0.357580,0.466111", \
				        "0.334838,0.344208,0.360704,0.393192,0.454435,0.567675", \
				        "0.472524,0.483216,0.503083,0.541652,0.613532,0.744824");
			}
			fall_transition(Timing_X1) {
				values ("0.039790,0.042488,0.048010,0.058321,0.078495,0.118906", \
				        "0.039788,0.042474,0.047974,0.058332,0.078441,0.118948", \
				        "0.039792,0.042486,0.047871,0.058203,0.078553,0.118988", \
				        "0.039814,0.042492,0.047867,0.058109,0.078490,0.118959", \
				        "0.042691,0.045227,0.050386,0.060036,0.079442,0.119047", \
				        "0.051752,0.054218,0.059346,0.068901,0.087677,0.125174", \
				        "0.076171,0.078635,0.083568,0.092913,0.110659,0.145794", \
				        "0.125672,0.128611,0.134480,0.145241,0.164755,0.199705");
			}
			rise_transition(Timing_X1) {
				values ("0.150359,0.156720,0.169172,0.193823,0.242937,0.340911", \
				        "0.150350,0.156724,0.169155,0.193824,0.242949,0.340933", \
				        "0.150373,0.156719,0.169164,0.193812,0.242939,0.340933", \
				        "0.150376,0.156713,0.169159,0.193831,0.242932,0.340917", \
				        "0.150235,0.156566,0.169055,0.193803,0.242933,0.340929", \
				        "0.159238,0.165000,0.175978,0.198383,0.244487,0.340928", \
				        "0.191441,0.197154,0.207874,0.229150,0.270252,0.354663", \
				        "0.242602,0.248124,0.260476,0.284023,0.329535,0.416846");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.070085,0.073208,0.079469,0.091820,0.115959,0.163508", \
				        "0.073214,0.076408,0.082612,0.094846,0.118995,0.166537", \
				        "0.078436,0.081625,0.087777,0.099925,0.124094,0.171649", \
				        "0.086909,0.090142,0.096536,0.108655,0.132777,0.180362", \
				        "0.098893,0.102321,0.109087,0.122098,0.146886,0.194564", \
				        "0.111744,0.115809,0.123641,0.138610,0.166430,0.217917", \
				        "0.114628,0.120375,0.131293,0.151369,0.187209,0.248767", \
				        "0.084926,0.093412,0.109146,0.138082,0.188938,0.273077");
			}
			cell_rise(Timing_X1) {
				values ("0.156512,0.163609,0.177919,0.206045,0.261376,0.370218", \
				        "0.160200,0.167305,0.181459,0.209611,0.264918,0.373740", \
				        "0.166809,0.173976,0.188232,0.216311,0.271569,0.380461", \
				        "0.178639,0.185849,0.200242,0.228375,0.283743,0.392648", \
				        "0.202297,0.209473,0.223673,0.251823,0.307037,0.415811", \
				        "0.250749,0.258337,0.273087,0.301242,0.355765,0.463952", \
				        "0.332676,0.342125,0.358541,0.391047,0.452297,0.565399", \
				        "0.469510,0.480173,0.500131,0.538657,0.610590,0.741796");
			}
			fall_transition(Timing_X1) {
				values ("0.034901,0.037565,0.042984,0.053048,0.073316,0.113584", \
				        "0.034899,0.037572,0.042889,0.053139,0.073213,0.113575", \
				        "0.034895,0.037546,0.042853,0.053100,0.073268,0.113559", \
				        "0.035126,0.037683,0.042913,0.053212,0.073230,0.113515", \
				        "0.038462,0.040957,0.046071,0.055668,0.074582,0.113819", \
				        "0.048512,0.050890,0.055815,0.065114,0.083412,0.120577", \
				        "0.074041,0.076433,0.081372,0.090502,0.107795,0.142082", \
				        "0.124700,0.127675,0.133244,0.143893,0.163143,0.197501");
			}
			rise_transition(Timing_X1) {
				values ("0.123170,0.129625,0.142349,0.167630,0.217475,0.316014", \
				        "0.123180,0.129660,0.142325,0.167608,0.217463,0.316008", \
				        "0.123166,0.129645,0.142343,0.167615,0.217469,0.316007", \
				        "0.123152,0.129635,0.142333,0.167631,0.217489,0.316013", \
				        "0.122987,0.129512,0.142243,0.167609,0.217468,0.316007", \
				        "0.132228,0.138119,0.149242,0.172200,0.219025,0.315974", \
				        "0.162050,0.167879,0.179379,0.201920,0.244897,0.329785", \
				        "0.207534,0.213713,0.227085,0.252219,0.300013,0.390046");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.061902,0.064559,0.069910,0.080429,0.101020,0.141513", \
				        "0.065059,0.067767,0.073026,0.083480,0.104113,0.144594", \
				        "0.070357,0.073066,0.078329,0.088642,0.109250,0.149764", \
				        "0.079344,0.082107,0.087557,0.097873,0.118411,0.158947", \
				        "0.092408,0.095466,0.101416,0.112852,0.134508,0.175401", \
				        "0.106244,0.110117,0.117495,0.131495,0.157067,0.203081", \
				        "0.108743,0.114384,0.125031,0.144690,0.179423,0.238158", \
				        "0.077823,0.086047,0.101598,0.130099,0.180078,0.262675");
			}
			cell_rise(Timing_X1) {
				values ("0.163663,0.170706,0.184672,0.212492,0.267274,0.375492", \
				        "0.167368,0.174368,0.188249,0.215982,0.270841,0.379031", \
				        "0.173955,0.181024,0.194950,0.222741,0.277598,0.385789", \
				        "0.185835,0.192933,0.206980,0.234774,0.289697,0.397930", \
				        "0.209627,0.216545,0.230576,0.258335,0.312969,0.421180", \
				        "0.258395,0.265926,0.280249,0.307849,0.361987,0.469586", \
				        "0.341717,0.350963,0.366945,0.398878,0.459466,0.571574", \
				        "0.480723,0.490412,0.510838,0.548602,0.619662,0.749647");
			}
			fall_transition(Timing_X1) {
				values ("0.031555,0.033793,0.038179,0.046656,0.063736,0.097434", \
				        "0.031541,0.033782,0.038213,0.046851,0.063722,0.097456", \
				        "0.031552,0.033752,0.038252,0.046870,0.063722,0.097454", \
				        "0.031951,0.034064,0.038509,0.046872,0.063679,0.097410", \
				        "0.036404,0.038414,0.042708,0.050587,0.065916,0.098022", \
				        "0.048913,0.050887,0.054817,0.062612,0.077436,0.107446", \
				        "0.076516,0.078610,0.082860,0.091039,0.106054,0.134580", \
				        "0.128873,0.131572,0.136554,0.146172,0.163796,0.195162");
			}
			rise_transition(Timing_X1) {
				values ("0.125042,0.131688,0.144544,0.170153,0.220438,0.319398", \
				        "0.125037,0.131687,0.144533,0.170168,0.220451,0.319402", \
				        "0.125058,0.131691,0.144544,0.170153,0.220450,0.319395", \
				        "0.125055,0.131693,0.144534,0.170174,0.220454,0.319385", \
				        "0.125003,0.131648,0.144533,0.170155,0.220437,0.319406", \
				        "0.133867,0.139800,0.151257,0.174600,0.221953,0.319402", \
				        "0.163748,0.169685,0.181468,0.204177,0.247279,0.332779", \
				        "0.209555,0.216127,0.229318,0.254600,0.302482,0.392725");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & B1 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.045919,0.047999,0.052186,0.060513,0.076689,0.108631", \
				        "0.049320,0.051432,0.055566,0.063769,0.079984,0.111930", \
				        "0.055571,0.057682,0.061794,0.069926,0.086104,0.118052", \
				        "0.066213,0.068516,0.072964,0.081228,0.097473,0.129409", \
				        "0.079568,0.082431,0.087921,0.098105,0.116816,0.150571", \
				        "0.089894,0.093950,0.101560,0.115719,0.140598,0.182803", \
				        "0.084806,0.090888,0.102242,0.122886,0.158746,0.217532", \
				        "0.041820,0.050892,0.067670,0.098092,0.150285,0.234849");
			}
			cell_rise(Timing_X1) {
				values ("0.165423,0.172403,0.186319,0.213861,0.268541,0.376346", \
				        "0.169116,0.176072,0.189883,0.217439,0.272091,0.379974", \
				        "0.175691,0.182640,0.196593,0.224098,0.278820,0.386647", \
				        "0.187423,0.194587,0.208490,0.236131,0.290865,0.398746", \
				        "0.211350,0.218186,0.232123,0.259716,0.314186,0.422038", \
				        "0.260163,0.267907,0.281966,0.309483,0.363418,0.470611", \
				        "0.344360,0.353572,0.369291,0.401065,0.461492,0.573072", \
				        "0.484208,0.493998,0.514315,0.551730,0.622560,0.752085");
			}
			fall_transition(Timing_X1) {
				values ("0.021468,0.023270,0.026845,0.033637,0.047079,0.074210", \
				        "0.021477,0.023233,0.026943,0.033674,0.047029,0.074181", \
				        "0.021489,0.023268,0.026906,0.033652,0.047110,0.074197", \
				        "0.023245,0.024813,0.028040,0.034253,0.047240,0.074123", \
				        "0.030546,0.032120,0.035320,0.041279,0.052710,0.076287", \
				        "0.045957,0.047697,0.051115,0.057475,0.069272,0.091705", \
				        "0.075403,0.077254,0.081152,0.088653,0.102225,0.126610", \
				        "0.130898,0.133231,0.137458,0.146036,0.162197,0.191280");
			}
			rise_transition(Timing_X1) {
				values ("0.101172,0.107850,0.120688,0.146156,0.196151,0.295351", \
				        "0.101183,0.107855,0.120652,0.146125,0.196150,0.295383", \
				        "0.101199,0.107860,0.120689,0.146152,0.196147,0.295369", \
				        "0.101201,0.107856,0.120659,0.146146,0.196132,0.295363", \
				        "0.101165,0.107829,0.120666,0.146166,0.196157,0.295377", \
				        "0.109900,0.115655,0.127197,0.150433,0.197563,0.295362", \
				        "0.134812,0.140991,0.153781,0.177562,0.222060,0.308417", \
				        "0.173496,0.180702,0.195138,0.222026,0.272292,0.365576");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.003080,0.002824,0.002344,0.001393,-0.000531,-0.004379", \
				        "0.003089,0.002833,0.002354,0.001396,-0.000521,-0.004367", \
				        "0.003094,0.002847,0.002364,0.001408,-0.000514,-0.004365", \
				        "0.003133,0.002883,0.002398,0.001434,-0.000493,-0.004350", \
				        "0.003239,0.002997,0.002510,0.001531,-0.000421,-0.004302", \
				        "0.003615,0.003351,0.002837,0.001818,-0.000183,-0.004117", \
				        "0.004681,0.004394,0.003822,0.002707,0.000567,-0.003534", \
				        "0.007348,0.007028,0.006383,0.005126,0.002715,-0.001775");
			}
			rise_power(Power_X1) {
				values ("0.003132,0.003368,0.003853,0.004823,0.006768,0.010640", \
				        "0.003128,0.003367,0.003853,0.004819,0.006765,0.010650", \
				        "0.003142,0.003388,0.003871,0.004842,0.006778,0.010647", \
				        "0.003220,0.003458,0.003937,0.004886,0.006817,0.010674", \
				        "0.003441,0.003672,0.004133,0.005064,0.006950,0.010781", \
				        "0.003970,0.004190,0.004628,0.005525,0.007354,0.011101", \
				        "0.005187,0.005378,0.005778,0.006609,0.008352,0.011958", \
				        "0.007854,0.008026,0.008354,0.009074,0.010643,0.014030");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.002887,0.003129,0.003615,0.004588,0.006537,0.010412", \
				        "0.002888,0.003128,0.003621,0.004588,0.006530,0.010411", \
				        "0.002912,0.003152,0.003637,0.004605,0.006538,0.010420", \
				        "0.002989,0.003221,0.003706,0.004664,0.006580,0.010444", \
				        "0.003206,0.003441,0.003897,0.004836,0.006720,0.010539", \
				        "0.003747,0.003956,0.004393,0.005292,0.007119,0.010865", \
				        "0.004964,0.005155,0.005552,0.006379,0.008117,0.011719", \
				        "0.007708,0.007848,0.008174,0.008874,0.010418,0.013795");
			}
			fall_power(Power_X1) {
				values ("0.002019,0.001779,0.001294,0.000342,-0.001582,-0.005435", \
				        "0.002024,0.001787,0.001301,0.000345,-0.001569,-0.005433", \
				        "0.002035,0.001802,0.001316,0.000361,-0.001568,-0.005422", \
				        "0.002087,0.001842,0.001357,0.000388,-0.001543,-0.005408", \
				        "0.002216,0.001973,0.001477,0.000490,-0.001467,-0.005360", \
				        "0.002630,0.002375,0.001843,0.000804,-0.001210,-0.005168", \
				        "0.003810,0.003513,0.002919,0.001772,-0.000413,-0.004557", \
				        "0.006578,0.006253,0.005585,0.004295,0.001836,-0.002732");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & !B2 & !C1 & C2 | !A2 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003132,0.003368,0.003853,0.004823,0.006768,0.010640", \
				        "0.003128,0.003367,0.003853,0.004819,0.006765,0.010650", \
				        "0.003142,0.003388,0.003871,0.004842,0.006778,0.010647", \
				        "0.003220,0.003458,0.003937,0.004886,0.006817,0.010674", \
				        "0.003441,0.003672,0.004133,0.005064,0.006950,0.010781", \
				        "0.003970,0.004190,0.004628,0.005525,0.007354,0.011101", \
				        "0.005187,0.005378,0.005778,0.006609,0.008352,0.011958", \
				        "0.007854,0.008026,0.008354,0.009074,0.010643,0.014030");
			}
			fall_power(Power_X1) {
				values ("0.003080,0.002824,0.002344,0.001393,-0.000531,-0.004379", \
				        "0.003089,0.002833,0.002354,0.001396,-0.000521,-0.004367", \
				        "0.003094,0.002847,0.002364,0.001408,-0.000514,-0.004365", \
				        "0.003133,0.002883,0.002398,0.001434,-0.000493,-0.004350", \
				        "0.003239,0.002997,0.002510,0.001531,-0.000421,-0.004302", \
				        "0.003615,0.003351,0.002837,0.001818,-0.000183,-0.004117", \
				        "0.004681,0.004394,0.003822,0.002707,0.000567,-0.003534", \
				        "0.007348,0.007028,0.006383,0.005126,0.002715,-0.001775");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.002741,0.002983,0.003471,0.004442,0.006386,0.010261", \
				        "0.002741,0.002987,0.003471,0.004444,0.006388,0.010265", \
				        "0.002764,0.003004,0.003492,0.004459,0.006398,0.010267", \
				        "0.002846,0.003089,0.003561,0.004519,0.006440,0.010300", \
				        "0.003082,0.003306,0.003768,0.004702,0.006592,0.010403", \
				        "0.003629,0.003846,0.004287,0.005178,0.007004,0.010744", \
				        "0.004863,0.005072,0.005466,0.006297,0.008030,0.011645", \
				        "0.007690,0.007824,0.008144,0.008842,0.010397,0.013776");
			}
			fall_power(Power_X1) {
				values ("0.002255,0.002013,0.001521,0.000574,-0.001350,-0.005209", \
				        "0.002264,0.002020,0.001534,0.000579,-0.001347,-0.005203", \
				        "0.002282,0.002034,0.001549,0.000593,-0.001338,-0.005195", \
				        "0.002324,0.002084,0.001595,0.000625,-0.001308,-0.005175", \
				        "0.002463,0.002217,0.001718,0.000735,-0.001226,-0.005120", \
				        "0.002923,0.002644,0.002113,0.001073,-0.000957,-0.004918", \
				        "0.004147,0.003847,0.003247,0.002099,-0.000098,-0.004266", \
				        "0.007019,0.006682,0.006018,0.004730,0.002272,-0.002317");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B2 & C1 & C2 | !A2 & B1 & C1";

			rise_power(Power_X1) {
				values ("0.002838,0.003093,0.003565,0.004545,0.006485,0.010358", \
				        "0.002832,0.003086,0.003570,0.004543,0.006485,0.010365", \
				        "0.002867,0.003105,0.003586,0.004553,0.006492,0.010368", \
				        "0.002945,0.003184,0.003662,0.004612,0.006531,0.010401", \
				        "0.003169,0.003404,0.003866,0.004796,0.006682,0.010501", \
				        "0.003730,0.003944,0.004378,0.005278,0.007102,0.010838", \
				        "0.004963,0.005173,0.005563,0.006394,0.008132,0.011740", \
				        "0.007782,0.007928,0.008246,0.008942,0.010494,0.013875");
			}
			fall_power(Power_X1) {
				values ("0.002234,0.001992,0.001509,0.000555,-0.001364,-0.005217", \
				        "0.002254,0.002002,0.001516,0.000563,-0.001361,-0.005209", \
				        "0.002252,0.002015,0.001529,0.000575,-0.001350,-0.005201", \
				        "0.002303,0.002061,0.001577,0.000609,-0.001323,-0.005182", \
				        "0.002448,0.002194,0.001700,0.000716,-0.001244,-0.005130", \
				        "0.002899,0.002628,0.002096,0.001055,-0.000968,-0.004922", \
				        "0.004117,0.003830,0.003235,0.002087,-0.000104,-0.004269", \
				        "0.007023,0.006680,0.006017,0.004726,0.002268,-0.002317");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.003957,0.003711,0.003222,0.002271,0.000352,-0.003486", \
				        "0.003943,0.003701,0.003222,0.002268,0.000352,-0.003490", \
				        "0.003954,0.003710,0.003225,0.002275,0.000356,-0.003486", \
				        "0.003978,0.003744,0.003253,0.002292,0.000373,-0.003479", \
				        "0.004097,0.003857,0.003367,0.002391,0.000445,-0.003432", \
				        "0.004447,0.004188,0.003685,0.002679,0.000691,-0.003238", \
				        "0.005425,0.005153,0.004611,0.003541,0.001449,-0.002625", \
				        "0.007812,0.007521,0.006928,0.005770,0.003506,-0.000843");
			}
			rise_power(Power_X1) {
				values ("0.003363,0.003611,0.004106,0.005083,0.007023,0.010906", \
				        "0.003343,0.003591,0.004082,0.005056,0.007003,0.010881", \
				        "0.003312,0.003564,0.004043,0.005029,0.006981,0.010879", \
				        "0.003269,0.003520,0.004013,0.004996,0.006958,0.010858", \
				        "0.003296,0.003546,0.004027,0.005002,0.006948,0.010838", \
				        "0.003586,0.003815,0.004272,0.005207,0.007104,0.010940", \
				        "0.004507,0.004703,0.005115,0.005970,0.007753,0.011453", \
				        "0.006754,0.006898,0.007241,0.007967,0.009560,0.012993");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & !B2 & !C1 & C2 | !A1 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.003363,0.003611,0.004106,0.005083,0.007023,0.010906", \
				        "0.003343,0.003591,0.004082,0.005056,0.007003,0.010881", \
				        "0.003312,0.003564,0.004043,0.005029,0.006981,0.010879", \
				        "0.003269,0.003520,0.004013,0.004996,0.006958,0.010858", \
				        "0.003296,0.003546,0.004027,0.005002,0.006948,0.010838", \
				        "0.003586,0.003815,0.004272,0.005207,0.007104,0.010940", \
				        "0.004507,0.004703,0.005115,0.005970,0.007753,0.011453", \
				        "0.006754,0.006898,0.007241,0.007967,0.009560,0.012993");
			}
			fall_power(Power_X1) {
				values ("0.003957,0.003711,0.003222,0.002271,0.000352,-0.003486", \
				        "0.003943,0.003701,0.003222,0.002268,0.000352,-0.003490", \
				        "0.003954,0.003710,0.003225,0.002275,0.000356,-0.003486", \
				        "0.003978,0.003744,0.003253,0.002292,0.000373,-0.003479", \
				        "0.004097,0.003857,0.003367,0.002391,0.000445,-0.003432", \
				        "0.004447,0.004188,0.003685,0.002679,0.000691,-0.003238", \
				        "0.005425,0.005153,0.004611,0.003541,0.001449,-0.002625", \
				        "0.007812,0.007521,0.006928,0.005770,0.003506,-0.000843");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & !B2 & C1 & !C2 | !A1 & !B1 & B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.003130,0.003381,0.003871,0.004843,0.006789,0.010667", \
				        "0.003105,0.003350,0.003839,0.004820,0.006766,0.010650", \
				        "0.003074,0.003322,0.003810,0.004793,0.006747,0.010642", \
				        "0.003037,0.003275,0.003782,0.004766,0.006725,0.010620", \
				        "0.003063,0.003310,0.003796,0.004766,0.006714,0.010603", \
				        "0.003350,0.003578,0.004039,0.004978,0.006865,0.010702", \
				        "0.004289,0.004484,0.004892,0.005740,0.007512,0.011217", \
				        "0.006594,0.006748,0.007060,0.007767,0.009330,0.012760");
			}
			fall_power(Power_X1) {
				values ("0.002896,0.002661,0.002176,0.001223,-0.000695,-0.004543", \
				        "0.002905,0.002662,0.002175,0.001220,-0.000700,-0.004543", \
				        "0.002912,0.002665,0.002181,0.001225,-0.000693,-0.004544", \
				        "0.002943,0.002701,0.002213,0.001249,-0.000678,-0.004533", \
				        "0.003065,0.002820,0.002330,0.001351,-0.000604,-0.004489", \
				        "0.003463,0.003202,0.002682,0.001666,-0.000340,-0.004285", \
				        "0.004517,0.004224,0.003674,0.002584,0.000460,-0.003652", \
				        "0.006982,0.006687,0.006076,0.004887,0.002581,-0.001813");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.002987,0.003231,0.003728,0.004706,0.006640,0.010526", \
				        "0.002965,0.003208,0.003708,0.004673,0.006622,0.010499", \
				        "0.002932,0.003182,0.003660,0.004644,0.006601,0.010489", \
				        "0.002887,0.003135,0.003634,0.004618,0.006577,0.010474", \
				        "0.002922,0.003164,0.003648,0.004619,0.006568,0.010457", \
				        "0.003226,0.003445,0.003901,0.004835,0.006728,0.010555", \
				        "0.004182,0.004377,0.004785,0.005636,0.007417,0.011112", \
				        "0.006532,0.006677,0.007009,0.007715,0.009277,0.012702");
			}
			fall_power(Power_X1) {
				values ("0.003130,0.002888,0.002403,0.001455,-0.000465,-0.004318", \
				        "0.003133,0.002893,0.002403,0.001452,-0.000471,-0.004321", \
				        "0.003139,0.002900,0.002407,0.001455,-0.000465,-0.004319", \
				        "0.003173,0.002934,0.002453,0.001484,-0.000446,-0.004306", \
				        "0.003317,0.003063,0.002576,0.001591,-0.000363,-0.004252", \
				        "0.003718,0.003463,0.002948,0.001927,-0.000089,-0.004045", \
				        "0.004812,0.004542,0.003978,0.002890,0.000759,-0.003355", \
				        "0.007367,0.007068,0.006467,0.005281,0.002983,-0.001428");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2 & C1 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";

			rise_power(Power_X1) {
				values ("0.003086,0.003331,0.003832,0.004805,0.006747,0.010627", \
				        "0.003059,0.003308,0.003807,0.004774,0.006722,0.010611", \
				        "0.003027,0.003273,0.003759,0.004743,0.006702,0.010587", \
				        "0.002984,0.003234,0.003731,0.004717,0.006667,0.010566", \
				        "0.003019,0.003256,0.003743,0.004716,0.006659,0.010554", \
				        "0.003312,0.003543,0.003996,0.004933,0.006817,0.010652", \
				        "0.004277,0.004480,0.004883,0.005735,0.007511,0.011206", \
				        "0.006642,0.006789,0.007105,0.007817,0.009372,0.012798");
			}
			fall_power(Power_X1) {
				values ("0.003111,0.002873,0.002393,0.001437,-0.000482,-0.004322", \
				        "0.003116,0.002847,0.002387,0.001432,-0.000486,-0.004331", \
				        "0.003127,0.002877,0.002387,0.001438,-0.000479,-0.004323", \
				        "0.003167,0.002913,0.002426,0.001466,-0.000458,-0.004313", \
				        "0.003291,0.003043,0.002553,0.001575,-0.000379,-0.004265", \
				        "0.003701,0.003443,0.002926,0.001908,-0.000100,-0.004045", \
				        "0.004801,0.004520,0.003968,0.002876,0.000754,-0.003368", \
				        "0.007340,0.007075,0.006468,0.005282,0.002972,-0.001432");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X1) {
				values ("0.003186,0.002960,0.002475,0.001502,-0.000432,-0.004305", \
				        "0.003183,0.002942,0.002465,0.001504,-0.000425,-0.004285", \
				        "0.003175,0.002930,0.002448,0.001492,-0.000435,-0.004292", \
				        "0.003180,0.002917,0.002438,0.001482,-0.000445,-0.004304", \
				        "0.003167,0.002923,0.002455,0.001490,-0.000443,-0.004301", \
				        "0.003290,0.003056,0.002560,0.001583,-0.000363,-0.004230", \
				        "0.003963,0.003667,0.003142,0.002089,0.000043,-0.003934", \
				        "0.005973,0.005652,0.005046,0.003857,0.001572,-0.002754");
			}
			rise_power(Power_X1) {
				values ("0.005404,0.005654,0.006131,0.007109,0.009045,0.012938", \
				        "0.005404,0.005646,0.006126,0.007100,0.009041,0.012935", \
				        "0.005409,0.005645,0.006131,0.007105,0.009044,0.012936", \
				        "0.005449,0.005696,0.006181,0.007141,0.009073,0.012952", \
				        "0.005635,0.005866,0.006339,0.007287,0.009195,0.013050", \
				        "0.006107,0.006340,0.006798,0.007716,0.009580,0.013357", \
				        "0.007229,0.007457,0.007880,0.008764,0.010545,0.014196", \
				        "0.009717,0.009897,0.010313,0.011122,0.012798,0.016279");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005172,0.005415,0.005903,0.006873,0.008815,0.012701", \
				        "0.005160,0.005409,0.005897,0.006866,0.008811,0.012697", \
				        "0.005170,0.005413,0.005906,0.006869,0.008810,0.012699", \
				        "0.005223,0.005466,0.005945,0.006908,0.008839,0.012712", \
				        "0.005403,0.005636,0.006110,0.007056,0.008961,0.012812", \
				        "0.005875,0.006112,0.006564,0.007484,0.009341,0.013119", \
				        "0.006989,0.007223,0.007649,0.008532,0.010315,0.013966", \
				        "0.009495,0.009667,0.010084,0.010897,0.012569,0.016041");
			}
			fall_power(Power_X1) {
				values ("0.002130,0.001902,0.001416,0.000443,-0.001493,-0.005361", \
				        "0.002130,0.001885,0.001411,0.000447,-0.001484,-0.005348", \
				        "0.002120,0.001880,0.001397,0.000437,-0.001489,-0.005348", \
				        "0.002107,0.001864,0.001384,0.000425,-0.001503,-0.005362", \
				        "0.002115,0.001871,0.001393,0.000433,-0.001498,-0.005361", \
				        "0.002283,0.002024,0.001521,0.000522,-0.001413,-0.005289", \
				        "0.003011,0.002728,0.002173,0.001101,-0.000975,-0.004981", \
				        "0.005127,0.004832,0.004192,0.002969,0.000641,-0.003738");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !B2 & !C1 & C2 | A2 & !B2 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005404,0.005654,0.006131,0.007109,0.009045,0.012938", \
				        "0.005404,0.005646,0.006126,0.007100,0.009041,0.012935", \
				        "0.005409,0.005645,0.006131,0.007105,0.009044,0.012936", \
				        "0.005449,0.005696,0.006181,0.007141,0.009073,0.012952", \
				        "0.005635,0.005866,0.006339,0.007287,0.009195,0.013050", \
				        "0.006107,0.006340,0.006798,0.007716,0.009580,0.013357", \
				        "0.007229,0.007457,0.007880,0.008764,0.010545,0.014196", \
				        "0.009717,0.009897,0.010313,0.011122,0.012798,0.016279");
			}
			fall_power(Power_X1) {
				values ("0.003186,0.002960,0.002475,0.001502,-0.000432,-0.004305", \
				        "0.003183,0.002942,0.002465,0.001504,-0.000425,-0.004285", \
				        "0.003175,0.002930,0.002448,0.001492,-0.000435,-0.004292", \
				        "0.003180,0.002917,0.002438,0.001482,-0.000445,-0.004304", \
				        "0.003167,0.002923,0.002455,0.001490,-0.000443,-0.004301", \
				        "0.003290,0.003056,0.002560,0.001583,-0.000363,-0.004230", \
				        "0.003963,0.003667,0.003142,0.002089,0.000043,-0.003934", \
				        "0.005973,0.005652,0.005046,0.003857,0.001572,-0.002754");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A2 & !B2 & C1 & C2 | A1 & !B2 & C1";

			rise_power(Power_X1) {
				values ("0.005129,0.005363,0.005853,0.006820,0.008766,0.012642", \
				        "0.005114,0.005360,0.005838,0.006812,0.008753,0.012633", \
				        "0.005116,0.005366,0.005847,0.006820,0.008757,0.012630", \
				        "0.005167,0.005418,0.005893,0.006861,0.008792,0.012665", \
				        "0.005379,0.005600,0.006078,0.007024,0.008925,0.012765", \
				        "0.005869,0.006100,0.006555,0.007473,0.009331,0.013096", \
				        "0.007030,0.007250,0.007676,0.008554,0.010340,0.013990", \
				        "0.009580,0.009762,0.010177,0.010985,0.012658,0.016138");
			}
			fall_power(Power_X1) {
				values ("0.002349,0.002116,0.001629,0.000660,-0.001274,-0.005141", \
				        "0.002339,0.002100,0.001624,0.000659,-0.001267,-0.005126", \
				        "0.002339,0.002095,0.001608,0.000649,-0.001275,-0.005133", \
				        "0.002320,0.002082,0.001598,0.000641,-0.001288,-0.005147", \
				        "0.002339,0.002094,0.001617,0.000656,-0.001274,-0.005134", \
				        "0.002537,0.002277,0.001773,0.000783,-0.001174,-0.005051", \
				        "0.003312,0.003048,0.002496,0.001418,-0.000674,-0.004697", \
				        "0.005577,0.005260,0.004626,0.003415,0.001078,-0.003323");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X1) {
				values ("0.003959,0.003737,0.003260,0.002284,0.000350,-0.003515", \
				        "0.003946,0.003704,0.003241,0.002276,0.000350,-0.003508", \
				        "0.003946,0.003703,0.003213,0.002258,0.000335,-0.003518", \
				        "0.003944,0.003700,0.003217,0.002253,0.000327,-0.003533", \
				        "0.003944,0.003704,0.003232,0.002266,0.000331,-0.003528", \
				        "0.004051,0.003811,0.003324,0.002355,0.000413,-0.003455", \
				        "0.004585,0.004335,0.003832,0.002811,0.000804,-0.003149", \
				        "0.006294,0.006016,0.005455,0.004350,0.002185,-0.001998");
			}
			rise_power(Power_X1) {
				values ("0.005785,0.006034,0.006516,0.007490,0.009432,0.013313", \
				        "0.005763,0.006024,0.006500,0.007470,0.009413,0.013302", \
				        "0.005748,0.005986,0.006468,0.007450,0.009397,0.013288", \
				        "0.005713,0.005956,0.006451,0.007428,0.009383,0.013288", \
				        "0.005697,0.005956,0.006447,0.007426,0.009369,0.013270", \
				        "0.005930,0.006168,0.006631,0.007582,0.009497,0.013358", \
				        "0.006709,0.006922,0.007367,0.008267,0.010102,0.013847", \
				        "0.008697,0.008885,0.009289,0.010122,0.011821,0.015361");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & !B1 & C1 & !C2 | !A1 & A2 & !B1 & C1 & !C2";

			rise_power(Power_X1) {
				values ("0.005544,0.005805,0.006285,0.007261,0.009202,0.013085", \
				        "0.005523,0.005780,0.006270,0.007242,0.009183,0.013060", \
				        "0.005528,0.005759,0.006238,0.007217,0.009168,0.013054", \
				        "0.005479,0.005731,0.006220,0.007196,0.009147,0.013044", \
				        "0.005479,0.005729,0.006218,0.007188,0.009137,0.013034", \
				        "0.005700,0.005918,0.006396,0.007352,0.009268,0.013121", \
				        "0.006476,0.006699,0.007136,0.008037,0.009871,0.013615", \
				        "0.008443,0.008660,0.009061,0.009889,0.011594,0.015132");
			}
			fall_power(Power_X1) {
				values ("0.002917,0.002679,0.002201,0.001229,-0.000704,-0.004572", \
				        "0.002900,0.002663,0.002186,0.001225,-0.000703,-0.004565", \
				        "0.002887,0.002651,0.002166,0.001210,-0.000718,-0.004577", \
				        "0.002886,0.002642,0.002163,0.001202,-0.000729,-0.004589", \
				        "0.002892,0.002652,0.002176,0.001213,-0.000721,-0.004586", \
				        "0.003019,0.002772,0.002280,0.001307,-0.000637,-0.004512", \
				        "0.003624,0.003349,0.002833,0.001797,-0.000225,-0.004195", \
				        "0.005409,0.005120,0.004543,0.003412,0.001219,-0.003007");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !B1 & !C1 & C2 | A2 & !B1 & !C1 & C2";

			rise_power(Power_X1) {
				values ("0.005785,0.006034,0.006516,0.007490,0.009432,0.013313", \
				        "0.005763,0.006024,0.006500,0.007470,0.009413,0.013302", \
				        "0.005748,0.005986,0.006468,0.007450,0.009397,0.013288", \
				        "0.005713,0.005956,0.006451,0.007428,0.009383,0.013288", \
				        "0.005697,0.005956,0.006447,0.007426,0.009369,0.013270", \
				        "0.005930,0.006168,0.006631,0.007582,0.009497,0.013358", \
				        "0.006709,0.006922,0.007367,0.008267,0.010102,0.013847", \
				        "0.008697,0.008885,0.009289,0.010122,0.011821,0.015361");
			}
			fall_power(Power_X1) {
				values ("0.003959,0.003737,0.003260,0.002284,0.000350,-0.003515", \
				        "0.003946,0.003704,0.003241,0.002276,0.000350,-0.003508", \
				        "0.003946,0.003703,0.003213,0.002258,0.000335,-0.003518", \
				        "0.003944,0.003700,0.003217,0.002253,0.000327,-0.003533", \
				        "0.003944,0.003704,0.003232,0.002266,0.000331,-0.003528", \
				        "0.004051,0.003811,0.003324,0.002355,0.000413,-0.003455", \
				        "0.004585,0.004335,0.003832,0.002811,0.000804,-0.003149", \
				        "0.006294,0.006016,0.005455,0.004350,0.002185,-0.001998");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & A2 & !B1 & C1 | A1 & !B1 & C1 & C2 | A2 & !B1 & C1 & C2";

			rise_power(Power_X1) {
				values ("0.005504,0.005755,0.006237,0.007211,0.009151,0.013031", \
				        "0.005485,0.005732,0.006217,0.007180,0.009131,0.013012", \
				        "0.005468,0.005706,0.006186,0.007164,0.009116,0.013002", \
				        "0.005429,0.005676,0.006168,0.007146,0.009098,0.012988", \
				        "0.005438,0.005679,0.006162,0.007143,0.009084,0.012978", \
				        "0.005644,0.005884,0.006360,0.007311,0.009218,0.013072", \
				        "0.006462,0.006695,0.007132,0.008030,0.009858,0.013596", \
				        "0.008512,0.008705,0.009120,0.009941,0.011638,0.015178");
			}
			fall_power(Power_X1) {
				values ("0.003128,0.002896,0.002419,0.001441,-0.000491,-0.004353", \
				        "0.003111,0.002873,0.002401,0.001436,-0.000492,-0.004350", \
				        "0.003095,0.002862,0.002378,0.001417,-0.000506,-0.004362", \
				        "0.003095,0.002860,0.002374,0.001413,-0.000515,-0.004375", \
				        "0.003111,0.002872,0.002395,0.001431,-0.000497,-0.004363", \
				        "0.003267,0.003012,0.002524,0.001547,-0.000402,-0.004276", \
				        "0.003900,0.003646,0.003125,0.002088,0.000061,-0.003921", \
				        "0.005775,0.005506,0.004918,0.003792,0.001599,-0.002639");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X1) {
				values ("0.002939,0.002704,0.002226,0.001257,-0.000672,-0.004537", \
				        "0.002943,0.002712,0.002229,0.001255,-0.000674,-0.004539", \
				        "0.002927,0.002693,0.002213,0.001255,-0.000672,-0.004526", \
				        "0.002917,0.002683,0.002200,0.001239,-0.000680,-0.004537", \
				        "0.002910,0.002671,0.002195,0.001238,-0.000689,-0.004544", \
				        "0.003010,0.002770,0.002277,0.001301,-0.000643,-0.004511", \
				        "0.003612,0.003328,0.002808,0.001768,-0.000270,-0.004241", \
				        "0.005504,0.005210,0.004624,0.003471,0.001240,-0.003057");
			}
			rise_power(Power_X1) {
				values ("0.007368,0.007621,0.008103,0.009087,0.011039,0.014951", \
				        "0.007361,0.007600,0.008095,0.009079,0.011029,0.014932", \
				        "0.007354,0.007608,0.008089,0.009072,0.011023,0.014932", \
				        "0.007394,0.007645,0.008129,0.009103,0.011046,0.014947", \
				        "0.007574,0.007794,0.008278,0.009237,0.011161,0.015025", \
				        "0.008015,0.008254,0.008713,0.009646,0.011532,0.015337", \
				        "0.009113,0.009336,0.009783,0.010683,0.012508,0.016210", \
				        "0.011591,0.011786,0.012226,0.013065,0.014789,0.018318");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & B2 & !C2";

			rise_power(Power_X1) {
				values ("0.007361,0.007621,0.008103,0.009087,0.011039,0.014951", \
				        "0.007361,0.007600,0.008095,0.009079,0.011029,0.014932", \
				        "0.007354,0.007608,0.008089,0.009072,0.011023,0.014932", \
				        "0.007394,0.007645,0.008129,0.009103,0.011046,0.014947", \
				        "0.007574,0.007794,0.008271,0.009237,0.011161,0.015023", \
				        "0.008015,0.008250,0.008713,0.009642,0.011522,0.015331", \
				        "0.009105,0.009336,0.009778,0.010668,0.012485,0.016179", \
				        "0.011576,0.011779,0.012185,0.013040,0.014759,0.018286");
			}
			fall_power(Power_X1) {
				values ("0.002939,0.002704,0.002226,0.001257,-0.000672,-0.004537", \
				        "0.002943,0.002712,0.002229,0.001255,-0.000674,-0.004539", \
				        "0.002927,0.002693,0.002213,0.001255,-0.000672,-0.004526", \
				        "0.002917,0.002683,0.002200,0.001239,-0.000680,-0.004537", \
				        "0.002910,0.002671,0.002195,0.001238,-0.000689,-0.004544", \
				        "0.003010,0.002770,0.002277,0.001301,-0.000643,-0.004511", \
				        "0.003612,0.003328,0.002808,0.001768,-0.000270,-0.004241", \
				        "0.005504,0.005210,0.004624,0.003471,0.001240,-0.003057");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";

			rise_power(Power_X1) {
				values ("0.007137,0.007388,0.007869,0.008849,0.010803,0.014712", \
				        "0.007122,0.007370,0.007858,0.008841,0.010794,0.014701", \
				        "0.007123,0.007379,0.007862,0.008840,0.010793,0.014697", \
				        "0.007168,0.007409,0.007893,0.008867,0.010815,0.014712", \
				        "0.007337,0.007560,0.008042,0.009005,0.010924,0.014794", \
				        "0.007784,0.008010,0.008478,0.009413,0.011285,0.015094", \
				        "0.008879,0.009109,0.009546,0.010440,0.012255,0.015945", \
				        "0.011335,0.011540,0.011978,0.012815,0.014520,0.018048");
			}
			fall_power(Power_X1) {
				values ("0.002027,0.001787,0.001304,0.000333,-0.001600,-0.005466", \
				        "0.002033,0.001784,0.001303,0.000330,-0.001602,-0.005469", \
				        "0.002014,0.001773,0.001294,0.000331,-0.001594,-0.005460", \
				        "0.001994,0.001749,0.001275,0.000314,-0.001610,-0.005461", \
				        "0.001982,0.001748,0.001268,0.000310,-0.001619,-0.005476", \
				        "0.002109,0.001857,0.001365,0.000377,-0.001573,-0.005447", \
				        "0.002760,0.002481,0.001951,0.000888,-0.001170,-0.005164", \
				        "0.004750,0.004465,0.003841,0.002668,0.000399,-0.003930");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";

			rise_power(Power_X1) {
				values ("0.007368,0.007603,0.008091,0.009068,0.011020,0.014928", \
				        "0.007344,0.007600,0.008085,0.009054,0.011008,0.014912", \
				        "0.007351,0.007596,0.008077,0.009056,0.011007,0.014912", \
				        "0.007389,0.007640,0.008115,0.009089,0.011034,0.014932", \
				        "0.007553,0.007790,0.008278,0.009229,0.011146,0.015025", \
				        "0.008001,0.008254,0.008708,0.009646,0.011532,0.015337", \
				        "0.009113,0.009334,0.009783,0.010683,0.012508,0.016210", \
				        "0.011591,0.011786,0.012226,0.013065,0.014789,0.018318");
			}
			fall_power(Power_X1) {
				values ("0.002028,0.001784,0.001302,0.000328,-0.001600,-0.005462", \
				        "0.002020,0.001787,0.001300,0.000330,-0.001604,-0.005467", \
				        "0.002009,0.001763,0.001287,0.000329,-0.001599,-0.005459", \
				        "0.001989,0.001755,0.001278,0.000312,-0.001616,-0.005469", \
				        "0.001980,0.001748,0.001269,0.000312,-0.001618,-0.005472", \
				        "0.002098,0.001870,0.001378,0.000389,-0.001563,-0.005443", \
				        "0.002781,0.002515,0.001967,0.000919,-0.001137,-0.005137", \
				        "0.004794,0.004499,0.003898,0.002729,0.000462,-0.003868");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & B1 & !C2";

			rise_power(Power_X1) {
				values ("0.007114,0.007384,0.007852,0.008830,0.010781,0.014680", \
				        "0.007116,0.007358,0.007844,0.008818,0.010773,0.014668", \
				        "0.007119,0.007374,0.007841,0.008816,0.010769,0.014666", \
				        "0.007149,0.007411,0.007888,0.008855,0.010799,0.014693", \
				        "0.007330,0.007570,0.008047,0.009005,0.010922,0.014782", \
				        "0.007785,0.008048,0.008498,0.009431,0.011318,0.015120", \
				        "0.008904,0.009115,0.009589,0.010482,0.012309,0.016015", \
				        "0.011398,0.011596,0.012034,0.012889,0.014613,0.018157");
			}
			fall_power(Power_X1) {
				values ("0.001215,0.000974,0.000484,-0.000492,-0.002423,-0.006298", \
				        "0.001208,0.000972,0.000477,-0.000496,-0.002432,-0.006304", \
				        "0.001197,0.000946,0.000469,-0.000491,-0.002420,-0.006293", \
				        "0.001170,0.000939,0.000455,-0.000507,-0.002437,-0.006298", \
				        "0.001171,0.000932,0.000454,-0.000514,-0.002440,-0.006305", \
				        "0.001351,0.001102,0.000593,-0.000404,-0.002371,-0.006261", \
				        "0.002113,0.001810,0.001273,0.000200,-0.001883,-0.005917", \
				        "0.004253,0.003952,0.003334,0.002137,-0.000166,-0.004546");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X1) {
				values ("0.003955,0.003714,0.003239,0.002271,0.000335,-0.003523", \
				        "0.003948,0.003711,0.003237,0.002268,0.000331,-0.003535", \
				        "0.003931,0.003702,0.003214,0.002258,0.000330,-0.003527", \
				        "0.003923,0.003696,0.003206,0.002247,0.000318,-0.003537", \
				        "0.003929,0.003692,0.003210,0.002249,0.000318,-0.003538", \
				        "0.003981,0.003748,0.003257,0.002293,0.000357,-0.003509", \
				        "0.004384,0.004138,0.003633,0.002635,0.000656,-0.003268", \
				        "0.005865,0.005613,0.005069,0.003998,0.001891,-0.002225");
			}
			rise_power(Power_X1) {
				values ("0.007594,0.007851,0.008342,0.009320,0.011274,0.015183", \
				        "0.007587,0.007832,0.008325,0.009304,0.011255,0.015163", \
				        "0.007558,0.007828,0.008309,0.009291,0.011241,0.015155", \
				        "0.007573,0.007821,0.008310,0.009291,0.011244,0.015159", \
				        "0.007596,0.007846,0.008333,0.009315,0.011262,0.015161", \
				        "0.007820,0.008048,0.008535,0.009484,0.011408,0.015275", \
				        "0.008573,0.008808,0.009262,0.010176,0.012033,0.015799", \
				        "0.010539,0.010751,0.011168,0.012027,0.013786,0.017376");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.007594,0.007851,0.008342,0.009320,0.011274,0.015183", \
				        "0.007587,0.007832,0.008325,0.009304,0.011255,0.015163", \
				        "0.007558,0.007828,0.008309,0.009291,0.011241,0.015155", \
				        "0.007573,0.007821,0.008310,0.009291,0.011244,0.015159", \
				        "0.007595,0.007846,0.008333,0.009315,0.011262,0.015161", \
				        "0.007820,0.008048,0.008535,0.009484,0.011408,0.015275", \
				        "0.008573,0.008797,0.009259,0.010176,0.012021,0.015786", \
				        "0.010536,0.010751,0.011156,0.012013,0.013759,0.017344");
			}
			fall_power(Power_X1) {
				values ("0.003955,0.003714,0.003239,0.002271,0.000335,-0.003523", \
				        "0.003948,0.003711,0.003237,0.002268,0.000331,-0.003535", \
				        "0.003931,0.003702,0.003214,0.002258,0.000330,-0.003527", \
				        "0.003923,0.003696,0.003206,0.002247,0.000318,-0.003537", \
				        "0.003929,0.003692,0.003210,0.002249,0.000318,-0.003538", \
				        "0.003981,0.003748,0.003257,0.002293,0.000357,-0.003509", \
				        "0.004384,0.004138,0.003633,0.002635,0.000656,-0.003268", \
				        "0.005865,0.005613,0.005069,0.003998,0.001891,-0.002225");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.007378,0.007612,0.008111,0.009089,0.011045,0.014943", \
				        "0.007375,0.007600,0.008095,0.009069,0.011022,0.014924", \
				        "0.007355,0.007588,0.008080,0.009055,0.011007,0.014912", \
				        "0.007346,0.007576,0.008081,0.009055,0.011013,0.014921", \
				        "0.007368,0.007620,0.008101,0.009084,0.011030,0.014924", \
				        "0.007576,0.007815,0.008298,0.009255,0.011177,0.015038", \
				        "0.008334,0.008585,0.009028,0.009938,0.011800,0.015559", \
				        "0.010291,0.010510,0.010928,0.011786,0.013524,0.017111");
			}
			fall_power(Power_X1) {
				values ("0.003032,0.002795,0.002318,0.001352,-0.000584,-0.004451", \
				        "0.003031,0.002795,0.002313,0.001345,-0.000595,-0.004464", \
				        "0.003024,0.002776,0.002295,0.001336,-0.000594,-0.004458", \
				        "0.003007,0.002770,0.002286,0.001324,-0.000605,-0.004466", \
				        "0.003011,0.002759,0.002286,0.001326,-0.000607,-0.004471", \
				        "0.003060,0.002826,0.002340,0.001369,-0.000571,-0.004446", \
				        "0.003510,0.003245,0.002733,0.001730,-0.000259,-0.004194", \
				        "0.005081,0.004802,0.004245,0.003149,0.001025,-0.003126");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";

			rise_power(Power_X1) {
				values ("0.007591,0.007841,0.008326,0.009303,0.011254,0.015160", \
				        "0.007585,0.007824,0.008307,0.009282,0.011236,0.015142", \
				        "0.007557,0.007806,0.008296,0.009273,0.011224,0.015130", \
				        "0.007565,0.007815,0.008293,0.009280,0.011236,0.015137", \
				        "0.007596,0.007833,0.008325,0.009296,0.011241,0.015145", \
				        "0.007785,0.008043,0.008526,0.009479,0.011393,0.015262", \
				        "0.008558,0.008808,0.009262,0.010172,0.012033,0.015799", \
				        "0.010539,0.010726,0.011168,0.012027,0.013786,0.017376");
			}
			fall_power(Power_X1) {
				values ("0.003031,0.002799,0.002316,0.001356,-0.000578,-0.004445", \
				        "0.003034,0.002798,0.002315,0.001343,-0.000592,-0.004462", \
				        "0.003031,0.002770,0.002290,0.001337,-0.000594,-0.004458", \
				        "0.003007,0.002773,0.002292,0.001324,-0.000604,-0.004469", \
				        "0.003006,0.002762,0.002284,0.001328,-0.000602,-0.004467", \
				        "0.003072,0.002838,0.002342,0.001377,-0.000567,-0.004440", \
				        "0.003483,0.003274,0.002759,0.001756,-0.000239,-0.004180", \
				        "0.005115,0.004851,0.004288,0.003196,0.001067,-0.003075");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & B1 & !C1";

			rise_power(Power_X1) {
				values ("0.007357,0.007608,0.008093,0.009069,0.011023,0.014914", \
				        "0.007330,0.007585,0.008078,0.009050,0.011000,0.014895", \
				        "0.007336,0.007582,0.008060,0.009033,0.010988,0.014888", \
				        "0.007325,0.007577,0.008061,0.009028,0.010982,0.014880", \
				        "0.007352,0.007602,0.008084,0.009066,0.011003,0.014897", \
				        "0.007548,0.007816,0.008292,0.009247,0.011161,0.015029", \
				        "0.008351,0.008596,0.009041,0.009945,0.011817,0.015580", \
				        "0.010321,0.010505,0.010969,0.011828,0.013594,0.017179");
			}
			fall_power(Power_X1) {
				values ("0.002221,0.001992,0.001501,0.000526,-0.001411,-0.005284", \
				        "0.002229,0.001995,0.001497,0.000521,-0.001415,-0.005292", \
				        "0.002219,0.001958,0.001478,0.000516,-0.001413,-0.005282", \
				        "0.002195,0.001959,0.001476,0.000504,-0.001432,-0.005299", \
				        "0.002192,0.001945,0.001471,0.000508,-0.001427,-0.005294", \
				        "0.002284,0.002028,0.001539,0.000563,-0.001381,-0.005260", \
				        "0.002790,0.002514,0.002011,0.000995,-0.001015,-0.004974", \
				        "0.004519,0.004234,0.003661,0.002545,0.000384,-0.003797");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI222_X2
 Cell Description	: Combinational cell (OAI222_X2) with drive strength X2
*******************************************************************************************/

cell (OAI222_X2) {

	area               	: 2.128000;

	cell_leakage_power 	: 34926.235609;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 5355.148000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 6560.370000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 4733.246000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 9278.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 6560.370000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 6848.435000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 9278.838000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 8744.735000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 4733.239000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 9278.860000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 2050.853000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 6688.646000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 9278.823000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 8744.720000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 6688.644000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 6144.232000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 17772.030000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 40772.100000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 21172.540000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 42160.310000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 40772.060000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 52786.920000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 40701.890000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 51867.530000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 21172.520000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 40701.920000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 18791.920000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 51865.030000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 39243.430000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 50409.100000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 50406.790000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 61572.330000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 17772.040000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 40772.150000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 21172.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 43618.710000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 40772.070000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 52786.950000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 42160.320000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 53325.750000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 21172.540000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 42160.330000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 18791.930000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 53323.080000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 40701.900000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 51867.540000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 51865.010000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 63030.250000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 29790.930000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 52794.690000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 33191.600000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 53330.020000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 52794.620000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 64812.150000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 51871.630000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 63038.280000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 33191.580000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 51871.650000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 30811.150000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 63035.850000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 50413.020000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 61580.030000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 61577.740000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 72744.560000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001177;
		fall_capacitance	: 0.001131;
		rise_capacitance	: 0.001223;
		fall_capacitance_range		(0.000962, 0.001353);
		rise_capacitance_range		(0.001011, 0.001590);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000017,0.000011,0.000007,0.000003,0.000001,-0.000002,-0.000005,-0.000012");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001159;
		fall_capacitance	: 0.001171;
		rise_capacitance	: 0.001146;
		fall_capacitance_range		(0.000930, 0.001358);
		rise_capacitance_range		(0.000969, 0.001442);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000068,0.000046,0.000029,0.000018,0.000011,0.000005,-0.000000,-0.000008");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001159;
		fall_capacitance	: 0.001102;
		rise_capacitance	: 0.001216;
		fall_capacitance_range		(0.000946, 0.001269);
		rise_capacitance_range		(0.001008, 0.001541);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000025,0.000018,0.000013,0.000008,0.000005,0.000001,-0.000003,-0.000010");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001160;
		fall_capacitance	: 0.001161;
		rise_capacitance	: 0.001159;
		fall_capacitance_range		(0.001006, 0.001309);
		rise_capacitance_range		(0.000994, 0.001406);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000021,0.000013,0.000007,0.000004,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.001169;
		fall_capacitance	: 0.001090;
		rise_capacitance	: 0.001247;
		fall_capacitance_range		(0.000985, 0.001207);
		rise_capacitance_range		(0.001021, 0.001541);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000021,0.000015,0.000011,0.000008,0.000004,0.000001,-0.000003,-0.000010");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.001201;
		fall_capacitance	: 0.001182;
		rise_capacitance	: 0.001220;
		fall_capacitance_range		(0.001033, 0.001302);
		rise_capacitance_range		(0.001046, 0.001435);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000016,0.000010,0.000006,0.000003,0.000001,-0.000001,-0.000004,-0.000010");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) & (B1 | B2)) & (C1 | C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031551,0.036253,0.042386,0.054460,0.078000,0.124288", \
				        "0.034489,0.039055,0.045278,0.057380,0.080928,0.127172", \
				        "0.040589,0.045017,0.051014,0.063166,0.086685,0.132811", \
				        "0.052695,0.057620,0.063745,0.075319,0.098241,0.144315", \
				        "0.064822,0.071546,0.079760,0.095334,0.122163,0.168154", \
				        "0.072845,0.081816,0.093018,0.113712,0.149918,0.210354", \
				        "0.067184,0.079359,0.094452,0.122199,0.170800,0.251889", \
				        "0.027508,0.043830,0.064077,0.101414,0.166687,0.275561");
			}
			cell_rise(Timing_X2) {
				values ("0.045422,0.055518,0.069125,0.095244,0.147606,0.251984", \
				        "0.048554,0.058625,0.071996,0.098305,0.150601,0.255080", \
				        "0.055519,0.065354,0.078819,0.104721,0.156814,0.261289", \
				        "0.070665,0.080208,0.093208,0.118667,0.170321,0.274194", \
				        "0.095388,0.107515,0.122609,0.149020,0.199430,0.301867", \
				        "0.132906,0.147851,0.166753,0.200730,0.259653,0.361202", \
				        "0.193818,0.212638,0.235724,0.277864,0.352156,0.478013", \
				        "0.300449,0.323406,0.352106,0.403936,0.495525,0.652800");
			}
			fall_transition(Timing_X2) {
				values ("0.026538,0.030492,0.035595,0.045349,0.065013,0.104451", \
				        "0.026175,0.030319,0.035528,0.045361,0.064962,0.104443", \
				        "0.024981,0.029082,0.034508,0.045075,0.064978,0.104472", \
				        "0.029741,0.032972,0.036963,0.045681,0.064499,0.104462", \
				        "0.041884,0.045513,0.050157,0.058184,0.072933,0.105761", \
				        "0.062682,0.067293,0.073038,0.083138,0.100793,0.131185", \
				        "0.098608,0.104894,0.112477,0.125689,0.148181,0.185853", \
				        "0.162250,0.170960,0.181400,0.199422,0.229511,0.277911");
			}
			rise_transition(Timing_X2) {
				values ("0.077138,0.086495,0.098667,0.123402,0.171743,0.266899", \
				        "0.077145,0.086482,0.098707,0.123385,0.171735,0.266904", \
				        "0.076867,0.086476,0.098676,0.123428,0.171753,0.266913", \
				        "0.079986,0.087890,0.098997,0.123366,0.171741,0.266913", \
				        "0.094151,0.100275,0.109169,0.128411,0.172010,0.266900", \
				        "0.125539,0.131508,0.139670,0.155703,0.189427,0.269588", \
				        "0.176050,0.181547,0.190105,0.208127,0.244420,0.311768", \
				        "0.214318,0.221057,0.231292,0.253201,0.298714,0.385398");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031551,0.036253,0.042386,0.054460,0.078000,0.124288", \
				        "0.034489,0.039055,0.045278,0.057380,0.080928,0.127172", \
				        "0.040589,0.045017,0.051014,0.063166,0.086685,0.132811", \
				        "0.052695,0.057620,0.063745,0.075319,0.098241,0.144315", \
				        "0.064822,0.071546,0.079760,0.095334,0.122163,0.168154", \
				        "0.072845,0.081816,0.093018,0.113712,0.149918,0.210354", \
				        "0.067184,0.079359,0.094452,0.122199,0.170800,0.251889", \
				        "0.027508,0.043830,0.064077,0.101414,0.166687,0.275561");
			}
			cell_rise(Timing_X2) {
				values ("0.045422,0.055518,0.069125,0.095244,0.147606,0.251984", \
				        "0.048554,0.058625,0.071996,0.098305,0.150601,0.255080", \
				        "0.055519,0.065354,0.078819,0.104721,0.156814,0.261289", \
				        "0.070665,0.080208,0.093208,0.118667,0.170321,0.274194", \
				        "0.095388,0.107515,0.122609,0.149020,0.199430,0.301867", \
				        "0.132906,0.147851,0.166753,0.200730,0.259653,0.361202", \
				        "0.193818,0.212638,0.235724,0.277864,0.352156,0.478013", \
				        "0.298917,0.321813,0.350615,0.402516,0.494368,0.652040");
			}
			fall_transition(Timing_X2) {
				values ("0.026538,0.030492,0.035595,0.045349,0.065013,0.104451", \
				        "0.026175,0.030319,0.035528,0.045361,0.064962,0.104443", \
				        "0.024981,0.029082,0.034508,0.045075,0.064978,0.104472", \
				        "0.029741,0.032972,0.036963,0.045681,0.064499,0.104462", \
				        "0.041884,0.045513,0.050157,0.058184,0.072933,0.105761", \
				        "0.062682,0.067293,0.073038,0.083138,0.100793,0.131185", \
				        "0.098608,0.104894,0.112477,0.125689,0.148181,0.185853", \
				        "0.162250,0.170960,0.181400,0.199422,0.229511,0.277911");
			}
			rise_transition(Timing_X2) {
				values ("0.077138,0.086495,0.098667,0.123402,0.171743,0.266899", \
				        "0.077145,0.086482,0.098707,0.123385,0.171735,0.266904", \
				        "0.076867,0.086476,0.098676,0.123428,0.171753,0.266913", \
				        "0.079986,0.087890,0.098997,0.123366,0.171741,0.266913", \
				        "0.094151,0.100275,0.109169,0.128411,0.172010,0.266900", \
				        "0.125539,0.131508,0.139670,0.155703,0.189427,0.269588", \
				        "0.176050,0.181547,0.190105,0.208127,0.244420,0.311768", \
				        "0.261250,0.265838,0.273822,0.291910,0.332344,0.413194");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2 & C1 & !C2 | !A2 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.024462,0.029028,0.035087,0.046940,0.070157,0.116045", \
				        "0.027483,0.031904,0.037974,0.049826,0.073075,0.118926", \
				        "0.034441,0.038431,0.043994,0.055682,0.078835,0.124625", \
				        "0.044038,0.049417,0.056025,0.068143,0.090476,0.136093", \
				        "0.052535,0.059860,0.068788,0.085297,0.113420,0.160047", \
				        "0.055713,0.065590,0.077674,0.099708,0.137727,0.200106", \
				        "0.043535,0.056894,0.073304,0.102994,0.154027,0.237811", \
				        "-0.004734,0.013210,0.035181,0.075089,0.143716,0.256453");
			}
			cell_rise(Timing_X2) {
				values ("0.044572,0.054577,0.068002,0.094123,0.146269,0.250373", \
				        "0.047700,0.057639,0.070832,0.097090,0.149311,0.253429", \
				        "0.054677,0.064464,0.077660,0.103591,0.155524,0.259617", \
				        "0.069798,0.079317,0.092187,0.117570,0.169037,0.272539", \
				        "0.094162,0.106282,0.121358,0.147941,0.198121,0.300224", \
				        "0.131143,0.146099,0.164916,0.199052,0.258130,0.359576", \
				        "0.190968,0.209909,0.233094,0.275313,0.349834,0.475853", \
				        "0.293313,0.316739,0.345833,0.398327,0.490639,0.648522");
			}
			fall_transition(Timing_X2) {
				values ("0.021721,0.025926,0.031014,0.040724,0.060380,0.099727", \
				        "0.020774,0.025205,0.030763,0.040766,0.060453,0.099725", \
				        "0.021070,0.024864,0.029940,0.040099,0.060399,0.099752", \
				        "0.027566,0.030840,0.034810,0.042252,0.060144,0.099728", \
				        "0.039838,0.043487,0.048147,0.056045,0.070754,0.102011", \
				        "0.060735,0.065356,0.071083,0.081127,0.098807,0.129100", \
				        "0.096831,0.103124,0.110709,0.123888,0.146286,0.183746", \
				        "0.160786,0.169511,0.179936,0.197910,0.227789,0.275862");
			}
			rise_transition(Timing_X2) {
				values ("0.052658,0.062828,0.075923,0.101604,0.150922,0.246386", \
				        "0.052660,0.062834,0.075940,0.101601,0.150905,0.246398", \
				        "0.052356,0.062769,0.075901,0.101678,0.150918,0.246400", \
				        "0.055592,0.064248,0.076203,0.101596,0.150889,0.246413", \
				        "0.070873,0.077536,0.086720,0.106693,0.151182,0.246404", \
				        "0.098303,0.105659,0.115139,0.133804,0.168749,0.249124", \
				        "0.142604,0.149702,0.159853,0.180764,0.220745,0.291350", \
				        "0.217721,0.224410,0.234702,0.256463,0.301595,0.387625");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & C1 | !A2 & B1 & B2 & C2 | !A2 & B2 & C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021068,0.024889,0.030005,0.040014,0.059579,0.098161", \
				        "0.024350,0.027968,0.033047,0.043053,0.062641,0.101168", \
				        "0.031419,0.035005,0.039634,0.049218,0.068690,0.107146", \
				        "0.039803,0.044730,0.050651,0.061779,0.080999,0.119193", \
				        "0.046629,0.053417,0.061626,0.076783,0.102567,0.144538", \
				        "0.047137,0.056388,0.067667,0.088163,0.123287,0.180476", \
				        "0.030402,0.043037,0.058476,0.086383,0.134068,0.211677", \
				        "-0.025931,-0.008917,0.011891,0.049615,0.114357,0.219943");
			}
			cell_rise(Timing_X2) {
				values ("0.044452,0.054434,0.067869,0.093990,0.146193,0.250258", \
				        "0.047572,0.057479,0.070695,0.096824,0.149162,0.253270", \
				        "0.054590,0.064378,0.077578,0.103460,0.155362,0.259445", \
				        "0.069862,0.079355,0.092194,0.117605,0.168986,0.272419", \
				        "0.094549,0.106599,0.121672,0.148195,0.198316,0.300313", \
				        "0.132210,0.147131,0.165924,0.199939,0.258869,0.360162", \
				        "0.193763,0.212526,0.235533,0.277592,0.351838,0.477556", \
				        "0.300449,0.323406,0.352106,0.403936,0.495525,0.652800");
			}
			fall_transition(Timing_X2) {
				values ("0.017675,0.021261,0.025758,0.034088,0.050699,0.083838", \
				        "0.016841,0.020560,0.025250,0.033963,0.050663,0.083834", \
				        "0.018345,0.021220,0.025333,0.033420,0.050544,0.083823", \
				        "0.025358,0.028042,0.031401,0.037447,0.051202,0.083685", \
				        "0.037302,0.040562,0.044751,0.051827,0.064307,0.088739", \
				        "0.057659,0.061914,0.067150,0.076140,0.091925,0.118377", \
				        "0.093016,0.098829,0.105837,0.117954,0.138234,0.171762", \
				        "0.155920,0.164072,0.173755,0.190479,0.217996,0.261752");
			}
			rise_transition(Timing_X2) {
				values ("0.052644,0.062848,0.075905,0.101595,0.150904,0.246369", \
				        "0.052639,0.062828,0.075931,0.101605,0.150902,0.246402", \
				        "0.052345,0.062789,0.075882,0.101669,0.150913,0.246405", \
				        "0.055574,0.064280,0.076192,0.101590,0.150888,0.246412", \
				        "0.070624,0.077350,0.086584,0.106603,0.151178,0.246404", \
				        "0.097542,0.104990,0.114593,0.133348,0.168448,0.249033", \
				        "0.140792,0.147903,0.158267,0.179434,0.219717,0.290614", \
				        "0.214318,0.221057,0.231292,0.253201,0.298714,0.385398");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.038408,0.043110,0.049319,0.061449,0.085230,0.131816", \
				        "0.041249,0.045825,0.052039,0.064302,0.088039,0.134573", \
				        "0.046944,0.051586,0.057711,0.070025,0.093726,0.140142", \
				        "0.059842,0.064440,0.070186,0.081752,0.105274,0.151632", \
				        "0.075114,0.081346,0.089083,0.103881,0.129678,0.175434", \
				        "0.087838,0.096144,0.106634,0.126196,0.160825,0.219435", \
				        "0.090419,0.101558,0.115504,0.141295,0.187352,0.265483", \
				        "0.068096,0.082756,0.100831,0.135010,0.195349,0.298302");
			}
			cell_rise(Timing_X2) {
				values ("0.061560,0.071717,0.085195,0.111402,0.163847,0.268191", \
				        "0.064897,0.074946,0.088401,0.114702,0.167226,0.271797", \
				        "0.070626,0.080834,0.094461,0.120734,0.173321,0.278059", \
				        "0.081774,0.091980,0.105621,0.132041,0.184615,0.289444", \
				        "0.100861,0.112721,0.127814,0.155038,0.207533,0.312172", \
				        "0.132849,0.146689,0.164234,0.196497,0.254858,0.360401", \
				        "0.187814,0.205144,0.226379,0.264773,0.333412,0.454533", \
				        "0.284035,0.305896,0.332585,0.380473,0.463876,0.607321");
			}
			fall_transition(Timing_X2) {
				values ("0.030498,0.034475,0.039710,0.049569,0.069348,0.109000", \
				        "0.030556,0.034583,0.039699,0.049578,0.069357,0.109001", \
				        "0.029318,0.033684,0.039228,0.049563,0.069407,0.108933", \
				        "0.032185,0.035490,0.040161,0.049346,0.069033,0.108946", \
				        "0.044282,0.047933,0.052465,0.060536,0.075569,0.109763", \
				        "0.064956,0.069553,0.075332,0.085407,0.103054,0.133453", \
				        "0.099408,0.105644,0.113257,0.126623,0.149607,0.187782", \
				        "0.159144,0.167837,0.178308,0.196498,0.227135,0.276877");
			}
			rise_transition(Timing_X2) {
				values ("0.077144,0.086479,0.098726,0.123373,0.171749,0.266888", \
				        "0.077152,0.086496,0.098700,0.123380,0.171742,0.266891", \
				        "0.077166,0.086463,0.098672,0.123371,0.171742,0.266889", \
				        "0.078566,0.087140,0.098896,0.123383,0.171743,0.266905", \
				        "0.088436,0.095388,0.105315,0.126619,0.171970,0.266903", \
				        "0.111623,0.118053,0.127041,0.145269,0.183463,0.269090", \
				        "0.150162,0.155698,0.164062,0.182032,0.220171,0.296865", \
				        "0.177989,0.183990,0.193405,0.212979,0.254245,0.338251");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.038408,0.043110,0.049319,0.061449,0.085230,0.131816", \
				        "0.041249,0.045825,0.052039,0.064302,0.088039,0.134573", \
				        "0.046944,0.051586,0.057711,0.070025,0.093726,0.140142", \
				        "0.059842,0.064440,0.070186,0.081752,0.105274,0.151632", \
				        "0.075114,0.081346,0.089083,0.103881,0.129678,0.175434", \
				        "0.087838,0.096144,0.106634,0.126196,0.160825,0.219435", \
				        "0.090419,0.101558,0.115504,0.141295,0.187352,0.265483", \
				        "0.068096,0.082756,0.100831,0.135010,0.195349,0.298302");
			}
			cell_rise(Timing_X2) {
				values ("0.061560,0.071717,0.085195,0.111402,0.163847,0.268191", \
				        "0.064897,0.074946,0.088401,0.114702,0.167226,0.271797", \
				        "0.070626,0.080834,0.094461,0.120734,0.173321,0.278059", \
				        "0.081774,0.091980,0.105621,0.132041,0.184615,0.289444", \
				        "0.100861,0.112721,0.127814,0.155038,0.207533,0.312172", \
				        "0.132849,0.146689,0.164234,0.196497,0.254858,0.360401", \
				        "0.187814,0.205144,0.226379,0.264773,0.333412,0.454533", \
				        "0.281715,0.303718,0.330616,0.378807,0.462678,0.606778");
			}
			fall_transition(Timing_X2) {
				values ("0.030498,0.034475,0.039710,0.049569,0.069348,0.109000", \
				        "0.030556,0.034583,0.039699,0.049578,0.069357,0.109001", \
				        "0.029318,0.033684,0.039228,0.049563,0.069407,0.108933", \
				        "0.032185,0.035490,0.040161,0.049346,0.069033,0.108946", \
				        "0.044282,0.047933,0.052465,0.060536,0.075569,0.109763", \
				        "0.064956,0.069553,0.075332,0.085407,0.103054,0.133453", \
				        "0.099408,0.105644,0.113257,0.126623,0.149607,0.187782", \
				        "0.159144,0.167837,0.178308,0.196498,0.227135,0.276877");
			}
			rise_transition(Timing_X2) {
				values ("0.077144,0.086479,0.098726,0.123373,0.171749,0.266888", \
				        "0.077152,0.086496,0.098700,0.123380,0.171742,0.266891", \
				        "0.077166,0.086463,0.098672,0.123371,0.171742,0.266889", \
				        "0.078566,0.087140,0.098896,0.123383,0.171743,0.266905", \
				        "0.088436,0.095388,0.105315,0.126619,0.171970,0.266903", \
				        "0.111623,0.118053,0.127041,0.145269,0.183463,0.269090", \
				        "0.150162,0.155698,0.164062,0.182032,0.220171,0.296865", \
				        "0.216472,0.220887,0.228431,0.245307,0.283009,0.363263");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2 & C1 & !C2 | !A1 & B1 & !B2 & !C1 & C2 | !A1 & B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.030928,0.035561,0.041737,0.053763,0.077246,0.123482", \
				        "0.033736,0.038297,0.044475,0.056566,0.080058,0.126238", \
				        "0.039808,0.044182,0.050185,0.062293,0.085758,0.131861", \
				        "0.051721,0.056730,0.062803,0.074432,0.097317,0.143320", \
				        "0.063697,0.070416,0.078727,0.094319,0.121196,0.167210", \
				        "0.072114,0.081077,0.092268,0.112929,0.149069,0.209435", \
				        "0.069282,0.081239,0.096117,0.123415,0.171383,0.251798", \
				        "0.039966,0.055695,0.075099,0.111021,0.174040,0.280084");
			}
			cell_rise(Timing_X2) {
				values ("0.060696,0.070776,0.084031,0.110246,0.162529,0.266545", \
				        "0.064043,0.073989,0.087235,0.113521,0.165946,0.270143", \
				        "0.069775,0.079908,0.093306,0.119528,0.172044,0.276446", \
				        "0.080925,0.091047,0.104561,0.130841,0.183314,0.287773", \
				        "0.099773,0.111582,0.126538,0.153946,0.206194,0.310523", \
				        "0.131393,0.145212,0.162774,0.194983,0.253447,0.358751", \
				        "0.185935,0.203053,0.224255,0.262863,0.331524,0.452581", \
				        "0.277875,0.300149,0.327228,0.375687,0.459907,0.604050");
			}
			fall_transition(Timing_X2) {
				values ("0.026385,0.030304,0.035278,0.045171,0.064850,0.104299", \
				        "0.025978,0.030129,0.035346,0.045193,0.064817,0.104295", \
				        "0.024943,0.029037,0.034320,0.044929,0.064853,0.104224", \
				        "0.029915,0.033248,0.037195,0.045677,0.064375,0.104244", \
				        "0.042251,0.045877,0.050481,0.058429,0.073080,0.105737", \
				        "0.062667,0.067337,0.073168,0.083275,0.100991,0.131324", \
				        "0.096963,0.103248,0.110965,0.124416,0.147365,0.185533", \
				        "0.156208,0.165141,0.175776,0.194092,0.224758,0.274393");
			}
			rise_transition(Timing_X2) {
				values ("0.052661,0.062806,0.075949,0.101612,0.150907,0.246380", \
				        "0.052651,0.062807,0.075941,0.101614,0.150901,0.246386", \
				        "0.052667,0.062793,0.075898,0.101606,0.150897,0.246397", \
				        "0.054128,0.063491,0.076046,0.101589,0.150902,0.246389", \
				        "0.065272,0.072683,0.082923,0.104876,0.151137,0.246399", \
				        "0.086269,0.093526,0.103466,0.123395,0.162780,0.248620", \
				        "0.121009,0.127745,0.137155,0.156973,0.197488,0.276508", \
				        "0.179905,0.186073,0.195453,0.215007,0.256052,0.339492");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2 & C1 | !A1 & B1 & B2 & C2 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.026254,0.030194,0.035410,0.045622,0.065441,0.104341", \
				        "0.029226,0.033063,0.038318,0.048549,0.068373,0.107242", \
				        "0.036096,0.039566,0.044456,0.054558,0.074355,0.113150", \
				        "0.046758,0.051289,0.056888,0.067396,0.086529,0.125178", \
				        "0.056827,0.063061,0.070653,0.085053,0.109598,0.150408", \
				        "0.062266,0.070708,0.081078,0.100256,0.133688,0.188976", \
				        "0.054713,0.065897,0.079821,0.105500,0.150193,0.224649", \
				        "0.016628,0.031523,0.049844,0.083838,0.143113,0.242342");
			}
			cell_rise(Timing_X2) {
				values ("0.060586,0.070617,0.083911,0.110136,0.162401,0.266425", \
				        "0.063934,0.073845,0.087080,0.113368,0.165792,0.269966", \
				        "0.069666,0.079755,0.093155,0.119423,0.171870,0.276265", \
				        "0.080814,0.090899,0.104428,0.130674,0.183121,0.287563", \
				        "0.099715,0.111507,0.126439,0.153833,0.206031,0.310320", \
				        "0.131898,0.145635,0.163143,0.195278,0.253605,0.358782", \
				        "0.187803,0.205041,0.226097,0.264411,0.332805,0.453521", \
				        "0.284035,0.305896,0.332585,0.380473,0.463876,0.607321");
			}
			fall_transition(Timing_X2) {
				values ("0.021802,0.025225,0.029486,0.037834,0.054378,0.087613", \
				        "0.021105,0.024819,0.029374,0.037666,0.054411,0.087608", \
				        "0.020976,0.024264,0.028458,0.037218,0.054412,0.087646", \
				        "0.027292,0.030095,0.033526,0.039727,0.054409,0.087600", \
				        "0.039390,0.042595,0.046657,0.053627,0.066131,0.091395", \
				        "0.059302,0.063518,0.068827,0.077919,0.093755,0.120183", \
				        "0.093012,0.098831,0.105914,0.118163,0.138914,0.173113", \
				        "0.151726,0.160076,0.169969,0.186920,0.215070,0.259997");
			}
			rise_transition(Timing_X2) {
				values ("0.052640,0.062821,0.075943,0.101608,0.150904,0.246376", \
				        "0.052643,0.062827,0.075928,0.101610,0.150896,0.246374", \
				        "0.052647,0.062819,0.075895,0.101630,0.150896,0.246395", \
				        "0.054117,0.063509,0.076044,0.101594,0.150898,0.246388", \
				        "0.065271,0.072695,0.082942,0.104886,0.151139,0.246401", \
				        "0.085949,0.093244,0.103284,0.123276,0.162732,0.248618", \
				        "0.120039,0.126721,0.136235,0.156265,0.196994,0.276233", \
				        "0.177989,0.183990,0.193405,0.212979,0.254245,0.338251");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.046936,0.051581,0.057654,0.069708,0.093231,0.139500", \
				        "0.050026,0.054593,0.060661,0.072693,0.096230,0.142508", \
				        "0.055431,0.060121,0.066100,0.078078,0.101647,0.147991", \
				        "0.065419,0.070301,0.076623,0.088673,0.112231,0.158612", \
				        "0.079129,0.085092,0.092461,0.106590,0.132187,0.179261", \
				        "0.090971,0.099123,0.109228,0.127953,0.160659,0.216192", \
				        "0.091206,0.102592,0.116750,0.142677,0.187785,0.262079", \
				        "0.060351,0.076566,0.096116,0.132191,0.194863,0.297598");
			}
			cell_rise(Timing_X2) {
				values ("0.079630,0.089783,0.103518,0.130252,0.183106,0.288141", \
				        "0.082498,0.092678,0.106272,0.133093,0.185937,0.291067", \
				        "0.088966,0.099043,0.112548,0.139285,0.192091,0.297148", \
				        "0.102989,0.113201,0.126600,0.152956,0.205318,0.309972", \
				        "0.133914,0.143841,0.156717,0.182468,0.233930,0.337519", \
				        "0.182776,0.195501,0.211890,0.241917,0.295544,0.396436", \
				        "0.257435,0.273683,0.293856,0.331818,0.400192,0.518179", \
				        "0.382492,0.401794,0.427457,0.474119,0.558530,0.706932");
			}
			fall_transition(Timing_X2) {
				values ("0.026233,0.030149,0.035354,0.045156,0.064796,0.104298", \
				        "0.026206,0.030143,0.035325,0.045128,0.064800,0.104300", \
				        "0.026160,0.030045,0.035233,0.045122,0.064836,0.104212", \
				        "0.027803,0.031291,0.036195,0.045520,0.064866,0.104290", \
				        "0.035760,0.039100,0.043661,0.051984,0.068614,0.105007", \
				        "0.052702,0.056417,0.061237,0.069949,0.086070,0.117949", \
				        "0.083172,0.087612,0.093546,0.104003,0.122819,0.155900", \
				        "0.135219,0.141488,0.149173,0.163201,0.187463,0.227964");
			}
			rise_transition(Timing_X2) {
				values ("0.098055,0.107242,0.119537,0.143899,0.192120,0.287567", \
				        "0.098066,0.107256,0.119502,0.143900,0.192096,0.287572", \
				        "0.098029,0.107257,0.119501,0.143927,0.192110,0.287574", \
				        "0.097882,0.107239,0.119558,0.143921,0.192104,0.287557", \
				        "0.104299,0.111999,0.122640,0.144747,0.192100,0.287552", \
				        "0.130802,0.137839,0.146472,0.164095,0.202122,0.288119", \
				        "0.175792,0.183940,0.194731,0.215103,0.252584,0.322343", \
				        "0.199226,0.210743,0.225091,0.252766,0.303756,0.393517");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.039852,0.044410,0.050400,0.062264,0.085503,0.131454", \
				        "0.042937,0.047429,0.053379,0.065298,0.088555,0.134510", \
				        "0.048314,0.052941,0.058746,0.070608,0.093858,0.139887", \
				        "0.057604,0.062604,0.069014,0.081157,0.104456,0.150544", \
				        "0.068572,0.075043,0.082931,0.097661,0.123890,0.171157", \
				        "0.075662,0.084641,0.095725,0.115702,0.149974,0.206923", \
				        "0.069072,0.081674,0.097183,0.125153,0.172731,0.249672", \
				        "0.029146,0.047079,0.068400,0.107373,0.173502,0.280193");
			}
			cell_rise(Timing_X2) {
				values ("0.078517,0.088557,0.102154,0.128793,0.181509,0.286129", \
				        "0.081363,0.091465,0.104939,0.131652,0.184360,0.289075", \
				        "0.087857,0.097833,0.111306,0.137816,0.190477,0.295175", \
				        "0.101859,0.112026,0.125246,0.151500,0.203713,0.307997", \
				        "0.132745,0.142644,0.155498,0.181074,0.232369,0.335521", \
				        "0.181010,0.193675,0.210024,0.240158,0.293964,0.394463", \
				        "0.254600,0.271008,0.291020,0.329144,0.397668,0.515785", \
				        "0.376128,0.396164,0.421555,0.468654,0.553485,0.702426");
			}
			fall_transition(Timing_X2) {
				values ("0.021572,0.025491,0.030657,0.040291,0.060006,0.099379", \
				        "0.021597,0.025496,0.030486,0.040402,0.060060,0.099341", \
				        "0.021616,0.025421,0.030569,0.040385,0.060078,0.099319", \
				        "0.024329,0.027680,0.032151,0.041255,0.060121,0.099391", \
				        "0.033054,0.036271,0.040817,0.048728,0.065010,0.100496", \
				        "0.050231,0.053946,0.058800,0.067477,0.083381,0.114744", \
				        "0.081069,0.085396,0.091292,0.101847,0.120530,0.153412", \
				        "0.133081,0.139400,0.146973,0.161055,0.185270,0.225634");
			}
			rise_transition(Timing_X2) {
				values ("0.074484,0.083912,0.096404,0.121230,0.169858,0.265615", \
				        "0.074484,0.083919,0.096416,0.121229,0.169872,0.265597", \
				        "0.074488,0.083926,0.096398,0.121244,0.169862,0.265626", \
				        "0.074237,0.083916,0.096396,0.121244,0.169864,0.265626", \
				        "0.080936,0.088791,0.099505,0.122111,0.169874,0.265611", \
				        "0.105337,0.113317,0.123147,0.141677,0.179981,0.266220", \
				        "0.143391,0.152820,0.165063,0.187888,0.228635,0.300530", \
				        "0.202440,0.213512,0.228273,0.255685,0.306365,0.395684");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !B2 & !C1 & C2 | A2 & !B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.046936,0.051581,0.057654,0.069708,0.093231,0.139500", \
				        "0.050026,0.054593,0.060661,0.072693,0.096230,0.142508", \
				        "0.055431,0.060121,0.066100,0.078078,0.101647,0.147991", \
				        "0.065419,0.070301,0.076623,0.088673,0.112231,0.158612", \
				        "0.079129,0.085092,0.092461,0.106590,0.132187,0.179261", \
				        "0.090971,0.099123,0.109228,0.127953,0.160659,0.216192", \
				        "0.091206,0.102592,0.116750,0.142677,0.187785,0.262079", \
				        "0.060351,0.076566,0.096116,0.132191,0.194863,0.297598");
			}
			cell_rise(Timing_X2) {
				values ("0.079630,0.089783,0.103518,0.130252,0.183106,0.288141", \
				        "0.082498,0.092678,0.106272,0.133093,0.185937,0.291067", \
				        "0.088966,0.099043,0.112548,0.139285,0.192091,0.297148", \
				        "0.102989,0.113201,0.126600,0.152956,0.205318,0.309972", \
				        "0.133914,0.143841,0.156717,0.182468,0.233930,0.337519", \
				        "0.182776,0.195501,0.211890,0.241917,0.295544,0.396436", \
				        "0.257435,0.273683,0.293856,0.331818,0.400192,0.518179", \
				        "0.380932,0.400801,0.426052,0.472900,0.557581,0.706325");
			}
			fall_transition(Timing_X2) {
				values ("0.026233,0.030149,0.035354,0.045156,0.064796,0.104298", \
				        "0.026206,0.030143,0.035325,0.045128,0.064800,0.104300", \
				        "0.026160,0.030045,0.035233,0.045122,0.064836,0.104212", \
				        "0.027803,0.031291,0.036195,0.045520,0.064866,0.104290", \
				        "0.035760,0.039100,0.043661,0.051984,0.068614,0.105007", \
				        "0.052702,0.056417,0.061237,0.069949,0.086070,0.117949", \
				        "0.083172,0.087612,0.093546,0.104003,0.122819,0.155900", \
				        "0.135219,0.141488,0.149173,0.163201,0.187463,0.227964");
			}
			rise_transition(Timing_X2) {
				values ("0.098055,0.107242,0.119537,0.143899,0.192120,0.287567", \
				        "0.098066,0.107256,0.119502,0.143900,0.192096,0.287572", \
				        "0.098029,0.107257,0.119501,0.143927,0.192110,0.287574", \
				        "0.097882,0.107239,0.119558,0.143921,0.192104,0.287557", \
				        "0.104299,0.111999,0.122640,0.144747,0.192100,0.287552", \
				        "0.130802,0.137839,0.146472,0.164095,0.202122,0.288119", \
				        "0.175792,0.183940,0.194731,0.215103,0.252584,0.322343", \
				        "0.245340,0.254358,0.267032,0.291100,0.337506,0.421933");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A2 & !B2 & C1 & C2 | A1 & !B2 & C1";
			sdf_cond	   : "(A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034131,0.037980,0.043078,0.053118,0.072750,0.111547", \
				        "0.037280,0.041082,0.046111,0.056172,0.075826,0.114634", \
				        "0.042746,0.046650,0.051618,0.061607,0.081256,0.120138", \
				        "0.051283,0.055696,0.061312,0.071938,0.091700,0.130684", \
				        "0.060521,0.066358,0.073459,0.086631,0.109832,0.150962", \
				        "0.064984,0.073194,0.083263,0.101345,0.132308,0.183161", \
				        "0.053942,0.065671,0.079993,0.105709,0.149207,0.218948", \
				        "0.005866,0.022733,0.042692,0.078944,0.140288,0.238399");
			}
			cell_rise(Timing_X2) {
				values ("0.078249,0.088332,0.101891,0.128518,0.181231,0.285864", \
				        "0.081089,0.091177,0.104657,0.131331,0.184073,0.288779", \
				        "0.087611,0.097609,0.111046,0.137559,0.190198,0.294874", \
				        "0.101868,0.112000,0.125192,0.151412,0.203566,0.307791", \
				        "0.133076,0.142926,0.155752,0.181328,0.232538,0.335561", \
				        "0.182049,0.194747,0.210971,0.241037,0.294687,0.395076", \
				        "0.257109,0.273476,0.293453,0.331416,0.399734,0.517559", \
				        "0.382492,0.401794,0.427457,0.474119,0.558530,0.706932");
			}
			fall_transition(Timing_X2) {
				values ("0.017793,0.021085,0.025383,0.033630,0.050222,0.083552", \
				        "0.017775,0.021076,0.025351,0.033672,0.050308,0.083532", \
				        "0.017993,0.021163,0.025266,0.033646,0.050270,0.083591", \
				        "0.021248,0.024078,0.027967,0.035167,0.050616,0.083493", \
				        "0.029712,0.032550,0.036199,0.043091,0.056885,0.085774", \
				        "0.045865,0.049173,0.053412,0.061061,0.074845,0.101449", \
				        "0.074967,0.078861,0.084181,0.093516,0.110085,0.138633", \
				        "0.124523,0.130234,0.137124,0.149731,0.171435,0.207179");
			}
			rise_transition(Timing_X2) {
				values ("0.074478,0.083915,0.096422,0.121224,0.169855,0.265616", \
				        "0.074470,0.083921,0.096443,0.121225,0.169857,0.265607", \
				        "0.074483,0.083921,0.096437,0.121248,0.169854,0.265622", \
				        "0.074249,0.083917,0.096411,0.121239,0.169854,0.265622", \
				        "0.080803,0.088679,0.099494,0.122083,0.169868,0.265606", \
				        "0.104814,0.112869,0.122658,0.141291,0.179752,0.266179", \
				        "0.142010,0.151503,0.163836,0.186775,0.227656,0.299848", \
				        "0.199226,0.210743,0.225091,0.252766,0.303756,0.393517");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.053931,0.058597,0.064777,0.076937,0.100708,0.147301", \
				        "0.056981,0.061578,0.067710,0.079871,0.103648,0.150236", \
				        "0.062360,0.067099,0.073141,0.085236,0.108998,0.155659", \
				        "0.072616,0.077410,0.083674,0.095779,0.119593,0.166234", \
				        "0.088292,0.093902,0.100964,0.114663,0.139814,0.186871", \
				        "0.104089,0.111693,0.121141,0.138895,0.170326,0.224698", \
				        "0.111240,0.121677,0.134835,0.159030,0.201941,0.273765", \
				        "0.094725,0.109175,0.126946,0.160055,0.218539,0.316361");
			}
			cell_rise(Timing_X2) {
				values ("0.096349,0.106510,0.120221,0.146857,0.199761,0.304768", \
				        "0.099813,0.109935,0.123544,0.150347,0.203199,0.308418", \
				        "0.105881,0.116144,0.129716,0.156561,0.209565,0.314781", \
				        "0.116871,0.127305,0.141118,0.167876,0.221083,0.326390", \
				        "0.139799,0.150337,0.163948,0.190829,0.243778,0.349131", \
				        "0.179157,0.191174,0.207154,0.236969,0.292438,0.397000", \
				        "0.245569,0.260085,0.278753,0.313705,0.378236,0.494629", \
				        "0.360090,0.378571,0.400975,0.443529,0.520229,0.656335");
			}
			fall_transition(Timing_X2) {
				values ("0.030367,0.034347,0.039666,0.049558,0.069330,0.109001", \
				        "0.030369,0.034345,0.039562,0.049572,0.069375,0.108962", \
				        "0.030354,0.034336,0.039493,0.049472,0.069342,0.108950", \
				        "0.031245,0.035029,0.040081,0.049639,0.069336,0.108986", \
				        "0.038362,0.041809,0.046543,0.055023,0.072259,0.109490", \
				        "0.054965,0.058700,0.063622,0.072329,0.088790,0.121261", \
				        "0.084389,0.088890,0.094917,0.105617,0.124669,0.158179", \
				        "0.133830,0.140175,0.148000,0.162236,0.186943,0.228297");
			}
			rise_transition(Timing_X2) {
				values ("0.098054,0.107253,0.119525,0.143910,0.192095,0.287546", \
				        "0.098061,0.107248,0.119530,0.143908,0.192080,0.287569", \
				        "0.098046,0.107244,0.119513,0.143881,0.192093,0.287561", \
				        "0.098055,0.107221,0.119530,0.143927,0.192096,0.287561", \
				        "0.101995,0.110276,0.121526,0.144496,0.192085,0.287545", \
				        "0.120565,0.128136,0.137984,0.157490,0.198985,0.288253", \
				        "0.152569,0.160678,0.171195,0.191905,0.232302,0.310979", \
				        "0.167450,0.177050,0.189847,0.214291,0.260901,0.349363");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !B1 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.046573,0.051175,0.057347,0.069387,0.092982,0.139370", \
				        "0.049601,0.054204,0.060245,0.072304,0.095901,0.142303", \
				        "0.054976,0.059667,0.065646,0.077659,0.101265,0.147695", \
				        "0.064925,0.069784,0.076150,0.088263,0.111853,0.158300", \
				        "0.078501,0.084529,0.091907,0.106099,0.131731,0.178932", \
				        "0.090145,0.098413,0.108583,0.127410,0.160200,0.215821", \
				        "0.091468,0.102794,0.116934,0.142831,0.187877,0.262055", \
				        "0.067516,0.083282,0.102330,0.137662,0.198954,0.300152");
			}
			cell_rise(Timing_X2) {
				values ("0.095231,0.105301,0.118857,0.145436,0.198143,0.302780", \
				        "0.098678,0.108712,0.122207,0.148962,0.201711,0.306386", \
				        "0.104757,0.114948,0.128387,0.155163,0.207984,0.312785", \
				        "0.115721,0.126125,0.139791,0.166503,0.219460,0.324405", \
				        "0.138628,0.149117,0.162725,0.189395,0.242205,0.347130", \
				        "0.177666,0.189577,0.205477,0.235291,0.290783,0.394996", \
				        "0.242969,0.257907,0.276470,0.311539,0.376051,0.492367", \
				        "0.354569,0.373312,0.395868,0.438924,0.516158,0.652890");
			}
			fall_transition(Timing_X2) {
				values ("0.025925,0.029852,0.035051,0.044953,0.064771,0.104273", \
				        "0.025928,0.029889,0.035100,0.044959,0.064682,0.104228", \
				        "0.025896,0.029822,0.034998,0.044909,0.064765,0.104210", \
				        "0.027603,0.031154,0.036047,0.045413,0.064766,0.104275", \
				        "0.035616,0.038963,0.043479,0.051887,0.068544,0.105064", \
				        "0.052401,0.056201,0.061135,0.069875,0.086022,0.118003", \
				        "0.081867,0.086350,0.092451,0.103150,0.122328,0.155750", \
				        "0.130797,0.137322,0.145271,0.159685,0.184492,0.225924");
			}
			rise_transition(Timing_X2) {
				values ("0.074457,0.083926,0.096404,0.121252,0.169861,0.265614", \
				        "0.074476,0.083939,0.096415,0.121242,0.169865,0.265612", \
				        "0.074475,0.083915,0.096425,0.121226,0.169871,0.265622", \
				        "0.074464,0.083912,0.096394,0.121229,0.169864,0.265606", \
				        "0.078560,0.086985,0.098428,0.121875,0.169855,0.265597", \
				        "0.095966,0.104066,0.114599,0.135116,0.176793,0.266338", \
				        "0.123885,0.132668,0.144120,0.166347,0.208767,0.289150", \
				        "0.169531,0.179124,0.191851,0.216170,0.262524,0.350566");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !B1 & !C1 & C2 | A2 & !B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.053931,0.058597,0.064777,0.076937,0.100708,0.147301", \
				        "0.056981,0.061578,0.067710,0.079871,0.103648,0.150236", \
				        "0.062360,0.067099,0.073141,0.085236,0.108998,0.155659", \
				        "0.072616,0.077410,0.083674,0.095779,0.119593,0.166234", \
				        "0.088292,0.093902,0.100964,0.114663,0.139814,0.186871", \
				        "0.104089,0.111693,0.121141,0.138895,0.170326,0.224698", \
				        "0.111240,0.121677,0.134835,0.159030,0.201941,0.273765", \
				        "0.094725,0.109175,0.126946,0.160055,0.218539,0.316361");
			}
			cell_rise(Timing_X2) {
				values ("0.096349,0.106510,0.120221,0.146857,0.199761,0.304768", \
				        "0.099813,0.109935,0.123544,0.150347,0.203199,0.308418", \
				        "0.105881,0.116144,0.129716,0.156561,0.209565,0.314781", \
				        "0.116871,0.127305,0.141118,0.167876,0.221083,0.326390", \
				        "0.139799,0.150337,0.163948,0.190829,0.243778,0.349131", \
				        "0.179157,0.191174,0.207154,0.236969,0.292438,0.397000", \
				        "0.245569,0.260085,0.278753,0.313705,0.378236,0.494629", \
				        "0.358076,0.376605,0.399324,0.442148,0.519261,0.656030");
			}
			fall_transition(Timing_X2) {
				values ("0.030367,0.034347,0.039666,0.049558,0.069330,0.109001", \
				        "0.030369,0.034345,0.039562,0.049572,0.069375,0.108962", \
				        "0.030354,0.034336,0.039493,0.049472,0.069342,0.108950", \
				        "0.031245,0.035029,0.040081,0.049639,0.069336,0.108986", \
				        "0.038362,0.041809,0.046543,0.055023,0.072259,0.109490", \
				        "0.054965,0.058700,0.063622,0.072329,0.088790,0.121261", \
				        "0.084389,0.088890,0.094917,0.105617,0.124669,0.158179", \
				        "0.133830,0.140175,0.148000,0.162236,0.186943,0.228297");
			}
			rise_transition(Timing_X2) {
				values ("0.098054,0.107253,0.119525,0.143910,0.192095,0.287546", \
				        "0.098061,0.107248,0.119530,0.143908,0.192080,0.287569", \
				        "0.098046,0.107244,0.119513,0.143881,0.192093,0.287561", \
				        "0.098055,0.107221,0.119530,0.143927,0.192096,0.287561", \
				        "0.101995,0.110276,0.121526,0.144496,0.192085,0.287545", \
				        "0.120565,0.128136,0.137984,0.157490,0.198985,0.288253", \
				        "0.152569,0.160678,0.171195,0.191905,0.232302,0.310979", \
				        "0.205271,0.213392,0.224829,0.246831,0.290315,0.375369");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A2 & !B1 & C1 & C2 | A1 & !B1 & C1";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.039549,0.043458,0.048643,0.058923,0.078888,0.118087", \
				        "0.042658,0.046559,0.051677,0.061928,0.081925,0.121118", \
				        "0.048082,0.052083,0.057177,0.067318,0.087303,0.126542", \
				        "0.057503,0.061778,0.067333,0.077828,0.097762,0.137063", \
				        "0.069247,0.074650,0.081326,0.093938,0.116543,0.157346", \
				        "0.077866,0.085408,0.094703,0.111684,0.141252,0.190803", \
				        "0.074258,0.084818,0.097831,0.121589,0.162709,0.229848", \
				        "0.041390,0.056139,0.073966,0.106819,0.163594,0.256484");
			}
			cell_rise(Timing_X2) {
				values ("0.094960,0.105033,0.118599,0.145154,0.197884,0.302533", \
				        "0.098400,0.108473,0.121954,0.148677,0.201412,0.306112", \
				        "0.104505,0.114699,0.128183,0.154868,0.207690,0.312488", \
				        "0.115576,0.125892,0.139555,0.166275,0.219207,0.324135", \
				        "0.138501,0.148979,0.162549,0.189240,0.242019,0.346887", \
				        "0.178042,0.189922,0.205735,0.235521,0.290894,0.394998", \
				        "0.245260,0.259794,0.278130,0.313073,0.377346,0.493327", \
				        "0.360090,0.378571,0.400975,0.443529,0.520229,0.656335");
			}
			fall_transition(Timing_X2) {
				values ("0.021450,0.024772,0.029162,0.037480,0.054183,0.087620", \
				        "0.021422,0.024728,0.029057,0.037449,0.054174,0.087579", \
				        "0.021426,0.024718,0.029047,0.037378,0.054150,0.087655", \
				        "0.023855,0.026804,0.030790,0.038339,0.054392,0.087642", \
				        "0.031837,0.034691,0.038559,0.045718,0.059692,0.089367", \
				        "0.047635,0.050999,0.055283,0.062920,0.076961,0.104066", \
				        "0.075511,0.079525,0.084963,0.094568,0.111367,0.140413", \
				        "0.122414,0.128366,0.135520,0.148468,0.170573,0.207069");
			}
			rise_transition(Timing_X2) {
				values ("0.074457,0.083915,0.096431,0.121249,0.169850,0.265602", \
				        "0.074480,0.083918,0.096430,0.121244,0.169861,0.265613", \
				        "0.074452,0.083932,0.096438,0.121226,0.169862,0.265621", \
				        "0.074459,0.083908,0.096433,0.121224,0.169857,0.265620", \
				        "0.078546,0.087016,0.098388,0.121877,0.169849,0.265593", \
				        "0.095848,0.103984,0.114468,0.135044,0.176762,0.266334", \
				        "0.122906,0.131897,0.143396,0.165763,0.208367,0.288912", \
				        "0.167450,0.177050,0.189847,0.214291,0.260901,0.349363");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.054667,0.059353,0.065530,0.077551,0.101165,0.147596", \
				        "0.057658,0.062316,0.068436,0.080499,0.104168,0.150619", \
				        "0.062460,0.067213,0.073159,0.085219,0.108871,0.155377", \
				        "0.069933,0.074805,0.081035,0.092897,0.116537,0.163100", \
				        "0.079585,0.084823,0.091621,0.104726,0.129478,0.176409", \
				        "0.088190,0.094928,0.103118,0.118620,0.146849,0.198172", \
				        "0.083632,0.092877,0.104665,0.126119,0.163463,0.226063", \
				        "0.040019,0.054074,0.071069,0.102202,0.155895,0.242865");
			}
			cell_rise(Timing_X2) {
				values ("0.116713,0.126996,0.140463,0.167366,0.220559,0.325535", \
				        "0.119496,0.129756,0.143262,0.170099,0.223358,0.328338", \
				        "0.125796,0.136033,0.149462,0.176245,0.229361,0.334336", \
				        "0.139612,0.149950,0.163224,0.189874,0.242615,0.347268", \
				        "0.170403,0.179762,0.193164,0.219247,0.271153,0.374907", \
				        "0.228531,0.240223,0.254312,0.281649,0.332678,0.434189", \
				        "0.316130,0.330865,0.349083,0.383850,0.447700,0.559191", \
				        "0.456851,0.474247,0.497737,0.540569,0.619773,0.761085");
			}
			fall_transition(Timing_X2) {
				values ("0.025932,0.029826,0.035005,0.044899,0.064762,0.104264", \
				        "0.025922,0.029787,0.035006,0.044904,0.064676,0.104292", \
				        "0.025915,0.029803,0.034949,0.044945,0.064770,0.104259", \
				        "0.026645,0.030339,0.035370,0.045007,0.064659,0.104254", \
				        "0.030482,0.034137,0.039141,0.048533,0.066925,0.104854", \
				        "0.041876,0.045313,0.050104,0.058833,0.076490,0.112499", \
				        "0.067602,0.071502,0.076545,0.085672,0.102540,0.135311", \
				        "0.117195,0.121780,0.127728,0.138866,0.158566,0.192594");
			}
			rise_transition(Timing_X2) {
				values ("0.075544,0.085068,0.097647,0.122381,0.170992,0.267534", \
				        "0.075544,0.085072,0.097651,0.122409,0.170981,0.267530", \
				        "0.075525,0.085069,0.097650,0.122340,0.171004,0.267529", \
				        "0.075531,0.085068,0.097609,0.122357,0.170993,0.267548", \
				        "0.076646,0.085609,0.097776,0.122394,0.170951,0.267541", \
				        "0.094738,0.103119,0.113406,0.133374,0.175367,0.267526", \
				        "0.126350,0.136801,0.150420,0.174691,0.217045,0.292617", \
				        "0.172128,0.185601,0.202568,0.233584,0.288407,0.381706");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.054667,0.059353,0.065530,0.077551,0.101165,0.147596", \
				        "0.057658,0.062316,0.068436,0.080499,0.104168,0.150619", \
				        "0.062460,0.067213,0.073159,0.085219,0.108871,0.155377", \
				        "0.069933,0.074805,0.081035,0.092897,0.116537,0.163100", \
				        "0.079585,0.084823,0.091621,0.104726,0.129478,0.176409", \
				        "0.088190,0.094928,0.103118,0.118620,0.146849,0.198172", \
				        "0.083632,0.092877,0.104665,0.126119,0.163463,0.226063", \
				        "0.040019,0.054074,0.071069,0.102202,0.155895,0.242865");
			}
			cell_rise(Timing_X2) {
				values ("0.110163,0.120769,0.134742,0.162129,0.216011,0.322142", \
				        "0.112940,0.123553,0.137509,0.164858,0.218751,0.324960", \
				        "0.119241,0.129644,0.143701,0.170990,0.224743,0.330937", \
				        "0.132791,0.143433,0.157175,0.184428,0.237862,0.343706", \
				        "0.163361,0.173202,0.186782,0.213485,0.266120,0.370975", \
				        "0.220992,0.232630,0.247683,0.275592,0.326965,0.429573", \
				        "0.307302,0.322595,0.341025,0.376406,0.441023,0.553777", \
				        "0.446860,0.464539,0.488343,0.532073,0.612294,0.754566");
			}
			fall_transition(Timing_X2) {
				values ("0.025932,0.029826,0.035005,0.044899,0.064762,0.104264", \
				        "0.025922,0.029787,0.035006,0.044904,0.064676,0.104292", \
				        "0.025915,0.029803,0.034949,0.044945,0.064770,0.104259", \
				        "0.026645,0.030339,0.035370,0.045007,0.064659,0.104254", \
				        "0.030482,0.034137,0.039141,0.048533,0.066925,0.104854", \
				        "0.041876,0.045313,0.050104,0.058833,0.076490,0.112499", \
				        "0.067602,0.071502,0.076545,0.085672,0.102540,0.135311", \
				        "0.117195,0.121780,0.127728,0.138866,0.158566,0.192594");
			}
			rise_transition(Timing_X2) {
				values ("0.115414,0.124478,0.136670,0.160799,0.208731,0.304337", \
				        "0.115465,0.124450,0.136674,0.160796,0.208730,0.304313", \
				        "0.115428,0.124462,0.136680,0.160793,0.208718,0.304331", \
				        "0.115407,0.124450,0.136666,0.160802,0.208719,0.304332", \
				        "0.116823,0.125120,0.136829,0.160651,0.208745,0.304324", \
				        "0.137060,0.144212,0.153426,0.172809,0.213692,0.304310", \
				        "0.181374,0.189791,0.200661,0.221182,0.258652,0.331058", \
				        "0.245577,0.255646,0.269307,0.294971,0.342700,0.427830");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.047687,0.052302,0.058357,0.070191,0.093511,0.139583", \
				        "0.050677,0.055246,0.061335,0.073164,0.096507,0.142604", \
				        "0.055421,0.060119,0.065975,0.077836,0.101197,0.147374", \
				        "0.062598,0.067468,0.073703,0.085511,0.108882,0.155060", \
				        "0.071107,0.076520,0.083447,0.096664,0.121519,0.168393", \
				        "0.076523,0.083785,0.092603,0.108791,0.137755,0.189529", \
				        "0.065824,0.076141,0.088986,0.111981,0.151329,0.215737", \
				        "0.013117,0.028839,0.047491,0.081131,0.137988,0.228510");
			}
			cell_rise(Timing_X2) {
				values ("0.108913,0.119473,0.133342,0.160663,0.214346,0.320166", \
				        "0.111662,0.122237,0.136040,0.163384,0.217101,0.322982", \
				        "0.117979,0.128363,0.142241,0.169462,0.223110,0.328946", \
				        "0.131497,0.142129,0.155810,0.182900,0.236236,0.341715", \
				        "0.162120,0.171926,0.185394,0.212014,0.264487,0.368992", \
				        "0.219308,0.231015,0.246027,0.274007,0.325356,0.427600", \
				        "0.304684,0.320024,0.338466,0.373941,0.438680,0.551601", \
				        "0.442650,0.460924,0.484353,0.528170,0.608554,0.751002");
			}
			fall_transition(Timing_X2) {
				values ("0.021807,0.025662,0.030729,0.040584,0.060326,0.099748", \
				        "0.021810,0.025612,0.030717,0.040646,0.060359,0.099756", \
				        "0.021799,0.025609,0.030673,0.040641,0.060246,0.099740", \
				        "0.023048,0.026549,0.031389,0.040904,0.060263,0.099690", \
				        "0.027373,0.030857,0.035867,0.044911,0.063077,0.100561", \
				        "0.039799,0.043160,0.047776,0.056158,0.073325,0.108707", \
				        "0.066472,0.070222,0.075156,0.084178,0.100651,0.132634", \
				        "0.117580,0.121946,0.127592,0.138288,0.157635,0.191085");
			}
			rise_transition(Timing_X2) {
				values ("0.093170,0.102563,0.115023,0.139711,0.188324,0.284346", \
				        "0.093159,0.102547,0.115030,0.139708,0.188322,0.284311", \
				        "0.093168,0.102554,0.114988,0.139722,0.188308,0.284332", \
				        "0.093168,0.102540,0.114996,0.139715,0.188312,0.284334", \
				        "0.094583,0.103262,0.115168,0.139568,0.188330,0.284316", \
				        "0.114884,0.122678,0.132095,0.151819,0.193337,0.284309", \
				        "0.153479,0.162956,0.175088,0.197532,0.237622,0.311168", \
				        "0.209385,0.220807,0.236245,0.264405,0.315548,0.404704");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.042675,0.046582,0.051762,0.061884,0.081735,0.120944", \
				        "0.045669,0.049574,0.054714,0.064856,0.084770,0.123982", \
				        "0.050564,0.054554,0.059543,0.069646,0.089555,0.128845", \
				        "0.058209,0.062457,0.067887,0.078069,0.098001,0.137306", \
				        "0.067460,0.072412,0.078700,0.090599,0.112593,0.153222", \
				        "0.072929,0.079945,0.088475,0.104021,0.131252,0.178248", \
				        "0.061580,0.071735,0.084348,0.106876,0.145339,0.207512", \
				        "0.007611,0.023026,0.041498,0.074645,0.130676,0.219719");
			}
			cell_rise(Timing_X2) {
				values ("0.114958,0.125311,0.138927,0.165943,0.219263,0.324593", \
				        "0.117742,0.128113,0.141698,0.168702,0.222066,0.327401", \
				        "0.124082,0.134299,0.147900,0.174778,0.228044,0.333376", \
				        "0.137699,0.148143,0.161547,0.188318,0.241251,0.346266", \
				        "0.168412,0.177878,0.191352,0.217584,0.269637,0.373749", \
				        "0.226236,0.237852,0.252265,0.279749,0.330817,0.432646", \
				        "0.313346,0.328224,0.346367,0.381321,0.445348,0.557185", \
				        "0.453631,0.471054,0.494583,0.537642,0.617035,0.758561");
			}
			fall_transition(Timing_X2) {
				values ("0.019996,0.023148,0.027474,0.035737,0.052337,0.085345", \
				        "0.019987,0.023154,0.027463,0.035655,0.052348,0.085403", \
				        "0.019972,0.023194,0.027437,0.035622,0.052259,0.085332", \
				        "0.021671,0.024601,0.028603,0.036427,0.052356,0.085426", \
				        "0.027279,0.030152,0.034027,0.041459,0.056472,0.086782", \
				        "0.041313,0.044200,0.048051,0.055269,0.069292,0.097886", \
				        "0.069313,0.072572,0.076967,0.085060,0.099793,0.127031", \
				        "0.121902,0.125807,0.130726,0.140410,0.158179,0.189178");
			}
			rise_transition(Timing_X2) {
				values ("0.094801,0.104399,0.117034,0.142020,0.190952,0.287289", \
				        "0.094803,0.104410,0.117019,0.142012,0.190955,0.287297", \
				        "0.094802,0.104390,0.117023,0.142002,0.190970,0.287287", \
				        "0.094781,0.104403,0.117005,0.142009,0.190959,0.287294", \
				        "0.096103,0.105070,0.117217,0.142009,0.190952,0.287299", \
				        "0.116052,0.123830,0.133450,0.153555,0.195668,0.287269", \
				        "0.155258,0.164572,0.176941,0.199338,0.239291,0.313235", \
				        "0.211624,0.223316,0.238402,0.266566,0.317621,0.406502");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & B1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.032037,0.035013,0.038958,0.046739,0.062192,0.093026", \
				        "0.035307,0.038316,0.042218,0.050028,0.065530,0.096357", \
				        "0.041125,0.044219,0.048033,0.055850,0.071347,0.102222", \
				        "0.049069,0.052820,0.057437,0.066038,0.082107,0.113082", \
				        "0.056544,0.061597,0.067806,0.079103,0.098932,0.133313", \
				        "0.057059,0.064625,0.073717,0.089897,0.117283,0.161704", \
				        "0.036876,0.048337,0.062150,0.086354,0.126423,0.189249", \
				        "-0.030133,-0.012775,0.007673,0.043597,0.102655,0.194236");
			}
			cell_rise(Timing_X2) {
				values ("0.116713,0.126996,0.140463,0.167366,0.220559,0.325535", \
				        "0.119496,0.129756,0.143262,0.170099,0.223358,0.328338", \
				        "0.125796,0.136033,0.149462,0.176245,0.229361,0.334336", \
				        "0.139612,0.149950,0.163224,0.189874,0.242615,0.347268", \
				        "0.170403,0.179762,0.193164,0.219247,0.271153,0.374907", \
				        "0.228531,0.240223,0.254312,0.281649,0.332678,0.434189", \
				        "0.316130,0.330865,0.349083,0.383850,0.447700,0.559191", \
				        "0.456851,0.474247,0.497737,0.540569,0.619773,0.761085");
			}
			fall_transition(Timing_X2) {
				values ("0.012653,0.015272,0.018494,0.025214,0.038512,0.064898", \
				        "0.012671,0.015280,0.018561,0.025197,0.038536,0.064936", \
				        "0.013039,0.015442,0.018667,0.025253,0.038523,0.065009", \
				        "0.016399,0.018677,0.021605,0.027352,0.039265,0.065008", \
				        "0.024203,0.026544,0.029576,0.035454,0.046527,0.068728", \
				        "0.039732,0.042370,0.045829,0.052282,0.063886,0.085591", \
				        "0.069984,0.072671,0.076510,0.083794,0.097305,0.121139", \
				        "0.126861,0.129659,0.133345,0.141496,0.157540,0.186225");
			}
			rise_transition(Timing_X2) {
				values ("0.075544,0.085068,0.097647,0.122381,0.170992,0.267534", \
				        "0.075544,0.085072,0.097651,0.122409,0.170981,0.267530", \
				        "0.075525,0.085069,0.097650,0.122340,0.171004,0.267529", \
				        "0.075531,0.085068,0.097609,0.122357,0.170993,0.267548", \
				        "0.076646,0.085609,0.097776,0.122394,0.170951,0.267541", \
				        "0.094738,0.103119,0.113406,0.133374,0.175367,0.267526", \
				        "0.126350,0.136801,0.150420,0.174691,0.217045,0.292617", \
				        "0.172128,0.185601,0.202568,0.233584,0.288407,0.381706");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.061622,0.066344,0.072503,0.084650,0.108391,0.155007", \
				        "0.064576,0.069237,0.075387,0.087520,0.111317,0.157938", \
				        "0.069366,0.074146,0.080084,0.092233,0.116009,0.162661", \
				        "0.077006,0.081802,0.088027,0.099988,0.123716,0.170414", \
				        "0.087458,0.092586,0.099290,0.112256,0.136838,0.183748", \
				        "0.098140,0.104457,0.112293,0.127377,0.155114,0.206025", \
				        "0.098237,0.106948,0.117998,0.138259,0.174160,0.235352", \
				        "0.066214,0.078840,0.094547,0.123394,0.173894,0.257285");
			}
			cell_rise(Timing_X2) {
				values ("0.127244,0.137545,0.151039,0.177971,0.231072,0.336037", \
				        "0.130784,0.141065,0.154510,0.181398,0.234592,0.339610", \
				        "0.137072,0.147410,0.160904,0.187729,0.240948,0.345981", \
				        "0.148792,0.159100,0.172651,0.199598,0.252771,0.357802", \
				        "0.172942,0.182974,0.196597,0.223386,0.276218,0.381112", \
				        "0.219227,0.231018,0.245545,0.273388,0.326272,0.430265", \
				        "0.297297,0.311067,0.327314,0.359747,0.420760,0.532377", \
				        "0.427744,0.443238,0.464349,0.502997,0.574991,0.705154");
			}
			fall_transition(Timing_X2) {
				values ("0.030361,0.034307,0.039638,0.049572,0.069378,0.108945", \
				        "0.030364,0.034261,0.039616,0.049485,0.069365,0.108972", \
				        "0.030359,0.034249,0.039622,0.049532,0.069377,0.108933", \
				        "0.030814,0.034636,0.039688,0.049571,0.069369,0.108983", \
				        "0.034321,0.038044,0.043145,0.052605,0.071132,0.109443", \
				        "0.044671,0.048196,0.053153,0.062146,0.080218,0.116626", \
				        "0.069420,0.073339,0.078449,0.087744,0.104870,0.138528", \
				        "0.117000,0.121906,0.128004,0.139168,0.159026,0.193604");
			}
			rise_transition(Timing_X2) {
				values ("0.075534,0.085068,0.097660,0.122364,0.170961,0.267511", \
				        "0.075529,0.085058,0.097653,0.122353,0.170962,0.267511", \
				        "0.075533,0.085066,0.097641,0.122412,0.171006,0.267541", \
				        "0.075543,0.085051,0.097612,0.122343,0.170982,0.267538", \
				        "0.076353,0.085581,0.097795,0.122402,0.171014,0.267532", \
				        "0.088747,0.097501,0.108612,0.130152,0.174416,0.267567", \
				        "0.110737,0.120595,0.133288,0.157228,0.201615,0.285027", \
				        "0.146099,0.157390,0.172004,0.199199,0.249394,0.341743");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.061622,0.066344,0.072503,0.084650,0.108391,0.155007", \
				        "0.064576,0.069237,0.075387,0.087520,0.111317,0.157938", \
				        "0.069366,0.074146,0.080084,0.092233,0.116009,0.162661", \
				        "0.077006,0.081802,0.088027,0.099988,0.123716,0.170414", \
				        "0.087458,0.092586,0.099290,0.112256,0.136838,0.183748", \
				        "0.098140,0.104457,0.112293,0.127377,0.155114,0.206025", \
				        "0.098237,0.106948,0.117998,0.138259,0.174160,0.235352", \
				        "0.066214,0.078840,0.094547,0.123394,0.173894,0.257285");
			}
			cell_rise(Timing_X2) {
				values ("0.120700,0.131302,0.145316,0.172776,0.226516,0.332608", \
				        "0.124255,0.134844,0.148839,0.176202,0.230006,0.336134", \
				        "0.130570,0.141224,0.155181,0.182556,0.236413,0.342603", \
				        "0.142314,0.152865,0.166930,0.194441,0.248261,0.354430", \
				        "0.166202,0.176778,0.190664,0.218068,0.271697,0.377654", \
				        "0.212592,0.223787,0.239000,0.267575,0.321131,0.426354", \
				        "0.288270,0.302250,0.319499,0.352560,0.414335,0.527502", \
				        "0.416678,0.433876,0.453981,0.493696,0.566759,0.698409");
			}
			fall_transition(Timing_X2) {
				values ("0.030361,0.034307,0.039638,0.049572,0.069378,0.108945", \
				        "0.030364,0.034261,0.039616,0.049485,0.069365,0.108972", \
				        "0.030359,0.034249,0.039622,0.049532,0.069377,0.108933", \
				        "0.030814,0.034636,0.039688,0.049571,0.069369,0.108983", \
				        "0.034321,0.038044,0.043145,0.052605,0.071132,0.109443", \
				        "0.044671,0.048196,0.053153,0.062146,0.080218,0.116626", \
				        "0.069420,0.073339,0.078449,0.087744,0.104870,0.138528", \
				        "0.117000,0.121906,0.128004,0.139168,0.159026,0.193604");
			}
			rise_transition(Timing_X2) {
				values ("0.115456,0.124453,0.136675,0.160796,0.208734,0.304336", \
				        "0.115446,0.124470,0.136679,0.160793,0.208729,0.304344", \
				        "0.115476,0.124453,0.136672,0.160792,0.208718,0.304334", \
				        "0.115427,0.124456,0.136676,0.160802,0.208726,0.304318", \
				        "0.116425,0.125070,0.136896,0.160727,0.208720,0.304342", \
				        "0.130300,0.138101,0.148148,0.169066,0.212467,0.304432", \
				        "0.160320,0.168927,0.179644,0.201016,0.242106,0.322657", \
				        "0.207705,0.216504,0.228855,0.252451,0.297931,0.384763");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.054346,0.058993,0.065123,0.077065,0.100589,0.146892", \
				        "0.057288,0.061898,0.067989,0.079874,0.103481,0.149794", \
				        "0.062055,0.066791,0.072672,0.084656,0.108206,0.154590", \
				        "0.069555,0.074380,0.080601,0.092418,0.115937,0.162314", \
				        "0.079083,0.084337,0.091123,0.104194,0.128871,0.175676", \
				        "0.087124,0.093862,0.102159,0.117766,0.146081,0.197393", \
				        "0.081867,0.091440,0.103265,0.124932,0.162435,0.225182", \
				        "0.042334,0.056126,0.073095,0.103905,0.157027,0.243444");
			}
			cell_rise(Timing_X2) {
				values ("0.119451,0.129979,0.143870,0.171246,0.224852,0.330641", \
				        "0.123003,0.133532,0.147379,0.174703,0.228342,0.334162", \
				        "0.129287,0.139910,0.153793,0.181039,0.234780,0.340616", \
				        "0.141063,0.151577,0.165549,0.192926,0.246646,0.352441", \
				        "0.164940,0.175462,0.189257,0.216539,0.270056,0.375668", \
				        "0.211061,0.222255,0.237394,0.265958,0.319514,0.424373", \
				        "0.286192,0.300226,0.317408,0.350488,0.412283,0.525332", \
				        "0.413611,0.430761,0.451070,0.490797,0.563903,0.695510");
			}
			fall_transition(Timing_X2) {
				values ("0.026407,0.030268,0.035516,0.045286,0.065071,0.104469", \
				        "0.026404,0.030272,0.035407,0.045258,0.065052,0.104449", \
				        "0.026387,0.030200,0.035371,0.045283,0.065049,0.104492", \
				        "0.027210,0.030873,0.035873,0.045450,0.064985,0.104463", \
				        "0.031078,0.034694,0.039750,0.048993,0.067280,0.105109", \
				        "0.042406,0.045873,0.050614,0.059357,0.076956,0.112838", \
				        "0.067992,0.071816,0.076803,0.085956,0.102797,0.135650", \
				        "0.116711,0.121389,0.127282,0.138303,0.157897,0.191942");
			}
			rise_transition(Timing_X2) {
				values ("0.093165,0.102559,0.114998,0.139709,0.188326,0.284340", \
				        "0.093181,0.102553,0.114977,0.139718,0.188319,0.284334", \
				        "0.093144,0.102547,0.115007,0.139702,0.188313,0.284319", \
				        "0.093160,0.102555,0.114989,0.139713,0.188321,0.284314", \
				        "0.094176,0.103185,0.115218,0.139651,0.188333,0.284344", \
				        "0.108046,0.116474,0.126897,0.148088,0.192110,0.284432", \
				        "0.134899,0.144137,0.155619,0.178285,0.221122,0.302760", \
				        "0.176945,0.187013,0.200386,0.225622,0.273336,0.362659");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.048166,0.052096,0.057368,0.067576,0.087629,0.127052", \
				        "0.051117,0.055089,0.060261,0.070525,0.090602,0.130062", \
				        "0.056024,0.060052,0.065081,0.075295,0.095373,0.134854", \
				        "0.064101,0.068300,0.073629,0.083852,0.103909,0.143382", \
				        "0.074707,0.079435,0.085542,0.097198,0.118904,0.159327", \
				        "0.083106,0.089589,0.097603,0.112447,0.138847,0.185162", \
				        "0.077286,0.086694,0.098328,0.119431,0.156092,0.216448", \
				        "0.036474,0.050010,0.066773,0.097107,0.149437,0.234442");
			}
			cell_rise(Timing_X2) {
				values ("0.125487,0.135827,0.149465,0.176511,0.229788,0.335098", \
				        "0.129056,0.139402,0.152961,0.179978,0.233304,0.338635", \
				        "0.135384,0.145781,0.159393,0.186372,0.239665,0.345036", \
				        "0.147117,0.157487,0.171135,0.198227,0.251547,0.356879", \
				        "0.171136,0.181376,0.194989,0.221972,0.274988,0.380212", \
				        "0.217656,0.228908,0.243657,0.271704,0.324747,0.429139", \
				        "0.294491,0.308296,0.324842,0.357390,0.418623,0.530724", \
				        "0.424109,0.439504,0.460731,0.499743,0.571995,0.702550");
			}
			fall_transition(Timing_X2) {
				values ("0.023966,0.027203,0.031503,0.039703,0.056195,0.089353", \
				        "0.023968,0.027171,0.031476,0.039713,0.056289,0.089378", \
				        "0.023916,0.027144,0.031429,0.039673,0.056273,0.089372", \
				        "0.025162,0.028084,0.032114,0.040090,0.056225,0.089377", \
				        "0.030259,0.033204,0.037207,0.044749,0.059784,0.090551", \
				        "0.043538,0.046494,0.050460,0.057743,0.072002,0.100980", \
				        "0.070543,0.073911,0.078289,0.086569,0.101516,0.129249", \
				        "0.120737,0.124905,0.130202,0.140225,0.158243,0.189678");
			}
			rise_transition(Timing_X2) {
				values ("0.094783,0.104383,0.117027,0.142005,0.190956,0.287292", \
				        "0.094808,0.104392,0.117036,0.142007,0.190952,0.287294", \
				        "0.094787,0.104402,0.117025,0.142008,0.190962,0.287298", \
				        "0.094784,0.104392,0.117008,0.142010,0.190957,0.287297", \
				        "0.095699,0.105001,0.117217,0.141999,0.190978,0.287283", \
				        "0.109481,0.117902,0.128466,0.150072,0.194561,0.287342", \
				        "0.136450,0.145747,0.157472,0.180289,0.223228,0.305205", \
				        "0.178559,0.188996,0.202188,0.227574,0.275387,0.364863");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & B1 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.035683,0.038782,0.042883,0.050930,0.066695,0.097803", \
				        "0.038958,0.042064,0.046137,0.054151,0.069927,0.101048", \
				        "0.044908,0.048070,0.052047,0.059987,0.075765,0.106926", \
				        "0.053959,0.057570,0.062087,0.070555,0.086581,0.117765", \
				        "0.063680,0.068396,0.074248,0.085038,0.104316,0.138254", \
				        "0.067807,0.074704,0.083124,0.098365,0.124657,0.167895", \
				        "0.054221,0.064567,0.077149,0.099514,0.137444,0.198093", \
				        "0.002269,0.017285,0.035409,0.067767,0.122388,0.209280");
			}
			cell_rise(Timing_X2) {
				values ("0.127244,0.137545,0.151039,0.177971,0.231072,0.336037", \
				        "0.130784,0.141065,0.154510,0.181398,0.234592,0.339610", \
				        "0.137072,0.147410,0.160904,0.187729,0.240948,0.345981", \
				        "0.148792,0.159100,0.172651,0.199598,0.252771,0.357802", \
				        "0.172942,0.182974,0.196597,0.223386,0.276218,0.381112", \
				        "0.219227,0.231018,0.245545,0.273388,0.326272,0.430265", \
				        "0.297297,0.311067,0.327314,0.359747,0.420760,0.532377", \
				        "0.427744,0.443238,0.464349,0.502997,0.574991,0.705154");
			}
			fall_transition(Timing_X2) {
				values ("0.016005,0.018638,0.022009,0.028566,0.041826,0.068227", \
				        "0.016023,0.018608,0.021981,0.028558,0.041826,0.068253", \
				        "0.016184,0.018672,0.022027,0.028517,0.041813,0.068234", \
				        "0.019062,0.021365,0.024331,0.030193,0.042313,0.068206", \
				        "0.026663,0.028958,0.032109,0.037848,0.048867,0.071472", \
				        "0.041755,0.044361,0.047880,0.054321,0.065970,0.087754", \
				        "0.070592,0.073519,0.077499,0.084978,0.098591,0.122752", \
				        "0.123835,0.127351,0.131732,0.140562,0.157170,0.186382");
			}
			rise_transition(Timing_X2) {
				values ("0.075534,0.085068,0.097660,0.122364,0.170961,0.267511", \
				        "0.075529,0.085058,0.097653,0.122353,0.170962,0.267511", \
				        "0.075533,0.085066,0.097641,0.122412,0.171006,0.267541", \
				        "0.075543,0.085051,0.097612,0.122343,0.170982,0.267538", \
				        "0.076353,0.085581,0.097795,0.122402,0.171014,0.267532", \
				        "0.088747,0.097501,0.108612,0.130152,0.174416,0.267567", \
				        "0.110737,0.120595,0.133288,0.157228,0.201615,0.285027", \
				        "0.146099,0.157390,0.172004,0.199199,0.249394,0.341743");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.004987,0.004294,0.003325,0.001411,-0.002431,-0.010133", \
				        "0.005029,0.004308,0.003334,0.001428,-0.002422,-0.010123", \
				        "0.005050,0.004329,0.003365,0.001448,-0.002400,-0.010103", \
				        "0.005150,0.004454,0.003447,0.001509,-0.002359,-0.010080", \
				        "0.005404,0.004659,0.003680,0.001710,-0.002201,-0.009972", \
				        "0.006298,0.005479,0.004426,0.002355,-0.001673,-0.009579", \
				        "0.008689,0.007830,0.006627,0.004338,-0.000026,-0.008318", \
				        "0.014456,0.013435,0.012107,0.009523,0.004615,-0.004548");
			}
			rise_power(Power_X2) {
				values ("0.005020,0.005750,0.006721,0.008669,0.012564,0.020325", \
				        "0.005001,0.005745,0.006721,0.008677,0.012567,0.020315", \
				        "0.005062,0.005790,0.006762,0.008700,0.012570,0.020340", \
				        "0.005251,0.005962,0.006905,0.008815,0.012655,0.020369", \
				        "0.005755,0.006418,0.007336,0.009176,0.012952,0.020590", \
				        "0.006926,0.007543,0.008386,0.010149,0.013801,0.021256", \
				        "0.009504,0.010060,0.010849,0.012442,0.015884,0.023055", \
				        "0.015160,0.015643,0.016275,0.017640,0.020686,0.027390");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.005020,0.005750,0.006721,0.008669,0.012564,0.020325", \
				        "0.005001,0.005745,0.006721,0.008677,0.012567,0.020315", \
				        "0.005062,0.005790,0.006762,0.008700,0.012570,0.020340", \
				        "0.005251,0.005962,0.006905,0.008815,0.012655,0.020369", \
				        "0.005755,0.006418,0.007336,0.009176,0.012952,0.020590", \
				        "0.006926,0.007543,0.008386,0.010149,0.013801,0.021256", \
				        "0.009504,0.010060,0.010849,0.012442,0.015884,0.023055", \
				        "0.015160,0.015643,0.016275,0.017640,0.020686,0.027390");
			}
			fall_power(Power_X2) {
				values ("0.004987,0.004294,0.003325,0.001411,-0.002431,-0.010133", \
				        "0.005029,0.004308,0.003334,0.001428,-0.002422,-0.010123", \
				        "0.005050,0.004329,0.003365,0.001448,-0.002400,-0.010103", \
				        "0.005150,0.004454,0.003447,0.001509,-0.002359,-0.010080", \
				        "0.005404,0.004659,0.003680,0.001710,-0.002201,-0.009972", \
				        "0.006298,0.005479,0.004426,0.002355,-0.001673,-0.009579", \
				        "0.008689,0.007830,0.006627,0.004338,-0.000026,-0.008318", \
				        "0.014456,0.013435,0.012107,0.009523,0.004615,-0.004548");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2 & C1 & !C2 | !A2 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.004332,0.005037,0.005998,0.007962,0.011862,0.019597", \
				        "0.004290,0.005024,0.006009,0.007963,0.011847,0.019618", \
				        "0.004339,0.005067,0.006052,0.007983,0.011865,0.019623", \
				        "0.004510,0.005236,0.006191,0.008099,0.011938,0.019659", \
				        "0.005025,0.005703,0.006624,0.008468,0.012232,0.019867", \
				        "0.006207,0.006823,0.007687,0.009443,0.013083,0.020547", \
				        "0.008896,0.009396,0.010143,0.011754,0.015178,0.022361", \
				        "0.014652,0.015103,0.015695,0.017006,0.020004,0.026669");
			}
			fall_power(Power_X2) {
				values ("0.003679,0.002949,0.001972,0.000050,-0.003797,-0.011504", \
				        "0.003673,0.002965,0.001981,0.000065,-0.003780,-0.011506", \
				        "0.003708,0.002972,0.002013,0.000093,-0.003771,-0.011484", \
				        "0.003802,0.003077,0.002104,0.000157,-0.003714,-0.011449", \
				        "0.004143,0.003358,0.002359,0.000379,-0.003551,-0.011354", \
				        "0.005128,0.004290,0.003198,0.001087,-0.002988,-0.010938", \
				        "0.007732,0.006808,0.005572,0.003211,-0.001247,-0.009626", \
				        "0.013677,0.012608,0.011245,0.008589,0.003561,-0.005731");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & C1 | !A2 & B1 & B2 & C2 | !A2 & B2 & C1 & C2";

			rise_power(Power_X2) {
				values ("0.004300,0.005018,0.006000,0.007951,0.011836,0.019597", \
				        "0.004266,0.005014,0.005997,0.007950,0.011840,0.019601", \
				        "0.004343,0.005064,0.006033,0.007973,0.011852,0.019607", \
				        "0.004535,0.005231,0.006190,0.008097,0.011931,0.019637", \
				        "0.005048,0.005726,0.006642,0.008488,0.012244,0.019867", \
				        "0.006257,0.006884,0.007739,0.009507,0.013138,0.020598", \
				        "0.008972,0.009503,0.010259,0.011874,0.015301,0.022478", \
				        "0.014946,0.015343,0.015917,0.017243,0.020248,0.026937");
			}
			fall_power(Power_X2) {
				values ("0.003656,0.002939,0.001974,0.000051,-0.003795,-0.011510", \
				        "0.003693,0.002956,0.001982,0.000058,-0.003788,-0.011500", \
				        "0.003692,0.002971,0.002016,0.000097,-0.003772,-0.011493", \
				        "0.003809,0.003086,0.002116,0.000173,-0.003701,-0.011442", \
				        "0.004160,0.003403,0.002392,0.000401,-0.003537,-0.011325", \
				        "0.005202,0.004381,0.003289,0.001164,-0.002931,-0.010900", \
				        "0.007972,0.007021,0.005785,0.003418,-0.001064,-0.009488", \
				        "0.014093,0.013023,0.011668,0.009011,0.003992,-0.005326");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.006411,0.005673,0.004712,0.002797,-0.001043,-0.008725", \
				        "0.006388,0.005675,0.004706,0.002796,-0.001045,-0.008736", \
				        "0.006441,0.005690,0.004718,0.002806,-0.001036,-0.008731", \
				        "0.006483,0.005756,0.004790,0.002860,-0.001009,-0.008713", \
				        "0.006759,0.006008,0.005034,0.003075,-0.000833,-0.008603", \
				        "0.007570,0.006787,0.005768,0.003721,-0.000293,-0.008196", \
				        "0.009752,0.008918,0.007805,0.005616,0.001368,-0.006861", \
				        "0.014872,0.013978,0.012747,0.010373,0.005768,-0.003064");
			}
			rise_power(Power_X2) {
				values ("0.005502,0.006258,0.007224,0.009177,0.013072,0.020831", \
				        "0.005453,0.006198,0.007171,0.009144,0.013041,0.020808", \
				        "0.005385,0.006126,0.007121,0.009094,0.013009,0.020797", \
				        "0.005326,0.006076,0.007060,0.009033,0.012954,0.020756", \
				        "0.005464,0.006191,0.007158,0.009084,0.012970,0.020738", \
				        "0.006229,0.006878,0.007768,0.009601,0.013360,0.020992", \
				        "0.008296,0.008853,0.009650,0.011313,0.014813,0.022149", \
				        "0.013155,0.013594,0.014214,0.015583,0.018647,0.025418");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.005502,0.006258,0.007224,0.009177,0.013072,0.020831", \
				        "0.005453,0.006198,0.007171,0.009144,0.013041,0.020808", \
				        "0.005385,0.006126,0.007121,0.009094,0.013009,0.020797", \
				        "0.005326,0.006076,0.007060,0.009033,0.012954,0.020756", \
				        "0.005464,0.006191,0.007158,0.009084,0.012970,0.020738", \
				        "0.006229,0.006878,0.007768,0.009601,0.013360,0.020992", \
				        "0.008296,0.008853,0.009650,0.011313,0.014813,0.022149", \
				        "0.013155,0.013594,0.014214,0.015583,0.018647,0.025418");
			}
			fall_power(Power_X2) {
				values ("0.006411,0.005673,0.004712,0.002797,-0.001043,-0.008725", \
				        "0.006388,0.005675,0.004706,0.002796,-0.001045,-0.008736", \
				        "0.006441,0.005690,0.004718,0.002806,-0.001036,-0.008731", \
				        "0.006483,0.005756,0.004790,0.002860,-0.001009,-0.008713", \
				        "0.006759,0.006008,0.005034,0.003075,-0.000833,-0.008603", \
				        "0.007570,0.006787,0.005768,0.003721,-0.000293,-0.008196", \
				        "0.009752,0.008918,0.007805,0.005616,0.001368,-0.006861", \
				        "0.014872,0.013978,0.012747,0.010373,0.005768,-0.003064");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2 & C1 & !C2 | !A1 & B1 & !B2 & !C1 & C2 | !A1 & B1 & !B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.004787,0.005538,0.006512,0.008468,0.012364,0.020114", \
				        "0.004749,0.005472,0.006458,0.008425,0.012317,0.020101", \
				        "0.004662,0.005410,0.006402,0.008378,0.012298,0.020077", \
				        "0.004614,0.005353,0.006353,0.008314,0.012245,0.020035", \
				        "0.004755,0.005473,0.006440,0.008372,0.012257,0.020027", \
				        "0.005526,0.006174,0.007058,0.008888,0.012650,0.020275", \
				        "0.007654,0.008197,0.008969,0.010621,0.014100,0.021428", \
				        "0.012630,0.013046,0.013625,0.014969,0.017986,0.024713");
			}
			fall_power(Power_X2) {
				values ("0.005066,0.004331,0.003353,0.001445,-0.002402,-0.010113", \
				        "0.005036,0.004331,0.003349,0.001437,-0.002412,-0.010113", \
				        "0.005057,0.004335,0.003365,0.001450,-0.002409,-0.010125", \
				        "0.005149,0.004429,0.003452,0.001512,-0.002356,-0.010089", \
				        "0.005459,0.004701,0.003703,0.001738,-0.002186,-0.009985", \
				        "0.006359,0.005567,0.004509,0.002442,-0.001615,-0.009546", \
				        "0.008724,0.007823,0.006682,0.004450,0.000139,-0.008167", \
				        "0.013964,0.013017,0.011769,0.009344,0.004657,-0.004260");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2 & C1 | !A1 & B1 & B2 & C2 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";

			rise_power(Power_X2) {
				values ("0.004756,0.005508,0.006500,0.008457,0.012364,0.020105", \
				        "0.004738,0.005459,0.006448,0.008411,0.012303,0.020086", \
				        "0.004653,0.005404,0.006388,0.008363,0.012276,0.020070", \
				        "0.004611,0.005340,0.006340,0.008311,0.012219,0.020018", \
				        "0.004750,0.005489,0.006438,0.008353,0.012244,0.020014", \
				        "0.005527,0.006182,0.007078,0.008908,0.012656,0.020285", \
				        "0.007721,0.008272,0.009041,0.010678,0.014180,0.021502", \
				        "0.012841,0.013246,0.013823,0.015140,0.018158,0.024911");
			}
			fall_power(Power_X2) {
				values ("0.005060,0.004324,0.003345,0.001436,-0.002409,-0.010116", \
				        "0.005049,0.004317,0.003346,0.001428,-0.002418,-0.010124", \
				        "0.005057,0.004332,0.003369,0.001447,-0.002407,-0.010119", \
				        "0.005167,0.004439,0.003464,0.001522,-0.002356,-0.010085", \
				        "0.005478,0.004730,0.003731,0.001760,-0.002165,-0.009966", \
				        "0.006440,0.005632,0.004575,0.002501,-0.001561,-0.009503", \
				        "0.008863,0.007982,0.006840,0.004605,0.000285,-0.008043", \
				        "0.014313,0.013364,0.012113,0.009689,0.004999,-0.003928");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X2) {
				values ("0.005142,0.004437,0.003476,0.001544,-0.002321,-0.010055", \
				        "0.005139,0.004409,0.003461,0.001539,-0.002315,-0.010027", \
				        "0.005098,0.004395,0.003436,0.001520,-0.002340,-0.010061", \
				        "0.005082,0.004375,0.003423,0.001491,-0.002360,-0.010087", \
				        "0.005118,0.004412,0.003461,0.001533,-0.002322,-0.010054", \
				        "0.005562,0.004785,0.003788,0.001808,-0.002112,-0.009890", \
				        "0.007201,0.006369,0.005249,0.003073,-0.001115,-0.009171", \
				        "0.011784,0.010825,0.009534,0.007082,0.002373,-0.006469");
			}
			rise_power(Power_X2) {
				values ("0.008540,0.009265,0.010237,0.012189,0.016072,0.023827", \
				        "0.008543,0.009262,0.010223,0.012182,0.016060,0.023818", \
				        "0.008540,0.009265,0.010233,0.012183,0.016053,0.023824", \
				        "0.008661,0.009386,0.010344,0.012273,0.016126,0.023869", \
				        "0.009087,0.009788,0.010715,0.012603,0.016398,0.024067", \
				        "0.010142,0.010814,0.011724,0.013533,0.017220,0.024731", \
				        "0.012577,0.013184,0.014041,0.015750,0.019289,0.026539", \
				        "0.017799,0.018374,0.019174,0.020757,0.024023,0.030893");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.008077,0.008789,0.009756,0.011702,0.015601,0.023351", \
				        "0.008037,0.008781,0.009740,0.011694,0.015586,0.023339", \
				        "0.008073,0.008784,0.009762,0.011700,0.015577,0.023343", \
				        "0.008176,0.008912,0.009865,0.011791,0.015638,0.023374", \
				        "0.008608,0.009307,0.010240,0.012122,0.015915,0.023576", \
				        "0.009685,0.010339,0.011246,0.013054,0.016732,0.024244", \
				        "0.012098,0.012744,0.013569,0.015282,0.018811,0.026055", \
				        "0.017375,0.017942,0.018703,0.020285,0.023543,0.030418");
			}
			fall_power(Power_X2) {
				values ("0.003481,0.002759,0.001788,-0.000148,-0.004012,-0.011749", \
				        "0.003460,0.002728,0.001770,-0.000149,-0.004008,-0.011715", \
				        "0.003433,0.002705,0.001743,-0.000174,-0.004023,-0.011753", \
				        "0.003397,0.002681,0.001732,-0.000194,-0.004054,-0.011781", \
				        "0.003456,0.002741,0.001776,-0.000153,-0.004011,-0.011744", \
				        "0.003960,0.003181,0.002160,0.000160,-0.003788,-0.011573", \
				        "0.005793,0.004924,0.003766,0.001545,-0.002697,-0.010822", \
				        "0.010600,0.009602,0.008265,0.005741,0.000934,-0.008011");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !B2 & !C1 & C2 | A2 & !B2 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.008540,0.009265,0.010237,0.012189,0.016072,0.023827", \
				        "0.008543,0.009262,0.010223,0.012182,0.016060,0.023818", \
				        "0.008540,0.009265,0.010233,0.012183,0.016053,0.023824", \
				        "0.008661,0.009386,0.010344,0.012273,0.016126,0.023869", \
				        "0.009087,0.009788,0.010715,0.012603,0.016398,0.024067", \
				        "0.010142,0.010814,0.011724,0.013533,0.017220,0.024731", \
				        "0.012577,0.013184,0.014041,0.015750,0.019289,0.026539", \
				        "0.017799,0.018374,0.019174,0.020757,0.024023,0.030893");
			}
			fall_power(Power_X2) {
				values ("0.005142,0.004437,0.003476,0.001544,-0.002321,-0.010055", \
				        "0.005139,0.004409,0.003461,0.001539,-0.002315,-0.010027", \
				        "0.005098,0.004395,0.003436,0.001520,-0.002340,-0.010061", \
				        "0.005082,0.004375,0.003423,0.001491,-0.002360,-0.010087", \
				        "0.005118,0.004412,0.003461,0.001533,-0.002322,-0.010054", \
				        "0.005562,0.004785,0.003788,0.001808,-0.002112,-0.009890", \
				        "0.007201,0.006369,0.005249,0.003073,-0.001115,-0.009171", \
				        "0.011784,0.010825,0.009534,0.007082,0.002373,-0.006469");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A2 & !B2 & C1 & C2 | A1 & !B2 & C1";

			rise_power(Power_X2) {
				values ("0.007946,0.008679,0.009653,0.011600,0.015486,0.023241", \
				        "0.007932,0.008670,0.009645,0.011579,0.015464,0.023219", \
				        "0.007974,0.008679,0.009640,0.011589,0.015478,0.023230", \
				        "0.008086,0.008807,0.009773,0.011690,0.015539,0.023274", \
				        "0.008562,0.009248,0.010178,0.012063,0.015847,0.023496", \
				        "0.009664,0.010325,0.011223,0.013031,0.016713,0.024210", \
				        "0.012142,0.012784,0.013611,0.015333,0.018861,0.026115", \
				        "0.017540,0.018089,0.018873,0.020440,0.023726,0.030608");
			}
			fall_power(Power_X2) {
				values ("0.003829,0.003120,0.002146,0.000216,-0.003645,-0.011375", \
				        "0.003793,0.003097,0.002129,0.000212,-0.003643,-0.011355", \
				        "0.003794,0.003089,0.002104,0.000186,-0.003665,-0.011385", \
				        "0.003736,0.003052,0.002105,0.000181,-0.003680,-0.011409", \
				        "0.003848,0.003115,0.002157,0.000234,-0.003624,-0.011356", \
				        "0.004442,0.003636,0.002610,0.000598,-0.003361,-0.011160", \
				        "0.006396,0.005504,0.004353,0.002126,-0.002149,-0.010319", \
				        "0.011377,0.010365,0.009072,0.006554,0.001744,-0.007228");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X2) {
				values ("0.006427,0.005712,0.004748,0.002822,-0.001046,-0.008772", \
				        "0.006403,0.005679,0.004717,0.002799,-0.001055,-0.008761", \
				        "0.006346,0.005658,0.004701,0.002775,-0.001082,-0.008807", \
				        "0.006378,0.005651,0.004698,0.002769,-0.001096,-0.008829", \
				        "0.006377,0.005688,0.004742,0.002815,-0.001050,-0.008788", \
				        "0.006732,0.006019,0.005031,0.003064,-0.000842,-0.008614", \
				        "0.008131,0.007335,0.006285,0.004198,0.000118,-0.007869", \
				        "0.012013,0.011116,0.009946,0.007677,0.003251,-0.005272");
			}
			rise_power(Power_X2) {
				values ("0.009259,0.010003,0.010977,0.012909,0.016794,0.024558", \
				        "0.009275,0.009956,0.010925,0.012875,0.016769,0.024524", \
				        "0.009180,0.009911,0.010882,0.012839,0.016737,0.024504", \
				        "0.009127,0.009855,0.010847,0.012802,0.016703,0.024488", \
				        "0.009163,0.009897,0.010874,0.012819,0.016706,0.024473", \
				        "0.009725,0.010431,0.011358,0.013243,0.017045,0.024708", \
				        "0.011552,0.012185,0.013065,0.014812,0.018421,0.025835", \
				        "0.015819,0.016388,0.017183,0.018781,0.022117,0.029101");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !B1 & C1 & !C2";

			rise_power(Power_X2) {
				values ("0.008788,0.009522,0.010494,0.012441,0.016315,0.024072", \
				        "0.008728,0.009471,0.010445,0.012407,0.016298,0.024042", \
				        "0.008697,0.009435,0.010409,0.012364,0.016266,0.024032", \
				        "0.008632,0.009378,0.010359,0.012324,0.016227,0.024011", \
				        "0.008670,0.009420,0.010393,0.012336,0.016221,0.023994", \
				        "0.009265,0.009948,0.010888,0.012758,0.016565,0.024228", \
				        "0.011063,0.011717,0.012574,0.014329,0.017953,0.025346", \
				        "0.015365,0.015929,0.016709,0.018321,0.021636,0.028605");
			}
			fall_power(Power_X2) {
				values ("0.004757,0.004038,0.003067,0.001133,-0.002731,-0.010467", \
				        "0.004724,0.003997,0.003039,0.001117,-0.002739,-0.010459", \
				        "0.004704,0.003978,0.003015,0.001095,-0.002768,-0.010487", \
				        "0.004695,0.003980,0.003012,0.001078,-0.002786,-0.010524", \
				        "0.004733,0.004013,0.003055,0.001129,-0.002737,-0.010478", \
				        "0.005107,0.004370,0.003384,0.001411,-0.002510,-0.010298", \
				        "0.006628,0.005815,0.004738,0.002621,-0.001494,-0.009534", \
				        "0.010664,0.009758,0.008568,0.006243,0.001745,-0.006846");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !B1 & !C1 & C2 | A2 & !B1 & !C1 & C2";

			rise_power(Power_X2) {
				values ("0.009259,0.010003,0.010977,0.012909,0.016794,0.024558", \
				        "0.009275,0.009956,0.010925,0.012875,0.016769,0.024524", \
				        "0.009180,0.009911,0.010882,0.012839,0.016737,0.024504", \
				        "0.009127,0.009855,0.010847,0.012802,0.016703,0.024488", \
				        "0.009163,0.009897,0.010874,0.012819,0.016706,0.024473", \
				        "0.009725,0.010431,0.011358,0.013243,0.017045,0.024708", \
				        "0.011552,0.012185,0.013065,0.014812,0.018421,0.025835", \
				        "0.015819,0.016388,0.017183,0.018781,0.022117,0.029101");
			}
			fall_power(Power_X2) {
				values ("0.006427,0.005712,0.004748,0.002822,-0.001046,-0.008772", \
				        "0.006403,0.005679,0.004717,0.002799,-0.001055,-0.008761", \
				        "0.006346,0.005658,0.004701,0.002775,-0.001082,-0.008807", \
				        "0.006378,0.005651,0.004698,0.002769,-0.001096,-0.008829", \
				        "0.006377,0.005688,0.004742,0.002815,-0.001050,-0.008788", \
				        "0.006732,0.006019,0.005031,0.003064,-0.000842,-0.008614", \
				        "0.008131,0.007335,0.006285,0.004198,0.000118,-0.007869", \
				        "0.012013,0.011116,0.009946,0.007677,0.003251,-0.005272");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A2 & !B1 & C1 & C2 | A1 & !B1 & C1";

			rise_power(Power_X2) {
				values ("0.008665,0.009409,0.010383,0.012327,0.016207,0.023967", \
				        "0.008641,0.009371,0.010339,0.012282,0.016176,0.023938", \
				        "0.008595,0.009311,0.010302,0.012258,0.016145,0.023919", \
				        "0.008565,0.009289,0.010251,0.012204,0.016119,0.023903", \
				        "0.008593,0.009337,0.010294,0.012231,0.016122,0.023888", \
				        "0.009226,0.009877,0.010816,0.012690,0.016486,0.024140", \
				        "0.011073,0.011713,0.012574,0.014330,0.017939,0.025327", \
				        "0.015473,0.016038,0.016834,0.018435,0.021759,0.028721");
			}
			fall_power(Power_X2) {
				values ("0.005089,0.004402,0.003425,0.001497,-0.002360,-0.010094", \
				        "0.005087,0.004349,0.003399,0.001476,-0.002383,-0.010098", \
				        "0.005051,0.004343,0.003384,0.001449,-0.002405,-0.010131", \
				        "0.005052,0.004335,0.003386,0.001447,-0.002419,-0.010151", \
				        "0.005114,0.004389,0.003431,0.001511,-0.002354,-0.010088", \
				        "0.005549,0.004805,0.003808,0.001827,-0.002096,-0.009891", \
				        "0.007150,0.006323,0.005259,0.003141,-0.000988,-0.009036", \
				        "0.011366,0.010466,0.009268,0.006942,0.002442,-0.006169");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X2) {
				values ("0.004819,0.004112,0.003136,0.001202,-0.002660,-0.010397", \
				        "0.004796,0.004115,0.003140,0.001206,-0.002654,-0.010387", \
				        "0.004790,0.004058,0.003108,0.001190,-0.002659,-0.010371", \
				        "0.004754,0.004032,0.003084,0.001164,-0.002681,-0.010393", \
				        "0.004766,0.004040,0.003089,0.001172,-0.002687,-0.010420", \
				        "0.005117,0.004360,0.003370,0.001387,-0.002524,-0.010292", \
				        "0.006611,0.005811,0.004729,0.002591,-0.001566,-0.009614", \
				        "0.011037,0.010119,0.008874,0.006501,0.001905,-0.006854");
			}
			rise_power(Power_X2) {
				values ("0.011742,0.012475,0.013440,0.015403,0.019293,0.027085", \
				        "0.011714,0.012449,0.013421,0.015375,0.019275,0.027076", \
				        "0.011708,0.012453,0.013428,0.015374,0.019270,0.027167", \
				        "0.011806,0.012551,0.013517,0.015454,0.019333,0.027098", \
				        "0.012225,0.012915,0.013859,0.015767,0.019578,0.027284", \
				        "0.013217,0.013906,0.014829,0.016666,0.020375,0.027950", \
				        "0.015621,0.016255,0.017119,0.018874,0.022451,0.029771", \
				        "0.020841,0.021399,0.022265,0.023882,0.027247,0.034219");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & B2 & !C2";

			rise_power(Power_X2) {
				values ("0.011742,0.012475,0.013440,0.015403,0.019293,0.027085", \
				        "0.011714,0.012449,0.013421,0.015375,0.019275,0.027076", \
				        "0.011708,0.012453,0.013428,0.015374,0.019270,0.027167", \
				        "0.011806,0.012551,0.013517,0.015454,0.019333,0.027098", \
				        "0.012225,0.012915,0.013859,0.015767,0.019578,0.027284", \
				        "0.013217,0.013906,0.014829,0.016666,0.020375,0.027950", \
				        "0.015621,0.016255,0.017119,0.018874,0.022451,0.029771", \
				        "0.020836,0.021399,0.022265,0.023882,0.027234,0.034194");
			}
			fall_power(Power_X2) {
				values ("0.004819,0.004112,0.003136,0.001202,-0.002660,-0.010397", \
				        "0.004796,0.004115,0.003140,0.001206,-0.002654,-0.010387", \
				        "0.004790,0.004058,0.003108,0.001190,-0.002659,-0.010371", \
				        "0.004754,0.004032,0.003084,0.001164,-0.002681,-0.010393", \
				        "0.004766,0.004040,0.003089,0.001172,-0.002687,-0.010420", \
				        "0.005117,0.004360,0.003370,0.001387,-0.002524,-0.010292", \
				        "0.006611,0.005811,0.004729,0.002591,-0.001566,-0.009614", \
				        "0.011037,0.010119,0.008874,0.006501,0.001905,-0.006854");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";

			rise_power(Power_X2) {
				values ("0.011266,0.011995,0.012974,0.014914,0.018813,0.026602", \
				        "0.011222,0.011979,0.012948,0.014904,0.018800,0.026591", \
				        "0.011267,0.011982,0.012946,0.014894,0.018786,0.026585", \
				        "0.011348,0.012081,0.013035,0.014969,0.018843,0.026612", \
				        "0.011742,0.012434,0.013386,0.015286,0.019103,0.026796", \
				        "0.012743,0.013436,0.014353,0.016187,0.019898,0.027464", \
				        "0.015118,0.015787,0.016647,0.018396,0.021973,0.029286", \
				        "0.020350,0.020981,0.021783,0.023417,0.026766,0.033711");
			}
			fall_power(Power_X2) {
				values ("0.003341,0.002636,0.001655,-0.000280,-0.004143,-0.011893", \
				        "0.003317,0.002620,0.001657,-0.000321,-0.004144,-0.011885", \
				        "0.003299,0.002582,0.001626,-0.000296,-0.004146,-0.011870", \
				        "0.003266,0.002557,0.001599,-0.000330,-0.004176,-0.011888", \
				        "0.003284,0.002564,0.001601,-0.000329,-0.004187,-0.011911", \
				        "0.003686,0.002930,0.001921,-0.000070,-0.004003,-0.011780", \
				        "0.005359,0.004503,0.003393,0.001212,-0.002983,-0.011074", \
				        "0.009973,0.008987,0.007721,0.005287,0.000620,-0.008225");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";

			rise_power(Power_X2) {
				values ("0.011656,0.012375,0.013347,0.015301,0.019209,0.026988", \
				        "0.011631,0.012362,0.013331,0.015288,0.019182,0.026975", \
				        "0.011612,0.012360,0.013338,0.015278,0.019183,0.026970", \
				        "0.011745,0.012486,0.013431,0.015367,0.019248,0.027008", \
				        "0.012150,0.012841,0.013804,0.015693,0.019509,0.027217", \
				        "0.013161,0.013854,0.014760,0.016608,0.020336,0.027894", \
				        "0.015514,0.016197,0.017077,0.018833,0.022432,0.029759", \
				        "0.020841,0.021378,0.022217,0.023875,0.027247,0.034219");
			}
			fall_power(Power_X2) {
				values ("0.003338,0.002619,0.001652,-0.000277,-0.004137,-0.011892", \
				        "0.003347,0.002615,0.001646,-0.000286,-0.004149,-0.011871", \
				        "0.003318,0.002594,0.001624,-0.000298,-0.004146,-0.011864", \
				        "0.003263,0.002538,0.001598,-0.000332,-0.004170,-0.011894", \
				        "0.003297,0.002579,0.001611,-0.000321,-0.004186,-0.011897", \
				        "0.003677,0.002966,0.001961,-0.000044,-0.003978,-0.011770", \
				        "0.005426,0.004565,0.003449,0.001282,-0.002924,-0.011031", \
				        "0.010015,0.009096,0.007819,0.005390,0.000724,-0.008106");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & B1 & !C2";

			rise_power(Power_X2) {
				values ("0.011205,0.011957,0.012896,0.014851,0.018756,0.026541", \
				        "0.011140,0.011917,0.012880,0.014834,0.018737,0.026513", \
				        "0.011189,0.011930,0.012873,0.014833,0.018741,0.026513", \
				        "0.011307,0.012022,0.012994,0.014930,0.018786,0.026564", \
				        "0.011752,0.012424,0.013379,0.015275,0.019091,0.026768", \
				        "0.012739,0.013450,0.014354,0.016205,0.019944,0.027475", \
				        "0.015106,0.015796,0.016689,0.018443,0.022061,0.029407", \
				        "0.020429,0.021013,0.021893,0.023522,0.026921,0.033917");
			}
			fall_power(Power_X2) {
				values ("0.002010,0.001273,0.000283,-0.001652,-0.005519,-0.013265", \
				        "0.001945,0.001257,0.000279,-0.001646,-0.005508,-0.013238", \
				        "0.001958,0.001213,0.000255,-0.001660,-0.005520,-0.013248", \
				        "0.001884,0.001178,0.000225,-0.001694,-0.005547,-0.013282", \
				        "0.001967,0.001216,0.000249,-0.001688,-0.005553,-0.013279", \
				        "0.002483,0.001718,0.000691,-0.001343,-0.005310,-0.013124", \
				        "0.004340,0.003469,0.002351,0.000148,-0.004128,-0.012292", \
				        "0.009314,0.008296,0.006998,0.004506,-0.000231,-0.009174");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X2) {
				values ("0.006416,0.005716,0.004732,0.002803,-0.001067,-0.008804", \
				        "0.006399,0.005683,0.004725,0.002790,-0.001075,-0.008803", \
				        "0.006365,0.005640,0.004689,0.002764,-0.001091,-0.008805", \
				        "0.006355,0.005635,0.004682,0.002753,-0.001102,-0.008823", \
				        "0.006368,0.005643,0.004689,0.002772,-0.001104,-0.008838", \
				        "0.006593,0.005839,0.004868,0.002931,-0.000958,-0.008708", \
				        "0.007645,0.006896,0.005883,0.003843,-0.000178,-0.008086", \
				        "0.011263,0.010404,0.009273,0.007060,0.002746,-0.005634");
			}
			rise_power(Power_X2) {
				values ("0.012208,0.012947,0.013926,0.015883,0.019765,0.027564", \
				        "0.012201,0.012936,0.013897,0.015853,0.019746,0.027505", \
				        "0.012169,0.012919,0.013882,0.015834,0.019729,0.027523", \
				        "0.012182,0.012902,0.013875,0.015830,0.019734,0.027525", \
				        "0.012249,0.012988,0.013954,0.015906,0.019785,0.027560", \
				        "0.012854,0.013517,0.014469,0.016367,0.020158,0.027854", \
				        "0.014559,0.015259,0.016131,0.017925,0.021582,0.029032", \
				        "0.018814,0.019450,0.020241,0.021894,0.025312,0.032376");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.012208,0.012947,0.013926,0.015883,0.019765,0.027564", \
				        "0.012201,0.012936,0.013897,0.015853,0.019746,0.027505", \
				        "0.012169,0.012919,0.013882,0.015834,0.019729,0.027523", \
				        "0.012182,0.012902,0.013875,0.015830,0.019734,0.027525", \
				        "0.012249,0.012988,0.013954,0.015906,0.019785,0.027560", \
				        "0.012854,0.013517,0.014469,0.016367,0.020158,0.027854", \
				        "0.014559,0.015259,0.016131,0.017925,0.021582,0.029032", \
				        "0.018814,0.019450,0.020241,0.021894,0.025312,0.032359");
			}
			fall_power(Power_X2) {
				values ("0.006416,0.005716,0.004732,0.002803,-0.001067,-0.008804", \
				        "0.006399,0.005683,0.004725,0.002790,-0.001075,-0.008803", \
				        "0.006365,0.005640,0.004689,0.002764,-0.001091,-0.008805", \
				        "0.006355,0.005635,0.004682,0.002753,-0.001102,-0.008823", \
				        "0.006368,0.005643,0.004689,0.002772,-0.001104,-0.008838", \
				        "0.006593,0.005839,0.004868,0.002931,-0.000958,-0.008708", \
				        "0.007645,0.006896,0.005883,0.003843,-0.000178,-0.008086", \
				        "0.011263,0.010404,0.009273,0.007060,0.002746,-0.005634");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.011741,0.012477,0.013451,0.015396,0.019295,0.027076", \
				        "0.011716,0.012450,0.013420,0.015377,0.019260,0.027050", \
				        "0.011697,0.012442,0.013409,0.015348,0.019251,0.027037", \
				        "0.011698,0.012416,0.013395,0.015354,0.019252,0.027042", \
				        "0.011780,0.012524,0.013483,0.015418,0.019308,0.027032", \
				        "0.012349,0.013050,0.013991,0.015883,0.019678,0.027448", \
				        "0.014108,0.014782,0.015664,0.017434,0.021087,0.028539", \
				        "0.018343,0.018960,0.019760,0.021419,0.024838,0.031840");
			}
			fall_power(Power_X2) {
				values ("0.004929,0.004232,0.003250,0.001322,-0.002560,-0.010302", \
				        "0.004925,0.004221,0.003245,0.001308,-0.002563,-0.010305", \
				        "0.004906,0.004171,0.003214,0.001284,-0.002573,-0.010299", \
				        "0.004883,0.004160,0.003203,0.001266,-0.002586,-0.010319", \
				        "0.004888,0.004160,0.003206,0.001284,-0.002593,-0.010332", \
				        "0.005137,0.004367,0.003401,0.001457,-0.002443,-0.010211", \
				        "0.006284,0.005516,0.004480,0.002421,-0.001613,-0.009561", \
				        "0.010087,0.009172,0.008017,0.005768,0.001393,-0.007046");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";

			rise_power(Power_X2) {
				values ("0.012120,0.012866,0.013834,0.015797,0.019692,0.027468", \
				        "0.012108,0.012845,0.013811,0.015761,0.019656,0.027443", \
				        "0.012098,0.012830,0.013783,0.015741,0.019643,0.027436", \
				        "0.012072,0.012821,0.013783,0.015746,0.019641,0.027444", \
				        "0.012184,0.012910,0.013868,0.015819,0.019689,0.027472", \
				        "0.012746,0.013451,0.014402,0.016281,0.020091,0.027771", \
				        "0.014497,0.015195,0.016076,0.017859,0.021531,0.028979", \
				        "0.018746,0.019347,0.020197,0.021865,0.025291,0.032376");
			}
			fall_power(Power_X2) {
				values ("0.004943,0.004220,0.003263,0.001319,-0.002543,-0.010285", \
				        "0.004946,0.004215,0.003241,0.001306,-0.002557,-0.010298", \
				        "0.004901,0.004174,0.003214,0.001292,-0.002572,-0.010296", \
				        "0.004911,0.004154,0.003205,0.001264,-0.002600,-0.010308", \
				        "0.004878,0.004168,0.003213,0.001287,-0.002591,-0.010328", \
				        "0.005136,0.004404,0.003413,0.001467,-0.002422,-0.010192", \
				        "0.006387,0.005569,0.004530,0.002477,-0.001572,-0.009535", \
				        "0.010148,0.009255,0.008107,0.005872,0.001488,-0.006971");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & B1 & !C1";

			rise_power(Power_X2) {
				values ("0.011680,0.012430,0.013393,0.015341,0.019235,0.027018", \
				        "0.011671,0.012407,0.013350,0.015316,0.019208,0.026986", \
				        "0.011621,0.012378,0.013349,0.015288,0.019188,0.026990", \
				        "0.011643,0.012350,0.013333,0.015287,0.019187,0.026961", \
				        "0.011767,0.012463,0.013439,0.015383,0.019237,0.026994", \
				        "0.012289,0.013026,0.013959,0.015866,0.019664,0.027341", \
				        "0.014080,0.014779,0.015640,0.017457,0.021134,0.028577", \
				        "0.018401,0.018938,0.019812,0.021476,0.024921,0.032014");
			}
			fall_power(Power_X2) {
				values ("0.003602,0.002891,0.001895,-0.000050,-0.003922,-0.011676", \
				        "0.003571,0.002853,0.001886,-0.000053,-0.003924,-0.011664", \
				        "0.003552,0.002815,0.001855,-0.000077,-0.003941,-0.011672", \
				        "0.003526,0.002811,0.001851,-0.000088,-0.003958,-0.011705", \
				        "0.003525,0.002818,0.001854,-0.000081,-0.003942,-0.011696", \
				        "0.003833,0.003079,0.002097,0.000143,-0.003767,-0.011553", \
				        "0.005186,0.004372,0.003328,0.001250,-0.002825,-0.010816", \
				        "0.009292,0.008351,0.007180,0.004869,0.000420,-0.008108");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI222_X4
 Cell Description	: Combinational cell (OAI222_X4) with drive strength X4
*******************************************************************************************/

cell (OAI222_X4) {

	area               	: 3.724000;

	cell_leakage_power 	: 69852.258859;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 10710.260000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 13120.710000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 9466.447000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & !C2";
		value      	: 18557.710000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 13120.690000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 13696.890000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & !C2";
		value      	: 18557.680000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & !C2";
		value      	: 17489.470000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 9466.459000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 18557.700000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & !C2";
		value      	: 4101.671000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & !C2";
		value      	: 13377.300000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 18557.670000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 17489.450000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & !C2";
		value      	: 13377.280000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & !C2";
		value      	: 12288.460000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 35544.060000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 81543.860000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & !C1 & C2";
		value      	: 42345.060000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & !C1 & C2";
		value      	: 84320.600000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 81544.020000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 105573.500000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & !C1 & C2";
		value      	: 81403.830000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & !C1 & C2";
		value      	: 103734.900000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 42345.040000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 81403.640000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & !C1 & C2";
		value      	: 37583.840000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & !C1 & C2";
		value      	: 103729.800000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 78486.780000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 100818.000000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & !C1 & C2";
		value      	: 100813.400000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & !C1 & C2";
		value      	: 123144.300000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 35543.840000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 81543.630000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & !C2";
		value      	: 42344.850000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & !C2";
		value      	: 87237.280000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 81543.810000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 105573.200000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & !C2";
		value      	: 84320.600000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & !C2";
		value      	: 106651.300000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 42344.830000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 84320.410000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & !C2";
		value      	: 37583.610000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & !C2";
		value      	: 106645.800000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 81403.640000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 103734.700000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & !C2";
		value      	: 103729.800000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & !C2";
		value      	: 126060.000000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 59581.650000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 105588.700000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2 & C1 & C2";
		value      	: 66382.940000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2 & C1 & C2";
		value      	: 106659.800000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 105588.900000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 129623.600000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2 & C1 & C2";
		value      	: 103743.100000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2 & C1 & C2";
		value      	: 126076.200000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 66382.940000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 103742.900000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2 & C1 & C2";
		value      	: 61622.060000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2 & C1 & C2";
		value      	: 126071.200000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 100825.700000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 123159.500000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2 & C1 & C2";
		value      	: 123155.100000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2 & C1 & C2";
		value      	: 145488.500000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002348;
		fall_capacitance	: 0.002257;
		rise_capacitance	: 0.002439;
		fall_capacitance_range		(0.001900, 0.002711);
		rise_capacitance_range		(0.002006, 0.003167);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000033,0.000022,0.000013,0.000007,0.000002,-0.000003,-0.000010,-0.000023");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002232;
		fall_capacitance	: 0.002265;
		rise_capacitance	: 0.002200;
		fall_capacitance_range		(0.001913, 0.002648);
		rise_capacitance_range		(0.001853, 0.002801);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000158,0.000107,0.000070,0.000045,0.000029,0.000018,0.000006,-0.000009");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.002155;
		fall_capacitance	: 0.002031;
		rise_capacitance	: 0.002278;
		fall_capacitance_range		(0.001751, 0.002384);
		rise_capacitance_range		(0.001859, 0.002920);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000061,0.000040,0.000028,0.000018,0.000010,0.000002,-0.000006,-0.000019");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002375;
		fall_capacitance	: 0.002379;
		rise_capacitance	: 0.002370;
		fall_capacitance_range		(0.002036, 0.002677);
		rise_capacitance_range		(0.002034, 0.002864);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000039,0.000023,0.000013,0.000007,0.000002,-0.000003,-0.000009,-0.000020");
			}

		}
	}

	pin (C1) {

		direction		: input;
		capacitance		: 0.002200;
		fall_capacitance	: 0.002042;
		rise_capacitance	: 0.002358;
		fall_capacitance_range		(0.001771, 0.002290);
		rise_capacitance_range		(0.001906, 0.002946);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000060,0.000040,0.000027,0.000017,0.000009,0.000002,-0.000007,-0.000019");
			}

		}
	}

	pin (C2) {

		direction		: input;
		capacitance		: 0.002399;
		fall_capacitance	: 0.002367;
		rise_capacitance	: 0.002432;
		fall_capacitance_range		(0.002057, 0.002605);
		rise_capacitance_range		(0.002084, 0.002859);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000032,0.000019,0.000011,0.000006,0.000002,-0.000003,-0.000009,-0.000019");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) & (B1 | B2)) & (C1 | C2))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.029350,0.034893,0.041096,0.053195,0.076805,0.123216", \
				        "0.032286,0.037772,0.044037,0.056136,0.079733,0.126115", \
				        "0.038603,0.043704,0.049874,0.061951,0.085508,0.131776", \
				        "0.050175,0.056160,0.062326,0.074159,0.097075,0.143265", \
				        "0.061426,0.069460,0.077895,0.093647,0.120834,0.167125", \
				        "0.068371,0.079114,0.090480,0.111464,0.148112,0.209056", \
				        "0.061189,0.075797,0.091115,0.119299,0.168428,0.250134", \
				        "0.019615,0.039158,0.059680,0.097633,0.163583,0.273258");
			}
			cell_rise(Timing_X4) {
				values ("0.042241,0.054090,0.067520,0.093919,0.146441,0.251126", \
				        "0.045330,0.057110,0.070478,0.096887,0.149503,0.254159", \
				        "0.052330,0.063935,0.077103,0.103285,0.155751,0.260310", \
				        "0.067264,0.078652,0.091491,0.117284,0.169099,0.273157", \
				        "0.090722,0.105294,0.120623,0.147609,0.198135,0.300830", \
				        "0.126900,0.144823,0.164003,0.198522,0.258081,0.360108", \
				        "0.186177,0.208702,0.232217,0.274718,0.349806,0.476485", \
				        "0.290283,0.317733,0.347014,0.399555,0.491989,0.650209");
			}
			fall_transition(Timing_X4) {
				values ("0.024628,0.029178,0.034031,0.043864,0.063716,0.103353", \
				        "0.024120,0.029025,0.034023,0.043928,0.063729,0.103359", \
				        "0.023111,0.027887,0.033201,0.043661,0.063715,0.103279", \
				        "0.028262,0.032036,0.036031,0.044460,0.063203,0.103290", \
				        "0.040105,0.044436,0.049107,0.057188,0.072078,0.104809", \
				        "0.060479,0.065962,0.071825,0.082008,0.099873,0.130467", \
				        "0.095798,0.103327,0.111009,0.124399,0.147088,0.185008", \
				        "0.158369,0.168827,0.179549,0.197871,0.228287,0.276997");
			}
			rise_transition(Timing_X4) {
				values ("0.072491,0.083423,0.095717,0.120416,0.168824,0.264136", \
				        "0.072508,0.083421,0.095748,0.120448,0.168825,0.264119", \
				        "0.072261,0.083342,0.095785,0.120430,0.168828,0.264109", \
				        "0.076225,0.085173,0.096272,0.120417,0.168837,0.264124", \
				        "0.091310,0.098076,0.106791,0.125879,0.169227,0.264160", \
				        "0.122385,0.129305,0.137374,0.153601,0.187133,0.267029", \
				        "0.172790,0.178953,0.187461,0.205537,0.242009,0.309636", \
				        "0.209362,0.217048,0.227312,0.249328,0.295306,0.382579");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.029350,0.034893,0.041096,0.053195,0.076805,0.123216", \
				        "0.032286,0.037772,0.044037,0.056136,0.079733,0.126115", \
				        "0.038603,0.043704,0.049874,0.061951,0.085508,0.131776", \
				        "0.050175,0.056160,0.062326,0.074159,0.097075,0.143265", \
				        "0.061426,0.069460,0.077895,0.093647,0.120834,0.167125", \
				        "0.068371,0.079114,0.090480,0.111464,0.148112,0.209056", \
				        "0.061189,0.075797,0.091115,0.119299,0.168428,0.250134", \
				        "0.019615,0.039158,0.059680,0.097633,0.163583,0.273258");
			}
			cell_rise(Timing_X4) {
				values ("0.042241,0.054090,0.067520,0.093919,0.146441,0.251126", \
				        "0.045330,0.057110,0.070478,0.096887,0.149503,0.254159", \
				        "0.052330,0.063935,0.077103,0.103285,0.155751,0.260310", \
				        "0.067264,0.078652,0.091491,0.117284,0.169099,0.273157", \
				        "0.090722,0.105294,0.120623,0.147609,0.198135,0.300830", \
				        "0.126900,0.144823,0.164003,0.198522,0.258081,0.360108", \
				        "0.186177,0.208702,0.232217,0.274718,0.349806,0.476485", \
				        "0.289428,0.316643,0.345838,0.398497,0.491192,0.649768");
			}
			fall_transition(Timing_X4) {
				values ("0.024628,0.029178,0.034031,0.043864,0.063716,0.103353", \
				        "0.024120,0.029025,0.034023,0.043928,0.063729,0.103359", \
				        "0.023111,0.027887,0.033201,0.043661,0.063715,0.103279", \
				        "0.028262,0.032036,0.036031,0.044460,0.063203,0.103290", \
				        "0.040105,0.044436,0.049107,0.057188,0.072078,0.104809", \
				        "0.060479,0.065962,0.071825,0.082008,0.099873,0.130467", \
				        "0.095798,0.103327,0.111009,0.124399,0.147088,0.185008", \
				        "0.158369,0.168827,0.179549,0.197871,0.228287,0.276997");
			}
			rise_transition(Timing_X4) {
				values ("0.072491,0.083423,0.095717,0.120416,0.168824,0.264136", \
				        "0.072508,0.083421,0.095748,0.120448,0.168825,0.264119", \
				        "0.072261,0.083342,0.095785,0.120430,0.168828,0.264109", \
				        "0.076225,0.085173,0.096272,0.120417,0.168837,0.264124", \
				        "0.091310,0.098076,0.106791,0.125879,0.169227,0.264160", \
				        "0.122385,0.129305,0.137374,0.153601,0.187133,0.267029", \
				        "0.172790,0.178953,0.187461,0.205537,0.242009,0.309636", \
				        "0.258064,0.262984,0.270703,0.288735,0.329298,0.410672");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2 & C1 & !C2 | !A2 & B1 & !B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022375,0.027844,0.033963,0.045885,0.069248,0.115368", \
				        "0.025468,0.030741,0.036903,0.048827,0.072175,0.118252", \
				        "0.032531,0.037368,0.042959,0.054654,0.077962,0.123945", \
				        "0.041464,0.047952,0.054759,0.067125,0.089602,0.135435", \
				        "0.049143,0.057991,0.067123,0.083846,0.112372,0.159438", \
				        "0.051313,0.063112,0.075560,0.097900,0.136391,0.199326", \
				        "0.037694,0.053809,0.070504,0.100704,0.152336,0.236817", \
				        "-0.012199,0.009296,0.031705,0.072196,0.141579,0.255245");
			}
			cell_rise(Timing_X4) {
				values ("0.041379,0.053085,0.066484,0.092802,0.145113,0.249400", \
				        "0.044483,0.056189,0.069453,0.095717,0.148114,0.252401", \
				        "0.051507,0.062982,0.076045,0.102106,0.154367,0.258566", \
				        "0.066333,0.077791,0.090593,0.116158,0.167695,0.271449", \
				        "0.089406,0.103997,0.119373,0.146443,0.196750,0.299076", \
				        "0.124998,0.142923,0.162128,0.196715,0.256452,0.358361", \
				        "0.182959,0.205723,0.229292,0.272085,0.347270,0.474150", \
				        "0.282925,0.310989,0.340709,0.393832,0.487027,0.645892");
			}
			fall_transition(Timing_X4) {
				values ("0.019626,0.024481,0.029418,0.039415,0.059187,0.098741", \
				        "0.018624,0.023862,0.029155,0.039385,0.059183,0.098710", \
				        "0.019379,0.023520,0.028638,0.038706,0.059144,0.098727", \
				        "0.025952,0.029699,0.033719,0.041254,0.058856,0.098719", \
				        "0.037856,0.042236,0.046961,0.055021,0.069801,0.101204", \
				        "0.058277,0.063809,0.069665,0.079934,0.097809,0.128385", \
				        "0.093557,0.101198,0.108958,0.122436,0.145118,0.182926", \
				        "0.156110,0.166682,0.177517,0.195965,0.226379,0.274960");
			}
			rise_transition(Timing_X4) {
				values ("0.048508,0.060227,0.073218,0.098762,0.147859,0.243478", \
				        "0.048493,0.060221,0.073238,0.098798,0.147856,0.243456", \
				        "0.048268,0.060161,0.073232,0.098799,0.147850,0.243453", \
				        "0.052321,0.062023,0.073772,0.098759,0.147858,0.243476", \
				        "0.068067,0.075857,0.084743,0.104375,0.148268,0.243490", \
				        "0.094596,0.103117,0.112733,0.131460,0.166330,0.246405", \
				        "0.138065,0.146249,0.156625,0.177690,0.218040,0.289108", \
				        "0.212721,0.220513,0.230726,0.252625,0.298181,0.384818");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & C1 | !A2 & B1 & B2 & C2 | !A2 & B2 & C1 & C2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) || (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (A2 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.019267,0.023861,0.029034,0.039099,0.058808,0.097594", \
				        "0.022673,0.026974,0.032112,0.042164,0.061847,0.100591", \
				        "0.029631,0.033994,0.038759,0.048330,0.067910,0.106583", \
				        "0.037415,0.043399,0.049515,0.060960,0.080253,0.118649", \
				        "0.043467,0.051677,0.060041,0.075517,0.101602,0.144008", \
				        "0.043028,0.054104,0.065706,0.086519,0.122041,0.179783", \
				        "0.024912,0.040174,0.055925,0.084302,0.132528,0.210807", \
				        "-0.032938,-0.012575,0.008683,0.046982,0.112407,0.218899");
			}
			cell_rise(Timing_X4) {
				values ("0.041228,0.052982,0.066373,0.092663,0.144971,0.249260", \
				        "0.044347,0.056000,0.069261,0.095556,0.147948,0.252250", \
				        "0.051419,0.062851,0.075927,0.101928,0.154175,0.258407", \
				        "0.066408,0.077806,0.090598,0.116150,0.167631,0.271309", \
				        "0.089809,0.104335,0.119696,0.146707,0.196948,0.299160", \
				        "0.126096,0.143994,0.163092,0.197619,0.257197,0.358949", \
				        "0.185848,0.208364,0.231766,0.274316,0.349294,0.475859", \
				        "0.290283,0.317733,0.347014,0.399555,0.491989,0.650209");
			}
			fall_transition(Timing_X4) {
				values ("0.015897,0.020128,0.024507,0.032897,0.049671,0.083109", \
				        "0.015129,0.019407,0.024033,0.032856,0.049641,0.083112", \
				        "0.017179,0.020186,0.024158,0.032126,0.049536,0.083101", \
				        "0.023981,0.027157,0.030399,0.036414,0.050273,0.082973", \
				        "0.035570,0.039497,0.043637,0.050913,0.063564,0.088131", \
				        "0.055468,0.060562,0.065959,0.075119,0.091115,0.117814", \
				        "0.090064,0.097180,0.104349,0.116738,0.137264,0.171146", \
				        "0.151832,0.161708,0.171767,0.188908,0.216928,0.261137");
			}
			rise_transition(Timing_X4) {
				values ("0.048425,0.060176,0.073213,0.098738,0.147845,0.243479", \
				        "0.048396,0.060178,0.073192,0.098766,0.147839,0.243456", \
				        "0.048178,0.060113,0.073214,0.098776,0.147844,0.243456", \
				        "0.052228,0.061994,0.073727,0.098731,0.147843,0.243467", \
				        "0.067770,0.075631,0.084543,0.104255,0.148238,0.243489", \
				        "0.093728,0.102382,0.112110,0.130978,0.166024,0.246322", \
				        "0.136198,0.144490,0.154933,0.176262,0.216981,0.288307", \
				        "0.209362,0.217048,0.227312,0.249328,0.295306,0.382579");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036262,0.041815,0.048063,0.060243,0.084076,0.130702", \
				        "0.039096,0.044564,0.050845,0.063031,0.086821,0.133463", \
				        "0.044792,0.050279,0.056604,0.068810,0.092513,0.139008", \
				        "0.057493,0.063079,0.068912,0.080514,0.104053,0.150494", \
				        "0.071834,0.079341,0.087256,0.102176,0.128358,0.174295", \
				        "0.083302,0.093275,0.103992,0.123825,0.158843,0.217979", \
				        "0.084474,0.097751,0.111869,0.138057,0.184629,0.263358", \
				        "0.060411,0.077844,0.096229,0.130737,0.191738,0.295505");
			}
			cell_rise(Timing_X4) {
				values ("0.055750,0.067546,0.080994,0.107423,0.159948,0.264597", \
				        "0.059063,0.070786,0.084284,0.110837,0.163512,0.268259", \
				        "0.065098,0.076996,0.090222,0.116768,0.169589,0.274436", \
				        "0.076574,0.088466,0.101885,0.128229,0.180866,0.285926", \
				        "0.095426,0.109404,0.124387,0.151939,0.204307,0.309006", \
				        "0.126963,0.143347,0.161086,0.193365,0.252049,0.357585", \
				        "0.181320,0.201597,0.223049,0.261798,0.330669,0.452017", \
				        "0.275402,0.301576,0.328550,0.376932,0.460846,0.604626");
			}
			fall_transition(Timing_X4) {
				values ("0.028781,0.033416,0.038367,0.048231,0.068180,0.107938", \
				        "0.028803,0.033466,0.038383,0.048256,0.068205,0.107858", \
				        "0.027534,0.032553,0.037943,0.048295,0.068209,0.107853", \
				        "0.030923,0.034703,0.039304,0.048261,0.067826,0.107900", \
				        "0.042833,0.047088,0.051665,0.059738,0.074889,0.108862", \
				        "0.063027,0.068516,0.074391,0.084538,0.102352,0.132862", \
				        "0.096950,0.104417,0.112121,0.125606,0.148774,0.187112", \
				        "0.155970,0.166426,0.177062,0.195402,0.226270,0.276157");
			}
			rise_transition(Timing_X4) {
				values ("0.072475,0.083395,0.095748,0.120441,0.168845,0.264145", \
				        "0.072510,0.083390,0.095735,0.120417,0.168838,0.264124", \
				        "0.072493,0.083390,0.095727,0.120428,0.168824,0.264125", \
				        "0.074439,0.084253,0.095970,0.120417,0.168827,0.264137", \
				        "0.085126,0.092962,0.102808,0.123946,0.169117,0.264152", \
				        "0.108307,0.115550,0.124551,0.142826,0.180918,0.266449", \
				        "0.115881,0.153075,0.161384,0.179344,0.217548,0.294454", \
				        "0.173476,0.180379,0.189826,0.209549,0.251067,0.335369");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.036262,0.041815,0.048063,0.060243,0.084076,0.130702", \
				        "0.039096,0.044564,0.050845,0.063031,0.086821,0.133463", \
				        "0.044792,0.050279,0.056604,0.068810,0.092513,0.139008", \
				        "0.057493,0.063079,0.068912,0.080514,0.104053,0.150494", \
				        "0.071834,0.079341,0.087256,0.102176,0.128358,0.174295", \
				        "0.083302,0.093275,0.103992,0.123825,0.158843,0.217979", \
				        "0.084474,0.097751,0.111869,0.138057,0.184629,0.263358", \
				        "0.060411,0.077844,0.096229,0.130737,0.191738,0.295505");
			}
			cell_rise(Timing_X4) {
				values ("0.055750,0.067546,0.080994,0.107423,0.159948,0.264597", \
				        "0.059063,0.070786,0.084284,0.110837,0.163512,0.268259", \
				        "0.065098,0.076996,0.090222,0.116768,0.169589,0.274436", \
				        "0.076574,0.088466,0.101885,0.128229,0.180866,0.285926", \
				        "0.095426,0.109404,0.124387,0.151939,0.204307,0.309006", \
				        "0.126963,0.143347,0.161086,0.193365,0.252049,0.357585", \
				        "0.181025,0.201597,0.223049,0.261798,0.330669,0.452017", \
				        "0.273331,0.299568,0.326698,0.375316,0.459792,0.604247");
			}
			fall_transition(Timing_X4) {
				values ("0.028781,0.033416,0.038367,0.048231,0.068180,0.107938", \
				        "0.028803,0.033466,0.038383,0.048256,0.068205,0.107858", \
				        "0.027534,0.032553,0.037943,0.048295,0.068209,0.107853", \
				        "0.030923,0.034703,0.039304,0.048261,0.067826,0.107900", \
				        "0.042833,0.047088,0.051665,0.059738,0.074889,0.108862", \
				        "0.063027,0.068516,0.074391,0.084538,0.102352,0.132862", \
				        "0.096950,0.104417,0.112121,0.125606,0.148774,0.187112", \
				        "0.155970,0.166426,0.177062,0.195402,0.226270,0.276157");
			}
			rise_transition(Timing_X4) {
				values ("0.072475,0.083395,0.095748,0.120441,0.168845,0.264145", \
				        "0.072510,0.083390,0.095735,0.120417,0.168838,0.264124", \
				        "0.072493,0.083390,0.095727,0.120428,0.168824,0.264125", \
				        "0.074439,0.084253,0.095970,0.120417,0.168827,0.264137", \
				        "0.085126,0.092962,0.102808,0.123946,0.169117,0.264152", \
				        "0.108307,0.115550,0.124551,0.142826,0.180918,0.266449", \
				        "0.146846,0.153075,0.161384,0.179344,0.217548,0.294454", \
				        "0.213133,0.218039,0.225557,0.242350,0.280131,0.360628");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2 & C1 & !C2 | !A1 & B1 & !B2 & !C1 & C2 | !A1 & B1 & !B2 & C1 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.028937,0.034459,0.040694,0.052792,0.076390,0.122792", \
				        "0.031738,0.037249,0.043492,0.055588,0.079153,0.125556", \
				        "0.038031,0.043069,0.049264,0.061339,0.084866,0.131105", \
				        "0.049363,0.055368,0.061593,0.073473,0.096428,0.142620", \
				        "0.060430,0.068558,0.077071,0.092852,0.120154,0.166520", \
				        "0.067682,0.078526,0.089895,0.110896,0.147566,0.208504", \
				        "0.063783,0.077930,0.093030,0.120758,0.169305,0.250436", \
				        "0.032868,0.051672,0.071326,0.107770,0.171420,0.278316");
			}
			cell_rise(Timing_X4) {
				values ("0.054874,0.066615,0.079994,0.106315,0.158617,0.262863", \
				        "0.058202,0.069863,0.083335,0.109718,0.162148,0.266452", \
				        "0.064224,0.076003,0.089230,0.115619,0.168175,0.272680", \
				        "0.075679,0.087483,0.100766,0.127132,0.179561,0.284186", \
				        "0.094270,0.108218,0.123154,0.150786,0.202924,0.307247", \
				        "0.125408,0.141812,0.159563,0.191938,0.250509,0.355818", \
				        "0.178981,0.199290,0.220800,0.259682,0.328609,0.449895", \
				        "0.268952,0.295651,0.322986,0.372041,0.456720,0.601294");
			}
			fall_transition(Timing_X4) {
				values ("0.024601,0.029121,0.034086,0.043921,0.063725,0.103395", \
				        "0.024077,0.028962,0.034074,0.043941,0.063745,0.103321", \
				        "0.023244,0.027951,0.033263,0.043634,0.063765,0.103327", \
				        "0.028595,0.032406,0.036304,0.044811,0.063242,0.103339", \
				        "0.040590,0.044920,0.049560,0.057580,0.072380,0.104978", \
				        "0.060509,0.066100,0.072030,0.082329,0.100222,0.130783", \
				        "0.094330,0.101705,0.109571,0.123214,0.146409,0.184900", \
				        "0.152337,0.163206,0.174026,0.192724,0.223781,0.273712");
			}
			rise_transition(Timing_X4) {
				values ("0.048490,0.060202,0.073185,0.098757,0.147867,0.243472", \
				        "0.048495,0.060203,0.073234,0.098763,0.147861,0.243452", \
				        "0.048508,0.060197,0.073215,0.098793,0.147853,0.243455", \
				        "0.050507,0.061103,0.073448,0.098754,0.147861,0.243483", \
				        "0.062066,0.070708,0.080767,0.102348,0.148177,0.243487", \
				        "0.082630,0.090935,0.100821,0.120877,0.160117,0.245805", \
				        "0.117040,0.124683,0.134084,0.154039,0.194629,0.273932", \
				        "0.175314,0.182464,0.191912,0.211567,0.252894,0.336660");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2 & C1 | !A1 & B1 & B2 & C2 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B1 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.025922,0.030643,0.035915,0.046160,0.066146,0.105369", \
				        "0.028822,0.033466,0.038788,0.049054,0.068997,0.108230", \
				        "0.035420,0.039654,0.044782,0.055026,0.074932,0.113995", \
				        "0.045332,0.050861,0.056621,0.067456,0.086999,0.125962", \
				        "0.054397,0.061974,0.069779,0.084496,0.109532,0.150972", \
				        "0.058682,0.068863,0.079465,0.099019,0.132973,0.188986", \
				        "0.049777,0.063263,0.077444,0.103516,0.148840,0.224069", \
				        "0.010250,0.028048,0.046716,0.081156,0.141143,0.241247");
			}
			cell_rise(Timing_X4) {
				values ("0.054830,0.066616,0.080003,0.106233,0.158579,0.262823", \
				        "0.058124,0.069817,0.083265,0.109647,0.162031,0.266419", \
				        "0.064117,0.075900,0.089161,0.115550,0.168042,0.272497", \
				        "0.075602,0.087383,0.100651,0.126991,0.179380,0.283989", \
				        "0.094241,0.108133,0.123093,0.150711,0.202805,0.307072", \
				        "0.125987,0.142314,0.159987,0.192255,0.250700,0.355890", \
				        "0.181320,0.201432,0.222705,0.261327,0.329952,0.450885", \
				        "0.275402,0.301576,0.328550,0.376932,0.460846,0.604626");
			}
			fall_transition(Timing_X4) {
				values ("0.020400,0.024183,0.028283,0.036629,0.053377,0.086922", \
				        "0.019885,0.024053,0.028279,0.036640,0.053393,0.086905", \
				        "0.020046,0.023754,0.027881,0.036352,0.053398,0.086953", \
				        "0.026305,0.029515,0.032967,0.039239,0.053694,0.086959", \
				        "0.037978,0.041842,0.045972,0.053044,0.065742,0.091033", \
				        "0.057361,0.062477,0.067916,0.077132,0.093234,0.119953", \
				        "0.090517,0.097465,0.104658,0.117143,0.138225,0.172751", \
				        "0.148250,0.158374,0.168498,0.185838,0.214290,0.259597");
			}
			rise_transition(Timing_X4) {
				values ("0.048466,0.060206,0.073212,0.098786,0.147859,0.243479", \
				        "0.048465,0.060200,0.073215,0.098757,0.147854,0.243478", \
				        "0.048479,0.060194,0.073206,0.098779,0.147854,0.243451", \
				        "0.050499,0.061132,0.073436,0.098756,0.147859,0.243482", \
				        "0.062047,0.070709,0.080779,0.102354,0.148180,0.243487", \
				        "0.082327,0.090698,0.100631,0.120752,0.160066,0.245800", \
				        "0.115881,0.123629,0.133164,0.153228,0.194095,0.273651", \
				        "0.173476,0.180379,0.189826,0.209549,0.251067,0.335369");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.044139,0.049596,0.055807,0.067867,0.091515,0.137988", \
				        "0.047163,0.052595,0.058736,0.070842,0.094527,0.141018", \
				        "0.052529,0.058051,0.063982,0.076142,0.099849,0.146401", \
				        "0.062299,0.068112,0.074549,0.086651,0.110394,0.156967", \
				        "0.075332,0.082487,0.090029,0.104399,0.130237,0.177584", \
				        "0.086126,0.095898,0.106243,0.125300,0.158322,0.214307", \
				        "0.084973,0.098590,0.113053,0.139307,0.184988,0.259819", \
				        "0.052341,0.071673,0.091439,0.128087,0.191350,0.294885");
			}
			cell_rise(Timing_X4) {
				values ("0.076466,0.088108,0.101435,0.127835,0.180311,0.285151", \
				        "0.079212,0.090841,0.104176,0.130648,0.183125,0.288015", \
				        "0.085799,0.097292,0.110548,0.136885,0.189286,0.294195", \
				        "0.100152,0.111722,0.124748,0.150696,0.202601,0.306948", \
				        "0.131036,0.142631,0.155478,0.180741,0.231701,0.334408", \
				        "0.178883,0.193737,0.209859,0.240075,0.294009,0.394055", \
				        "0.252302,0.271545,0.291495,0.329540,0.398161,0.516396", \
				        "0.376207,0.398826,0.424556,0.471219,0.555834,0.704832");
			}
			fall_transition(Timing_X4) {
				values ("0.024427,0.028977,0.034074,0.043918,0.063720,0.103390", \
				        "0.024416,0.028937,0.034053,0.043892,0.063730,0.103393", \
				        "0.024340,0.028946,0.033928,0.043895,0.063724,0.103323", \
				        "0.026284,0.030296,0.035045,0.044258,0.063706,0.103375", \
				        "0.034313,0.038207,0.042497,0.050910,0.067696,0.104183", \
				        "0.051032,0.055428,0.060286,0.068931,0.085236,0.117322", \
				        "0.081062,0.086400,0.092413,0.103044,0.121942,0.155179", \
				        "0.132076,0.139590,0.147510,0.161764,0.186323,0.227137");
			}
			rise_transition(Timing_X4) {
				values ("0.053500,0.064264,0.076648,0.100980,0.149052,0.284170", \
				        "0.053501,0.064221,0.076638,0.100981,0.149090,0.284172", \
				        "0.053501,0.064255,0.076645,0.100947,0.149038,0.284147", \
				        "0.053367,0.064235,0.076678,0.100984,0.149092,0.284153", \
				        "0.060697,0.069480,0.079983,0.101990,0.149094,0.284169", \
				        "0.079773,0.090455,0.101462,0.121282,0.159241,0.245608", \
				        "0.108052,0.121071,0.135207,0.160592,0.204637,0.279359", \
				        "0.153360,0.169614,0.186584,0.217909,0.273420,0.368061");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2 & C1 & !C2 | A1 & !A2 & !B2 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.037238,0.042598,0.048691,0.060588,0.083945,0.130103", \
				        "0.040236,0.045594,0.051641,0.063543,0.086948,0.133127", \
				        "0.045598,0.051032,0.056936,0.068828,0.092253,0.138498", \
				        "0.054511,0.060518,0.067020,0.079255,0.102801,0.149075", \
				        "0.064682,0.072463,0.080547,0.095536,0.122066,0.169660", \
				        "0.070635,0.081452,0.092752,0.113041,0.147795,0.205238", \
				        "0.062536,0.077676,0.093539,0.121894,0.170071,0.247661", \
				        "0.020726,0.042210,0.063918,0.103459,0.170261,0.277824");
			}
			cell_rise(Timing_X4) {
				values ("0.073784,0.085631,0.099168,0.125817,0.178535,0.283278", \
				        "0.076571,0.088406,0.101984,0.128651,0.181364,0.286153", \
				        "0.082992,0.094766,0.108181,0.134825,0.187531,0.292298", \
				        "0.097205,0.108942,0.122103,0.148397,0.200681,0.305045", \
				        "0.127394,0.139470,0.152481,0.178034,0.229339,0.332559", \
				        "0.173992,0.189084,0.205799,0.236388,0.290865,0.391486", \
				        "0.245278,0.264798,0.285279,0.323884,0.393178,0.512301", \
				        "0.364348,0.388342,0.414040,0.461807,0.547509,0.697483");
			}
			fall_transition(Timing_X4) {
				values ("0.020101,0.024621,0.029581,0.039423,0.059201,0.098796", \
				        "0.020081,0.024599,0.029550,0.039410,0.059201,0.098796", \
				        "0.020156,0.024587,0.029424,0.039401,0.059196,0.098708", \
				        "0.023164,0.027042,0.031475,0.040338,0.059264,0.098772", \
				        "0.032015,0.035793,0.040042,0.047973,0.064409,0.099988", \
				        "0.049039,0.053442,0.058237,0.066822,0.082821,0.114348", \
				        "0.079606,0.084771,0.090752,0.101260,0.119975,0.152992", \
				        "0.130750,0.138206,0.145960,0.160120,0.184618,0.225207");
			}
			rise_transition(Timing_X4) {
				values ("0.069484,0.080746,0.093464,0.118633,0.167610,0.263551", \
				        "0.069495,0.080742,0.093440,0.118621,0.167610,0.263566", \
				        "0.069496,0.080749,0.093475,0.118677,0.167609,0.263533", \
				        "0.069371,0.080735,0.093453,0.118661,0.167605,0.263548", \
				        "0.077333,0.086443,0.097276,0.119841,0.167599,0.263573", \
				        "0.102319,0.111780,0.121627,0.140452,0.178554,0.264339", \
				        "0.140269,0.151488,0.163747,0.186697,0.227689,0.299533", \
				        "0.199509,0.212464,0.227217,0.254458,0.305264,0.394733");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2 & C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.031944,0.036492,0.041665,0.051758,0.071546,0.110559", \
				        "0.035027,0.039573,0.044670,0.054800,0.074598,0.113680", \
				        "0.040434,0.045053,0.049995,0.060054,0.079903,0.118992", \
				        "0.048527,0.053844,0.059581,0.070218,0.090308,0.129512", \
				        "0.057010,0.064075,0.071345,0.084738,0.108254,0.149736", \
				        "0.060321,0.070257,0.080570,0.098980,0.130351,0.181703", \
				        "0.047772,0.061883,0.076538,0.102678,0.146815,0.217188", \
				        "-0.002109,0.017969,0.038395,0.075245,0.137276,0.236279");
			}
			cell_rise(Timing_X4) {
				values ("0.073523,0.085330,0.098902,0.125542,0.178263,0.282985", \
				        "0.076263,0.088123,0.101649,0.128307,0.181080,0.285848", \
				        "0.082799,0.094517,0.107965,0.134562,0.187235,0.291958", \
				        "0.097209,0.108918,0.122114,0.148332,0.200510,0.304804", \
				        "0.127751,0.139749,0.152756,0.178275,0.229491,0.332567", \
				        "0.175105,0.190129,0.206706,0.237257,0.291579,0.392064", \
				        "0.247844,0.267295,0.287689,0.326135,0.395218,0.514016", \
				        "0.370845,0.394368,0.419992,0.467288,0.552515,0.701933");
			}
			fall_transition(Timing_X4) {
				values ("0.016490,0.020327,0.024524,0.032831,0.049565,0.083126", \
				        "0.016475,0.020250,0.024434,0.032823,0.049525,0.083050", \
				        "0.016808,0.020426,0.024479,0.032787,0.049533,0.083126", \
				        "0.020269,0.023598,0.027346,0.034378,0.049944,0.083099", \
				        "0.028804,0.032053,0.035676,0.042547,0.056354,0.085362", \
				        "0.044806,0.048715,0.052947,0.060496,0.074401,0.101167", \
				        "0.073589,0.078283,0.083666,0.093099,0.109644,0.138374", \
				        "0.122292,0.129102,0.136141,0.148923,0.170867,0.206871");
			}
			rise_transition(Timing_X4) {
				values ("0.069377,0.080618,0.093321,0.118443,0.167394,0.263330", \
				        "0.069389,0.080617,0.093328,0.118440,0.167385,0.263338", \
				        "0.069366,0.080613,0.093319,0.118494,0.167391,0.263314", \
				        "0.069272,0.080576,0.093328,0.118452,0.167389,0.263317", \
				        "0.077046,0.086242,0.097001,0.119619,0.167395,0.263332", \
				        "0.101569,0.111115,0.121061,0.139871,0.178106,0.264056", \
				        "0.138495,0.149727,0.162148,0.185262,0.226456,0.298604", \
				        "0.195818,0.208840,0.223577,0.251173,0.302275,0.392254");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !B2 & C1";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.023622,0.027142,0.031087,0.039020,0.054811,0.086205", \
				        "0.026884,0.030408,0.034346,0.042295,0.058068,0.089522", \
				        "0.032686,0.036609,0.040611,0.048574,0.064414,0.095888", \
				        "0.039401,0.044738,0.050208,0.059991,0.077159,0.108819", \
				        "0.044208,0.051877,0.059606,0.073303,0.096272,0.133491", \
				        "0.041560,0.052608,0.063860,0.083446,0.115852,0.166776", \
				        "0.020180,0.035956,0.052078,0.080258,0.126430,0.198187", \
				        "-0.042145,-0.019645,0.002814,0.042367,0.107532,0.209255");
			}
			cell_rise(Timing_X4) {
				values ("0.076466,0.088108,0.101435,0.127835,0.180311,0.284516", \
				        "0.079212,0.090841,0.104176,0.130648,0.183125,0.287406", \
				        "0.085799,0.097292,0.110548,0.136885,0.189286,0.293467", \
				        "0.100152,0.111722,0.124748,0.150696,0.202601,0.306380", \
				        "0.131036,0.142631,0.155478,0.180741,0.231701,0.334239", \
				        "0.178883,0.193737,0.209859,0.240075,0.294009,0.394055", \
				        "0.252302,0.271545,0.291495,0.329540,0.398161,0.516396", \
				        "0.376207,0.398826,0.424556,0.471219,0.555834,0.704832");
			}
			fall_transition(Timing_X4) {
				values ("0.011210,0.014236,0.017560,0.024330,0.037798,0.064645", \
				        "0.011221,0.014247,0.017544,0.024324,0.037837,0.064696", \
				        "0.012842,0.015273,0.018252,0.024379,0.037818,0.064670", \
				        "0.018197,0.020711,0.023537,0.028591,0.039481,0.064724", \
				        "0.028064,0.030873,0.034118,0.039811,0.050109,0.070498", \
				        "0.045529,0.048911,0.052596,0.059439,0.071779,0.093459", \
				        "0.076626,0.080417,0.084989,0.093433,0.108649,0.134891", \
				        "0.128415,0.133794,0.139673,0.151038,0.171216,0.205045");
			}
			rise_transition(Timing_X4) {
				values ("0.053500,0.064264,0.076648,0.100980,0.149052,0.244983", \
				        "0.053501,0.064221,0.076638,0.100981,0.149090,0.244957", \
				        "0.053501,0.064255,0.076645,0.100947,0.149038,0.244978", \
				        "0.053367,0.064235,0.076678,0.100984,0.149092,0.244959", \
				        "0.060697,0.069480,0.079983,0.101990,0.149094,0.244945", \
				        "0.079773,0.090455,0.101462,0.121282,0.159241,0.245608", \
				        "0.108052,0.121071,0.135207,0.160592,0.204637,0.279359", \
				        "0.153360,0.169614,0.186584,0.217909,0.273420,0.368061");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A2 & !B2 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.044139,0.049596,0.055807,0.067867,0.091515,0.137988", \
				        "0.047163,0.052595,0.058736,0.070842,0.094527,0.141018", \
				        "0.052529,0.058051,0.063982,0.076142,0.099849,0.146401", \
				        "0.062299,0.068112,0.074549,0.086651,0.110394,0.156967", \
				        "0.075332,0.082487,0.090029,0.104399,0.130237,0.177584", \
				        "0.086126,0.095898,0.106243,0.125300,0.158322,0.214307", \
				        "0.084973,0.098590,0.113053,0.139307,0.184988,0.259819", \
				        "0.052341,0.071673,0.091439,0.128087,0.191350,0.294885");
			}
			cell_rise(Timing_X4) {
				values ("0.074854,0.086779,0.100439,0.127211,0.180035,0.285151", \
				        "0.077653,0.089547,0.103290,0.129987,0.182889,0.288015", \
				        "0.084063,0.095912,0.109446,0.136156,0.189023,0.294195", \
				        "0.098259,0.110062,0.123355,0.149765,0.202207,0.306948", \
				        "0.128595,0.140667,0.153675,0.179387,0.230858,0.334408", \
				        "0.175764,0.190828,0.207615,0.238102,0.292425,0.393339", \
				        "0.248073,0.267463,0.287995,0.326466,0.395586,0.514565", \
				        "0.369093,0.392875,0.418446,0.465934,0.551446,0.701235");
			}
			fall_transition(Timing_X4) {
				values ("0.024427,0.028977,0.034074,0.043918,0.063720,0.103390", \
				        "0.024416,0.028937,0.034053,0.043892,0.063730,0.103393", \
				        "0.024340,0.028946,0.033928,0.043895,0.063724,0.103323", \
				        "0.026284,0.030296,0.035045,0.044258,0.063706,0.103375", \
				        "0.034313,0.038207,0.042497,0.050910,0.067696,0.104183", \
				        "0.051032,0.055428,0.060286,0.068931,0.085236,0.117322", \
				        "0.081062,0.086400,0.092413,0.103044,0.121942,0.155179", \
				        "0.132076,0.139590,0.147510,0.161764,0.186323,0.227137");
			}
			rise_transition(Timing_X4) {
				values ("0.092770,0.103521,0.115832,0.140281,0.188574,0.284170", \
				        "0.092798,0.103509,0.115851,0.140277,0.188565,0.284172", \
				        "0.092765,0.103521,0.115816,0.140296,0.188568,0.284147", \
				        "0.092655,0.103476,0.115819,0.140295,0.188565,0.284153", \
				        "0.100396,0.109097,0.119630,0.141459,0.188573,0.284169", \
				        "0.127425,0.135608,0.144279,0.161738,0.199432,0.284915", \
				        "0.171729,0.181301,0.192115,0.212617,0.250361,0.320011", \
				        "0.240968,0.251368,0.264010,0.288141,0.334698,0.419502");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.050869,0.056381,0.062533,0.074759,0.098579,0.145266", \
				        "0.053849,0.059274,0.065458,0.077654,0.101483,0.148171", \
				        "0.059198,0.064748,0.070755,0.082863,0.106740,0.153460", \
				        "0.069300,0.075012,0.081336,0.093471,0.117335,0.164076", \
				        "0.084332,0.091066,0.098283,0.112082,0.137504,0.184712", \
				        "0.098862,0.108032,0.117684,0.135779,0.167554,0.222310", \
				        "0.104525,0.116978,0.130319,0.155046,0.198390,0.270843", \
				        "0.086169,0.103409,0.121420,0.155065,0.214153,0.312758");
			}
			cell_rise(Timing_X4) {
				values ("0.088229,0.100091,0.113882,0.140458,0.193382,0.298441", \
				        "0.091636,0.103510,0.117243,0.144052,0.196938,0.302035", \
				        "0.097695,0.109636,0.123357,0.150061,0.203150,0.308333", \
				        "0.108969,0.121039,0.134821,0.161587,0.214561,0.319881", \
				        "0.131993,0.144536,0.158205,0.184829,0.237801,0.342924", \
				        "0.170956,0.185341,0.201435,0.231339,0.286961,0.391370", \
				        "0.236084,0.253755,0.272625,0.307884,0.372690,0.489381", \
				        "0.349472,0.371394,0.394092,0.437092,0.514342,0.651014");
			}
			fall_transition(Timing_X4) {
				values ("0.028630,0.033244,0.038353,0.048330,0.068202,0.107895", \
				        "0.028629,0.033244,0.038362,0.048313,0.068191,0.107890", \
				        "0.028594,0.033174,0.038332,0.048230,0.068140,0.107897", \
				        "0.029704,0.033930,0.038958,0.048452,0.068120,0.107861", \
				        "0.037032,0.041037,0.045548,0.054036,0.071334,0.108516", \
				        "0.053462,0.057865,0.062778,0.071436,0.088004,0.120567", \
				        "0.082320,0.087834,0.093892,0.104677,0.123898,0.157569", \
				        "0.131173,0.138619,0.146725,0.161069,0.186009,0.227565");
			}
			rise_transition(Timing_X4) {
				values ("0.092770,0.103519,0.115863,0.140285,0.188592,0.284161", \
				        "0.092766,0.103502,0.115829,0.140297,0.188565,0.284162", \
				        "0.092757,0.103512,0.115857,0.140279,0.188566,0.284146", \
				        "0.092769,0.103504,0.115830,0.140282,0.188574,0.284176", \
				        "0.097676,0.107113,0.118324,0.141107,0.188559,0.284168", \
				        "0.116672,0.125382,0.135271,0.154737,0.195992,0.285009", \
				        "0.148574,0.157873,0.168314,0.189096,0.229527,0.308273", \
				        "0.164253,0.175428,0.188299,0.212653,0.259255,0.347720");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !B1 & C1 & !C2 | A1 & !A2 & !B1 & !C1 & C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.043610,0.049074,0.055232,0.067268,0.090883,0.137304", \
				        "0.046596,0.051997,0.058116,0.070136,0.093767,0.140193", \
				        "0.051936,0.057461,0.063383,0.075388,0.099045,0.145496", \
				        "0.061622,0.067429,0.073839,0.085960,0.109662,0.156148", \
				        "0.074370,0.081586,0.089158,0.103540,0.129407,0.176748", \
				        "0.084643,0.094558,0.105038,0.124182,0.157365,0.213377", \
				        "0.084252,0.097889,0.112350,0.138622,0.184224,0.259023", \
				        "0.058549,0.077288,0.096700,0.132442,0.194426,0.296422");
			}
			cell_rise(Timing_X4) {
				values ("0.087150,0.098984,0.112566,0.139112,0.191834,0.296548", \
				        "0.090575,0.102386,0.115964,0.142663,0.195391,0.300167", \
				        "0.096613,0.108476,0.122048,0.148686,0.201624,0.306433", \
				        "0.107890,0.119888,0.133502,0.160190,0.213081,0.318037", \
				        "0.130827,0.143332,0.157003,0.183541,0.236263,0.341076", \
				        "0.169471,0.183791,0.199819,0.229739,0.285364,0.389490", \
				        "0.234731,0.251654,0.270520,0.305765,0.370634,0.487213", \
				        "0.343840,0.366059,0.388970,0.432443,0.510274,0.647572");
			}
			fall_transition(Timing_X4) {
				values ("0.024456,0.028944,0.034078,0.043915,0.063671,0.103329", \
				        "0.024446,0.029016,0.034081,0.043883,0.063720,0.103337", \
				        "0.024405,0.028971,0.034011,0.043897,0.063666,0.103349", \
				        "0.026454,0.030422,0.035219,0.044405,0.063708,0.103268", \
				        "0.034633,0.038483,0.042762,0.051129,0.067826,0.104223", \
				        "0.051255,0.055713,0.060580,0.069178,0.085525,0.117500", \
				        "0.080299,0.085775,0.091843,0.102643,0.121773,0.155272", \
				        "0.128725,0.136307,0.144438,0.158896,0.183897,0.225419");
			}
			rise_transition(Timing_X4) {
				values ("0.069512,0.080746,0.093437,0.118668,0.167624,0.263550", \
				        "0.069505,0.080748,0.093460,0.118626,0.167612,0.263555", \
				        "0.069483,0.080765,0.093434,0.118620,0.167597,0.263541", \
				        "0.069509,0.080758,0.093460,0.118644,0.167614,0.263564", \
				        "0.074560,0.084401,0.095913,0.119527,0.167604,0.263561", \
				        "0.092556,0.102061,0.112693,0.133485,0.175094,0.264414", \
				        "0.120486,0.131082,0.142389,0.164815,0.207370,0.287810", \
				        "0.166696,0.177911,0.190676,0.214924,0.261181,0.349161");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A2 & !B1 & !C1 & C2";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b0) && (C2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.050869,0.056381,0.062533,0.074759,0.098579,0.145266", \
				        "0.053849,0.059274,0.065458,0.077654,0.101483,0.148171", \
				        "0.059198,0.064748,0.070755,0.082863,0.106740,0.153460", \
				        "0.069300,0.075012,0.081336,0.093471,0.117335,0.164076", \
				        "0.084332,0.091066,0.098283,0.112082,0.137504,0.184712", \
				        "0.098862,0.108032,0.117684,0.135779,0.167554,0.222310", \
				        "0.104525,0.116978,0.130319,0.155046,0.198390,0.270843", \
				        "0.086169,0.103409,0.121420,0.155065,0.214153,0.312758");
			}
			cell_rise(Timing_X4) {
				values ("0.088229,0.100091,0.113882,0.140458,0.193382,0.298441", \
				        "0.091636,0.103510,0.117243,0.144052,0.196938,0.302035", \
				        "0.097695,0.109636,0.123357,0.150061,0.203150,0.308333", \
				        "0.108969,0.121039,0.134821,0.161587,0.214561,0.319881", \
				        "0.131993,0.144536,0.158205,0.184829,0.237801,0.342924", \
				        "0.170956,0.185341,0.201435,0.231339,0.286961,0.391370", \
				        "0.236084,0.253755,0.272625,0.307884,0.372690,0.489381", \
				        "0.347211,0.369252,0.392165,0.435457,0.513198,0.650485");
			}
			fall_transition(Timing_X4) {
				values ("0.028630,0.033244,0.038353,0.048330,0.068202,0.107895", \
				        "0.028629,0.033244,0.038362,0.048313,0.068191,0.107890", \
				        "0.028594,0.033174,0.038332,0.048230,0.068140,0.107897", \
				        "0.029704,0.033930,0.038958,0.048452,0.068120,0.107861", \
				        "0.037032,0.041037,0.045548,0.054036,0.071334,0.108516", \
				        "0.053462,0.057865,0.062778,0.071436,0.088004,0.120567", \
				        "0.082320,0.087834,0.093892,0.104677,0.123898,0.157569", \
				        "0.131173,0.138619,0.146725,0.161069,0.186009,0.227565");
			}
			rise_transition(Timing_X4) {
				values ("0.092770,0.103519,0.115863,0.140285,0.188592,0.284161", \
				        "0.092766,0.103502,0.115829,0.140297,0.188565,0.284162", \
				        "0.092757,0.103512,0.115857,0.140279,0.188566,0.284146", \
				        "0.092769,0.103504,0.115830,0.140282,0.188574,0.284176", \
				        "0.097676,0.107113,0.118324,0.141107,0.188559,0.284168", \
				        "0.116672,0.125382,0.135271,0.154737,0.195992,0.285009", \
				        "0.148574,0.157873,0.168314,0.189096,0.229527,0.308273", \
				        "0.201047,0.210588,0.221962,0.243965,0.287371,0.372580");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A2 & !B1 & C1 & C2 | A1 & !B1 & C1";
			sdf_cond	   : "(A2 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1) && (C2 == 1'b1) || (A1 == 1'b1) && (B1 == 1'b0) && (C1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.037094,0.041744,0.046948,0.057212,0.077212,0.116493", \
				        "0.040136,0.044740,0.049910,0.060168,0.080189,0.119506", \
				        "0.045528,0.050208,0.055246,0.065479,0.085492,0.124812", \
				        "0.054618,0.059724,0.065308,0.075852,0.095944,0.135316", \
				        "0.065509,0.072025,0.078891,0.091690,0.114569,0.155583", \
				        "0.072856,0.081935,0.091403,0.108761,0.138761,0.188766", \
				        "0.067645,0.080308,0.093631,0.117819,0.159455,0.227277", \
				        "0.033044,0.050582,0.068739,0.102020,0.159494,0.253268");
			}
			cell_rise(Timing_X4) {
				values ("0.086891,0.098728,0.112207,0.138843,0.191564,0.296268", \
				        "0.090298,0.102119,0.115665,0.142349,0.195056,0.299867", \
				        "0.096384,0.108234,0.121753,0.148420,0.201320,0.306142", \
				        "0.107723,0.119700,0.133312,0.159987,0.212797,0.317713", \
				        "0.130755,0.143234,0.156895,0.183417,0.236093,0.340824", \
				        "0.169950,0.184158,0.200134,0.230020,0.285521,0.389528", \
				        "0.235923,0.253581,0.272207,0.307362,0.371950,0.488203", \
				        "0.349472,0.371394,0.394092,0.437092,0.514342,0.651014");
			}
			fall_transition(Timing_X4) {
				values ("0.020207,0.024017,0.028231,0.036645,0.053365,0.086927", \
				        "0.020189,0.024064,0.028283,0.036638,0.053381,0.086946", \
				        "0.020238,0.023998,0.028190,0.036593,0.053394,0.086893", \
				        "0.022901,0.026359,0.030169,0.037674,0.053571,0.086917", \
				        "0.030988,0.034321,0.038118,0.045098,0.059074,0.088815", \
				        "0.046608,0.050582,0.054755,0.062433,0.076513,0.103651", \
				        "0.074103,0.079030,0.084447,0.094042,0.110955,0.140121", \
				        "0.120541,0.127481,0.134736,0.147828,0.170064,0.206709");
			}
			rise_transition(Timing_X4) {
				values ("0.069366,0.080609,0.093304,0.118484,0.167399,0.263312", \
				        "0.069374,0.080621,0.093333,0.118464,0.167397,0.263331", \
				        "0.069382,0.080623,0.093315,0.118432,0.167387,0.263300", \
				        "0.069364,0.080603,0.093306,0.118434,0.167395,0.263329", \
				        "0.074449,0.084288,0.095806,0.119349,0.167388,0.263334", \
				        "0.092167,0.101855,0.112420,0.133202,0.174832,0.264185", \
				        "0.119582,0.130012,0.141497,0.163977,0.206654,0.287335", \
				        "0.164253,0.175428,0.188299,0.212653,0.259255,0.347720");
			}
		}

		timing () {

			related_pin	   : "C1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.051695,0.057165,0.063330,0.075438,0.099055,0.145544", \
				        "0.054665,0.060123,0.066271,0.078375,0.102034,0.148520", \
				        "0.059375,0.064925,0.070889,0.082971,0.106692,0.153255", \
				        "0.066647,0.072360,0.078573,0.090541,0.114262,0.160880", \
				        "0.075732,0.081988,0.088901,0.102108,0.126970,0.174046", \
				        "0.083191,0.091249,0.099714,0.115434,0.143975,0.195565", \
				        "0.076388,0.087724,0.099806,0.121689,0.159649,0.222895", \
				        "0.029946,0.046867,0.064267,0.096097,0.150600,0.238678");
			}
			cell_rise(Timing_X4) {
				values ("0.107534,0.119622,0.133138,0.160056,0.213284,0.318310", \
				        "0.110348,0.122376,0.135942,0.162895,0.216080,0.321121", \
				        "0.116813,0.128759,0.142139,0.169040,0.222216,0.327208", \
				        "0.130625,0.142776,0.156060,0.182656,0.235425,0.340075", \
				        "0.161654,0.172830,0.186162,0.212267,0.264113,0.367814", \
				        "0.218653,0.232324,0.246840,0.274658,0.325827,0.427246", \
				        "0.303708,0.321330,0.339709,0.375047,0.439619,0.552160", \
				        "0.441807,0.462557,0.486358,0.529812,0.609907,0.752370");
			}
			fall_transition(Timing_X4) {
				values ("0.024412,0.028935,0.034010,0.043905,0.063730,0.103394", \
				        "0.024402,0.028910,0.033976,0.043879,0.063716,0.103388", \
				        "0.024398,0.028911,0.033970,0.043869,0.063723,0.103344", \
				        "0.025300,0.029543,0.034390,0.044026,0.063727,0.103381", \
				        "0.029218,0.033447,0.038354,0.047662,0.066120,0.104002", \
				        "0.040829,0.044832,0.049435,0.058119,0.075681,0.111855", \
				        "0.066473,0.071040,0.076061,0.085189,0.101958,0.134815", \
				        "0.115570,0.121023,0.127110,0.138363,0.158083,0.192158");
			}
			rise_transition(Timing_X4) {
				values ("0.069009,0.080088,0.092742,0.117518,0.166185,0.262768", \
				        "0.069003,0.080099,0.092744,0.117497,0.166142,0.262764", \
				        "0.069005,0.080107,0.092736,0.117471,0.166145,0.262737", \
				        "0.069004,0.080080,0.092737,0.117486,0.166172,0.262752", \
				        "0.070752,0.080990,0.093039,0.117474,0.166163,0.262753", \
				        "0.088977,0.099123,0.109722,0.129581,0.171164,0.262731", \
				        "0.118901,0.131537,0.145489,0.170226,0.213296,0.289013", \
				        "0.162922,0.179119,0.196461,0.227934,0.283463,0.377607");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.051695,0.057165,0.063330,0.075438,0.099055,0.145544", \
				        "0.054665,0.060123,0.066271,0.078375,0.102034,0.148520", \
				        "0.059375,0.064925,0.070889,0.082971,0.106692,0.153255", \
				        "0.066647,0.072360,0.078573,0.090541,0.114262,0.160880", \
				        "0.075732,0.081988,0.088901,0.102108,0.126970,0.174046", \
				        "0.083191,0.091249,0.099714,0.115434,0.143975,0.195565", \
				        "0.076388,0.087724,0.099806,0.121689,0.159649,0.222895", \
				        "0.029946,0.046867,0.064267,0.096097,0.150600,0.238678");
			}
			cell_rise(Timing_X4) {
				values ("0.101199,0.113623,0.127620,0.155165,0.209022,0.315220", \
				        "0.103978,0.116410,0.130397,0.157873,0.211786,0.318032", \
				        "0.110319,0.122610,0.136631,0.164052,0.217877,0.324100", \
				        "0.124121,0.136405,0.150278,0.177465,0.230978,0.336801", \
				        "0.154796,0.166569,0.180110,0.206798,0.259374,0.364148", \
				        "0.211186,0.225020,0.240460,0.268835,0.320438,0.422947", \
				        "0.295240,0.313178,0.332127,0.367988,0.433318,0.547122", \
				        "0.432336,0.453930,0.477572,0.521903,0.603017,0.746379");
			}
			fall_transition(Timing_X4) {
				values ("0.024412,0.028935,0.034010,0.043905,0.063730,0.103394", \
				        "0.024402,0.028910,0.033976,0.043879,0.063716,0.103388", \
				        "0.024398,0.028911,0.033970,0.043869,0.063723,0.103344", \
				        "0.025300,0.029543,0.034390,0.044026,0.063727,0.103381", \
				        "0.029218,0.033447,0.038354,0.047662,0.066120,0.104002", \
				        "0.040829,0.044832,0.049435,0.058119,0.075681,0.111855", \
				        "0.066473,0.071040,0.076061,0.085189,0.101958,0.134815", \
				        "0.115570,0.121023,0.127110,0.138363,0.158083,0.192158");
			}
			rise_transition(Timing_X4) {
				values ("0.110123,0.120644,0.132858,0.157019,0.205031,0.300623", \
				        "0.110118,0.120659,0.132848,0.157046,0.205011,0.300621", \
				        "0.110083,0.120649,0.132871,0.157049,0.205021,0.300616", \
				        "0.110140,0.120617,0.132837,0.157043,0.205024,0.300608", \
				        "0.112156,0.121761,0.133276,0.156876,0.205038,0.300618", \
				        "0.133634,0.141804,0.151027,0.170107,0.210739,0.300578", \
				        "0.177031,0.186973,0.197954,0.218668,0.256389,0.328552", \
				        "0.240343,0.252049,0.265852,0.291662,0.339602,0.425264");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C2 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.044796,0.050194,0.056216,0.068162,0.091483,0.137654", \
				        "0.047724,0.053096,0.059185,0.071101,0.094468,0.140627", \
				        "0.052436,0.057863,0.063789,0.075666,0.099080,0.145347", \
				        "0.059305,0.065046,0.071229,0.083181,0.106671,0.152965", \
				        "0.067125,0.073619,0.080660,0.093976,0.119058,0.166138", \
				        "0.071079,0.079878,0.088967,0.105479,0.134872,0.186980", \
				        "0.057840,0.070508,0.083750,0.107375,0.147464,0.212603", \
				        "0.001928,0.020999,0.040210,0.074743,0.132647,0.224383");
			}
			cell_rise(Timing_X4) {
				values ("0.099879,0.112283,0.126211,0.153603,0.207311,0.313165", \
				        "0.102695,0.115037,0.128999,0.156347,0.210110,0.315981", \
				        "0.109006,0.121274,0.135173,0.162482,0.216182,0.322050", \
				        "0.122839,0.135096,0.148830,0.175942,0.229278,0.334768", \
				        "0.153567,0.165241,0.178663,0.205241,0.257687,0.362124", \
				        "0.209400,0.223261,0.238705,0.267122,0.318784,0.420931", \
				        "0.292424,0.310493,0.329430,0.365386,0.430889,0.544829", \
				        "0.427841,0.449668,0.473351,0.517788,0.599114,0.742646");
			}
			fall_transition(Timing_X4) {
				values ("0.020093,0.024559,0.029543,0.039432,0.059141,0.098794", \
				        "0.020088,0.024557,0.029575,0.039385,0.059198,0.098795", \
				        "0.020087,0.024547,0.029567,0.039365,0.059200,0.098742", \
				        "0.021477,0.025615,0.030382,0.039754,0.059178,0.098774", \
				        "0.025980,0.030021,0.034780,0.043787,0.062151,0.099660", \
				        "0.038541,0.042488,0.046949,0.055414,0.072452,0.108003", \
				        "0.065052,0.069509,0.074446,0.083480,0.099978,0.131976", \
				        "0.115831,0.120846,0.126635,0.137443,0.156909,0.190577");
			}
			rise_transition(Timing_X4) {
				values ("0.086620,0.097553,0.110127,0.134994,0.183713,0.279751", \
				        "0.086628,0.097553,0.110139,0.134970,0.183706,0.279757", \
				        "0.086606,0.097542,0.110106,0.134960,0.183706,0.279758", \
				        "0.086664,0.097557,0.110107,0.134995,0.183718,0.279735", \
				        "0.088756,0.098689,0.110568,0.134798,0.183727,0.279735", \
				        "0.109750,0.119040,0.128662,0.148217,0.189476,0.279736", \
				        "0.147189,0.158604,0.170834,0.193685,0.234250,0.307792", \
				        "0.201751,0.215462,0.230978,0.259503,0.311113,0.401011");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.040163,0.044736,0.049955,0.060078,0.079970,0.119258", \
				        "0.043141,0.047741,0.052865,0.063056,0.082991,0.122287", \
				        "0.047981,0.052599,0.057595,0.067736,0.087698,0.127090", \
				        "0.055324,0.060335,0.065716,0.076068,0.096106,0.135514", \
				        "0.063780,0.069813,0.076219,0.088283,0.110477,0.151336", \
				        "0.067717,0.076215,0.085012,0.100924,0.128601,0.176019", \
				        "0.053880,0.066327,0.079291,0.102426,0.141616,0.204619", \
				        "-0.003249,0.015414,0.034460,0.068405,0.125504,0.215749");
			}
			cell_rise(Timing_X4) {
				values ("0.105813,0.118005,0.131632,0.158717,0.212078,0.317433", \
				        "0.108641,0.120755,0.134426,0.161514,0.214903,0.320312", \
				        "0.115098,0.127066,0.140648,0.167697,0.220971,0.326372", \
				        "0.128810,0.140983,0.154440,0.181222,0.234151,0.339184", \
				        "0.159662,0.170994,0.184414,0.210649,0.262644,0.366770", \
				        "0.216413,0.230010,0.244856,0.272768,0.324040,0.425841", \
				        "0.301089,0.318729,0.337171,0.372658,0.437437,0.550318", \
				        "0.438837,0.459645,0.483411,0.527121,0.607437,0.750077");
			}
			fall_transition(Timing_X4) {
				values ("0.018505,0.022217,0.026356,0.034659,0.051341,0.084558", \
				        "0.018492,0.022248,0.026397,0.034725,0.051262,0.084557", \
				        "0.018499,0.022163,0.026357,0.034679,0.051217,0.084539", \
				        "0.020362,0.023812,0.027627,0.035449,0.051489,0.084506", \
				        "0.026160,0.029428,0.033238,0.040658,0.055709,0.086110", \
				        "0.040205,0.043553,0.047444,0.054704,0.068520,0.097215", \
				        "0.067988,0.071889,0.076259,0.084451,0.099259,0.126501", \
				        "0.120176,0.124702,0.129810,0.139570,0.157504,0.188614");
			}
			rise_transition(Timing_X4) {
				values ("0.088098,0.099305,0.112062,0.137220,0.186273,0.282643", \
				        "0.088097,0.099283,0.112105,0.137199,0.186275,0.282638", \
				        "0.088094,0.099292,0.112058,0.137233,0.186239,0.282615", \
				        "0.088133,0.099244,0.112080,0.137198,0.186250,0.282640", \
				        "0.090095,0.100315,0.112471,0.137140,0.186254,0.282637", \
				        "0.110796,0.120178,0.129884,0.149863,0.191614,0.282613", \
				        "0.148890,0.160220,0.172646,0.195450,0.235832,0.309708", \
				        "0.203882,0.217873,0.233074,0.261569,0.313061,0.402741");
			}
		}

		timing () {

			related_pin	   : "C1";
			when	           : "A1 & B1 & !C2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.030213,0.033707,0.037667,0.045513,0.061109,0.092114", \
				        "0.033458,0.036963,0.040888,0.048717,0.064328,0.095368", \
				        "0.039123,0.042760,0.046640,0.054508,0.070131,0.101194", \
				        "0.046510,0.051025,0.055711,0.064458,0.080779,0.111966", \
				        "0.052861,0.059076,0.065493,0.077064,0.097232,0.131983", \
				        "0.051580,0.060865,0.070348,0.086969,0.114934,0.159913", \
				        "0.028735,0.042817,0.057118,0.082075,0.123026,0.186754", \
				        "-0.041512,-0.020327,0.000867,0.037788,0.097948,0.190724");
			}
			cell_rise(Timing_X4) {
				values ("0.107534,0.119622,0.133138,0.160056,0.213284,0.318310", \
				        "0.110348,0.122376,0.135942,0.162895,0.216080,0.321121", \
				        "0.116813,0.128759,0.142139,0.169040,0.222216,0.327208", \
				        "0.130625,0.142776,0.156060,0.182656,0.235425,0.340075", \
				        "0.161654,0.172830,0.186162,0.212267,0.264113,0.367814", \
				        "0.218653,0.232324,0.246840,0.274658,0.325827,0.427246", \
				        "0.303708,0.321330,0.339709,0.375047,0.439619,0.552160", \
				        "0.441807,0.462557,0.486358,0.529812,0.609907,0.752370");
			}
			fall_transition(Timing_X4) {
				values ("0.011420,0.014433,0.017744,0.024393,0.037826,0.064540", \
				        "0.011471,0.014384,0.017766,0.024398,0.037807,0.064529", \
				        "0.012017,0.014754,0.017893,0.024476,0.037831,0.064558", \
				        "0.015411,0.018008,0.020969,0.026714,0.038728,0.064566", \
				        "0.023211,0.025983,0.029028,0.034880,0.046020,0.068443", \
				        "0.038582,0.041682,0.045212,0.051714,0.063441,0.085286", \
				        "0.068802,0.071969,0.075828,0.083211,0.096767,0.120786", \
				        "0.125634,0.128666,0.132360,0.140646,0.156770,0.185720");
			}
			rise_transition(Timing_X4) {
				values ("0.069009,0.080088,0.092742,0.117518,0.166185,0.262768", \
				        "0.069003,0.080099,0.092744,0.117497,0.166142,0.262764", \
				        "0.069005,0.080107,0.092736,0.117471,0.166145,0.262737", \
				        "0.069004,0.080080,0.092737,0.117486,0.166172,0.262752", \
				        "0.070752,0.080990,0.093039,0.117474,0.166163,0.262753", \
				        "0.088977,0.099123,0.109722,0.129581,0.171164,0.262731", \
				        "0.118901,0.131537,0.145489,0.170226,0.213296,0.289013", \
				        "0.162922,0.179119,0.196461,0.227934,0.283463,0.377607");
			}
		}

		timing () {

			related_pin	   : "C2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.058364,0.063867,0.070026,0.082263,0.106082,0.152775", \
				        "0.061275,0.066742,0.072900,0.085127,0.108928,0.155630", \
				        "0.065992,0.071575,0.077518,0.089682,0.113541,0.160309", \
				        "0.073468,0.079114,0.085294,0.097347,0.121173,0.167964", \
				        "0.083425,0.089559,0.096343,0.109391,0.134132,0.181175", \
				        "0.093252,0.100813,0.108875,0.124107,0.152041,0.203242", \
				        "0.091645,0.102163,0.113398,0.134131,0.170434,0.232155", \
				        "0.057319,0.072531,0.088472,0.117810,0.169011,0.253309");
			}
			cell_rise(Timing_X4) {
				values ("0.120870,0.132916,0.146468,0.173362,0.226544,0.331537", \
				        "0.124378,0.136434,0.149952,0.176875,0.230108,0.335156", \
				        "0.130655,0.142716,0.156202,0.183169,0.236327,0.341407", \
				        "0.142015,0.154176,0.167753,0.194765,0.247925,0.353068", \
				        "0.165659,0.177611,0.191232,0.218085,0.271100,0.376194", \
				        "0.211261,0.224279,0.239118,0.267349,0.320721,0.424898", \
				        "0.286334,0.302591,0.319218,0.352142,0.413810,0.526314", \
				        "0.414026,0.432500,0.454058,0.493382,0.566256,0.697525");
			}
			fall_transition(Timing_X4) {
				values ("0.028626,0.033179,0.038322,0.048233,0.068186,0.107898", \
				        "0.028618,0.033140,0.038304,0.048303,0.068194,0.107879", \
				        "0.028617,0.033154,0.038283,0.048255,0.068147,0.107925", \
				        "0.029182,0.033588,0.038585,0.048359,0.068176,0.107862", \
				        "0.032740,0.037075,0.042096,0.051503,0.070116,0.108382", \
				        "0.043301,0.047463,0.052255,0.061268,0.079257,0.115761", \
				        "0.067874,0.072553,0.077664,0.086908,0.104060,0.137785", \
				        "0.114936,0.120593,0.126870,0.138248,0.158238,0.192900");
			}
			rise_transition(Timing_X4) {
				values ("0.069001,0.080095,0.092749,0.117509,0.166146,0.262764", \
				        "0.069006,0.080090,0.092712,0.117461,0.166152,0.262771", \
				        "0.069007,0.080087,0.092698,0.117526,0.166167,0.262735", \
				        "0.068992,0.080101,0.092703,0.117510,0.166183,0.262769", \
				        "0.070191,0.080855,0.093057,0.117466,0.166156,0.262753", \
				        "0.082717,0.093192,0.104450,0.125982,0.170019,0.262849", \
				        "0.103978,0.115776,0.128590,0.152796,0.197515,0.281073", \
				        "0.138298,0.151871,0.166645,0.194159,0.244753,0.337586");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.058364,0.063867,0.070026,0.082263,0.106082,0.152775", \
				        "0.061275,0.066742,0.072900,0.085127,0.108928,0.155630", \
				        "0.065992,0.071575,0.077518,0.089682,0.113541,0.160309", \
				        "0.073468,0.079114,0.085294,0.097347,0.121173,0.167964", \
				        "0.083425,0.089559,0.096343,0.109391,0.134132,0.181175", \
				        "0.093252,0.100813,0.108875,0.124107,0.152041,0.203242", \
				        "0.091645,0.102163,0.113398,0.134131,0.170434,0.232155", \
				        "0.057319,0.072531,0.088472,0.117810,0.169011,0.253309");
			}
			cell_rise(Timing_X4) {
				values ("0.114501,0.126899,0.141035,0.168441,0.222173,0.328385", \
				        "0.118057,0.130472,0.144388,0.171847,0.225618,0.331913", \
				        "0.124365,0.136769,0.150755,0.178254,0.232113,0.338349", \
				        "0.135774,0.148199,0.162336,0.189867,0.243745,0.350011", \
				        "0.159226,0.171620,0.185589,0.213092,0.266926,0.373095", \
				        "0.203813,0.217454,0.232877,0.261872,0.315918,0.421415", \
				        "0.277845,0.294064,0.311768,0.345252,0.407755,0.521845", \
				        "0.403276,0.423480,0.444249,0.484500,0.558472,0.691304");
			}
			fall_transition(Timing_X4) {
				values ("0.028626,0.033179,0.038322,0.048233,0.068186,0.107898", \
				        "0.028618,0.033140,0.038304,0.048303,0.068194,0.107879", \
				        "0.028617,0.033154,0.038283,0.048255,0.068147,0.107925", \
				        "0.029182,0.033588,0.038585,0.048359,0.068176,0.107862", \
				        "0.032740,0.037075,0.042096,0.051503,0.070116,0.108382", \
				        "0.043301,0.047463,0.052255,0.061268,0.079257,0.115761", \
				        "0.067874,0.072553,0.077664,0.086908,0.104060,0.137785", \
				        "0.114936,0.120593,0.126870,0.138248,0.158238,0.192900");
			}
			rise_transition(Timing_X4) {
				values ("0.110094,0.120631,0.132851,0.157069,0.205005,0.300609", \
				        "0.110115,0.120642,0.132848,0.157041,0.205008,0.300628", \
				        "0.110111,0.120636,0.132873,0.157044,0.205009,0.300617", \
				        "0.110108,0.120627,0.132870,0.157056,0.205006,0.300612", \
				        "0.111499,0.121488,0.133272,0.156971,0.205041,0.300595", \
				        "0.126427,0.135379,0.145363,0.166043,0.209260,0.300762", \
				        "0.156069,0.165971,0.176879,0.198310,0.239450,0.319711", \
				        "0.202817,0.213622,0.225918,0.249517,0.294898,0.381919");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b0) && (C1 == 1'b0) || (A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.051102,0.056592,0.062727,0.074777,0.098370,0.144816", \
				        "0.054010,0.059428,0.065552,0.077627,0.101276,0.147713", \
				        "0.058728,0.064258,0.070115,0.082260,0.105879,0.152374", \
				        "0.065995,0.071685,0.077883,0.089861,0.113505,0.160013", \
				        "0.074992,0.081262,0.088141,0.101366,0.126193,0.173226", \
				        "0.081872,0.090048,0.098598,0.114419,0.143069,0.194696", \
				        "0.074697,0.086265,0.098464,0.120508,0.158686,0.222040", \
				        "0.032862,0.049421,0.066754,0.098141,0.152121,0.239477");
			}
			cell_rise(Timing_X4) {
				values ("0.113213,0.125596,0.139512,0.166867,0.220519,0.326368", \
				        "0.116712,0.129124,0.143031,0.170330,0.223985,0.329860", \
				        "0.123055,0.135398,0.149291,0.176677,0.230408,0.336292", \
				        "0.134473,0.146871,0.160916,0.188292,0.242070,0.347967", \
				        "0.157971,0.170281,0.184154,0.211560,0.265212,0.371071", \
				        "0.202150,0.215837,0.231179,0.260188,0.314271,0.419377", \
				        "0.275643,0.291887,0.309583,0.343107,0.405604,0.519596", \
				        "0.399989,0.420388,0.441100,0.481476,0.555488,0.688271");
			}
			fall_transition(Timing_X4) {
				values ("0.024457,0.028942,0.034006,0.043927,0.063726,0.103303", \
				        "0.024456,0.028925,0.033945,0.043884,0.063702,0.103335", \
				        "0.024425,0.028905,0.033984,0.043891,0.063717,0.103325", \
				        "0.025415,0.029669,0.034547,0.044102,0.063726,0.103359", \
				        "0.029351,0.033569,0.038366,0.047758,0.066239,0.103999", \
				        "0.040882,0.044935,0.049591,0.058252,0.075783,0.111923", \
				        "0.066148,0.070759,0.075835,0.084949,0.101867,0.134817", \
				        "0.114242,0.119661,0.125759,0.136983,0.156754,0.191027");
			}
			rise_transition(Timing_X4) {
				values ("0.086614,0.097558,0.110158,0.134969,0.183699,0.279723", \
				        "0.086580,0.097553,0.110149,0.134976,0.183708,0.279751", \
				        "0.086609,0.097545,0.110131,0.134970,0.183697,0.279739", \
				        "0.086620,0.097540,0.110128,0.134964,0.183699,0.279746", \
				        "0.088072,0.098418,0.110535,0.134923,0.183717,0.279727", \
				        "0.102760,0.112456,0.123064,0.144170,0.187974,0.279911", \
				        "0.128949,0.139847,0.151540,0.174360,0.217433,0.298960", \
				        "0.170411,0.182344,0.195832,0.221248,0.269132,0.358778");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b1) && (C1 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b1) && (B2 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.045328,0.050011,0.055263,0.065525,0.085642,0.125182", \
				        "0.048270,0.052901,0.058124,0.068405,0.088550,0.128091", \
				        "0.053107,0.057807,0.062889,0.073174,0.093328,0.132905", \
				        "0.060982,0.065912,0.071283,0.081602,0.101773,0.141366", \
				        "0.070961,0.076693,0.082886,0.094690,0.116579,0.157243", \
				        "0.078118,0.085973,0.094206,0.109348,0.136123,0.182772", \
				        "0.070325,0.081737,0.093658,0.115326,0.152510,0.213551", \
				        "0.027134,0.043472,0.060553,0.091533,0.144741,0.230645");
			}
			cell_rise(Timing_X4) {
				values ("0.119177,0.131304,0.144956,0.171992,0.225289,0.330677", \
				        "0.122671,0.134813,0.148364,0.175466,0.228846,0.334319", \
				        "0.129014,0.141122,0.154746,0.181840,0.235152,0.340595", \
				        "0.140415,0.152594,0.166331,0.193478,0.246813,0.352284", \
				        "0.163962,0.176037,0.189729,0.216812,0.270006,0.375441", \
				        "0.209068,0.222266,0.237333,0.265794,0.319340,0.423940", \
				        "0.283554,0.299843,0.316898,0.349894,0.411789,0.524822", \
				        "0.410491,0.428998,0.450650,0.490288,0.563459,0.695167");
			}
			fall_transition(Timing_X4) {
				values ("0.022294,0.026049,0.030201,0.038563,0.055044,0.088318", \
				        "0.022295,0.026008,0.030166,0.038452,0.055144,0.088330", \
				        "0.022238,0.025996,0.030156,0.038514,0.055150,0.088382", \
				        "0.023641,0.027106,0.031252,0.038969,0.055158,0.088364", \
				        "0.028866,0.032271,0.036224,0.043792,0.058790,0.089632", \
				        "0.042240,0.045632,0.049507,0.056817,0.071250,0.100212", \
				        "0.068832,0.072868,0.077387,0.085693,0.100719,0.128510", \
				        "0.118438,0.123195,0.128654,0.138881,0.157167,0.188837");
			}
			rise_transition(Timing_X4) {
				values ("0.088087,0.099280,0.112064,0.137209,0.186250,0.282623", \
				        "0.088100,0.099295,0.112087,0.137205,0.186256,0.282628", \
				        "0.088097,0.099305,0.112058,0.137200,0.186264,0.282645", \
				        "0.088096,0.099298,0.112061,0.137204,0.186271,0.282633", \
				        "0.089423,0.100140,0.112442,0.137191,0.186279,0.282645", \
				        "0.103925,0.113828,0.124603,0.145998,0.190328,0.282745", \
				        "0.130477,0.141376,0.153242,0.176238,0.219402,0.301347", \
				        "0.171943,0.184153,0.197534,0.223111,0.271053,0.360860");
			}
		}

		timing () {

			related_pin	   : "C2";
			when	           : "A1 & B1 & !C1";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b1) && (C1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.033490,0.037162,0.041329,0.049384,0.065261,0.096568", \
				        "0.036761,0.040417,0.044512,0.052622,0.068516,0.099813", \
				        "0.042636,0.046353,0.050342,0.058433,0.074324,0.105626", \
				        "0.051258,0.055569,0.060178,0.068781,0.085022,0.116390", \
				        "0.060053,0.065824,0.071824,0.082880,0.102439,0.136720", \
				        "0.062696,0.071136,0.079880,0.095467,0.122242,0.165980", \
				        "0.047111,0.059676,0.072622,0.095615,0.134230,0.195617", \
				        "-0.007081,0.011046,0.029578,0.062623,0.118148,0.205990");
			}
			cell_rise(Timing_X4) {
				values ("0.120870,0.132916,0.146468,0.173362,0.226544,0.331537", \
				        "0.124378,0.136434,0.149952,0.176875,0.230108,0.335156", \
				        "0.130655,0.142716,0.156202,0.183169,0.236327,0.341407", \
				        "0.142015,0.154176,0.167753,0.194765,0.247925,0.353068", \
				        "0.165659,0.177611,0.191232,0.218085,0.271100,0.376194", \
				        "0.211261,0.224279,0.239118,0.267349,0.320721,0.424898", \
				        "0.286334,0.302591,0.319218,0.352142,0.413810,0.526314", \
				        "0.414026,0.432500,0.454058,0.493382,0.566256,0.697525");
			}
			fall_transition(Timing_X4) {
				values ("0.014657,0.017687,0.020971,0.027679,0.041014,0.067629", \
				        "0.014662,0.017681,0.020922,0.027630,0.040950,0.067586", \
				        "0.014899,0.017738,0.021019,0.027667,0.040949,0.067558", \
				        "0.017928,0.020557,0.023578,0.029379,0.041514,0.067621", \
				        "0.025521,0.028219,0.031261,0.037079,0.048218,0.070994", \
				        "0.040415,0.043494,0.047030,0.053507,0.065320,0.087269", \
				        "0.068922,0.072392,0.076437,0.084044,0.097876,0.122222", \
				        "0.121314,0.125475,0.130038,0.139151,0.155953,0.185514");
			}
			rise_transition(Timing_X4) {
				values ("0.069001,0.080095,0.092749,0.117509,0.166146,0.262764", \
				        "0.069006,0.080090,0.092712,0.117461,0.166152,0.262771", \
				        "0.069007,0.080087,0.092698,0.117526,0.166167,0.262735", \
				        "0.068992,0.080101,0.092703,0.117510,0.166183,0.262769", \
				        "0.070191,0.080855,0.093057,0.117466,0.166156,0.262753", \
				        "0.082717,0.093192,0.104450,0.125982,0.170019,0.262849", \
				        "0.103978,0.115776,0.128590,0.152796,0.197515,0.281073", \
				        "0.138298,0.151871,0.166645,0.194159,0.244753,0.337586");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.010146,0.008449,0.006522,0.002688,-0.004993,-0.020410", \
				        "0.010185,0.008479,0.006542,0.002717,-0.004982,-0.020391", \
				        "0.010224,0.008525,0.006607,0.002764,-0.004938,-0.020359", \
				        "0.010412,0.008722,0.006786,0.002903,-0.004832,-0.020298", \
				        "0.011000,0.009247,0.007263,0.003329,-0.004510,-0.020080", \
				        "0.012900,0.010952,0.008826,0.004659,-0.003432,-0.019274", \
				        "0.017898,0.015750,0.013339,0.008711,-0.000079,-0.016704", \
				        "0.029466,0.027118,0.024399,0.019196,0.009302,-0.009080");
			}
			rise_power(Power_X4) {
				values ("0.008742,0.010466,0.012444,0.016355,0.024120,0.039645", \
				        "0.008770,0.010472,0.012431,0.016348,0.024131,0.039655", \
				        "0.008830,0.010560,0.012501,0.016388,0.024136,0.039659", \
				        "0.009222,0.010887,0.012791,0.016612,0.024292,0.039746", \
				        "0.010228,0.011812,0.013656,0.017344,0.024881,0.040151", \
				        "0.012602,0.014066,0.015777,0.019322,0.026582,0.041490", \
				        "0.017897,0.019154,0.020683,0.023896,0.030736,0.045120", \
				        "0.029485,0.030370,0.031611,0.034302,0.040368,0.053757");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.008742,0.010466,0.012444,0.016355,0.024120,0.039645", \
				        "0.008770,0.010472,0.012431,0.016348,0.024131,0.039655", \
				        "0.008830,0.010560,0.012501,0.016388,0.024136,0.039659", \
				        "0.009222,0.010887,0.012791,0.016612,0.024292,0.039746", \
				        "0.010228,0.011812,0.013656,0.017344,0.024881,0.040151", \
				        "0.012602,0.014066,0.015777,0.019322,0.026582,0.041490", \
				        "0.017897,0.019154,0.020683,0.023896,0.030736,0.045120", \
				        "0.029485,0.030370,0.031611,0.034302,0.040368,0.053757");
			}
			fall_power(Power_X4) {
				values ("0.010146,0.008449,0.006522,0.002688,-0.004993,-0.020410", \
				        "0.010185,0.008479,0.006542,0.002717,-0.004982,-0.020391", \
				        "0.010224,0.008525,0.006607,0.002764,-0.004938,-0.020359", \
				        "0.010412,0.008722,0.006786,0.002903,-0.004832,-0.020298", \
				        "0.011000,0.009247,0.007263,0.003329,-0.004510,-0.020080", \
				        "0.012900,0.010952,0.008826,0.004659,-0.003432,-0.019274", \
				        "0.017898,0.015750,0.013339,0.008711,-0.000079,-0.016704", \
				        "0.029466,0.027118,0.024399,0.019196,0.009302,-0.009080");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2 & C1 & !C2 | !A2 & B1 & !B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.007776,0.009509,0.011484,0.015394,0.023164,0.038696", \
				        "0.007780,0.009511,0.011470,0.015384,0.023157,0.038691", \
				        "0.007875,0.009594,0.011543,0.015419,0.023171,0.038685", \
				        "0.008262,0.009928,0.011823,0.015648,0.023331,0.038782", \
				        "0.009297,0.010858,0.012697,0.016384,0.023910,0.039196", \
				        "0.011664,0.013116,0.014836,0.018341,0.025618,0.040539", \
				        "0.017072,0.018267,0.019772,0.022990,0.029787,0.044145", \
				        "0.028789,0.029741,0.030896,0.033487,0.039445,0.052781");
			}
			fall_power(Power_X4) {
				values ("0.006984,0.005293,0.003365,-0.000469,-0.008173,-0.023590", \
				        "0.007018,0.005327,0.003389,-0.000453,-0.008156,-0.023590", \
				        "0.007083,0.005379,0.003457,-0.000397,-0.008111,-0.023543", \
				        "0.007292,0.005589,0.003656,-0.000237,-0.007994,-0.023469", \
				        "0.008021,0.006208,0.004204,0.000222,-0.007646,-0.023262", \
				        "0.010140,0.008161,0.005952,0.001689,-0.006503,-0.022415", \
				        "0.015516,0.013271,0.010795,0.006025,-0.002938,-0.019751", \
				        "0.027504,0.025019,0.022205,0.016852,0.006763,-0.011866");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & C1 | !A2 & B1 & B2 & C2 | !A2 & B2 & C1 & C2";

			rise_power(Power_X4) {
				values ("0.007661,0.009397,0.011361,0.015276,0.023039,0.038577", \
				        "0.007668,0.009388,0.011362,0.015255,0.023046,0.038556", \
				        "0.007800,0.009474,0.011421,0.015298,0.023067,0.038569", \
				        "0.008175,0.009835,0.011741,0.015558,0.023225,0.038668", \
				        "0.009263,0.010813,0.012650,0.016326,0.023859,0.039107", \
				        "0.011721,0.013150,0.014843,0.018370,0.025642,0.040538", \
				        "0.017190,0.018418,0.019908,0.023107,0.029950,0.044292", \
				        "0.029244,0.030172,0.031283,0.033874,0.039851,0.053173");
			}
			fall_power(Power_X4) {
				values ("0.007352,0.005640,0.003727,-0.000103,-0.007798,-0.023227", \
				        "0.007383,0.005673,0.003750,-0.000077,-0.007786,-0.023199", \
				        "0.007446,0.005749,0.003830,-0.000019,-0.007728,-0.023171", \
				        "0.007684,0.005964,0.004041,0.000159,-0.007601,-0.023072", \
				        "0.008460,0.006652,0.004632,0.000639,-0.007236,-0.022841", \
				        "0.010745,0.008728,0.006520,0.002223,-0.006000,-0.021940", \
				        "0.016316,0.014091,0.011604,0.006829,-0.002191,-0.019088", \
				        "0.028681,0.026174,0.023434,0.018104,0.008021,-0.010697");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.013089,0.011386,0.009450,0.005620,-0.002068,-0.017467", \
				        "0.013096,0.011365,0.009436,0.005603,-0.002072,-0.017475", \
				        "0.013107,0.011393,0.009462,0.005624,-0.002065,-0.017462", \
				        "0.013232,0.011529,0.009597,0.005742,-0.001977,-0.017424", \
				        "0.013756,0.012043,0.010084,0.006163,-0.001663,-0.017212", \
				        "0.015369,0.013618,0.011541,0.007462,-0.000575,-0.016375", \
				        "0.019881,0.017892,0.015654,0.011275,0.002758,-0.013708", \
				        "0.030175,0.028015,0.025577,0.020813,0.011572,-0.006093");
			}
			rise_power(Power_X4) {
				values ("0.009735,0.011473,0.013435,0.017350,0.025140,0.040671", \
				        "0.009655,0.011381,0.013362,0.017285,0.025078,0.040630", \
				        "0.009525,0.011270,0.013260,0.017203,0.025023,0.040582", \
				        "0.009497,0.011228,0.013202,0.017123,0.024933,0.040511", \
				        "0.009852,0.011525,0.013451,0.017283,0.025011,0.040542", \
				        "0.011470,0.012952,0.014722,0.018385,0.025872,0.041103", \
				        "0.015673,0.016994,0.018542,0.021821,0.028822,0.043477", \
				        "0.025502,0.026479,0.027717,0.030421,0.036535,0.050064");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.009735,0.011473,0.013435,0.017350,0.025140,0.040671", \
				        "0.009655,0.011381,0.013362,0.017285,0.025078,0.040630", \
				        "0.009525,0.011270,0.013260,0.017203,0.025023,0.040582", \
				        "0.009497,0.011228,0.013202,0.017123,0.024933,0.040511", \
				        "0.009852,0.011525,0.013451,0.017283,0.025011,0.040542", \
				        "0.011470,0.012952,0.014722,0.018385,0.025872,0.041103", \
				        "0.015673,0.016994,0.018542,0.021821,0.028822,0.043477", \
				        "0.025502,0.026479,0.027717,0.030421,0.036535,0.050064");
			}
			fall_power(Power_X4) {
				values ("0.013089,0.011386,0.009450,0.005620,-0.002068,-0.017467", \
				        "0.013096,0.011365,0.009436,0.005603,-0.002072,-0.017475", \
				        "0.013107,0.011393,0.009462,0.005624,-0.002065,-0.017462", \
				        "0.013232,0.011529,0.009597,0.005742,-0.001977,-0.017424", \
				        "0.013756,0.012043,0.010084,0.006163,-0.001663,-0.017212", \
				        "0.015369,0.013618,0.011541,0.007462,-0.000575,-0.016375", \
				        "0.019881,0.017892,0.015654,0.011275,0.002758,-0.013708", \
				        "0.030175,0.028015,0.025577,0.020813,0.011572,-0.006093");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2 & C1 & !C2 | !A1 & B1 & !B2 & !C1 & C2 | !A1 & B1 & !B2 & C1 & !C2";

			rise_power(Power_X4) {
				values ("0.008750,0.010499,0.012438,0.016371,0.024155,0.039677", \
				        "0.008673,0.010419,0.012378,0.016310,0.024104,0.039635", \
				        "0.008579,0.010330,0.012285,0.016222,0.024047,0.039612", \
				        "0.008512,0.010257,0.012231,0.016152,0.023964,0.039532", \
				        "0.008886,0.010556,0.012481,0.016314,0.024035,0.039564", \
				        "0.010495,0.011995,0.013767,0.017421,0.024909,0.040134", \
				        "0.014862,0.016108,0.017631,0.020906,0.027858,0.042505", \
				        "0.024878,0.025842,0.027027,0.029659,0.035624,0.049081");
			}
			fall_power(Power_X4) {
				values ("0.009926,0.008248,0.006295,0.002462,-0.005239,-0.020648", \
				        "0.009932,0.008221,0.006290,0.002452,-0.005249,-0.020669", \
				        "0.009965,0.008240,0.006325,0.002474,-0.005230,-0.020652", \
				        "0.010105,0.008414,0.006485,0.002603,-0.005140,-0.020591", \
				        "0.010709,0.008954,0.006999,0.003046,-0.004799,-0.020412", \
				        "0.012572,0.010701,0.008600,0.004458,-0.003651,-0.019523", \
				        "0.017295,0.015237,0.012960,0.008479,-0.000138,-0.016748", \
				        "0.027852,0.025648,0.023159,0.018287,0.008911,-0.008951");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2 & C1 | !A1 & B1 & B2 & C2 | !A1 & B1 & C1 & C2 | !A1 & B2 & C1 & C2";

			rise_power(Power_X4) {
				values ("0.008688,0.010407,0.012375,0.016290,0.024071,0.039589", \
				        "0.008568,0.010302,0.012286,0.016220,0.024010,0.039549", \
				        "0.008488,0.010222,0.012184,0.016119,0.023937,0.039505", \
				        "0.008417,0.010147,0.012134,0.016039,0.023847,0.039433", \
				        "0.008788,0.010460,0.012388,0.016211,0.023943,0.039443", \
				        "0.010434,0.011954,0.013740,0.017377,0.024847,0.040067", \
				        "0.014917,0.016173,0.017698,0.020964,0.027934,0.042560", \
				        "0.025300,0.026182,0.027316,0.029916,0.035916,0.049361");
			}
			fall_power(Power_X4) {
				values ("0.010272,0.008600,0.006661,0.002826,-0.004870,-0.020278", \
				        "0.010249,0.008577,0.006641,0.002821,-0.004877,-0.020298", \
				        "0.010307,0.008584,0.006679,0.002842,-0.004856,-0.020284", \
				        "0.010505,0.008770,0.006870,0.002989,-0.004755,-0.020226", \
				        "0.011130,0.009376,0.007398,0.003449,-0.004405,-0.019992", \
				        "0.013075,0.011194,0.009094,0.004934,-0.003171,-0.019065", \
				        "0.018020,0.015935,0.013637,0.009168,0.000509,-0.016127", \
				        "0.028900,0.026726,0.024226,0.019365,0.009957,-0.007922");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X4) {
				values ("0.010131,0.008443,0.006528,0.002677,-0.005048,-0.020521", \
				        "0.010058,0.008389,0.006499,0.002657,-0.005057,-0.020501", \
				        "0.010034,0.008379,0.006440,0.002601,-0.005103,-0.020548", \
				        "0.009970,0.008319,0.006424,0.002567,-0.005139,-0.020596", \
				        "0.010084,0.008420,0.006512,0.002671,-0.005048,-0.020515", \
				        "0.011082,0.009270,0.007258,0.003279,-0.004595,-0.020187", \
				        "0.014584,0.012575,0.010326,0.005936,-0.002499,-0.018657", \
				        "0.023941,0.021644,0.019075,0.014101,0.004611,-0.013172");
			}
			rise_power(Power_X4) {
				values ("0.015875,0.017583,0.019521,0.023416,0.031177,0.046695", \
				        "0.015812,0.017537,0.019476,0.023379,0.031157,0.046692", \
				        "0.015863,0.017563,0.019496,0.023396,0.031141,0.046683", \
				        "0.016148,0.017804,0.019709,0.023563,0.031282,0.046754", \
				        "0.016986,0.018618,0.020480,0.024236,0.031828,0.047157", \
				        "0.019156,0.020678,0.022495,0.026114,0.033489,0.048476", \
				        "0.024024,0.025485,0.027175,0.030603,0.037622,0.052106", \
				        "0.034592,0.035931,0.037486,0.040611,0.047121,0.060837");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2 & C1 & !C2 | A1 & !A2 & !B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.014914,0.016631,0.018558,0.022446,0.030216,0.045755", \
				        "0.014891,0.016584,0.018521,0.022421,0.030199,0.045706", \
				        "0.014904,0.016591,0.018537,0.022434,0.030195,0.045724", \
				        "0.015151,0.016852,0.018752,0.022607,0.030317,0.045786", \
				        "0.016041,0.017679,0.019530,0.023280,0.030862,0.046189", \
				        "0.018192,0.019751,0.021550,0.025161,0.032526,0.047525", \
				        "0.023035,0.024541,0.026215,0.029661,0.036668,0.051140", \
				        "0.033695,0.034987,0.036531,0.039687,0.046181,0.059877");
			}
			fall_power(Power_X4) {
				values ("0.006981,0.005325,0.003390,-0.000473,-0.008195,-0.023675", \
				        "0.006972,0.005287,0.003363,-0.000489,-0.008198,-0.023646", \
				        "0.006891,0.005227,0.003311,-0.000531,-0.008238,-0.023704", \
				        "0.006813,0.005186,0.003279,-0.000575,-0.008280,-0.023752", \
				        "0.007008,0.005304,0.003384,-0.000468,-0.008189,-0.023667", \
				        "0.008148,0.006329,0.004257,0.000214,-0.007690,-0.023309", \
				        "0.012001,0.009937,0.007626,0.003124,-0.005446,-0.021741", \
				        "0.021762,0.019427,0.016773,0.011661,0.001981,-0.016009");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2 & C1 & C2";

			rise_power(Power_X4) {
				values ("0.014781,0.016491,0.018426,0.022316,0.030099,0.045606", \
				        "0.014762,0.016460,0.018384,0.022276,0.030059,0.045587", \
				        "0.014792,0.016490,0.018413,0.022303,0.030058,0.045569", \
				        "0.015098,0.016778,0.018669,0.022498,0.030189,0.045655", \
				        "0.016029,0.017624,0.019495,0.023236,0.030792,0.046119", \
				        "0.018281,0.019806,0.021577,0.025207,0.032550,0.047538", \
				        "0.023222,0.024719,0.026409,0.029821,0.036864,0.051333", \
				        "0.034150,0.035428,0.036962,0.040097,0.046617,0.060334");
			}
			fall_power(Power_X4) {
				values ("0.007331,0.005635,0.003696,-0.000151,-0.007878,-0.023353", \
				        "0.007255,0.005597,0.003669,-0.000146,-0.007878,-0.023324", \
				        "0.007238,0.005543,0.003622,-0.000207,-0.007928,-0.023383", \
				        "0.007191,0.005504,0.003616,-0.000236,-0.007957,-0.023439", \
				        "0.007388,0.005696,0.003753,-0.000101,-0.007827,-0.023296", \
				        "0.008710,0.006844,0.004777,0.000705,-0.007252,-0.022893", \
				        "0.012794,0.010716,0.008408,0.003892,-0.004730,-0.021140", \
				        "0.022923,0.020613,0.017955,0.012869,0.003194,-0.014865");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !B2 & C1";

			rise_power(Power_X4) {
				values ("0.014402,0.016117,0.018061,0.021946,0.029716,0.045219", \
				        "0.014393,0.016030,0.018015,0.021911,0.029684,0.045211", \
				        "0.014424,0.016092,0.018024,0.021913,0.029676,0.045201", \
				        "0.014726,0.016390,0.018311,0.022130,0.029847,0.045312", \
				        "0.015701,0.017282,0.019138,0.022883,0.030471,0.045765", \
				        "0.017882,0.019483,0.021249,0.024878,0.032260,0.047239", \
				        "0.022905,0.024394,0.026075,0.029542,0.036600,0.051094", \
				        "0.033916,0.035154,0.036728,0.039867,0.046431,0.060199");
			}
			fall_power(Power_X4) {
				values ("0.004493,0.002829,0.000884,-0.002963,-0.010693,-0.026159", \
				        "0.004485,0.002788,0.000865,-0.002977,-0.010690,-0.026130", \
				        "0.004376,0.002710,0.000807,-0.003017,-0.010721,-0.026190", \
				        "0.004353,0.002690,0.000785,-0.003043,-0.010735,-0.026222", \
				        "0.004706,0.002981,0.001012,-0.002872,-0.010605,-0.026067", \
				        "0.006292,0.004388,0.002265,-0.001892,-0.009924,-0.025634", \
				        "0.010876,0.008726,0.006308,0.001678,-0.007097,-0.023687", \
				        "0.021652,0.019216,0.016465,0.011228,0.001350,-0.016981");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A2 & !B2 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.015875,0.017583,0.019521,0.023416,0.031177,0.046695", \
				        "0.015812,0.017537,0.019476,0.023379,0.031157,0.046692", \
				        "0.015863,0.017563,0.019496,0.023396,0.031141,0.046683", \
				        "0.016148,0.017804,0.019709,0.023563,0.031282,0.046754", \
				        "0.016986,0.018618,0.020480,0.024236,0.031828,0.047157", \
				        "0.019156,0.020678,0.022495,0.026114,0.033489,0.048476", \
				        "0.024024,0.025485,0.027175,0.030603,0.037622,0.052106", \
				        "0.034592,0.035931,0.037486,0.040611,0.047121,0.060837");
			}
			fall_power(Power_X4) {
				values ("0.010131,0.008443,0.006528,0.002677,-0.005048,-0.020521", \
				        "0.010058,0.008389,0.006499,0.002657,-0.005057,-0.020501", \
				        "0.010034,0.008379,0.006440,0.002601,-0.005103,-0.020548", \
				        "0.009970,0.008319,0.006424,0.002567,-0.005139,-0.020596", \
				        "0.010084,0.008420,0.006512,0.002671,-0.005048,-0.020515", \
				        "0.011082,0.009270,0.007258,0.003279,-0.004595,-0.020187", \
				        "0.014584,0.012575,0.010326,0.005936,-0.002499,-0.018657", \
				        "0.023941,0.021644,0.019075,0.014101,0.004611,-0.013172");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X4) {
				values ("0.013115,0.011425,0.009520,0.005674,-0.002052,-0.017520", \
				        "0.013076,0.011364,0.009467,0.005619,-0.002094,-0.017547", \
				        "0.013066,0.011358,0.009419,0.005572,-0.002142,-0.017596", \
				        "0.012986,0.011320,0.009401,0.005553,-0.002166,-0.017640", \
				        "0.013093,0.011395,0.009491,0.005642,-0.002088,-0.017550", \
				        "0.013830,0.012105,0.010106,0.006176,-0.001646,-0.017209", \
				        "0.016636,0.014804,0.012674,0.008494,0.000304,-0.015690", \
				        "0.024422,0.022445,0.020101,0.015523,0.006634,-0.010438");
			}
			rise_power(Power_X4) {
				values ("0.016860,0.018566,0.020512,0.024399,0.032165,0.047656", \
				        "0.016771,0.018486,0.020434,0.024345,0.032122,0.047647", \
				        "0.016696,0.018390,0.020357,0.024261,0.032073,0.047614", \
				        "0.016592,0.018330,0.020300,0.024218,0.032005,0.047562", \
				        "0.016833,0.018501,0.020440,0.024313,0.032067,0.047578", \
				        "0.018060,0.019677,0.021522,0.025249,0.032833,0.048135", \
				        "0.021772,0.023263,0.024994,0.028492,0.035684,0.050465", \
				        "0.030418,0.031742,0.033307,0.036515,0.043121,0.057060");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !B1 & C1 & !C2 | A1 & !A2 & !B1 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.015923,0.017613,0.019552,0.023441,0.031197,0.046700", \
				        "0.015849,0.017520,0.019480,0.023388,0.031152,0.046668", \
				        "0.015727,0.017468,0.019393,0.023310,0.031103,0.046645", \
				        "0.015664,0.017375,0.019343,0.023249,0.031050,0.046598", \
				        "0.015822,0.017547,0.019470,0.023355,0.031094,0.046624", \
				        "0.017104,0.018710,0.020572,0.024299,0.031877,0.047168", \
				        "0.020881,0.022320,0.024053,0.027541,0.034732,0.049495", \
				        "0.029488,0.030819,0.032359,0.035561,0.042184,0.056076");
			}
			fall_power(Power_X4) {
				values ("0.010004,0.008327,0.006403,0.002540,-0.005198,-0.020672", \
				        "0.009912,0.008271,0.006353,0.002493,-0.005237,-0.020690", \
				        "0.009926,0.008235,0.006299,0.002448,-0.005284,-0.020752", \
				        "0.009869,0.008182,0.006289,0.002423,-0.005306,-0.020783", \
				        "0.009989,0.008273,0.006358,0.002524,-0.005209,-0.020695", \
				        "0.010820,0.009049,0.007060,0.003108,-0.004751,-0.020349", \
				        "0.013912,0.011986,0.009834,0.005597,-0.002672,-0.018756", \
				        "0.022156,0.019983,0.017582,0.012901,0.003877,-0.013347");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A2 & !B1 & !C1 & C2";

			rise_power(Power_X4) {
				values ("0.016860,0.018566,0.020512,0.024399,0.032165,0.047656", \
				        "0.016771,0.018486,0.020434,0.024345,0.032122,0.047647", \
				        "0.016696,0.018390,0.020357,0.024261,0.032073,0.047614", \
				        "0.016592,0.018330,0.020300,0.024218,0.032005,0.047562", \
				        "0.016833,0.018501,0.020440,0.024313,0.032067,0.047578", \
				        "0.018060,0.019677,0.021522,0.025249,0.032833,0.048135", \
				        "0.021772,0.023263,0.024994,0.028492,0.035684,0.050465", \
				        "0.030418,0.031742,0.033307,0.036515,0.043121,0.057060");
			}
			fall_power(Power_X4) {
				values ("0.013115,0.011425,0.009520,0.005674,-0.002052,-0.017520", \
				        "0.013076,0.011364,0.009467,0.005619,-0.002094,-0.017547", \
				        "0.013066,0.011358,0.009419,0.005572,-0.002142,-0.017596", \
				        "0.012986,0.011320,0.009401,0.005553,-0.002166,-0.017640", \
				        "0.013093,0.011395,0.009491,0.005642,-0.002088,-0.017550", \
				        "0.013830,0.012105,0.010106,0.006176,-0.001646,-0.017209", \
				        "0.016636,0.014804,0.012674,0.008494,0.000304,-0.015690", \
				        "0.024422,0.022445,0.020101,0.015523,0.006634,-0.010438");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A2 & !B1 & C1 & C2 | A1 & !B1 & C1";

			rise_power(Power_X4) {
				values ("0.015795,0.017489,0.019421,0.023312,0.031072,0.046562", \
				        "0.015699,0.017411,0.019340,0.023255,0.031034,0.046541", \
				        "0.015614,0.017312,0.019271,0.023171,0.030974,0.046504", \
				        "0.015531,0.017250,0.019212,0.023127,0.030924,0.046461", \
				        "0.015724,0.017450,0.019378,0.023250,0.030981,0.046496", \
				        "0.017078,0.018679,0.020532,0.024247,0.031811,0.047079", \
				        "0.020886,0.022416,0.024139,0.027635,0.034817,0.049579", \
				        "0.029806,0.031112,0.032678,0.035854,0.042479,0.056392");
			}
			fall_power(Power_X4) {
				values ("0.010314,0.008635,0.006721,0.002849,-0.004872,-0.020338", \
				        "0.010250,0.008589,0.006658,0.002807,-0.004918,-0.020369", \
				        "0.010222,0.008565,0.006607,0.002759,-0.004968,-0.020438", \
				        "0.010183,0.008527,0.006615,0.002751,-0.004984,-0.020476", \
				        "0.010317,0.008643,0.006713,0.002867,-0.004854,-0.020335", \
				        "0.011257,0.009493,0.007490,0.003535,-0.004333,-0.019950", \
				        "0.014508,0.012596,0.010458,0.006201,-0.002085,-0.018218", \
				        "0.023082,0.020975,0.018532,0.013857,0.004825,-0.012441");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			fall_power(Power_X4) {
				values ("0.010070,0.008405,0.006493,0.002633,-0.005098,-0.020591", \
				        "0.010068,0.008427,0.006492,0.002644,-0.005079,-0.020563", \
				        "0.010023,0.008366,0.006439,0.002599,-0.005115,-0.020541", \
				        "0.009981,0.008283,0.006374,0.002535,-0.005157,-0.020584", \
				        "0.009983,0.008300,0.006400,0.002553,-0.005170,-0.020634", \
				        "0.010715,0.008936,0.006936,0.002995,-0.004826,-0.020362", \
				        "0.013823,0.011893,0.009694,0.005410,-0.002924,-0.019009", \
				        "0.022756,0.020589,0.018114,0.013312,0.004083,-0.013454");
			}
			rise_power(Power_X4) {
				values ("0.021672,0.023365,0.025319,0.029229,0.037026,0.052588", \
				        "0.021620,0.023318,0.025282,0.029172,0.036989,0.052551", \
				        "0.021624,0.023342,0.025289,0.029184,0.036970,0.052549", \
				        "0.021863,0.023550,0.025470,0.029353,0.037094,0.052596", \
				        "0.022704,0.024308,0.026198,0.029987,0.037633,0.052996", \
				        "0.024756,0.026325,0.028176,0.031844,0.039244,0.054335", \
				        "0.029512,0.031042,0.032786,0.036271,0.043412,0.058017", \
				        "0.040145,0.041513,0.043107,0.046360,0.053056,0.066905");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & !B1 & B2 & !C2";

			rise_power(Power_X4) {
				values ("0.021672,0.023365,0.025319,0.029229,0.037026,0.052588", \
				        "0.021620,0.023318,0.025282,0.029172,0.036989,0.052551", \
				        "0.021624,0.023342,0.025289,0.029184,0.036970,0.052549", \
				        "0.021863,0.023550,0.025470,0.029353,0.037094,0.052596", \
				        "0.022704,0.024308,0.026198,0.029987,0.037633,0.052996", \
				        "0.024756,0.026325,0.028176,0.031844,0.039244,0.054335", \
				        "0.029512,0.031042,0.032786,0.036271,0.043412,0.058017", \
				        "0.040145,0.041513,0.043107,0.046360,0.053056,0.066905");
			}
			fall_power(Power_X4) {
				values ("0.010070,0.008405,0.006493,0.002633,-0.005098,-0.020591", \
				        "0.010068,0.008427,0.006492,0.002644,-0.005079,-0.020563", \
				        "0.010023,0.008366,0.006439,0.002599,-0.005115,-0.020541", \
				        "0.009981,0.008283,0.006374,0.002535,-0.005157,-0.020584", \
				        "0.009983,0.008300,0.006400,0.002553,-0.005170,-0.020634", \
				        "0.010715,0.008936,0.006936,0.002995,-0.004826,-0.020362", \
				        "0.013823,0.011893,0.009694,0.005410,-0.002924,-0.019009", \
				        "0.022756,0.020589,0.018114,0.013312,0.004083,-0.013454");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "!A1 & A2 & B1 & !B2 & !C2 | A1 & !A2 & !B1 & B2 & !C2";

			rise_power(Power_X4) {
				values ("0.020702,0.022434,0.024359,0.028266,0.036052,0.051612", \
				        "0.020674,0.022368,0.024329,0.028222,0.036017,0.051588", \
				        "0.020693,0.022375,0.024329,0.028217,0.036008,0.051575", \
				        "0.020898,0.022577,0.024506,0.028390,0.036124,0.051653", \
				        "0.021749,0.023384,0.025246,0.029034,0.036657,0.052021", \
				        "0.023819,0.025388,0.027214,0.030876,0.038270,0.053374", \
				        "0.028557,0.030120,0.031830,0.035313,0.042466,0.057045", \
				        "0.039198,0.040569,0.042167,0.045425,0.052089,0.065917");
			}
			fall_power(Power_X4) {
				values ("0.006980,0.005326,0.003371,-0.000493,-0.008231,-0.023730", \
				        "0.006959,0.005308,0.003367,-0.000487,-0.008215,-0.023680", \
				        "0.006942,0.005234,0.003310,-0.000526,-0.008245,-0.023668", \
				        "0.006838,0.005162,0.003247,-0.000597,-0.008291,-0.023707", \
				        "0.006857,0.005178,0.003257,-0.000589,-0.008320,-0.023779", \
				        "0.007705,0.005908,0.003894,-0.000087,-0.007932,-0.023501", \
				        "0.011110,0.009100,0.006884,0.002526,-0.005888,-0.022083", \
				        "0.020401,0.018192,0.015663,0.010766,0.001376,-0.016343");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & A2 & !B1 & B2 & !C2 | !A1 & A2 & B1 & B2 & !C2";

			rise_power(Power_X4) {
				values ("0.021406,0.023102,0.025029,0.028935,0.036728,0.052285", \
				        "0.021332,0.023055,0.025002,0.028903,0.036700,0.052269", \
				        "0.021373,0.023049,0.025015,0.028903,0.036691,0.052253", \
				        "0.021589,0.023291,0.025205,0.029070,0.036831,0.052332", \
				        "0.022449,0.024061,0.025980,0.029736,0.037372,0.052751", \
				        "0.024502,0.026102,0.027937,0.031613,0.039055,0.054151", \
				        "0.029305,0.030861,0.032574,0.036101,0.043267,0.057888", \
				        "0.039961,0.041255,0.042950,0.046214,0.052935,0.066872");
			}
			fall_power(Power_X4) {
				values ("0.007306,0.005643,0.003691,-0.000166,-0.007899,-0.023400", \
				        "0.007282,0.005612,0.003699,-0.000165,-0.007880,-0.023349", \
				        "0.007245,0.005567,0.003624,-0.000207,-0.007908,-0.023381", \
				        "0.007169,0.005487,0.003577,-0.000276,-0.007969,-0.023383", \
				        "0.007175,0.005497,0.003599,-0.000258,-0.007977,-0.023422", \
				        "0.008092,0.006299,0.004275,0.000293,-0.007565,-0.023133", \
				        "0.011554,0.009512,0.007331,0.002981,-0.005444,-0.021660", \
				        "0.020975,0.018748,0.016188,0.011307,0.001933,-0.015752");
			}
		}

		internal_power () {

			related_pin	         : "C1";
			when	                 : "A1 & B1 & !C2";

			rise_power(Power_X4) {
				values ("0.020871,0.022590,0.024505,0.028413,0.036215,0.051753", \
				        "0.020858,0.022529,0.024468,0.028374,0.036164,0.051725", \
				        "0.020886,0.022568,0.024496,0.028399,0.036163,0.051726", \
				        "0.021095,0.022821,0.024717,0.028578,0.036311,0.051809", \
				        "0.022017,0.023571,0.025493,0.029274,0.036880,0.052264", \
				        "0.024051,0.025711,0.027484,0.031171,0.038623,0.053742", \
				        "0.028852,0.030445,0.032140,0.035685,0.042917,0.057567", \
				        "0.039546,0.040914,0.042639,0.045909,0.052672,0.066604");
			}
			fall_power(Power_X4) {
				values ("0.004528,0.002823,0.000885,-0.002977,-0.010716,-0.026218", \
				        "0.004449,0.002799,0.000872,-0.002969,-0.010683,-0.026154", \
				        "0.004372,0.002726,0.000821,-0.003012,-0.010712,-0.026164", \
				        "0.004312,0.002653,0.000740,-0.003083,-0.010776,-0.026229", \
				        "0.004449,0.002728,0.000793,-0.003070,-0.010773,-0.026240", \
				        "0.005546,0.003729,0.001661,-0.002374,-0.010287,-0.025878", \
				        "0.009364,0.007324,0.005059,0.000641,-0.007898,-0.024255", \
				        "0.019499,0.017116,0.014517,0.009487,-0.000053,-0.017929");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			fall_power(Power_X4) {
				values ("0.013093,0.011404,0.009488,0.005622,-0.002116,-0.017600", \
				        "0.013074,0.011378,0.009469,0.005612,-0.002117,-0.017593", \
				        "0.012990,0.011333,0.009406,0.005551,-0.002161,-0.017630", \
				        "0.012989,0.011295,0.009381,0.005514,-0.002188,-0.017644", \
				        "0.012997,0.011304,0.009412,0.005587,-0.002179,-0.017677", \
				        "0.013462,0.011739,0.009782,0.005904,-0.001866,-0.017389", \
				        "0.015764,0.013939,0.011911,0.007835,-0.000225,-0.016099", \
				        "0.023141,0.021145,0.018856,0.014399,0.005715,-0.011094");
			}
			rise_power(Power_X4) {
				values ("0.022606,0.024335,0.026299,0.030187,0.037974,0.053529", \
				        "0.022578,0.024282,0.026222,0.030138,0.037913,0.053484", \
				        "0.022524,0.024223,0.026184,0.030091,0.037904,0.053466", \
				        "0.022473,0.024185,0.026152,0.030066,0.037881,0.053425", \
				        "0.022604,0.024325,0.026261,0.030152,0.037928,0.053472", \
				        "0.023726,0.025357,0.027244,0.031019,0.038634,0.054025", \
				        "0.027318,0.028847,0.030600,0.034169,0.041444,0.056333", \
				        "0.035830,0.037282,0.038855,0.042154,0.048946,0.062997");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & !B1 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.022606,0.024335,0.026299,0.030187,0.037974,0.053529", \
				        "0.022578,0.024282,0.026222,0.030138,0.037913,0.053484", \
				        "0.022524,0.024223,0.026184,0.030091,0.037904,0.053466", \
				        "0.022473,0.024185,0.026152,0.030066,0.037881,0.053425", \
				        "0.022604,0.024325,0.026261,0.030152,0.037928,0.053472", \
				        "0.023726,0.025357,0.027244,0.031019,0.038634,0.054025", \
				        "0.027318,0.028847,0.030600,0.034169,0.041444,0.056333", \
				        "0.035830,0.037282,0.038855,0.042154,0.048946,0.062997");
			}
			fall_power(Power_X4) {
				values ("0.013093,0.011404,0.009488,0.005622,-0.002116,-0.017600", \
				        "0.013074,0.011378,0.009469,0.005612,-0.002117,-0.017593", \
				        "0.012990,0.011333,0.009406,0.005551,-0.002161,-0.017630", \
				        "0.012989,0.011295,0.009381,0.005514,-0.002188,-0.017644", \
				        "0.012997,0.011304,0.009412,0.005587,-0.002179,-0.017677", \
				        "0.013462,0.011739,0.009782,0.005904,-0.001866,-0.017389", \
				        "0.015764,0.013939,0.011911,0.007835,-0.000225,-0.016099", \
				        "0.023141,0.021145,0.018856,0.014399,0.005715,-0.011094");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "!A1 & A2 & B1 & !B2 & !C1 | A1 & !A2 & !B1 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.021665,0.023391,0.025334,0.029229,0.037009,0.052548", \
				        "0.021618,0.023338,0.025279,0.029174,0.036944,0.052509", \
				        "0.021581,0.023272,0.025219,0.029139,0.036938,0.052507", \
				        "0.021535,0.023247,0.025198,0.029105,0.036916,0.052474", \
				        "0.021644,0.023361,0.025296,0.029204,0.036974,0.052509", \
				        "0.022786,0.024399,0.026279,0.030060,0.037678,0.053046", \
				        "0.026346,0.027882,0.029642,0.033205,0.040469,0.055376", \
				        "0.034887,0.036330,0.037902,0.041230,0.048000,0.062070");
			}
			fall_power(Power_X4) {
				values ("0.010009,0.008317,0.006378,0.002512,-0.005228,-0.020732", \
				        "0.009959,0.008288,0.006350,0.002495,-0.005250,-0.020734", \
				        "0.009911,0.008220,0.006290,0.002447,-0.005280,-0.020767", \
				        "0.009867,0.008181,0.006261,0.002397,-0.005321,-0.020771", \
				        "0.009888,0.008193,0.006285,0.002438,-0.005318,-0.020805", \
				        "0.010361,0.008655,0.006702,0.002798,-0.005045,-0.020525", \
				        "0.012881,0.011069,0.008968,0.004856,-0.003276,-0.019186", \
				        "0.020630,0.018544,0.016215,0.011678,0.002811,-0.014045");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & A2 & !B1 & B2 & !C1 | !A1 & A2 & B1 & B2 & !C1";

			rise_power(Power_X4) {
				values ("0.022298,0.024073,0.026010,0.029897,0.037680,0.053233", \
				        "0.022305,0.024005,0.025936,0.029847,0.037650,0.053205", \
				        "0.022261,0.023945,0.025901,0.029826,0.037614,0.053172", \
				        "0.022190,0.023907,0.025850,0.029791,0.037590,0.053149", \
				        "0.022353,0.024007,0.025981,0.029885,0.037649,0.053195", \
				        "0.023454,0.025105,0.026985,0.030757,0.038378,0.053758", \
				        "0.027033,0.028629,0.030328,0.033935,0.041250,0.056149", \
				        "0.035611,0.036922,0.038657,0.041989,0.048816,0.062921");
			}
			fall_power(Power_X4) {
				values ("0.010312,0.008672,0.006697,0.002837,-0.004890,-0.020381", \
				        "0.010283,0.008602,0.006666,0.002814,-0.004900,-0.020372", \
				        "0.010248,0.008537,0.006607,0.002759,-0.004962,-0.020439", \
				        "0.010177,0.008518,0.006594,0.002730,-0.004993,-0.020438", \
				        "0.010196,0.008508,0.006611,0.002766,-0.004965,-0.020455", \
				        "0.010758,0.009044,0.007061,0.003168,-0.004618,-0.020165", \
				        "0.013292,0.011498,0.009413,0.005275,-0.002838,-0.018769", \
				        "0.021124,0.019072,0.016750,0.012207,0.003412,-0.013519");
			}
		}

		internal_power () {

			related_pin	         : "C2";
			when	                 : "A1 & B1 & !C1";

			rise_power(Power_X4) {
				values ("0.021884,0.023556,0.025485,0.029375,0.037168,0.052698", \
				        "0.021793,0.023496,0.025431,0.029330,0.037107,0.052663", \
				        "0.021765,0.023427,0.025386,0.029292,0.037087,0.052627", \
				        "0.021650,0.023382,0.025327,0.029249,0.037033,0.052618", \
				        "0.021842,0.023540,0.025456,0.029357,0.037104,0.052643", \
				        "0.023009,0.024608,0.026481,0.030265,0.037896,0.053197", \
				        "0.026539,0.028177,0.029878,0.033497,0.040835,0.055684", \
				        "0.035204,0.036541,0.038262,0.041600,0.048454,0.062580");
			}
			fall_power(Power_X4) {
				values ("0.007533,0.005850,0.003893,0.000030,-0.007711,-0.023216", \
				        "0.007463,0.005802,0.003869,0.000012,-0.007710,-0.023189", \
				        "0.007402,0.005735,0.003812,-0.000031,-0.007748,-0.023223", \
				        "0.007383,0.005739,0.003795,-0.000063,-0.007793,-0.023266", \
				        "0.007413,0.005740,0.003812,-0.000041,-0.007767,-0.023265", \
				        "0.008052,0.006343,0.004362,0.000448,-0.007368,-0.022906", \
				        "0.010989,0.009061,0.006962,0.002783,-0.005406,-0.021415", \
				        "0.019340,0.017247,0.014841,0.010196,0.001249,-0.015851");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI22_X1
 Cell Description	: Combinational cell (OAI22_X1) with drive strength X1
*******************************************************************************************/

cell (OAI22_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 10097.852563;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 2067.409000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 10364.390000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 3290.328000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 11120.350000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 10364.370000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 14696.430000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 10410.910000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 14327.530000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 3290.327000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 10410.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 2425.033000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 14326.640000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 9701.444000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 13618.140000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 13617.340000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 17534.090000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000584;
		fall_capacitance	: 0.000550;
		rise_capacitance	: 0.000618;
		fall_capacitance_range		(0.000478, 0.000664);
		rise_capacitance_range		(0.000518, 0.000768);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000006,0.000005,0.000004,0.000002,0.000001,-0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000016,0.000014,0.000011,0.000010,0.000008,0.000007,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000567;
		fall_capacitance	: 0.000560;
		rise_capacitance	: 0.000575;
		fall_capacitance_range		(0.000473, 0.000653);
		rise_capacitance_range		(0.000482, 0.000690);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000015,0.000009,0.000005,0.000003,0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000015,0.000009,0.000005,0.000003,0.000001,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000022,0.000014,0.000009,0.000005,0.000003,0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000011,0.000010,0.000009,0.000008,0.000007,0.000005,0.000004");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000563;
		fall_capacitance	: 0.000521;
		rise_capacitance	: 0.000604;
		fall_capacitance_range		(0.000462, 0.000590);
		rise_capacitance_range		(0.000526, 0.000736);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000004,0.000003,0.000002,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000015,0.000011,0.000007,0.000005,0.000003,0.000002,0.000001,-0.000000");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000561;
		fall_capacitance	: 0.000548;
		rise_capacitance	: 0.000574;
		fall_capacitance_range		(0.000458, 0.000608);
		rise_capacitance_range		(0.000479, 0.000668);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000019,0.000013,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) & (B1 | B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027356,0.030252,0.036210,0.047598,0.069913,0.113926", \
				        "0.030472,0.033322,0.039230,0.050586,0.072947,0.116928", \
				        "0.037186,0.039865,0.045346,0.056682,0.079020,0.122909", \
				        "0.047619,0.051125,0.057638,0.069629,0.091507,0.135255", \
				        "0.057682,0.062452,0.071327,0.087603,0.115367,0.160734", \
				        "0.063740,0.070156,0.082180,0.104065,0.141517,0.202730", \
				        "0.056889,0.065636,0.081875,0.111356,0.161807,0.244420", \
				        "0.017989,0.029843,0.051811,0.091486,0.159644,0.271160");
			}
			cell_rise(Timing_X1) {
				values ("0.045500,0.052343,0.066015,0.092695,0.145990,0.252495", \
				        "0.048648,0.055423,0.068927,0.095644,0.149017,0.255531", \
				        "0.055539,0.062259,0.075757,0.102188,0.155301,0.261656", \
				        "0.070768,0.077159,0.090035,0.116281,0.168799,0.274721", \
				        "0.095420,0.103660,0.119201,0.146456,0.197780,0.302323", \
				        "0.131495,0.141804,0.161406,0.196578,0.257258,0.361156", \
				        "0.188358,0.201448,0.225594,0.269513,0.346629,0.476213", \
				        "0.283825,0.299888,0.330148,0.384519,0.480346,0.643796");
			}
			fall_transition(Timing_X1) {
				values ("0.021588,0.024131,0.028953,0.038325,0.057089,0.094484", \
				        "0.021247,0.023867,0.028923,0.038297,0.057039,0.094568", \
				        "0.021475,0.023785,0.028529,0.037958,0.056979,0.094557", \
				        "0.027975,0.029984,0.033855,0.040654,0.057178,0.094573", \
				        "0.040260,0.042617,0.047130,0.055035,0.068677,0.097520", \
				        "0.060926,0.063941,0.069648,0.079672,0.096911,0.125770", \
				        "0.096892,0.100913,0.108485,0.121540,0.143692,0.180445", \
				        "0.160354,0.166106,0.176483,0.194360,0.223875,0.271315");
			}
			rise_transition(Timing_X1) {
				values ("0.057453,0.064629,0.078491,0.105630,0.157105,0.255657", \
				        "0.057423,0.064636,0.078472,0.105615,0.157142,0.255632", \
				        "0.056968,0.064406,0.078458,0.105650,0.157130,0.255618", \
				        "0.059730,0.065942,0.078645,0.105485,0.157101,0.255637", \
				        "0.075035,0.079585,0.089454,0.110646,0.157274,0.255643", \
				        "0.105238,0.110187,0.119772,0.138711,0.174940,0.258113", \
				        "0.152585,0.157313,0.167384,0.188662,0.229227,0.300569", \
				        "0.231048,0.235462,0.245328,0.267081,0.313187,0.400670");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.020563,0.023299,0.028841,0.039807,0.061620,0.105058", \
				        "0.023777,0.026423,0.031888,0.042819,0.064648,0.108089", \
				        "0.030074,0.032976,0.038310,0.049017,0.070786,0.114084", \
				        "0.037056,0.041047,0.048292,0.061268,0.083317,0.126450", \
				        "0.042516,0.047973,0.057920,0.075676,0.105182,0.152068", \
				        "0.042461,0.049790,0.063339,0.087277,0.127235,0.191059", \
				        "0.027184,0.037436,0.055778,0.088141,0.142096,0.228289", \
				        "-0.022081,-0.008679,0.016116,0.059611,0.132562,0.249103");
			}
			cell_rise(Timing_X1) {
				values ("0.044612,0.051349,0.064802,0.091395,0.144572,0.250659", \
				        "0.047746,0.054446,0.067810,0.094443,0.147577,0.253720", \
				        "0.054648,0.061269,0.074569,0.100932,0.153883,0.259860", \
				        "0.069857,0.076269,0.089063,0.115045,0.167425,0.272920", \
				        "0.094119,0.102333,0.117790,0.145265,0.196382,0.300540", \
				        "0.129638,0.139927,0.159413,0.194799,0.255645,0.359376", \
				        "0.185336,0.198570,0.222718,0.266808,0.344115,0.473855", \
				        "0.278462,0.294656,0.325240,0.380091,0.476249,0.639909");
			}
			fall_transition(Timing_X1) {
				values ("0.015771,0.018403,0.023370,0.032735,0.051532,0.088976", \
				        "0.015456,0.018000,0.023068,0.032635,0.051518,0.088966", \
				        "0.017869,0.019708,0.023909,0.032522,0.051421,0.088942", \
				        "0.025175,0.027190,0.031128,0.037503,0.052479,0.088976", \
				        "0.037325,0.039777,0.044431,0.052423,0.066226,0.093405", \
				        "0.058175,0.061203,0.066949,0.076905,0.094304,0.123330", \
				        "0.094339,0.098470,0.105948,0.119083,0.141127,0.177854", \
				        "0.158682,0.164166,0.174442,0.192177,0.221578,0.268738");
			}
			rise_transition(Timing_X1) {
				values ("0.040144,0.046368,0.058747,0.082950,0.131460,0.228579", \
				        "0.040108,0.046310,0.058686,0.082972,0.131491,0.228590", \
				        "0.039627,0.046084,0.058667,0.082954,0.131491,0.228588", \
				        "0.042536,0.047724,0.058901,0.082745,0.131457,0.228585", \
				        "0.054787,0.059822,0.069313,0.088099,0.131671,0.228558", \
				        "0.073993,0.080249,0.091954,0.112854,0.149399,0.231109", \
				        "0.106224,0.113185,0.126913,0.152327,0.197743,0.273647", \
				        "0.164507,0.172227,0.187702,0.216862,0.270898,0.366178");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.017661,0.019761,0.024088,0.032504,0.049371,0.082935", \
				        "0.021003,0.023021,0.027267,0.035713,0.052615,0.086172", \
				        "0.026588,0.029112,0.033728,0.042279,0.059106,0.092549", \
				        "0.032075,0.035654,0.042146,0.053510,0.072373,0.105693", \
				        "0.035448,0.040360,0.049276,0.065105,0.091091,0.132050", \
				        "0.032013,0.038740,0.051088,0.072671,0.108377,0.164826", \
				        "0.011093,0.020497,0.037388,0.067015,0.115970,0.193199", \
				        "-0.048275,-0.035946,-0.012941,0.027222,0.094155,0.200111");
			}
			cell_rise(Timing_X1) {
				values ("0.044486,0.051189,0.064645,0.091287,0.144452,0.250548", \
				        "0.047571,0.054275,0.067630,0.094259,0.147387,0.253515", \
				        "0.054531,0.061158,0.074408,0.100772,0.153690,0.259645", \
				        "0.069984,0.076341,0.089089,0.115062,0.167363,0.272781", \
				        "0.094660,0.102830,0.118235,0.145630,0.196667,0.300680", \
				        "0.130904,0.141224,0.160653,0.195919,0.256590,0.360153", \
				        "0.188739,0.201752,0.225741,0.269565,0.346623,0.475987", \
				        "0.287195,0.302965,0.332935,0.387024,0.482309,0.645222");
			}
			fall_transition(Timing_X1) {
				values ("0.011860,0.013808,0.017619,0.024827,0.039426,0.068643", \
				        "0.012067,0.014000,0.017539,0.024777,0.039381,0.068643", \
				        "0.015564,0.016963,0.019607,0.025642,0.039377,0.068647", \
				        "0.022526,0.024251,0.027601,0.032698,0.042691,0.068709", \
				        "0.034134,0.036217,0.040272,0.047054,0.058500,0.077946", \
				        "0.054246,0.056918,0.061994,0.070564,0.085371,0.109665", \
				        "0.089543,0.093187,0.099886,0.111311,0.130463,0.161723", \
				        "0.152967,0.157942,0.166951,0.182730,0.208599,0.249564");
			}
			rise_transition(Timing_X1) {
				values ("0.040120,0.046327,0.058595,0.082937,0.131462,0.228578", \
				        "0.040079,0.046315,0.058720,0.082969,0.131492,0.228588", \
				        "0.039609,0.046028,0.058563,0.082955,0.131492,0.228587", \
				        "0.042503,0.047666,0.058887,0.082740,0.131460,0.228584", \
				        "0.054501,0.059569,0.069091,0.087973,0.131660,0.228555", \
				        "0.073212,0.079505,0.091325,0.112339,0.149017,0.230993", \
				        "0.104250,0.111271,0.125142,0.150825,0.196505,0.272708", \
				        "0.160752,0.168523,0.183870,0.213119,0.267596,0.363537");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034595,0.037568,0.043536,0.055181,0.077906,0.122312", \
				        "0.037568,0.040476,0.046415,0.058129,0.080837,0.125261", \
				        "0.043735,0.046665,0.052422,0.064082,0.086777,0.131118", \
				        "0.056278,0.059490,0.065576,0.076903,0.099214,0.143410", \
				        "0.070212,0.074571,0.082738,0.097917,0.124284,0.168822", \
				        "0.081851,0.087660,0.098652,0.118975,0.154478,0.213351", \
				        "0.084436,0.092191,0.106826,0.133809,0.181032,0.260064", \
				        "0.063808,0.074134,0.093408,0.129013,0.191454,0.296353");
			}
			cell_rise(Timing_X1) {
				values ("0.065770,0.072631,0.086221,0.112929,0.166309,0.272777", \
				        "0.069326,0.076060,0.089724,0.116485,0.169887,0.276461", \
				        "0.075478,0.082374,0.095902,0.122775,0.176333,0.283071", \
				        "0.086719,0.093620,0.107388,0.134383,0.187977,0.294868", \
				        "0.105575,0.113574,0.129021,0.156946,0.210630,0.317453", \
				        "0.135293,0.144846,0.163164,0.196592,0.256698,0.364676", \
				        "0.186729,0.198584,0.220708,0.260825,0.331988,0.456705", \
				        "0.273052,0.288419,0.316607,0.366868,0.454111,0.603219");
			}
			fall_transition(Timing_X1) {
				values ("0.026310,0.028869,0.033824,0.043194,0.062031,0.099557", \
				        "0.026286,0.028806,0.033826,0.043095,0.061974,0.099619", \
				        "0.025610,0.028209,0.033306,0.043077,0.061909,0.099610", \
				        "0.030417,0.032448,0.036094,0.044069,0.061901,0.099635", \
				        "0.042938,0.045266,0.049661,0.057393,0.070843,0.101565", \
				        "0.063399,0.066440,0.072149,0.082143,0.099346,0.128072", \
				        "0.097532,0.101674,0.109311,0.122644,0.145303,0.182581", \
				        "0.156389,0.162265,0.172927,0.191146,0.221588,0.270572");
			}
			rise_transition(Timing_X1) {
				values ("0.057444,0.064588,0.078457,0.105596,0.157125,0.255615", \
				        "0.057458,0.064592,0.078508,0.105566,0.157111,0.255645", \
				        "0.057453,0.064590,0.078468,0.105616,0.157094,0.255633", \
				        "0.058435,0.065125,0.078555,0.105580,0.157117,0.255642", \
				        "0.069196,0.074233,0.085179,0.108558,0.157262,0.255640", \
				        "0.092748,0.097565,0.107525,0.127938,0.168714,0.257580", \
				        "0.129978,0.134548,0.143798,0.164067,0.205367,0.285511", \
				        "0.192091,0.195913,0.204849,0.224346,0.265935,0.351087");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026773,0.029685,0.035573,0.047002,0.069347,0.113360", \
				        "0.029764,0.032616,0.038437,0.049920,0.072278,0.116273", \
				        "0.036427,0.039101,0.044594,0.055931,0.078303,0.122197", \
				        "0.046619,0.050152,0.056754,0.068826,0.090749,0.134494", \
				        "0.056493,0.061363,0.070304,0.086708,0.114541,0.160018", \
				        "0.062927,0.069384,0.081451,0.103373,0.140846,0.202050", \
				        "0.058797,0.067446,0.083466,0.112562,0.162517,0.244555", \
				        "0.029784,0.041247,0.062325,0.100626,0.166567,0.275429");
			}
			cell_rise(Timing_X1) {
				values ("0.064865,0.071624,0.085131,0.111743,0.164908,0.270993", \
				        "0.068410,0.075058,0.088442,0.115182,0.168441,0.274632", \
				        "0.074573,0.081346,0.094760,0.121509,0.174923,0.281271", \
				        "0.085830,0.092654,0.106279,0.133120,0.186585,0.293068", \
				        "0.104416,0.112388,0.127665,0.155812,0.209213,0.315644", \
				        "0.133761,0.143271,0.161501,0.195009,0.255123,0.362906", \
				        "0.184532,0.196276,0.218376,0.258661,0.329905,0.454544", \
				        "0.269185,0.284733,0.312986,0.363588,0.451089,0.600208");
			}
			fall_transition(Timing_X1) {
				values ("0.021108,0.023596,0.028554,0.037884,0.056605,0.094009", \
				        "0.020715,0.023365,0.028440,0.037750,0.056495,0.094071", \
				        "0.021102,0.023414,0.028222,0.037565,0.056539,0.094053", \
				        "0.027869,0.029896,0.033674,0.040452,0.056778,0.094109", \
				        "0.040195,0.042568,0.047098,0.054905,0.068507,0.097241", \
				        "0.060315,0.063414,0.069246,0.079361,0.096676,0.125605", \
				        "0.094026,0.098245,0.106075,0.119524,0.142350,0.179776", \
				        "0.152057,0.158054,0.169031,0.187730,0.218446,0.267476");
			}
			rise_transition(Timing_X1) {
				values ("0.040140,0.046328,0.058682,0.082964,0.131487,0.228584", \
				        "0.040146,0.046313,0.058585,0.082940,0.131492,0.228589", \
				        "0.040150,0.046292,0.058659,0.082943,0.131471,0.228558", \
				        "0.041150,0.046887,0.058700,0.082890,0.131462,0.228585", \
				        "0.049692,0.054948,0.065211,0.085923,0.131652,0.228589", \
				        "0.065380,0.070895,0.081967,0.102846,0.143126,0.230549", \
				        "0.092067,0.097915,0.109586,0.132012,0.175602,0.258479", \
				        "0.138502,0.145100,0.157895,0.182462,0.229386,0.319200");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.021938,0.024193,0.028769,0.037674,0.055077,0.089160", \
				        "0.025214,0.027409,0.031894,0.040823,0.058186,0.092288", \
				        "0.031988,0.034258,0.038577,0.047307,0.064631,0.098630", \
				        "0.040347,0.043490,0.049245,0.059898,0.077964,0.111710", \
				        "0.047693,0.052084,0.060103,0.074711,0.099169,0.138567", \
				        "0.050328,0.056176,0.067116,0.086852,0.120300,0.174392", \
				        "0.039831,0.047810,0.062517,0.089004,0.134241,0.207580", \
				        "-0.000332,0.010210,0.029740,0.065005,0.125363,0.224126");
			}
			cell_rise(Timing_X1) {
				values ("0.064744,0.071494,0.084933,0.111600,0.164751,0.270841", \
				        "0.068274,0.074956,0.088371,0.115072,0.168299,0.274479", \
				        "0.074438,0.081234,0.094599,0.121317,0.174715,0.281057", \
				        "0.085725,0.092536,0.106112,0.132930,0.186365,0.292820", \
				        "0.104294,0.112264,0.127508,0.155655,0.209014,0.315402", \
				        "0.134166,0.143666,0.161808,0.195207,0.255200,0.362859", \
				        "0.186773,0.198605,0.220437,0.260414,0.331308,0.455520", \
				        "0.276393,0.291571,0.319329,0.369159,0.455784,0.604022");
			}
			fall_transition(Timing_X1) {
				values ("0.015774,0.017775,0.021540,0.028921,0.043443,0.072633", \
				        "0.015513,0.017592,0.021491,0.028802,0.043421,0.072630", \
				        "0.017518,0.019070,0.022193,0.028767,0.043432,0.072638", \
				        "0.024757,0.026391,0.029424,0.034522,0.045276,0.072556", \
				        "0.036507,0.038538,0.042468,0.049035,0.060197,0.080047", \
				        "0.055902,0.058613,0.063711,0.072369,0.087206,0.111396", \
				        "0.088968,0.092686,0.099580,0.111378,0.131092,0.163062", \
				        "0.146616,0.152046,0.161879,0.178477,0.205405,0.247823");
			}
			rise_transition(Timing_X1) {
				values ("0.040131,0.046300,0.058638,0.082955,0.131492,0.228587", \
				        "0.040134,0.046294,0.058568,0.082869,0.131480,0.228580", \
				        "0.040131,0.046246,0.058595,0.082943,0.131476,0.228560", \
				        "0.041138,0.046890,0.058727,0.082888,0.131467,0.228585", \
				        "0.049695,0.054937,0.065244,0.085944,0.131660,0.228587", \
				        "0.065142,0.070699,0.081779,0.102773,0.143108,0.230550", \
				        "0.090824,0.096799,0.108550,0.131182,0.175087,0.258219", \
				        "0.136355,0.142804,0.155505,0.180099,0.227370,0.317771");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039667,0.042563,0.048391,0.059841,0.082201,0.126257", \
				        "0.043010,0.045909,0.051580,0.063046,0.085439,0.129503", \
				        "0.048710,0.051703,0.057604,0.068777,0.091103,0.135206", \
				        "0.058237,0.061405,0.067626,0.079370,0.101693,0.145810", \
				        "0.070079,0.074061,0.081493,0.095444,0.120411,0.165735", \
				        "0.079958,0.085426,0.095678,0.114123,0.146013,0.199727", \
				        "0.078376,0.086177,0.100577,0.126539,0.170716,0.242166", \
				        "0.046744,0.058149,0.078265,0.114927,0.177007,0.276628");
			}
			cell_rise(Timing_X1) {
				values ("0.085143,0.092076,0.105995,0.133356,0.187499,0.294825", \
				        "0.088090,0.094961,0.108822,0.136182,0.190343,0.297659", \
				        "0.094438,0.101338,0.115201,0.142446,0.196468,0.303718", \
				        "0.108389,0.115400,0.129041,0.156126,0.209733,0.316727", \
				        "0.139146,0.145626,0.158926,0.185304,0.238184,0.344067", \
				        "0.187654,0.196551,0.213168,0.244077,0.298971,0.402343", \
				        "0.260018,0.271432,0.292129,0.331409,0.401786,0.522576", \
				        "0.376681,0.389894,0.416641,0.465095,0.552609,0.706011");
			}
			fall_transition(Timing_X1) {
				values ("0.020915,0.023396,0.028426,0.037833,0.056578,0.094025", \
				        "0.020891,0.023403,0.028486,0.037797,0.056566,0.094097", \
				        "0.020798,0.023304,0.028210,0.037765,0.056600,0.094044", \
				        "0.023320,0.025538,0.029861,0.038586,0.056512,0.094092", \
				        "0.030982,0.033098,0.037539,0.045544,0.061327,0.095256", \
				        "0.046615,0.048968,0.053553,0.061942,0.077390,0.108358", \
				        "0.075188,0.077845,0.083418,0.093341,0.111007,0.142398", \
				        "0.124556,0.128449,0.135601,0.148676,0.171212,0.208860");
			}
			rise_transition(Timing_X1) {
				values ("0.083644,0.090167,0.103020,0.128610,0.178778,0.276992", \
				        "0.083646,0.090140,0.103036,0.128606,0.178774,0.277002", \
				        "0.083656,0.090166,0.103032,0.128618,0.178770,0.277006", \
				        "0.083503,0.090141,0.103024,0.128625,0.178777,0.276993", \
				        "0.088984,0.094473,0.105724,0.129231,0.178782,0.277002", \
				        "0.114554,0.119786,0.129505,0.148370,0.188198,0.277415", \
				        "0.155539,0.161806,0.174171,0.197121,0.238081,0.310980", \
				        "0.216897,0.224685,0.239250,0.267400,0.319148,0.409522");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033048,0.035802,0.041352,0.052234,0.074049,0.117531", \
				        "0.036328,0.039073,0.044590,0.055487,0.077261,0.120755", \
				        "0.041943,0.044796,0.050332,0.061158,0.082930,0.126476", \
				        "0.049973,0.053303,0.059670,0.071505,0.093498,0.137062", \
				        "0.058365,0.062827,0.070953,0.085634,0.111335,0.156959", \
				        "0.062508,0.068663,0.080170,0.100319,0.134208,0.189491", \
				        "0.052120,0.061231,0.077617,0.106418,0.153880,0.228522", \
				        "0.009093,0.022049,0.045083,0.085690,0.152554,0.257304");
			}
			cell_rise(Timing_X1) {
				values ("0.084054,0.090948,0.104752,0.132027,0.185982,0.292956", \
				        "0.087011,0.093796,0.107560,0.134825,0.188835,0.295827", \
				        "0.093359,0.100226,0.113934,0.141105,0.194981,0.301899", \
				        "0.107356,0.114302,0.127835,0.154775,0.208272,0.314897", \
				        "0.138038,0.144524,0.157758,0.184019,0.236704,0.342257", \
				        "0.185688,0.194925,0.211473,0.242461,0.297507,0.400528", \
				        "0.257456,0.268937,0.289628,0.328927,0.399491,0.520417", \
				        "0.372682,0.385869,0.412676,0.461250,0.548936,0.702488");
			}
			fall_transition(Timing_X1) {
				values ("0.015950,0.018362,0.023363,0.032649,0.051426,0.088951", \
				        "0.015959,0.018422,0.023218,0.032723,0.051477,0.088974", \
				        "0.016386,0.018717,0.023350,0.032747,0.051448,0.088932", \
				        "0.019997,0.022127,0.026439,0.034300,0.051828,0.088965", \
				        "0.028493,0.030567,0.034746,0.042439,0.057925,0.090737", \
				        "0.044879,0.047148,0.051600,0.059848,0.074885,0.105060", \
				        "0.074862,0.077215,0.082502,0.092108,0.109259,0.140162", \
				        "0.125707,0.129329,0.135791,0.148251,0.170270,0.207259");
			}
			rise_transition(Timing_X1) {
				values ("0.061718,0.068060,0.080647,0.105369,0.154460,0.252393", \
				        "0.061730,0.068068,0.080655,0.105303,0.154420,0.252370", \
				        "0.061728,0.068052,0.080657,0.105389,0.154465,0.252388", \
				        "0.061571,0.068061,0.080633,0.105361,0.154441,0.252383", \
				        "0.067174,0.072479,0.083386,0.106017,0.154435,0.252360", \
				        "0.088237,0.094090,0.105147,0.125115,0.163940,0.252812", \
				        "0.118755,0.126303,0.140699,0.166470,0.210985,0.286495", \
				        "0.166110,0.175694,0.193399,0.225940,0.283243,0.379696");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027899,0.030026,0.034272,0.042665,0.059395,0.092738", \
				        "0.031364,0.033478,0.037595,0.046078,0.062814,0.096162", \
				        "0.037842,0.040045,0.044295,0.052627,0.069405,0.102809", \
				        "0.046516,0.049490,0.055012,0.065020,0.082686,0.116173", \
				        "0.054806,0.059038,0.066721,0.080449,0.103760,0.141957", \
				        "0.058227,0.064203,0.075352,0.094858,0.127342,0.178972", \
				        "0.046358,0.055232,0.071226,0.099304,0.145556,0.217885", \
				        "0.000418,0.013049,0.035612,0.075359,0.140843,0.243308");
			}
			cell_rise(Timing_X1) {
				values ("0.087873,0.094688,0.108303,0.135414,0.189203,0.295943", \
				        "0.090829,0.097572,0.111159,0.138265,0.192081,0.298819", \
				        "0.097163,0.104037,0.117582,0.144569,0.198234,0.304908", \
				        "0.111364,0.118139,0.131600,0.158322,0.211602,0.317968", \
				        "0.142165,0.148439,0.161608,0.187729,0.240215,0.345492", \
				        "0.190927,0.200064,0.216225,0.246814,0.301292,0.404151", \
				        "0.264202,0.275349,0.295860,0.334752,0.404658,0.524862", \
				        "0.381811,0.394707,0.421121,0.468943,0.555935,0.708970");
			}
			fall_transition(Timing_X1) {
				values ("0.013206,0.015122,0.018823,0.025934,0.040229,0.068631", \
				        "0.013232,0.015145,0.018713,0.025822,0.040199,0.068653", \
				        "0.014155,0.015849,0.019128,0.025967,0.040215,0.068626", \
				        "0.019385,0.020976,0.024038,0.029509,0.041227,0.068652", \
				        "0.029094,0.030851,0.034348,0.040374,0.051416,0.073116", \
				        "0.046424,0.048380,0.052348,0.059497,0.072519,0.095346", \
				        "0.077464,0.079582,0.084198,0.092932,0.108666,0.136071", \
				        "0.130124,0.133164,0.138996,0.150254,0.170629,0.205184");
			}
			rise_transition(Timing_X1) {
				values ("0.063347,0.069743,0.082406,0.107282,0.156516,0.254600", \
				        "0.063357,0.069749,0.082411,0.107289,0.156529,0.254606", \
				        "0.063354,0.069741,0.082364,0.107243,0.156491,0.254600", \
				        "0.063301,0.069720,0.082402,0.107267,0.156501,0.254584", \
				        "0.068448,0.073854,0.084789,0.107804,0.156533,0.254605", \
				        "0.089671,0.095446,0.106511,0.126290,0.165494,0.254932", \
				        "0.120675,0.128020,0.142450,0.167992,0.212250,0.287719", \
				        "0.168612,0.178058,0.195487,0.227768,0.284644,0.380557");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.047167,0.050151,0.056035,0.067681,0.090351,0.134803", \
				        "0.050453,0.053382,0.059179,0.070828,0.093520,0.137998", \
				        "0.056129,0.059155,0.065115,0.076578,0.099182,0.143622", \
				        "0.066188,0.069303,0.075446,0.087103,0.109745,0.154208", \
				        "0.080231,0.083980,0.091031,0.104427,0.128944,0.174094", \
				        "0.094158,0.099136,0.108554,0.126019,0.156575,0.209142", \
				        "0.099578,0.106612,0.119719,0.143814,0.185590,0.254535", \
				        "0.082228,0.092129,0.110181,0.143370,0.200989,0.295677");
			}
			cell_rise(Timing_X1) {
				values ("0.098263,0.105194,0.119148,0.146475,0.200570,0.307866", \
				        "0.101974,0.108869,0.122684,0.150072,0.204132,0.311490", \
				        "0.108619,0.115553,0.129461,0.156807,0.210899,0.318219", \
				        "0.120608,0.127633,0.141580,0.168998,0.223109,0.330458", \
				        "0.144513,0.151532,0.165389,0.192611,0.246564,0.353769", \
				        "0.184661,0.192631,0.208840,0.239123,0.295363,0.401901", \
				        "0.249544,0.259943,0.278685,0.314580,0.380591,0.499154", \
				        "0.358649,0.371416,0.394391,0.438300,0.517414,0.657485");
			}
			fall_transition(Timing_X1) {
				values ("0.026153,0.028708,0.033819,0.043200,0.061949,0.099560", \
				        "0.026143,0.028634,0.033833,0.043120,0.062036,0.099595", \
				        "0.026041,0.028544,0.033628,0.043149,0.061990,0.099567", \
				        "0.027448,0.029736,0.034534,0.043477,0.061914,0.099620", \
				        "0.034425,0.036647,0.041286,0.049468,0.065505,0.100373", \
				        "0.049573,0.051945,0.056678,0.065077,0.080912,0.112462", \
				        "0.077092,0.079897,0.085507,0.095666,0.113534,0.145538", \
				        "0.124210,0.128326,0.135606,0.148919,0.171775,0.210166");
			}
			rise_transition(Timing_X1) {
				values ("0.083665,0.090148,0.102996,0.128625,0.178775,0.277006", \
				        "0.083661,0.090152,0.103001,0.128628,0.178775,0.277002", \
				        "0.083666,0.090152,0.102992,0.128614,0.178773,0.276997", \
				        "0.083659,0.090157,0.102988,0.128630,0.178779,0.277007", \
				        "0.086886,0.092797,0.104610,0.129074,0.178767,0.277001", \
				        "0.104920,0.110393,0.120920,0.141843,0.185093,0.277507", \
				        "0.135130,0.141007,0.152532,0.175017,0.218012,0.299704", \
				        "0.182640,0.189128,0.201917,0.226705,0.273855,0.363289");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039599,0.042496,0.048264,0.059664,0.081949,0.125964", \
				        "0.042884,0.045764,0.051426,0.062819,0.085116,0.129118", \
				        "0.048584,0.051547,0.057331,0.068498,0.090748,0.134756", \
				        "0.057954,0.061144,0.067331,0.079054,0.101328,0.145349", \
				        "0.069364,0.073431,0.080943,0.094911,0.119918,0.165226", \
				        "0.078258,0.083771,0.094194,0.112963,0.145182,0.199032", \
				        "0.076408,0.084298,0.098887,0.125114,0.169518,0.241224", \
				        "0.050021,0.060892,0.080889,0.116959,0.178265,0.277154");
			}
			cell_rise(Timing_X1) {
				values ("0.097210,0.104065,0.117884,0.145121,0.199086,0.306045", \
				        "0.100913,0.107752,0.121431,0.148714,0.202671,0.309681", \
				        "0.107568,0.114441,0.128189,0.155462,0.209412,0.316396", \
				        "0.119542,0.126510,0.140310,0.167638,0.221619,0.328645", \
				        "0.143414,0.150403,0.164177,0.191281,0.245086,0.351952", \
				        "0.183237,0.191191,0.207310,0.237588,0.293855,0.400069", \
				        "0.247575,0.257940,0.276649,0.312593,0.378599,0.497085", \
				        "0.355556,0.368424,0.391471,0.435436,0.514644,0.654680");
			}
			fall_transition(Timing_X1) {
				values ("0.021499,0.023973,0.029021,0.038376,0.056956,0.094501", \
				        "0.021477,0.023921,0.029043,0.038281,0.057074,0.094560", \
				        "0.021476,0.023935,0.028920,0.038335,0.057055,0.094494", \
				        "0.024036,0.026211,0.030563,0.039230,0.057081,0.094561", \
				        "0.031910,0.034014,0.038435,0.046332,0.061959,0.095808", \
				        "0.047636,0.049976,0.054575,0.062890,0.078282,0.109053", \
				        "0.075936,0.078593,0.084115,0.093974,0.111634,0.143139", \
				        "0.123556,0.127548,0.134643,0.147652,0.170295,0.208284");
			}
			rise_transition(Timing_X1) {
				values ("0.061722,0.068076,0.080594,0.105352,0.154408,0.252385", \
				        "0.061729,0.068063,0.080610,0.105375,0.154435,0.252360", \
				        "0.061729,0.068066,0.080629,0.105325,0.154417,0.252373", \
				        "0.061717,0.068067,0.080610,0.105375,0.154431,0.252374", \
				        "0.065051,0.070777,0.082249,0.105793,0.154402,0.252362", \
				        "0.079797,0.085758,0.097049,0.118463,0.160801,0.252905", \
				        "0.103658,0.110099,0.122868,0.146829,0.191663,0.275210", \
				        "0.141727,0.149336,0.164111,0.191674,0.242187,0.335248");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.032513,0.034713,0.039196,0.047986,0.065206,0.099014", \
				        "0.035978,0.038188,0.042578,0.051375,0.068535,0.102353", \
				        "0.042688,0.044946,0.049335,0.058016,0.075147,0.108967", \
				        "0.053504,0.056242,0.061371,0.071019,0.088450,0.122306", \
				        "0.065125,0.068951,0.076021,0.088840,0.111045,0.148327", \
				        "0.073340,0.078714,0.088771,0.106884,0.137650,0.187478", \
				        "0.069973,0.077710,0.091972,0.117475,0.160701,0.230057", \
				        "0.040559,0.051279,0.070833,0.106117,0.166140,0.262753");
			}
			cell_rise(Timing_X1) {
				values ("0.101042,0.107854,0.121448,0.148520,0.202293,0.308974", \
				        "0.104723,0.111517,0.125038,0.152106,0.205905,0.312610", \
				        "0.111357,0.118169,0.131744,0.158837,0.212606,0.319356", \
				        "0.123327,0.130225,0.143902,0.170980,0.224770,0.331555", \
				        "0.147353,0.154165,0.167784,0.194717,0.248284,0.354870", \
				        "0.187839,0.195848,0.211595,0.241510,0.297324,0.403181", \
				        "0.253930,0.264037,0.282294,0.317777,0.383186,0.500980", \
				        "0.364201,0.375666,0.399367,0.442709,0.521052,0.660326");
			}
			fall_transition(Timing_X1) {
				values ("0.017493,0.019430,0.023355,0.030321,0.044418,0.072888", \
				        "0.017459,0.019326,0.023254,0.030253,0.044500,0.072814", \
				        "0.017691,0.019495,0.023096,0.030217,0.044369,0.072883", \
				        "0.022222,0.023803,0.026817,0.032367,0.044990,0.072822", \
				        "0.031990,0.033695,0.037114,0.042950,0.054088,0.076408", \
				        "0.048815,0.050865,0.054818,0.062055,0.075000,0.097781", \
				        "0.078205,0.080542,0.085498,0.094458,0.110581,0.138311", \
				        "0.127325,0.130986,0.137370,0.149282,0.170376,0.205830");
			}
			rise_transition(Timing_X1) {
				values ("0.063352,0.069757,0.082376,0.107234,0.156522,0.254607", \
				        "0.063353,0.069764,0.082375,0.107249,0.156470,0.254604", \
				        "0.063353,0.069752,0.082397,0.107280,0.156533,0.254596", \
				        "0.063358,0.069766,0.082347,0.107262,0.156533,0.254608", \
				        "0.066401,0.072311,0.083944,0.107714,0.156519,0.254599", \
				        "0.081262,0.087261,0.098538,0.120032,0.162622,0.255058", \
				        "0.105181,0.111621,0.124416,0.148399,0.193234,0.276925", \
				        "0.143606,0.151324,0.165877,0.193204,0.243677,0.336677");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2";

			rise_power(Power_X1) {
				values ("0.002333,0.002577,0.003063,0.004036,0.005975,0.009846", \
				        "0.002330,0.002573,0.003061,0.004038,0.005977,0.009847", \
				        "0.002351,0.002595,0.003080,0.004048,0.005978,0.009852", \
				        "0.002438,0.002675,0.003145,0.004103,0.006016,0.009877", \
				        "0.002665,0.002891,0.003350,0.004274,0.006161,0.009974", \
				        "0.003195,0.003409,0.003838,0.004723,0.006549,0.010284", \
				        "0.004388,0.004578,0.004956,0.005772,0.007492,0.011098", \
				        "0.007029,0.007174,0.007476,0.008158,0.009689,0.013060");
			}
			fall_power(Power_X1) {
				values ("0.001688,0.001443,0.000957,0.000000,-0.001926,-0.005786", \
				        "0.001687,0.001448,0.000964,0.000005,-0.001922,-0.005780", \
				        "0.001700,0.001458,0.000978,0.000019,-0.001913,-0.005772", \
				        "0.001739,0.001500,0.001014,0.000045,-0.001890,-0.005759", \
				        "0.001881,0.001623,0.001131,0.000140,-0.001820,-0.005713", \
				        "0.002315,0.002043,0.001499,0.000455,-0.001572,-0.005532", \
				        "0.003488,0.003180,0.002575,0.001411,-0.000786,-0.004944", \
				        "0.006197,0.005850,0.005177,0.003868,0.001395,-0.003187");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002113,0.002335,0.002829,0.003792,0.005736,0.009612", \
				        "0.002099,0.002335,0.002823,0.003793,0.005734,0.009615", \
				        "0.002116,0.002360,0.002844,0.003807,0.005742,0.009619", \
				        "0.002203,0.002446,0.002914,0.003866,0.005782,0.009640", \
				        "0.002429,0.002656,0.003115,0.004041,0.005921,0.009739", \
				        "0.002969,0.003174,0.003601,0.004489,0.006315,0.010043", \
				        "0.004196,0.004370,0.004741,0.005541,0.007264,0.010873", \
				        "0.006941,0.007067,0.007334,0.007967,0.009468,0.012823");
			}
			fall_power(Power_X1) {
				values ("0.000633,0.000390,-0.000092,-0.001052,-0.002984,-0.006847", \
				        "0.000641,0.000397,-0.000085,-0.001046,-0.002975,-0.006838", \
				        "0.000651,0.000399,-0.000072,-0.001031,-0.002969,-0.006823", \
				        "0.000699,0.000455,-0.000029,-0.001005,-0.002939,-0.006818", \
				        "0.000874,0.000615,0.000105,-0.000896,-0.002867,-0.006769", \
				        "0.001398,0.001106,0.000543,-0.000536,-0.002608,-0.006571", \
				        "0.002677,0.002354,0.001717,0.000509,-0.001748,-0.005961", \
				        "0.005495,0.005139,0.004426,0.003071,0.000539,-0.004125");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & B2";

			rise_power(Power_X1) {
				values ("0.002051,0.002297,0.002776,0.003748,0.005694,0.009570", \
				        "0.002038,0.002296,0.002773,0.003748,0.005687,0.009567", \
				        "0.002063,0.002311,0.002794,0.003758,0.005694,0.009563", \
				        "0.002169,0.002399,0.002872,0.003820,0.005740,0.009588", \
				        "0.002399,0.002626,0.003089,0.004010,0.005890,0.009701", \
				        "0.002952,0.003167,0.003598,0.004486,0.006302,0.010040", \
				        "0.004219,0.004386,0.004766,0.005571,0.007293,0.010907", \
				        "0.007046,0.007165,0.007430,0.008063,0.009564,0.012935");
			}
			fall_power(Power_X1) {
				values ("0.000854,0.000609,0.000124,-0.000840,-0.002768,-0.006628", \
				        "0.000857,0.000613,0.000131,-0.000832,-0.002762,-0.006618", \
				        "0.000865,0.000623,0.000148,-0.000810,-0.002748,-0.006606", \
				        "0.000922,0.000677,0.000195,-0.000777,-0.002714,-0.006587", \
				        "0.001119,0.000845,0.000344,-0.000659,-0.002629,-0.006531", \
				        "0.001683,0.001389,0.000827,-0.000257,-0.002331,-0.006321", \
				        "0.003040,0.002714,0.002082,0.000873,-0.001402,-0.005640", \
				        "0.005988,0.005622,0.004916,0.003570,0.001039,-0.003637");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2";

			rise_power(Power_X1) {
				values ("0.002571,0.002824,0.003313,0.004287,0.006231,0.010103", \
				        "0.002554,0.002800,0.003290,0.004265,0.006219,0.010091", \
				        "0.002531,0.002767,0.003255,0.004237,0.006189,0.010083", \
				        "0.002490,0.002738,0.003232,0.004215,0.006172,0.010070", \
				        "0.002520,0.002755,0.003248,0.004211,0.006159,0.010049", \
				        "0.002799,0.003012,0.003475,0.004401,0.006300,0.010134", \
				        "0.003716,0.003898,0.004293,0.005131,0.006904,0.010607", \
				        "0.005919,0.006067,0.006375,0.007062,0.008608,0.012032");
			}
			fall_power(Power_X1) {
				values ("0.002572,0.002329,0.001840,0.000884,-0.001041,-0.004893", \
				        "0.002567,0.002325,0.001836,0.000879,-0.001045,-0.004900", \
				        "0.002565,0.002332,0.001840,0.000884,-0.001040,-0.004891", \
				        "0.002597,0.002361,0.001875,0.000907,-0.001023,-0.004884", \
				        "0.002728,0.002476,0.001988,0.001002,-0.000950,-0.004841", \
				        "0.003108,0.002851,0.002332,0.001309,-0.000705,-0.004650", \
				        "0.004135,0.003854,0.003295,0.002196,0.000069,-0.004045", \
				        "0.006519,0.006204,0.005601,0.004407,0.002100,-0.002297");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & !B2";

			rise_power(Power_X1) {
				values ("0.002337,0.002594,0.003081,0.004054,0.005999,0.009872", \
				        "0.002318,0.002561,0.003054,0.004027,0.005978,0.009854", \
				        "0.002297,0.002536,0.003023,0.004002,0.005957,0.009845", \
				        "0.002254,0.002500,0.002996,0.003982,0.005938,0.009832", \
				        "0.002278,0.002524,0.003017,0.003984,0.005926,0.009815", \
				        "0.002565,0.002787,0.003241,0.004168,0.006059,0.009899", \
				        "0.003513,0.003691,0.004077,0.004902,0.006672,0.010367", \
				        "0.005828,0.005942,0.006224,0.006871,0.008390,0.011809");
			}
			fall_power(Power_X1) {
				values ("0.001520,0.001274,0.000794,-0.000164,-0.002091,-0.005950", \
				        "0.001518,0.001274,0.000791,-0.000168,-0.002097,-0.005953", \
				        "0.001525,0.001276,0.000796,-0.000163,-0.002093,-0.005949", \
				        "0.001556,0.001314,0.000835,-0.000137,-0.002074,-0.005941", \
				        "0.001708,0.001454,0.000957,-0.000033,-0.001999,-0.005896", \
				        "0.002151,0.001879,0.001347,0.000306,-0.001729,-0.005699", \
				        "0.003268,0.002966,0.002385,0.001259,-0.000912,-0.005060", \
				        "0.005725,0.005411,0.004778,0.003553,0.001203,-0.003257");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2";

			rise_power(Power_X1) {
				values ("0.002292,0.002538,0.003030,0.004004,0.005944,0.009820", \
				        "0.002268,0.002508,0.003004,0.003979,0.005926,0.009807", \
				        "0.002235,0.002484,0.002971,0.003963,0.005903,0.009794", \
				        "0.002202,0.002453,0.002945,0.003930,0.005888,0.009778", \
				        "0.002232,0.002473,0.002958,0.003928,0.005877,0.009754", \
				        "0.002533,0.002748,0.003207,0.004126,0.006017,0.009853", \
				        "0.003511,0.003693,0.004073,0.004900,0.006669,0.010360", \
				        "0.005885,0.006017,0.006292,0.006943,0.008455,0.011869");
			}
			fall_power(Power_X1) {
				values ("0.001734,0.001492,0.001009,0.000045,-0.001880,-0.005734", \
				        "0.001731,0.001490,0.001005,0.000044,-0.001879,-0.005733", \
				        "0.001734,0.001491,0.001011,0.000023,-0.001873,-0.005731", \
				        "0.001780,0.001537,0.001059,0.000090,-0.001848,-0.005714", \
				        "0.001933,0.001684,0.001188,0.000199,-0.001769,-0.005661", \
				        "0.002417,0.002137,0.001611,0.000565,-0.001472,-0.005444", \
				        "0.003591,0.003294,0.002709,0.001586,-0.000585,-0.004748", \
				        "0.006181,0.005852,0.005229,0.004002,0.001648,-0.002815");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2";

			rise_power(Power_X1) {
				values ("0.004284,0.004526,0.005015,0.005979,0.007924,0.011805", \
				        "0.004265,0.004517,0.005007,0.005977,0.007915,0.011795", \
				        "0.004287,0.004516,0.005008,0.005978,0.007914,0.011794", \
				        "0.004338,0.004581,0.005066,0.006022,0.007950,0.011817", \
				        "0.004538,0.004765,0.005239,0.006174,0.008078,0.011912", \
				        "0.005008,0.005238,0.005683,0.006602,0.008452,0.012213", \
				        "0.006111,0.006326,0.006751,0.007617,0.009388,0.013036", \
				        "0.008525,0.008700,0.009101,0.009904,0.011558,0.015030");
			}
			fall_power(Power_X1) {
				values ("0.001554,0.001319,0.000833,-0.000135,-0.002066,-0.005933", \
				        "0.001546,0.001308,0.000827,-0.000133,-0.002062,-0.005923", \
				        "0.001539,0.001295,0.000812,-0.000148,-0.002073,-0.005929", \
				        "0.001524,0.001285,0.000807,-0.000158,-0.002086,-0.005949", \
				        "0.001555,0.001315,0.000831,-0.000134,-0.002068,-0.005934", \
				        "0.001790,0.001543,0.001027,0.000020,-0.001952,-0.005846", \
				        "0.002658,0.002351,0.001781,0.000672,-0.001446,-0.005502", \
				        "0.004830,0.004490,0.003843,0.002600,0.000236,-0.004198");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & !B2";

			rise_power(Power_X1) {
				values ("0.004051,0.004297,0.004777,0.005747,0.007683,0.011565", \
				        "0.004043,0.004288,0.004770,0.005741,0.007680,0.011560", \
				        "0.004042,0.004293,0.004775,0.005743,0.007679,0.011561", \
				        "0.004105,0.004365,0.004832,0.005793,0.007715,0.011581", \
				        "0.004311,0.004537,0.005004,0.005945,0.007837,0.011669", \
				        "0.004773,0.005008,0.005458,0.006369,0.008219,0.011977", \
				        "0.005882,0.006095,0.006523,0.007385,0.009161,0.012799", \
				        "0.008304,0.008474,0.008880,0.009662,0.011319,0.014787");
			}
			fall_power(Power_X1) {
				values ("0.000630,0.000388,-0.000101,-0.001070,-0.003002,-0.006870", \
				        "0.000614,0.000379,-0.000105,-0.001064,-0.002997,-0.006859", \
				        "0.000592,0.000364,-0.000114,-0.001077,-0.003003,-0.006865", \
				        "0.000587,0.000349,-0.000129,-0.001092,-0.003019,-0.006890", \
				        "0.000631,0.000398,-0.000096,-0.001068,-0.003005,-0.006873", \
				        "0.000939,0.000676,0.000141,-0.000878,-0.002872,-0.006779", \
				        "0.001868,0.001564,0.000974,-0.000162,-0.002324,-0.006417", \
				        "0.004165,0.003824,0.003155,0.001869,-0.000553,-0.005054");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & A2 & !B2";

			rise_power(Power_X1) {
				values ("0.004182,0.004428,0.004916,0.005886,0.007826,0.011704", \
				        "0.004168,0.004419,0.004910,0.005881,0.007823,0.011710", \
				        "0.004192,0.004429,0.004913,0.005886,0.007823,0.011700", \
				        "0.004242,0.004495,0.004979,0.005933,0.007856,0.011726", \
				        "0.004449,0.004677,0.005155,0.006096,0.007993,0.011833", \
				        "0.004930,0.005165,0.005614,0.006532,0.008387,0.012141", \
				        "0.006038,0.006255,0.006682,0.007556,0.009339,0.012991", \
				        "0.008484,0.008649,0.009059,0.009854,0.011520,0.015008");
			}
			fall_power(Power_X1) {
				values ("0.000633,0.000385,-0.000102,-0.001072,-0.003004,-0.006873", \
				        "0.000618,0.000375,-0.000103,-0.001067,-0.002996,-0.006862", \
				        "0.000607,0.000364,-0.000118,-0.001079,-0.003008,-0.006869", \
				        "0.000588,0.000358,-0.000125,-0.001092,-0.003015,-0.006884", \
				        "0.000659,0.000408,-0.000084,-0.001058,-0.002996,-0.006861", \
				        "0.000966,0.000697,0.000174,-0.000855,-0.002855,-0.006769", \
				        "0.001935,0.001616,0.001032,-0.000102,-0.002266,-0.006376", \
				        "0.004272,0.003925,0.003260,0.001976,-0.000445,-0.004953");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !B1";

			rise_power(Power_X1) {
				values ("0.004525,0.004769,0.005260,0.006227,0.008169,0.012046", \
				        "0.004523,0.004754,0.005239,0.006212,0.008151,0.012028", \
				        "0.004504,0.004742,0.005227,0.006198,0.008140,0.012021", \
				        "0.004494,0.004741,0.005230,0.006206,0.008147,0.012029", \
				        "0.004545,0.004790,0.005262,0.006227,0.008163,0.012036", \
				        "0.004783,0.005004,0.005473,0.006417,0.008317,0.012154", \
				        "0.005543,0.005781,0.006213,0.007103,0.008924,0.012645", \
				        "0.007480,0.007675,0.008068,0.008884,0.010575,0.014100");
			}
			fall_power(Power_X1) {
				values ("0.002578,0.002342,0.001856,0.000890,-0.001048,-0.004915", \
				        "0.002562,0.002320,0.001842,0.000882,-0.001053,-0.004912", \
				        "0.002558,0.002310,0.001828,0.000864,-0.001067,-0.004927", \
				        "0.002543,0.002307,0.001822,0.000857,-0.001076,-0.004944", \
				        "0.002553,0.002314,0.001838,0.000874,-0.001058,-0.004930", \
				        "0.002698,0.002450,0.001959,0.000979,-0.000970,-0.004855", \
				        "0.003294,0.003045,0.002521,0.001486,-0.000551,-0.004528", \
				        "0.005084,0.004786,0.004203,0.003064,0.000868,-0.003365");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & !B1";

			rise_power(Power_X1) {
				values ("0.004287,0.004544,0.005026,0.005997,0.007934,0.011812", \
				        "0.004278,0.004524,0.005009,0.005979,0.007918,0.011795", \
				        "0.004268,0.004515,0.004992,0.005967,0.007909,0.011788", \
				        "0.004257,0.004513,0.004992,0.005969,0.007911,0.011795", \
				        "0.004305,0.004547,0.005029,0.005996,0.007930,0.011804", \
				        "0.004545,0.004775,0.005243,0.006183,0.008083,0.011916", \
				        "0.005325,0.005546,0.005987,0.006872,0.008692,0.012407", \
				        "0.007250,0.007425,0.007838,0.008654,0.010344,0.013861");
			}
			fall_power(Power_X1) {
				values ("0.001651,0.001420,0.000926,-0.000046,-0.001983,-0.005853", \
				        "0.001645,0.001398,0.000916,-0.000051,-0.001985,-0.005842", \
				        "0.001633,0.001388,0.000903,-0.000065,-0.001997,-0.005865", \
				        "0.001615,0.001380,0.000896,-0.000069,-0.002011,-0.005877", \
				        "0.001628,0.001384,0.000911,-0.000056,-0.001992,-0.005869", \
				        "0.001803,0.001544,0.001050,0.000064,-0.001894,-0.005790", \
				        "0.002460,0.002202,0.001664,0.000614,-0.001448,-0.005448", \
				        "0.004348,0.004042,0.003443,0.002278,0.000035,-0.004242");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & A2 & !B1";

			rise_power(Power_X1) {
				values ("0.004428,0.004679,0.005162,0.006131,0.008071,0.011950", \
				        "0.004413,0.004663,0.005146,0.006111,0.008054,0.011934", \
				        "0.004412,0.004654,0.005127,0.006104,0.008046,0.011927", \
				        "0.004400,0.004652,0.005131,0.006103,0.008050,0.011933", \
				        "0.004452,0.004689,0.005169,0.006136,0.008070,0.011941", \
				        "0.004680,0.004917,0.005383,0.006331,0.008230,0.012060", \
				        "0.005493,0.005702,0.006141,0.007033,0.008856,0.012575", \
				        "0.007421,0.007600,0.008007,0.008834,0.010526,0.014055");
			}
			fall_power(Power_X1) {
				values ("0.001655,0.001420,0.000927,-0.000048,-0.001980,-0.005859", \
				        "0.001638,0.001396,0.000917,-0.000055,-0.001987,-0.005851", \
				        "0.001632,0.001391,0.000904,-0.000067,-0.001997,-0.005866", \
				        "0.001621,0.001378,0.000901,-0.000067,-0.002003,-0.005873", \
				        "0.001635,0.001392,0.000915,-0.000054,-0.001990,-0.005860", \
				        "0.001807,0.001567,0.001068,0.000080,-0.001879,-0.005773", \
				        "0.002538,0.002258,0.001714,0.000657,-0.001405,-0.005416", \
				        "0.004455,0.004150,0.003539,0.002372,0.000124,-0.004164");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI22_X2
 Cell Description	: Combinational cell (OAI22_X2) with drive strength X2
*******************************************************************************************/

cell (OAI22_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 21013.270750;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 4301.440000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 21589.770000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 6847.547000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 23093.290000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 21589.720000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 30615.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 21634.540000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 29808.790000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 6847.536000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 21634.550000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 5045.439000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 29806.900000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 20175.760000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 28350.110000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 28348.390000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 36522.990000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.001036;
		fall_capacitance	: 0.000964;
		rise_capacitance	: 0.001109;
		fall_capacitance_range		(0.000827, 0.001235);
		rise_capacitance_range		(0.000885, 0.001406);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000016,0.000013,0.000009,0.000006,0.000003,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000039,0.000032,0.000026,0.000022,0.000019,0.000017,0.000015,0.000011");
			}

		}

		internal_power () {

			when      	: "A2 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000007,0.000004,0.000002,0.000000,-0.000001,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000010,0.000006,0.000003,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.001045;
		fall_capacitance	: 0.001035;
		rise_capacitance	: 0.001055;
		fall_capacitance_range		(0.000840, 0.001235);
		rise_capacitance_range		(0.000872, 0.001290);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000042,0.000027,0.000017,0.000011,0.000006,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000007,0.000005,0.000003,0.000002,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000063,0.000042,0.000027,0.000017,0.000011,0.000006,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000062,0.000041,0.000026,0.000017,0.000010,0.000006,0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000031,0.000026,0.000022,0.000020,0.000018,0.000016,0.000014,0.000011");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001017;
		fall_capacitance	: 0.000932;
		rise_capacitance	: 0.001102;
		fall_capacitance_range		(0.000811, 0.001108);
		rise_capacitance_range		(0.000915, 0.001367);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000015,0.000011,0.000008,0.000004,0.000001,-0.000002,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000003,0.000002,0.000001,-0.000000,-0.000002,-0.000004,-0.000009");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000042,0.000030,0.000021,0.000015,0.000011,0.000008,0.000005,0.000001");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.001035;
		fall_capacitance	: 0.001012;
		rise_capacitance	: 0.001059;
		fall_capacitance_range		(0.000831, 0.001149);
		rise_capacitance_range		(0.000907, 0.001253);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000049,0.000034,0.000023,0.000017,0.000012,0.000008,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000014,0.000009,0.000005,0.000003,0.000001,-0.000001,-0.000003,-0.000007");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000049,0.000034,0.000023,0.000017,0.000012,0.000008,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000024,0.000018,0.000013,0.000010,0.000007,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000070,0.000049,0.000034,0.000023,0.000017,0.000012,0.000007,0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) & (B1 | B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022137,0.026465,0.032173,0.043269,0.064979,0.107835", \
				        "0.025251,0.029475,0.035190,0.046328,0.068023,0.110831", \
				        "0.031877,0.036085,0.041453,0.052487,0.074107,0.116801", \
				        "0.039949,0.045667,0.052497,0.064978,0.086561,0.129100", \
				        "0.046900,0.054612,0.064002,0.080752,0.109082,0.154654", \
				        "0.048723,0.059136,0.071745,0.094408,0.132614,0.194389", \
				        "0.036166,0.050249,0.067317,0.097829,0.149326,0.232622", \
				        "-0.010151,0.008749,0.031659,0.072667,0.142214,0.254643");
			}
			cell_rise(Timing_X2) {
				values ("0.035703,0.045694,0.059008,0.085193,0.137180,0.241205", \
				        "0.038808,0.048767,0.062084,0.088138,0.140213,0.244184", \
				        "0.045861,0.055631,0.068727,0.094577,0.146380,0.250363", \
				        "0.060430,0.070717,0.083310,0.108714,0.159931,0.263305", \
				        "0.081753,0.094835,0.110919,0.138879,0.189062,0.290971", \
				        "0.114157,0.130448,0.150557,0.186295,0.247509,0.350047", \
				        "0.166778,0.187162,0.212008,0.256402,0.333826,0.463152", \
				        "0.257055,0.282154,0.313130,0.368359,0.464395,0.626970");
			}
			fall_transition(Timing_X2) {
				values ("0.016416,0.020129,0.024606,0.033781,0.052143,0.088924", \
				        "0.015915,0.019765,0.024540,0.033809,0.052114,0.088875", \
				        "0.017502,0.020581,0.024978,0.033590,0.052167,0.088936", \
				        "0.024231,0.027270,0.031003,0.037581,0.052844,0.088938", \
				        "0.035535,0.039280,0.044068,0.051967,0.065633,0.092980", \
				        "0.054939,0.059813,0.065676,0.075974,0.093393,0.122233", \
				        "0.088802,0.095563,0.103459,0.116949,0.139343,0.176056", \
				        "0.149572,0.158938,0.169807,0.188363,0.218441,0.265898");
			}
			rise_transition(Timing_X2) {
				values ("0.043471,0.053996,0.067366,0.093477,0.143084,0.238713", \
				        "0.043418,0.053978,0.067347,0.093487,0.143104,0.238693", \
				        "0.043303,0.053696,0.067307,0.093479,0.143090,0.238692", \
				        "0.048409,0.056805,0.068458,0.093373,0.143083,0.238716", \
				        "0.065352,0.072213,0.081271,0.100332,0.143814,0.238721", \
				        "0.092955,0.100111,0.109810,0.128803,0.163545,0.242284", \
				        "0.137240,0.143959,0.154042,0.175369,0.216152,0.287251", \
				        "0.212393,0.218633,0.228354,0.250232,0.296360,0.384028");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.016668,0.020727,0.026129,0.036781,0.058047,0.100448", \
				        "0.019902,0.023761,0.029156,0.039861,0.061072,0.103436", \
				        "0.025116,0.029826,0.035576,0.046047,0.067180,0.109459", \
				        "0.029972,0.036514,0.044197,0.057570,0.079730,0.121756", \
				        "0.032717,0.041557,0.051974,0.070231,0.100228,0.147396", \
				        "0.028892,0.040885,0.055100,0.079700,0.120248,0.184364", \
				        "0.008711,0.025095,0.044307,0.077600,0.132347,0.218816", \
				        "-0.046878,-0.025577,0.000287,0.044982,0.118915,0.235802");
			}
			cell_rise(Timing_X2) {
				values ("0.034851,0.044721,0.057918,0.083967,0.135880,0.239470", \
				        "0.037970,0.047788,0.060844,0.086918,0.138868,0.242476", \
				        "0.045041,0.054700,0.067560,0.093394,0.145066,0.248600", \
				        "0.059441,0.069724,0.082307,0.107505,0.158575,0.261567", \
				        "0.080377,0.093457,0.109445,0.137590,0.187712,0.289244", \
				        "0.112197,0.128498,0.148511,0.184491,0.245875,0.348336", \
				        "0.163580,0.184187,0.209030,0.253703,0.331320,0.460813", \
				        "0.251121,0.276679,0.308097,0.363870,0.460362,0.623169");
			}
			fall_transition(Timing_X2) {
				values ("0.011657,0.015426,0.020051,0.029179,0.047617,0.084309", \
				        "0.011781,0.015270,0.019862,0.029198,0.047583,0.084331", \
				        "0.015166,0.017857,0.021357,0.029356,0.047606,0.084336", \
				        "0.021850,0.024969,0.028981,0.035365,0.049279,0.084334", \
				        "0.033143,0.036977,0.041812,0.049816,0.063610,0.089805", \
				        "0.052734,0.057650,0.063669,0.073845,0.091274,0.120217", \
				        "0.086998,0.093684,0.101583,0.114974,0.137287,0.173855", \
				        "0.148729,0.157660,0.168391,0.186691,0.216524,0.263745");
			}
			rise_transition(Timing_X2) {
				values ("0.029885,0.038962,0.050947,0.074673,0.122033,0.216899", \
				        "0.029815,0.038932,0.050992,0.074691,0.122064,0.216891", \
				        "0.029757,0.038647,0.050952,0.074696,0.122091,0.216865", \
				        "0.034964,0.041874,0.052186,0.074557,0.122089,0.216873", \
				        "0.046178,0.054134,0.064046,0.081665,0.122788,0.216886", \
				        "0.063618,0.073192,0.085151,0.106322,0.142551,0.220509", \
				        "0.094338,0.104974,0.118740,0.144252,0.189732,0.265448", \
				        "0.151062,0.162982,0.178409,0.207507,0.261111,0.355650");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.014420,0.017551,0.021686,0.029952,0.046338,0.079124", \
				        "0.017731,0.020779,0.024947,0.033204,0.049604,0.082287", \
				        "0.021995,0.026188,0.031132,0.039806,0.056096,0.088732", \
				        "0.025605,0.031424,0.038162,0.050047,0.069196,0.101829", \
				        "0.026452,0.034470,0.043814,0.060044,0.086572,0.127710", \
				        "0.019496,0.030497,0.043403,0.065712,0.101941,0.158569", \
				        "-0.006109,0.008990,0.026677,0.057168,0.106875,0.184403", \
				        "-0.071511,-0.051736,-0.027847,0.013421,0.081258,0.187562");
			}
			cell_rise(Timing_X2) {
				values ("0.034675,0.044553,0.057677,0.083735,0.135684,0.239309", \
				        "0.037787,0.047608,0.060618,0.086690,0.138639,0.242242", \
				        "0.044984,0.054572,0.067432,0.093246,0.144875,0.248389", \
				        "0.059610,0.069842,0.082385,0.107551,0.158560,0.261428", \
				        "0.080943,0.094002,0.109923,0.137985,0.188018,0.289402", \
				        "0.113625,0.129876,0.149814,0.185672,0.246868,0.349138", \
				        "0.167377,0.187655,0.212238,0.256612,0.333931,0.463023", \
				        "0.260860,0.285664,0.316381,0.371203,0.466685,0.628622");
			}
			fall_transition(Timing_X2) {
				values ("0.008795,0.011566,0.015133,0.022225,0.036485,0.065028", \
				        "0.009596,0.011932,0.015150,0.022217,0.036482,0.065019", \
				        "0.013360,0.015573,0.018120,0.023396,0.036507,0.065053", \
				        "0.019715,0.022392,0.025707,0.030881,0.040623,0.065261", \
				        "0.030570,0.033862,0.037919,0.044813,0.056368,0.075488", \
				        "0.049531,0.053839,0.059113,0.067966,0.082751,0.107104", \
				        "0.083120,0.089002,0.096040,0.107811,0.127172,0.158364", \
				        "0.144233,0.152216,0.161627,0.177882,0.204181,0.245211");
			}
			rise_transition(Timing_X2) {
				values ("0.029873,0.038896,0.050882,0.074641,0.122079,0.216898", \
				        "0.029799,0.038860,0.050911,0.074681,0.122073,0.216901", \
				        "0.029760,0.038572,0.050864,0.074713,0.122092,0.216860", \
				        "0.034898,0.041771,0.052112,0.074562,0.122073,0.216876", \
				        "0.045850,0.053867,0.063696,0.081533,0.122750,0.216886", \
				        "0.062741,0.072365,0.084377,0.105776,0.142129,0.220399", \
				        "0.092351,0.103019,0.116902,0.142636,0.188417,0.264456", \
				        "0.147673,0.159440,0.174598,0.203689,0.257679,0.352915");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.027961,0.032343,0.038188,0.049481,0.071514,0.114751", \
				        "0.030934,0.035243,0.041122,0.052446,0.074457,0.117655", \
				        "0.037381,0.041535,0.047214,0.058494,0.080449,0.123592", \
				        "0.047974,0.053206,0.059422,0.071189,0.092875,0.135839", \
				        "0.058484,0.065527,0.074168,0.089828,0.116851,0.161329", \
				        "0.065695,0.075060,0.086600,0.107607,0.143925,0.203543", \
				        "0.062594,0.075037,0.090279,0.118210,0.166505,0.246329", \
				        "0.034919,0.051293,0.071377,0.108140,0.171821,0.277579");
			}
			cell_rise(Timing_X2) {
				values ("0.051839,0.061892,0.075211,0.101220,0.153392,0.257321", \
				        "0.055184,0.065139,0.078468,0.104721,0.156847,0.260948", \
				        "0.061077,0.071192,0.084638,0.110784,0.163045,0.267273", \
				        "0.071915,0.082329,0.095768,0.122135,0.174380,0.278722", \
				        "0.088399,0.100902,0.116539,0.144825,0.197256,0.301457", \
				        "0.116062,0.130991,0.149660,0.183160,0.243006,0.349216", \
				        "0.163866,0.182753,0.205393,0.245922,0.316917,0.440294", \
				        "0.244594,0.268701,0.297882,0.349094,0.436720,0.584646");
			}
			fall_transition(Timing_X2) {
				values ("0.020287,0.023916,0.028648,0.037821,0.056228,0.093110", \
				        "0.020173,0.023888,0.028657,0.037784,0.056286,0.093129", \
				        "0.020237,0.023807,0.028366,0.037731,0.056254,0.093151", \
				        "0.026338,0.029456,0.033176,0.040209,0.056445,0.093187", \
				        "0.037890,0.041588,0.046237,0.054043,0.067634,0.096193", \
				        "0.056752,0.061658,0.067691,0.077942,0.095425,0.124180", \
				        "0.088717,0.095461,0.103555,0.117310,0.140279,0.177738", \
				        "0.144508,0.154133,0.165358,0.184352,0.215370,0.264453");
			}
			rise_transition(Timing_X2) {
				values ("0.043497,0.053957,0.067311,0.093476,0.143098,0.238708", \
				        "0.043482,0.053931,0.067348,0.093482,0.143091,0.238699", \
				        "0.043516,0.053951,0.067377,0.093462,0.143095,0.238686", \
				        "0.045967,0.055272,0.067741,0.093464,0.143093,0.238679", \
				        "0.058862,0.066290,0.076541,0.097682,0.143601,0.238714", \
				        "0.080693,0.087612,0.097337,0.117324,0.156588,0.241424", \
				        "0.116033,0.122113,0.131283,0.151131,0.191775,0.270923", \
				        "0.174877,0.180394,0.189327,0.208685,0.250052,0.334160");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.021569,0.025911,0.031626,0.042712,0.064423,0.107278", \
				        "0.024571,0.028807,0.034518,0.045643,0.067335,0.110152", \
				        "0.031098,0.035337,0.040761,0.051749,0.073412,0.116104", \
				        "0.038954,0.044733,0.051603,0.064288,0.085862,0.128404", \
				        "0.045772,0.053655,0.063060,0.079914,0.108330,0.153992", \
				        "0.048343,0.058707,0.071301,0.093952,0.132115,0.193808", \
				        "0.039112,0.053115,0.069758,0.099719,0.150471,0.232980", \
				        "0.004178,0.022238,0.044275,0.083471,0.150359,0.259664");
			}
			cell_rise(Timing_X2) {
				values ("0.050973,0.060914,0.074078,0.100080,0.152009,0.255611", \
				        "0.054338,0.064156,0.077298,0.103495,0.155524,0.259216", \
				        "0.060204,0.070216,0.083429,0.109544,0.161692,0.265532", \
				        "0.070987,0.081376,0.094748,0.120899,0.173041,0.276981", \
				        "0.087198,0.099690,0.115193,0.143615,0.195885,0.299719", \
				        "0.114461,0.129390,0.147919,0.181582,0.241456,0.347484", \
				        "0.161335,0.180439,0.203088,0.243801,0.314872,0.438172", \
				        "0.240308,0.264878,0.294172,0.345785,0.433731,0.581723");
			}
			fall_transition(Timing_X2) {
				values ("0.016025,0.019761,0.024307,0.033406,0.051743,0.088516", \
				        "0.015583,0.019465,0.024170,0.033406,0.051751,0.088557", \
				        "0.017401,0.020343,0.024653,0.033329,0.051810,0.088567", \
				        "0.024228,0.027301,0.030896,0.037401,0.052709,0.088601", \
				        "0.035531,0.039318,0.044064,0.051948,0.065590,0.092818", \
				        "0.054116,0.059159,0.065187,0.075653,0.093218,0.122133", \
				        "0.085642,0.092570,0.100829,0.114710,0.137825,0.175357", \
				        "0.140533,0.150513,0.162084,0.181530,0.212763,0.261839");
			}
			rise_transition(Timing_X2) {
				values ("0.029904,0.038918,0.051039,0.074623,0.122057,0.216901", \
				        "0.029896,0.038865,0.050975,0.074682,0.122090,0.216868", \
				        "0.029924,0.038936,0.050979,0.074722,0.122086,0.216875", \
				        "0.032451,0.040288,0.051571,0.074721,0.122087,0.216882", \
				        "0.041219,0.049043,0.059360,0.078856,0.122610,0.216889", \
				        "0.055989,0.064187,0.075161,0.095907,0.135605,0.219616", \
				        "0.081269,0.090062,0.101758,0.123970,0.167069,0.248805", \
				        "0.125830,0.135701,0.148663,0.173230,0.219759,0.308138");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.017784,0.021160,0.025595,0.034234,0.051106,0.084303", \
				        "0.021116,0.024342,0.028758,0.037392,0.054230,0.087376", \
				        "0.027118,0.030888,0.035359,0.043993,0.060714,0.093763", \
				        "0.033387,0.038553,0.044628,0.055745,0.074013,0.106838", \
				        "0.037962,0.045066,0.053483,0.068485,0.093601,0.133329", \
				        "0.036987,0.046432,0.057881,0.078247,0.112368,0.166852", \
				        "0.021682,0.034608,0.049920,0.077232,0.123205,0.197019", \
				        "-0.024116,-0.007449,0.012944,0.049013,0.110311,0.209533");
			}
			cell_rise(Timing_X2) {
				values ("0.050849,0.060720,0.073844,0.099967,0.151866,0.255462", \
				        "0.054213,0.064030,0.077161,0.103274,0.155320,0.259015", \
				        "0.060115,0.070085,0.083244,0.109329,0.161451,0.265287", \
				        "0.070885,0.081245,0.094573,0.120718,0.172822,0.276731", \
				        "0.087160,0.099621,0.115103,0.143492,0.195714,0.299498", \
				        "0.115170,0.130039,0.148438,0.181962,0.241670,0.347540", \
				        "0.164320,0.183065,0.205496,0.245835,0.316515,0.439363", \
				        "0.248710,0.272531,0.301163,0.351869,0.438772,0.585796");
			}
			fall_transition(Timing_X2) {
				values ("0.011973,0.014827,0.018376,0.025495,0.039754,0.068367", \
				        "0.011955,0.014769,0.018362,0.025481,0.039815,0.068345", \
				        "0.015137,0.017082,0.020105,0.026068,0.039796,0.068394", \
				        "0.021722,0.024239,0.027475,0.032605,0.042642,0.068445", \
				        "0.032521,0.035786,0.039844,0.046589,0.057945,0.077248", \
				        "0.050560,0.054980,0.060212,0.069291,0.084210,0.108573", \
				        "0.081667,0.087779,0.095078,0.107309,0.127267,0.159309", \
				        "0.136450,0.145453,0.155805,0.173132,0.200524,0.243017");
			}
			rise_transition(Timing_X2) {
				values ("0.029893,0.038878,0.050908,0.074693,0.122058,0.216896", \
				        "0.029891,0.038878,0.050972,0.074668,0.122092,0.216870", \
				        "0.029913,0.038908,0.051030,0.074715,0.122084,0.216900", \
				        "0.032460,0.040324,0.051457,0.074716,0.122088,0.216884", \
				        "0.041215,0.049032,0.059343,0.078880,0.122622,0.216886", \
				        "0.055585,0.063856,0.074935,0.095757,0.135548,0.219610", \
				        "0.080053,0.088879,0.100575,0.123066,0.166459,0.248487", \
				        "0.123957,0.133583,0.146384,0.170822,0.217587,0.306636");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031455,0.035778,0.041471,0.052601,0.074358,0.117281", \
				        "0.034603,0.038909,0.044559,0.055670,0.077483,0.120436", \
				        "0.039995,0.044369,0.049944,0.060966,0.082762,0.125755", \
				        "0.048053,0.053015,0.059309,0.071063,0.092900,0.136038", \
				        "0.056962,0.063443,0.071220,0.085507,0.110697,0.155610", \
				        "0.062085,0.071041,0.081870,0.101149,0.133908,0.187834", \
				        "0.054022,0.066644,0.081908,0.109113,0.154616,0.226879", \
				        "0.013672,0.031772,0.053141,0.091302,0.155065,0.255991");
			}
			cell_rise(Timing_X2) {
				values ("0.066086,0.076271,0.089841,0.116522,0.169202,0.273854", \
				        "0.068994,0.079155,0.092668,0.119340,0.172073,0.276726", \
				        "0.075495,0.085659,0.099116,0.125601,0.178203,0.282815", \
				        "0.089892,0.099949,0.113265,0.139392,0.191589,0.295766", \
				        "0.119196,0.129848,0.143587,0.169093,0.220313,0.323271", \
				        "0.161900,0.175821,0.193147,0.225120,0.281220,0.381980", \
				        "0.227557,0.245276,0.266815,0.307029,0.378525,0.500382", \
				        "0.337155,0.358242,0.385709,0.435144,0.523700,0.677607");
			}
			fall_transition(Timing_X2) {
				values ("0.015914,0.019505,0.024185,0.033389,0.051815,0.088587", \
				        "0.015888,0.019495,0.024202,0.033394,0.051815,0.088573", \
				        "0.016153,0.019598,0.024130,0.033318,0.051807,0.088558", \
				        "0.019385,0.022569,0.026973,0.034867,0.051990,0.088555", \
				        "0.027185,0.030327,0.034423,0.042169,0.057740,0.090363", \
				        "0.042193,0.045834,0.050530,0.058859,0.074060,0.104228", \
				        "0.069167,0.073660,0.079458,0.089723,0.107331,0.138435", \
				        "0.115222,0.121624,0.129366,0.143078,0.166217,0.203985");
			}
			rise_transition(Timing_X2) {
				values ("0.063946,0.073468,0.086002,0.110947,0.159706,0.255401", \
				        "0.063955,0.073462,0.086032,0.110968,0.159707,0.255391", \
				        "0.063933,0.073466,0.086003,0.110962,0.159705,0.255420", \
				        "0.064173,0.073388,0.085970,0.110952,0.159709,0.255387", \
				        "0.073805,0.081207,0.091403,0.113063,0.159682,0.255397", \
				        "0.098630,0.106894,0.117053,0.135923,0.172673,0.256712", \
				        "0.135097,0.144969,0.157716,0.181287,0.223017,0.294733", \
				        "0.192038,0.203850,0.218626,0.247171,0.299483,0.390588");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.026096,0.030157,0.035593,0.046248,0.067527,0.109952", \
				        "0.029180,0.033268,0.038646,0.049350,0.070616,0.113122", \
				        "0.034199,0.038561,0.043857,0.054585,0.075887,0.118426", \
				        "0.040456,0.045764,0.052266,0.064128,0.086023,0.128701", \
				        "0.045813,0.053104,0.061714,0.076864,0.102912,0.148231", \
				        "0.045351,0.055686,0.067949,0.088998,0.123657,0.179126", \
				        "0.029171,0.043975,0.061377,0.091363,0.139944,0.215248", \
				        "-0.021314,-0.000523,0.023824,0.065741,0.134011,0.239528");
			}
			cell_rise(Timing_X2) {
				values ("0.065093,0.075229,0.088698,0.115234,0.167807,0.272115", \
				        "0.068002,0.078107,0.091523,0.118072,0.170681,0.275023", \
				        "0.074509,0.084616,0.097939,0.124345,0.176816,0.281051", \
				        "0.088920,0.098933,0.112088,0.138170,0.190179,0.294033", \
				        "0.118006,0.128696,0.142389,0.167868,0.218908,0.321553", \
				        "0.160194,0.174127,0.191428,0.223485,0.279709,0.380269", \
				        "0.224934,0.242743,0.264274,0.304590,0.376226,0.498234", \
				        "0.332955,0.354135,0.381736,0.431306,0.520085,0.674135");
			}
			fall_transition(Timing_X2) {
				values ("0.011850,0.015425,0.020005,0.029177,0.047617,0.084264", \
				        "0.011854,0.015346,0.019987,0.029217,0.047578,0.084333", \
				        "0.012916,0.016057,0.020390,0.029195,0.047606,0.084243", \
				        "0.016920,0.019949,0.023915,0.031543,0.048204,0.084259", \
				        "0.025333,0.028381,0.032441,0.039900,0.054891,0.086645", \
				        "0.041097,0.044585,0.049139,0.057304,0.072130,0.101559", \
				        "0.069404,0.073426,0.078864,0.088736,0.106097,0.136615", \
				        "0.116566,0.122396,0.129488,0.142790,0.165383,0.202669");
			}
			rise_transition(Timing_X2) {
				values ("0.046537,0.055712,0.068031,0.092100,0.140006,0.235561", \
				        "0.046533,0.055713,0.067986,0.092147,0.140007,0.235553", \
				        "0.046519,0.055723,0.067968,0.092142,0.139989,0.235569", \
				        "0.046777,0.055668,0.067993,0.092146,0.140005,0.235546", \
				        "0.056263,0.063592,0.073385,0.094209,0.139981,0.235544", \
				        "0.074570,0.084142,0.095771,0.116237,0.153072,0.236898", \
				        "0.101667,0.113575,0.128481,0.154921,0.200178,0.275022", \
				        "0.145476,0.160523,0.178603,0.211631,0.269254,0.365817");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022272,0.025412,0.029539,0.037745,0.054107,0.086627", \
				        "0.025626,0.028791,0.032856,0.041077,0.057433,0.090018", \
				        "0.031384,0.034983,0.039280,0.047549,0.063949,0.096553", \
				        "0.037954,0.042851,0.048662,0.059070,0.076977,0.109719", \
				        "0.043105,0.050080,0.058313,0.072670,0.096515,0.134967", \
				        "0.041933,0.051965,0.063838,0.084293,0.117654,0.169820", \
				        "0.024323,0.038771,0.055757,0.085068,0.132426,0.205525", \
				        "-0.028956,-0.008743,0.015119,0.056177,0.123068,0.226397");
			}
			cell_rise(Timing_X2) {
				values ("0.068445,0.078480,0.091810,0.118224,0.170647,0.274772", \
				        "0.071396,0.081345,0.094615,0.121050,0.173485,0.277669", \
				        "0.077911,0.087921,0.101126,0.127392,0.179702,0.283756", \
				        "0.092412,0.102244,0.115348,0.141282,0.193135,0.296773", \
				        "0.121980,0.132387,0.145788,0.171126,0.222053,0.324468", \
				        "0.165095,0.178938,0.195878,0.227547,0.283226,0.383566", \
				        "0.231404,0.248802,0.270147,0.309948,0.381062,0.502473", \
				        "0.341977,0.362649,0.389669,0.438629,0.526711,0.680320");
			}
			fall_transition(Timing_X2) {
				values ("0.009852,0.012562,0.016057,0.022957,0.036948,0.064788", \
				        "0.009938,0.012647,0.016048,0.022941,0.036919,0.064787", \
				        "0.011808,0.013896,0.016862,0.023146,0.036940,0.064787", \
				        "0.016952,0.019219,0.022311,0.027674,0.038701,0.064793", \
				        "0.026181,0.028794,0.032193,0.038341,0.049217,0.070281", \
				        "0.042720,0.045731,0.049804,0.056968,0.070021,0.092695", \
				        "0.072042,0.075580,0.080453,0.089441,0.105354,0.132730", \
				        "0.121017,0.126015,0.132386,0.144476,0.165509,0.200502");
			}
			rise_transition(Timing_X2) {
				values ("0.048008,0.057259,0.069625,0.093791,0.141808,0.237513", \
				        "0.048003,0.057249,0.069601,0.093791,0.141803,0.237522", \
				        "0.048008,0.057240,0.069633,0.093841,0.141856,0.237493", \
				        "0.048149,0.057173,0.069617,0.093791,0.141842,0.237518", \
				        "0.057286,0.064593,0.074616,0.095761,0.141794,0.237526", \
				        "0.076009,0.085417,0.096905,0.117330,0.154290,0.238711", \
				        "0.103464,0.115186,0.130003,0.156209,0.201185,0.275859", \
				        "0.147867,0.162662,0.180494,0.213169,0.270339,0.366378");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.037538,0.041911,0.047670,0.058999,0.081031,0.124284", \
				        "0.040640,0.045009,0.050712,0.062007,0.084101,0.127331", \
				        "0.045971,0.050423,0.056102,0.067289,0.089346,0.132639", \
				        "0.054985,0.059769,0.065915,0.077535,0.099550,0.142888", \
				        "0.066190,0.072188,0.079539,0.093213,0.117848,0.162462", \
				        "0.075248,0.083390,0.093414,0.111549,0.142936,0.195739", \
				        "0.074247,0.085696,0.099557,0.124734,0.167642,0.237466", \
				        "0.049110,0.064707,0.083637,0.118143,0.177221,0.273063");
			}
			cell_rise(Timing_X2) {
				values ("0.076698,0.086874,0.100373,0.127099,0.179747,0.284366", \
				        "0.080272,0.090413,0.103985,0.130630,0.183387,0.287998", \
				        "0.086674,0.096868,0.110392,0.137016,0.189736,0.294377", \
				        "0.098512,0.108772,0.122371,0.148979,0.201705,0.306295", \
				        "0.121268,0.132156,0.146188,0.172726,0.225191,0.329650", \
				        "0.157935,0.170450,0.186894,0.217608,0.273965,0.378153", \
				        "0.218141,0.234087,0.253440,0.289920,0.356101,0.474138", \
				        "0.319973,0.339867,0.363943,0.408940,0.488761,0.628626");
			}
			fall_transition(Timing_X2) {
				values ("0.020173,0.023813,0.028607,0.037826,0.056247,0.093176", \
				        "0.020172,0.023779,0.028602,0.037834,0.056259,0.093140", \
				        "0.020149,0.023767,0.028517,0.037781,0.056254,0.093144", \
				        "0.022567,0.025891,0.030152,0.038656,0.056351,0.093116", \
				        "0.029872,0.033128,0.037454,0.045412,0.061163,0.094544", \
				        "0.044451,0.048129,0.052915,0.061303,0.076924,0.107600", \
				        "0.070419,0.074943,0.080815,0.091193,0.109196,0.140890", \
				        "0.114255,0.120836,0.128678,0.142605,0.166076,0.204570");
			}
			rise_transition(Timing_X2) {
				values ("0.063963,0.073464,0.086017,0.110940,0.159697,0.255404", \
				        "0.063950,0.073466,0.086029,0.110946,0.159706,0.255421", \
				        "0.063961,0.073466,0.086002,0.110965,0.159704,0.255390", \
				        "0.064051,0.073464,0.085987,0.110944,0.159701,0.255395", \
				        "0.070369,0.078383,0.089405,0.112354,0.159712,0.255412", \
				        "0.088416,0.096497,0.107052,0.127687,0.168361,0.256640", \
				        "0.116003,0.124780,0.136338,0.158733,0.201349,0.281638", \
				        "0.160483,0.170279,0.183135,0.207817,0.254774,0.343355");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.031333,0.035588,0.041246,0.052305,0.074015,0.116865", \
				        "0.034457,0.038721,0.044317,0.055341,0.077060,0.119919", \
				        "0.039784,0.044146,0.049675,0.060646,0.082329,0.125220", \
				        "0.047666,0.052639,0.058922,0.070633,0.092446,0.135498", \
				        "0.055991,0.062568,0.070509,0.084887,0.110124,0.155041", \
				        "0.060248,0.069414,0.080462,0.100024,0.133041,0.187135", \
				        "0.052745,0.065551,0.080950,0.108216,0.153757,0.226148", \
				        "0.019383,0.036925,0.057849,0.095170,0.157653,0.257315");
			}
			cell_rise(Timing_X2) {
				values ("0.075713,0.085841,0.099227,0.125770,0.178298,0.282580", \
				        "0.079281,0.089365,0.102792,0.129305,0.181889,0.286182", \
				        "0.085687,0.095834,0.109208,0.135727,0.188341,0.292667", \
				        "0.097524,0.107712,0.121171,0.147741,0.200282,0.304577", \
				        "0.120143,0.131000,0.145000,0.171494,0.223815,0.327909", \
				        "0.156484,0.169000,0.185410,0.216096,0.272482,0.376419", \
				        "0.216301,0.232108,0.251445,0.287922,0.354177,0.472137", \
				        "0.316851,0.336857,0.360964,0.406092,0.486037,0.625897");
			}
			fall_transition(Timing_X2) {
				values ("0.016380,0.019962,0.024626,0.033866,0.052153,0.088922", \
				        "0.016349,0.019940,0.024638,0.033852,0.052161,0.088929", \
				        "0.016715,0.020151,0.024643,0.033777,0.052132,0.088890", \
				        "0.020009,0.023150,0.027557,0.035371,0.052480,0.088902", \
				        "0.028001,0.031134,0.035286,0.042907,0.058328,0.090814", \
				        "0.043035,0.046674,0.051262,0.059633,0.074834,0.104804", \
				        "0.069660,0.074044,0.079717,0.089957,0.107639,0.138924", \
				        "0.113464,0.120021,0.127714,0.141551,0.164807,0.202950");
			}
			rise_transition(Timing_X2) {
				values ("0.046531,0.055730,0.067952,0.092144,0.139982,0.235568", \
				        "0.046535,0.055733,0.068004,0.092139,0.139996,0.235565", \
				        "0.046530,0.055733,0.067953,0.092072,0.139998,0.235545", \
				        "0.046642,0.055728,0.068030,0.092135,0.140001,0.235551", \
				        "0.052855,0.060741,0.071402,0.093548,0.139986,0.235568", \
				        "0.066497,0.075320,0.086677,0.108126,0.148704,0.236818", \
				        "0.088111,0.098121,0.110987,0.134955,0.179502,0.261922", \
				        "0.123574,0.135481,0.150524,0.178097,0.228432,0.320353");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.025918,0.029230,0.033618,0.042147,0.058860,0.091775", \
				        "0.029328,0.032622,0.036905,0.045452,0.062143,0.095069", \
				        "0.035789,0.039216,0.043486,0.051958,0.068662,0.101593", \
				        "0.044498,0.048976,0.054382,0.064296,0.081740,0.114765", \
				        "0.052731,0.059009,0.066535,0.080025,0.102806,0.140294", \
				        "0.056294,0.065206,0.075955,0.094911,0.126565,0.177039", \
				        "0.047353,0.059821,0.074897,0.101479,0.145850,0.216021", \
				        "0.011169,0.028155,0.048650,0.085184,0.146404,0.243875");
			}
			cell_rise(Timing_X2) {
				values ("0.079094,0.089071,0.102413,0.128782,0.181190,0.285270", \
				        "0.082651,0.092627,0.105908,0.132318,0.184785,0.288920", \
				        "0.089027,0.099053,0.112344,0.138665,0.191163,0.295297", \
				        "0.100858,0.110918,0.124256,0.150675,0.203067,0.307176", \
				        "0.123881,0.134444,0.148251,0.174508,0.226654,0.330542", \
				        "0.161026,0.173344,0.189371,0.219733,0.275705,0.379267", \
				        "0.222080,0.237904,0.256769,0.292810,0.358487,0.475854", \
				        "0.325381,0.344707,0.368622,0.412920,0.492131,0.631383");
			}
			fall_transition(Timing_X2) {
				values ("0.013362,0.016165,0.019625,0.026525,0.040458,0.068229", \
				        "0.013323,0.016123,0.019601,0.026535,0.040410,0.068226", \
				        "0.014265,0.016650,0.019896,0.026490,0.040365,0.068219", \
				        "0.019326,0.021583,0.024604,0.029941,0.041510,0.068243", \
				        "0.028503,0.031094,0.034582,0.040486,0.051452,0.072806", \
				        "0.044358,0.047539,0.051666,0.059003,0.072033,0.094733", \
				        "0.071944,0.075858,0.081020,0.090323,0.106665,0.134489", \
				        "0.117297,0.123202,0.130158,0.142918,0.164706,0.200528");
			}
			rise_transition(Timing_X2) {
				values ("0.048006,0.057241,0.069635,0.093864,0.141849,0.237502", \
				        "0.048005,0.057237,0.069642,0.093778,0.141832,0.237491", \
				        "0.048005,0.057252,0.069604,0.093872,0.141853,0.237519", \
				        "0.048062,0.057274,0.069568,0.093780,0.141812,0.237525", \
				        "0.054038,0.061977,0.072867,0.095170,0.141864,0.237498", \
				        "0.067798,0.076668,0.088070,0.109498,0.150289,0.238645", \
				        "0.089522,0.099447,0.112284,0.136302,0.180780,0.263286", \
				        "0.125345,0.137158,0.152013,0.179446,0.229622,0.321404");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2";

			rise_power(Power_X2) {
				values ("0.003899,0.004645,0.005622,0.007565,0.011451,0.019214", \
				        "0.003910,0.004649,0.005606,0.007561,0.011453,0.019208", \
				        "0.003980,0.004691,0.005670,0.007583,0.011463,0.019211", \
				        "0.004150,0.004860,0.005802,0.007700,0.011539,0.019251", \
				        "0.004661,0.005326,0.006244,0.008078,0.011833,0.019459", \
				        "0.005825,0.006418,0.007265,0.009025,0.012653,0.020102", \
				        "0.008381,0.008886,0.009621,0.011212,0.014636,0.021820", \
				        "0.013996,0.014371,0.014932,0.016219,0.019208,0.025889");
			}
			fall_power(Power_X2) {
				values ("0.002730,0.002016,0.001049,-0.000871,-0.004727,-0.012449", \
				        "0.002755,0.002025,0.001051,-0.000867,-0.004720,-0.012440", \
				        "0.002779,0.002049,0.001091,-0.000844,-0.004702,-0.012422", \
				        "0.002859,0.002130,0.001171,-0.000775,-0.004652,-0.012392", \
				        "0.003207,0.002423,0.001421,-0.000566,-0.004496,-0.012291", \
				        "0.004220,0.003355,0.002259,0.000127,-0.003960,-0.011907", \
				        "0.006776,0.005832,0.004587,0.002204,-0.002269,-0.010653", \
				        "0.012555,0.011457,0.010063,0.007385,0.002358,-0.006917");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & !B2";

			rise_power(Power_X2) {
				values ("0.003418,0.004172,0.005140,0.007087,0.010979,0.018727", \
				        "0.003422,0.004155,0.005137,0.007081,0.010976,0.018718", \
				        "0.003490,0.004205,0.005182,0.007103,0.010976,0.018722", \
				        "0.003678,0.004381,0.005331,0.007220,0.011048,0.018770", \
				        "0.004178,0.004849,0.005757,0.007593,0.011358,0.018971", \
				        "0.005354,0.005947,0.006792,0.008541,0.012170,0.019624", \
				        "0.008034,0.008485,0.009196,0.010750,0.014148,0.021329", \
				        "0.013856,0.014145,0.014646,0.015837,0.018755,0.025399");
			}
			fall_power(Power_X2) {
				values ("0.001058,0.000339,-0.000625,-0.002550,-0.006417,-0.014146", \
				        "0.001046,0.000348,-0.000619,-0.002543,-0.006407,-0.014129", \
				        "0.001089,0.000371,-0.000589,-0.002525,-0.006382,-0.014114", \
				        "0.001211,0.000468,-0.000499,-0.002449,-0.006321,-0.014079", \
				        "0.001621,0.000838,-0.000200,-0.002213,-0.006169,-0.013974", \
				        "0.002843,0.001925,0.000767,-0.001418,-0.005587,-0.013576", \
				        "0.005605,0.004581,0.003282,0.000809,-0.003776,-0.012255", \
				        "0.011535,0.010406,0.008947,0.006182,0.001030,-0.008395");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & B2";

			rise_power(Power_X2) {
				values ("0.003324,0.004074,0.005035,0.006987,0.010875,0.018627", \
				        "0.003336,0.004057,0.005026,0.006977,0.010873,0.018620", \
				        "0.003383,0.004113,0.005069,0.007003,0.010876,0.018610", \
				        "0.003595,0.004318,0.005243,0.007134,0.010964,0.018666", \
				        "0.004124,0.004794,0.005695,0.007542,0.011298,0.018903", \
				        "0.005345,0.005930,0.006777,0.008527,0.012150,0.019594", \
				        "0.008067,0.008548,0.009241,0.010813,0.014221,0.021404", \
				        "0.014140,0.014379,0.014854,0.016041,0.018974,0.025648");
			}
			fall_power(Power_X2) {
				values ("0.001417,0.000696,-0.000263,-0.002189,-0.006050,-0.013771", \
				        "0.001425,0.000709,-0.000251,-0.002170,-0.006034,-0.013756", \
				        "0.001452,0.000733,-0.000215,-0.002144,-0.006011,-0.013730", \
				        "0.001575,0.000855,-0.000112,-0.002061,-0.005943,-0.013689", \
				        "0.002072,0.001266,0.000221,-0.001800,-0.005758,-0.013571", \
				        "0.003330,0.002444,0.001277,-0.000936,-0.005114,-0.013125", \
				        "0.006261,0.005239,0.003941,0.001478,-0.003129,-0.011676", \
				        "0.012420,0.011300,0.009856,0.007139,0.001991,-0.007450");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2";

			rise_power(Power_X2) {
				values ("0.004404,0.005144,0.006131,0.008083,0.011966,0.019712", \
				        "0.004360,0.005091,0.006083,0.008043,0.011938,0.019690", \
				        "0.004306,0.005040,0.006034,0.008001,0.011908,0.019677", \
				        "0.004251,0.004989,0.005986,0.007950,0.011872,0.019651", \
				        "0.004390,0.005093,0.006066,0.007986,0.011869,0.019630", \
				        "0.005109,0.005748,0.006634,0.008472,0.012229,0.019856", \
				        "0.007190,0.007692,0.008458,0.010082,0.013574,0.020920", \
				        "0.011949,0.012323,0.012890,0.014186,0.017192,0.023965");
			}
			fall_power(Power_X2) {
				values ("0.004136,0.003410,0.002441,0.000525,-0.003328,-0.011048", \
				        "0.004122,0.003402,0.002435,0.000516,-0.003336,-0.011050", \
				        "0.004131,0.003409,0.002448,0.000527,-0.003327,-0.011049", \
				        "0.004224,0.003499,0.002530,0.000588,-0.003291,-0.011022", \
				        "0.004494,0.003755,0.002772,0.000795,-0.003131,-0.010920", \
				        "0.005359,0.004597,0.003540,0.001469,-0.002581,-0.010518", \
				        "0.007647,0.006776,0.005633,0.003397,-0.000916,-0.009207", \
				        "0.012705,0.011742,0.010501,0.008074,0.003395,-0.005498");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & !B2";

			rise_power(Power_X2) {
				values ("0.003923,0.004658,0.005646,0.007594,0.011487,0.019228", \
				        "0.003896,0.004606,0.005595,0.007557,0.011446,0.019213", \
				        "0.003793,0.004561,0.005547,0.007517,0.011426,0.019192", \
				        "0.003764,0.004507,0.005504,0.007479,0.011378,0.019169", \
				        "0.003897,0.004615,0.005581,0.007512,0.011398,0.019152", \
				        "0.004647,0.005276,0.006162,0.007988,0.011739,0.019379", \
				        "0.006792,0.007290,0.008017,0.009620,0.013097,0.020441", \
				        "0.011757,0.012105,0.012593,0.013826,0.016755,0.023492");
			}
			fall_power(Power_X2) {
				values ("0.002472,0.001737,0.000761,-0.001164,-0.005019,-0.012747", \
				        "0.002423,0.001722,0.000756,-0.001168,-0.005024,-0.012738", \
				        "0.002472,0.001728,0.000782,-0.001148,-0.005023,-0.012735", \
				        "0.002552,0.001832,0.000872,-0.001078,-0.004959,-0.012715", \
				        "0.002916,0.002146,0.001147,-0.000869,-0.004797,-0.012606", \
				        "0.003948,0.003088,0.002006,-0.000102,-0.004208,-0.012180", \
				        "0.006316,0.005408,0.004230,0.001938,-0.002453,-0.010816", \
				        "0.011520,0.010537,0.009252,0.006757,0.001994,-0.006998");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2";

			rise_power(Power_X2) {
				values ("0.003832,0.004570,0.005547,0.007495,0.011378,0.019131", \
				        "0.003776,0.004502,0.005481,0.007446,0.011344,0.019107", \
				        "0.003710,0.004461,0.005450,0.007409,0.011327,0.019085", \
				        "0.003669,0.004407,0.005401,0.007367,0.011277,0.019058", \
				        "0.003805,0.004530,0.005478,0.007407,0.011278,0.019047", \
				        "0.004622,0.005223,0.006110,0.007919,0.011669,0.019309", \
				        "0.006809,0.007303,0.008029,0.009628,0.013096,0.020429", \
				        "0.011945,0.012249,0.012762,0.013956,0.016874,0.023612");
			}
			fall_power(Power_X2) {
				values ("0.002820,0.002087,0.001130,-0.000792,-0.004650,-0.012375", \
				        "0.002801,0.002083,0.001122,-0.000799,-0.004653,-0.012371", \
				        "0.002823,0.002096,0.001163,-0.000774,-0.004642,-0.012357", \
				        "0.002932,0.002202,0.001248,-0.000691,-0.004576,-0.012322", \
				        "0.003318,0.002551,0.001545,-0.000449,-0.004394,-0.012200", \
				        "0.004397,0.003563,0.002475,0.000354,-0.003753,-0.011734", \
				        "0.006913,0.006019,0.004831,0.002540,-0.001862,-0.010254", \
				        "0.012386,0.011380,0.010096,0.007600,0.002834,-0.006177");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2";

			rise_power(Power_X2) {
				values ("0.006998,0.007726,0.008687,0.010628,0.014508,0.022266", \
				        "0.006980,0.007708,0.008676,0.010622,0.014498,0.022266", \
				        "0.006999,0.007731,0.008694,0.010630,0.014505,0.022257", \
				        "0.007147,0.007860,0.008814,0.010732,0.014578,0.022306", \
				        "0.007588,0.008272,0.009206,0.011072,0.014859,0.022500", \
				        "0.008621,0.009297,0.010180,0.011987,0.015674,0.023151", \
				        "0.010970,0.011605,0.012437,0.014142,0.017644,0.024883", \
				        "0.016083,0.016604,0.017383,0.018941,0.022192,0.029045");
			}
			fall_power(Power_X2) {
				values ("0.002533,0.001799,0.000846,-0.001080,-0.004939,-0.012673", \
				        "0.002508,0.001788,0.000830,-0.001089,-0.004946,-0.012664", \
				        "0.002492,0.001774,0.000800,-0.001113,-0.004965,-0.012686", \
				        "0.002455,0.001753,0.000807,-0.001123,-0.004988,-0.012721", \
				        "0.002595,0.001863,0.000884,-0.001050,-0.004924,-0.012662", \
				        "0.003246,0.002444,0.001391,-0.000661,-0.004650,-0.012476", \
				        "0.005181,0.004290,0.003114,0.000847,-0.003472,-0.011667", \
				        "0.009944,0.008936,0.007598,0.005044,0.000206,-0.008806");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & !B2";

			rise_power(Power_X2) {
				values ("0.006511,0.007245,0.008206,0.010147,0.014029,0.021782", \
				        "0.006500,0.007222,0.008196,0.010133,0.014016,0.021776", \
				        "0.006523,0.007257,0.008221,0.010148,0.014025,0.021767", \
				        "0.006671,0.007391,0.008339,0.010257,0.014096,0.021813", \
				        "0.007106,0.007793,0.008730,0.010587,0.014376,0.022021", \
				        "0.008150,0.008816,0.009704,0.011509,0.015180,0.022666", \
				        "0.010497,0.011126,0.011953,0.013661,0.017164,0.024404", \
				        "0.015625,0.016139,0.016924,0.018459,0.021703,0.028549");
			}
			fall_power(Power_X2) {
				values ("0.001053,0.000322,-0.000645,-0.002575,-0.006435,-0.014172", \
				        "0.001017,0.000308,-0.000668,-0.002581,-0.006436,-0.014163", \
				        "0.000970,0.000266,-0.000691,-0.002604,-0.006457,-0.014179", \
				        "0.000958,0.000252,-0.000704,-0.002627,-0.006481,-0.014224", \
				        "0.001154,0.000396,-0.000593,-0.002541,-0.006421,-0.014155", \
				        "0.001952,0.001090,0.000011,-0.002085,-0.006110,-0.013957", \
				        "0.004040,0.003114,0.001897,-0.000445,-0.004846,-0.013115", \
				        "0.009041,0.007976,0.006579,0.003943,-0.001004,-0.010133");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & A2 & !B2";

			rise_power(Power_X2) {
				values ("0.006787,0.007510,0.008468,0.010407,0.014291,0.022053", \
				        "0.006762,0.007493,0.008456,0.010393,0.014283,0.022039", \
				        "0.006794,0.007507,0.008486,0.010421,0.014295,0.022041", \
				        "0.006939,0.007662,0.008607,0.010528,0.014369,0.022100", \
				        "0.007379,0.008071,0.008997,0.010882,0.014668,0.022318", \
				        "0.008444,0.009106,0.009996,0.011816,0.015500,0.022989", \
				        "0.010785,0.011420,0.012257,0.013977,0.017511,0.024767", \
				        "0.015959,0.016495,0.017257,0.018816,0.022086,0.028980");
			}
			fall_power(Power_X2) {
				values ("0.001032,0.000329,-0.000645,-0.002573,-0.006434,-0.014165", \
				        "0.001000,0.000303,-0.000662,-0.002583,-0.006441,-0.014171", \
				        "0.000973,0.000267,-0.000683,-0.002599,-0.006453,-0.014179", \
				        "0.000986,0.000262,-0.000694,-0.002612,-0.006465,-0.014207", \
				        "0.001178,0.000425,-0.000567,-0.002520,-0.006394,-0.014137", \
				        "0.001982,0.001141,0.000063,-0.002030,-0.006073,-0.013932", \
				        "0.004168,0.003227,0.001996,-0.000331,-0.004727,-0.013037", \
				        "0.009227,0.008143,0.006781,0.004143,-0.000800,-0.009959");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !B1";

			rise_power(Power_X2) {
				values ("0.007480,0.008216,0.009194,0.011124,0.015004,0.022747", \
				        "0.007459,0.008186,0.009175,0.011103,0.014980,0.022732", \
				        "0.007446,0.008177,0.009139,0.011087,0.014972,0.022739", \
				        "0.007438,0.008174,0.009145,0.011100,0.014978,0.022741", \
				        "0.007579,0.008290,0.009251,0.011175,0.015038,0.022769", \
				        "0.008198,0.008856,0.009789,0.011647,0.015417,0.023055", \
				        "0.009947,0.010587,0.011447,0.013196,0.016776,0.024154", \
				        "0.014062,0.014624,0.015394,0.016987,0.020301,0.027247");
			}
			fall_power(Power_X2) {
				values ("0.004146,0.003425,0.002456,0.000529,-0.003335,-0.011076", \
				        "0.004104,0.003392,0.002428,0.000499,-0.003362,-0.011088", \
				        "0.004099,0.003377,0.002407,0.000479,-0.003381,-0.011118", \
				        "0.004045,0.003358,0.002413,0.000475,-0.003400,-0.011147", \
				        "0.004139,0.003420,0.002454,0.000529,-0.003343,-0.011090", \
				        "0.004562,0.003793,0.002800,0.000820,-0.003111,-0.010909", \
				        "0.006047,0.005237,0.004148,0.002025,-0.002106,-0.010142", \
				        "0.009952,0.009047,0.007860,0.005529,0.001036,-0.007552");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & !B1";

			rise_power(Power_X2) {
				values ("0.007015,0.007735,0.008708,0.010649,0.014526,0.022274", \
				        "0.006988,0.007708,0.008683,0.010627,0.014499,0.022257", \
				        "0.006935,0.007692,0.008664,0.010610,0.014495,0.022248", \
				        "0.006951,0.007696,0.008671,0.010613,0.014500,0.022255", \
				        "0.007087,0.007813,0.008772,0.010696,0.014557,0.022283", \
				        "0.007703,0.008391,0.009309,0.011169,0.014940,0.022566", \
				        "0.009483,0.010116,0.010972,0.012712,0.016300,0.023679", \
				        "0.013571,0.014161,0.014924,0.016503,0.019821,0.026769");
			}
			fall_power(Power_X2) {
				values ("0.002679,0.001952,0.000969,-0.000965,-0.004832,-0.012577", \
				        "0.002658,0.001917,0.000943,-0.000990,-0.004851,-0.012584", \
				        "0.002612,0.001906,0.000921,-0.001006,-0.004873,-0.012613", \
				        "0.002599,0.001883,0.000918,-0.001011,-0.004893,-0.012642", \
				        "0.002663,0.001940,0.000976,-0.000959,-0.004835,-0.012579", \
				        "0.003136,0.002378,0.001368,-0.000630,-0.004580,-0.012395", \
				        "0.004778,0.003949,0.002828,0.000668,-0.003511,-0.011614", \
				        "0.008905,0.007962,0.006715,0.004320,-0.000252,-0.008930");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & A2 & !B1";

			rise_power(Power_X2) {
				values ("0.007283,0.008013,0.008965,0.010915,0.014796,0.022539", \
				        "0.007241,0.007971,0.008940,0.010883,0.014776,0.022520", \
				        "0.007227,0.007946,0.008918,0.010866,0.014756,0.022515", \
				        "0.007216,0.007941,0.008927,0.010874,0.014764,0.022501", \
				        "0.007359,0.008076,0.009035,0.010958,0.014808,0.022557", \
				        "0.007976,0.008673,0.009587,0.011446,0.015229,0.022845", \
				        "0.009752,0.010409,0.011257,0.013020,0.016612,0.023997", \
				        "0.013921,0.014474,0.015243,0.016841,0.020165,0.027153");
			}
			fall_power(Power_X2) {
				values ("0.002667,0.001945,0.000965,-0.000968,-0.004835,-0.012568", \
				        "0.002643,0.001920,0.000937,-0.000990,-0.004854,-0.012583", \
				        "0.002629,0.001882,0.000921,-0.001007,-0.004872,-0.012609", \
				        "0.002597,0.001877,0.000929,-0.001000,-0.004883,-0.012632", \
				        "0.002684,0.001953,0.000985,-0.000944,-0.004814,-0.012567", \
				        "0.003182,0.002424,0.001408,-0.000600,-0.004550,-0.012369", \
				        "0.004865,0.004024,0.002922,0.000764,-0.003431,-0.011543", \
				        "0.009095,0.008136,0.006911,0.004508,-0.000078,-0.008779");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI22_X4
 Cell Description	: Combinational cell (OAI22_X4) with drive strength X4
*******************************************************************************************/

cell (OAI22_X4) {

	area               	: 2.660000;

	cell_leakage_power 	: 42026.486500;

	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & !B2";
		value      	: 8602.894000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & !B2";
		value      	: 43179.410000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & !B2";
		value      	: 13695.120000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & !B2";
		value      	: 46186.550000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !B1 & B2";
		value      	: 43179.470000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & B1 & B2";
		value      	: 61231.000000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !B1 & B2";
		value      	: 43269.090000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & B1 & B2";
		value      	: 59617.470000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & !B2";
		value      	: 13695.090000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & !B2";
		value      	: 43269.080000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & !B2";
		value      	: 10090.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & !B2";
		value      	: 59613.630000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !B1 & B2";
		value      	: 40351.540000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & B1 & B2";
		value      	: 56700.120000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !B1 & B2";
		value      	: 56696.670000;
	}
	leakage_power () {
		when      	: "A1 & A2 & B1 & B2";
		value      	: 73045.740000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.002011;
		fall_capacitance	: 0.001873;
		rise_capacitance	: 0.002150;
		fall_capacitance_range		(0.001560, 0.002393);
		rise_capacitance_range		(0.001750, 0.002757);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000049,0.000036,0.000027,0.000019,0.000012,0.000006,0.000000,-0.000005");
			}

		}

		internal_power () {

			when      	: "!A2 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000084,0.000066,0.000052,0.000043,0.000036,0.000031,0.000025,0.000016");
			}

		}

		internal_power () {

			when      	: "A2 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000018,0.000010,0.000004,0.000001,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000030,0.000018,0.000010,0.000004,0.000001,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "A2 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000027,0.000015,0.000008,0.000003,0.000000,-0.000003,-0.000008,-0.000018");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.002263;
		fall_capacitance	: 0.002240;
		rise_capacitance	: 0.002286;
		fall_capacitance_range		(0.001887, 0.002637);
		rise_capacitance_range		(0.001952, 0.002759);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & B1 & !B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000136,0.000094,0.000062,0.000041,0.000027,0.000018,0.000008,-0.000004");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000023,0.000015,0.000009,0.000005,0.000003,0.000000,-0.000002,-0.000006");
			}

		}

		internal_power () {

			when      	: "A1 & !B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000136,0.000094,0.000062,0.000041,0.000027,0.000018,0.000008,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & B1 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000134,0.000092,0.000060,0.000040,0.000027,0.000017,0.000008,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !B1 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000060,0.000049,0.000042,0.000037,0.000033,0.000030,0.000025,0.000016");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.001956;
		fall_capacitance	: 0.001794;
		rise_capacitance	: 0.002119;
		fall_capacitance_range		(0.001564, 0.002120);
		rise_capacitance_range		(0.001739, 0.002662);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000050,0.000034,0.000025,0.000017,0.000009,0.000003,-0.000004,-0.000014");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000010,0.000005,0.000002,-0.000000,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000010,0.000005,0.000002,-0.000000,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000019,0.000010,0.000005,0.000002,-0.000000,-0.000003,-0.000008,-0.000018");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000088,0.000059,0.000040,0.000028,0.000019,0.000013,0.000007,0.000001");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.002240;
		fall_capacitance	: 0.002193;
		rise_capacitance	: 0.002286;
		fall_capacitance_range		(0.001823, 0.002453);
		rise_capacitance_range		(0.001938, 0.002671);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000131,0.000090,0.000059,0.000040,0.000027,0.000017,0.000008,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000028,0.000018,0.000011,0.000006,0.000002,-0.000002,-0.000006,-0.000015");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000131,0.000090,0.000059,0.000040,0.000027,0.000017,0.000009,-0.000004");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & !B1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000065,0.000044,0.000032,0.000023,0.000017,0.000012,0.000007,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & B1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000131,0.000090,0.000059,0.000040,0.000027,0.000017,0.000008,-0.000003");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "!((A1 | A2) & (B1 | B2))";

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022854,0.027922,0.033612,0.044727,0.066458,0.109411", \
				        "0.025978,0.030960,0.036694,0.047781,0.069531,0.112476", \
				        "0.032772,0.037583,0.043030,0.053963,0.075648,0.118468", \
				        "0.041279,0.047819,0.054496,0.066614,0.088077,0.130755", \
				        "0.048896,0.057671,0.066736,0.083175,0.111053,0.156299", \
				        "0.051662,0.063439,0.075730,0.097794,0.135519,0.196720", \
				        "0.040190,0.056319,0.072850,0.102715,0.153455,0.235987", \
				        "-0.004442,0.016910,0.039303,0.079438,0.147942,0.259361");
			}
			cell_rise(Timing_X4) {
				values ("0.039426,0.051065,0.064406,0.090596,0.142723,0.246736", \
				        "0.042521,0.054120,0.067342,0.093457,0.145671,0.249709", \
				        "0.049459,0.060903,0.073926,0.099900,0.151909,0.255848", \
				        "0.064175,0.075735,0.088379,0.113912,0.165239,0.268749", \
				        "0.086192,0.101028,0.116625,0.143993,0.194191,0.296291", \
				        "0.119302,0.137877,0.157477,0.192611,0.253022,0.355168", \
				        "0.172899,0.196043,0.220312,0.263928,0.340487,0.468852", \
				        "0.264387,0.292768,0.323128,0.377302,0.472262,0.633781");
			}
			fall_transition(Timing_X4) {
				values ("0.017005,0.021219,0.025821,0.035015,0.053441,0.090410", \
				        "0.016485,0.020967,0.025778,0.034999,0.053479,0.090449", \
				        "0.017836,0.021383,0.025922,0.034726,0.053455,0.090426", \
				        "0.024620,0.028082,0.031818,0.038387,0.054004,0.090400", \
				        "0.036129,0.040403,0.045022,0.052717,0.066325,0.094147", \
				        "0.055827,0.061334,0.067152,0.077067,0.094365,0.123130", \
				        "0.090173,0.097699,0.105414,0.118574,0.140681,0.177260", \
				        "0.151468,0.161924,0.172573,0.190706,0.220389,0.267532");
			}
			rise_transition(Timing_X4) {
				values ("0.046803,0.058596,0.071663,0.097198,0.146256,0.241727", \
				        "0.046769,0.058584,0.071647,0.097220,0.146237,0.241723", \
				        "0.046584,0.058501,0.071665,0.097217,0.146243,0.241710", \
				        "0.051160,0.060740,0.072335,0.097148,0.146250,0.241728", \
				        "0.067406,0.075188,0.084047,0.103312,0.146742,0.241706", \
				        "0.094123,0.102685,0.112392,0.131131,0.165681,0.244946", \
				        "0.137312,0.145731,0.156239,0.177677,0.218368,0.289189", \
				        "0.211602,0.219611,0.229786,0.252288,0.298774,0.386403");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & !B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.017393,0.022151,0.027563,0.038317,0.059671,0.102244", \
				        "0.020684,0.025258,0.030625,0.041340,0.062715,0.105286", \
				        "0.026248,0.031573,0.037152,0.047576,0.068863,0.111303", \
				        "0.031717,0.039041,0.046420,0.059540,0.081366,0.123617", \
				        "0.035293,0.045194,0.055309,0.073033,0.102526,0.149290", \
				        "0.032577,0.046031,0.059658,0.083704,0.123572,0.187092", \
				        "0.013878,0.032247,0.050735,0.083201,0.137042,0.222750", \
				        "-0.039863,-0.015873,0.009155,0.052725,0.125509,0.241358");
			}
			cell_rise(Timing_X4) {
				values ("0.038575,0.050144,0.063372,0.089426,0.141403,0.245048", \
				        "0.041685,0.053169,0.066336,0.092336,0.144325,0.248036", \
				        "0.048632,0.059952,0.072908,0.098779,0.150580,0.254185", \
				        "0.063225,0.074862,0.087385,0.112794,0.163985,0.267066", \
				        "0.084875,0.099714,0.115293,0.142832,0.192920,0.294616", \
				        "0.117379,0.136007,0.155553,0.190843,0.251436,0.353529", \
				        "0.169868,0.193217,0.217434,0.261301,0.338034,0.466583", \
				        "0.258735,0.287611,0.318299,0.372957,0.468315,0.630067");
			}
			fall_transition(Timing_X4) {
				values ("0.012419,0.016786,0.021427,0.030706,0.049134,0.086103", \
				        "0.012381,0.016554,0.021238,0.030634,0.049219,0.086193", \
				        "0.015714,0.018670,0.022476,0.030744,0.049137,0.086142", \
				        "0.022560,0.026117,0.029656,0.036101,0.050534,0.086100", \
				        "0.034191,0.038475,0.043115,0.050883,0.064650,0.091154", \
				        "0.054245,0.059702,0.065416,0.075402,0.092588,0.121433", \
				        "0.089113,0.096547,0.104096,0.117222,0.139118,0.175453", \
				        "0.151563,0.161664,0.171898,0.189749,0.219070,0.265860");
			}
			rise_transition(Timing_X4) {
				values ("0.032479,0.042972,0.055133,0.078744,0.126160,0.221002", \
				        "0.032460,0.042949,0.055112,0.078722,0.126103,0.221005", \
				        "0.032301,0.042848,0.054992,0.078655,0.126110,0.220999", \
				        "0.036984,0.045246,0.055696,0.078630,0.126165,0.221007", \
				        "0.048647,0.057633,0.067157,0.084923,0.126667,0.220975", \
				        "0.066483,0.077432,0.089166,0.109826,0.145665,0.224299", \
				        "0.097588,0.109817,0.123402,0.148569,0.193503,0.268549", \
				        "0.154671,0.168565,0.183687,0.212488,0.265693,0.359652");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & B1 & B2";
			sdf_cond	   : "(A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.015167,0.018832,0.023012,0.031298,0.047838,0.080723", \
				        "0.018548,0.022107,0.026280,0.034518,0.050991,0.083947", \
				        "0.023161,0.027848,0.032740,0.041160,0.057564,0.090333", \
				        "0.027306,0.033834,0.040393,0.051949,0.070768,0.103457", \
				        "0.028904,0.037860,0.046842,0.062676,0.088708,0.129523", \
				        "0.022971,0.035292,0.047680,0.069350,0.105054,0.161132", \
				        "-0.001327,0.015642,0.032688,0.062332,0.111184,0.188001", \
				        "-0.065005,-0.042765,-0.019645,0.020552,0.087296,0.192641");
			}
			cell_rise(Timing_X4) {
				values ("0.038413,0.049964,0.063158,0.089247,0.141217,0.244882", \
				        "0.041500,0.052968,0.066089,0.092178,0.144117,0.247835", \
				        "0.048549,0.059824,0.072738,0.098612,0.150365,0.253984", \
				        "0.063375,0.074955,0.087473,0.112824,0.163906,0.266930", \
				        "0.085418,0.100238,0.115739,0.143205,0.193204,0.294760", \
				        "0.118812,0.137369,0.156819,0.192013,0.252417,0.354313", \
				        "0.173594,0.196588,0.220594,0.264201,0.340619,0.468764", \
				        "0.268324,0.296482,0.326425,0.380209,0.474609,0.635526");
			}
			fall_transition(Timing_X4) {
				values ("0.009408,0.012667,0.016188,0.023323,0.037699,0.066455", \
				        "0.010022,0.012846,0.016121,0.023348,0.037717,0.066454", \
				        "0.013835,0.016283,0.018737,0.024258,0.037709,0.066436", \
				        "0.020367,0.023305,0.026517,0.031709,0.041443,0.066637", \
				        "0.031496,0.035206,0.039173,0.045861,0.057236,0.076454", \
				        "0.050841,0.055669,0.060633,0.069298,0.083914,0.108089", \
				        "0.084909,0.091489,0.098190,0.109636,0.128716,0.159682", \
				        "0.146457,0.155470,0.164545,0.180422,0.206246,0.246968");
			}
			rise_transition(Timing_X4) {
				values ("0.032471,0.042945,0.054936,0.078741,0.126155,0.220998", \
				        "0.032445,0.042961,0.054937,0.078713,0.126117,0.221003", \
				        "0.032289,0.042848,0.055029,0.078661,0.126115,0.220990", \
				        "0.036914,0.045196,0.055818,0.078626,0.126140,0.220998", \
				        "0.048363,0.057377,0.066894,0.084804,0.126638,0.220971", \
				        "0.065627,0.076639,0.088408,0.109237,0.145247,0.224171", \
				        "0.095590,0.107881,0.121591,0.146978,0.192236,0.267561", \
				        "0.151177,0.164813,0.179809,0.208669,0.262266,0.356914");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.028638,0.033780,0.039600,0.050855,0.072847,0.116083", \
				        "0.031619,0.036717,0.042520,0.053812,0.075778,0.118947", \
				        "0.038045,0.042897,0.048667,0.059903,0.081810,0.124866", \
				        "0.048954,0.054924,0.060999,0.072615,0.094182,0.137166", \
				        "0.059864,0.067902,0.076337,0.091762,0.118395,0.162629", \
				        "0.067612,0.078278,0.089551,0.110229,0.146135,0.205312", \
				        "0.065334,0.079537,0.094504,0.121857,0.169536,0.248757", \
				        "0.038797,0.057457,0.077130,0.113204,0.176057,0.280943");
			}
			cell_rise(Timing_X4) {
				values ("0.052865,0.064515,0.077863,0.103954,0.156087,0.260049", \
				        "0.056312,0.067874,0.081276,0.107468,0.159629,0.263730", \
				        "0.062424,0.074153,0.087285,0.113534,0.165695,0.269976", \
				        "0.073879,0.085707,0.098947,0.125079,0.177353,0.281575", \
				        "0.091560,0.105622,0.120773,0.148544,0.200642,0.304618", \
				        "0.120466,0.137316,0.155313,0.188237,0.247213,0.352745", \
				        "0.169820,0.190964,0.212866,0.252467,0.322438,0.444765", \
				        "0.252511,0.279640,0.307676,0.357617,0.443805,0.590417");
			}
			fall_transition(Timing_X4) {
				values ("0.021165,0.025323,0.029972,0.039186,0.057661,0.094674", \
				        "0.021014,0.025380,0.029960,0.039189,0.057661,0.094673", \
				        "0.020908,0.025094,0.029592,0.039078,0.057675,0.094673", \
				        "0.026981,0.030359,0.033980,0.041187,0.057700,0.094676", \
				        "0.038708,0.042903,0.047460,0.055047,0.068524,0.097429", \
				        "0.057919,0.063480,0.069331,0.079298,0.096586,0.125170", \
				        "0.090491,0.098071,0.105858,0.119240,0.141887,0.179018", \
				        "0.147310,0.158054,0.168837,0.187254,0.217702,0.266249");
			}
			rise_transition(Timing_X4) {
				values ("0.046792,0.058576,0.071634,0.097219,0.146247,0.241696", \
				        "0.046797,0.058572,0.071639,0.097210,0.146250,0.241724", \
				        "0.046816,0.058572,0.071643,0.097195,0.146248,0.241718", \
				        "0.049000,0.059613,0.071939,0.097229,0.146252,0.241721", \
				        "0.061006,0.069582,0.079653,0.100980,0.146633,0.241702", \
				        "0.081984,0.090215,0.099991,0.119957,0.159022,0.244219", \
				        "0.116216,0.123768,0.133342,0.153359,0.194045,0.273182", \
				        "0.174016,0.181127,0.190575,0.210488,0.252277,0.336522");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.022317,0.027417,0.033101,0.044174,0.065899,0.108847", \
				        "0.025337,0.030345,0.036049,0.047134,0.068834,0.111719", \
				        "0.031963,0.036814,0.042275,0.053252,0.074885,0.117668", \
				        "0.040197,0.046799,0.053650,0.065843,0.087315,0.129969", \
				        "0.047570,0.056454,0.065699,0.082192,0.110197,0.155545", \
				        "0.050800,0.062604,0.074969,0.097040,0.134770,0.195967", \
				        "0.042700,0.058485,0.074731,0.104043,0.154100,0.236000", \
				        "0.009109,0.029572,0.050964,0.089396,0.155428,0.263879");
			}
			cell_rise(Timing_X4) {
				values ("0.052029,0.063549,0.076816,0.102832,0.154764,0.258379", \
				        "0.055462,0.066934,0.080157,0.106298,0.158329,0.262067", \
				        "0.061591,0.073173,0.086207,0.112372,0.164441,0.268262", \
				        "0.072971,0.084771,0.097888,0.123917,0.176011,0.279898", \
				        "0.090407,0.104471,0.119563,0.147375,0.199321,0.302963", \
				        "0.118924,0.135797,0.153738,0.186680,0.245704,0.351083", \
				        "0.167437,0.188720,0.210613,0.250381,0.320447,0.442730", \
				        "0.248462,0.275957,0.304106,0.354400,0.440883,0.587543");
			}
			fall_transition(Timing_X4) {
				values ("0.017112,0.021359,0.025847,0.035017,0.053486,0.090450", \
				        "0.016609,0.021121,0.025782,0.035054,0.053491,0.090456", \
				        "0.018152,0.021790,0.026049,0.034815,0.053510,0.090454", \
				        "0.025145,0.028573,0.032229,0.038686,0.054121,0.090446", \
				        "0.036754,0.040966,0.045616,0.053235,0.066716,0.094360", \
				        "0.055870,0.061452,0.067310,0.077394,0.094738,0.123453", \
				        "0.088253,0.095929,0.103752,0.117284,0.139881,0.177081", \
				        "0.144552,0.155545,0.166523,0.185217,0.215675,0.264159");
			}
			rise_transition(Timing_X4) {
				values ("0.032489,0.042953,0.055109,0.078672,0.126142,0.220987", \
				        "0.032482,0.042984,0.054951,0.078736,0.126127,0.221006", \
				        "0.032507,0.042983,0.055022,0.078743,0.126141,0.221006", \
				        "0.034774,0.044047,0.055349,0.078740,0.126134,0.221006", \
				        "0.043577,0.052567,0.062745,0.082560,0.126551,0.220985", \
				        "0.058515,0.067976,0.078799,0.099444,0.138979,0.223536", \
				        "0.084043,0.094162,0.105734,0.127812,0.170681,0.252280", \
				        "0.128817,0.140244,0.153079,0.177487,0.223774,0.311980");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & B1 & B2";
			sdf_cond	   : "(A1 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.018524,0.022467,0.026909,0.035530,0.052373,0.085613", \
				        "0.021832,0.025659,0.030092,0.038681,0.055494,0.088672", \
				        "0.027996,0.032251,0.036808,0.045240,0.061990,0.095075", \
				        "0.034594,0.040503,0.046371,0.057210,0.075277,0.108136", \
				        "0.039645,0.047652,0.055811,0.070538,0.095350,0.134749", \
				        "0.039281,0.050043,0.061223,0.081061,0.114755,0.168751", \
				        "0.025012,0.039528,0.054378,0.081100,0.126426,0.199629", \
				        "-0.019659,-0.000726,0.018991,0.054399,0.114816,0.213195");
			}
			cell_rise(Timing_X4) {
				values ("0.051897,0.063388,0.076568,0.102642,0.154581,0.258197", \
				        "0.055307,0.066764,0.079999,0.106120,0.158066,0.261856", \
				        "0.061483,0.073034,0.086082,0.112202,0.164260,0.268101", \
				        "0.072891,0.084659,0.097815,0.123742,0.175798,0.279646", \
				        "0.090391,0.104440,0.119492,0.147294,0.199188,0.302764", \
				        "0.119633,0.136427,0.154267,0.187089,0.245961,0.351185", \
				        "0.170357,0.191291,0.212987,0.252407,0.322099,0.443952", \
				        "0.256651,0.283410,0.310977,0.360416,0.445917,0.591633");
			}
			fall_transition(Timing_X4) {
				values ("0.012779,0.016059,0.019606,0.026744,0.041035,0.069709", \
				        "0.012706,0.015932,0.019512,0.026721,0.041051,0.069708", \
				        "0.015707,0.017977,0.020902,0.027143,0.041018,0.069745", \
				        "0.022510,0.025343,0.028259,0.033290,0.043609,0.069703", \
				        "0.033573,0.037218,0.041028,0.047636,0.058823,0.078202", \
				        "0.052078,0.056965,0.062074,0.070783,0.085505,0.109632", \
				        "0.083894,0.090724,0.097615,0.109470,0.128932,0.160668", \
				        "0.139889,0.149849,0.159592,0.176212,0.202941,0.244873");
			}
			rise_transition(Timing_X4) {
				values ("0.032478,0.042936,0.054953,0.078683,0.126155,0.220994", \
				        "0.032466,0.042948,0.055045,0.078651,0.126160,0.220990", \
				        "0.032495,0.042956,0.055044,0.078733,0.126143,0.221004", \
				        "0.034779,0.044059,0.055368,0.078727,0.126124,0.220995", \
				        "0.043570,0.052567,0.062658,0.082570,0.126554,0.220983", \
				        "0.058122,0.067659,0.078549,0.099316,0.138914,0.223524", \
				        "0.082798,0.092977,0.104675,0.126927,0.170124,0.251933", \
				        "0.126811,0.137999,0.150740,0.175069,0.221642,0.310426");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.034014,0.039077,0.044718,0.055854,0.077613,0.120628", \
				        "0.037273,0.042268,0.047909,0.059048,0.080860,0.123878", \
				        "0.042804,0.047893,0.053387,0.064473,0.086290,0.129360", \
				        "0.051231,0.056916,0.063110,0.074563,0.096475,0.139697", \
				        "0.060687,0.068020,0.075619,0.089580,0.114544,0.159258", \
				        "0.066538,0.076673,0.087221,0.106087,0.138268,0.191801", \
				        "0.059004,0.073552,0.088430,0.115090,0.159775,0.231448", \
				        "0.019580,0.039873,0.060920,0.098337,0.161252,0.261424");
			}
			cell_rise(Timing_X4) {
				values ("0.070586,0.082532,0.096156,0.122902,0.175799,0.280642", \
				        "0.073510,0.085434,0.098987,0.125799,0.178634,0.283554", \
				        "0.079953,0.091900,0.105429,0.132062,0.184842,0.289677", \
				        "0.094409,0.106051,0.119444,0.145740,0.198114,0.302525", \
				        "0.124401,0.136525,0.149711,0.175288,0.226747,0.330011", \
				        "0.168727,0.184870,0.201663,0.232810,0.287802,0.388615", \
				        "0.236965,0.256782,0.277964,0.317247,0.387515,0.507894", \
				        "0.349014,0.372985,0.399599,0.448065,0.535354,0.687671");
			}
			fall_transition(Timing_X4) {
				values ("0.017029,0.021246,0.025849,0.035023,0.053493,0.090456", \
				        "0.017014,0.021222,0.025770,0.034997,0.053450,0.090454", \
				        "0.017166,0.021168,0.025706,0.034979,0.053484,0.090454", \
				        "0.020187,0.023909,0.028076,0.036105,0.053648,0.090401", \
				        "0.027950,0.031555,0.035695,0.043433,0.058917,0.091967", \
				        "0.043119,0.047220,0.051829,0.059924,0.075233,0.105585", \
				        "0.070696,0.075728,0.081254,0.091209,0.108770,0.139651", \
				        "0.118188,0.125242,0.132553,0.145711,0.168252,0.205566");
			}
			rise_transition(Timing_X4) {
				values ("0.068159,0.079474,0.092141,0.117290,0.166211,0.262080", \
				        "0.068151,0.079464,0.092135,0.117263,0.166216,0.262101", \
				        "0.068152,0.079446,0.092163,0.117285,0.166207,0.262095", \
				        "0.068081,0.079319,0.092159,0.117294,0.166200,0.262096", \
				        "0.076259,0.085543,0.096208,0.118589,0.166204,0.262078", \
				        "0.101934,0.111131,0.121258,0.139907,0.177619,0.262987", \
				        "0.139466,0.150754,0.163343,0.186518,0.227757,0.299393", \
				        "0.197168,0.210859,0.225487,0.253796,0.305642,0.395950");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.028523,0.033266,0.038693,0.049395,0.070803,0.113418", \
				        "0.031715,0.036484,0.041894,0.052627,0.074054,0.116693", \
				        "0.036985,0.041965,0.047212,0.057974,0.079465,0.122150", \
				        "0.043713,0.049735,0.056007,0.067684,0.089597,0.132448", \
				        "0.049751,0.057910,0.066226,0.081081,0.106751,0.151952", \
				        "0.050073,0.061708,0.073469,0.094039,0.128083,0.183146", \
				        "0.034426,0.051320,0.068163,0.097455,0.145275,0.219847", \
				        "-0.015337,0.008069,0.031836,0.072939,0.140299,0.245027");
			}
			cell_rise(Timing_X4) {
				values ("0.069566,0.081434,0.094937,0.121608,0.174310,0.278813", \
				        "0.072487,0.084335,0.097777,0.124454,0.177175,0.281737", \
				        "0.078912,0.090818,0.104173,0.130742,0.183369,0.287840", \
				        "0.093370,0.104966,0.118242,0.144423,0.196629,0.300712", \
				        "0.123229,0.135361,0.148520,0.174040,0.225279,0.328190", \
				        "0.166970,0.183160,0.199917,0.231111,0.286266,0.386799", \
				        "0.234302,0.254180,0.275327,0.314733,0.385148,0.505660", \
				        "0.344669,0.368795,0.395492,0.444111,0.531565,0.684025");
			}
			fall_transition(Timing_X4) {
				values ("0.012710,0.016862,0.021469,0.030639,0.049217,0.086194", \
				        "0.012781,0.016903,0.021478,0.030692,0.049216,0.086164", \
				        "0.013575,0.017302,0.021628,0.030729,0.049161,0.086163", \
				        "0.017390,0.020924,0.024823,0.032644,0.049596,0.086124", \
				        "0.025656,0.029251,0.033262,0.040717,0.055978,0.088276", \
				        "0.041447,0.045453,0.050017,0.058055,0.073042,0.102795", \
				        "0.070248,0.074967,0.080233,0.089997,0.107144,0.137662", \
				        "0.119045,0.125399,0.132214,0.144947,0.167117,0.204001");
			}
			rise_transition(Timing_X4) {
				values ("0.050043,0.060803,0.073072,0.097257,0.145201,0.240929", \
				        "0.050040,0.060801,0.073056,0.097250,0.145231,0.240933", \
				        "0.050045,0.060799,0.073144,0.097294,0.145249,0.240913", \
				        "0.049978,0.060674,0.073154,0.097306,0.145208,0.240936", \
				        "0.058392,0.066990,0.077214,0.098578,0.145239,0.240908", \
				        "0.077436,0.088052,0.099433,0.119462,0.156747,0.241882", \
				        "0.105014,0.118618,0.133203,0.159115,0.203835,0.278389", \
				        "0.149250,0.166467,0.184272,0.216905,0.273993,0.369877");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & A2 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.024289,0.027951,0.032086,0.040322,0.056709,0.089408", \
				        "0.027692,0.031371,0.035463,0.043710,0.060162,0.092846", \
				        "0.033702,0.037760,0.041916,0.050172,0.066645,0.099358", \
				        "0.040816,0.046325,0.051947,0.061996,0.079633,0.112514", \
				        "0.046645,0.054445,0.062353,0.076362,0.099744,0.137815", \
				        "0.046278,0.057571,0.068989,0.088846,0.121603,0.173239", \
				        "0.029237,0.045668,0.062139,0.090689,0.137294,0.209637", \
				        "-0.023387,-0.000517,0.022770,0.062973,0.128966,0.231441");
			}
			cell_rise(Timing_X4) {
				values ("0.073269,0.084993,0.098338,0.124855,0.177375,0.281663", \
				        "0.076197,0.087925,0.101215,0.127710,0.180274,0.284593", \
				        "0.082683,0.094394,0.107647,0.134037,0.186484,0.290743", \
				        "0.097249,0.108646,0.121780,0.147823,0.199827,0.303642", \
				        "0.127375,0.139275,0.152134,0.177573,0.228660,0.331302", \
				        "0.172242,0.188152,0.204579,0.235444,0.289933,0.390304", \
				        "0.241138,0.260507,0.281436,0.320333,0.390190,0.510063", \
				        "0.354051,0.377584,0.403770,0.451694,0.538472,0.690437");
			}
			fall_transition(Timing_X4) {
				values ("0.010629,0.013789,0.017227,0.024234,0.038195,0.066289", \
				        "0.010651,0.013735,0.017196,0.024237,0.038252,0.066287", \
				        "0.012178,0.014737,0.017732,0.024295,0.038235,0.066235", \
				        "0.017326,0.019958,0.022892,0.028184,0.039620,0.066280", \
				        "0.026565,0.029625,0.033034,0.039012,0.049931,0.071392", \
				        "0.043287,0.046760,0.050663,0.058026,0.070815,0.093592", \
				        "0.073321,0.077383,0.081990,0.090793,0.106599,0.133835", \
				        "0.124100,0.129493,0.135564,0.147030,0.167550,0.202050");
			}
			rise_transition(Timing_X4) {
				values ("0.051565,0.062415,0.074830,0.099052,0.147227,0.243021", \
				        "0.051567,0.062425,0.074809,0.099129,0.147230,0.243044", \
				        "0.051565,0.062409,0.074827,0.099077,0.147202,0.243012", \
				        "0.051499,0.062345,0.074788,0.099050,0.147165,0.243042", \
				        "0.059431,0.068188,0.078624,0.100328,0.147179,0.243044", \
				        "0.078914,0.089408,0.100681,0.120723,0.158137,0.243838", \
				        "0.106976,0.120373,0.134822,0.160600,0.204984,0.279408", \
				        "0.151853,0.168776,0.186331,0.218593,0.275263,0.370642");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.039845,0.044953,0.050648,0.061970,0.083989,0.127257", \
				        "0.043057,0.048133,0.053826,0.065134,0.087163,0.130411", \
				        "0.048566,0.053724,0.059363,0.070560,0.092607,0.135909", \
				        "0.057854,0.063348,0.069375,0.080736,0.102811,0.146209", \
				        "0.069663,0.076454,0.083563,0.097011,0.121410,0.165836", \
				        "0.079463,0.088756,0.098463,0.116275,0.147125,0.199468", \
				        "0.079112,0.092181,0.105745,0.130357,0.172718,0.241908", \
				        "0.054473,0.072289,0.090929,0.124929,0.183245,0.278369");
			}
			cell_rise(Timing_X4) {
				values ("0.083986,0.095889,0.109470,0.136234,0.189096,0.293891", \
				        "0.087573,0.099451,0.113032,0.139739,0.192703,0.297563", \
				        "0.093809,0.105814,0.119364,0.146118,0.199005,0.303903", \
				        "0.105357,0.117316,0.131070,0.157818,0.210739,0.315665", \
				        "0.128034,0.140554,0.154372,0.181119,0.233913,0.338798", \
				        "0.165001,0.179736,0.195849,0.226319,0.282389,0.386796", \
				        "0.226585,0.244792,0.263774,0.299734,0.365309,0.482925", \
				        "0.330281,0.352434,0.376470,0.420422,0.499392,0.638515");
			}
			fall_transition(Timing_X4) {
				values ("0.021045,0.025307,0.029923,0.039163,0.057668,0.094656", \
				        "0.021010,0.025223,0.029921,0.039201,0.057671,0.094632", \
				        "0.020969,0.025212,0.029858,0.039156,0.057652,0.094619", \
				        "0.023195,0.026961,0.031327,0.039822,0.057676,0.094672", \
				        "0.030406,0.034160,0.038242,0.046202,0.062189,0.095836", \
				        "0.045147,0.049313,0.054004,0.062271,0.077724,0.108635", \
				        "0.071462,0.076664,0.082399,0.092569,0.110385,0.141856", \
				        "0.116237,0.123630,0.131201,0.144710,0.167729,0.205852");
			}
			rise_transition(Timing_X4) {
				values ("0.068149,0.079454,0.092123,0.117287,0.166206,0.262091", \
				        "0.068156,0.079450,0.092169,0.117287,0.166211,0.262085", \
				        "0.068157,0.079451,0.092163,0.117257,0.166220,0.262094", \
				        "0.068118,0.079442,0.092161,0.117270,0.166209,0.262074", \
				        "0.073326,0.083284,0.094712,0.118204,0.166216,0.262082", \
				        "0.091706,0.101290,0.111864,0.132564,0.173918,0.263024", \
				        "0.119842,0.130053,0.141749,0.164172,0.206767,0.287028", \
				        "0.164794,0.176169,0.189004,0.213702,0.260613,0.349157");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b0) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.033589,0.038602,0.044248,0.055318,0.077051,0.120029", \
				        "0.036804,0.041780,0.047394,0.058469,0.080219,0.123179", \
				        "0.042317,0.047376,0.052812,0.063879,0.085638,0.128651", \
				        "0.050587,0.056288,0.062462,0.073922,0.095795,0.138953", \
				        "0.059602,0.067036,0.074689,0.088772,0.113754,0.158509", \
				        "0.064679,0.075043,0.085780,0.104902,0.137292,0.190942", \
				        "0.057673,0.072352,0.087348,0.114080,0.158885,0.230638", \
				        "0.024962,0.044811,0.065327,0.101968,0.163762,0.262656");
			}
			cell_rise(Timing_X4) {
				values ("0.082959,0.094839,0.108259,0.134903,0.187606,0.292077", \
				        "0.086534,0.098367,0.111763,0.138474,0.191231,0.295746", \
				        "0.092764,0.104727,0.118100,0.144772,0.197556,0.302074", \
				        "0.104315,0.116213,0.129825,0.156493,0.209257,0.313825", \
				        "0.126893,0.139386,0.153208,0.179786,0.232464,0.336974", \
				        "0.163539,0.178258,0.194303,0.224776,0.280829,0.384976", \
				        "0.224521,0.242771,0.261679,0.297665,0.363305,0.480815", \
				        "0.327058,0.348939,0.373422,0.417449,0.496532,0.635631");
			}
			fall_transition(Timing_X4) {
				values ("0.017019,0.021145,0.025855,0.035017,0.053476,0.090447", \
				        "0.016973,0.021167,0.025781,0.034983,0.053439,0.090443", \
				        "0.017262,0.021304,0.025768,0.034986,0.053467,0.090447", \
				        "0.020351,0.023973,0.028205,0.036238,0.053715,0.090403", \
				        "0.028186,0.031839,0.035879,0.043647,0.059102,0.092037", \
				        "0.043256,0.047408,0.052037,0.060224,0.075470,0.105764", \
				        "0.070190,0.075210,0.080836,0.090837,0.108584,0.139701", \
				        "0.114985,0.122312,0.129815,0.143257,0.166161,0.204059");
			}
			rise_transition(Timing_X4) {
				values ("0.050037,0.060805,0.073140,0.097300,0.145230,0.240943", \
				        "0.050041,0.060793,0.073064,0.097298,0.145235,0.240940", \
				        "0.050042,0.060806,0.073104,0.097298,0.145249,0.240936", \
				        "0.050010,0.060777,0.073147,0.097212,0.145192,0.240925", \
				        "0.055388,0.064700,0.075768,0.098290,0.145237,0.240914", \
				        "0.069160,0.079447,0.090791,0.112067,0.152987,0.241905", \
				        "0.090923,0.102488,0.115339,0.139226,0.183684,0.266038", \
				        "0.126369,0.140368,0.155086,0.182591,0.232843,0.324781");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & A2 & !B1";
			sdf_cond	   : "(A1 == 1'b1) && (A2 == 1'b1) && (B1 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.027786,0.031667,0.036052,0.044590,0.061316,0.094274", \
				        "0.031222,0.035057,0.039379,0.047948,0.064673,0.097640", \
				        "0.037780,0.041707,0.045914,0.054425,0.071176,0.104161", \
				        "0.047001,0.052042,0.057300,0.066963,0.084226,0.117284", \
				        "0.055947,0.063032,0.070269,0.083424,0.105764,0.142913", \
				        "0.060338,0.070408,0.080760,0.099202,0.130307,0.180228", \
				        "0.051893,0.066230,0.080847,0.106909,0.150552,0.220033", \
				        "0.016173,0.035634,0.055758,0.091580,0.152085,0.248777");
			}
			cell_rise(Timing_X4) {
				values ("0.086667,0.098387,0.111708,0.138201,0.190710,0.294949", \
				        "0.090216,0.101939,0.115200,0.141745,0.194284,0.298588", \
				        "0.096427,0.108238,0.121474,0.147970,0.200581,0.304878", \
				        "0.108002,0.119719,0.133170,0.159665,0.212235,0.316618", \
				        "0.130841,0.143095,0.156649,0.183039,0.235493,0.339750", \
				        "0.168304,0.182827,0.198554,0.228621,0.284207,0.387969", \
				        "0.230843,0.248665,0.267309,0.302795,0.367828,0.484686", \
				        "0.335937,0.357226,0.381222,0.424600,0.502906,0.641334");
			}
			fall_transition(Timing_X4) {
				values ("0.013907,0.017077,0.020571,0.027552,0.041489,0.069485", \
				        "0.013895,0.017057,0.020544,0.027561,0.041507,0.069485", \
				        "0.014627,0.017476,0.020759,0.027510,0.041496,0.069484", \
				        "0.019512,0.022159,0.025031,0.030357,0.042345,0.069456", \
				        "0.028742,0.031738,0.035064,0.041022,0.051983,0.073658", \
				        "0.044776,0.048388,0.052449,0.059789,0.072691,0.095430", \
				        "0.072827,0.077274,0.082277,0.091470,0.107672,0.135340", \
				        "0.119384,0.125895,0.132677,0.145007,0.166343,0.201800");
			}
			rise_transition(Timing_X4) {
				values ("0.051563,0.062409,0.074811,0.099087,0.147224,0.243023", \
				        "0.051560,0.062410,0.074763,0.099092,0.147218,0.243030", \
				        "0.051566,0.062411,0.074802,0.099123,0.147222,0.243028", \
				        "0.051563,0.062411,0.074831,0.099128,0.147225,0.243040", \
				        "0.056598,0.066096,0.077219,0.099986,0.147213,0.243046", \
				        "0.070525,0.080851,0.092218,0.113576,0.154712,0.243901", \
				        "0.092450,0.103984,0.116807,0.140704,0.185170,0.267597", \
				        "0.128320,0.142151,0.156732,0.184094,0.234203,0.326047");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !B1 & B2";

			rise_power(Power_X4) {
				values ("0.008662,0.010378,0.012343,0.016258,0.024014,0.039532", \
				        "0.008681,0.010380,0.012335,0.016239,0.023991,0.039505", \
				        "0.008757,0.010452,0.012407,0.016264,0.024007,0.039516", \
				        "0.009157,0.010775,0.012679,0.016491,0.024158,0.039591", \
				        "0.010117,0.011690,0.013509,0.017204,0.024733,0.040000", \
				        "0.012384,0.013817,0.015533,0.019061,0.026347,0.041274", \
				        "0.017486,0.018670,0.020181,0.023396,0.030259,0.044658", \
				        "0.028617,0.029528,0.030693,0.033307,0.039337,0.052775");
			}
			fall_power(Power_X4) {
				values ("0.005516,0.003828,0.001904,-0.001939,-0.009646,-0.025083", \
				        "0.005546,0.003849,0.001921,-0.001923,-0.009640,-0.025077", \
				        "0.005595,0.003887,0.001990,-0.001876,-0.009599,-0.025035", \
				        "0.005785,0.004079,0.002158,-0.001731,-0.009483,-0.024974", \
				        "0.006478,0.004680,0.002668,-0.001308,-0.009170,-0.024764", \
				        "0.008536,0.006548,0.004345,0.000088,-0.008094,-0.023985", \
				        "0.013683,0.011456,0.008975,0.004227,-0.004709,-0.021475", \
				        "0.025149,0.022617,0.019869,0.014547,0.004516,-0.014019");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & !B2";

			rise_power(Power_X4) {
				values ("0.007687,0.009405,0.011373,0.015271,0.023041,0.038546", \
				        "0.007683,0.009393,0.011357,0.015246,0.023033,0.038550", \
				        "0.007773,0.009483,0.011428,0.015292,0.023048,0.038546", \
				        "0.008188,0.009806,0.011713,0.015525,0.023196,0.038623", \
				        "0.009147,0.010721,0.012530,0.016238,0.023763,0.039024", \
				        "0.011378,0.012859,0.014573,0.018097,0.025376,0.040305", \
				        "0.016704,0.017856,0.019299,0.022468,0.029298,0.043702", \
				        "0.028261,0.029020,0.030056,0.032531,0.038424,0.051796");
			}
			fall_power(Power_X4) {
				values ("0.002341,0.000677,-0.001258,-0.005111,-0.012827,-0.028276", \
				        "0.002358,0.000690,-0.001239,-0.005084,-0.012806,-0.028259", \
				        "0.002427,0.000742,-0.001184,-0.005048,-0.012769,-0.028214", \
				        "0.002693,0.000957,-0.000982,-0.004895,-0.012645,-0.028153", \
				        "0.003591,0.001690,-0.000372,-0.004410,-0.012321,-0.027947", \
				        "0.005967,0.003846,0.001554,-0.002835,-0.011149,-0.027135", \
				        "0.011460,0.009092,0.006515,0.001606,-0.007551,-0.024514", \
				        "0.023229,0.020636,0.017761,0.012259,0.002017,-0.016809");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & B1 & B2";

			rise_power(Power_X4) {
				values ("0.007590,0.009295,0.011258,0.015149,0.022916,0.038423", \
				        "0.007584,0.009285,0.011243,0.015123,0.022892,0.038399", \
				        "0.007680,0.009373,0.011312,0.015158,0.022918,0.038407", \
				        "0.008120,0.009726,0.011628,0.015430,0.023085,0.038519", \
				        "0.009119,0.010679,0.012521,0.016200,0.023737,0.038956", \
				        "0.011497,0.012912,0.014615,0.018175,0.025437,0.040365", \
				        "0.016894,0.018028,0.019480,0.022653,0.029533,0.043959", \
				        "0.028831,0.029526,0.030552,0.033037,0.038954,0.052342");
			}
			fall_power(Power_X4) {
				values ("0.002760,0.001033,-0.000884,-0.004738,-0.012463,-0.027914", \
				        "0.002740,0.001062,-0.000866,-0.004713,-0.012429,-0.027897", \
				        "0.002797,0.001117,-0.000807,-0.004667,-0.012387,-0.027845", \
				        "0.003109,0.001363,-0.000584,-0.004490,-0.012246,-0.027746", \
				        "0.004092,0.002195,0.000106,-0.003951,-0.011883,-0.027519", \
				        "0.006647,0.004502,0.002208,-0.002217,-0.010576,-0.026614", \
				        "0.012368,0.010028,0.007472,0.002573,-0.006623,-0.023718", \
				        "0.024614,0.022084,0.019231,0.013785,0.003555,-0.015316");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !B1 & B2";

			rise_power(Power_X4) {
				values ("0.009664,0.011385,0.013341,0.017246,0.024998,0.040517", \
				        "0.009549,0.011308,0.013270,0.017185,0.024958,0.040482", \
				        "0.009495,0.011225,0.013194,0.017117,0.024905,0.040454", \
				        "0.009441,0.011178,0.013139,0.017064,0.024853,0.040399", \
				        "0.009760,0.011426,0.013351,0.017190,0.024918,0.040433", \
				        "0.011204,0.012708,0.014500,0.018164,0.025673,0.040930", \
				        "0.015234,0.016511,0.018055,0.021349,0.028361,0.043081", \
				        "0.024745,0.025622,0.026811,0.029443,0.035542,0.049153");
			}
			fall_power(Power_X4) {
				values ("0.008512,0.006853,0.004921,0.001074,-0.006638,-0.022076", \
				        "0.008528,0.006830,0.004891,0.001052,-0.006643,-0.022072", \
				        "0.008548,0.006834,0.004920,0.001067,-0.006636,-0.022059", \
				        "0.008685,0.006986,0.005069,0.001196,-0.006552,-0.022025", \
				        "0.009234,0.007496,0.005539,0.001591,-0.006250,-0.021835", \
				        "0.010997,0.009129,0.007039,0.002910,-0.005175,-0.021032", \
				        "0.015473,0.013418,0.011143,0.006700,-0.001897,-0.018434", \
				        "0.025488,0.023292,0.020815,0.015974,0.006662,-0.011098");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & !B2";

			rise_power(Power_X4) {
				values ("0.008646,0.010431,0.012373,0.016257,0.024062,0.039543", \
				        "0.008606,0.010329,0.012303,0.016209,0.023989,0.039511", \
				        "0.008541,0.010260,0.012222,0.016147,0.023937,0.039479", \
				        "0.008495,0.010214,0.012174,0.016090,0.023883,0.039435", \
				        "0.008805,0.010465,0.012379,0.016209,0.023948,0.039479", \
				        "0.010269,0.011750,0.013537,0.017196,0.024710,0.039960", \
				        "0.014486,0.015679,0.017171,0.020400,0.027411,0.042117", \
				        "0.024256,0.025059,0.026168,0.028697,0.034646,0.048173");
			}
			fall_power(Power_X4) {
				values ("0.005377,0.003692,0.001758,-0.002091,-0.009818,-0.025266", \
				        "0.005362,0.003681,0.001740,-0.002116,-0.009831,-0.025266", \
				        "0.005373,0.003692,0.001783,-0.002089,-0.009807,-0.025255", \
				        "0.005593,0.003853,0.001944,-0.001955,-0.009718,-0.025216", \
				        "0.006276,0.004454,0.002467,-0.001515,-0.009391,-0.025009", \
				        "0.008213,0.006291,0.004140,-0.000075,-0.008240,-0.024179", \
				        "0.012960,0.010856,0.008512,0.003953,-0.004783,-0.021472", \
				        "0.023293,0.021012,0.018461,0.013499,0.004015,-0.013934");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & B1 & B2";

			rise_power(Power_X4) {
				values ("0.008583,0.010311,0.012261,0.016153,0.023923,0.039421", \
				        "0.008511,0.010222,0.012192,0.016093,0.023874,0.039402", \
				        "0.008470,0.010144,0.012117,0.016032,0.023822,0.039368", \
				        "0.008396,0.010099,0.012067,0.015968,0.023762,0.039321", \
				        "0.008717,0.010364,0.012284,0.016125,0.023846,0.039311", \
				        "0.010249,0.011726,0.013498,0.017160,0.024641,0.039884", \
				        "0.014594,0.015755,0.017270,0.020498,0.027508,0.042203", \
				        "0.024741,0.025502,0.026544,0.029041,0.035003,0.048528");
			}
			fall_power(Power_X4) {
				values ("0.005757,0.004052,0.002125,-0.001732,-0.009446,-0.024907", \
				        "0.005710,0.004031,0.002112,-0.001739,-0.009462,-0.024897", \
				        "0.005746,0.004042,0.002163,-0.001699,-0.009433,-0.024879", \
				        "0.005939,0.004240,0.002327,-0.001561,-0.009302,-0.024809", \
				        "0.006677,0.004892,0.002903,-0.001086,-0.008962,-0.024580", \
				        "0.008788,0.006846,0.004693,0.000473,-0.007709,-0.023665", \
				        "0.013778,0.011658,0.009318,0.004760,-0.003993,-0.020741", \
				        "0.024569,0.022306,0.019754,0.014802,0.005310,-0.012669");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !B2";

			rise_power(Power_X4) {
				values ("0.015705,0.017424,0.019370,0.023259,0.031017,0.046545", \
				        "0.015697,0.017405,0.019339,0.023234,0.030992,0.046527", \
				        "0.015729,0.017438,0.019377,0.023244,0.031001,0.046518", \
				        "0.016036,0.017691,0.019618,0.023451,0.031133,0.046610", \
				        "0.016893,0.018491,0.020362,0.024107,0.031687,0.047018", \
				        "0.018928,0.020491,0.022288,0.025903,0.033272,0.048292", \
				        "0.023594,0.025024,0.026733,0.030154,0.037183,0.051715", \
				        "0.033694,0.034966,0.036515,0.039659,0.046210,0.059986");
			}
			fall_power(Power_X4) {
				values ("0.005540,0.003869,0.001927,-0.001925,-0.009660,-0.025148", \
				        "0.005517,0.003824,0.001904,-0.001940,-0.009653,-0.025102", \
				        "0.005431,0.003778,0.001847,-0.001989,-0.009694,-0.025144", \
				        "0.005373,0.003726,0.001833,-0.002025,-0.009748,-0.025221", \
				        "0.005552,0.003847,0.001926,-0.001940,-0.009672,-0.025143", \
				        "0.006684,0.004838,0.002768,-0.001269,-0.009185,-0.024797", \
				        "0.010352,0.008300,0.005995,0.001522,-0.007012,-0.023300", \
				        "0.019726,0.017346,0.014736,0.009684,0.000115,-0.017777");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !A2 & !B2";

			rise_power(Power_X4) {
				values ("0.014784,0.016455,0.018402,0.022298,0.030057,0.045572", \
				        "0.014734,0.016450,0.018384,0.022272,0.030029,0.045553", \
				        "0.014752,0.016487,0.018415,0.022293,0.030042,0.045558", \
				        "0.015063,0.016736,0.018649,0.022485,0.030162,0.045643", \
				        "0.015937,0.017546,0.019403,0.023148,0.030722,0.046057", \
				        "0.017941,0.019534,0.021330,0.024950,0.032316,0.047312", \
				        "0.022622,0.024100,0.025771,0.029195,0.036239,0.050747", \
				        "0.032750,0.034036,0.035573,0.038705,0.045262,0.059010");
			}
			fall_power(Power_X4) {
				values ("0.002344,0.000660,-0.001267,-0.005138,-0.012875,-0.028369", \
				        "0.002285,0.000617,-0.001294,-0.005146,-0.012858,-0.028316", \
				        "0.002220,0.000554,-0.001358,-0.005187,-0.012897,-0.028352", \
				        "0.002148,0.000497,-0.001414,-0.005252,-0.012956,-0.028429", \
				        "0.002421,0.000666,-0.001279,-0.005147,-0.012880,-0.028370", \
				        "0.003763,0.001864,-0.000256,-0.004359,-0.012343,-0.027993", \
				        "0.007868,0.005669,0.003285,-0.001313,-0.010004,-0.026424", \
				        "0.017653,0.015156,0.012439,0.007238,-0.002556,-0.020675");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & A2 & !B2";

			rise_power(Power_X4) {
				values ("0.015235,0.016945,0.018874,0.022761,0.030524,0.046048", \
				        "0.015210,0.016898,0.018862,0.022739,0.030522,0.046038", \
				        "0.015242,0.016953,0.018901,0.022774,0.030513,0.046020", \
				        "0.015543,0.017225,0.019155,0.022968,0.030666,0.046115", \
				        "0.016457,0.018048,0.019913,0.023676,0.031253,0.046552", \
				        "0.018470,0.020070,0.021863,0.025508,0.032894,0.047897", \
				        "0.023184,0.024623,0.026338,0.029797,0.036877,0.051438", \
				        "0.033382,0.034669,0.036218,0.039378,0.045971,0.059812");
			}
			fall_power(Power_X4) {
				values ("0.002692,0.001017,-0.000918,-0.004778,-0.012514,-0.028003", \
				        "0.002634,0.000988,-0.000944,-0.004779,-0.012497,-0.027951", \
				        "0.002560,0.000924,-0.000999,-0.004827,-0.012532,-0.027998", \
				        "0.002522,0.000884,-0.001041,-0.004854,-0.012565,-0.028044", \
				        "0.002811,0.001089,-0.000873,-0.004745,-0.012478,-0.027952", \
				        "0.004254,0.002340,0.000230,-0.003899,-0.011896,-0.027567", \
				        "0.008423,0.006255,0.003868,-0.000711,-0.009427,-0.025892", \
				        "0.018413,0.015962,0.013230,0.008025,-0.001739,-0.019874");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !B1";

			rise_power(Power_X4) {
				values ("0.016702,0.018416,0.020366,0.024251,0.031995,0.047512", \
				        "0.016662,0.018353,0.020310,0.024200,0.031957,0.047478", \
				        "0.016628,0.018311,0.020269,0.024166,0.031924,0.047467", \
				        "0.016548,0.018275,0.020240,0.024138,0.031908,0.047443", \
				        "0.016734,0.018418,0.020358,0.024230,0.031971,0.047483", \
				        "0.017864,0.019471,0.021326,0.025065,0.032661,0.047966", \
				        "0.021314,0.022838,0.024556,0.028079,0.035287,0.050092", \
				        "0.029451,0.030805,0.032346,0.035560,0.042228,0.056214");
			}
			fall_power(Power_X4) {
				values ("0.008533,0.006872,0.004953,0.001075,-0.006661,-0.022148", \
				        "0.008490,0.006816,0.004902,0.001039,-0.006681,-0.022133", \
				        "0.008428,0.006769,0.004856,0.000994,-0.006735,-0.022206", \
				        "0.008433,0.006745,0.004850,0.000973,-0.006766,-0.022269", \
				        "0.008497,0.006827,0.004910,0.001063,-0.006682,-0.022186", \
				        "0.009295,0.007520,0.005539,0.001599,-0.006246,-0.021832", \
				        "0.012139,0.010238,0.008102,0.003894,-0.004333,-0.020369", \
				        "0.019881,0.017760,0.015373,0.010741,0.001813,-0.015286");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !A2 & !B1";

			rise_power(Power_X4) {
				values ("0.015737,0.017467,0.019409,0.023282,0.031030,0.046542", \
				        "0.015706,0.017404,0.019350,0.023238,0.031004,0.046507", \
				        "0.015648,0.017360,0.019307,0.023208,0.030985,0.046486", \
				        "0.015606,0.017306,0.019286,0.023183,0.030962,0.046476", \
				        "0.015809,0.017448,0.019405,0.023269,0.030998,0.046509", \
				        "0.016924,0.018512,0.020375,0.024116,0.031692,0.047013", \
				        "0.020356,0.021880,0.023612,0.027125,0.034334,0.049124", \
				        "0.028495,0.029815,0.031419,0.034603,0.041271,0.055248");
			}
			fall_power(Power_X4) {
				values ("0.005374,0.003699,0.001745,-0.002113,-0.009871,-0.025365", \
				        "0.005342,0.003641,0.001703,-0.002157,-0.009889,-0.025345", \
				        "0.005276,0.003577,0.001658,-0.002204,-0.009938,-0.025416", \
				        "0.005214,0.003553,0.001644,-0.002229,-0.009971,-0.025474", \
				        "0.005327,0.003636,0.001722,-0.002144,-0.009885,-0.025397", \
				        "0.006234,0.004442,0.002434,-0.001545,-0.009409,-0.025025", \
				        "0.009396,0.007417,0.005219,0.000935,-0.007377,-0.023505", \
				        "0.017552,0.015278,0.012850,0.008102,-0.000997,-0.018271");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & A2 & !B1";

			rise_power(Power_X4) {
				values ("0.016197,0.017926,0.019864,0.023745,0.031505,0.047010", \
				        "0.016141,0.017868,0.019805,0.023697,0.031458,0.046983", \
				        "0.016087,0.017837,0.019771,0.023662,0.031439,0.046951", \
				        "0.016069,0.017771,0.019731,0.023634,0.031417,0.046942", \
				        "0.016242,0.017923,0.019866,0.023726,0.031479,0.046969", \
				        "0.017381,0.019005,0.020870,0.024619,0.032192,0.047498", \
				        "0.020931,0.022419,0.024130,0.027667,0.034895,0.049705", \
				        "0.029133,0.030425,0.032008,0.035207,0.041932,0.055953");
			}
			fall_power(Power_X4) {
				values ("0.005758,0.004058,0.002102,-0.001755,-0.009492,-0.024982", \
				        "0.005707,0.003996,0.002057,-0.001797,-0.009526,-0.024982", \
				        "0.005623,0.003948,0.002017,-0.001836,-0.009569,-0.025050", \
				        "0.005598,0.003921,0.002013,-0.001845,-0.009586,-0.025080", \
				        "0.005717,0.004023,0.002106,-0.001752,-0.009486,-0.024982", \
				        "0.006702,0.004887,0.002878,-0.001099,-0.008974,-0.024608", \
				        "0.009939,0.007969,0.005789,0.001500,-0.006838,-0.022998", \
				        "0.018311,0.016065,0.013625,0.008886,-0.000244,-0.017557");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OAI33_X1
 Cell Description	: Combinational cell (OAI33_X1) with drive strength X1
*******************************************************************************************/

cell (OAI33_X1) {

	area               	: 1.862000;

	cell_leakage_power 	: 14513.208391;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !B1 & !B2 & !B3";
		value      	: 3148.700000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !B1 & !B2 & !B3";
		value      	: 5348.520000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !B1 & !B2 & B3";
		value      	: 13418.490000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !B1 & !B2 & B3";
		value      	: 9908.564000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & B1 & !B2 & !B3";
		value      	: 13418.550000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & B1 & !B2 & !B3";
		value      	: 10947.320000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & B1 & !B2 & B3";
		value      	: 17741.790000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & B1 & !B2 & B3";
		value      	: 13742.980000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !B1 & !B2 & !B3";
		value      	: 5348.545000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !B1 & !B2 & !B3";
		value      	: 4553.351000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !B1 & !B2 & B3";
		value      	: 10947.320000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !B1 & !B2 & B3";
		value      	: 13742.160000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & B1 & !B2 & !B3";
		value      	: 11986.030000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & B1 & !B2 & !B3";
		value      	: 14780.850000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & B1 & !B2 & B3";
		value      	: 14781.790000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & B1 & !B2 & B3";
		value      	: 17576.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !B1 & B2 & !B3";
		value      	: 13418.510000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !B1 & B2 & !B3";
		value      	: 10001.000000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !B1 & B2 & B3";
		value      	: 17743.290000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !B1 & B2 & B3";
		value      	: 13728.870000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & B1 & B2 & !B3";
		value      	: 17743.320000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & B1 & B2 & !B3";
		value      	: 13771.960000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & B1 & B2 & B3";
		value      	: 22067.280000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & B1 & B2 & B3";
		value      	: 18064.970000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !B1 & B2 & !B3";
		value      	: 11039.750000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !B1 & B2 & !B3";
		value      	: 13834.600000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !B1 & B2 & B3";
		value      	: 14767.680000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !B1 & B2 & B3";
		value      	: 17562.760000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & B1 & B2 & !B3";
		value      	: 14810.630000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & B1 & B2 & !B3";
		value      	: 17605.850000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & B1 & B2 & B3";
		value      	: 19103.760000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & B1 & B2 & B3";
		value      	: 21898.950000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !B1 & !B2 & !B3";
		value      	: 5348.531000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !B1 & !B2 & !B3";
		value      	: 4554.765000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !B1 & !B2 & B3";
		value      	: 10001.020000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !B1 & !B2 & B3";
		value      	: 13728.060000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & B1 & !B2 & !B3";
		value      	: 11039.770000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & B1 & !B2 & !B3";
		value      	: 14766.760000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & B1 & !B2 & B3";
		value      	: 13835.440000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & B1 & !B2 & B3";
		value      	: 17562.770000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !B1 & !B2 & !B3";
		value      	: 4554.775000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !B1 & !B2 & !B3";
		value      	: 3661.316000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !B1 & !B2 & B3";
		value      	: 13771.160000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !B1 & !B2 & B3";
		value      	: 18063.060000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & B1 & !B2 & !B3";
		value      	: 14809.700000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & B1 & !B2 & !B3";
		value      	: 19101.630000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & B1 & !B2 & B3";
		value      	: 17605.870000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & B1 & !B2 & B3";
		value      	: 21898.250000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !B1 & B2 & !B3";
		value      	: 10093.460000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !B1 & B2 & !B3";
		value      	: 13820.500000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !B1 & B2 & B3";
		value      	: 13821.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !B1 & B2 & B3";
		value      	: 17548.660000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & B1 & B2 & !B3";
		value      	: 13864.420000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & B1 & B2 & !B3";
		value      	: 17591.750000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & B1 & B2 & B3";
		value      	: 18157.430000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & B1 & B2 & B3";
		value      	: 21884.860000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !B1 & B2 & !B3";
		value      	: 13863.600000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !B1 & B2 & !B3";
		value      	: 18155.500000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !B1 & B2 & B3";
		value      	: 17591.760000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !B1 & B2 & B3";
		value      	: 21884.130000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & B1 & B2 & !B3";
		value      	: 17634.560000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & B1 & B2 & !B3";
		value      	: 21927.190000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & B1 & B2 & B3";
		value      	: 21927.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & B1 & B2 & B3";
		value      	: 26220.390000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000701;
		fall_capacitance	: 0.000642;
		rise_capacitance	: 0.000760;
		fall_capacitance_range		(0.000562, 0.000755);
		rise_capacitance_range		(0.000641, 0.000947);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002,-0.000005");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000657;
		fall_capacitance	: 0.000628;
		rise_capacitance	: 0.000687;
		fall_capacitance_range		(0.000518, 0.000709);
		rise_capacitance_range		(0.000590, 0.000831);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000053,0.000040,0.000026,0.000014,0.000008,0.000004,0.000001,-0.000003");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000647;
		fall_capacitance	: 0.000643;
		rise_capacitance	: 0.000652;
		fall_capacitance_range		(0.000514, 0.000733);
		rise_capacitance_range		(0.000562, 0.000784);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000012,0.000009,0.000006,0.000004,0.000003,0.000001,-0.000000,-0.000003");
			}

		}
	}

	pin (B1) {

		direction		: input;
		capacitance		: 0.000651;
		fall_capacitance	: 0.000588;
		rise_capacitance	: 0.000713;
		fall_capacitance_range		(0.000524, 0.000646);
		rise_capacitance_range		(0.000592, 0.000887);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (B2) {

		direction		: input;
		capacitance		: 0.000632;
		fall_capacitance	: 0.000598;
		rise_capacitance	: 0.000667;
		fall_capacitance_range		(0.000500, 0.000653);
		rise_capacitance_range		(0.000562, 0.000788);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000002,-0.000004");
			}

		}
	}

	pin (B3) {

		direction		: input;
		capacitance		: 0.000654;
		fall_capacitance	: 0.000638;
		rise_capacitance	: 0.000670;
		fall_capacitance_range		(0.000508, 0.000711);
		rise_capacitance_range		(0.000593, 0.000773);
		max_transition		: 0.960000;

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(((A1 | A2) | A3) & ((B1 | B2) | B3))";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037246,0.040412,0.046758,0.059017,0.082563,0.127916", \
				        "0.040467,0.043538,0.049824,0.062174,0.085683,0.131049", \
				        "0.047066,0.050100,0.056096,0.068312,0.091777,0.137067", \
				        "0.061196,0.064292,0.070073,0.081430,0.104335,0.149422", \
				        "0.078409,0.082580,0.090325,0.105047,0.130482,0.174892", \
				        "0.094193,0.099670,0.110144,0.129624,0.164068,0.221552", \
				        "0.100788,0.108327,0.122314,0.148468,0.194473,0.271762", \
				        "0.079984,0.090125,0.109227,0.144358,0.206374,0.310893");
			}
			cell_rise(Timing_X1) {
				values ("0.055453,0.063387,0.079312,0.110633,0.172776,0.297017", \
				        "0.058455,0.066430,0.082235,0.113354,0.175599,0.299860", \
				        "0.065050,0.072836,0.088519,0.119594,0.181533,0.305512", \
				        "0.079960,0.087039,0.102307,0.132745,0.194075,0.317424", \
				        "0.108979,0.117064,0.132672,0.161251,0.221140,0.342905", \
				        "0.150585,0.160894,0.180391,0.216108,0.279490,0.397803", \
				        "0.215332,0.227998,0.251943,0.296012,0.375378,0.512284", \
				        "0.323973,0.338981,0.368259,0.421925,0.518915,0.688829");
			}
			fall_transition(Timing_X1) {
				values ("0.032388,0.035073,0.040265,0.049635,0.068273,0.105767", \
				        "0.032021,0.034679,0.040001,0.049434,0.068363,0.105822", \
				        "0.030537,0.033300,0.038816,0.049206,0.068172,0.105837", \
				        "0.033898,0.035853,0.040138,0.048926,0.067466,0.105782", \
				        "0.046887,0.049112,0.053432,0.060803,0.074278,0.106432", \
				        "0.068570,0.071276,0.076564,0.086035,0.102596,0.130885", \
				        "0.105652,0.109218,0.116089,0.128444,0.149874,0.185817", \
				        "0.170401,0.175864,0.185259,0.202197,0.230650,0.277185");
			}
			rise_transition(Timing_X1) {
				values ("0.095542,0.103704,0.118384,0.147212,0.203508,0.314435", \
				        "0.095232,0.103537,0.119566,0.147224,0.203511,0.314409", \
				        "0.094055,0.102659,0.119134,0.150596,0.212145,0.314419", \
				        "0.094224,0.101398,0.116176,0.146606,0.203534,0.314438", \
				        "0.103266,0.109397,0.121501,0.147213,0.202506,0.314435", \
				        "0.130323,0.135735,0.146420,0.167519,0.212508,0.314011", \
				        "0.176129,0.181463,0.192748,0.215670,0.260093,0.344407", \
				        "0.253406,0.258767,0.269405,0.292949,0.342405,0.438030");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !A3 & !B1 & B2 & !B3 | !A2 & !A3 & !B1 & !B2 & B3";
			sdf_cond	   : "(A2 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b0) || (A2 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037246,0.040412,0.046758,0.059017,0.082563,0.127916", \
				        "0.040467,0.043538,0.049824,0.062174,0.085683,0.131049", \
				        "0.047066,0.050100,0.056096,0.068312,0.091777,0.137067", \
				        "0.061196,0.064292,0.070073,0.081430,0.104335,0.149422", \
				        "0.078409,0.082580,0.090325,0.105047,0.130482,0.174892", \
				        "0.094193,0.099670,0.110144,0.129624,0.164068,0.221552", \
				        "0.100788,0.108327,0.122314,0.148468,0.194473,0.271762", \
				        "0.079984,0.090125,0.109227,0.144358,0.206374,0.310893");
			}
			cell_rise(Timing_X1) {
				values ("0.055453,0.063387,0.079267,0.110521,0.172604,0.296747", \
				        "0.058455,0.066430,0.082235,0.113354,0.175530,0.299698", \
				        "0.065050,0.072836,0.088519,0.119594,0.181533,0.305411", \
				        "0.079774,0.086926,0.102091,0.132575,0.193924,0.317245", \
				        "0.108342,0.116432,0.132059,0.160654,0.220572,0.342374", \
				        "0.149151,0.159376,0.178896,0.214631,0.278185,0.396478", \
				        "0.211849,0.224659,0.248592,0.292790,0.372330,0.509470", \
				        "0.315172,0.330614,0.360285,0.414430,0.512035,0.682403");
			}
			fall_transition(Timing_X1) {
				values ("0.032388,0.035073,0.040265,0.049635,0.068273,0.105767", \
				        "0.032021,0.034679,0.040001,0.049434,0.068363,0.105822", \
				        "0.030537,0.033300,0.038816,0.049206,0.068172,0.105837", \
				        "0.033898,0.035853,0.040138,0.048926,0.067466,0.105782", \
				        "0.046887,0.049112,0.053432,0.060803,0.074278,0.106432", \
				        "0.068570,0.071276,0.076564,0.086035,0.102596,0.130885", \
				        "0.105652,0.109218,0.116089,0.128444,0.149874,0.185817", \
				        "0.170401,0.175864,0.185259,0.202197,0.230650,0.277185");
			}
			rise_transition(Timing_X1) {
				values ("0.095542,0.103704,0.119676,0.150642,0.212157,0.333467", \
				        "0.095232,0.103537,0.119566,0.150530,0.212163,0.333470", \
				        "0.094055,0.102659,0.119134,0.150596,0.212145,0.333449", \
				        "0.093658,0.101379,0.117429,0.149987,0.212115,0.333441", \
				        "0.102760,0.109426,0.122850,0.150692,0.211122,0.333457", \
				        "0.131920,0.137701,0.149209,0.171455,0.221439,0.333111", \
				        "0.186090,0.191152,0.202763,0.226343,0.273166,0.364306", \
				        "0.287635,0.291368,0.299966,0.321801,0.370462,0.466726");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !A3 & !B1 & B2 & B3";
			sdf_cond	   : "(A2 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027348,0.029567,0.034101,0.042975,0.060395,0.094515", \
				        "0.030690,0.032875,0.037306,0.046261,0.063640,0.097783", \
				        "0.037701,0.039767,0.043993,0.052774,0.070136,0.104157", \
				        "0.048358,0.051215,0.056337,0.066239,0.083481,0.117331", \
				        "0.058822,0.062665,0.069892,0.083336,0.106502,0.144437", \
				        "0.065060,0.070340,0.080311,0.098564,0.130283,0.182445", \
				        "0.057352,0.064772,0.078440,0.103588,0.146988,0.218324", \
				        "0.015005,0.024850,0.043874,0.078247,0.137879,0.236051");
			}
			cell_rise(Timing_X1) {
				values ("0.055429,0.063380,0.079312,0.110633,0.172776,0.297017", \
				        "0.058369,0.066341,0.082126,0.113354,0.175599,0.299860", \
				        "0.064980,0.072776,0.088486,0.119576,0.181522,0.305512", \
				        "0.079960,0.087039,0.102307,0.132745,0.194075,0.317424", \
				        "0.108979,0.117064,0.132672,0.161251,0.221140,0.342905", \
				        "0.150585,0.160894,0.180391,0.216108,0.279490,0.397803", \
				        "0.215332,0.227998,0.251943,0.296012,0.375378,0.512284", \
				        "0.323973,0.338981,0.368259,0.421925,0.518915,0.688829");
			}
			fall_transition(Timing_X1) {
				values ("0.019988,0.021964,0.025836,0.032986,0.047521,0.076709", \
				        "0.019749,0.021737,0.025646,0.032981,0.047473,0.076694", \
				        "0.020305,0.022108,0.025736,0.032804,0.047552,0.076687", \
				        "0.027122,0.028690,0.031618,0.036625,0.048555,0.076674", \
				        "0.039361,0.041293,0.044900,0.051229,0.062247,0.082673", \
				        "0.060063,0.062492,0.067160,0.075398,0.089734,0.113481", \
				        "0.096128,0.099548,0.105792,0.116758,0.135367,0.166106", \
				        "0.160183,0.164958,0.173677,0.188909,0.214206,0.254677");
			}
			rise_transition(Timing_X1) {
				values ("0.096032,0.103701,0.118384,0.147212,0.203508,0.314435", \
				        "0.095728,0.103503,0.118356,0.147224,0.203511,0.314409", \
				        "0.094570,0.102650,0.117837,0.147234,0.203512,0.314419", \
				        "0.094224,0.101398,0.116176,0.146606,0.203534,0.314438", \
				        "0.103266,0.109397,0.121501,0.147213,0.202506,0.314435", \
				        "0.130323,0.135735,0.146420,0.167519,0.212508,0.314011", \
				        "0.176129,0.181463,0.192748,0.215670,0.260093,0.344407", \
				        "0.253406,0.258767,0.269405,0.292949,0.342405,0.438030");
			}
		}

		timing () {

			related_pin	   : "A1";
			when	           : "!A2 & !A3 & B1";
			sdf_cond	   : "(A2 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.020890,0.022994,0.027290,0.035801,0.052701,0.086326", \
				        "0.024247,0.026306,0.030561,0.039106,0.055983,0.089577", \
				        "0.030694,0.032986,0.037320,0.045651,0.062479,0.096046", \
				        "0.037959,0.041204,0.047070,0.057797,0.075887,0.109173", \
				        "0.043768,0.048170,0.056369,0.071140,0.096098,0.135907", \
				        "0.043488,0.049647,0.061003,0.081294,0.115524,0.170333", \
				        "0.026778,0.035469,0.051177,0.079154,0.126195,0.201394", \
				        "-0.027250,-0.015864,0.005873,0.044142,0.108816,0.212434");
			}
			cell_rise(Timing_X1) {
				values ("0.053837,0.061661,0.077307,0.108405,0.170230,0.293627", \
				        "0.056775,0.064604,0.080218,0.111225,0.173016,0.296455", \
				        "0.063417,0.071072,0.086581,0.117342,0.178914,0.302140", \
				        "0.078566,0.085536,0.100321,0.130522,0.191477,0.314044", \
				        "0.107142,0.115166,0.130631,0.159254,0.218569,0.339534", \
				        "0.147833,0.158149,0.177503,0.213368,0.276844,0.394434", \
				        "0.211056,0.223769,0.247625,0.291890,0.371385,0.508363", \
				        "0.316406,0.331517,0.361128,0.415200,0.512525,0.682546");
			}
			fall_transition(Timing_X1) {
				values ("0.014709,0.016686,0.020465,0.027811,0.042385,0.071500", \
				        "0.014604,0.016478,0.020416,0.027657,0.042308,0.071462", \
				        "0.017203,0.018630,0.021762,0.027878,0.042366,0.071457", \
				        "0.024518,0.026141,0.029324,0.034327,0.044705,0.071493", \
				        "0.036576,0.038566,0.042322,0.048785,0.060056,0.079619", \
				        "0.057457,0.059893,0.064711,0.073019,0.087393,0.111366", \
				        "0.094007,0.097394,0.103616,0.114668,0.133245,0.163877", \
				        "0.159067,0.163739,0.172329,0.187437,0.212546,0.252731");
			}
			rise_transition(Timing_X1) {
				values ("0.058432,0.065831,0.080262,0.108211,0.163648,0.274421", \
				        "0.058123,0.065593,0.080238,0.108222,0.163670,0.274401", \
				        "0.056876,0.064709,0.079840,0.108124,0.163618,0.274424", \
				        "0.056618,0.063551,0.077992,0.107460,0.163659,0.274426", \
				        "0.066110,0.071863,0.083350,0.108254,0.162627,0.274429", \
				        "0.085445,0.092061,0.104784,0.128083,0.172715,0.274038", \
				        "0.117452,0.124647,0.139172,0.166382,0.216277,0.304551", \
				        "0.174336,0.182466,0.198218,0.228778,0.286639,0.391039");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.048180,0.051270,0.057497,0.069650,0.093219,0.138774", \
				        "0.051227,0.054235,0.060442,0.072689,0.096275,0.141822", \
				        "0.057377,0.060451,0.066450,0.078702,0.102222,0.147750", \
				        "0.070982,0.073830,0.079465,0.091289,0.114605,0.159948", \
				        "0.092015,0.095862,0.103004,0.116681,0.140811,0.185243", \
				        "0.113318,0.118221,0.127922,0.146124,0.178597,0.233917", \
				        "0.127879,0.134798,0.147613,0.171890,0.215387,0.289441", \
				        "0.121209,0.130463,0.147832,0.180153,0.238003,0.337305");
			}
			cell_rise(Timing_X1) {
				values ("0.091330,0.099206,0.115216,0.146332,0.208579,0.332711", \
				        "0.094301,0.102146,0.118077,0.149288,0.211561,0.335826", \
				        "0.099799,0.107789,0.123561,0.154868,0.217233,0.341679", \
				        "0.110012,0.118057,0.134102,0.165468,0.227994,0.352629", \
				        "0.130090,0.138676,0.155178,0.186819,0.249315,0.373862", \
				        "0.163932,0.174070,0.193510,0.229579,0.295497,0.419513", \
				        "0.224336,0.236685,0.259665,0.302193,0.379024,0.515951", \
				        "0.329006,0.343998,0.372511,0.424297,0.516921,0.678750");
			}
			fall_transition(Timing_X1) {
				values ("0.037654,0.040324,0.045564,0.055065,0.074061,0.111820", \
				        "0.037681,0.040322,0.045553,0.055035,0.074095,0.111813", \
				        "0.037079,0.039892,0.045246,0.055014,0.074018,0.111854", \
				        "0.037404,0.039837,0.044761,0.054053,0.073705,0.111806", \
				        "0.049650,0.051886,0.056252,0.063494,0.078011,0.111889", \
				        "0.071563,0.074276,0.079630,0.088911,0.105424,0.133621", \
				        "0.107669,0.111327,0.118334,0.130806,0.152489,0.188671", \
				        "0.169054,0.174405,0.184078,0.201308,0.230450,0.278151");
			}
			rise_transition(Timing_X1) {
				values ("0.096260,0.104107,0.118373,0.147186,0.203521,0.314376", \
				        "0.096246,0.104069,0.119575,0.150559,0.212080,0.314465", \
				        "0.096246,0.104091,0.119619,0.150563,0.212147,0.314420", \
				        "0.096395,0.104161,0.119684,0.150577,0.203512,0.314429", \
				        "0.102455,0.109210,0.122993,0.151656,0.212116,0.314444", \
				        "0.124957,0.130402,0.141157,0.163198,0.210557,0.314759", \
				        "0.162335,0.167343,0.178082,0.200122,0.244978,0.335375", \
				        "0.225860,0.230365,0.240477,0.261955,0.307885,0.401553");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !A3 & !B1 & B2 & !B3 | !A1 & !A3 & !B1 & !B2 & B3";
			sdf_cond	   : "(A1 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b0) || (A1 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.048180,0.051270,0.057497,0.069650,0.093219,0.138774", \
				        "0.051227,0.054235,0.060442,0.072689,0.096275,0.141822", \
				        "0.057377,0.060451,0.066450,0.078702,0.102222,0.147750", \
				        "0.070982,0.073830,0.079465,0.091289,0.114605,0.159948", \
				        "0.092015,0.095862,0.103004,0.116681,0.140811,0.185243", \
				        "0.113318,0.118221,0.127922,0.146124,0.178597,0.233917", \
				        "0.127879,0.134798,0.147613,0.171890,0.215387,0.289441", \
				        "0.121209,0.130463,0.147832,0.180153,0.238003,0.337305");
			}
			cell_rise(Timing_X1) {
				values ("0.091330,0.099206,0.115181,0.146202,0.208473,0.332476", \
				        "0.094301,0.102146,0.118077,0.149288,0.211561,0.335722", \
				        "0.099799,0.107789,0.123561,0.154868,0.217233,0.341586", \
				        "0.110012,0.118057,0.134102,0.165468,0.227993,0.352534", \
				        "0.130090,0.138671,0.155178,0.186819,0.249315,0.373807", \
				        "0.163615,0.173738,0.193138,0.229287,0.295283,0.419304", \
				        "0.222016,0.234536,0.257577,0.300283,0.377362,0.514593", \
				        "0.322100,0.337461,0.366252,0.418641,0.511835,0.674230");
			}
			fall_transition(Timing_X1) {
				values ("0.037654,0.040324,0.045564,0.055065,0.074061,0.111820", \
				        "0.037681,0.040322,0.045553,0.055035,0.074095,0.111813", \
				        "0.037079,0.039892,0.045246,0.055014,0.074018,0.111854", \
				        "0.037404,0.039837,0.044761,0.054053,0.073705,0.111806", \
				        "0.049650,0.051886,0.056252,0.063494,0.078011,0.111889", \
				        "0.071563,0.074276,0.079630,0.088911,0.105424,0.133621", \
				        "0.107669,0.111327,0.118334,0.130806,0.152489,0.188671", \
				        "0.169054,0.174405,0.184078,0.201308,0.230450,0.278151");
			}
			rise_transition(Timing_X1) {
				values ("0.096260,0.104107,0.119641,0.150493,0.212095,0.333435", \
				        "0.096246,0.104069,0.119575,0.150559,0.212080,0.333455", \
				        "0.096246,0.104091,0.119619,0.150563,0.212147,0.333488", \
				        "0.096395,0.104161,0.119684,0.150577,0.212158,0.333436", \
				        "0.102455,0.109172,0.122993,0.151656,0.212116,0.333474", \
				        "0.126255,0.131996,0.143661,0.166727,0.219224,0.333849", \
				        "0.169980,0.174825,0.186056,0.209170,0.257129,0.354759", \
				        "0.250700,0.254155,0.263074,0.283979,0.330912,0.427681");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !A3 & !B1 & B2 & B3";
			sdf_cond	   : "(A1 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.034440,0.036730,0.041337,0.050335,0.068023,0.102523", \
				        "0.037631,0.039871,0.044384,0.053520,0.071231,0.105715", \
				        "0.044193,0.046415,0.050840,0.059863,0.077593,0.112052", \
				        "0.056939,0.059476,0.064242,0.073407,0.090763,0.125062", \
				        "0.071163,0.074704,0.081284,0.093802,0.115658,0.152083", \
				        "0.082887,0.087585,0.096668,0.113647,0.143472,0.193435", \
				        "0.083613,0.090267,0.102649,0.125679,0.166293,0.234365", \
				        "0.055910,0.064872,0.081695,0.112929,0.167971,0.260623");
			}
			cell_rise(Timing_X1) {
				values ("0.091301,0.099194,0.115216,0.146332,0.208579,0.332711", \
				        "0.094258,0.102113,0.118028,0.149237,0.211557,0.335826", \
				        "0.099785,0.107693,0.123505,0.154836,0.217231,0.341679", \
				        "0.109982,0.118016,0.133964,0.165458,0.227994,0.352629", \
				        "0.130031,0.138676,0.155147,0.186781,0.249300,0.373862", \
				        "0.163932,0.174070,0.193510,0.229579,0.295497,0.419513", \
				        "0.224336,0.236685,0.259665,0.302193,0.379024,0.515951", \
				        "0.329006,0.343998,0.372511,0.424297,0.516921,0.678750");
			}
			fall_transition(Timing_X1) {
				values ("0.024308,0.026382,0.030287,0.037540,0.052074,0.081460", \
				        "0.024320,0.026342,0.030221,0.037522,0.052148,0.081454", \
				        "0.023973,0.026018,0.030032,0.037513,0.052207,0.081437", \
				        "0.029232,0.030767,0.033474,0.039517,0.052405,0.081465", \
				        "0.041920,0.043786,0.047302,0.053525,0.064306,0.085848", \
				        "0.062578,0.065047,0.069708,0.077921,0.092038,0.115556", \
				        "0.097399,0.100805,0.107140,0.118172,0.137065,0.168178", \
				        "0.157709,0.162572,0.171500,0.186931,0.212952,0.254475");
			}
			rise_transition(Timing_X1) {
				values ("0.096778,0.104075,0.118373,0.147186,0.203521,0.314376", \
				        "0.096754,0.104071,0.118340,0.147148,0.203490,0.314465", \
				        "0.096752,0.104093,0.118436,0.147160,0.203493,0.314420", \
				        "0.096915,0.104157,0.118455,0.147157,0.203512,0.314429", \
				        "0.102926,0.109210,0.121763,0.148287,0.203524,0.314444", \
				        "0.124957,0.130402,0.141157,0.163198,0.210557,0.314759", \
				        "0.162335,0.167343,0.178082,0.200122,0.244978,0.335375", \
				        "0.225860,0.230365,0.240477,0.261955,0.307885,0.401553");
			}
		}

		timing () {

			related_pin	   : "A2";
			when	           : "!A1 & !A3 & B1";
			sdf_cond	   : "(A1 == 1'b0) && (A3 == 1'b0) && (B1 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027065,0.029280,0.033825,0.042719,0.060057,0.094205", \
				        "0.030277,0.032458,0.036960,0.045885,0.063218,0.097357", \
				        "0.037118,0.039226,0.043468,0.052283,0.069669,0.103741", \
				        "0.047507,0.050363,0.055603,0.065575,0.082888,0.116770", \
				        "0.057573,0.061541,0.068832,0.082396,0.105755,0.143803", \
				        "0.063728,0.068977,0.079092,0.097563,0.129457,0.181756", \
				        "0.056763,0.064425,0.078080,0.103326,0.146787,0.218063", \
				        "0.019502,0.029391,0.048148,0.082133,0.141024,0.238156");
			}
			cell_rise(Timing_X1) {
				values ("0.089720,0.097478,0.113109,0.144145,0.205964,0.329309", \
				        "0.092635,0.100368,0.115959,0.147028,0.208982,0.332408", \
				        "0.098187,0.105965,0.121427,0.152630,0.214691,0.338289", \
				        "0.108354,0.116246,0.132010,0.163243,0.225415,0.349218", \
				        "0.128161,0.136760,0.153190,0.184591,0.246687,0.370490", \
				        "0.161452,0.171612,0.190838,0.226925,0.292842,0.416109", \
				        "0.220639,0.233141,0.256041,0.298655,0.375493,0.512174", \
				        "0.322993,0.338118,0.366772,0.418975,0.511817,0.673559");
			}
			fall_transition(Timing_X1) {
				values ("0.019568,0.021569,0.025248,0.032564,0.047103,0.076307", \
				        "0.019383,0.021374,0.025305,0.032544,0.047137,0.076284", \
				        "0.020040,0.021774,0.025373,0.032367,0.047118,0.076266", \
				        "0.026969,0.028577,0.031613,0.036363,0.048311,0.076345", \
				        "0.039355,0.041272,0.044880,0.051197,0.062159,0.082547", \
				        "0.059739,0.062281,0.067052,0.075272,0.089683,0.113428", \
				        "0.094284,0.097709,0.104262,0.115492,0.134544,0.165732", \
				        "0.153840,0.158912,0.168102,0.184067,0.210396,0.252010");
			}
			rise_transition(Timing_X1) {
				values ("0.059242,0.066229,0.080344,0.108167,0.163656,0.274418", \
				        "0.059235,0.066222,0.080342,0.108096,0.163657,0.274422", \
				        "0.059249,0.066227,0.080319,0.108154,0.163645,0.274409", \
				        "0.059390,0.066348,0.080295,0.108162,0.163666,0.274411", \
				        "0.065582,0.071491,0.083825,0.109265,0.163636,0.274430", \
				        "0.082337,0.088403,0.100554,0.123958,0.170796,0.274786", \
				        "0.110306,0.116739,0.129489,0.154324,0.202551,0.295596", \
				        "0.158897,0.165851,0.179382,0.206086,0.257824,0.357113");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.053844,0.057118,0.063629,0.076210,0.100419,0.146820", \
				        "0.056781,0.059894,0.066462,0.079082,0.103261,0.149655", \
				        "0.062743,0.065943,0.072163,0.084893,0.109115,0.155476", \
				        "0.075959,0.078898,0.084966,0.097356,0.121376,0.167621", \
				        "0.099855,0.103601,0.110505,0.123913,0.147629,0.192772", \
				        "0.125410,0.130237,0.139529,0.157196,0.188812,0.242912", \
				        "0.146979,0.153520,0.165852,0.189003,0.230861,0.303044", \
				        "0.154088,0.162760,0.178775,0.209089,0.263996,0.359248");
			}
			cell_rise(Timing_X1) {
				values ("0.109067,0.117037,0.133026,0.164089,0.226361,0.350488", \
				        "0.112694,0.120568,0.136513,0.167728,0.230019,0.354261", \
				        "0.119171,0.127167,0.142925,0.174265,0.236580,0.360854", \
				        "0.130313,0.138218,0.154119,0.185286,0.247461,0.371819", \
				        "0.147688,0.155994,0.172291,0.203569,0.265816,0.390137", \
				        "0.169754,0.179294,0.197932,0.232772,0.298219,0.422710", \
				        "0.207586,0.218860,0.240060,0.279553,0.353037,0.488386", \
				        "0.287087,0.300401,0.325448,0.371462,0.454663,0.604851");
			}
			fall_transition(Timing_X1) {
				values ("0.043333,0.045928,0.051205,0.060671,0.079562,0.117394", \
				        "0.043353,0.045974,0.051201,0.060598,0.079599,0.117351", \
				        "0.042746,0.045567,0.050743,0.060614,0.079602,0.117374", \
				        "0.041360,0.043973,0.049328,0.059238,0.079281,0.117357", \
				        "0.052532,0.054772,0.058986,0.066117,0.081641,0.116872", \
				        "0.075005,0.077623,0.082834,0.091957,0.108140,0.136092", \
				        "0.111579,0.115176,0.121937,0.134178,0.155520,0.191263", \
				        "0.173267,0.178374,0.187776,0.204383,0.232854,0.280139");
			}
			rise_transition(Timing_X1) {
				values ("0.096762,0.104092,0.119616,0.150571,0.203487,0.314413", \
				        "0.096286,0.104075,0.119652,0.147167,0.203512,0.314438", \
				        "0.096258,0.104086,0.119636,0.147172,0.212144,0.314364", \
				        "0.096809,0.104078,0.118311,0.147164,0.203508,0.314407", \
				        "0.099615,0.106339,0.119788,0.147459,0.203487,0.314383", \
				        "0.116965,0.123461,0.134297,0.158317,0.208633,0.314780", \
				        "0.150558,0.155539,0.166526,0.189399,0.237090,0.332969", \
				        "0.212063,0.216123,0.225444,0.245816,0.290835,0.386991");
			}
		}

		timing () {

			related_pin	   : "A3";
			when	           : "!A1 & !A2 & !B1 & B2 & !B3 | !A1 & !A2 & !B1 & !B2 & B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.053844,0.057118,0.063629,0.076210,0.100419,0.146820", \
				        "0.056781,0.059894,0.066462,0.079082,0.103261,0.149655", \
				        "0.062743,0.065943,0.072163,0.084893,0.109115,0.155476", \
				        "0.075959,0.078898,0.084966,0.097356,0.121376,0.167621", \
				        "0.099855,0.103601,0.110505,0.123913,0.147629,0.192772", \
				        "0.125410,0.130237,0.139529,0.157196,0.188812,0.242912", \
				        "0.146979,0.153520,0.165852,0.189003,0.230861,0.303044", \
				        "0.154088,0.162760,0.178775,0.209089,0.263996,0.359248");
			}
			cell_rise(Timing_X1) {
				values ("0.109058,0.117037,0.133026,0.164089,0.226248,0.350275", \
				        "0.112694,0.120568,0.136513,0.167721,0.229926,0.354012", \
				        "0.119171,0.127167,0.142925,0.174227,0.236580,0.360757", \
				        "0.130302,0.138205,0.154064,0.185249,0.247404,0.371724", \
				        "0.147618,0.155929,0.172189,0.203458,0.265678,0.389969", \
				        "0.169754,0.179294,0.197916,0.232707,0.298105,0.422506", \
				        "0.206621,0.217920,0.239116,0.278757,0.352382,0.487782", \
				        "0.280190,0.293858,0.319359,0.365880,0.450012,0.601103");
			}
			fall_transition(Timing_X1) {
				values ("0.043333,0.045928,0.051205,0.060671,0.079562,0.117394", \
				        "0.043353,0.045974,0.051201,0.060598,0.079599,0.117351", \
				        "0.042746,0.045567,0.050743,0.060614,0.079602,0.117374", \
				        "0.041360,0.043973,0.049328,0.059238,0.079281,0.117357", \
				        "0.052532,0.054772,0.058986,0.066117,0.081641,0.116872", \
				        "0.075005,0.077623,0.082834,0.091957,0.108140,0.136092", \
				        "0.111579,0.115176,0.121937,0.134178,0.155520,0.191263", \
				        "0.173267,0.178374,0.187776,0.204383,0.232854,0.280139");
			}
			rise_transition(Timing_X1) {
				values ("0.096288,0.104092,0.119616,0.150571,0.212085,0.333420", \
				        "0.096286,0.104075,0.119652,0.150571,0.212135,0.333468", \
				        "0.096258,0.104086,0.119636,0.150584,0.212144,0.333467", \
				        "0.096304,0.104103,0.119671,0.150577,0.212181,0.333474", \
				        "0.099126,0.106354,0.120942,0.150830,0.212156,0.333451", \
				        "0.116965,0.123461,0.136455,0.161785,0.217218,0.333827", \
				        "0.156490,0.161608,0.173334,0.197442,0.248787,0.352188", \
				        "0.235007,0.238036,0.246450,0.266186,0.312585,0.412674");
			}
		}

		timing () {

			related_pin	   : "A3";
			when	           : "!A1 & !A2 & !B1 & B2 & B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b1) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.036990,0.039420,0.044301,0.053909,0.072403,0.107905", \
				        "0.040177,0.042534,0.047325,0.057036,0.075500,0.111014", \
				        "0.046818,0.049199,0.053807,0.063372,0.081801,0.117203", \
				        "0.060822,0.063322,0.067973,0.077145,0.095000,0.130213", \
				        "0.077791,0.081213,0.087611,0.099765,0.121223,0.157281", \
				        "0.093648,0.098243,0.106935,0.123357,0.152361,0.201199", \
				        "0.101696,0.107785,0.119467,0.141353,0.180311,0.246406", \
				        "0.088115,0.096462,0.111782,0.140795,0.192637,0.281078");
			}
			cell_rise(Timing_X1) {
				values ("0.109067,0.117004,0.132890,0.164086,0.226361,0.350488", \
				        "0.112611,0.120516,0.136426,0.167728,0.230019,0.354261", \
				        "0.119091,0.127098,0.142867,0.174265,0.236576,0.360854", \
				        "0.130313,0.138218,0.154119,0.185286,0.247461,0.371819", \
				        "0.147688,0.155994,0.172291,0.203569,0.265816,0.390137", \
				        "0.169625,0.179237,0.197932,0.232772,0.298219,0.422710", \
				        "0.207586,0.218860,0.240060,0.279553,0.353037,0.488386", \
				        "0.287087,0.300401,0.325448,0.371462,0.454663,0.604851");
			}
			fall_transition(Timing_X1) {
				values ("0.028284,0.030411,0.034414,0.041888,0.056578,0.085941", \
				        "0.028112,0.030236,0.034327,0.041834,0.056625,0.085948", \
				        "0.027211,0.029339,0.033604,0.041468,0.056532,0.085876", \
				        "0.031414,0.032879,0.036028,0.042194,0.056249,0.085834", \
				        "0.044625,0.046455,0.050118,0.055959,0.066325,0.088983", \
				        "0.066023,0.068349,0.072859,0.080785,0.094555,0.117582", \
				        "0.101680,0.104858,0.110885,0.121530,0.139864,0.170454", \
				        "0.162985,0.167623,0.175989,0.190717,0.215580,0.256224");
			}
			rise_transition(Timing_X1) {
				values ("0.096762,0.104067,0.118459,0.147152,0.203487,0.314413", \
				        "0.096766,0.104080,0.118406,0.147167,0.203512,0.314438", \
				        "0.096787,0.104065,0.118443,0.147172,0.203498,0.314364", \
				        "0.096809,0.104078,0.118311,0.147164,0.203508,0.314407", \
				        "0.099615,0.106339,0.119788,0.147459,0.203487,0.314383", \
				        "0.116238,0.122219,0.134297,0.158317,0.208633,0.314780", \
				        "0.150558,0.155539,0.166526,0.189399,0.237090,0.332969", \
				        "0.212063,0.216123,0.225444,0.245816,0.290835,0.386991");
			}
		}

		timing () {

			related_pin	   : "A3";
			when	           : "!A1 & !A2 & B1 & !B2 & !B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.036164,0.039371,0.045750,0.058028,0.081572,0.126948", \
				        "0.039168,0.042229,0.048561,0.060951,0.084496,0.129848", \
				        "0.045511,0.048580,0.054589,0.066863,0.090404,0.135671", \
				        "0.059401,0.062548,0.068413,0.079805,0.102749,0.147874", \
				        "0.075889,0.080143,0.088074,0.102930,0.128722,0.173243", \
				        "0.091456,0.097040,0.107702,0.127438,0.162017,0.219725", \
				        "0.100562,0.107892,0.121988,0.147930,0.193724,0.270764", \
				        "0.092041,0.101907,0.120039,0.153972,0.213880,0.315493");
			}
			cell_rise(Timing_X1) {
				values ("0.107544,0.115354,0.131014,0.162034,0.223881,0.347234", \
				        "0.111200,0.118920,0.134553,0.165677,0.227565,0.350944", \
				        "0.117624,0.125565,0.141171,0.172292,0.234207,0.357719", \
				        "0.128763,0.136572,0.152241,0.183230,0.245132,0.368673", \
				        "0.145968,0.154241,0.170347,0.201469,0.263363,0.386921", \
				        "0.167723,0.177212,0.195601,0.230419,0.295700,0.419471", \
				        "0.203761,0.215075,0.236121,0.275835,0.349377,0.484401", \
				        "0.275519,0.289346,0.314856,0.361746,0.445942,0.596797");
			}
			fall_transition(Timing_X1) {
				values ("0.031940,0.034567,0.039537,0.048967,0.067676,0.105123", \
				        "0.031419,0.034187,0.039309,0.048952,0.067668,0.105123", \
				        "0.029881,0.032756,0.038354,0.048587,0.067584,0.105104", \
				        "0.033854,0.035734,0.039980,0.048470,0.066907,0.105096", \
				        "0.047321,0.049495,0.053791,0.061018,0.074313,0.105998", \
				        "0.069489,0.072161,0.077356,0.086638,0.102904,0.130967", \
				        "0.105660,0.109371,0.116232,0.128560,0.149912,0.185823", \
				        "0.166813,0.172151,0.181794,0.198723,0.227355,0.274437");
			}
			rise_transition(Timing_X1) {
				values ("0.059263,0.066259,0.080326,0.108134,0.163640,0.274406", \
				        "0.059264,0.066213,0.080360,0.108179,0.163658,0.274401", \
				        "0.059266,0.066254,0.080359,0.108178,0.163662,0.274410", \
				        "0.059294,0.066263,0.080338,0.108165,0.163666,0.274403", \
				        "0.062128,0.068579,0.081663,0.108508,0.163637,0.274404", \
				        "0.074658,0.081164,0.094078,0.119101,0.168752,0.274776", \
				        "0.101307,0.107462,0.119965,0.144839,0.194900,0.293183", \
				        "0.151770,0.157847,0.170054,0.194554,0.243954,0.343985");
			}
		}

		timing () {

			related_pin	   : "A3";
			when	           : "!A1 & !A2 & B1 & B2 | !A1 & !A2 & B1 & B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (B2 == 1'b1) || (A1 == 1'b0) && (A2 == 1'b0) && (B1 == 1'b1) && (B3 == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.028563,0.031003,0.035962,0.045586,0.063983,0.099330", \
				        "0.031880,0.034247,0.039086,0.048733,0.067116,0.102427", \
				        "0.039079,0.041342,0.045859,0.055211,0.073481,0.108681", \
				        "0.051470,0.054226,0.059410,0.069148,0.086839,0.121692", \
				        "0.064612,0.068428,0.075563,0.088707,0.111529,0.148990", \
				        "0.075423,0.080497,0.090090,0.107865,0.138743,0.189779", \
				        "0.076860,0.083721,0.096574,0.120205,0.161633,0.230569", \
				        "0.055449,0.064525,0.081298,0.112508,0.167380,0.259567");
			}
			cell_rise(Timing_X1) {
				values ("0.107472,0.115264,0.130889,0.161944,0.223760,0.347125", \
				        "0.111028,0.118815,0.134435,0.165506,0.227382,0.350765", \
				        "0.117490,0.125411,0.140988,0.172086,0.233982,0.357475", \
				        "0.128705,0.136481,0.152258,0.183096,0.244937,0.368429", \
				        "0.145942,0.154223,0.170312,0.201413,0.263252,0.386732", \
				        "0.167451,0.176974,0.195435,0.230274,0.295563,0.419320", \
				        "0.204528,0.215793,0.236801,0.276345,0.349722,0.484600", \
				        "0.281954,0.295482,0.320610,0.366843,0.450190,0.600063");
			}
			fall_transition(Timing_X1) {
				values ("0.023197,0.025318,0.029457,0.036945,0.051644,0.080934", \
				        "0.022709,0.024926,0.029075,0.036708,0.051659,0.080906", \
				        "0.022706,0.024699,0.028576,0.036258,0.051479,0.080827", \
				        "0.029446,0.030941,0.033748,0.039122,0.051873,0.080733", \
				        "0.042511,0.044333,0.048001,0.053959,0.064427,0.085417", \
				        "0.063727,0.066069,0.070637,0.078540,0.092361,0.115539", \
				        "0.099185,0.102361,0.108473,0.119172,0.137468,0.168071", \
				        "0.159987,0.164660,0.173284,0.188202,0.213211,0.253748");
			}
			rise_transition(Timing_X1) {
				values ("0.059241,0.066228,0.080349,0.108125,0.163630,0.274404", \
				        "0.059238,0.066237,0.080299,0.108173,0.163649,0.274394", \
				        "0.059241,0.066225,0.080346,0.108173,0.163651,0.274410", \
				        "0.059281,0.066247,0.080238,0.108162,0.163660,0.274400", \
				        "0.062116,0.068536,0.081659,0.108502,0.163631,0.274401", \
				        "0.074677,0.081131,0.094126,0.119126,0.168764,0.274777", \
				        "0.100852,0.107035,0.119621,0.144607,0.194793,0.293143", \
				        "0.149641,0.155765,0.167955,0.192572,0.242391,0.343019");
			}
		}

		timing () {

			related_pin	   : "B1";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.054333,0.057519,0.063725,0.075947,0.099499,0.144941", \
				        "0.057841,0.060948,0.067005,0.079285,0.102871,0.148300", \
				        "0.064141,0.067351,0.073494,0.085536,0.109119,0.154656", \
				        "0.075495,0.078599,0.084776,0.096852,0.120200,0.165628", \
				        "0.092490,0.096084,0.102968,0.116148,0.140519,0.185917", \
				        "0.112114,0.116771,0.125482,0.141915,0.171309,0.222850", \
				        "0.125237,0.131856,0.144176,0.166558,0.205997,0.272374", \
				        "0.114660,0.124317,0.140826,0.172292,0.227738,0.319463");
			}
			cell_rise(Timing_X1) {
				values ("0.131783,0.139791,0.155595,0.187122,0.249686,0.374432", \
				        "0.134549,0.142390,0.158212,0.189720,0.252308,0.377126", \
				        "0.140128,0.148277,0.163981,0.195446,0.257951,0.382655", \
				        "0.153186,0.160834,0.176587,0.207852,0.269964,0.394345", \
				        "0.180921,0.188404,0.203889,0.234478,0.295886,0.419165", \
				        "0.237197,0.246138,0.261699,0.292378,0.352094,0.472587", \
				        "0.321967,0.332562,0.352851,0.391303,0.462066,0.587709", \
				        "0.453172,0.465832,0.491424,0.538810,0.626272,0.784049");
			}
			fall_transition(Timing_X1) {
				values ("0.031167,0.033813,0.039064,0.048601,0.067545,0.105078", \
				        "0.031145,0.033780,0.038850,0.048673,0.067550,0.105050", \
				        "0.030958,0.033577,0.038614,0.048445,0.067502,0.105089", \
				        "0.031460,0.033918,0.038817,0.048256,0.067333,0.105010", \
				        "0.038114,0.040332,0.044785,0.053259,0.069478,0.105273", \
				        "0.053648,0.055833,0.060307,0.068326,0.084139,0.115881", \
				        "0.083034,0.085321,0.090454,0.099864,0.116912,0.148327", \
				        "0.133950,0.137580,0.144070,0.156177,0.177710,0.214552");
			}
			rise_transition(Timing_X1) {
				values ("0.100612,0.107975,0.122451,0.151080,0.207655,0.355149", \
				        "0.100643,0.107962,0.122496,0.151075,0.207653,0.355158", \
				        "0.100606,0.107949,0.122483,0.151071,0.207671,0.355162", \
				        "0.100621,0.107948,0.122464,0.151075,0.207668,0.355169", \
				        "0.099964,0.107060,0.121593,0.150835,0.207674,0.355172", \
				        "0.115402,0.121489,0.133445,0.157955,0.209134,0.355127", \
				        "0.149096,0.156398,0.171102,0.197651,0.245553,0.372612", \
				        "0.200604,0.209602,0.282947,0.311630,0.365379,0.462257");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & !A3 & !B2 & !B3 | !A1 & !A2 & A3 & !B2 & !B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b0) && (B2 == 1'b0) && (B3 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (A3 == 1'b1) && (B2 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.054333,0.057519,0.063725,0.075947,0.099499,0.144941", \
				        "0.057841,0.060948,0.067005,0.079285,0.102871,0.148300", \
				        "0.064141,0.067351,0.073494,0.085536,0.109119,0.154656", \
				        "0.075495,0.078599,0.084776,0.096852,0.120200,0.165628", \
				        "0.092490,0.096084,0.102968,0.116148,0.140519,0.185917", \
				        "0.112114,0.116771,0.125482,0.141915,0.171309,0.222850", \
				        "0.125237,0.131856,0.144176,0.166558,0.205997,0.272374", \
				        "0.114660,0.124317,0.140826,0.172292,0.227738,0.319463");
			}
			cell_rise(Timing_X1) {
				values ("0.124706,0.132845,0.149147,0.181291,0.244591,0.369967", \
				        "0.127390,0.135478,0.151729,0.183764,0.247227,0.372610", \
				        "0.132949,0.141218,0.157418,0.189386,0.252721,0.378061", \
				        "0.145667,0.153691,0.169812,0.201641,0.264584,0.389622", \
				        "0.173257,0.180915,0.196965,0.228091,0.290129,0.414157", \
				        "0.229166,0.238045,0.254378,0.285648,0.345756,0.467131", \
				        "0.312432,0.323555,0.343973,0.383266,0.455011,0.581722", \
				        "0.441965,0.454604,0.480898,0.528879,0.617226,0.775487");
			}
			fall_transition(Timing_X1) {
				values ("0.031167,0.033813,0.039064,0.048601,0.067545,0.105078", \
				        "0.031145,0.033780,0.038850,0.048673,0.067550,0.105050", \
				        "0.030958,0.033577,0.038614,0.048445,0.067502,0.105089", \
				        "0.031460,0.033918,0.038817,0.048256,0.067333,0.105010", \
				        "0.038114,0.040332,0.044785,0.053259,0.069478,0.105273", \
				        "0.053648,0.055833,0.060307,0.068326,0.084139,0.115881", \
				        "0.083034,0.085321,0.090454,0.099864,0.116912,0.148327", \
				        "0.133950,0.137580,0.144070,0.156177,0.177710,0.214552");
			}
			rise_transition(Timing_X1) {
				values ("0.137606,0.145747,0.161378,0.192526,0.254373,0.374155", \
				        "0.137629,0.145752,0.161282,0.192548,0.254390,0.374140", \
				        "0.137618,0.145718,0.161345,0.192490,0.254373,0.374166", \
				        "0.137607,0.145698,0.161388,0.192490,0.254398,0.374178", \
				        "0.136898,0.144848,0.160389,0.192203,0.254376,0.374177", \
				        "0.153231,0.160031,0.173129,0.200142,0.256258,0.374093", \
				        "0.201482,0.207923,0.221696,0.247368,0.294902,0.392373", \
				        "0.282080,0.289399,0.304065,0.333006,0.387964,0.486485");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "!A1 & A2 & A3 & !B2 & !B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b1) && (B2 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.041558,0.043780,0.048224,0.057090,0.074367,0.108278", \
				        "0.045129,0.047325,0.051644,0.060491,0.077758,0.111692", \
				        "0.051953,0.054222,0.058623,0.067378,0.084621,0.118569", \
				        "0.064521,0.066967,0.071700,0.080738,0.098015,0.131999", \
				        "0.080047,0.083499,0.089700,0.101439,0.122329,0.158273", \
				        "0.094876,0.099422,0.108228,0.124440,0.152771,0.200188", \
				        "0.099132,0.106246,0.118777,0.141672,0.181671,0.247445", \
				        "0.075070,0.085021,0.102713,0.135609,0.192514,0.285280");
			}
			cell_rise(Timing_X1) {
				values ("0.130309,0.138375,0.154505,0.186336,0.249388,0.374432", \
				        "0.133057,0.141017,0.157087,0.188943,0.252016,0.377126", \
				        "0.138637,0.146860,0.162825,0.194645,0.257605,0.382655", \
				        "0.151590,0.159423,0.175369,0.206996,0.269575,0.394345", \
				        "0.179333,0.186884,0.202687,0.233584,0.295412,0.419165", \
				        "0.235565,0.244636,0.260534,0.291426,0.351549,0.472587", \
				        "0.320830,0.331674,0.351966,0.390747,0.461865,0.587709", \
				        "0.452943,0.465624,0.491424,0.538810,0.626272,0.784049");
			}
			fall_transition(Timing_X1) {
				values ("0.021449,0.023336,0.027299,0.034288,0.048531,0.076990", \
				        "0.021435,0.023297,0.027191,0.034222,0.048425,0.076985", \
				        "0.021374,0.023329,0.027112,0.034262,0.048523,0.076937", \
				        "0.024364,0.025897,0.028997,0.035221,0.048569,0.076972", \
				        "0.034338,0.035968,0.039209,0.045142,0.055925,0.079401", \
				        "0.051997,0.053858,0.057587,0.064547,0.077114,0.099724", \
				        "0.083254,0.085398,0.090053,0.098531,0.113858,0.140755", \
				        "0.137589,0.140785,0.146448,0.157417,0.177135,0.211054");
			}
			rise_transition(Timing_X1) {
				values ("0.137220,0.144496,0.158856,0.187232,0.243497,0.355149", \
				        "0.137214,0.144490,0.158848,0.187252,0.243503,0.355158", \
				        "0.137208,0.144511,0.158837,0.187257,0.243479,0.355162", \
				        "0.137168,0.144455,0.158836,0.187248,0.243485,0.355169", \
				        "0.136402,0.143646,0.157960,0.187010,0.243474,0.355172", \
				        "0.152437,0.158361,0.170231,0.194396,0.245137,0.355127", \
				        "0.195138,0.201364,0.214268,0.238161,0.282284,0.372612", \
				        "0.260571,0.268199,0.282947,0.311630,0.365379,0.462257");
			}
		}

		timing () {

			related_pin	   : "B1";
			when	           : "A1 & !B2 & !B3";
			sdf_cond	   : "(A1 == 1'b1) && (B2 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.033246,0.035226,0.039158,0.047121,0.062616,0.093527", \
				        "0.036795,0.038769,0.042643,0.050467,0.066041,0.096992", \
				        "0.043740,0.045751,0.049678,0.057443,0.073079,0.104025", \
				        "0.054698,0.057294,0.062120,0.071090,0.087116,0.118152", \
				        "0.066259,0.069966,0.076760,0.089099,0.110534,0.145911", \
				        "0.074678,0.079714,0.089509,0.107014,0.136988,0.185697", \
				        "0.068936,0.076977,0.090995,0.116352,0.159119,0.227577", \
				        "0.030428,0.041584,0.061842,0.098197,0.159371,0.256823");
			}
			cell_rise(Timing_X1) {
				values ("0.131783,0.139791,0.155595,0.187122,0.249686,0.373837", \
				        "0.134549,0.142390,0.158212,0.189720,0.252308,0.376518", \
				        "0.140128,0.148277,0.163981,0.195446,0.257951,0.382040", \
				        "0.153186,0.160834,0.176587,0.207852,0.269964,0.393765", \
				        "0.180921,0.188404,0.203889,0.234478,0.295886,0.418652", \
				        "0.237197,0.246138,0.261699,0.292378,0.352094,0.472256", \
				        "0.321967,0.332562,0.352851,0.391303,0.462066,0.587446", \
				        "0.453172,0.465832,0.491273,0.538203,0.625333,0.782731");
			}
			fall_transition(Timing_X1) {
				values ("0.016496,0.018218,0.021567,0.028054,0.041141,0.067211", \
				        "0.016493,0.018213,0.021689,0.028075,0.041079,0.067218", \
				        "0.016846,0.018406,0.021722,0.028144,0.041179,0.067244", \
				        "0.022086,0.023369,0.025954,0.030828,0.041900,0.067213", \
				        "0.032864,0.034350,0.037392,0.042806,0.052568,0.071734", \
				        "0.051655,0.053272,0.056749,0.063149,0.075020,0.095960", \
				        "0.084803,0.086689,0.090795,0.098458,0.112881,0.138474", \
				        "0.142570,0.145112,0.149842,0.159448,0.177683,0.209831");
			}
			rise_transition(Timing_X1) {
				values ("0.100612,0.107975,0.122451,0.151080,0.207655,0.319888", \
				        "0.100643,0.107962,0.122496,0.151075,0.207653,0.319885", \
				        "0.100606,0.107949,0.122483,0.151071,0.207671,0.319891", \
				        "0.100621,0.107948,0.122464,0.151075,0.207668,0.319878", \
				        "0.099964,0.107060,0.121593,0.150835,0.207674,0.319897", \
				        "0.115402,0.121489,0.133445,0.157955,0.209134,0.319860", \
				        "0.149096,0.156398,0.171102,0.197651,0.245553,0.337032", \
				        "0.200604,0.209602,0.227188,0.259850,0.319070,0.422250");
			}
		}

		timing () {

			related_pin	   : "B2";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.065331,0.068509,0.074666,0.086762,0.110315,0.155898", \
				        "0.068814,0.071878,0.077754,0.090086,0.113662,0.159210", \
				        "0.075021,0.078198,0.084268,0.096300,0.119855,0.165483", \
				        "0.085974,0.089085,0.095303,0.107392,0.130885,0.176440", \
				        "0.104414,0.107827,0.114438,0.127219,0.151212,0.196643", \
				        "0.127517,0.131811,0.139927,0.155556,0.183823,0.234327", \
				        "0.146996,0.152922,0.164239,0.185300,0.222633,0.286725", \
				        "0.147523,0.156046,0.171494,0.200502,0.252512,0.340224");
			}
			cell_rise(Timing_X1) {
				values ("0.161148,0.169074,0.184881,0.216414,0.278922,0.403678", \
				        "0.164232,0.172185,0.187855,0.219412,0.281968,0.406787", \
				        "0.170196,0.178174,0.193873,0.225342,0.287959,0.412764", \
				        "0.181306,0.189295,0.205093,0.236605,0.299225,0.424133", \
				        "0.203781,0.211423,0.227397,0.258716,0.321254,0.446078", \
				        "0.248784,0.257852,0.274158,0.306123,0.368211,0.492222", \
				        "0.326672,0.337349,0.355820,0.393031,0.462879,0.591464", \
				        "0.455634,0.466979,0.491415,0.536067,0.618486,0.768616");
			}
			fall_transition(Timing_X1) {
				values ("0.037428,0.040030,0.045364,0.055018,0.073947,0.111685", \
				        "0.037410,0.040021,0.045216,0.054968,0.073944,0.111672", \
				        "0.037319,0.039948,0.045191,0.054950,0.073916,0.111688", \
				        "0.037222,0.039740,0.044982,0.054661,0.073763,0.111654", \
				        "0.042474,0.044773,0.049533,0.057831,0.075267,0.111683", \
				        "0.057099,0.059383,0.064004,0.072346,0.088466,0.120953", \
				        "0.085546,0.088028,0.093305,0.102857,0.120185,0.152291", \
				        "0.134930,0.138612,0.145198,0.157563,0.179410,0.216838");
			}
			rise_transition(Timing_X1) {
				values ("0.100667,0.107973,0.122503,0.151088,0.207634,0.355169", \
				        "0.100630,0.107981,0.122507,0.151105,0.207660,0.355173", \
				        "0.100651,0.107981,0.122473,0.151055,0.207664,0.355151", \
				        "0.100666,0.107966,0.122507,0.151067,0.207667,0.355156", \
				        "0.100868,0.108058,0.122526,0.151065,0.207637,0.355149", \
				        "0.112267,0.118390,0.130943,0.156517,0.209233,0.355155", \
				        "0.139211,0.145900,0.159545,0.185450,0.234574,0.367312", \
				        "0.182560,0.190587,0.205815,0.234734,0.331522,0.428805");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & !A3 & !B1 & !B3 | !A1 & !A2 & A3 & !B1 & !B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b0) && (B1 == 1'b0) && (B3 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (A3 == 1'b1) && (B1 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.065331,0.068509,0.074666,0.086762,0.110315,0.155898", \
				        "0.068814,0.071878,0.077754,0.090086,0.113662,0.159210", \
				        "0.075021,0.078198,0.084268,0.096300,0.119855,0.165483", \
				        "0.085974,0.089085,0.095303,0.107392,0.130885,0.176440", \
				        "0.104414,0.107827,0.114438,0.127219,0.151212,0.196643", \
				        "0.127517,0.131811,0.139927,0.155556,0.183823,0.234327", \
				        "0.146996,0.152922,0.164239,0.185300,0.222633,0.286725", \
				        "0.147523,0.156046,0.171494,0.200502,0.252512,0.340224");
			}
			cell_rise(Timing_X1) {
				values ("0.154037,0.162161,0.178458,0.210473,0.273847,0.399178", \
				        "0.157155,0.165309,0.181421,0.213459,0.276880,0.402254", \
				        "0.163115,0.171286,0.187397,0.219416,0.282872,0.408266", \
				        "0.174240,0.182484,0.198713,0.230800,0.294163,0.419632", \
				        "0.196518,0.204543,0.220929,0.252871,0.316138,0.441573", \
				        "0.241218,0.250168,0.267218,0.299849,0.362756,0.487538", \
				        "0.317362,0.328304,0.347337,0.385341,0.456373,0.586052", \
				        "0.444128,0.455907,0.480609,0.526311,0.610138,0.761160");
			}
			fall_transition(Timing_X1) {
				values ("0.037428,0.040030,0.045364,0.055018,0.073947,0.111685", \
				        "0.037410,0.040021,0.045216,0.054968,0.073944,0.111672", \
				        "0.037319,0.039948,0.045191,0.054950,0.073916,0.111688", \
				        "0.037222,0.039740,0.044982,0.054661,0.073763,0.111654", \
				        "0.042474,0.044773,0.049533,0.057831,0.075267,0.111683", \
				        "0.057099,0.059383,0.064004,0.072346,0.088466,0.120953", \
				        "0.085546,0.088028,0.093305,0.102857,0.120185,0.152291", \
				        "0.134930,0.138612,0.145198,0.157563,0.179410,0.216838");
			}
			rise_transition(Timing_X1) {
				values ("0.137616,0.145742,0.161297,0.192569,0.254397,0.374168", \
				        "0.137628,0.145729,0.161298,0.192563,0.254361,0.374136", \
				        "0.137621,0.145763,0.161391,0.192534,0.254384,0.374135", \
				        "0.137623,0.145742,0.161381,0.192517,0.254393,0.374145", \
				        "0.137882,0.145852,0.161319,0.192576,0.254387,0.374145", \
				        "0.149757,0.156723,0.170241,0.198305,0.256168,0.374133", \
				        "0.187331,0.193964,0.207214,0.233141,0.283423,0.386658", \
				        "0.250682,0.257544,0.271342,0.298650,0.351602,0.451828");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "!A1 & A2 & A3 & !B1 & !B3";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b1) && (B1 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.048798,0.051073,0.055548,0.064522,0.082031,0.116257", \
				        "0.052348,0.054573,0.058973,0.067963,0.085443,0.119682", \
				        "0.059136,0.061430,0.065866,0.074715,0.092226,0.126482", \
				        "0.072305,0.074651,0.079201,0.088131,0.105602,0.139883", \
				        "0.090858,0.093996,0.099763,0.110789,0.130802,0.166127", \
				        "0.110010,0.114210,0.122330,0.137492,0.164443,0.210119", \
				        "0.121539,0.127844,0.139258,0.160543,0.198204,0.261341", \
				        "0.109956,0.118719,0.134836,0.164925,0.217916,0.306175");
			}
			cell_rise(Timing_X1) {
				values ("0.159656,0.167708,0.183732,0.215646,0.278654,0.403678", \
				        "0.162774,0.170801,0.186808,0.218661,0.281737,0.406787", \
				        "0.168751,0.176772,0.192756,0.224595,0.287647,0.412764", \
				        "0.179783,0.187942,0.203975,0.235883,0.298925,0.424133", \
				        "0.202268,0.210077,0.226309,0.257997,0.321008,0.446078", \
				        "0.247253,0.256388,0.273054,0.305219,0.367881,0.492222", \
				        "0.325173,0.336085,0.354682,0.392260,0.462620,0.591464", \
				        "0.454549,0.466031,0.490544,0.535616,0.618486,0.768616");
			}
			fall_transition(Timing_X1) {
				values ("0.026303,0.028247,0.032285,0.039299,0.053529,0.082004", \
				        "0.026296,0.028270,0.032258,0.039348,0.053556,0.081959", \
				        "0.026245,0.028183,0.031922,0.039284,0.053546,0.082021", \
				        "0.027707,0.029400,0.032889,0.039634,0.053431,0.082021", \
				        "0.037403,0.039002,0.042340,0.048069,0.059176,0.083634", \
				        "0.055003,0.056927,0.060723,0.067656,0.080109,0.102702", \
				        "0.085451,0.087638,0.092366,0.100934,0.116479,0.143591", \
				        "0.137365,0.140817,0.146634,0.157974,0.178159,0.212640");
			}
			rise_transition(Timing_X1) {
				values ("0.137213,0.144488,0.158852,0.187256,0.243512,0.355169", \
				        "0.137211,0.144479,0.158856,0.187254,0.243512,0.355173", \
				        "0.137220,0.144503,0.158860,0.187249,0.243488,0.355151", \
				        "0.137203,0.144481,0.158861,0.187246,0.243485,0.355156", \
				        "0.137460,0.144602,0.158899,0.187256,0.243513,0.355149", \
				        "0.148846,0.155057,0.167428,0.192838,0.245166,0.355155", \
				        "0.181633,0.187834,0.200204,0.224380,0.270995,0.367312", \
				        "0.234235,0.241227,0.254607,0.280872,0.331522,0.428805");
			}
		}

		timing () {

			related_pin	   : "B2";
			when	           : "A1 & !B1 & !B3";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B3 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.039162,0.041189,0.045295,0.053481,0.069383,0.100725", \
				        "0.042724,0.044747,0.048733,0.056875,0.072831,0.104170", \
				        "0.049745,0.051783,0.055784,0.063882,0.079788,0.111153", \
				        "0.062560,0.064929,0.069422,0.077869,0.093873,0.125254", \
				        "0.077734,0.081079,0.087276,0.098740,0.118976,0.153187", \
				        "0.091136,0.095713,0.104576,0.120732,0.148967,0.195700", \
				        "0.094063,0.100887,0.113463,0.136508,0.176450,0.241793", \
				        "0.069859,0.079555,0.097438,0.129989,0.186383,0.278479");
			}
			cell_rise(Timing_X1) {
				values ("0.161148,0.169074,0.184881,0.216414,0.278922,0.403013", \
				        "0.164232,0.172185,0.187855,0.219412,0.281968,0.406066", \
				        "0.170196,0.178174,0.193873,0.225342,0.287959,0.412122", \
				        "0.181306,0.189295,0.205093,0.236605,0.299225,0.423466", \
				        "0.203781,0.211423,0.227397,0.258716,0.321254,0.445396", \
				        "0.248784,0.257852,0.274158,0.306123,0.368211,0.491604", \
				        "0.326672,0.337349,0.355820,0.393031,0.462879,0.590985", \
				        "0.455634,0.466979,0.491415,0.536067,0.618313,0.767815");
			}
			fall_transition(Timing_X1) {
				values ("0.021324,0.023038,0.026566,0.033046,0.045864,0.071878", \
				        "0.021305,0.023038,0.026450,0.032974,0.045894,0.071938", \
				        "0.021256,0.022914,0.026303,0.032894,0.045836,0.071885", \
				        "0.024958,0.026231,0.029055,0.034403,0.046074,0.071911", \
				        "0.035865,0.037343,0.040378,0.045462,0.055142,0.075196", \
				        "0.054217,0.056010,0.059534,0.065995,0.077751,0.098564", \
				        "0.085902,0.087949,0.092354,0.100345,0.115073,0.141039", \
				        "0.139773,0.142992,0.148292,0.158777,0.177912,0.210959");
			}
			rise_transition(Timing_X1) {
				values ("0.100667,0.107973,0.122503,0.151088,0.207634,0.319893", \
				        "0.100630,0.107981,0.122507,0.151105,0.207660,0.319888", \
				        "0.100651,0.107981,0.122473,0.151055,0.207664,0.319872", \
				        "0.100666,0.107966,0.122507,0.151067,0.207667,0.319891", \
				        "0.100868,0.108058,0.122526,0.151065,0.207637,0.319898", \
				        "0.112267,0.118390,0.130943,0.156517,0.209233,0.319890", \
				        "0.139211,0.145900,0.159545,0.185450,0.234574,0.331878", \
				        "0.182560,0.190587,0.205815,0.234734,0.289155,0.390494");
			}
		}

		timing () {

			related_pin	   : "B3";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.071315,0.074580,0.081023,0.093626,0.117782,0.164169", \
				        "0.074689,0.077874,0.084073,0.096757,0.120979,0.167354", \
				        "0.080832,0.084152,0.090322,0.102858,0.127079,0.173484", \
				        "0.091714,0.094950,0.101368,0.113913,0.138049,0.184415", \
				        "0.111161,0.114648,0.121329,0.134181,0.158364,0.204580", \
				        "0.136997,0.141135,0.149158,0.164484,0.192443,0.242876", \
				        "0.161185,0.166927,0.177818,0.198118,0.234673,0.297632", \
				        "0.171253,0.179413,0.193943,0.221645,0.271553,0.356606");
			}
			cell_rise(Timing_X1) {
				values ("0.172292,0.180263,0.196052,0.227592,0.290109,0.414850", \
				        "0.175919,0.183863,0.199618,0.231111,0.293653,0.418485", \
				        "0.182419,0.190451,0.206161,0.237686,0.300283,0.425152", \
				        "0.193527,0.201624,0.217479,0.249012,0.311636,0.436548", \
				        "0.212301,0.220352,0.236181,0.267727,0.330381,0.455235", \
				        "0.245160,0.253321,0.269888,0.302032,0.364380,0.488860", \
				        "0.297371,0.307424,0.325284,0.361185,0.429618,0.558924", \
				        "0.395845,0.406924,0.427807,0.468284,0.544261,0.686698");
			}
			fall_transition(Timing_X1) {
				values ("0.042901,0.045592,0.050982,0.060536,0.079568,0.117398", \
				        "0.042884,0.045563,0.050869,0.060627,0.079605,0.117398", \
				        "0.042772,0.045421,0.050778,0.060578,0.079525,0.117326", \
				        "0.042216,0.044881,0.050155,0.060155,0.079432,0.117377", \
				        "0.046326,0.048623,0.053521,0.062125,0.080188,0.117226", \
				        "0.060329,0.062590,0.067324,0.075883,0.092300,0.125152", \
				        "0.088770,0.091231,0.096434,0.105946,0.123359,0.155738", \
				        "0.138258,0.141698,0.148278,0.160426,0.181988,0.219385");
			}
			rise_transition(Timing_X1) {
				values ("0.100590,0.107989,0.122513,0.151083,0.207669,0.355153", \
				        "0.100620,0.107991,0.122458,0.151088,0.207627,0.355157", \
				        "0.100622,0.107987,0.122442,0.151105,0.207647,0.355145", \
				        "0.100606,0.107980,0.122508,0.151093,0.207658,0.355165", \
				        "0.100689,0.108025,0.122478,0.151077,0.207622,0.355157", \
				        "0.109270,0.115758,0.128988,0.155316,0.209089,0.355163", \
				        "0.131063,0.137788,0.152028,0.178818,0.230559,0.366856", \
				        "0.168702,0.175889,0.191094,0.219532,0.274131,0.417354");
			}
		}

		timing () {

			related_pin	   : "B3";
			when	           : "!A1 & A2 & !A3 & !B1 & !B2 | !A1 & !A2 & A3 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b0) && (B1 == 1'b0) && (B2 == 1'b0) || (A1 == 1'b0) && (A2 == 1'b0) && (A3 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.071315,0.074580,0.081023,0.093626,0.117782,0.164169", \
				        "0.074689,0.077874,0.084073,0.096757,0.120979,0.167354", \
				        "0.080832,0.084152,0.090322,0.102858,0.127079,0.173484", \
				        "0.091714,0.094950,0.101368,0.113913,0.138049,0.184415", \
				        "0.111161,0.114648,0.121329,0.134181,0.158364,0.204580", \
				        "0.136997,0.141135,0.149158,0.164484,0.192443,0.242876", \
				        "0.161185,0.166927,0.177818,0.198118,0.234673,0.297632", \
				        "0.171253,0.179413,0.193943,0.221645,0.271553,0.356606");
			}
			cell_rise(Timing_X1) {
				values ("0.165218,0.173333,0.189639,0.221674,0.285016,0.410371", \
				        "0.168859,0.176966,0.193124,0.225246,0.288578,0.413966", \
				        "0.175351,0.183574,0.199780,0.231789,0.295185,0.420648", \
				        "0.186560,0.194793,0.211140,0.243253,0.306637,0.432063", \
				        "0.205225,0.213519,0.229898,0.261959,0.325318,0.450826", \
				        "0.237681,0.246173,0.263295,0.296018,0.359251,0.484340", \
				        "0.288435,0.298897,0.317493,0.354082,0.423606,0.553865", \
				        "0.384493,0.396496,0.417262,0.458803,0.536147,0.679607");
			}
			fall_transition(Timing_X1) {
				values ("0.042901,0.045592,0.050982,0.060536,0.079568,0.117398", \
				        "0.042884,0.045563,0.050869,0.060627,0.079605,0.117398", \
				        "0.042772,0.045421,0.050778,0.060578,0.079525,0.117326", \
				        "0.042216,0.044881,0.050155,0.060155,0.079432,0.117377", \
				        "0.046326,0.048623,0.053521,0.062125,0.080188,0.117226", \
				        "0.060329,0.062590,0.067324,0.075883,0.092300,0.125152", \
				        "0.088770,0.091231,0.096434,0.105946,0.123359,0.155738", \
				        "0.138258,0.141698,0.148278,0.160426,0.181988,0.219385");
			}
			rise_transition(Timing_X1) {
				values ("0.137612,0.145764,0.161414,0.192470,0.254360,0.374138", \
				        "0.137593,0.145760,0.161277,0.192535,0.254385,0.374177", \
				        "0.137615,0.145764,0.161399,0.192511,0.254369,0.374162", \
				        "0.137621,0.145773,0.161372,0.192489,0.254365,0.374184", \
				        "0.137686,0.145744,0.161432,0.192569,0.254372,0.374135", \
				        "0.146720,0.154026,0.168185,0.197013,0.255953,0.374169", \
				        "0.178192,0.185243,0.198908,0.226337,0.279664,0.386100", \
				        "0.233941,0.240232,0.254163,0.281362,0.335267,0.440363");
			}
		}

		timing () {

			related_pin	   : "B3";
			when	           : "!A1 & A2 & A3 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b0) && (A2 == 1'b1) && (A3 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.051689,0.054126,0.058856,0.068320,0.086614,0.121813", \
				        "0.055186,0.057538,0.062201,0.071652,0.089941,0.125141", \
				        "0.061991,0.064416,0.069016,0.078392,0.096648,0.131870", \
				        "0.075627,0.077986,0.082672,0.091983,0.110078,0.145224", \
				        "0.096380,0.099511,0.105212,0.116177,0.136015,0.171521", \
				        "0.119022,0.122961,0.130940,0.145791,0.172133,0.217227", \
				        "0.136013,0.141821,0.152715,0.173318,0.209914,0.271722", \
				        "0.134776,0.143009,0.158264,0.186680,0.237297,0.322531");
			}
			cell_rise(Timing_X1) {
				values ("0.170867,0.178906,0.194958,0.226837,0.289844,0.414850", \
				        "0.174470,0.182500,0.198550,0.230382,0.293456,0.418485", \
				        "0.180957,0.189074,0.205179,0.236939,0.300045,0.425152", \
				        "0.192094,0.200284,0.216415,0.248263,0.311389,0.436548", \
				        "0.210778,0.218997,0.235171,0.266996,0.330149,0.455235", \
				        "0.243754,0.251983,0.268845,0.301223,0.364092,0.488860", \
				        "0.295851,0.306117,0.324230,0.360487,0.429441,0.558924", \
				        "0.394439,0.405645,0.426744,0.467634,0.544129,0.686698");
			}
			fall_transition(Timing_X1) {
				values ("0.030256,0.032231,0.036351,0.043636,0.058046,0.086557", \
				        "0.030229,0.032249,0.036365,0.043473,0.057949,0.086536", \
				        "0.030032,0.032058,0.036020,0.043373,0.057907,0.086563", \
				        "0.030712,0.032509,0.036375,0.043364,0.057671,0.086502", \
				        "0.040109,0.041743,0.045011,0.050868,0.061887,0.087359", \
				        "0.058044,0.059956,0.063672,0.070426,0.082735,0.105313", \
				        "0.088751,0.090886,0.095524,0.103926,0.119271,0.146150", \
				        "0.140886,0.144185,0.149865,0.160857,0.180628,0.214831");
			}
			rise_transition(Timing_X1) {
				values ("0.137301,0.144501,0.158858,0.187250,0.243477,0.355153", \
				        "0.137248,0.144510,0.158858,0.187257,0.243516,0.355157", \
				        "0.137265,0.144496,0.158868,0.187249,0.243494,0.355145", \
				        "0.137232,0.144506,0.158861,0.187239,0.243481,0.355165", \
				        "0.137304,0.144530,0.158885,0.187250,0.243514,0.355157", \
				        "0.145862,0.152385,0.165447,0.191641,0.244960,0.355163", \
				        "0.172733,0.179176,0.192238,0.217630,0.267174,0.366856", \
				        "0.218117,0.224586,0.238072,0.264199,0.315632,0.417354");
			}
		}

		timing () {

			related_pin	   : "B3";
			when	           : "A1 & !B1 & !B2";
			sdf_cond	   : "(A1 == 1'b1) && (B1 == 1'b0) && (B2 == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.040750,0.042938,0.047389,0.056131,0.073002,0.105459", \
				        "0.044278,0.046466,0.050825,0.059529,0.076336,0.108812", \
				        "0.051443,0.053656,0.057973,0.066548,0.083295,0.115731", \
				        "0.065421,0.067788,0.072293,0.080921,0.097497,0.129821", \
				        "0.083239,0.086549,0.092552,0.103951,0.123971,0.157935", \
				        "0.100391,0.104786,0.113426,0.129151,0.156774,0.202684", \
				        "0.109333,0.115789,0.127730,0.149815,0.188509,0.252323", \
				        "0.097244,0.106202,0.122857,0.153342,0.206779,0.295369");
			}
			cell_rise(Timing_X1) {
				values ("0.172292,0.180263,0.196052,0.227592,0.290109,0.414218", \
				        "0.175919,0.183863,0.199618,0.231111,0.293653,0.417811", \
				        "0.182419,0.190451,0.206161,0.237686,0.300283,0.424486", \
				        "0.193527,0.201624,0.217479,0.249012,0.311636,0.435877", \
				        "0.212301,0.220352,0.236181,0.267727,0.330381,0.454540", \
				        "0.245160,0.253321,0.269888,0.302032,0.364380,0.488181", \
				        "0.297371,0.307424,0.325284,0.361185,0.429618,0.558248", \
				        "0.395845,0.406924,0.427807,0.468284,0.544261,0.685850");
			}
			fall_transition(Timing_X1) {
				values ("0.024772,0.026538,0.030295,0.036987,0.050132,0.076203", \
				        "0.024719,0.026500,0.030182,0.036848,0.050109,0.076110", \
				        "0.024488,0.026275,0.029967,0.036709,0.050006,0.076161", \
				        "0.027517,0.028841,0.031731,0.037471,0.049716,0.075992", \
				        "0.038772,0.040204,0.042993,0.048284,0.057571,0.078448", \
				        "0.057585,0.059295,0.062654,0.068950,0.080328,0.100915", \
				        "0.089444,0.091385,0.095619,0.103369,0.117843,0.143477", \
				        "0.143340,0.146518,0.151609,0.161730,0.180388,0.213058");
			}
			rise_transition(Timing_X1) {
				values ("0.100590,0.107989,0.122513,0.151083,0.207669,0.319886", \
				        "0.100620,0.107991,0.122458,0.151088,0.207627,0.319893", \
				        "0.100622,0.107987,0.122442,0.151105,0.207647,0.319902", \
				        "0.100606,0.107980,0.122508,0.151093,0.207658,0.319878", \
				        "0.100689,0.108025,0.122478,0.151077,0.207622,0.319901", \
				        "0.109270,0.115758,0.128988,0.155316,0.209089,0.319893", \
				        "0.131063,0.137788,0.152028,0.178818,0.230559,0.331466", \
				        "0.168702,0.175889,0.191094,0.219532,0.274131,0.379284");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.002992,0.002754,0.002274,0.001323,-0.000596,-0.004440", \
				        "0.003010,0.002759,0.002281,0.001327,-0.000592,-0.004431", \
				        "0.003021,0.002787,0.002299,0.001343,-0.000575,-0.004418", \
				        "0.003070,0.002818,0.002337,0.001371,-0.000549,-0.004396", \
				        "0.003188,0.002940,0.002450,0.001471,-0.000474,-0.004348", \
				        "0.003555,0.003282,0.002772,0.001756,-0.000235,-0.004170", \
				        "0.004604,0.004329,0.003745,0.002641,0.000504,-0.003585", \
				        "0.007190,0.006873,0.006244,0.005010,0.002638,-0.001834");
			}
			rise_power(Power_X1) {
				values ("0.003292,0.003536,0.004016,0.004984,0.006918,0.010799", \
				        "0.003298,0.003540,0.004020,0.004991,0.006930,0.010806", \
				        "0.003326,0.003566,0.004047,0.005010,0.006947,0.010810", \
				        "0.003415,0.003640,0.004122,0.005074,0.006987,0.010842", \
				        "0.003650,0.003871,0.004331,0.005256,0.007139,0.010959", \
				        "0.004170,0.004390,0.004827,0.005719,0.007546,0.011274", \
				        "0.005361,0.005553,0.005945,0.006781,0.008518,0.012125", \
				        "0.007937,0.008097,0.008436,0.009158,0.010722,0.014127");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !A3 & !B1 & B2 & !B3 | !A2 & !A3 & !B1 & !B2 & B3";

			rise_power(Power_X1) {
				values ("0.003292,0.003536,0.004016,0.004984,0.006918,0.010799", \
				        "0.003298,0.003540,0.004020,0.004991,0.006930,0.010806", \
				        "0.003326,0.003566,0.004047,0.005010,0.006947,0.010810", \
				        "0.003415,0.003640,0.004122,0.005074,0.006987,0.010842", \
				        "0.003650,0.003871,0.004331,0.005256,0.007139,0.010959", \
				        "0.004170,0.004390,0.004827,0.005719,0.007546,0.011274", \
				        "0.005361,0.005553,0.005945,0.006781,0.008518,0.012125", \
				        "0.007937,0.008097,0.008436,0.009158,0.010722,0.014127");
			}
			fall_power(Power_X1) {
				values ("0.002992,0.002754,0.002274,0.001323,-0.000596,-0.004440", \
				        "0.003010,0.002759,0.002281,0.001327,-0.000592,-0.004431", \
				        "0.003021,0.002787,0.002299,0.001343,-0.000575,-0.004418", \
				        "0.003070,0.002818,0.002337,0.001371,-0.000549,-0.004396", \
				        "0.003188,0.002940,0.002450,0.001471,-0.000474,-0.004348", \
				        "0.003555,0.003282,0.002772,0.001756,-0.000235,-0.004170", \
				        "0.004604,0.004329,0.003745,0.002641,0.000504,-0.003585", \
				        "0.007190,0.006873,0.006244,0.005010,0.002638,-0.001834");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !A3 & !B1 & B2 & B3";

			rise_power(Power_X1) {
				values ("0.002972,0.003202,0.003675,0.004654,0.006598,0.010464", \
				        "0.002966,0.003206,0.003686,0.004657,0.006595,0.010467", \
				        "0.002981,0.003228,0.003711,0.004672,0.006611,0.010481", \
				        "0.003085,0.003322,0.003798,0.004742,0.006657,0.010514", \
				        "0.003321,0.003548,0.004017,0.004941,0.006825,0.010625", \
				        "0.003878,0.004084,0.004534,0.005428,0.007249,0.010977", \
				        "0.005081,0.005282,0.005679,0.006514,0.008259,0.011881", \
				        "0.007778,0.007932,0.008246,0.008961,0.010535,0.013941");
			}
			fall_power(Power_X1) {
				values ("0.002067,0.001837,0.001351,0.000387,-0.001532,-0.005387", \
				        "0.002087,0.001843,0.001357,0.000398,-0.001520,-0.005376", \
				        "0.002104,0.001864,0.001377,0.000416,-0.001506,-0.005357", \
				        "0.002144,0.001908,0.001421,0.000459,-0.001478,-0.005340", \
				        "0.002294,0.002041,0.001549,0.000566,-0.001389,-0.005274", \
				        "0.002745,0.002479,0.001949,0.000912,-0.001111,-0.005075", \
				        "0.003975,0.003676,0.003092,0.001951,-0.000236,-0.004397", \
				        "0.006820,0.006466,0.005830,0.004568,0.002151,-0.002398");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			when	                 : "!A2 & !A3 & B1";

			rise_power(Power_X1) {
				values ("0.002619,0.002870,0.003344,0.004320,0.006262,0.010136", \
				        "0.002624,0.002871,0.003359,0.004325,0.006259,0.010138", \
				        "0.002663,0.002890,0.003375,0.004342,0.006271,0.010134", \
				        "0.002757,0.002985,0.003457,0.004409,0.006321,0.010164", \
				        "0.002994,0.003223,0.003680,0.004607,0.006486,0.010300", \
				        "0.003534,0.003764,0.004204,0.005085,0.006918,0.010647", \
				        "0.004802,0.004971,0.005366,0.006200,0.007927,0.011534", \
				        "0.007568,0.007707,0.008001,0.008678,0.010212,0.013631");
			}
			fall_power(Power_X1) {
				values ("0.001036,0.000788,0.000300,-0.000654,-0.002577,-0.006433", \
				        "0.001048,0.000805,0.000316,-0.000643,-0.002566,-0.006418", \
				        "0.001065,0.000815,0.000339,-0.000617,-0.002547,-0.006403", \
				        "0.001115,0.000883,0.000394,-0.000580,-0.002513,-0.006372", \
				        "0.001301,0.001041,0.000541,-0.000456,-0.002421,-0.006316", \
				        "0.001850,0.001564,0.001004,-0.000058,-0.002111,-0.006092", \
				        "0.003167,0.002868,0.002257,0.001083,-0.001165,-0.005382", \
				        "0.006114,0.005783,0.005109,0.003809,0.001326,-0.003290");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.004070,0.003829,0.003348,0.002395,0.000485,-0.003349", \
				        "0.004072,0.003828,0.003348,0.002394,0.000484,-0.003352", \
				        "0.004073,0.003836,0.003349,0.002400,0.000488,-0.003345", \
				        "0.004113,0.003857,0.003374,0.002415,0.000503,-0.003338", \
				        "0.004202,0.003962,0.003478,0.002510,0.000565,-0.003295", \
				        "0.004532,0.004275,0.003775,0.002774,0.000799,-0.003118", \
				        "0.005435,0.005181,0.004645,0.003593,0.001520,-0.002525", \
				        "0.007687,0.007386,0.006817,0.005683,0.003459,-0.000824");
			}
			rise_power(Power_X1) {
				values ("0.003612,0.003866,0.004357,0.005327,0.007273,0.011146", \
				        "0.003600,0.003857,0.004331,0.005306,0.007257,0.011128", \
				        "0.003572,0.003818,0.004297,0.005279,0.007238,0.011119", \
				        "0.003517,0.003780,0.004272,0.005251,0.007210,0.011107", \
				        "0.003534,0.003782,0.004266,0.005242,0.007197,0.011078", \
				        "0.003775,0.004002,0.004462,0.005405,0.007315,0.011152", \
				        "0.004617,0.004815,0.005232,0.006093,0.007894,0.011605", \
				        "0.006677,0.006841,0.007183,0.007922,0.009547,0.013026");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !A3 & !B1 & B2 & !B3 | !A1 & !A3 & !B1 & !B2 & B3";

			rise_power(Power_X1) {
				values ("0.003612,0.003866,0.004357,0.005327,0.007273,0.011146", \
				        "0.003600,0.003857,0.004331,0.005306,0.007257,0.011128", \
				        "0.003572,0.003818,0.004297,0.005279,0.007238,0.011119", \
				        "0.003517,0.003780,0.004272,0.005251,0.007210,0.011107", \
				        "0.003534,0.003782,0.004266,0.005242,0.007197,0.011078", \
				        "0.003775,0.004002,0.004462,0.005405,0.007315,0.011152", \
				        "0.004617,0.004815,0.005232,0.006093,0.007894,0.011605", \
				        "0.006677,0.006841,0.007183,0.007922,0.009547,0.013026");
			}
			fall_power(Power_X1) {
				values ("0.004070,0.003829,0.003348,0.002395,0.000485,-0.003349", \
				        "0.004072,0.003828,0.003348,0.002394,0.000484,-0.003352", \
				        "0.004073,0.003836,0.003349,0.002400,0.000488,-0.003345", \
				        "0.004113,0.003857,0.003374,0.002415,0.000503,-0.003338", \
				        "0.004202,0.003962,0.003478,0.002510,0.000565,-0.003295", \
				        "0.004532,0.004275,0.003775,0.002774,0.000799,-0.003118", \
				        "0.005435,0.005181,0.004645,0.003593,0.001520,-0.002525", \
				        "0.007687,0.007386,0.006817,0.005683,0.003459,-0.000824");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !A3 & !B1 & B2 & B3";

			rise_power(Power_X1) {
				values ("0.003278,0.003534,0.004018,0.004997,0.006939,0.010813", \
				        "0.003277,0.003513,0.004001,0.004975,0.006920,0.010798", \
				        "0.003244,0.003483,0.003962,0.004945,0.006901,0.010787", \
				        "0.003202,0.003442,0.003934,0.004919,0.006877,0.010767", \
				        "0.003191,0.003442,0.003933,0.004900,0.006851,0.010749", \
				        "0.003448,0.003676,0.004136,0.005077,0.006974,0.010811", \
				        "0.004326,0.004519,0.004941,0.005800,0.007593,0.011304", \
				        "0.006463,0.006612,0.006959,0.007690,0.009300,0.012789");
			}
			fall_power(Power_X1) {
				values ("0.003157,0.002917,0.002428,0.001471,-0.000455,-0.004297", \
				        "0.003150,0.002909,0.002425,0.001468,-0.000451,-0.004301", \
				        "0.003156,0.002916,0.002430,0.001476,-0.000445,-0.004287", \
				        "0.003190,0.002945,0.002458,0.001501,-0.000424,-0.004275", \
				        "0.003296,0.003062,0.002574,0.001598,-0.000349,-0.004229", \
				        "0.003681,0.003428,0.002921,0.001916,-0.000086,-0.004022", \
				        "0.004717,0.004445,0.003906,0.002833,0.000736,-0.003350", \
				        "0.007149,0.006849,0.006264,0.005114,0.002861,-0.001476");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			when	                 : "!A1 & !A3 & B1";

			rise_power(Power_X1) {
				values ("0.002946,0.003204,0.003694,0.004664,0.006596,0.010471", \
				        "0.002934,0.003175,0.003655,0.004628,0.006579,0.010454", \
				        "0.002898,0.003146,0.003630,0.004609,0.006567,0.010438", \
				        "0.002862,0.003102,0.003600,0.004581,0.006543,0.010429", \
				        "0.002869,0.003105,0.003592,0.004571,0.006517,0.010405", \
				        "0.003113,0.003343,0.003801,0.004738,0.006640,0.010480", \
				        "0.004010,0.004205,0.004605,0.005470,0.007270,0.010968", \
				        "0.006253,0.006385,0.006692,0.007399,0.008988,0.012451");
			}
			fall_power(Power_X1) {
				values ("0.002124,0.001874,0.001385,0.000433,-0.001488,-0.005341", \
				        "0.002111,0.001872,0.001387,0.000431,-0.001488,-0.005341", \
				        "0.002121,0.001879,0.001389,0.000442,-0.001481,-0.005332", \
				        "0.002161,0.001916,0.001433,0.000470,-0.001464,-0.005321", \
				        "0.002290,0.002046,0.001555,0.000572,-0.001383,-0.005268", \
				        "0.002732,0.002467,0.001952,0.000920,-0.001090,-0.005050", \
				        "0.003859,0.003573,0.003011,0.001918,-0.000220,-0.004347", \
				        "0.006354,0.006071,0.005463,0.004278,0.001980,-0.002418");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.004977,0.004744,0.004277,0.003328,0.001420,-0.002400", \
				        "0.004970,0.004736,0.004262,0.003316,0.001410,-0.002409", \
				        "0.004970,0.004731,0.004253,0.003307,0.001405,-0.002416", \
				        "0.004986,0.004746,0.004268,0.003315,0.001408,-0.002418", \
				        "0.005077,0.004836,0.004361,0.003391,0.001465,-0.002382", \
				        "0.005393,0.005147,0.004649,0.003658,0.001692,-0.002208", \
				        "0.006321,0.006069,0.005536,0.004487,0.002428,-0.001610", \
				        "0.008704,0.008420,0.007846,0.006710,0.004486,0.000187");
			}
			rise_power(Power_X1) {
				values ("0.003906,0.004147,0.004637,0.005607,0.007553,0.011422", \
				        "0.003891,0.004147,0.004634,0.005612,0.007557,0.011430", \
				        "0.003881,0.004140,0.004629,0.005604,0.007551,0.011424", \
				        "0.003879,0.004126,0.004605,0.005580,0.007529,0.011406", \
				        "0.003845,0.004103,0.004584,0.005561,0.007511,0.011390", \
				        "0.003884,0.004132,0.004609,0.005577,0.007523,0.011393", \
				        "0.004510,0.004722,0.005146,0.006038,0.007886,0.011662", \
				        "0.006668,0.006834,0.007167,0.007893,0.009491,0.012956");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			when	                 : "!A1 & !A2 & !B1 & B2 & !B3 | !A1 & !A2 & !B1 & !B2 & B3";

			rise_power(Power_X1) {
				values ("0.003906,0.004147,0.004637,0.005607,0.007553,0.011422", \
				        "0.003891,0.004147,0.004634,0.005612,0.007557,0.011430", \
				        "0.003881,0.004140,0.004629,0.005604,0.007551,0.011424", \
				        "0.003879,0.004126,0.004605,0.005580,0.007529,0.011406", \
				        "0.003845,0.004103,0.004584,0.005561,0.007511,0.011390", \
				        "0.003884,0.004132,0.004609,0.005577,0.007523,0.011393", \
				        "0.004510,0.004722,0.005146,0.006038,0.007886,0.011662", \
				        "0.006668,0.006834,0.007167,0.007893,0.009491,0.012956");
			}
			fall_power(Power_X1) {
				values ("0.004977,0.004744,0.004277,0.003328,0.001420,-0.002400", \
				        "0.004970,0.004736,0.004262,0.003316,0.001410,-0.002409", \
				        "0.004970,0.004731,0.004253,0.003307,0.001405,-0.002416", \
				        "0.004986,0.004746,0.004268,0.003315,0.001408,-0.002418", \
				        "0.005077,0.004836,0.004361,0.003391,0.001465,-0.002382", \
				        "0.005393,0.005147,0.004649,0.003658,0.001692,-0.002208", \
				        "0.006321,0.006069,0.005536,0.004487,0.002428,-0.001610", \
				        "0.008704,0.008420,0.007846,0.006710,0.004486,0.000187");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			when	                 : "!A1 & !A2 & !B1 & B2 & B3";

			rise_power(Power_X1) {
				values ("0.003562,0.003806,0.004301,0.005270,0.007211,0.011088", \
				        "0.003573,0.003798,0.004296,0.005274,0.007218,0.011086", \
				        "0.003559,0.003792,0.004295,0.005264,0.007210,0.011088", \
				        "0.003552,0.003783,0.004270,0.005240,0.007189,0.011072", \
				        "0.003522,0.003761,0.004257,0.005221,0.007173,0.011053", \
				        "0.003551,0.003790,0.004278,0.005243,0.007182,0.011056", \
				        "0.004202,0.004403,0.004832,0.005712,0.007551,0.011331", \
				        "0.006483,0.006638,0.006968,0.007684,0.009257,0.012715");
			}
			fall_power(Power_X1) {
				values ("0.004061,0.003828,0.003347,0.002398,0.000483,-0.003350", \
				        "0.004050,0.003818,0.003332,0.002382,0.000471,-0.003362", \
				        "0.004044,0.003804,0.003320,0.002376,0.000464,-0.003365", \
				        "0.004067,0.003826,0.003345,0.002389,0.000475,-0.003363", \
				        "0.004177,0.003929,0.003454,0.002479,0.000544,-0.003319", \
				        "0.004556,0.004290,0.003790,0.002787,0.000802,-0.003119", \
				        "0.005629,0.005348,0.004806,0.003732,0.001642,-0.002434", \
				        "0.008252,0.007946,0.007349,0.006188,0.003916,-0.000438");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			when	                 : "!A1 & !A2 & B1 & !B2 & !B3";

			rise_power(Power_X1) {
				values ("0.003298,0.003538,0.004037,0.004997,0.006943,0.010815", \
				        "0.003283,0.003532,0.004027,0.005001,0.006947,0.010817", \
				        "0.003280,0.003548,0.004024,0.004994,0.006935,0.010821", \
				        "0.003274,0.003513,0.003995,0.004971,0.006914,0.010801", \
				        "0.003247,0.003476,0.003976,0.004949,0.006900,0.010782", \
				        "0.003268,0.003521,0.004004,0.004972,0.006909,0.010784", \
				        "0.003939,0.004139,0.004556,0.005434,0.007264,0.011051", \
				        "0.006241,0.006374,0.006680,0.007364,0.008917,0.012372");
			}
			fall_power(Power_X1) {
				values ("0.002767,0.002526,0.002043,0.001092,-0.000823,-0.004666", \
				        "0.002768,0.002516,0.002031,0.001083,-0.000838,-0.004680", \
				        "0.002753,0.002513,0.002031,0.001077,-0.000840,-0.004679", \
				        "0.002780,0.002533,0.002051,0.001091,-0.000830,-0.004675", \
				        "0.002894,0.002647,0.002161,0.001178,-0.000767,-0.004641", \
				        "0.003293,0.003025,0.002513,0.001497,-0.000508,-0.004448", \
				        "0.004374,0.004101,0.003541,0.002448,0.000320,-0.003799", \
				        "0.006960,0.006650,0.006046,0.004853,0.002542,-0.001869");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			when	                 : "!A1 & !A2 & B1 & B2 | !A1 & !A2 & B1 & B3";

			rise_power(Power_X1) {
				values ("0.003229,0.003477,0.003971,0.004936,0.006876,0.010754", \
				        "0.003227,0.003472,0.003962,0.004943,0.006884,0.010748", \
				        "0.003221,0.003469,0.003955,0.004933,0.006875,0.010753", \
				        "0.003210,0.003449,0.003931,0.004909,0.006851,0.010733", \
				        "0.003185,0.003426,0.003915,0.004889,0.006838,0.010726", \
				        "0.003223,0.003456,0.003942,0.004909,0.006846,0.010723", \
				        "0.003895,0.004086,0.004508,0.005388,0.007226,0.011001", \
				        "0.006271,0.006434,0.006721,0.007396,0.008939,0.012387");
			}
			fall_power(Power_X1) {
				values ("0.003023,0.002790,0.002302,0.001378,-0.000565,-0.004402", \
				        "0.003021,0.002775,0.002286,0.001339,-0.000574,-0.004408", \
				        "0.003003,0.002762,0.002282,0.001337,-0.000575,-0.004417", \
				        "0.003036,0.002797,0.002318,0.001357,-0.000565,-0.004406", \
				        "0.003161,0.002907,0.002428,0.001455,-0.000491,-0.004363", \
				        "0.003596,0.003330,0.002816,0.001797,-0.000206,-0.004149", \
				        "0.004748,0.004471,0.003914,0.002822,0.000693,-0.003425", \
				        "0.007473,0.007172,0.006573,0.005376,0.003063,-0.001363");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			fall_power(Power_X1) {
				values ("0.002800,0.002577,0.002106,0.001139,-0.000787,-0.004644", \
				        "0.002809,0.002575,0.002103,0.001146,-0.000773,-0.004626", \
				        "0.002798,0.002563,0.002087,0.001135,-0.000781,-0.004623", \
				        "0.002794,0.002555,0.002078,0.001124,-0.000796,-0.004640", \
				        "0.002798,0.002573,0.002098,0.001137,-0.000787,-0.004634", \
				        "0.003003,0.002756,0.002257,0.001283,-0.000683,-0.004554", \
				        "0.003748,0.003463,0.002925,0.001863,-0.000203,-0.004215", \
				        "0.005745,0.005444,0.004845,0.003694,0.001407,-0.002921");
			}
			rise_power(Power_X1) {
				values ("0.006146,0.006378,0.006873,0.007847,0.009783,0.013683", \
				        "0.006130,0.006379,0.006866,0.007838,0.009788,0.013675", \
				        "0.006131,0.006383,0.006864,0.007843,0.009786,0.013678", \
				        "0.006194,0.006430,0.006926,0.007884,0.009814,0.013700", \
				        "0.006369,0.006616,0.007086,0.008034,0.009935,0.013795", \
				        "0.006854,0.007070,0.007533,0.008448,0.010316,0.014099", \
				        "0.007916,0.008142,0.008574,0.009459,0.011257,0.014935", \
				        "0.010298,0.010489,0.010898,0.011741,0.013425,0.016930");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & !A3 & !B2 & !B3 | !A1 & !A2 & A3 & !B2 & !B3";

			rise_power(Power_X1) {
				values ("0.006146,0.006378,0.006873,0.007847,0.009783,0.013683", \
				        "0.006130,0.006379,0.006866,0.007838,0.009788,0.013675", \
				        "0.006131,0.006383,0.006864,0.007843,0.009786,0.013678", \
				        "0.006194,0.006430,0.006926,0.007884,0.009814,0.013700", \
				        "0.006369,0.006616,0.007086,0.008034,0.009935,0.013795", \
				        "0.006854,0.007070,0.007533,0.008448,0.010316,0.014099", \
				        "0.007916,0.008142,0.008574,0.009459,0.011257,0.014935", \
				        "0.010298,0.010489,0.010898,0.011741,0.013425,0.016930");
			}
			fall_power(Power_X1) {
				values ("0.002800,0.002577,0.002106,0.001139,-0.000787,-0.004644", \
				        "0.002809,0.002575,0.002103,0.001146,-0.000773,-0.004626", \
				        "0.002798,0.002563,0.002087,0.001135,-0.000781,-0.004623", \
				        "0.002794,0.002555,0.002078,0.001124,-0.000796,-0.004640", \
				        "0.002798,0.002573,0.002098,0.001137,-0.000787,-0.004634", \
				        "0.003003,0.002756,0.002257,0.001283,-0.000683,-0.004554", \
				        "0.003748,0.003463,0.002925,0.001863,-0.000203,-0.004215", \
				        "0.005745,0.005444,0.004845,0.003694,0.001407,-0.002921");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "!A1 & A2 & A3 & !B2 & !B3";

			rise_power(Power_X1) {
				values ("0.006037,0.006280,0.006757,0.007727,0.009646,0.013555", \
				        "0.006027,0.006261,0.006755,0.007723,0.009666,0.013549", \
				        "0.006044,0.006283,0.006763,0.007732,0.009667,0.013553", \
				        "0.006096,0.006327,0.006813,0.007773,0.009706,0.013584", \
				        "0.006278,0.006503,0.006988,0.007934,0.009841,0.013687", \
				        "0.006736,0.006989,0.007440,0.008365,0.010241,0.014011", \
				        "0.007844,0.008051,0.008497,0.009392,0.011188,0.014870", \
				        "0.010216,0.010419,0.010852,0.011676,0.013369,0.016902");
			}
			fall_power(Power_X1) {
				values ("0.001865,0.001636,0.001146,0.000176,-0.001756,-0.005622", \
				        "0.001869,0.001621,0.001143,0.000183,-0.001749,-0.005602", \
				        "0.001854,0.001606,0.001131,0.000173,-0.001749,-0.005599", \
				        "0.001831,0.001598,0.001118,0.000162,-0.001758,-0.005610", \
				        "0.001877,0.001625,0.001142,0.000180,-0.001746,-0.005611", \
				        "0.002111,0.001849,0.001340,0.000341,-0.001627,-0.005516", \
				        "0.002920,0.002638,0.002092,0.001012,-0.001091,-0.005131", \
				        "0.005093,0.004773,0.004161,0.002963,0.000653,-0.003730");
			}
		}

		internal_power () {

			related_pin	         : "B1";
			when	                 : "A1 & !B2 & !B3";

			rise_power(Power_X1) {
				values ("0.005860,0.006089,0.006567,0.007536,0.009477,0.013361", \
				        "0.005850,0.006088,0.006567,0.007540,0.009472,0.013355", \
				        "0.005835,0.006087,0.006573,0.007542,0.009478,0.013356", \
				        "0.005909,0.006143,0.006620,0.007589,0.009516,0.013382", \
				        "0.006093,0.006320,0.006799,0.007749,0.009657,0.013495", \
				        "0.006565,0.006806,0.007248,0.008179,0.010053,0.013815", \
				        "0.007656,0.007864,0.008315,0.009201,0.011012,0.014683", \
				        "0.010033,0.010240,0.010663,0.011495,0.013194,0.016734");
			}
			fall_power(Power_X1) {
				values ("0.000765,0.000517,0.000037,-0.000935,-0.002869,-0.006738", \
				        "0.000761,0.000518,0.000033,-0.000927,-0.002850,-0.006719", \
				        "0.000737,0.000503,0.000024,-0.000939,-0.002861,-0.006721", \
				        "0.000714,0.000488,0.000006,-0.000951,-0.002871,-0.006727", \
				        "0.000768,0.000520,0.000040,-0.000932,-0.002861,-0.006719", \
				        "0.001070,0.000816,0.000295,-0.000723,-0.002712,-0.006621", \
				        "0.001995,0.001704,0.001138,0.000029,-0.002109,-0.006199", \
				        "0.004302,0.003982,0.003329,0.002109,-0.000249,-0.004702");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			fall_power(Power_X1) {
				values ("0.004051,0.003816,0.003344,0.002370,0.000441,-0.003417", \
				        "0.004023,0.003801,0.003337,0.002372,0.000448,-0.003405", \
				        "0.004033,0.003792,0.003310,0.002357,0.000434,-0.003412", \
				        "0.004033,0.003779,0.003298,0.002343,0.000423,-0.003424", \
				        "0.004029,0.003780,0.003310,0.002351,0.000422,-0.003423", \
				        "0.004132,0.003893,0.003411,0.002442,0.000507,-0.003357", \
				        "0.004659,0.004412,0.003896,0.002893,0.000895,-0.003052", \
				        "0.006259,0.005979,0.005427,0.004336,0.002218,-0.001917");
			}
			rise_power(Power_X1) {
				values ("0.006462,0.006713,0.007206,0.008181,0.010125,0.014012", \
				        "0.006450,0.006694,0.007189,0.008165,0.010110,0.013998", \
				        "0.006455,0.006690,0.007167,0.008145,0.010086,0.013986", \
				        "0.006431,0.006680,0.007167,0.008143,0.010087,0.013983", \
				        "0.006443,0.006693,0.007187,0.008159,0.010097,0.013991", \
				        "0.006618,0.006867,0.007345,0.008299,0.010219,0.014084", \
				        "0.007339,0.007573,0.008011,0.008920,0.010775,0.014538", \
				        "0.009143,0.009356,0.009784,0.010630,0.012368,0.015943");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & !A3 & !B1 & !B3 | !A1 & !A2 & A3 & !B1 & !B3";

			rise_power(Power_X1) {
				values ("0.006462,0.006713,0.007206,0.008181,0.010125,0.014012", \
				        "0.006450,0.006694,0.007189,0.008165,0.010110,0.013998", \
				        "0.006455,0.006690,0.007167,0.008145,0.010086,0.013986", \
				        "0.006431,0.006680,0.007167,0.008143,0.010087,0.013983", \
				        "0.006443,0.006693,0.007187,0.008159,0.010097,0.013991", \
				        "0.006618,0.006867,0.007345,0.008299,0.010219,0.014084", \
				        "0.007339,0.007573,0.008011,0.008920,0.010775,0.014538", \
				        "0.009143,0.009356,0.009784,0.010630,0.012368,0.015943");
			}
			fall_power(Power_X1) {
				values ("0.004051,0.003816,0.003344,0.002370,0.000441,-0.003417", \
				        "0.004023,0.003801,0.003337,0.002372,0.000448,-0.003405", \
				        "0.004033,0.003792,0.003310,0.002357,0.000434,-0.003412", \
				        "0.004033,0.003779,0.003298,0.002343,0.000423,-0.003424", \
				        "0.004029,0.003780,0.003310,0.002351,0.000422,-0.003423", \
				        "0.004132,0.003893,0.003411,0.002442,0.000507,-0.003357", \
				        "0.004659,0.004412,0.003896,0.002893,0.000895,-0.003052", \
				        "0.006259,0.005979,0.005427,0.004336,0.002218,-0.001917");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "!A1 & A2 & A3 & !B1 & !B3";

			rise_power(Power_X1) {
				values ("0.006351,0.006593,0.007092,0.008070,0.010013,0.013895", \
				        "0.006354,0.006582,0.007078,0.008053,0.009996,0.013877", \
				        "0.006330,0.006570,0.007053,0.008029,0.009971,0.013859", \
				        "0.006322,0.006564,0.007055,0.008032,0.009971,0.013858", \
				        "0.006342,0.006582,0.007076,0.008044,0.009980,0.013870", \
				        "0.006519,0.006763,0.007240,0.008196,0.010107,0.013963", \
				        "0.007242,0.007469,0.007923,0.008838,0.010691,0.014439", \
				        "0.009075,0.009252,0.009696,0.010554,0.012284,0.015873");
			}
			fall_power(Power_X1) {
				values ("0.003093,0.002867,0.002385,0.001415,-0.000525,-0.004393", \
				        "0.003078,0.002844,0.002374,0.001413,-0.000517,-0.004375", \
				        "0.003074,0.002841,0.002356,0.001398,-0.000529,-0.004390", \
				        "0.003057,0.002837,0.002343,0.001392,-0.000540,-0.004391", \
				        "0.003070,0.002831,0.002355,0.001393,-0.000533,-0.004396", \
				        "0.003191,0.002964,0.002471,0.001498,-0.000447,-0.004321", \
				        "0.003794,0.003539,0.003015,0.002004,-0.000016,-0.003980", \
				        "0.005485,0.005226,0.004658,0.003565,0.001410,-0.002771");
			}
		}

		internal_power () {

			related_pin	         : "B2";
			when	                 : "A1 & !B1 & !B3";

			rise_power(Power_X1) {
				values ("0.006162,0.006412,0.006906,0.007876,0.009814,0.013689", \
				        "0.006148,0.006403,0.006891,0.007860,0.009807,0.013681", \
				        "0.006139,0.006386,0.006870,0.007842,0.009782,0.013658", \
				        "0.006129,0.006378,0.006864,0.007835,0.009779,0.013657", \
				        "0.006162,0.006392,0.006885,0.007851,0.009792,0.013668", \
				        "0.006327,0.006581,0.007054,0.008002,0.009917,0.013764", \
				        "0.007058,0.007284,0.007734,0.008656,0.010498,0.014248", \
				        "0.008862,0.009070,0.009516,0.010371,0.012110,0.015693");
			}
			fall_power(Power_X1) {
				values ("0.002006,0.001777,0.001276,0.000302,-0.001632,-0.005505", \
				        "0.002008,0.001743,0.001267,0.000302,-0.001626,-0.005497", \
				        "0.001981,0.001742,0.001256,0.000289,-0.001636,-0.005501", \
				        "0.001939,0.001717,0.001241,0.000282,-0.001646,-0.005512", \
				        "0.001963,0.001733,0.001251,0.000285,-0.001645,-0.005511", \
				        "0.002124,0.001885,0.001395,0.000413,-0.001543,-0.005423", \
				        "0.002793,0.002525,0.002002,0.000970,-0.001055,-0.005063", \
				        "0.004628,0.004344,0.003766,0.002638,0.000449,-0.003784");
			}
		}

		internal_power () {

			related_pin	         : "B3";
			fall_power(Power_X1) {
				values ("0.004972,0.004758,0.004292,0.003322,0.001397,-0.002450", \
				        "0.004974,0.004738,0.004277,0.003313,0.001395,-0.002443", \
				        "0.004959,0.004719,0.004242,0.003289,0.001375,-0.002461", \
				        "0.004946,0.004707,0.004229,0.003275,0.001355,-0.002482", \
				        "0.004951,0.004714,0.004243,0.003282,0.001359,-0.002479", \
				        "0.005040,0.004797,0.004318,0.003354,0.001430,-0.002419", \
				        "0.005522,0.005264,0.004770,0.003771,0.001787,-0.002137", \
				        "0.007152,0.006891,0.006338,0.005261,0.003140,-0.000988");
			}
			rise_power(Power_X1) {
				values ("0.006739,0.006986,0.007480,0.008454,0.010397,0.014287", \
				        "0.006744,0.006986,0.007473,0.008450,0.010392,0.014282", \
				        "0.006733,0.006978,0.007467,0.008444,0.010383,0.014283", \
				        "0.006720,0.006962,0.007446,0.008428,0.010373,0.014263", \
				        "0.006709,0.006962,0.007452,0.008427,0.010369,0.014268", \
				        "0.006803,0.007031,0.007517,0.008484,0.010422,0.014297", \
				        "0.007303,0.007536,0.007998,0.008918,0.010804,0.014607", \
				        "0.009189,0.009389,0.009776,0.010627,0.012355,0.015941");
			}
		}

		internal_power () {

			related_pin	         : "B3";
			when	                 : "!A1 & A2 & !A3 & !B1 & !B2 | !A1 & !A2 & A3 & !B1 & !B2";

			rise_power(Power_X1) {
				values ("0.006739,0.006986,0.007480,0.008454,0.010397,0.014287", \
				        "0.006744,0.006986,0.007473,0.008450,0.010392,0.014282", \
				        "0.006733,0.006978,0.007467,0.008444,0.010383,0.014283", \
				        "0.006720,0.006962,0.007446,0.008428,0.010373,0.014263", \
				        "0.006709,0.006962,0.007452,0.008427,0.010369,0.014268", \
				        "0.006803,0.007031,0.007517,0.008484,0.010422,0.014297", \
				        "0.007303,0.007536,0.007998,0.008918,0.010804,0.014607", \
				        "0.009189,0.009389,0.009776,0.010627,0.012355,0.015941");
			}
			fall_power(Power_X1) {
				values ("0.004972,0.004758,0.004292,0.003322,0.001397,-0.002450", \
				        "0.004974,0.004738,0.004277,0.003313,0.001395,-0.002443", \
				        "0.004959,0.004719,0.004242,0.003289,0.001375,-0.002461", \
				        "0.004946,0.004707,0.004229,0.003275,0.001355,-0.002482", \
				        "0.004951,0.004714,0.004243,0.003282,0.001359,-0.002479", \
				        "0.005040,0.004797,0.004318,0.003354,0.001430,-0.002419", \
				        "0.005522,0.005264,0.004770,0.003771,0.001787,-0.002137", \
				        "0.007152,0.006891,0.006338,0.005261,0.003140,-0.000988");
			}
		}

		internal_power () {

			related_pin	         : "B3";
			when	                 : "!A1 & A2 & A3 & !B1 & !B2";

			rise_power(Power_X1) {
				values ("0.006628,0.006881,0.007370,0.008346,0.010287,0.014169", \
				        "0.006632,0.006870,0.007364,0.008336,0.010283,0.014162", \
				        "0.006624,0.006858,0.007360,0.008329,0.010271,0.014155", \
				        "0.006628,0.006858,0.007340,0.008312,0.010254,0.014146", \
				        "0.006603,0.006849,0.007339,0.008313,0.010257,0.014137", \
				        "0.006679,0.006911,0.007408,0.008368,0.010305,0.014171", \
				        "0.007210,0.007436,0.007893,0.008829,0.010703,0.014496", \
				        "0.009089,0.009293,0.009713,0.010561,0.012287,0.015864");
			}
			fall_power(Power_X1) {
				values ("0.004034,0.003810,0.003332,0.002366,0.000441,-0.003380", \
				        "0.004039,0.003786,0.003313,0.002355,0.000429,-0.003419", \
				        "0.004013,0.003772,0.003287,0.002330,0.000412,-0.003437", \
				        "0.003995,0.003758,0.003271,0.002318,0.000397,-0.003454", \
				        "0.003991,0.003762,0.003287,0.002325,0.000403,-0.003454", \
				        "0.004095,0.003861,0.003377,0.002405,0.000471,-0.003389", \
				        "0.004630,0.004380,0.003880,0.002870,0.000871,-0.003073", \
				        "0.006428,0.006149,0.005587,0.004484,0.002340,-0.001843");
			}
		}

		internal_power () {

			related_pin	         : "B3";
			when	                 : "A1 & !B1 & !B2";

			rise_power(Power_X1) {
				values ("0.006426,0.006688,0.007180,0.008153,0.010088,0.013962", \
				        "0.006431,0.006687,0.007172,0.008145,0.010083,0.013957", \
				        "0.006418,0.006677,0.007165,0.008138,0.010082,0.013959", \
				        "0.006421,0.006665,0.007152,0.008120,0.010059,0.013941", \
				        "0.006417,0.006668,0.007149,0.008122,0.010062,0.013946", \
				        "0.006493,0.006728,0.007222,0.008177,0.010112,0.013981", \
				        "0.007025,0.007254,0.007711,0.008647,0.010512,0.014303", \
				        "0.008909,0.009107,0.009529,0.010376,0.012104,0.015683");
			}
			fall_power(Power_X1) {
				values ("0.002950,0.002713,0.002223,0.001255,-0.000673,-0.004535", \
				        "0.002935,0.002685,0.002209,0.001247,-0.000680,-0.004530", \
				        "0.002924,0.002667,0.002187,0.001228,-0.000698,-0.004551", \
				        "0.002903,0.002661,0.002169,0.001212,-0.000708,-0.004568", \
				        "0.002886,0.002656,0.002185,0.001220,-0.000706,-0.004570", \
				        "0.003005,0.002770,0.002286,0.001310,-0.000625,-0.004498", \
				        "0.003656,0.003380,0.002855,0.001834,-0.000188,-0.004160", \
				        "0.005574,0.005292,0.004704,0.003575,0.001378,-0.002847");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR2_X1
 Cell Description	: Combinational cell (OR2_X1) with drive strength X1
*******************************************************************************************/

cell (OR2_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 6764.751250;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 7698.874000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 6104.905000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 5395.301000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 7859.925000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000557;
		fall_capacitance	: 0.000509;
		rise_capacitance	: 0.000605;
		fall_capacitance_range		(0.000446, 0.000609);
		rise_capacitance_range		(0.000482, 0.000697);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000534;
		fall_capacitance	: 0.000513;
		rise_capacitance	: 0.000555;
		fall_capacitance_range		(0.000428, 0.000591);
		rise_capacitance_range		(0.000456, 0.000630);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000014,0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.049678,0.054005,0.061498,0.074425,0.096558,0.136226", \
				        "0.052912,0.057240,0.064757,0.077737,0.099833,0.139531", \
				        "0.060097,0.064409,0.071980,0.084957,0.107072,0.146822", \
				        "0.074421,0.078745,0.086303,0.099146,0.121336,0.160990", \
				        "0.095431,0.100174,0.108198,0.121749,0.144701,0.184778", \
				        "0.125606,0.131024,0.140084,0.154828,0.178892,0.219951", \
				        "0.171966,0.178335,0.189369,0.206476,0.233514,0.277227", \
				        "0.248083,0.255845,0.268848,0.290292,0.323231,0.373991");
			}
			cell_rise(Timing_X1) {
				values ("0.035603,0.040516,0.050186,0.069217,0.106990,0.182367", \
				        "0.039004,0.043899,0.053562,0.072471,0.110148,0.185501", \
				        "0.045026,0.049924,0.059442,0.078216,0.115952,0.191328", \
				        "0.052447,0.057468,0.067140,0.086172,0.123602,0.198921", \
				        "0.059777,0.065209,0.075123,0.094141,0.131677,0.206844", \
				        "0.063853,0.070345,0.081278,0.100877,0.138572,0.213574", \
				        "0.056439,0.064453,0.078309,0.100394,0.139303,0.214911", \
				        "0.022680,0.032484,0.049439,0.077654,0.121913,0.199889");
			}
			fall_transition(Timing_X1) {
				values ("0.011778,0.014007,0.018215,0.026102,0.041097,0.071461", \
				        "0.011778,0.013990,0.018192,0.026080,0.041096,0.071398", \
				        "0.011731,0.013968,0.018169,0.026145,0.041083,0.071407", \
				        "0.012216,0.014336,0.018445,0.026312,0.041250,0.071472", \
				        "0.014335,0.016381,0.020313,0.027977,0.042461,0.072142", \
				        "0.017706,0.019849,0.023742,0.030915,0.044873,0.073757", \
				        "0.023179,0.025587,0.029798,0.037244,0.050613,0.077775", \
				        "0.032646,0.035474,0.040518,0.049025,0.063365,0.089509");
			}
			rise_transition(Timing_X1) {
				values ("0.012539,0.016663,0.025293,0.043147,0.079000,0.150572", \
				        "0.012544,0.016668,0.025301,0.043139,0.078961,0.150586", \
				        "0.012768,0.016798,0.025349,0.043145,0.078998,0.150572", \
				        "0.013641,0.017407,0.025707,0.043253,0.078953,0.150578", \
				        "0.015622,0.018991,0.026577,0.043581,0.079041,0.150632", \
				        "0.019502,0.022864,0.029583,0.045123,0.079676,0.150831", \
				        "0.025600,0.029766,0.036826,0.050524,0.082445,0.152528", \
				        "0.035047,0.040154,0.049231,0.064066,0.091901,0.157970");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.070041,0.074361,0.081871,0.094697,0.116913,0.156587", \
				        "0.073719,0.078037,0.085492,0.098148,0.120222,0.159911", \
				        "0.080069,0.084393,0.091928,0.104731,0.126688,0.166375", \
				        "0.091087,0.095426,0.102956,0.115873,0.137953,0.177601", \
				        "0.107344,0.112018,0.120112,0.133686,0.156526,0.196544", \
				        "0.132055,0.137308,0.146088,0.161066,0.185472,0.227032", \
				        "0.174246,0.180311,0.190717,0.207697,0.235047,0.279765", \
				        "0.243729,0.250990,0.263548,0.283587,0.316062,0.367340");
			}
			cell_rise(Timing_X1) {
				values ("0.042032,0.047146,0.056975,0.076391,0.114322,0.189887", \
				        "0.045406,0.050514,0.060367,0.079766,0.117525,0.193073", \
				        "0.052257,0.057323,0.067084,0.086056,0.123854,0.199380", \
				        "0.062727,0.067840,0.077603,0.096786,0.134427,0.209906", \
				        "0.074181,0.079587,0.089528,0.108668,0.146413,0.221746", \
				        "0.084117,0.090311,0.100952,0.120305,0.158010,0.233111", \
				        "0.086573,0.094005,0.106767,0.127664,0.165596,0.240700", \
				        "0.070089,0.079113,0.094700,0.119827,0.160757,0.236616");
			}
			fall_transition(Timing_X1) {
				values ("0.011774,0.014013,0.018204,0.026231,0.041092,0.071471", \
				        "0.011781,0.014014,0.018198,0.026167,0.041105,0.071395", \
				        "0.011795,0.014015,0.018205,0.026167,0.041064,0.071407", \
				        "0.011984,0.014164,0.018321,0.026292,0.041144,0.071508", \
				        "0.013572,0.015793,0.019966,0.027803,0.042292,0.071999", \
				        "0.016255,0.018596,0.022902,0.030844,0.045321,0.074102", \
				        "0.020645,0.023206,0.027871,0.036121,0.050941,0.078949", \
				        "0.027910,0.030844,0.036057,0.045365,0.061307,0.090066");
			}
			rise_transition(Timing_X1) {
				values ("0.013339,0.017376,0.025923,0.043510,0.079277,0.150831", \
				        "0.013320,0.017363,0.025920,0.043568,0.079310,0.150807", \
				        "0.013301,0.017340,0.025899,0.043508,0.079317,0.150842", \
				        "0.013916,0.017745,0.026084,0.043634,0.079320,0.150836", \
				        "0.015509,0.018971,0.026749,0.043929,0.079407,0.150860", \
				        "0.018617,0.021889,0.028828,0.044864,0.079671,0.151032", \
				        "0.023600,0.027401,0.034056,0.048145,0.081097,0.151729", \
				        "0.031066,0.035726,0.043772,0.057340,0.086211,0.154536");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.001944,0.001697,0.001216,0.000239,-0.001708,-0.005593", \
				        "0.001954,0.001705,0.001218,0.000244,-0.001700,-0.005586", \
				        "0.001980,0.001728,0.001240,0.000273,-0.001669,-0.005556", \
				        "0.002084,0.001837,0.001347,0.000383,-0.001556,-0.005429", \
				        "0.002339,0.002083,0.001580,0.000616,-0.001322,-0.005200", \
				        "0.002933,0.002635,0.002140,0.001153,-0.000792,-0.004681", \
				        "0.004234,0.003955,0.003404,0.002387,0.000420,-0.003481", \
				        "0.007118,0.006799,0.006214,0.005151,0.003129,-0.000806");
			}
			rise_power(Power_X1) {
				values ("0.001368,0.001614,0.002106,0.003082,0.005025,0.008900", \
				        "0.001371,0.001615,0.002106,0.003084,0.005024,0.008898", \
				        "0.001388,0.001628,0.002114,0.003083,0.005031,0.008906", \
				        "0.001457,0.001694,0.002179,0.003152,0.005091,0.008965", \
				        "0.001686,0.001920,0.002400,0.003362,0.005295,0.009165", \
				        "0.002295,0.002533,0.002993,0.003944,0.005865,0.009724", \
				        "0.003699,0.003906,0.004362,0.005293,0.007193,0.011029", \
				        "0.006672,0.006857,0.007280,0.008186,0.010046,0.013840");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.002199,0.001952,0.001466,0.000509,-0.001447,-0.005331", \
				        "0.002185,0.001934,0.001446,0.000479,-0.001476,-0.005359", \
				        "0.002155,0.001910,0.001425,0.000451,-0.001508,-0.005389", \
				        "0.002132,0.001881,0.001393,0.000422,-0.001522,-0.005398", \
				        "0.002162,0.001918,0.001428,0.000458,-0.001482,-0.005361", \
				        "0.002484,0.002218,0.001711,0.000733,-0.001211,-0.005092", \
				        "0.003471,0.003194,0.002675,0.001671,-0.000286,-0.004181", \
				        "0.005856,0.005568,0.004994,0.003941,0.001948,-0.001969");
			}
			rise_power(Power_X1) {
				values ("0.002265,0.002514,0.002999,0.003967,0.005916,0.009798", \
				        "0.002253,0.002508,0.002992,0.003966,0.005912,0.009794", \
				        "0.002273,0.002508,0.002988,0.003957,0.005904,0.009785", \
				        "0.002324,0.002564,0.003043,0.004016,0.005959,0.009836", \
				        "0.002511,0.002740,0.003217,0.004183,0.006117,0.009991", \
				        "0.003016,0.003242,0.003710,0.004659,0.006581,0.010444", \
				        "0.004202,0.004421,0.004883,0.005814,0.007712,0.011552", \
				        "0.006772,0.006974,0.007409,0.008323,0.010188,0.013994");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR2_X2
 Cell Description	: Combinational cell (OR2_X2) with drive strength X2
*******************************************************************************************/

cell (OR2_X2) {

	area               	: 1.064000;

	cell_leakage_power 	: 9477.478500;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 11815.320000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 8349.796000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 7640.148000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 10104.650000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000609;
		fall_capacitance	: 0.000562;
		rise_capacitance	: 0.000656;
		fall_capacitance_range		(0.000499, 0.000655);
		rise_capacitance_range		(0.000551, 0.000754);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000530;
		fall_capacitance	: 0.000509;
		rise_capacitance	: 0.000551;
		fall_capacitance_range		(0.000413, 0.000586);
		rise_capacitance_range		(0.000456, 0.000629);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000014,0.000008,0.000005,0.000003,0.000001,0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.050497,0.057872,0.065831,0.079117,0.101288,0.140402", \
				        "0.053691,0.061053,0.069029,0.082344,0.104483,0.143614", \
				        "0.060736,0.068087,0.076108,0.089485,0.111705,0.150850", \
				        "0.075597,0.082884,0.090718,0.103997,0.126216,0.165220", \
				        "0.097893,0.105898,0.114318,0.128144,0.151044,0.190428", \
				        "0.129332,0.138426,0.148027,0.163115,0.187358,0.227768", \
				        "0.177391,0.187936,0.199252,0.216845,0.243979,0.287112", \
				        "0.255738,0.268364,0.281562,0.303190,0.336035,0.386197");
			}
			cell_rise(Timing_X2) {
				values ("0.032815,0.040497,0.049984,0.068322,0.104788,0.177561", \
				        "0.036246,0.043906,0.053410,0.071713,0.108005,0.180761", \
				        "0.042603,0.050269,0.059655,0.077820,0.114158,0.186922", \
				        "0.050713,0.058802,0.068371,0.086698,0.122784,0.195478", \
				        "0.058671,0.067797,0.077707,0.096255,0.132203,0.204750", \
				        "0.063266,0.074140,0.085622,0.104844,0.141076,0.213335", \
				        "0.057183,0.070182,0.084415,0.106828,0.144497,0.217152", \
				        "0.025685,0.041074,0.058082,0.086503,0.130477,0.205488");
			}
			fall_transition(Timing_X2) {
				values ("0.010646,0.014087,0.018293,0.026043,0.040338,0.069311", \
				        "0.010630,0.014079,0.018278,0.026034,0.040340,0.069252", \
				        "0.010595,0.014060,0.018266,0.025948,0.040344,0.069284", \
				        "0.010964,0.014274,0.018437,0.026126,0.040442,0.069326", \
				        "0.013493,0.016628,0.020505,0.027877,0.041625,0.069963", \
				        "0.017235,0.020537,0.024369,0.031415,0.044624,0.071921", \
				        "0.023011,0.026699,0.030844,0.038073,0.050835,0.076374", \
				        "0.033012,0.037239,0.042075,0.050242,0.064012,0.088607");
			}
			rise_transition(Timing_X2) {
				values ("0.009060,0.014706,0.022840,0.039801,0.074429,0.143507", \
				        "0.009058,0.014713,0.022830,0.039855,0.074345,0.143455", \
				        "0.009306,0.014866,0.022891,0.039841,0.074429,0.143508", \
				        "0.010580,0.015707,0.023399,0.040019,0.074322,0.143465", \
				        "0.012803,0.017722,0.024696,0.040597,0.074519,0.143526", \
				        "0.016349,0.021917,0.028315,0.042614,0.075143,0.143797", \
				        "0.022054,0.028716,0.035981,0.048867,0.078408,0.145386", \
				        "0.031838,0.039257,0.048284,0.063094,0.089079,0.151036");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.070838,0.078209,0.086173,0.099384,0.121642,0.160750", \
				        "0.074531,0.081910,0.089833,0.102943,0.125023,0.164149", \
				        "0.080909,0.088270,0.096289,0.109499,0.131506,0.170590", \
				        "0.092147,0.099494,0.107450,0.120833,0.142954,0.182108", \
				        "0.109324,0.117208,0.125643,0.139491,0.162245,0.201613", \
				        "0.135133,0.143828,0.153120,0.168170,0.192730,0.233615", \
				        "0.178633,0.188575,0.199551,0.216468,0.243802,0.287818", \
				        "0.250801,0.262440,0.274691,0.295344,0.327090,0.377391");
			}
			cell_rise(Timing_X2) {
				values ("0.039141,0.047201,0.056905,0.075558,0.112217,0.185139", \
				        "0.042475,0.050526,0.060269,0.078862,0.115415,0.188393", \
				        "0.049444,0.057429,0.067083,0.085509,0.122032,0.194952", \
				        "0.060500,0.068695,0.078357,0.096891,0.133288,0.206094", \
				        "0.072495,0.081524,0.091544,0.110173,0.146333,0.219169", \
				        "0.082995,0.093502,0.104482,0.123584,0.159772,0.232175", \
				        "0.086368,0.098707,0.112059,0.133120,0.169949,0.242084", \
				        "0.071689,0.086123,0.101885,0.127790,0.168250,0.241122");
			}
			fall_transition(Timing_X2) {
				values ("0.010650,0.014093,0.018299,0.026032,0.040316,0.069293", \
				        "0.010650,0.014093,0.018299,0.025990,0.040353,0.069254", \
				        "0.010650,0.014090,0.018284,0.026028,0.040308,0.069324", \
				        "0.010768,0.014186,0.018378,0.026067,0.040383,0.069313", \
				        "0.012398,0.015817,0.019927,0.027439,0.041394,0.069834", \
				        "0.015204,0.018768,0.022977,0.030644,0.044687,0.072192", \
				        "0.019831,0.023652,0.028113,0.036081,0.050334,0.077104", \
				        "0.027401,0.031712,0.036740,0.045557,0.060779,0.088238");
			}
			rise_transition(Timing_X2) {
				values ("0.009819,0.015487,0.023487,0.040315,0.074788,0.143771", \
				        "0.009809,0.015475,0.023481,0.040313,0.074745,0.143782", \
				        "0.009766,0.015448,0.023477,0.040320,0.074748,0.143715", \
				        "0.010695,0.015967,0.023730,0.040413,0.074789,0.143785", \
				        "0.012671,0.017643,0.024754,0.040828,0.074818,0.143814", \
				        "0.015683,0.021017,0.027457,0.042137,0.075163,0.143976", \
				        "0.020380,0.026632,0.033383,0.046416,0.076862,0.144664", \
				        "0.028025,0.035069,0.043357,0.056841,0.083386,0.147574");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.002540,0.001753,0.000774,-0.001183,-0.005075,-0.012852", \
				        "0.002533,0.001753,0.000771,-0.001183,-0.005062,-0.012846", \
				        "0.002548,0.001774,0.000788,-0.001162,-0.005042,-0.012828", \
				        "0.002680,0.001884,0.000894,-0.001049,-0.004930,-0.012687", \
				        "0.003017,0.002184,0.001158,-0.000801,-0.004681,-0.012436", \
				        "0.003738,0.002836,0.001766,-0.000235,-0.004146,-0.011931", \
				        "0.005246,0.004282,0.003140,0.001057,-0.002906,-0.010734", \
				        "0.008475,0.007454,0.006214,0.003978,-0.000116,-0.008016");
			}
			rise_power(Power_X2) {
				values ("0.001741,0.002474,0.003450,0.005403,0.009292,0.017043", \
				        "0.001744,0.002493,0.003454,0.005411,0.009290,0.017040", \
				        "0.001770,0.002492,0.003457,0.005402,0.009289,0.017043", \
				        "0.001873,0.002576,0.003535,0.005477,0.009348,0.017096", \
				        "0.002138,0.002831,0.003772,0.005691,0.009548,0.017285", \
				        "0.002829,0.003486,0.004409,0.006297,0.010131,0.017840", \
				        "0.004414,0.005002,0.005894,0.007739,0.011522,0.019179", \
				        "0.007802,0.008286,0.009088,0.010851,0.014549,0.022116");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.002779,0.001999,0.001019,-0.000924,-0.004816,-0.012591", \
				        "0.002770,0.001984,0.001001,-0.000945,-0.004841,-0.012616", \
				        "0.002739,0.001961,0.000987,-0.000972,-0.004870,-0.012639", \
				        "0.002724,0.001937,0.000945,-0.000999,-0.004880,-0.012665", \
				        "0.002818,0.002002,0.000989,-0.000951,-0.004839,-0.012587", \
				        "0.003224,0.002361,0.001324,-0.000663,-0.004569,-0.012334", \
				        "0.004367,0.003447,0.002346,0.000300,-0.003636,-0.011441", \
				        "0.007011,0.006010,0.004836,0.002673,-0.001362,-0.009226");
			}
			rise_power(Power_X2) {
				values ("0.002651,0.003376,0.004345,0.006292,0.010186,0.017945", \
				        "0.002642,0.003355,0.004331,0.006286,0.010176,0.017936", \
				        "0.002658,0.003376,0.004347,0.006284,0.010170,0.017929", \
				        "0.002750,0.003448,0.004409,0.006341,0.010217,0.017965", \
				        "0.002984,0.003657,0.004615,0.006527,0.010382,0.018126", \
				        "0.003588,0.004235,0.005157,0.007043,0.010876,0.018585", \
				        "0.004934,0.005553,0.006431,0.008290,0.012072,0.019733", \
				        "0.007864,0.008384,0.009216,0.011003,0.014712,0.022292");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR2_X4
 Cell Description	: Combinational cell (OR2_X4) with drive strength X4
*******************************************************************************************/

cell (OR2_X4) {

	area               	: 1.064000;

	cell_leakage_power 	: 14903.310000;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 20048.630000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 12840.010000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 12130.250000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 14594.350000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000578;
		fall_capacitance	: 0.000531;
		rise_capacitance	: 0.000624;
		fall_capacitance_range		(0.000478, 0.000616);
		rise_capacitance_range		(0.000509, 0.000730);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000531;
		fall_capacitance	: 0.000510;
		rise_capacitance	: 0.000552;
		fall_capacitance_range		(0.000420, 0.000581);
		rise_capacitance_range		(0.000472, 0.000631);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000020,0.000014,0.000008,0.000005,0.000003,0.000002,-0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.057872,0.067434,0.075941,0.089883,0.112876,0.152418", \
				        "0.061043,0.070613,0.079080,0.093085,0.116043,0.155569", \
				        "0.067982,0.077548,0.085976,0.100027,0.123069,0.162651", \
				        "0.082942,0.092380,0.100803,0.114683,0.137674,0.177194", \
				        "0.108020,0.118067,0.126910,0.141155,0.164513,0.204146", \
				        "0.142736,0.153974,0.164029,0.179605,0.204371,0.245127", \
				        "0.195174,0.207867,0.219225,0.237310,0.264935,0.308376", \
				        "0.279400,0.294040,0.307132,0.328656,0.361664,0.411858");
			}
			cell_rise(Timing_X4) {
				values ("0.034231,0.043926,0.053511,0.071701,0.107498,0.179060", \
				        "0.037630,0.047318,0.056948,0.074972,0.110794,0.182345", \
				        "0.044334,0.053986,0.063510,0.081536,0.117178,0.188747", \
				        "0.053788,0.064036,0.073693,0.091751,0.127289,0.198702", \
				        "0.063431,0.074996,0.085190,0.103511,0.138790,0.210018", \
				        "0.070505,0.083887,0.095865,0.115178,0.150530,0.221299", \
				        "0.068687,0.084072,0.098321,0.121225,0.158316,0.229171", \
				        "0.043256,0.060830,0.077554,0.105840,0.149878,0.223126");
			}
			fall_transition(Timing_X4) {
				values ("0.012104,0.016161,0.020333,0.027988,0.042088,0.070237", \
				        "0.012108,0.016155,0.020311,0.027976,0.042078,0.070232", \
				        "0.012098,0.016152,0.020340,0.027975,0.042073,0.070235", \
				        "0.012057,0.016176,0.020365,0.028009,0.042162,0.070283", \
				        "0.015094,0.018681,0.022433,0.029579,0.043174,0.070860", \
				        "0.019850,0.023486,0.027152,0.033913,0.046859,0.073217", \
				        "0.026817,0.030666,0.034590,0.041492,0.053747,0.078268", \
				        "0.038592,0.042704,0.047106,0.054749,0.067730,0.091127");
			}
			rise_transition(Timing_X4) {
				values ("0.008230,0.014715,0.022484,0.038920,0.072741,0.140614", \
				        "0.008228,0.014717,0.022469,0.038885,0.072726,0.140624", \
				        "0.008377,0.014805,0.022527,0.038922,0.072649,0.140593", \
				        "0.009802,0.015807,0.023122,0.039085,0.072754,0.140633", \
				        "0.012150,0.018188,0.024813,0.039819,0.072908,0.140659", \
				        "0.016019,0.022741,0.029047,0.042413,0.073639,0.140893", \
				        "0.022691,0.029992,0.037333,0.049789,0.077401,0.142455", \
				        "0.034605,0.041813,0.050348,0.064971,0.089784,0.148490");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.078267,0.087839,0.096295,0.110204,0.133294,0.172796", \
				        "0.081938,0.091504,0.099965,0.113779,0.136732,0.176235", \
				        "0.088351,0.097919,0.106426,0.120352,0.143198,0.182710", \
				        "0.099771,0.109288,0.117776,0.131822,0.154842,0.194448", \
				        "0.118777,0.128731,0.137601,0.151874,0.175121,0.214777", \
				        "0.147120,0.157907,0.167608,0.183065,0.207993,0.249155", \
				        "0.194439,0.206456,0.217328,0.234682,0.261968,0.306118", \
				        "0.272181,0.285897,0.298022,0.318573,0.350062,0.399942");
			}
			cell_rise(Timing_X4) {
				values ("0.040621,0.050749,0.060584,0.078989,0.115071,0.186784", \
				        "0.043933,0.054059,0.063914,0.082285,0.118258,0.189997", \
				        "0.050931,0.060994,0.070812,0.089117,0.125014,0.196727", \
				        "0.062903,0.073222,0.083026,0.101302,0.137067,0.208665", \
				        "0.076493,0.087932,0.098161,0.116612,0.152162,0.223472", \
				        "0.089131,0.102223,0.113673,0.132817,0.168292,0.239222", \
				        "0.095844,0.110731,0.124435,0.145926,0.182266,0.252747", \
				        "0.086250,0.103095,0.118885,0.145165,0.185787,0.256939");
			}
			fall_transition(Timing_X4) {
				values ("0.012092,0.016160,0.020306,0.027968,0.042094,0.070253", \
				        "0.012098,0.016162,0.020314,0.027953,0.042067,0.070275", \
				        "0.012105,0.016164,0.020325,0.027988,0.042101,0.070251", \
				        "0.012139,0.016197,0.020358,0.027997,0.042095,0.070224", \
				        "0.013830,0.017755,0.021766,0.029181,0.042855,0.070700", \
				        "0.017104,0.021087,0.025141,0.032678,0.046402,0.073194", \
				        "0.022502,0.026570,0.030751,0.038394,0.052175,0.078303", \
				        "0.031453,0.035770,0.040357,0.048467,0.063040,0.089487");
			}
			rise_transition(Timing_X4) {
				values ("0.008976,0.015464,0.023140,0.039441,0.073087,0.140876", \
				        "0.008969,0.015452,0.023123,0.039345,0.073018,0.140868", \
				        "0.008902,0.015427,0.023139,0.039398,0.073044,0.140881", \
				        "0.009881,0.015977,0.023415,0.039511,0.073040,0.140907", \
				        "0.012030,0.018026,0.024850,0.040121,0.073191,0.140945", \
				        "0.015333,0.021885,0.028209,0.041982,0.073691,0.141106", \
				        "0.020904,0.028010,0.034904,0.047313,0.075942,0.141838", \
				        "0.030383,0.037537,0.045648,0.059082,0.084020,0.144997");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.003867,0.001856,-0.000190,-0.004119,-0.011915,-0.027471", \
				        "0.003865,0.001854,-0.000194,-0.004123,-0.011908,-0.027458", \
				        "0.003885,0.001868,-0.000178,-0.004110,-0.011903,-0.027472", \
				        "0.004008,0.001985,-0.000077,-0.004008,-0.011786,-0.027335", \
				        "0.004552,0.002426,0.000282,-0.003691,-0.011495,-0.027020", \
				        "0.005631,0.003343,0.001073,-0.003028,-0.010901,-0.026510", \
				        "0.007663,0.005224,0.002796,-0.001545,-0.009573,-0.025278", \
				        "0.011771,0.009188,0.006558,0.001870,-0.006533,-0.022448");
			}
			rise_power(Power_X4) {
				values ("0.002612,0.004289,0.006241,0.010139,0.017916,0.033423", \
				        "0.002624,0.004291,0.006245,0.010137,0.017911,0.033412", \
				        "0.002666,0.004322,0.006251,0.010139,0.017905,0.033411", \
				        "0.002843,0.004453,0.006358,0.010219,0.017959,0.033452", \
				        "0.003239,0.004783,0.006654,0.010478,0.018169,0.033635", \
				        "0.004184,0.005601,0.007419,0.011171,0.018809,0.034204", \
				        "0.006311,0.007477,0.009179,0.012829,0.020353,0.035637", \
				        "0.010740,0.011548,0.013018,0.016452,0.023786,0.038863");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.004106,0.002099,0.000059,-0.003858,-0.011644,-0.027183", \
				        "0.004102,0.002083,0.000040,-0.003884,-0.011680,-0.027220", \
				        "0.004078,0.002066,0.000022,-0.003910,-0.011709,-0.027248", \
				        "0.004065,0.002043,-0.000010,-0.003940,-0.011732,-0.027298", \
				        "0.004279,0.002196,0.000087,-0.003859,-0.011642,-0.027147", \
				        "0.004934,0.002730,0.000529,-0.003516,-0.011351,-0.026914", \
				        "0.006475,0.004127,0.001777,-0.002430,-0.010376,-0.026027", \
				        "0.009787,0.007279,0.004750,0.000250,-0.007957,-0.023758");
			}
			rise_power(Power_X4) {
				values ("0.003561,0.005211,0.007141,0.011028,0.018806,0.034315", \
				        "0.003552,0.005202,0.007135,0.011022,0.018793,0.034304", \
				        "0.003581,0.005223,0.007151,0.011029,0.018797,0.034301", \
				        "0.003741,0.005349,0.007244,0.011094,0.018834,0.034321", \
				        "0.004112,0.005642,0.007523,0.011334,0.019030,0.034484", \
				        "0.004954,0.006390,0.008206,0.011956,0.019593,0.034982", \
				        "0.006813,0.008038,0.009760,0.013422,0.020952,0.036234", \
				        "0.010631,0.011561,0.013111,0.016605,0.023967,0.039072");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR3_X1
 Cell Description	: Combinational cell (OR3_X1) with drive strength X1
*******************************************************************************************/

cell (OR3_X1) {

	area               	: 1.330000;

	cell_leakage_power 	: 7720.493375;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 9725.773000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 5498.880000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 6537.825000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 7881.313000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 5591.333000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 7867.218000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 7910.165000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 10751.440000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000643;
		fall_capacitance	: 0.000572;
		rise_capacitance	: 0.000714;
		fall_capacitance_range		(0.000499, 0.000680);
		rise_capacitance_range		(0.000559, 0.000843);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000622;
		fall_capacitance	: 0.000576;
		rise_capacitance	: 0.000667;
		fall_capacitance_range		(0.000495, 0.000655);
		rise_capacitance_range		(0.000571, 0.000765);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000039,0.000025,0.000014,0.000008,0.000004,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000609;
		fall_capacitance	: 0.000588;
		rise_capacitance	: 0.000630;
		fall_capacitance_range		(0.000505, 0.000670);
		rise_capacitance_range		(0.000552, 0.000723);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.057637,0.062790,0.071672,0.086629,0.111960,0.155090", \
				        "0.060696,0.065849,0.074767,0.089820,0.115177,0.158308", \
				        "0.067696,0.072812,0.081706,0.096877,0.122242,0.165375", \
				        "0.082895,0.087846,0.096595,0.111349,0.136454,0.179497", \
				        "0.107358,0.112595,0.121497,0.136529,0.161826,0.205019", \
				        "0.141572,0.147482,0.157225,0.173289,0.199296,0.243225", \
				        "0.192250,0.199075,0.210866,0.229097,0.257772,0.303804", \
				        "0.273699,0.281881,0.295764,0.317795,0.351982,0.404340");
			}
			cell_rise(Timing_X1) {
				values ("0.040006,0.045106,0.054875,0.074061,0.111778,0.187204", \
				        "0.043452,0.048542,0.058332,0.077467,0.115068,0.190497", \
				        "0.050060,0.055130,0.064827,0.083626,0.121236,0.196599", \
				        "0.059357,0.064581,0.074398,0.093482,0.131151,0.206359", \
				        "0.068954,0.074655,0.084916,0.104086,0.141772,0.216895", \
				        "0.076114,0.082893,0.094212,0.114163,0.151861,0.226800", \
				        "0.072813,0.081145,0.095386,0.118135,0.157257,0.232698", \
				        "0.044238,0.054279,0.071741,0.100463,0.145517,0.223361");
			}
			fall_transition(Timing_X1) {
				values ("0.014373,0.016936,0.021725,0.030487,0.046232,0.076217", \
				        "0.014319,0.016895,0.021697,0.030470,0.046220,0.076170", \
				        "0.014115,0.016722,0.021532,0.030328,0.046109,0.076127", \
				        "0.013825,0.016411,0.021265,0.030138,0.046015,0.076092", \
				        "0.015791,0.018077,0.022462,0.030876,0.046546,0.076431", \
				        "0.019289,0.021607,0.025806,0.033522,0.048424,0.077904", \
				        "0.024747,0.027309,0.031773,0.039611,0.053543,0.081235", \
				        "0.033916,0.036906,0.042093,0.050901,0.065477,0.091897");
			}
			rise_transition(Timing_X1) {
				values ("0.012830,0.016802,0.025234,0.042823,0.078572,0.150209", \
				        "0.012825,0.016810,0.025225,0.042805,0.078606,0.150191", \
				        "0.012943,0.016894,0.025283,0.042840,0.078620,0.150200", \
				        "0.013897,0.017611,0.025701,0.042993,0.078623,0.150207", \
				        "0.015954,0.019353,0.026809,0.043480,0.078654,0.150253", \
				        "0.019818,0.023325,0.030086,0.045317,0.079246,0.150443", \
				        "0.025791,0.030125,0.037481,0.051087,0.082311,0.151913", \
				        "0.035086,0.040331,0.049594,0.064756,0.092243,0.157300");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.093298,0.098461,0.107356,0.122404,0.147736,0.190855", \
				        "0.096391,0.101562,0.110472,0.125337,0.150639,0.193760", \
				        "0.102087,0.107259,0.116231,0.131138,0.156219,0.199365", \
				        "0.112455,0.117611,0.126537,0.141649,0.166957,0.210116", \
				        "0.130320,0.135689,0.144905,0.160303,0.185821,0.229231", \
				        "0.158009,0.163896,0.173673,0.190379,0.217358,0.262306", \
				        "0.205326,0.212009,0.223743,0.242410,0.272004,0.319851", \
				        "0.285543,0.293431,0.307079,0.328450,0.363274,0.417300");
			}
			cell_rise(Timing_X1) {
				values ("0.048731,0.054035,0.064026,0.083539,0.121378,0.196966", \
				        "0.052059,0.057366,0.067376,0.086851,0.124676,0.200233", \
				        "0.058922,0.064199,0.074244,0.093627,0.131209,0.206739", \
				        "0.071044,0.076356,0.086331,0.105503,0.143294,0.218767", \
				        "0.085266,0.090943,0.101179,0.120513,0.158258,0.233588", \
				        "0.098661,0.105188,0.116294,0.136009,0.173724,0.248847", \
				        "0.104984,0.112795,0.126131,0.147706,0.185902,0.260900", \
				        "0.091749,0.101121,0.117202,0.143258,0.185040,0.260905");
			}
			fall_transition(Timing_X1) {
				values ("0.014549,0.017102,0.021868,0.030569,0.046323,0.076229", \
				        "0.014561,0.017109,0.021844,0.030592,0.046332,0.076231", \
				        "0.014551,0.017105,0.021846,0.030598,0.046295,0.076259", \
				        "0.014597,0.017143,0.021887,0.030589,0.046246,0.076243", \
				        "0.015798,0.018315,0.022955,0.031527,0.046987,0.076683", \
				        "0.018557,0.021151,0.025893,0.034543,0.049972,0.078940", \
				        "0.023166,0.025957,0.030989,0.039869,0.055280,0.083540", \
				        "0.030584,0.033751,0.039368,0.049153,0.065621,0.094175");
			}
			rise_transition(Timing_X1) {
				values ("0.013677,0.017642,0.025946,0.043393,0.079004,0.150492", \
				        "0.013691,0.017642,0.025971,0.043365,0.079000,0.150509", \
				        "0.013650,0.017617,0.025947,0.043357,0.079007,0.150494", \
				        "0.014134,0.017938,0.026088,0.043489,0.078995,0.150516", \
				        "0.015852,0.019352,0.026986,0.043868,0.079099,0.150533", \
				        "0.019066,0.022483,0.029370,0.045034,0.079431,0.150713", \
				        "0.024031,0.028033,0.034922,0.048862,0.081035,0.151341", \
				        "0.031480,0.036323,0.044709,0.058660,0.086879,0.154065");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.111003,0.116166,0.125141,0.140179,0.165470,0.208547", \
				        "0.114715,0.119881,0.128801,0.143762,0.169142,0.212254", \
				        "0.121335,0.126508,0.135556,0.150698,0.175895,0.219010", \
				        "0.132687,0.137848,0.146852,0.162015,0.187316,0.230412", \
				        "0.149471,0.154746,0.163820,0.179031,0.204528,0.247781", \
				        "0.167874,0.173546,0.183320,0.199583,0.226406,0.271109", \
				        "0.195149,0.201539,0.212409,0.230666,0.260011,0.308085", \
				        "0.251050,0.258646,0.271990,0.293084,0.327504,0.382273");
			}
			cell_rise(Timing_X1) {
				values ("0.052169,0.057812,0.068288,0.088356,0.126921,0.202938", \
				        "0.055534,0.061170,0.071632,0.091654,0.130225,0.206262", \
				        "0.062702,0.068286,0.078763,0.098793,0.137026,0.212991", \
				        "0.076548,0.082052,0.092342,0.111874,0.150201,0.226130", \
				        "0.094218,0.100043,0.110516,0.130219,0.168345,0.243983", \
				        "0.112696,0.119302,0.130554,0.150520,0.188601,0.264001", \
				        "0.127675,0.135489,0.148540,0.170086,0.208510,0.283738", \
				        "0.130181,0.139464,0.155494,0.180973,0.222130,0.298023");
			}
			fall_transition(Timing_X1) {
				values ("0.014556,0.017106,0.021864,0.030593,0.046296,0.076224", \
				        "0.014560,0.017109,0.021859,0.030586,0.046245,0.076201", \
				        "0.014562,0.017110,0.021865,0.030587,0.046332,0.076231", \
				        "0.014570,0.017116,0.021857,0.030602,0.046327,0.076260", \
				        "0.015162,0.017691,0.022361,0.031012,0.046640,0.076400", \
				        "0.017101,0.019720,0.024581,0.033378,0.049148,0.078446", \
				        "0.021241,0.024049,0.029226,0.038421,0.054646,0.083782", \
				        "0.028640,0.031822,0.037541,0.047698,0.065169,0.095584");
			}
			rise_transition(Timing_X1) {
				values ("0.014769,0.018800,0.027200,0.044556,0.079914,0.151166", \
				        "0.014729,0.018760,0.027133,0.044498,0.079914,0.151122", \
				        "0.014570,0.018622,0.027047,0.044413,0.079841,0.151150", \
				        "0.014707,0.018614,0.026943,0.044379,0.079817,0.151127", \
				        "0.016377,0.019939,0.027680,0.044536,0.079776,0.151099", \
				        "0.019423,0.022867,0.029829,0.045604,0.080088,0.151216", \
				        "0.024062,0.028007,0.034935,0.048941,0.081433,0.151829", \
				        "0.031084,0.035779,0.043860,0.057629,0.086376,0.154244");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.002595,0.002336,0.001832,0.000862,-0.001097,-0.004977", \
				        "0.002595,0.002342,0.001847,0.000869,-0.001087,-0.004970", \
				        "0.002630,0.002361,0.001867,0.000892,-0.001057,-0.004944", \
				        "0.002720,0.002452,0.001966,0.000995,-0.000944,-0.004820", \
				        "0.002994,0.002726,0.002223,0.001241,-0.000697,-0.004572", \
				        "0.003574,0.003304,0.002790,0.001778,-0.000172,-0.004061", \
				        "0.004884,0.004572,0.004030,0.002998,0.001021,-0.002886", \
				        "0.007744,0.007421,0.006836,0.005742,0.003704,-0.000235");
			}
			rise_power(Power_X1) {
				values ("0.001392,0.001640,0.002131,0.003100,0.005049,0.008926", \
				        "0.001399,0.001641,0.002129,0.003111,0.005056,0.008934", \
				        "0.001420,0.001658,0.002141,0.003112,0.005057,0.008934", \
				        "0.001483,0.001731,0.002209,0.003184,0.005130,0.009000", \
				        "0.001710,0.001948,0.002417,0.003376,0.005315,0.009185", \
				        "0.002293,0.002525,0.002984,0.003939,0.005858,0.009714", \
				        "0.003676,0.003891,0.004354,0.005282,0.007178,0.011011", \
				        "0.006679,0.006885,0.007331,0.008200,0.010058,0.013846");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.002929,0.002667,0.002172,0.001213,-0.000738,-0.004617", \
				        "0.002913,0.002649,0.002166,0.001188,-0.000766,-0.004643", \
				        "0.002889,0.002635,0.002141,0.001159,-0.000791,-0.004671", \
				        "0.002856,0.002587,0.002112,0.001124,-0.000824,-0.004711", \
				        "0.002883,0.002628,0.002107,0.001141,-0.000803,-0.004678", \
				        "0.003162,0.002887,0.002359,0.001373,-0.000583,-0.004471", \
				        "0.004080,0.003785,0.003263,0.002235,0.000257,-0.003643", \
				        "0.006406,0.006056,0.005470,0.004397,0.002384,-0.001547");
			}
			rise_power(Power_X1) {
				values ("0.002482,0.002731,0.003216,0.004189,0.006135,0.010018", \
				        "0.002487,0.002722,0.003215,0.004189,0.006135,0.010019", \
				        "0.002493,0.002728,0.003216,0.004193,0.006139,0.010016", \
				        "0.002541,0.002778,0.003254,0.004229,0.006166,0.010047", \
				        "0.002710,0.002949,0.003422,0.004380,0.006311,0.010187", \
				        "0.003180,0.003410,0.003877,0.004825,0.006746,0.010607", \
				        "0.004334,0.004558,0.005009,0.005945,0.007841,0.011681", \
				        "0.006874,0.007073,0.007497,0.008410,0.010274,0.014075");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.003220,0.002962,0.002459,0.001494,-0.000464,-0.004330", \
				        "0.003210,0.002957,0.002456,0.001488,-0.000462,-0.004336", \
				        "0.003200,0.002926,0.002456,0.001488,-0.000462,-0.004342", \
				        "0.003208,0.002965,0.002452,0.001478,-0.000480,-0.004350", \
				        "0.003196,0.002941,0.002439,0.001466,-0.000477,-0.004357", \
				        "0.003256,0.002982,0.002476,0.001491,-0.000455,-0.004333", \
				        "0.003915,0.003652,0.003103,0.002097,0.000130,-0.003767", \
				        "0.006301,0.005957,0.005420,0.004352,0.002345,-0.001579");
			}
			rise_power(Power_X1) {
				values ("0.003409,0.003652,0.004128,0.005115,0.007065,0.010957", \
				        "0.003390,0.003645,0.004129,0.005104,0.007051,0.010945", \
				        "0.003404,0.003642,0.004123,0.005102,0.007045,0.010936", \
				        "0.003440,0.003677,0.004160,0.005124,0.007067,0.010955", \
				        "0.003597,0.003817,0.004319,0.005268,0.007202,0.011086", \
				        "0.004060,0.004292,0.004754,0.005703,0.007627,0.011493", \
				        "0.005250,0.005465,0.005927,0.006853,0.008750,0.012594", \
				        "0.007955,0.008146,0.008586,0.009493,0.011360,0.015164");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR3_X2
 Cell Description	: Combinational cell (OR3_X2) with drive strength X2
*******************************************************************************************/

cell (OR3_X2) {

	area               	: 1.330000;

	cell_leakage_power 	: 10199.198125;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 13842.010000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 7743.720000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 8782.740000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 10126.020000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 7836.185000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 10111.920000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 10154.870000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 12996.120000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000642;
		fall_capacitance	: 0.000570;
		rise_capacitance	: 0.000714;
		fall_capacitance_range		(0.000504, 0.000670);
		rise_capacitance_range		(0.000565, 0.000848);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000620;
		fall_capacitance	: 0.000576;
		rise_capacitance	: 0.000664;
		fall_capacitance_range		(0.000498, 0.000647);
		rise_capacitance_range		(0.000545, 0.000766);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000052,0.000039,0.000025,0.000014,0.000008,0.000004,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000614;
		fall_capacitance	: 0.000593;
		rise_capacitance	: 0.000635;
		fall_capacitance_range		(0.000514, 0.000671);
		rise_capacitance_range		(0.000555, 0.000729);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.060615,0.069256,0.078558,0.093948,0.119464,0.162321", \
				        "0.063585,0.072211,0.081569,0.097043,0.122610,0.165437", \
				        "0.070333,0.078929,0.088251,0.103827,0.129428,0.172304", \
				        "0.085452,0.093817,0.102898,0.118275,0.143593,0.186413", \
				        "0.111553,0.120236,0.129433,0.144857,0.170195,0.213022", \
				        "0.147406,0.157196,0.167490,0.183874,0.210190,0.253795", \
				        "0.200302,0.211488,0.223556,0.242088,0.271001,0.316744", \
				        "0.284589,0.297642,0.311370,0.333992,0.368147,0.420163");
			}
			cell_rise(Timing_X2) {
				values ("0.038308,0.046368,0.056083,0.074650,0.111016,0.183786", \
				        "0.041738,0.049791,0.059532,0.078002,0.114395,0.187135", \
				        "0.048576,0.056599,0.066212,0.084578,0.120856,0.193587", \
				        "0.058570,0.066986,0.076822,0.095338,0.131380,0.204122", \
				        "0.069081,0.078514,0.088777,0.107621,0.143699,0.216183", \
				        "0.077132,0.088313,0.100066,0.119818,0.156145,0.228307", \
				        "0.075664,0.088923,0.103539,0.126442,0.164597,0.237113", \
				        "0.050023,0.065708,0.083020,0.112035,0.156686,0.231828");
			}
			fall_transition(Timing_X2) {
				values ("0.013714,0.017639,0.022345,0.030978,0.046207,0.075069", \
				        "0.013680,0.017615,0.022341,0.030944,0.046188,0.075047", \
				        "0.013520,0.017492,0.022236,0.030814,0.046117,0.075035", \
				        "0.012993,0.017071,0.021902,0.030616,0.046000,0.074940", \
				        "0.015181,0.018700,0.023049,0.031240,0.046382,0.075210", \
				        "0.019092,0.022681,0.026827,0.034464,0.048656,0.076867", \
				        "0.024875,0.028833,0.033230,0.040904,0.054323,0.080585", \
				        "0.034556,0.039035,0.044127,0.052591,0.066793,0.091795");
			}
			rise_transition(Timing_X2) {
				values ("0.009991,0.015592,0.023488,0.040221,0.074642,0.143708", \
				        "0.009993,0.015580,0.023495,0.040239,0.074638,0.143697", \
				        "0.010086,0.015644,0.023565,0.040231,0.074637,0.143697", \
				        "0.011248,0.016474,0.024059,0.040380,0.074607,0.143694", \
				        "0.013477,0.018575,0.025535,0.041216,0.074696,0.143684", \
				        "0.017003,0.022752,0.029317,0.043380,0.075421,0.143902", \
				        "0.022658,0.029505,0.037000,0.050055,0.078952,0.145384", \
				        "0.032246,0.039911,0.049109,0.064187,0.090253,0.151058");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.096449,0.105080,0.114315,0.129795,0.155296,0.198097", \
				        "0.099552,0.108154,0.117440,0.132707,0.158252,0.201049", \
				        "0.105284,0.113935,0.123206,0.138561,0.163858,0.206708", \
				        "0.115658,0.124264,0.133631,0.149092,0.174618,0.217512", \
				        "0.134502,0.143371,0.152873,0.168535,0.194170,0.237195", \
				        "0.163615,0.173245,0.183575,0.200383,0.227506,0.272017", \
				        "0.213058,0.223871,0.235946,0.254262,0.284185,0.331498", \
				        "0.296139,0.308719,0.321919,0.343899,0.377893,0.431148");
			}
			cell_rise(Timing_X2) {
				values ("0.046923,0.055369,0.065318,0.084160,0.120832,0.193755", \
				        "0.050235,0.058679,0.068637,0.087405,0.123973,0.196972", \
				        "0.057085,0.065503,0.075507,0.094261,0.130689,0.203610", \
				        "0.069721,0.078230,0.088152,0.106841,0.143234,0.216082", \
				        "0.084691,0.094054,0.104427,0.123312,0.159586,0.232364", \
				        "0.099084,0.109874,0.121213,0.140788,0.177139,0.249470", \
				        "0.106712,0.119379,0.133293,0.155000,0.192282,0.264376", \
				        "0.095953,0.110801,0.126825,0.153628,0.195064,0.268120");
			}
			fall_transition(Timing_X2) {
				values ("0.013816,0.017725,0.022446,0.031018,0.046240,0.075124", \
				        "0.013816,0.017731,0.022426,0.030988,0.046241,0.075120", \
				        "0.013815,0.017720,0.022426,0.030981,0.046219,0.075091", \
				        "0.013830,0.017753,0.022451,0.030985,0.046263,0.075070", \
				        "0.014953,0.018802,0.023395,0.031696,0.046858,0.075439", \
				        "0.017853,0.021779,0.026431,0.034817,0.049801,0.077771", \
				        "0.022674,0.026864,0.031713,0.040328,0.055216,0.082533", \
				        "0.030456,0.035140,0.040502,0.049867,0.065736,0.093189");
			}
			rise_transition(Timing_X2) {
				values ("0.010813,0.016421,0.024264,0.040776,0.074989,0.143971", \
				        "0.010806,0.016431,0.024273,0.040828,0.074983,0.144007", \
				        "0.010764,0.016408,0.024272,0.040789,0.075022,0.144007", \
				        "0.011367,0.016762,0.024421,0.040922,0.075052,0.143995", \
				        "0.013358,0.018512,0.025645,0.041411,0.075142,0.144046", \
				        "0.016436,0.021979,0.028565,0.043080,0.075627,0.144216", \
				        "0.021167,0.027642,0.034659,0.047783,0.077538,0.144832", \
				        "0.028856,0.036133,0.044674,0.058557,0.084806,0.147843");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.114164,0.122771,0.132088,0.147563,0.173044,0.215906", \
				        "0.117836,0.126464,0.135804,0.151200,0.176644,0.219477", \
				        "0.124485,0.133116,0.142430,0.157977,0.183476,0.226298", \
				        "0.135808,0.144418,0.153765,0.169299,0.194799,0.237640", \
				        "0.153080,0.161796,0.171251,0.186813,0.212453,0.255399", \
				        "0.172672,0.181982,0.192179,0.208715,0.235607,0.279853", \
				        "0.201266,0.211637,0.223154,0.241226,0.270640,0.318102", \
				        "0.259637,0.271779,0.284864,0.305997,0.339904,0.393684");
			}
			cell_rise(Timing_X2) {
				values ("0.050319,0.059305,0.069714,0.089234,0.126431,0.199841", \
				        "0.053649,0.062622,0.073043,0.092466,0.129615,0.203013", \
				        "0.060718,0.069630,0.080080,0.099463,0.136431,0.209796", \
				        "0.074986,0.083776,0.093968,0.113057,0.149953,0.223306", \
				        "0.093310,0.102881,0.113468,0.132735,0.169402,0.242409", \
				        "0.112655,0.123600,0.135075,0.154823,0.191564,0.264226", \
				        "0.128606,0.141173,0.154971,0.176699,0.214027,0.286434", \
				        "0.133280,0.147925,0.163979,0.190054,0.230948,0.304015");
			}
			fall_transition(Timing_X2) {
				values ("0.013817,0.017735,0.022444,0.031006,0.046278,0.075095", \
				        "0.013818,0.017734,0.022443,0.031012,0.046198,0.075099", \
				        "0.013817,0.017737,0.022425,0.030968,0.046247,0.075089", \
				        "0.013820,0.017737,0.022438,0.030979,0.046210,0.075098", \
				        "0.014357,0.018214,0.022844,0.031320,0.046411,0.075206", \
				        "0.016372,0.020380,0.025112,0.033764,0.048966,0.077245", \
				        "0.020556,0.024786,0.029759,0.038628,0.054385,0.082506", \
				        "0.028104,0.032806,0.038246,0.047940,0.064707,0.093993");
			}
			rise_transition(Timing_X2) {
				values ("0.011743,0.017540,0.025481,0.041957,0.075989,0.144669", \
				        "0.011708,0.017502,0.025451,0.041979,0.075897,0.144623", \
				        "0.011572,0.017379,0.025328,0.041906,0.075872,0.144616", \
				        "0.011801,0.017381,0.025228,0.041792,0.075820,0.144610", \
				        "0.013769,0.019023,0.026241,0.042115,0.075837,0.144609", \
				        "0.016742,0.022305,0.028966,0.043637,0.076254,0.144714", \
				        "0.021242,0.027634,0.034584,0.047653,0.077976,0.145325", \
				        "0.028438,0.035546,0.043800,0.057458,0.084061,0.147883");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.003389,0.002561,0.001553,-0.000429,-0.004335,-0.012106", \
				        "0.003390,0.002564,0.001541,-0.000422,-0.004329,-0.012104", \
				        "0.003398,0.002585,0.001561,-0.000407,-0.004312,-0.012087", \
				        "0.003499,0.002678,0.001643,-0.000313,-0.004201,-0.011977", \
				        "0.003834,0.002982,0.001937,-0.000040,-0.003941,-0.011706", \
				        "0.004563,0.003649,0.002566,0.000541,-0.003392,-0.011195", \
				        "0.006060,0.005093,0.003929,0.001824,-0.002172,-0.010015", \
				        "0.009261,0.008247,0.006992,0.004734,0.000603,-0.007327");
			}
			rise_power(Power_X2) {
				values ("0.001861,0.002585,0.003567,0.005519,0.009398,0.017157", \
				        "0.001879,0.002594,0.003567,0.005524,0.009411,0.017162", \
				        "0.001899,0.002615,0.003574,0.005528,0.009415,0.017165", \
				        "0.002000,0.002706,0.003654,0.005598,0.009465,0.017213", \
				        "0.002268,0.002949,0.003886,0.005803,0.009659,0.017393", \
				        "0.002931,0.003597,0.004505,0.006393,0.010221,0.017917", \
				        "0.004504,0.005102,0.005991,0.007828,0.011602,0.019252", \
				        "0.007916,0.008412,0.009210,0.010970,0.014665,0.022212");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.003727,0.002896,0.001876,-0.000076,-0.003979,-0.011734", \
				        "0.003711,0.002890,0.001868,-0.000100,-0.004002,-0.011761", \
				        "0.003699,0.002870,0.001853,-0.000126,-0.004028,-0.011789", \
				        "0.003669,0.002840,0.001811,-0.000159,-0.004062,-0.011836", \
				        "0.003736,0.002873,0.001839,-0.000133,-0.004030,-0.011790", \
				        "0.004117,0.003220,0.002135,0.000119,-0.003801,-0.011590", \
				        "0.005213,0.004263,0.003121,0.001033,-0.002941,-0.010770", \
				        "0.007783,0.006762,0.005521,0.003326,-0.000762,-0.008665");
			}
			rise_power(Power_X2) {
				values ("0.002980,0.003695,0.004662,0.006604,0.010491,0.018248", \
				        "0.002982,0.003693,0.004657,0.006601,0.010488,0.018248", \
				        "0.002968,0.003700,0.004664,0.006610,0.010488,0.018243", \
				        "0.003062,0.003762,0.004718,0.006642,0.010513,0.018267", \
				        "0.003284,0.003965,0.004912,0.006817,0.010673,0.018413", \
				        "0.003848,0.004513,0.005426,0.007311,0.011136,0.018838", \
				        "0.005184,0.005791,0.006679,0.008528,0.012305,0.019959", \
				        "0.008070,0.008597,0.009423,0.011215,0.014909,0.022479");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.004019,0.003179,0.002157,0.000204,-0.003691,-0.011459", \
				        "0.004012,0.003178,0.002159,0.000205,-0.003697,-0.011452", \
				        "0.004011,0.003188,0.002169,0.000207,-0.003696,-0.011456", \
				        "0.004009,0.003172,0.002154,0.000188,-0.003716,-0.011470", \
				        "0.004026,0.003182,0.002155,0.000186,-0.003717,-0.011475", \
				        "0.004147,0.003288,0.002227,0.000230,-0.003679,-0.011444", \
				        "0.004968,0.004038,0.002918,0.000861,-0.003090,-0.010892", \
				        "0.007595,0.006593,0.005399,0.003221,-0.000845,-0.008720");
			}
			rise_power(Power_X2) {
				values ("0.003935,0.004637,0.005586,0.007535,0.011417,0.019184", \
				        "0.003918,0.004631,0.005580,0.007519,0.011403,0.019172", \
				        "0.003898,0.004608,0.005574,0.007522,0.011395,0.019162", \
				        "0.003968,0.004670,0.005623,0.007542,0.011415,0.019175", \
				        "0.004194,0.004874,0.005809,0.007719,0.011570,0.019308", \
				        "0.004749,0.005395,0.006319,0.008202,0.012027,0.019729", \
				        "0.006109,0.006745,0.007612,0.009456,0.013227,0.020882", \
				        "0.009161,0.009673,0.010525,0.012309,0.016013,0.023582");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR3_X4
 Cell Description	: Combinational cell (OR3_X4) with drive strength X4
*******************************************************************************************/

cell (OR3_X4) {

	area               	: 1.330000;

	cell_leakage_power 	: 15156.982500;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3";
		value      	: 22074.950000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3";
		value      	: 12233.860000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3";
		value      	: 13273.030000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3";
		value      	: 14615.730000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3";
		value      	: 12326.330000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3";
		value      	: 14601.640000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3";
		value      	: 14644.590000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3";
		value      	: 17485.730000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000656;
		fall_capacitance	: 0.000583;
		rise_capacitance	: 0.000729;
		fall_capacitance_range		(0.000522, 0.000674);
		rise_capacitance_range		(0.000581, 0.000866);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000604;
		fall_capacitance	: 0.000560;
		rise_capacitance	: 0.000647;
		fall_capacitance_range		(0.000483, 0.000622);
		rise_capacitance_range		(0.000544, 0.000748);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000051,0.000039,0.000025,0.000014,0.000008,0.000004,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000001,0.000001,-0.000000,-0.000001");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000614;
		fall_capacitance	: 0.000594;
		rise_capacitance	: 0.000635;
		fall_capacitance_range		(0.000511, 0.000668);
		rise_capacitance_range		(0.000558, 0.000726);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000001,-0.000000,-0.000001");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "((A1 | A2) | A3)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.067918,0.078919,0.088680,0.104639,0.130799,0.174100", \
				        "0.070828,0.081817,0.091588,0.107634,0.133768,0.177080", \
				        "0.077394,0.088393,0.098078,0.114185,0.140443,0.183774", \
				        "0.091872,0.102689,0.112355,0.128335,0.154505,0.197797", \
				        "0.119845,0.130722,0.140326,0.156081,0.182008,0.225256", \
				        "0.158553,0.170586,0.181474,0.198104,0.224916,0.268828", \
				        "0.215410,0.228939,0.240975,0.259943,0.289189,0.335215", \
				        "0.304625,0.320039,0.333669,0.356285,0.390512,0.442639");
			}
			cell_rise(Timing_X4) {
				values ("0.038869,0.049061,0.058899,0.077227,0.113056,0.184577", \
				        "0.042297,0.052480,0.062337,0.080630,0.116391,0.187915", \
				        "0.049214,0.059353,0.069232,0.087430,0.123096,0.194614", \
				        "0.060150,0.070774,0.080712,0.098979,0.134504,0.206006", \
				        "0.072024,0.083967,0.094452,0.113123,0.148520,0.219684", \
				        "0.081984,0.095749,0.108099,0.127812,0.163463,0.234215", \
				        "0.084001,0.099838,0.114560,0.137888,0.175599,0.246430", \
				        "0.063513,0.081713,0.098819,0.127739,0.172539,0.246198");
			}
			fall_transition(Timing_X4) {
				values ("0.015217,0.019774,0.024414,0.032848,0.047946,0.076289", \
				        "0.015213,0.019755,0.024397,0.032842,0.047921,0.076258", \
				        "0.015130,0.019694,0.024335,0.032796,0.047909,0.076235", \
				        "0.014507,0.019306,0.024062,0.032582,0.047791,0.076183", \
				        "0.016499,0.020575,0.024873,0.032963,0.047976,0.076339", \
				        "0.021374,0.025368,0.029332,0.036750,0.050730,0.078216", \
				        "0.028266,0.032472,0.036676,0.044040,0.057060,0.082486", \
				        "0.039616,0.044094,0.048780,0.056794,0.070328,0.094328");
			}
			rise_transition(Timing_X4) {
				values ("0.008903,0.015432,0.023080,0.039213,0.072737,0.140602", \
				        "0.008895,0.015430,0.023081,0.039174,0.072721,0.140600", \
				        "0.008933,0.015463,0.023074,0.039217,0.072697,0.140592", \
				        "0.010125,0.016325,0.023626,0.039371,0.072717,0.140621", \
				        "0.012466,0.018726,0.025481,0.040256,0.073006,0.140633", \
				        "0.016226,0.023215,0.029726,0.043052,0.073846,0.140889", \
				        "0.022731,0.030357,0.037894,0.050690,0.077961,0.142398", \
				        "0.034243,0.041894,0.050696,0.065665,0.090726,0.148534");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.103763,0.114740,0.124439,0.140449,0.166575,0.209876", \
				        "0.106879,0.117861,0.127541,0.143440,0.169546,0.212837", \
				        "0.112737,0.123710,0.133333,0.149281,0.175193,0.218500", \
				        "0.123004,0.133986,0.143872,0.159872,0.185969,0.229326", \
				        "0.142914,0.154034,0.163977,0.179912,0.206111,0.249558", \
				        "0.174233,0.186095,0.197031,0.213931,0.241469,0.286271", \
				        "0.227192,0.240288,0.252222,0.270939,0.300669,0.348148", \
				        "0.315088,0.329860,0.342852,0.365173,0.398683,0.451585");
			}
			cell_rise(Timing_X4) {
				values ("0.047492,0.058137,0.068291,0.086915,0.123009,0.194706", \
				        "0.050804,0.061450,0.071610,0.090214,0.126198,0.197892", \
				        "0.057630,0.068262,0.078409,0.096963,0.132887,0.204573", \
				        "0.070770,0.081459,0.091578,0.110052,0.145915,0.217551", \
				        "0.087019,0.098844,0.109399,0.128155,0.163746,0.235155", \
				        "0.103028,0.116529,0.128317,0.147986,0.183683,0.254609", \
				        "0.113558,0.128919,0.143117,0.165159,0.202118,0.272651", \
				        "0.107115,0.124567,0.140727,0.167779,0.209410,0.281019");
			}
			fall_transition(Timing_X4) {
				values ("0.015255,0.019820,0.024432,0.032912,0.047932,0.076332", \
				        "0.015272,0.019816,0.024442,0.032847,0.047966,0.076333", \
				        "0.015260,0.019821,0.024446,0.032905,0.047958,0.076284", \
				        "0.015283,0.019830,0.024456,0.032929,0.047917,0.076282", \
				        "0.016292,0.020685,0.025148,0.033456,0.048391,0.076553", \
				        "0.019626,0.024025,0.028502,0.036715,0.051317,0.078822", \
				        "0.025225,0.029729,0.034286,0.042553,0.057174,0.083852", \
				        "0.034342,0.039105,0.044082,0.052764,0.067996,0.094710");
			}
			rise_transition(Timing_X4) {
				values ("0.009667,0.016248,0.023874,0.039804,0.073228,0.140948", \
				        "0.009654,0.016243,0.023867,0.039838,0.073223,0.140948", \
				        "0.009631,0.016224,0.023819,0.039802,0.073218,0.140948", \
				        "0.010192,0.016535,0.023991,0.039875,0.073166,0.140948", \
				        "0.012343,0.018617,0.025517,0.040502,0.073271,0.140966", \
				        "0.015642,0.022455,0.028990,0.042719,0.073994,0.141162", \
				        "0.021113,0.028540,0.035693,0.048311,0.076489,0.141912", \
				        "0.030417,0.037985,0.046360,0.060279,0.085277,0.145298");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.121580,0.132576,0.142192,0.158226,0.184367,0.227654", \
				        "0.125229,0.136191,0.145880,0.161831,0.187953,0.231274", \
				        "0.131884,0.142849,0.152535,0.168651,0.194748,0.238047", \
				        "0.143115,0.154088,0.163881,0.179982,0.206094,0.249406", \
				        "0.160944,0.171957,0.181804,0.197892,0.224143,0.267496", \
				        "0.182347,0.194017,0.204483,0.221400,0.248693,0.293234", \
				        "0.213525,0.226199,0.237831,0.256239,0.285634,0.333122", \
				        "0.275788,0.290195,0.302830,0.324512,0.357772,0.411049");
			}
			cell_rise(Timing_X4) {
				values ("0.051070,0.062332,0.072899,0.092201,0.128862,0.201028", \
				        "0.054358,0.065610,0.076213,0.095378,0.131934,0.204120", \
				        "0.061348,0.072552,0.083149,0.102301,0.138762,0.210923", \
				        "0.075867,0.086888,0.097258,0.116216,0.152551,0.224597", \
				        "0.095374,0.107412,0.118209,0.137275,0.173272,0.245008", \
				        "0.116285,0.129837,0.141711,0.161573,0.197597,0.268860", \
				        "0.134661,0.149990,0.164190,0.186095,0.223090,0.293931", \
				        "0.143097,0.160388,0.176257,0.202962,0.243938,0.315484");
			}
			fall_transition(Timing_X4) {
				values ("0.015270,0.019822,0.024426,0.032862,0.047982,0.076308", \
				        "0.015264,0.019817,0.024423,0.032853,0.047970,0.076292", \
				        "0.015271,0.019812,0.024441,0.032914,0.047917,0.076300", \
				        "0.015277,0.019823,0.024444,0.032924,0.047946,0.076283", \
				        "0.015694,0.020145,0.024695,0.033034,0.048098,0.076384", \
				        "0.018016,0.022601,0.027151,0.035542,0.050513,0.078244", \
				        "0.022690,0.027343,0.032064,0.040678,0.055928,0.083624", \
				        "0.031249,0.036151,0.041249,0.050314,0.066446,0.094973");
			}
			rise_transition(Timing_X4) {
				values ("0.010543,0.017356,0.025025,0.040971,0.074061,0.141571", \
				        "0.010521,0.017331,0.024994,0.040954,0.074116,0.141561", \
				        "0.010409,0.017233,0.024934,0.040874,0.074033,0.141590", \
				        "0.010581,0.017177,0.024814,0.040801,0.074025,0.141555", \
				        "0.012696,0.019062,0.026040,0.041179,0.073973,0.141504", \
				        "0.015950,0.022728,0.029295,0.043222,0.074598,0.141644", \
				        "0.021179,0.028486,0.035527,0.048220,0.076795,0.142373", \
				        "0.029797,0.037256,0.045425,0.059087,0.084330,0.145258");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.004941,0.002812,0.000668,-0.003333,-0.011183,-0.026727", \
				        "0.004924,0.002811,0.000665,-0.003330,-0.011173,-0.026728", \
				        "0.004940,0.002824,0.000679,-0.003338,-0.011178,-0.026737", \
				        "0.005000,0.002882,0.000733,-0.003264,-0.011093,-0.026643", \
				        "0.005466,0.003289,0.001091,-0.002935,-0.010783,-0.026327", \
				        "0.006568,0.004248,0.001927,-0.002233,-0.010159,-0.025793", \
				        "0.008608,0.006147,0.003675,-0.000706,-0.008805,-0.024554", \
				        "0.012696,0.010090,0.007443,0.002709,-0.005742,-0.021720");
			}
			rise_power(Power_X4) {
				values ("0.002734,0.004392,0.006330,0.010224,0.017992,0.033502", \
				        "0.002736,0.004400,0.006334,0.010238,0.018000,0.033506", \
				        "0.002781,0.004426,0.006364,0.010245,0.018012,0.033516", \
				        "0.002965,0.004587,0.006468,0.010325,0.018059,0.033551", \
				        "0.003362,0.004897,0.006765,0.010578,0.018272,0.033731", \
				        "0.004294,0.005711,0.007558,0.011274,0.018900,0.034286", \
				        "0.006433,0.007567,0.009302,0.012941,0.020457,0.035730", \
				        "0.010851,0.011685,0.013179,0.016616,0.023932,0.038997");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.005287,0.003148,0.001006,-0.002980,-0.010816,-0.026352", \
				        "0.005281,0.003141,0.000984,-0.003004,-0.010844,-0.026379", \
				        "0.005256,0.003125,0.000968,-0.003036,-0.010869,-0.026397", \
				        "0.005223,0.003094,0.000942,-0.003068,-0.010911,-0.026463", \
				        "0.005358,0.003189,0.001024,-0.003022,-0.010849,-0.026408", \
				        "0.006013,0.003728,0.001458,-0.002684,-0.010567,-0.026187", \
				        "0.007570,0.005121,0.002731,-0.001582,-0.009632,-0.025335", \
				        "0.010821,0.008274,0.005722,0.001091,-0.007239,-0.023130");
			}
			rise_power(Power_X4) {
				values ("0.003899,0.005540,0.007451,0.011327,0.019088,0.034595", \
				        "0.003897,0.005523,0.007447,0.011325,0.019082,0.034589", \
				        "0.003901,0.005532,0.007450,0.011329,0.019081,0.034587", \
				        "0.004046,0.005645,0.007537,0.011383,0.019120,0.034604", \
				        "0.004415,0.005948,0.007812,0.011620,0.019304,0.034758", \
				        "0.005242,0.006670,0.008490,0.012228,0.019854,0.035237", \
				        "0.007072,0.008309,0.010042,0.013685,0.021206,0.036474", \
				        "0.010878,0.011820,0.013357,0.016853,0.024204,0.039291");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.005571,0.003437,0.001298,-0.002705,-0.010541,-0.026077", \
				        "0.005572,0.003430,0.001288,-0.002708,-0.010533,-0.026074", \
				        "0.005558,0.003433,0.001282,-0.002705,-0.010536,-0.026074", \
				        "0.005562,0.003432,0.001271,-0.002728,-0.010556,-0.026096", \
				        "0.005611,0.003460,0.001297,-0.002716,-0.010561,-0.026109", \
				        "0.005939,0.003713,0.001484,-0.002594,-0.010460,-0.026050", \
				        "0.007105,0.004756,0.002389,-0.001844,-0.009828,-0.025491", \
				        "0.010388,0.007885,0.005365,0.000832,-0.007413,-0.023246");
			}
			rise_power(Power_X4) {
				values ("0.004897,0.006503,0.008404,0.012267,0.020032,0.035541", \
				        "0.004879,0.006482,0.008396,0.012252,0.020007,0.035520", \
				        "0.004858,0.006473,0.008382,0.012248,0.019998,0.035508", \
				        "0.004997,0.006574,0.008457,0.012293,0.020022,0.035515", \
				        "0.005361,0.006871,0.008740,0.012535,0.020214,0.035661", \
				        "0.006193,0.007613,0.009414,0.013149,0.020763,0.036140", \
				        "0.008045,0.009281,0.011001,0.014650,0.022157,0.037415", \
				        "0.011976,0.012945,0.014485,0.017993,0.025345,0.040427");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR4_X1
 Cell Description	: Combinational cell (OR4_X1) with drive strength X1
*******************************************************************************************/

cell (OR4_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 8760.549062;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 11769.450000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 5693.504000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 7003.161000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 7941.270000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 5810.446000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 7923.055000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 7977.681000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 10802.730000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 5619.837000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 7883.103000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 7905.217000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 10764.750000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 7887.731000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 10752.670000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 10780.290000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 13653.890000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000733;
		fall_capacitance	: 0.000639;
		rise_capacitance	: 0.000827;
		fall_capacitance_range		(0.000595, 0.000748);
		rise_capacitance_range		(0.000670, 0.000989);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000680;
		fall_capacitance	: 0.000612;
		rise_capacitance	: 0.000748;
		fall_capacitance_range		(0.000523, 0.000686);
		rise_capacitance_range		(0.000633, 0.000870);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000073,0.000060,0.000043,0.000027,0.000015,0.000008,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000690;
		fall_capacitance	: 0.000640;
		rise_capacitance	: 0.000740;
		fall_capacitance_range		(0.000515, 0.000732);
		rise_capacitance_range		(0.000643, 0.000859);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000009,0.000006,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000019,0.000014,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000704;
		fall_capacitance	: 0.000679;
		rise_capacitance	: 0.000729;
		fall_capacitance_range		(0.000582, 0.000772);
		rise_capacitance_range		(0.000645, 0.000830);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.059010,0.064639,0.074409,0.090846,0.118662,0.165405", \
				        "0.062207,0.067824,0.077550,0.094120,0.121969,0.168682", \
				        "0.069506,0.075052,0.084741,0.101406,0.129192,0.175866", \
				        "0.085695,0.091002,0.100333,0.116445,0.143842,0.190323", \
				        "0.112663,0.118168,0.127482,0.143609,0.170669,0.216969", \
				        "0.150104,0.156315,0.166637,0.183512,0.211015,0.257574", \
				        "0.204264,0.211419,0.223764,0.242592,0.272547,0.320580", \
				        "0.289139,0.297559,0.311444,0.334603,0.369611,0.423415");
			}
			cell_rise(Timing_X1) {
				values ("0.043965,0.049207,0.059125,0.078462,0.116088,0.191477", \
				        "0.047372,0.052610,0.062569,0.081887,0.119607,0.194952", \
				        "0.054261,0.059480,0.069329,0.088288,0.125919,0.201255", \
				        "0.064892,0.070266,0.080255,0.099414,0.136905,0.212167", \
				        "0.076558,0.082417,0.092876,0.112222,0.149877,0.224893", \
				        "0.086394,0.093323,0.104907,0.125141,0.162858,0.237759", \
				        "0.086746,0.095169,0.109813,0.132793,0.172218,0.247542", \
				        "0.063417,0.073591,0.091065,0.120352,0.165833,0.243723");
			}
			fall_transition(Timing_X1) {
				values ("0.015896,0.018774,0.024139,0.033812,0.050884,0.081824", \
				        "0.015779,0.018672,0.024041,0.033716,0.050802,0.081774", \
				        "0.015462,0.018376,0.023756,0.033456,0.050588,0.081620", \
				        "0.014931,0.017799,0.023168,0.032966,0.050274,0.081417", \
				        "0.016848,0.019296,0.024060,0.033228,0.050066,0.081337", \
				        "0.020553,0.022981,0.027359,0.035651,0.051381,0.082257", \
				        "0.026131,0.028796,0.033403,0.041557,0.056016,0.084804", \
				        "0.035243,0.038351,0.043724,0.052705,0.067607,0.094540");
			}
			rise_transition(Timing_X1) {
				values ("0.013337,0.017262,0.025560,0.042921,0.078524,0.150189", \
				        "0.013333,0.017249,0.025559,0.042944,0.078590,0.150187", \
				        "0.013397,0.017292,0.025574,0.042966,0.078517,0.150188", \
				        "0.014309,0.017997,0.025991,0.043115,0.078572,0.150187", \
				        "0.016390,0.019839,0.027263,0.043801,0.078725,0.150201", \
				        "0.020193,0.023774,0.030634,0.045680,0.079325,0.150424", \
				        "0.026144,0.030566,0.038049,0.051772,0.082426,0.151790", \
				        "0.035418,0.040725,0.050155,0.065480,0.092843,0.157161");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.107889,0.113652,0.123523,0.140291,0.168248,0.215157", \
				        "0.110824,0.116586,0.126400,0.143036,0.170956,0.217857", \
				        "0.116095,0.121854,0.131747,0.148372,0.176117,0.223023", \
				        "0.125697,0.131458,0.141334,0.158107,0.186054,0.232966", \
				        "0.144185,0.150036,0.159899,0.176794,0.204757,0.251798", \
				        "0.173843,0.180142,0.190777,0.208732,0.237779,0.286008", \
				        "0.224494,0.231560,0.244210,0.263748,0.295421,0.346116", \
				        "0.310228,0.318533,0.332662,0.355286,0.391681,0.448307");
			}
			cell_rise(Timing_X1) {
				values ("0.054728,0.060205,0.070384,0.089936,0.127932,0.203459", \
				        "0.058080,0.063554,0.073733,0.093327,0.131244,0.206811", \
				        "0.064918,0.070383,0.080655,0.100254,0.137955,0.213549", \
				        "0.078095,0.083558,0.093670,0.112962,0.150682,0.226167", \
				        "0.094723,0.100568,0.111091,0.130624,0.168390,0.243675", \
				        "0.111387,0.118108,0.129404,0.149417,0.187221,0.262299", \
				        "0.121842,0.129676,0.143379,0.165368,0.203811,0.278761", \
				        "0.113537,0.123034,0.139318,0.165860,0.208159,0.284020");
			}
			fall_transition(Timing_X1) {
				values ("0.017013,0.019809,0.025028,0.034519,0.051320,0.082118", \
				        "0.017006,0.019812,0.024996,0.034569,0.051379,0.082167", \
				        "0.016991,0.019799,0.024994,0.034565,0.051323,0.082136", \
				        "0.016971,0.019782,0.024987,0.034534,0.051374,0.082139", \
				        "0.017636,0.020397,0.025500,0.034910,0.051729,0.082353", \
				        "0.020312,0.023111,0.028213,0.037513,0.054020,0.084310", \
				        "0.025137,0.028109,0.033469,0.042814,0.059033,0.088460", \
				        "0.032768,0.036106,0.042100,0.052260,0.069353,0.098634");
			}
			rise_transition(Timing_X1) {
				values ("0.014272,0.018183,0.026382,0.043615,0.079046,0.150533", \
				        "0.014287,0.018194,0.026405,0.043527,0.079030,0.150542", \
				        "0.014264,0.018178,0.026388,0.043609,0.079025,0.150531", \
				        "0.014555,0.018372,0.026513,0.043700,0.079019,0.150547", \
				        "0.016331,0.019862,0.027491,0.044083,0.079158,0.150561", \
				        "0.019517,0.023026,0.030007,0.045520,0.079583,0.150683", \
				        "0.024490,0.028604,0.035626,0.049471,0.081245,0.151336", \
				        "0.031970,0.036881,0.045415,0.059614,0.087481,0.154079");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.140548,0.146302,0.156158,0.172995,0.200960,0.247867", \
				        "0.143676,0.149440,0.159291,0.176013,0.203994,0.250899", \
				        "0.149726,0.155491,0.165303,0.182172,0.209995,0.256896", \
				        "0.160591,0.166361,0.176366,0.193160,0.221129,0.268041", \
				        "0.178384,0.184158,0.194187,0.211136,0.239184,0.286166", \
				        "0.199261,0.205345,0.216125,0.233795,0.262963,0.311160", \
				        "0.228240,0.235173,0.247415,0.266788,0.298522,0.349835", \
				        "0.291667,0.299799,0.313849,0.336252,0.372922,0.430687");
			}
			cell_rise(Timing_X1) {
				values ("0.060254,0.066082,0.076750,0.096927,0.135515,0.211596", \
				        "0.063542,0.069366,0.080059,0.100154,0.138843,0.214889", \
				        "0.070397,0.076202,0.086938,0.107129,0.145641,0.221714", \
				        "0.084810,0.090509,0.100994,0.120702,0.159027,0.235062", \
				        "0.105221,0.111225,0.121950,0.141865,0.180044,0.255755", \
				        "0.127376,0.134143,0.145623,0.165886,0.204047,0.279519", \
				        "0.146401,0.154310,0.167867,0.189787,0.228402,0.303621", \
				        "0.152498,0.161891,0.178067,0.204026,0.245728,0.321639");
			}
			fall_transition(Timing_X1) {
				values ("0.017019,0.019825,0.025031,0.034552,0.051321,0.082130", \
				        "0.017026,0.019827,0.025016,0.034552,0.051342,0.082148", \
				        "0.017017,0.019828,0.025037,0.034528,0.051427,0.082175", \
				        "0.017030,0.019829,0.025031,0.034563,0.051329,0.082140", \
				        "0.017310,0.020090,0.025255,0.034744,0.051452,0.082188", \
				        "0.019252,0.022115,0.027357,0.036918,0.053702,0.084085", \
				        "0.023558,0.026577,0.032074,0.041988,0.059069,0.089193", \
				        "0.031391,0.034784,0.040874,0.051594,0.069787,0.100762");
			}
			rise_transition(Timing_X1) {
				values ("0.015469,0.019448,0.027702,0.044916,0.080049,0.151231", \
				        "0.015441,0.019424,0.027704,0.044899,0.079959,0.151249", \
				        "0.015348,0.019339,0.027629,0.044770,0.080000,0.151228", \
				        "0.015239,0.019190,0.027462,0.044685,0.079968,0.151192", \
				        "0.016835,0.020445,0.028202,0.044911,0.079867,0.151208", \
				        "0.019859,0.023412,0.030458,0.046144,0.080256,0.151285", \
				        "0.024570,0.028593,0.035652,0.049681,0.081720,0.151853", \
				        "0.031564,0.036339,0.044596,0.058610,0.086950,0.154174");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.156987,0.162754,0.172477,0.189310,0.217316,0.264206", \
				        "0.160510,0.166287,0.176119,0.192859,0.220847,0.267753", \
				        "0.166850,0.172605,0.182517,0.199335,0.227206,0.274113", \
				        "0.177682,0.183439,0.193343,0.210244,0.238151,0.285052", \
				        "0.194982,0.200740,0.210867,0.227812,0.255934,0.302886", \
				        "0.215489,0.221544,0.232078,0.249559,0.278386,0.326157", \
				        "0.233541,0.240122,0.251514,0.270444,0.301380,0.351983", \
				        "0.264988,0.272769,0.286388,0.308073,0.343922,0.401327");
			}
			cell_rise(Timing_X1) {
				values ("0.061580,0.067705,0.078885,0.099758,0.139435,0.216461", \
				        "0.064970,0.071088,0.082214,0.103016,0.142748,0.219711", \
				        "0.072154,0.078232,0.089368,0.110232,0.149730,0.226699", \
				        "0.087625,0.093535,0.104378,0.124702,0.163867,0.240633", \
				        "0.110725,0.116895,0.127960,0.148265,0.187085,0.263495", \
				        "0.137228,0.144151,0.155802,0.176438,0.215101,0.291158", \
				        "0.162982,0.171046,0.184937,0.207095,0.246144,0.321893", \
				        "0.182670,0.192118,0.208332,0.234453,0.276295,0.352560");
			}
			fall_transition(Timing_X1) {
				values ("0.017018,0.019829,0.025036,0.034512,0.051409,0.082175", \
				        "0.017025,0.019832,0.025038,0.034534,0.051332,0.082142", \
				        "0.017033,0.019828,0.025040,0.034516,0.051322,0.082130", \
				        "0.017034,0.019837,0.025019,0.034492,0.051427,0.082175", \
				        "0.017122,0.019916,0.025103,0.034546,0.051389,0.082118", \
				        "0.018440,0.021283,0.026543,0.036073,0.052903,0.083380", \
				        "0.021460,0.024450,0.029929,0.039920,0.057316,0.087999", \
				        "0.028957,0.032316,0.038381,0.049225,0.067986,0.100201");
			}
			rise_transition(Timing_X1) {
				values ("0.016367,0.020505,0.028970,0.046379,0.081600,0.152526", \
				        "0.016324,0.020450,0.028952,0.046359,0.081572,0.152485", \
				        "0.016139,0.020269,0.028752,0.046220,0.081497,0.152431", \
				        "0.015844,0.019928,0.028391,0.045894,0.081276,0.152392", \
				        "0.017385,0.021100,0.028981,0.045860,0.081009,0.152226", \
				        "0.020403,0.024027,0.031197,0.046976,0.081254,0.152165", \
				        "0.025086,0.029156,0.036254,0.050333,0.082585,0.152670", \
				        "0.031963,0.036719,0.044923,0.058883,0.087437,0.154919");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.003121,0.002857,0.002344,0.001365,-0.000592,-0.004477", \
				        "0.003119,0.002864,0.002358,0.001369,-0.000581,-0.004467", \
				        "0.003144,0.002879,0.002385,0.001406,-0.000556,-0.004439", \
				        "0.003247,0.002988,0.002486,0.001509,-0.000432,-0.004308", \
				        "0.003539,0.003275,0.002757,0.001772,-0.000168,-0.004052", \
				        "0.004155,0.003875,0.003342,0.002342,0.000382,-0.003512", \
				        "0.005457,0.005174,0.004623,0.003579,0.001591,-0.002321", \
				        "0.008347,0.008037,0.007427,0.006345,0.004299,0.000345");
			}
			rise_power(Power_X1) {
				values ("0.001459,0.001702,0.002184,0.003167,0.005108,0.008985", \
				        "0.001462,0.001702,0.002193,0.003174,0.005116,0.008994", \
				        "0.001489,0.001736,0.002212,0.003179,0.005129,0.009007", \
				        "0.001564,0.001805,0.002285,0.003259,0.005201,0.009070", \
				        "0.001800,0.002019,0.002495,0.003455,0.005391,0.009255", \
				        "0.002369,0.002595,0.003057,0.004010,0.005924,0.009782", \
				        "0.003757,0.003970,0.004426,0.005346,0.007258,0.011070", \
				        "0.006815,0.006998,0.007417,0.008314,0.010180,0.013953");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.003553,0.003292,0.002789,0.001814,-0.000143,-0.004018", \
				        "0.003546,0.003291,0.002770,0.001785,-0.000160,-0.004045", \
				        "0.003526,0.003286,0.002759,0.001767,-0.000190,-0.004074", \
				        "0.003496,0.003238,0.002711,0.001731,-0.000222,-0.004108", \
				        "0.003506,0.003212,0.002713,0.001724,-0.000218,-0.004103", \
				        "0.003749,0.003479,0.002937,0.001932,-0.000027,-0.003919", \
				        "0.004691,0.004381,0.003828,0.002784,0.000789,-0.003115", \
				        "0.006932,0.006615,0.005990,0.004922,0.002892,-0.001055");
			}
			rise_power(Power_X1) {
				values ("0.002746,0.002980,0.003469,0.004437,0.006389,0.010276", \
				        "0.002752,0.002994,0.003472,0.004442,0.006391,0.010276", \
				        "0.002750,0.002995,0.003484,0.004455,0.006401,0.010282", \
				        "0.002797,0.003040,0.003524,0.004489,0.006429,0.010307", \
				        "0.002956,0.003201,0.003676,0.004642,0.006571,0.010447", \
				        "0.003427,0.003659,0.004119,0.005065,0.006988,0.010846", \
				        "0.004570,0.004790,0.005230,0.006169,0.008066,0.011904", \
				        "0.007110,0.007309,0.007747,0.008637,0.010499,0.014296");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X1) {
				values ("0.003928,0.003666,0.003154,0.002172,0.000222,-0.003660", \
				        "0.003921,0.003657,0.003150,0.002163,0.000207,-0.003670", \
				        "0.003921,0.003644,0.003137,0.002169,0.000221,-0.003658", \
				        "0.003917,0.003642,0.003140,0.002152,0.000200,-0.003681", \
				        "0.003924,0.003648,0.003133,0.002145,0.000186,-0.003699", \
				        "0.003939,0.003663,0.003148,0.002149,0.000195,-0.003700", \
				        "0.004497,0.004191,0.003656,0.002612,0.000636,-0.003259", \
				        "0.006679,0.006372,0.005787,0.004705,0.002678,-0.001269");
			}
			rise_power(Power_X1) {
				values ("0.003872,0.004108,0.004588,0.005562,0.007505,0.011399", \
				        "0.003846,0.004097,0.004580,0.005552,0.007497,0.011393", \
				        "0.003846,0.004074,0.004573,0.005544,0.007490,0.011386", \
				        "0.003870,0.004118,0.004589,0.005556,0.007496,0.011387", \
				        "0.004015,0.004253,0.004722,0.005685,0.007623,0.011505", \
				        "0.004455,0.004673,0.005147,0.006091,0.008013,0.011879", \
				        "0.005574,0.005782,0.006265,0.007191,0.009085,0.012928", \
				        "0.008200,0.008411,0.008850,0.009753,0.011615,0.015420");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X1) {
				values ("0.004296,0.004025,0.003511,0.002529,0.000587,-0.003293", \
				        "0.004287,0.004017,0.003512,0.002525,0.000587,-0.003295", \
				        "0.004281,0.004018,0.003498,0.002516,0.000572,-0.003309", \
				        "0.004268,0.004018,0.003499,0.002521,0.000573,-0.003305", \
				        "0.004266,0.003998,0.003497,0.002501,0.000549,-0.003335", \
				        "0.004286,0.004018,0.003503,0.002510,0.000566,-0.003319", \
				        "0.004604,0.004310,0.003769,0.002759,0.000800,-0.003091", \
				        "0.006623,0.006290,0.005740,0.004678,0.002654,-0.001271");
			}
			rise_power(Power_X1) {
				values ("0.004821,0.005053,0.005543,0.006519,0.008482,0.012391", \
				        "0.004804,0.005044,0.005525,0.006498,0.008463,0.012374", \
				        "0.004795,0.005024,0.005513,0.006488,0.008445,0.012356", \
				        "0.004816,0.005050,0.005532,0.006499,0.008448,0.012352", \
				        "0.004953,0.005177,0.005668,0.006623,0.008568,0.012463", \
				        "0.005384,0.005605,0.006077,0.007019,0.008949,0.012828", \
				        "0.006539,0.006742,0.007218,0.008148,0.010041,0.013893", \
				        "0.009329,0.009536,0.009965,0.010872,0.012740,0.016547");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR4_X2
 Cell Description	: Combinational cell (OR4_X2) with drive strength X2
*******************************************************************************************/

cell (OR4_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 10612.866813;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 15160.390000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 7443.330000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 8753.061000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 9690.988000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 7560.274000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 9672.773000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 9727.399000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 12552.430000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 7369.656000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 9632.820000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 9654.931000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 12514.440000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 9637.447000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 12502.360000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 12529.990000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 15403.580000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000724;
		fall_capacitance	: 0.000624;
		rise_capacitance	: 0.000823;
		fall_capacitance_range		(0.000547, 0.000739);
		rise_capacitance_range		(0.000675, 0.000989);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000675;
		fall_capacitance	: 0.000606;
		rise_capacitance	: 0.000744;
		fall_capacitance_range		(0.000518, 0.000681);
		rise_capacitance_range		(0.000604, 0.000868);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000073,0.000060,0.000043,0.000027,0.000015,0.000008,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000691;
		fall_capacitance	: 0.000637;
		rise_capacitance	: 0.000746;
		fall_capacitance_range		(0.000537, 0.000729);
		rise_capacitance_range		(0.000670, 0.000856);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000009,0.000006,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000019,0.000014,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000702;
		fall_capacitance	: 0.000679;
		rise_capacitance	: 0.000726;
		fall_capacitance_range		(0.000587, 0.000769);
		rise_capacitance_range		(0.000652, 0.000828);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000006,0.000004,0.000002,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.060274,0.070319,0.081245,0.099360,0.129602,0.180201", \
				        "0.063361,0.073374,0.084331,0.102603,0.132750,0.183347", \
				        "0.070489,0.080417,0.091223,0.109587,0.139875,0.190480", \
				        "0.086602,0.096127,0.106532,0.124540,0.154394,0.204824", \
				        "0.114769,0.124444,0.134806,0.152506,0.181910,0.232089", \
				        "0.153576,0.164361,0.175813,0.194081,0.224006,0.274406", \
				        "0.209634,0.221889,0.235136,0.255495,0.287545,0.339181", \
				        "0.297098,0.311373,0.326182,0.350797,0.387980,0.445110");
			}
			cell_rise(Timing_X2) {
				values ("0.040362,0.048739,0.058625,0.077265,0.113612,0.186365", \
				        "0.043773,0.052143,0.062058,0.080668,0.116959,0.189725", \
				        "0.050739,0.059077,0.068918,0.087374,0.123685,0.196379", \
				        "0.061574,0.070295,0.080333,0.098908,0.135119,0.207816", \
				        "0.073396,0.083229,0.093757,0.112839,0.148922,0.221502", \
				        "0.083105,0.094703,0.106780,0.126946,0.163403,0.235592", \
				        "0.083768,0.097551,0.112659,0.136017,0.174558,0.247147", \
				        "0.061009,0.077389,0.095204,0.124983,0.170344,0.245875");
			}
			fall_transition(Timing_X2) {
				values ("0.015063,0.019904,0.025718,0.036163,0.054425,0.087904", \
				        "0.014935,0.019804,0.025633,0.036061,0.054381,0.087911", \
				        "0.014622,0.019535,0.025371,0.035872,0.054218,0.087792", \
				        "0.013857,0.018815,0.024724,0.035337,0.053864,0.087591", \
				        "0.015927,0.020091,0.025365,0.035351,0.053614,0.087421", \
				        "0.019912,0.024040,0.028826,0.037865,0.054955,0.088478", \
				        "0.025684,0.030198,0.035209,0.043921,0.059519,0.090896", \
				        "0.035134,0.040235,0.045955,0.055457,0.071388,0.100466");
			}
			rise_transition(Timing_X2) {
				values ("0.010060,0.015669,0.023515,0.039998,0.074259,0.143353", \
				        "0.010074,0.015663,0.023528,0.039997,0.074233,0.143349", \
				        "0.010123,0.015706,0.023521,0.040075,0.074227,0.143298", \
				        "0.011226,0.016517,0.024045,0.040247,0.074298,0.143320", \
				        "0.013456,0.018677,0.025639,0.041137,0.074498,0.143378", \
				        "0.016937,0.022854,0.029533,0.043607,0.075243,0.143552", \
				        "0.022597,0.029622,0.037237,0.050410,0.078902,0.144985", \
				        "0.032170,0.040070,0.049465,0.064732,0.090539,0.150784");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.109762,0.119935,0.130867,0.149198,0.179577,0.230320", \
				        "0.112699,0.122863,0.133720,0.151900,0.182282,0.233022", \
				        "0.117949,0.128123,0.139108,0.157225,0.187426,0.238183", \
				        "0.127577,0.137756,0.148697,0.167021,0.197352,0.248107", \
				        "0.146455,0.156694,0.167654,0.186097,0.216394,0.267226", \
				        "0.177038,0.188161,0.200062,0.219391,0.250768,0.302711", \
				        "0.229663,0.241848,0.255451,0.276143,0.310149,0.364435", \
				        "0.317939,0.331862,0.346750,0.371070,0.409276,0.469234");
			}
			cell_rise(Timing_X2) {
				values ("0.050853,0.059678,0.069893,0.088891,0.125496,0.198462", \
				        "0.054206,0.063029,0.073212,0.092093,0.128788,0.201775", \
				        "0.061041,0.069857,0.080132,0.099047,0.135584,0.208559", \
				        "0.074388,0.083221,0.093352,0.112138,0.148633,0.221542", \
				        "0.091168,0.100891,0.111556,0.130730,0.167022,0.239718", \
				        "0.107829,0.119094,0.130714,0.150663,0.187108,0.259510", \
				        "0.118258,0.131412,0.145727,0.167960,0.205595,0.277805", \
				        "0.110525,0.126002,0.142669,0.169866,0.212028,0.285365");
			}
			fall_transition(Timing_X2) {
				values ("0.016001,0.020745,0.026405,0.036659,0.054837,0.088216", \
				        "0.016003,0.020740,0.026394,0.036701,0.054834,0.088179", \
				        "0.015994,0.020731,0.026400,0.036694,0.054847,0.088187", \
				        "0.015973,0.020706,0.026367,0.036616,0.054817,0.088171", \
				        "0.016554,0.021223,0.026768,0.037000,0.055045,0.088332", \
				        "0.019329,0.023998,0.029524,0.039603,0.057385,0.090179", \
				        "0.024264,0.029212,0.034927,0.045007,0.062428,0.094236", \
				        "0.032109,0.037612,0.043854,0.054664,0.072861,0.104280");
			}
			rise_transition(Timing_X2) {
				values ("0.011002,0.016612,0.024431,0.040790,0.074736,0.143716", \
				        "0.010989,0.016612,0.024414,0.040756,0.074791,0.143701", \
				        "0.010967,0.016596,0.024374,0.040772,0.074771,0.143681", \
				        "0.011343,0.016808,0.024540,0.040744,0.074725,0.143660", \
				        "0.013382,0.018634,0.025783,0.041408,0.074885,0.143755", \
				        "0.016449,0.022126,0.028838,0.043296,0.075394,0.143891", \
				        "0.021210,0.027823,0.034965,0.048185,0.077619,0.144549", \
				        "0.028910,0.036351,0.045014,0.059152,0.085074,0.147561");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.142366,0.152550,0.163521,0.181886,0.212246,0.262993", \
				        "0.145555,0.155712,0.166625,0.184896,0.215221,0.265987", \
				        "0.151561,0.161735,0.172616,0.191081,0.221294,0.272034", \
				        "0.162399,0.172575,0.183699,0.202036,0.232400,0.283167", \
				        "0.180418,0.190600,0.201694,0.220195,0.250644,0.301434", \
				        "0.202265,0.212981,0.224775,0.244008,0.275436,0.327299", \
				        "0.232826,0.244657,0.257918,0.278608,0.312613,0.367479", \
				        "0.298262,0.311927,0.326715,0.350687,0.389279,0.450472");
			}
			cell_rise(Timing_X2) {
				values ("0.056122,0.065545,0.076268,0.095946,0.133194,0.206687", \
				        "0.059416,0.068835,0.079551,0.099159,0.136455,0.209919", \
				        "0.066244,0.075633,0.086409,0.106017,0.143153,0.216695", \
				        "0.080791,0.090003,0.100512,0.119797,0.156917,0.230259", \
				        "0.101325,0.111275,0.122181,0.141740,0.178562,0.251620", \
				        "0.123494,0.134868,0.146643,0.166788,0.203730,0.276478", \
				        "0.142371,0.155530,0.169721,0.191941,0.229665,0.302162", \
				        "0.148913,0.164224,0.180624,0.207360,0.248886,0.322215");
			}
			fall_transition(Timing_X2) {
				values ("0.016016,0.020740,0.026417,0.036737,0.054812,0.088175", \
				        "0.016017,0.020751,0.026409,0.036729,0.054850,0.088192", \
				        "0.016016,0.020755,0.026407,0.036739,0.054838,0.088175", \
				        "0.016016,0.020755,0.026421,0.036746,0.054851,0.088188", \
				        "0.016255,0.020953,0.026590,0.036844,0.054894,0.088179", \
				        "0.018243,0.023033,0.028695,0.039011,0.056975,0.089904", \
				        "0.022542,0.027583,0.033460,0.044043,0.062376,0.094921", \
				        "0.030496,0.036069,0.042513,0.053816,0.073157,0.106259");
			}
			rise_transition(Timing_X2) {
				values ("0.012041,0.017860,0.025747,0.042094,0.075714,0.144409", \
				        "0.012030,0.017819,0.025684,0.041959,0.075688,0.144376", \
				        "0.011941,0.017737,0.025634,0.042023,0.075705,0.144405", \
				        "0.011873,0.017607,0.025478,0.041906,0.075719,0.144390", \
				        "0.013798,0.019163,0.026414,0.042210,0.075649,0.144377", \
				        "0.016770,0.022458,0.029239,0.043913,0.076133,0.144433", \
				        "0.021315,0.027854,0.034935,0.048211,0.077985,0.145090", \
				        "0.028566,0.035825,0.044213,0.058078,0.084366,0.147669");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.158819,0.168978,0.179768,0.198204,0.228612,0.279332", \
				        "0.162425,0.172591,0.183425,0.201766,0.232117,0.282856", \
				        "0.168748,0.178899,0.189834,0.208200,0.238673,0.289401", \
				        "0.179480,0.189628,0.200619,0.219092,0.249412,0.300176", \
				        "0.196852,0.207064,0.218216,0.236770,0.267207,0.317976", \
				        "0.218122,0.228741,0.240234,0.259222,0.290365,0.341835", \
				        "0.237231,0.248617,0.261051,0.281508,0.314767,0.368999", \
				        "0.270499,0.283738,0.298177,0.321472,0.359218,0.420129");
			}
			cell_rise(Timing_X2) {
				values ("0.057290,0.067194,0.078390,0.098833,0.137153,0.211514", \
				        "0.060672,0.070557,0.081724,0.102023,0.140373,0.214738", \
				        "0.067820,0.077637,0.088850,0.109240,0.147289,0.221676", \
				        "0.083418,0.092962,0.103837,0.123718,0.161630,0.235829", \
				        "0.106653,0.116868,0.128072,0.148018,0.185418,0.259297", \
				        "0.133099,0.144686,0.156708,0.177173,0.214645,0.287988", \
				        "0.158825,0.172141,0.186541,0.208974,0.247089,0.320104", \
				        "0.178638,0.193999,0.210770,0.237289,0.278965,0.352617");
			}
			fall_transition(Timing_X2) {
				values ("0.016015,0.020753,0.026412,0.036657,0.054805,0.088152", \
				        "0.016017,0.020757,0.026397,0.036692,0.054823,0.088215", \
				        "0.016016,0.020748,0.026404,0.036679,0.054824,0.088147", \
				        "0.016023,0.020749,0.026396,0.036645,0.054849,0.088187", \
				        "0.016096,0.020819,0.026459,0.036765,0.054829,0.088188", \
				        "0.017422,0.022230,0.027901,0.038211,0.056245,0.089212", \
				        "0.020467,0.025464,0.031382,0.042009,0.060625,0.093804", \
				        "0.027956,0.033473,0.039919,0.051399,0.071309,0.105737");
			}
			rise_transition(Timing_X2) {
				values ("0.012803,0.018859,0.026949,0.043541,0.077355,0.145729", \
				        "0.012756,0.018806,0.026880,0.043513,0.077312,0.145702", \
				        "0.012600,0.018643,0.026760,0.043374,0.077154,0.145629", \
				        "0.012353,0.018299,0.026397,0.043052,0.077034,0.145591", \
				        "0.014231,0.019762,0.027153,0.043132,0.076749,0.145420", \
				        "0.017255,0.023045,0.029895,0.044609,0.077093,0.145365", \
				        "0.021830,0.028351,0.035515,0.048824,0.078855,0.145947", \
				        "0.028998,0.036207,0.044496,0.058308,0.084762,0.148351");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X2) {
				values ("0.003773,0.002925,0.001900,-0.000091,-0.004012,-0.011780", \
				        "0.003765,0.002912,0.001894,-0.000079,-0.004005,-0.011775", \
				        "0.003775,0.002948,0.001897,-0.000070,-0.003979,-0.011748", \
				        "0.003869,0.003034,0.002004,0.000029,-0.003859,-0.011614", \
				        "0.004217,0.003363,0.002306,0.000331,-0.003575,-0.011351", \
				        "0.004959,0.004051,0.002965,0.000931,-0.003008,-0.010804", \
				        "0.006475,0.005492,0.004341,0.002231,-0.001762,-0.009605", \
				        "0.009707,0.008662,0.007407,0.005156,0.001035,-0.006883");
			}
			rise_power(Power_X2) {
				values ("0.001839,0.002580,0.003535,0.005495,0.009371,0.017122", \
				        "0.001854,0.002577,0.003550,0.005501,0.009382,0.017134", \
				        "0.001886,0.002598,0.003566,0.005516,0.009403,0.017153", \
				        "0.001988,0.002690,0.003658,0.005588,0.009456,0.017207", \
				        "0.002257,0.002953,0.003878,0.005800,0.009656,0.017396", \
				        "0.002918,0.003586,0.004495,0.006385,0.010208,0.017909", \
				        "0.004500,0.005085,0.005964,0.007811,0.011590,0.019247", \
				        "0.007933,0.008412,0.009218,0.010988,0.014678,0.022240");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X2) {
				values ("0.004243,0.003390,0.002353,0.000370,-0.003544,-0.011306", \
				        "0.004233,0.003372,0.002330,0.000340,-0.003569,-0.011329", \
				        "0.004216,0.003358,0.002307,0.000324,-0.003590,-0.011357", \
				        "0.004181,0.003326,0.002274,0.000292,-0.003630,-0.011390", \
				        "0.004191,0.003332,0.002277,0.000296,-0.003615,-0.011387", \
				        "0.004555,0.003650,0.002552,0.000527,-0.003405,-0.011201", \
				        "0.005667,0.004665,0.003523,0.001428,-0.002553,-0.010392", \
				        "0.008180,0.007147,0.005912,0.003709,-0.000387,-0.008299");
			}
			rise_power(Power_X2) {
				values ("0.003157,0.003868,0.004828,0.006767,0.010648,0.018405", \
				        "0.003157,0.003870,0.004828,0.006766,0.010656,0.018416", \
				        "0.003166,0.003873,0.004840,0.006785,0.010665,0.018422", \
				        "0.003248,0.003943,0.004892,0.006820,0.010692,0.018443", \
				        "0.003467,0.004141,0.005083,0.006997,0.010837,0.018582", \
				        "0.004012,0.004660,0.005581,0.007468,0.011296,0.018997", \
				        "0.005315,0.005914,0.006816,0.008660,0.012447,0.020098", \
				        "0.008195,0.008724,0.009553,0.011337,0.015039,0.022610");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X2) {
				values ("0.004600,0.003754,0.002700,0.000730,-0.003175,-0.010944", \
				        "0.004603,0.003749,0.002694,0.000724,-0.003180,-0.010947", \
				        "0.004594,0.003753,0.002691,0.000725,-0.003176,-0.010941", \
				        "0.004595,0.003758,0.002698,0.000708,-0.003198,-0.010968", \
				        "0.004605,0.003758,0.002701,0.000702,-0.003222,-0.010991", \
				        "0.004715,0.003824,0.002741,0.000732,-0.003190,-0.010974", \
				        "0.005410,0.004461,0.003349,0.001253,-0.002727,-0.010543", \
				        "0.007877,0.006867,0.005649,0.003452,-0.000639,-0.008532");
			}
			rise_power(Power_X2) {
				values ("0.004299,0.005002,0.005960,0.007897,0.011779,0.019545", \
				        "0.004292,0.004966,0.005948,0.007888,0.011771,0.019535", \
				        "0.004279,0.004976,0.005938,0.007877,0.011761,0.019545", \
				        "0.004329,0.005015,0.005973,0.007895,0.011769,0.019528", \
				        "0.004525,0.005207,0.006129,0.008053,0.011905,0.019644", \
				        "0.005059,0.005720,0.006620,0.008505,0.012330,0.020041", \
				        "0.006392,0.006964,0.007866,0.009704,0.013485,0.021134", \
				        "0.009320,0.009855,0.010687,0.012472,0.016168,0.023742");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X2) {
				values ("0.004985,0.004125,0.003067,0.001089,-0.002814,-0.010580", \
				        "0.004969,0.004110,0.003060,0.001090,-0.002824,-0.010588", \
				        "0.004977,0.004093,0.003055,0.001077,-0.002827,-0.010594", \
				        "0.004951,0.004097,0.003044,0.001085,-0.002823,-0.010591", \
				        "0.004958,0.004105,0.003052,0.001068,-0.002854,-0.010625", \
				        "0.005037,0.004156,0.003091,0.001083,-0.002821,-0.010603", \
				        "0.005467,0.004536,0.003416,0.001374,-0.002573,-0.010380", \
				        "0.007718,0.006729,0.005544,0.003367,-0.000685,-0.008560");
			}
			rise_power(Power_X2) {
				values ("0.005275,0.005964,0.006920,0.008857,0.012745,0.020525", \
				        "0.005239,0.005944,0.006901,0.008836,0.012724,0.020505", \
				        "0.005223,0.005902,0.006884,0.008829,0.012710,0.020494", \
				        "0.005278,0.005976,0.006918,0.008842,0.012718,0.020490", \
				        "0.005465,0.006157,0.007088,0.008996,0.012853,0.020601", \
				        "0.006003,0.006659,0.007570,0.009449,0.013274,0.020989", \
				        "0.007351,0.007974,0.008832,0.010679,0.014452,0.022112", \
				        "0.010474,0.011016,0.011830,0.013623,0.017322,0.024894");
			}
		}
	}

}


/******************************************************************************************
 Module          	: OR4_X4
 Cell Description	: Combinational cell (OR4_X4) with drive strength X4
*******************************************************************************************/

cell (OR4_X4) {

	area               	: 1.596000;

	cell_leakage_power 	: 14827.161250;

	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & !A4";
		value      	: 22668.340000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & !A4";
		value      	: 11438.340000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & !A4";
		value      	: 12748.240000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & !A4";
		value      	: 13685.630000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & !A4";
		value      	: 11555.290000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & !A4";
		value      	: 13667.420000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & !A4";
		value      	: 13722.040000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & !A4";
		value      	: 16546.980000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & !A3 & A4";
		value      	: 11364.660000;
	}
	leakage_power () {
		when      	: "!A1 & !A2 & A3 & A4";
		value      	: 13627.460000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & !A3 & A4";
		value      	: 13649.560000;
	}
	leakage_power () {
		when      	: "A1 & !A2 & A3 & A4";
		value      	: 16508.990000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & !A3 & A4";
		value      	: 13632.090000;
	}
	leakage_power () {
		when      	: "!A1 & A2 & A3 & A4";
		value      	: 16496.910000;
	}
	leakage_power () {
		when      	: "A1 & A2 & !A3 & A4";
		value      	: 16524.540000;
	}
	leakage_power () {
		when      	: "A1 & A2 & A3 & A4";
		value      	: 19398.090000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000717;
		fall_capacitance	: 0.000619;
		rise_capacitance	: 0.000815;
		fall_capacitance_range		(0.000532, 0.000718);
		rise_capacitance_range		(0.000678, 0.000986);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,0.000001,0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000004,0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A2 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000675;
		fall_capacitance	: 0.000607;
		rise_capacitance	: 0.000743;
		fall_capacitance_range		(0.000515, 0.000671);
		rise_capacitance_range		(0.000605, 0.000866);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000002,0.000001,0.000001,0.000000,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000073,0.000060,0.000043,0.000027,0.000015,0.000008,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A3 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000002,0.000002,0.000001,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & !A3 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000002,0.000001,-0.000000,-0.000001,-0.000001,-0.000002,-0.000004");
			}

		}
	}

	pin (A3) {

		direction		: input;
		capacitance		: 0.000688;
		fall_capacitance	: 0.000637;
		rise_capacitance	: 0.000739;
		fall_capacitance_range		(0.000530, 0.000722);
		rise_capacitance_range		(0.000641, 0.000850);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000017,0.000013,0.000009,0.000006,0.000003,0.000002,0.000001,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000019,0.000014,0.000009,0.000006,0.000004,0.000002,-0.000000");
			}

		}

		internal_power () {

			when      	: "!A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000002,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000000,-0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000003,0.000001,0.000001,0.000000,-0.000000,-0.000001,-0.000001,-0.000003");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000013,0.000010,0.000008,0.000005,0.000003,0.000001,-0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A4 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000005,0.000003,0.000002,0.000001,0.000000,-0.000000,-0.000001,-0.000003");
			}

		}
	}

	pin (A4) {

		direction		: input;
		capacitance		: 0.000700;
		fall_capacitance	: 0.000673;
		rise_capacitance	: 0.000727;
		fall_capacitance_range		(0.000574, 0.000765);
		rise_capacitance_range		(0.000659, 0.000822);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000012,0.000008,0.000006,0.000004,0.000002,0.000001,0.000000,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,0.000000,-0.000001");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000006,0.000004,0.000002,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "!A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000007,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & !A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000011,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,-0.000000");
			}

		}

		internal_power () {

			when      	: "A1 & !A2 & A3 & ZN";

			power(Hidden_Power_Data) {
				values ("0.000008,0.000005,0.000003,0.000002,0.000001,0.000000,-0.000001,-0.000002");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "(((A1 | A2) | A3) | A4)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.070205,0.082934,0.094478,0.113251,0.144205,0.195462", \
				        "0.073146,0.085861,0.097423,0.116325,0.147270,0.198533", \
				        "0.079887,0.092580,0.103887,0.122970,0.154028,0.205263", \
				        "0.094972,0.107334,0.118552,0.137309,0.168203,0.219314", \
				        "0.125170,0.137244,0.148111,0.166181,0.196469,0.247324", \
				        "0.167348,0.180644,0.192654,0.211249,0.241739,0.292693", \
				        "0.227923,0.242765,0.255919,0.276841,0.309351,0.361417", \
				        "0.320814,0.337620,0.352459,0.377169,0.414617,0.471968");
			}
			cell_rise(Timing_X4) {
				values ("0.042118,0.052719,0.062787,0.081267,0.117208,0.188685", \
				        "0.045533,0.056130,0.066203,0.084702,0.120628,0.192067", \
				        "0.052495,0.063050,0.073221,0.091598,0.127366,0.198819", \
				        "0.064366,0.075333,0.085481,0.103936,0.139700,0.211018", \
				        "0.077799,0.090122,0.100908,0.119917,0.155395,0.226624", \
				        "0.089765,0.103940,0.116647,0.136822,0.172763,0.243561", \
				        "0.094342,0.110834,0.125975,0.149806,0.188124,0.259116", \
				        "0.077232,0.096346,0.114010,0.143740,0.189382,0.263677");
			}
			fall_transition(Timing_X4) {
				values ("0.017281,0.022853,0.028466,0.038730,0.056673,0.089595", \
				        "0.017204,0.022784,0.028405,0.038616,0.056655,0.089571", \
				        "0.016946,0.022574,0.028214,0.038492,0.056481,0.089462", \
				        "0.015932,0.021788,0.027599,0.037984,0.056193,0.089285", \
				        "0.017375,0.022281,0.027524,0.037563,0.055834,0.089059", \
				        "0.022206,0.026890,0.031564,0.040383,0.057347,0.090108", \
				        "0.028995,0.033957,0.038791,0.047263,0.062482,0.092956", \
				        "0.039960,0.045230,0.050601,0.059665,0.074987,0.103063");
			}
			rise_transition(Timing_X4) {
				values ("0.009379,0.015968,0.023533,0.039421,0.072865,0.140673", \
				        "0.009374,0.015960,0.023550,0.039467,0.072882,0.140662", \
				        "0.009376,0.015978,0.023556,0.039462,0.072837,0.140664", \
				        "0.010424,0.016704,0.024054,0.039643,0.072887,0.140662", \
				        "0.012744,0.019167,0.025976,0.040614,0.073023,0.140669", \
				        "0.016471,0.023633,0.030305,0.043613,0.074087,0.140957", \
				        "0.022841,0.030769,0.038483,0.051428,0.078478,0.142425", \
				        "0.034058,0.042254,0.051309,0.066532,0.091572,0.148798");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.120572,0.133393,0.144686,0.163544,0.194570,0.245905", \
				        "0.123552,0.136335,0.147599,0.166274,0.197251,0.248583", \
				        "0.128836,0.141621,0.152966,0.171680,0.202521,0.253859", \
				        "0.138511,0.151279,0.162614,0.181466,0.212450,0.263802", \
				        "0.157856,0.170583,0.182151,0.200973,0.231931,0.283289", \
				        "0.191246,0.204658,0.217048,0.236487,0.268336,0.320609", \
				        "0.247708,0.262383,0.275619,0.296784,0.330695,0.385218", \
				        "0.341200,0.357644,0.372040,0.397048,0.434739,0.494364");
			}
			cell_rise(Timing_X4) {
				values ("0.052612,0.063732,0.074208,0.093038,0.129256,0.200942", \
				        "0.055963,0.067078,0.077530,0.096311,0.132462,0.204179", \
				        "0.062810,0.073916,0.084363,0.103099,0.139174,0.210873", \
				        "0.076460,0.087534,0.097943,0.116653,0.152661,0.224291", \
				        "0.094764,0.106985,0.117811,0.136843,0.172633,0.244098", \
				        "0.113304,0.127263,0.139432,0.159555,0.195508,0.266533", \
				        "0.127078,0.143031,0.157678,0.180218,0.217667,0.288447", \
				        "0.124058,0.142391,0.158936,0.186785,0.229271,0.301395");
			}
			fall_transition(Timing_X4) {
				values ("0.017863,0.023387,0.028877,0.038980,0.056921,0.089734", \
				        "0.017869,0.023385,0.028872,0.039013,0.056915,0.089697", \
				        "0.017865,0.023381,0.028897,0.039018,0.056900,0.089723", \
				        "0.017851,0.023355,0.028871,0.038948,0.056925,0.089697", \
				        "0.018206,0.023593,0.029065,0.039169,0.057020,0.089785", \
				        "0.021241,0.026556,0.031893,0.041707,0.059300,0.091477", \
				        "0.026874,0.032273,0.037705,0.047434,0.064523,0.095854", \
				        "0.035960,0.041699,0.047544,0.057822,0.075192,0.105957");
			}
			rise_transition(Timing_X4) {
				values ("0.010228,0.016899,0.024484,0.040221,0.073385,0.141019", \
				        "0.010246,0.016893,0.024454,0.040136,0.073347,0.141041", \
				        "0.010234,0.016882,0.024465,0.040207,0.073324,0.141037", \
				        "0.010490,0.017033,0.024572,0.040243,0.073373,0.141052", \
				        "0.012660,0.019062,0.026059,0.040896,0.073450,0.141063", \
				        "0.015968,0.022947,0.029601,0.043265,0.074226,0.141220", \
				        "0.021413,0.029060,0.036342,0.049159,0.077009,0.141981", \
				        "0.030544,0.038494,0.047054,0.061263,0.086140,0.145582");
			}
		}

		timing () {

			related_pin	   : "A3";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.153198,0.165966,0.177345,0.196255,0.227262,0.278590", \
				        "0.156378,0.169161,0.180419,0.199235,0.230250,0.281577", \
				        "0.162350,0.175096,0.186513,0.205370,0.236239,0.287578", \
				        "0.173163,0.185914,0.197483,0.216381,0.247341,0.298675", \
				        "0.191506,0.204284,0.215636,0.234708,0.265784,0.317123", \
				        "0.215425,0.228708,0.240769,0.260440,0.292256,0.344457", \
				        "0.249409,0.263751,0.276901,0.298009,0.331891,0.386893", \
				        "0.319276,0.335480,0.349622,0.374213,0.411996,0.472710");
			}
			cell_rise(Timing_X4) {
				values ("0.058196,0.069973,0.080850,0.100444,0.137180,0.209373", \
				        "0.061456,0.073226,0.084151,0.103554,0.140302,0.212554", \
				        "0.068229,0.079979,0.090921,0.110304,0.147018,0.219207", \
				        "0.082725,0.094279,0.105044,0.124328,0.160915,0.233033", \
				        "0.104666,0.117095,0.128195,0.147585,0.183879,0.255684", \
				        "0.128548,0.142603,0.154762,0.175113,0.211480,0.282848", \
				        "0.150403,0.166344,0.180867,0.203338,0.240896,0.311957", \
				        "0.161003,0.179166,0.195549,0.222908,0.264676,0.336704");
			}
			fall_transition(Timing_X4) {
				values ("0.017872,0.023381,0.028876,0.038964,0.056900,0.089724", \
				        "0.017873,0.023385,0.028908,0.038958,0.056897,0.089717", \
				        "0.017873,0.023370,0.028891,0.038981,0.056931,0.089724", \
				        "0.017882,0.023376,0.028896,0.039026,0.056900,0.089726", \
				        "0.018008,0.023505,0.029003,0.039060,0.056944,0.089744", \
				        "0.020160,0.025618,0.031132,0.041155,0.058847,0.091138", \
				        "0.024866,0.030431,0.036070,0.046238,0.064182,0.096249", \
				        "0.033738,0.039614,0.045641,0.056253,0.074892,0.107324");
			}
			rise_transition(Timing_X4) {
				values ("0.011220,0.018117,0.025761,0.041471,0.074410,0.141765", \
				        "0.011202,0.018096,0.025735,0.041465,0.074299,0.141780", \
				        "0.011139,0.018033,0.025695,0.041432,0.074382,0.141775", \
				        "0.010991,0.017868,0.025534,0.041309,0.074326,0.141753", \
				        "0.013021,0.019530,0.026607,0.041684,0.074301,0.141725", \
				        "0.016300,0.023222,0.029962,0.043708,0.074884,0.141832", \
				        "0.021497,0.029031,0.036247,0.049053,0.077261,0.142492", \
				        "0.030008,0.037849,0.046199,0.060045,0.085216,0.145511");
			}
		}

		timing () {

			related_pin	   : "A4";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.169569,0.182347,0.193655,0.212571,0.243592,0.294926", \
				        "0.173218,0.185991,0.197278,0.216112,0.247092,0.298428", \
				        "0.179523,0.192317,0.203728,0.222659,0.253532,0.304863", \
				        "0.190263,0.203048,0.214516,0.233572,0.264419,0.315751", \
				        "0.207773,0.220525,0.232095,0.251053,0.282140,0.333454", \
				        "0.230496,0.243620,0.255346,0.274840,0.306440,0.358283", \
				        "0.252088,0.265992,0.278687,0.299351,0.332839,0.387273", \
				        "0.289343,0.305078,0.319042,0.342755,0.380173,0.440511");
			}
			cell_rise(Timing_X4) {
				values ("0.059611,0.071937,0.083300,0.103582,0.141261,0.214437", \
				        "0.062925,0.075237,0.086592,0.106755,0.144478,0.217601", \
				        "0.069990,0.082243,0.093621,0.113711,0.151273,0.224345", \
				        "0.085367,0.097333,0.108472,0.128359,0.165734,0.238668", \
				        "0.109992,0.122662,0.134005,0.153830,0.190668,0.263247", \
				        "0.138101,0.152343,0.164697,0.185313,0.222163,0.294126", \
				        "0.166552,0.182601,0.197233,0.220059,0.257846,0.329421", \
				        "0.189978,0.208209,0.224697,0.251973,0.293814,0.366130");
			}
			fall_transition(Timing_X4) {
				values ("0.017872,0.023377,0.028879,0.038980,0.056938,0.089665", \
				        "0.017877,0.023391,0.028887,0.038993,0.056918,0.089735", \
				        "0.017876,0.023395,0.028898,0.038978,0.056911,0.089746", \
				        "0.017880,0.023395,0.028889,0.039020,0.056913,0.089746", \
				        "0.017920,0.023416,0.028912,0.038992,0.056864,0.089723", \
				        "0.019342,0.024846,0.030350,0.040404,0.058117,0.090593", \
				        "0.022695,0.028305,0.033968,0.044295,0.062520,0.095112", \
				        "0.030811,0.036737,0.042822,0.053672,0.072857,0.106487");
			}
			rise_transition(Timing_X4) {
				values ("0.011975,0.019151,0.026983,0.042952,0.075861,0.143023", \
				        "0.011947,0.019107,0.026920,0.042933,0.075869,0.143018", \
				        "0.011818,0.018973,0.026817,0.042781,0.075850,0.143035", \
				        "0.011510,0.018615,0.026457,0.042487,0.075590,0.142912", \
				        "0.013439,0.020108,0.027322,0.042571,0.075375,0.142744", \
				        "0.016777,0.023767,0.030601,0.044626,0.075806,0.142704", \
				        "0.021986,0.029505,0.036744,0.049576,0.078007,0.143349", \
				        "0.030415,0.038158,0.046426,0.060246,0.085459,0.146128");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X4) {
				values ("0.005572,0.003385,0.001220,-0.002823,-0.010686,-0.026249", \
				        "0.005560,0.003387,0.001217,-0.002822,-0.010689,-0.026256", \
				        "0.005550,0.003402,0.001214,-0.002825,-0.010691,-0.026253", \
				        "0.005573,0.003464,0.001271,-0.002758,-0.010603,-0.026152", \
				        "0.005987,0.003808,0.001617,-0.002428,-0.010275,-0.025849", \
				        "0.007070,0.004752,0.002470,-0.001705,-0.009649,-0.025287", \
				        "0.009094,0.006638,0.004178,-0.000182,-0.008283,-0.024023", \
				        "0.013124,0.010492,0.007873,0.003188,-0.005217,-0.021178");
			}
			rise_power(Power_X4) {
				values ("0.002816,0.004458,0.006402,0.010284,0.018050,0.033549", \
				        "0.002813,0.004470,0.006404,0.010293,0.018059,0.033555", \
				        "0.002852,0.004503,0.006430,0.010315,0.018073,0.033570", \
				        "0.003027,0.004640,0.006535,0.010387,0.018128,0.033612", \
				        "0.003421,0.004962,0.006834,0.010652,0.018338,0.033801", \
				        "0.004328,0.005752,0.007572,0.011314,0.018954,0.034350", \
				        "0.006402,0.007613,0.009326,0.012971,0.020504,0.035773", \
				        "0.010816,0.011696,0.013190,0.016643,0.023971,0.039047");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X4) {
				values ("0.006090,0.003902,0.001697,-0.002351,-0.010204,-0.025786", \
				        "0.006081,0.003878,0.001686,-0.002370,-0.010232,-0.025807", \
				        "0.006061,0.003868,0.001664,-0.002399,-0.010255,-0.025832", \
				        "0.006034,0.003831,0.001627,-0.002430,-0.010291,-0.025867", \
				        "0.006071,0.003869,0.001648,-0.002416,-0.010287,-0.025879", \
				        "0.006644,0.004351,0.002061,-0.002102,-0.010033,-0.025659", \
				        "0.008153,0.005727,0.003305,-0.001020,-0.009095,-0.024819", \
				        "0.011383,0.008810,0.006221,0.001629,-0.006723,-0.022618");
			}
			rise_power(Power_X4) {
				values ("0.004175,0.005777,0.007705,0.011572,0.019327,0.034829", \
				        "0.004167,0.005781,0.007711,0.011583,0.019324,0.034832", \
				        "0.004186,0.005793,0.007714,0.011583,0.019332,0.034835", \
				        "0.004306,0.005899,0.007794,0.011639,0.019373,0.034861", \
				        "0.004662,0.006209,0.008067,0.011869,0.019556,0.035006", \
				        "0.005454,0.006902,0.008714,0.012455,0.020079,0.035464", \
				        "0.007243,0.008491,0.010230,0.013882,0.021401,0.036679", \
				        "0.010974,0.011966,0.013530,0.017019,0.024376,0.039473");
			}
		}

		internal_power () {

			related_pin	         : "A3";
			fall_power(Power_X4) {
				values ("0.006459,0.004265,0.002062,-0.001997,-0.009843,-0.025424", \
				        "0.006452,0.004261,0.002049,-0.002001,-0.009852,-0.025427", \
				        "0.006439,0.004254,0.002043,-0.001992,-0.009846,-0.025423", \
				        "0.006443,0.004253,0.002044,-0.002010,-0.009872,-0.025450", \
				        "0.006463,0.004257,0.002052,-0.002022,-0.009902,-0.025471", \
				        "0.006697,0.004470,0.002207,-0.001922,-0.009818,-0.025425", \
				        "0.007777,0.005415,0.003015,-0.001261,-0.009298,-0.024974", \
				        "0.010894,0.008376,0.005831,0.001271,-0.007028,-0.022889");
			}
			rise_power(Power_X4) {
				values ("0.005384,0.006969,0.008867,0.012719,0.020470,0.035971", \
				        "0.005363,0.006954,0.008849,0.012709,0.020451,0.035960", \
				        "0.005352,0.006951,0.008843,0.012695,0.020441,0.035947", \
				        "0.005412,0.007015,0.008873,0.012729,0.020460,0.035953", \
				        "0.005767,0.007281,0.009153,0.012946,0.020628,0.036075", \
				        "0.006551,0.007971,0.009789,0.013520,0.021141,0.036519", \
				        "0.008326,0.009602,0.011308,0.014954,0.022472,0.037742", \
				        "0.012105,0.013102,0.014686,0.018191,0.025544,0.040638");
			}
		}

		internal_power () {

			related_pin	         : "A4";
			fall_power(Power_X4) {
				values ("0.006816,0.004639,0.002413,-0.001632,-0.009492,-0.025065", \
				        "0.006818,0.004630,0.002414,-0.001632,-0.009489,-0.025061", \
				        "0.006814,0.004625,0.002418,-0.001644,-0.009504,-0.025078", \
				        "0.006803,0.004599,0.002394,-0.001643,-0.009502,-0.025075", \
				        "0.006814,0.004610,0.002399,-0.001653,-0.009535,-0.025113", \
				        "0.006993,0.004780,0.002509,-0.001577,-0.009464,-0.025061", \
				        "0.007668,0.005327,0.003007,-0.001209,-0.009179,-0.024820", \
				        "0.010508,0.008026,0.005529,0.001059,-0.007165,-0.022971");
			}
			rise_power(Power_X4) {
				values ("0.006379,0.007941,0.009842,0.013693,0.021436,0.036948", \
				        "0.006356,0.007943,0.009821,0.013671,0.021414,0.036926", \
				        "0.006326,0.007918,0.009798,0.013652,0.021392,0.036904", \
				        "0.006380,0.007966,0.009847,0.013686,0.021417,0.036918", \
				        "0.006731,0.008250,0.010111,0.013909,0.021582,0.037039", \
				        "0.007555,0.008965,0.010761,0.014491,0.022107,0.037481", \
				        "0.009340,0.010614,0.012324,0.015972,0.023474,0.038741", \
				        "0.013324,0.014324,0.015884,0.019401,0.026739,0.041823");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFRS_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and active low set, and drive strength X1
*******************************************************************************************/

cell (SDFFRS_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		preset             	: "!SN";
		clear              	: "!RN";
		clear_preset_var1  	: L;
		clear_preset_var2  	: L;
	}

	area               	: 9.310000;

	cell_leakage_power 	: 38991.432188;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.001010;
		fall_capacitance	: 0.000953;
		rise_capacitance	: 0.001068;
		fall_capacitance_range		(0.000778, 0.001099);
		rise_capacitance_range		(0.000868, 0.001184);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.262505;
		min_pulse_width_high	: 0.176567;

		internal_power () {

			power(Hidden_Power_Clk) {
				values ("0.008410,0.008924,0.009981,0.012471,0.017894");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.001127;
		fall_capacitance	: 0.001086;
		rise_capacitance	: 0.001169;
		fall_capacitance_range		(0.000978, 0.001198);
		rise_capacitance_range		(0.001085, 0.001289);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & !SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.116428,-0.115426,-0.128708,-0.142244,-0.181578", \
				        "-0.162649,-0.155858,-0.166943,-0.189608,-0.228605", \
				        "-0.196608,-0.188213,-0.203188,-0.223288,-0.266535", \
				        "-0.251610,-0.249610,-0.254840,-0.273922,-0.314677", \
				        "-0.331878,-0.326334,-0.340597,-0.355517,-0.399141");
			}
			rise_constraint(Hold) {
				values ("-0.095492,-0.065721,-0.057907,-0.064661,-0.089760", \
				        "-0.128737,-0.089245,-0.092122,-0.098876,-0.107056", \
				        "-0.140400,-0.117161,-0.098503,-0.117854,-0.126620", \
				        "-0.147956,-0.117041,-0.118300,-0.123875,-0.149487", \
				        "-0.148999,-0.116801,-0.113950,-0.122520,-0.132375");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.116304,-0.115311,-0.128600,-0.142145,-0.187886", \
				        "-0.162522,-0.155741,-0.166832,-0.189506,-0.228514", \
				        "-0.196481,-0.188094,-0.203074,-0.223184,-0.266442", \
				        "-0.251481,-0.249489,-0.254724,-0.273815,-0.314581", \
				        "-0.331748,-0.326210,-0.340478,-0.355406,-0.399040");
			}
			rise_constraint(Hold) {
				values ("-0.095493,-0.065720,-0.057906,-0.064659,-0.089757", \
				        "-0.128738,-0.089245,-0.092121,-0.098875,-0.107054", \
				        "-0.140401,-0.117161,-0.098503,-0.117852,-0.126617", \
				        "-0.147957,-0.117041,-0.118300,-0.123874,-0.149485", \
				        "-0.149000,-0.116801,-0.113950,-0.122519,-0.132373");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & !SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.182429,0.173354,0.174294,0.200033,0.242340", \
				        "0.226180,0.219146,0.222163,0.242629,0.285855", \
				        "0.262670,0.249864,0.253086,0.271918,0.320603", \
				        "0.310737,0.300768,0.308050,0.325399,0.376694", \
				        "0.402548,0.390238,0.397333,0.419885,0.459693");
			}
			rise_constraint(Setup) {
				values ("0.319910,0.299092,0.272415,0.269410,0.266687", \
				        "0.338933,0.323293,0.302186,0.297611,0.290921", \
				        "0.360702,0.324870,0.320926,0.311924,0.305600", \
				        "0.363254,0.344900,0.334653,0.324802,0.319057", \
				        "0.371946,0.344384,0.325853,0.315873,0.317306");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.182430,0.173355,0.174295,0.200034,0.242341", \
				        "0.220431,0.219148,0.222165,0.242631,0.285857", \
				        "0.262673,0.249867,0.253089,0.271921,0.320605", \
				        "0.310742,0.300772,0.308054,0.325403,0.376697", \
				        "0.402555,0.390244,0.397339,0.415291,0.459698");
			}
			rise_constraint(Setup) {
				values ("0.319910,0.299092,0.272415,0.269410,0.266687", \
				        "0.338933,0.323293,0.302186,0.297611,0.290921", \
				        "0.360702,0.324870,0.320926,0.311924,0.305600", \
				        "0.363254,0.344899,0.334653,0.324802,0.319057", \
				        "0.371946,0.344384,0.325853,0.315873,0.317306");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000069,0.000049,0.000036,0.000027,0.000019,0.000015,0.000010,0.000006");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.001914;
		fall_capacitance	: 0.001893;
		rise_capacitance	: 0.001936;
		fall_capacitance_range		(0.001869, 0.001901);
		rise_capacitance_range		(0.001854, 0.001958);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.190632;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.089404,-0.108564,-0.114824,-0.126442,-0.124967", \
				        "-0.068296,-0.092528,-0.098794,-0.106205,-0.109382", \
				        "-0.065862,-0.086097,-0.092746,-0.101754,-0.100035", \
				        "-0.062326,-0.085557,-0.094536,-0.098630,-0.099827", \
				        "-0.074122,-0.095348,-0.104307,-0.111377,-0.110946");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.093491,0.115173,0.123440,0.130603,0.131410", \
				        "0.076513,0.097619,0.106489,0.113555,0.114081", \
				        "0.072215,0.093410,0.101811,0.109121,0.109682", \
				        "0.073394,0.094902,0.103511,0.110850,0.110565", \
				        "0.092609,0.113492,0.122367,0.129297,0.128697");
			}
		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002212,0.002283,0.002665,0.003693,0.006110");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002212,0.002283,0.002665,0.003693,0.006110");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002212,0.002283,0.002665,0.003693,0.006110");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002212,0.002283,0.002665,0.003693,0.006110");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001127;
		fall_capacitance	: 0.001067;
		rise_capacitance	: 0.001188;
		fall_capacitance_range		(0.000948, 0.001128);
		rise_capacitance_range		(0.001110, 0.001251);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.094237,-0.089775,-0.099399,-0.123875,-0.168683", \
				        "-0.138257,-0.141868,-0.151127,-0.170136,-0.215158", \
				        "-0.176521,-0.173049,-0.177764,-0.202643,-0.238572", \
				        "-0.228004,-0.223410,-0.225897,-0.250929,-0.291917", \
				        "-0.311405,-0.304132,-0.316568,-0.327831,-0.372859");
			}
			rise_constraint(Hold) {
				values ("-0.073180,-0.065722,-0.057910,-0.046282,-0.064057", \
				        "-0.104226,-0.089245,-0.076304,-0.079397,-0.107064", \
				        "-0.113545,-0.086840,-0.098505,-0.097202,-0.098644", \
				        "-0.116412,-0.099536,-0.098965,-0.100878,-0.119166", \
				        "-0.108077,-0.072412,-0.089925,-0.080988,-0.097364");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.140113,-0.117277,-0.116790,-0.119813,-0.141181", \
				        "-0.202263,-0.173175,-0.171222,-0.176810,-0.187486", \
				        "-0.247814,-0.238447,-0.234442,-0.221133,-0.238550", \
				        "-0.321440,-0.292095,-0.292334,-0.284879,-0.316289", \
				        "-0.435449,-0.427528,-0.402268,-0.413265,-0.430020");
			}
			rise_constraint(Hold) {
				values ("-0.116427,-0.115425,-0.121410,-0.142243,-0.181576", \
				        "-0.138391,-0.141995,-0.151247,-0.170249,-0.215261", \
				        "-0.143404,-0.143107,-0.152586,-0.171962,-0.210819", \
				        "-0.134267,-0.136642,-0.139571,-0.159546,-0.208969", \
				        "-0.098025,-0.094609,-0.101589,-0.121219,-0.163622");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.160300,0.149492,0.161446,0.178014,0.223997", \
				        "0.208921,0.194403,0.202231,0.227508,0.267071", \
				        "0.244706,0.230600,0.239325,0.256326,0.301348", \
				        "0.297817,0.286981,0.293349,0.317128,0.356499", \
				        "0.387747,0.374571,0.380751,0.401472,0.437619");
			}
			rise_constraint(Setup) {
				values ("0.298212,0.275660,0.272419,0.254947,0.248560", \
				        "0.338939,0.311141,0.302191,0.297615,0.281640", \
				        "0.348950,0.324877,0.320932,0.311930,0.296085", \
				        "0.363264,0.344908,0.334661,0.324809,0.319063", \
				        "0.371959,0.344396,0.325864,0.315883,0.317315");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.363316,0.345966,0.335587,0.327275,0.321076", \
				        "0.429260,0.408399,0.393703,0.387045,0.374483", \
				        "0.478298,0.451137,0.442809,0.434919,0.429346", \
				        "0.541014,0.521234,0.508414,0.504232,0.498835", \
				        "0.663388,0.637728,0.620244,0.606863,0.612287");
			}
			rise_constraint(Setup) {
				values ("0.182430,0.173355,0.180718,0.200034,0.246926", \
				        "0.208929,0.194410,0.202238,0.227515,0.267077", \
				        "0.208805,0.204935,0.204951,0.225165,0.272483", \
				        "0.201023,0.190571,0.197871,0.218005,0.265672", \
				        "0.158634,0.147667,0.157131,0.171520,0.217022");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.004438,0.004457,0.004547,0.004728,0.005066,0.005715,0.006876,0.009223");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.001044;
		fall_capacitance	: 0.001006;
		rise_capacitance	: 0.001082;
		fall_capacitance_range		(0.000951, 0.001030);
		rise_capacitance_range		(0.001062, 0.001092);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.116422,-0.115420,-0.128702,-0.151367,-0.194364", \
				        "-0.162643,-0.155852,-0.166937,-0.189602,-0.228598", \
				        "-0.189952,-0.188207,-0.194748,-0.223282,-0.266528", \
				        "-0.251604,-0.249605,-0.254834,-0.273916,-0.314671", \
				        "-0.331872,-0.326328,-0.340592,-0.355511,-0.390412");
			}
			rise_constraint(Hold) {
				values ("-0.095492,-0.065721,-0.057907,-0.064661,-0.089760", \
				        "-0.128737,-0.089245,-0.092122,-0.098876,-0.107056", \
				        "-0.140400,-0.117161,-0.115496,-0.117854,-0.126620", \
				        "-0.147956,-0.117041,-0.118300,-0.123875,-0.149487", \
				        "-0.148999,-0.116801,-0.113950,-0.122520,-0.132375");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.116423,-0.115421,-0.128703,-0.151368,-0.194364", \
				        "-0.162644,-0.155853,-0.166937,-0.189602,-0.228598", \
				        "-0.189953,-0.188208,-0.194749,-0.223283,-0.266529", \
				        "-0.251605,-0.249605,-0.254835,-0.273917,-0.314671", \
				        "-0.331873,-0.326329,-0.340592,-0.355512,-0.390412");
			}
			rise_constraint(Hold) {
				values ("-0.078752,-0.076019,-0.072877,-0.069959,-0.078186", \
				        "-0.111745,-0.101489,-0.093218,-0.104896,-0.121914", \
				        "-0.123409,-0.116464,-0.117512,-0.104263,-0.128470", \
				        "-0.146735,-0.118689,-0.122535,-0.121470,-0.137031", \
				        "-0.152720,-0.123138,-0.122749,-0.122145,-0.136986");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.182429,0.173354,0.180717,0.200033,0.242340", \
				        "0.226180,0.219146,0.222163,0.242629,0.285855", \
				        "0.262670,0.243445,0.253086,0.271918,0.320603", \
				        "0.310737,0.300768,0.308050,0.325400,0.366601", \
				        "0.402549,0.390238,0.397333,0.410686,0.459693");
			}
			rise_constraint(Setup) {
				values ("0.309061,0.287376,0.272417,0.269412,0.266688", \
				        "0.338935,0.323296,0.302188,0.297613,0.290923", \
				        "0.360705,0.324873,0.320928,0.311927,0.305602", \
				        "0.375955,0.344903,0.334657,0.324805,0.319059", \
				        "0.371951,0.344389,0.342213,0.315878,0.317310");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.182376,0.173308,0.187093,0.199990,0.251468", \
				        "0.226095,0.219069,0.222091,0.242562,0.285794", \
				        "0.262556,0.243344,0.252990,0.271829,0.320523", \
				        "0.310578,0.300621,0.307911,0.325272,0.366490", \
				        "0.402315,0.390020,0.397126,0.410497,0.459529");
			}
			rise_constraint(Setup) {
				values ("0.319913,0.287376,0.272417,0.269412,0.266688", \
				        "0.338936,0.323296,0.302188,0.297613,0.290923", \
				        "0.360705,0.337500,0.320929,0.311927,0.305602", \
				        "0.375956,0.344904,0.334657,0.324805,0.319059", \
				        "0.371952,0.344390,0.342213,0.324971,0.317310");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000050,0.000035,0.000021,0.000012,0.000008,0.000002,0.000000,-0.000005");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.002156;
		fall_capacitance	: 0.002100;
		rise_capacitance	: 0.002212;
		fall_capacitance_range		(0.001978, 0.002148);
		rise_capacitance_range		(0.002122, 0.002237);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.170674;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.056096,-0.078367,-0.083012,-0.081312,-0.078085", \
				        "-0.061277,-0.079732,-0.099759,-0.089999,-0.094368", \
				        "-0.067268,-0.081796,-0.097775,-0.100118,-0.089540", \
				        "-0.061665,-0.047171,-0.076223,-0.083745,-0.065816", \
				        "0.066045,0.005396,0.037222,0.012309,-0.015536");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.117924,0.138335,0.145931,0.153088,0.155003", \
				        "0.129777,0.150135,0.157377,0.164083,0.164815", \
				        "0.147714,0.167850,0.175189,0.181229,0.181554", \
				        "0.181877,0.201421,0.208050,0.213326,0.213805", \
				        "0.242995,0.262246,0.269249,0.273901,0.274489");
			}
		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.232377,0.236345,0.243183,0.254911,0.275317,0.313620", \
				        "0.235562,0.239531,0.246374,0.257952,0.278434,0.316673", \
				        "0.240627,0.244599,0.251466,0.263066,0.283260,0.321507", \
				        "0.246244,0.250204,0.257121,0.268954,0.289240,0.326976", \
				        "0.252225,0.256197,0.263050,0.274709,0.295093,0.332989", \
				        "0.256920,0.260893,0.267810,0.279314,0.299874,0.337899", \
				        "0.257413,0.261376,0.268147,0.280308,0.300688,0.338985", \
				        "0.248215,0.252185,0.258952,0.271070,0.291563,0.329711");
			}
			cell_rise(Timing_X1) {
				values ("0.275497,0.280849,0.290713,0.309520,0.347162,0.422550", \
				        "0.278489,0.283841,0.293812,0.312890,0.350256,0.425613", \
				        "0.284053,0.289407,0.299330,0.318472,0.355813,0.430664", \
				        "0.290693,0.296043,0.305852,0.325081,0.362510,0.437432", \
				        "0.298378,0.303730,0.313614,0.332547,0.370447,0.445545", \
				        "0.306386,0.311719,0.321594,0.340533,0.378471,0.453663", \
				        "0.311930,0.317280,0.327153,0.346100,0.384021,0.459459", \
				        "0.307596,0.312944,0.322774,0.341436,0.379531,0.454865");
			}
			fall_transition(Timing_X1) {
				values ("0.010191,0.012204,0.015940,0.023213,0.037954,0.069544", \
				        "0.010191,0.012204,0.015937,0.023178,0.037951,0.069544", \
				        "0.010204,0.012197,0.015944,0.023201,0.037960,0.069698", \
				        "0.010192,0.012205,0.015912,0.023189,0.037946,0.069776", \
				        "0.010194,0.012207,0.015954,0.023206,0.037978,0.069448", \
				        "0.010209,0.012203,0.015958,0.023260,0.037951,0.069473", \
				        "0.010222,0.012199,0.015966,0.023251,0.037971,0.069491", \
				        "0.010220,0.012229,0.015977,0.023259,0.037971,0.069558");
			}
			rise_transition(Timing_X1) {
				values ("0.014379,0.018016,0.025855,0.042750,0.078323,0.149913", \
				        "0.014370,0.018044,0.025844,0.042737,0.078323,0.149904", \
				        "0.014367,0.018033,0.025855,0.042752,0.078245,0.150092", \
				        "0.014374,0.018045,0.025854,0.042743,0.078305,0.150078", \
				        "0.014374,0.018022,0.025820,0.042743,0.078268,0.150079", \
				        "0.014285,0.017954,0.025829,0.042768,0.078326,0.149917", \
				        "0.014366,0.018042,0.025854,0.042786,0.078219,0.150055", \
				        "0.014383,0.018049,0.025855,0.042792,0.078179,0.150066");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & !SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.054638,0.058834,0.066026,0.078145,0.099180,0.138020", \
				        "0.058343,0.062536,0.069728,0.081848,0.102884,0.141726", \
				        "0.066307,0.070503,0.077614,0.089730,0.110850,0.149696", \
				        "0.082678,0.086879,0.094061,0.106339,0.127381,0.166234", \
				        "0.108686,0.113398,0.121393,0.134429,0.155974,0.195077", \
				        "0.145600,0.151048,0.160375,0.174986,0.198469,0.238752", \
				        "0.203429,0.209776,0.220146,0.237357,0.263596,0.306211", \
				        "0.299293,0.306883,0.319343,0.339604,0.370467,0.418264");
			}
			cell_rise(Timing_X1) {
				values ("0.043549,0.048866,0.058826,0.077979,0.115801,0.191238", \
				        "0.046257,0.051572,0.061516,0.080693,0.118519,0.193959", \
				        "0.051068,0.056368,0.066303,0.085416,0.123175,0.198646", \
				        "0.058254,0.063671,0.073725,0.092832,0.130579,0.206003", \
				        "0.065959,0.071707,0.081971,0.101164,0.138940,0.214293", \
				        "0.069565,0.076169,0.087529,0.107639,0.145300,0.220606", \
				        "0.060614,0.068602,0.081964,0.104706,0.143940,0.220026", \
				        "0.021546,0.031121,0.047532,0.074365,0.117924,0.196668");
			}
			fall_transition(Timing_X1) {
				values ("0.010596,0.012665,0.016533,0.023902,0.038825,0.069965", \
				        "0.010600,0.012667,0.016533,0.023905,0.038826,0.069966", \
				        "0.010617,0.012684,0.016530,0.023943,0.038828,0.069963", \
				        "0.010917,0.012931,0.016765,0.024233,0.038882,0.069961", \
				        "0.013268,0.015225,0.018962,0.025955,0.039958,0.070391", \
				        "0.016717,0.018771,0.022542,0.029446,0.043084,0.071988", \
				        "0.021619,0.023870,0.027956,0.035107,0.048191,0.075443", \
				        "0.029521,0.032065,0.036581,0.044392,0.058062,0.083673");
			}
			rise_transition(Timing_X1) {
				values ("0.012763,0.016785,0.025075,0.042443,0.078168,0.149721", \
				        "0.012769,0.016788,0.025081,0.042449,0.078204,0.149727", \
				        "0.012790,0.016811,0.025105,0.042511,0.078178,0.149746", \
				        "0.013412,0.017323,0.025407,0.042616,0.078065,0.149674", \
				        "0.014841,0.018540,0.026290,0.043006,0.078191,0.149677", \
				        "0.017875,0.021545,0.028783,0.044472,0.078779,0.149935", \
				        "0.022758,0.027123,0.034635,0.049108,0.081497,0.151560", \
				        "0.029822,0.035154,0.044422,0.059787,0.089277,0.157199");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.054737,0.058939,0.066139,0.078293,0.099382,0.138254", \
				        "0.058433,0.062642,0.069884,0.081990,0.103158,0.142049", \
				        "0.066420,0.070625,0.077794,0.089936,0.111037,0.149930", \
				        "0.082747,0.086951,0.094142,0.106425,0.127454,0.166355", \
				        "0.108865,0.113580,0.121529,0.134496,0.156161,0.195211", \
				        "0.145789,0.151255,0.160690,0.175132,0.198460,0.238491", \
				        "0.203645,0.210012,0.220561,0.237666,0.263545,0.305805", \
				        "0.299416,0.306967,0.319432,0.339179,0.369636,0.415874");
			}
			fall_transition(Timing_X1) {
				values ("0.010592,0.012669,0.016546,0.024014,0.038875,0.070037", \
				        "0.010624,0.012704,0.016576,0.023972,0.038949,0.070049", \
				        "0.010637,0.012716,0.016593,0.024028,0.038946,0.070061", \
				        "0.010925,0.012942,0.016766,0.024119,0.039054,0.070064", \
				        "0.013317,0.015259,0.018873,0.025820,0.039980,0.070354", \
				        "0.016794,0.018832,0.022527,0.029365,0.042657,0.071739", \
				        "0.021704,0.023927,0.027911,0.034955,0.047871,0.074849", \
				        "0.029374,0.031840,0.036149,0.043609,0.056350,0.080609");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & !SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.054648,0.058845,0.066054,0.078185,0.099240,0.138101", \
				        "0.058358,0.062554,0.069735,0.081871,0.102939,0.141809", \
				        "0.066364,0.070551,0.077674,0.089881,0.110955,0.149829", \
				        "0.082693,0.086890,0.094095,0.106368,0.127291,0.166150", \
				        "0.108694,0.113404,0.121375,0.134324,0.156062,0.195142", \
				        "0.145584,0.151029,0.160541,0.174876,0.198367,0.238532", \
				        "0.203407,0.209752,0.220290,0.237469,0.263499,0.306131", \
				        "0.299275,0.306867,0.319334,0.339763,0.370776,0.418529");
			}
			cell_rise(Timing_X1) {
				values ("0.043377,0.048692,0.058687,0.077818,0.115581,0.191056", \
				        "0.046134,0.051445,0.061392,0.080519,0.118329,0.193805", \
				        "0.050999,0.056299,0.066238,0.085210,0.123135,0.198615", \
				        "0.058225,0.063642,0.073669,0.092745,0.130323,0.205776", \
				        "0.065847,0.071595,0.081970,0.101173,0.138839,0.214242", \
				        "0.069512,0.076124,0.087572,0.107594,0.145495,0.220714", \
				        "0.060751,0.068743,0.082280,0.104733,0.144069,0.220136", \
				        "0.021481,0.031059,0.047747,0.075057,0.119005,0.197718");
			}
			fall_transition(Timing_X1) {
				values ("0.010612,0.012674,0.016568,0.023929,0.038859,0.070127", \
				        "0.010601,0.012680,0.016538,0.023948,0.038876,0.070140", \
				        "0.010629,0.012681,0.016545,0.023966,0.038883,0.070145", \
				        "0.010915,0.012922,0.016733,0.024228,0.038902,0.070146", \
				        "0.013251,0.015205,0.018857,0.025752,0.039967,0.070411", \
				        "0.016705,0.018761,0.022494,0.029510,0.042719,0.071931", \
				        "0.021606,0.023860,0.027935,0.034989,0.048216,0.075455", \
				        "0.029523,0.032073,0.036598,0.044404,0.057985,0.083698");
			}
			rise_transition(Timing_X1) {
				values ("0.012722,0.016757,0.025056,0.042375,0.078050,0.149757", \
				        "0.012722,0.016755,0.025057,0.042378,0.078072,0.149755", \
				        "0.012777,0.016797,0.025085,0.042384,0.078050,0.149755", \
				        "0.013413,0.017323,0.025399,0.042498,0.078022,0.149747", \
				        "0.014849,0.018559,0.026292,0.042911,0.078152,0.149764", \
				        "0.017907,0.021565,0.028793,0.044486,0.078792,0.149933", \
				        "0.022761,0.027123,0.034615,0.049058,0.081457,0.151597", \
				        "0.029835,0.035169,0.044392,0.059687,0.089125,0.157133");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.054735,0.058937,0.066129,0.078273,0.099330,0.138181", \
				        "0.058407,0.062608,0.069796,0.081958,0.103015,0.141869", \
				        "0.066343,0.070539,0.077705,0.089839,0.110913,0.149775", \
				        "0.082743,0.086952,0.094137,0.106326,0.127388,0.166233", \
				        "0.108816,0.113528,0.121444,0.134407,0.156166,0.195129", \
				        "0.145907,0.151361,0.160517,0.175075,0.198425,0.238577", \
				        "0.203525,0.209884,0.220405,0.237521,0.263704,0.306330", \
				        "0.299431,0.307041,0.319631,0.339718,0.370872,0.418636");
			}
			fall_transition(Timing_X1) {
				values ("0.010600,0.012670,0.016549,0.023968,0.038891,0.070001", \
				        "0.010607,0.012687,0.016552,0.023967,0.038893,0.070004", \
				        "0.010620,0.012700,0.016566,0.023967,0.038839,0.070001", \
				        "0.010926,0.012954,0.016751,0.024109,0.038852,0.069961", \
				        "0.013286,0.015237,0.018851,0.025804,0.039976,0.070346", \
				        "0.016733,0.018783,0.022519,0.029362,0.042727,0.071868", \
				        "0.021679,0.023924,0.027951,0.035049,0.048198,0.075438", \
				        "0.029613,0.032159,0.036631,0.044423,0.057921,0.083626");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.080693,0.085939,0.095867,0.114954,0.152703,0.228123", \
				        "0.084358,0.089681,0.099549,0.118537,0.156390,0.231811", \
				        "0.092273,0.097596,0.107481,0.126529,0.164290,0.239713", \
				        "0.108068,0.113387,0.123257,0.142306,0.180036,0.255396", \
				        "0.133163,0.138433,0.148308,0.167248,0.205049,0.280260", \
				        "0.169622,0.174899,0.184783,0.203801,0.241382,0.316642", \
				        "0.226707,0.232042,0.241896,0.260939,0.298753,0.373892", \
				        "0.321339,0.326852,0.336938,0.355692,0.393670,0.468559");
			}
			rise_transition(Timing_X1) {
				values ("0.013070,0.017037,0.025255,0.042479,0.078101,0.149796", \
				        "0.013035,0.017058,0.025254,0.042470,0.078099,0.149796", \
				        "0.013037,0.017059,0.025255,0.042471,0.078105,0.149798", \
				        "0.013060,0.017073,0.025268,0.042477,0.078146,0.149747", \
				        "0.013269,0.017189,0.025347,0.042524,0.078117,0.149778", \
				        "0.013652,0.017492,0.025523,0.042633,0.078147,0.149682", \
				        "0.014327,0.017974,0.025827,0.042807,0.078190,0.149726", \
				        "0.015614,0.019046,0.026450,0.043060,0.078340,0.149943");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.080676,0.085953,0.095883,0.114973,0.152676,0.228082", \
				        "0.084355,0.089685,0.099569,0.118586,0.156284,0.231693", \
				        "0.092274,0.097598,0.107484,0.126534,0.164238,0.239646", \
				        "0.108091,0.113415,0.123299,0.142352,0.180032,0.255429", \
				        "0.133139,0.138423,0.148315,0.167262,0.205008,0.280353", \
				        "0.169767,0.175062,0.184969,0.203795,0.241360,0.316646", \
				        "0.226960,0.232312,0.242141,0.261329,0.298830,0.373984", \
				        "0.319626,0.325120,0.335210,0.354466,0.391690,0.466719");
			}
			rise_transition(Timing_X1) {
				values ("0.013077,0.017044,0.025259,0.042484,0.078023,0.149660", \
				        "0.013054,0.017063,0.025256,0.042461,0.078023,0.149657", \
				        "0.013046,0.017066,0.025260,0.042477,0.078023,0.149659", \
				        "0.013070,0.017079,0.025273,0.042483,0.078073,0.149658", \
				        "0.013333,0.017219,0.025355,0.042532,0.078030,0.149659", \
				        "0.013676,0.017514,0.025540,0.042646,0.078080,0.149670", \
				        "0.014429,0.018062,0.025873,0.042795,0.078194,0.149724", \
				        "0.015440,0.018897,0.026363,0.043036,0.078292,0.149749");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.006468,0.006464,0.006457,0.006461,0.006463,0.006466", \
				        "0.006459,0.006454,0.006449,0.006451,0.006459,0.006460", \
				        "0.006479,0.006474,0.006474,0.006477,0.006477,0.006478", \
				        "0.006566,0.006561,0.006560,0.006569,0.006574,0.006577", \
				        "0.006851,0.006847,0.006843,0.006847,0.006857,0.006864", \
				        "0.007587,0.007582,0.007577,0.007580,0.007588,0.007594", \
				        "0.009248,0.009243,0.009238,0.009246,0.009251,0.009253", \
				        "0.012788,0.012783,0.012778,0.012781,0.012789,0.012786");
			}
			rise_power(Power_X1) {
				values ("0.005319,0.005307,0.005294,0.005283,0.005274,0.005270", \
				        "0.005312,0.005301,0.005288,0.005280,0.005273,0.005268", \
				        "0.005331,0.005320,0.005306,0.005302,0.005294,0.005295", \
				        "0.005409,0.005397,0.005383,0.005381,0.005375,0.005375", \
				        "0.005694,0.005683,0.005665,0.005658,0.005663,0.005665", \
				        "0.006420,0.006406,0.006392,0.006384,0.006385,0.006386", \
				        "0.008062,0.008050,0.008035,0.008028,0.008032,0.008035", \
				        "0.011535,0.011524,0.011509,0.011498,0.011507,0.011507");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & !SN";

			fall_power(Power_X1) {
				values ("0.007489,0.007248,0.006744,0.005783,0.003852,0.000001", \
				        "0.007484,0.007243,0.006738,0.005778,0.003846,-0.000003", \
				        "0.007502,0.007259,0.006745,0.005787,0.003856,0.000006", \
				        "0.007583,0.007337,0.006825,0.005873,0.003933,0.000083", \
				        "0.007835,0.007578,0.007068,0.006101,0.004157,0.000302", \
				        "0.008500,0.008230,0.007711,0.006749,0.004787,0.000920", \
				        "0.010283,0.009994,0.009436,0.008449,0.006489,0.002605", \
				        "0.014416,0.014102,0.013512,0.012479,0.010456,0.006536");
			}
			rise_power(Power_X1) {
				values ("0.004653,0.004898,0.005363,0.006334,0.008290,0.012182", \
				        "0.004633,0.004877,0.005345,0.006316,0.008267,0.012160", \
				        "0.004621,0.004865,0.005326,0.006293,0.008251,0.012143", \
				        "0.004633,0.004874,0.005340,0.006309,0.008248,0.012140", \
				        "0.004751,0.004988,0.005428,0.006394,0.008352,0.012241", \
				        "0.005186,0.005418,0.005882,0.006836,0.008764,0.012644", \
				        "0.006632,0.006855,0.007298,0.008258,0.010173,0.014034", \
				        "0.010365,0.010570,0.011016,0.011919,0.013818,0.017648");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & SN";

			fall_power(Power_X1) {
				values ("0.006228,0.006223,0.006217,0.006210,0.006208,0.006212", \
				        "0.006230,0.006226,0.006222,0.006209,0.006213,0.006217", \
				        "0.006250,0.006245,0.006235,0.006228,0.006224,0.006228", \
				        "0.006314,0.006308,0.006299,0.006302,0.006289,0.006292", \
				        "0.006538,0.006528,0.006515,0.006503,0.006499,0.006501", \
				        "0.007117,0.007098,0.007088,0.007061,0.007053,0.007054", \
				        "0.008572,0.008544,0.008507,0.008492,0.008464,0.008453", \
				        "0.011694,0.011654,0.011598,0.011541,0.011510,0.011480");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & !SN";

			fall_power(Power_X1) {
				values ("0.005313,0.005070,0.004583,0.003610,0.001671,-0.002193", \
				        "0.005305,0.005062,0.004561,0.003605,0.001666,-0.002198", \
				        "0.005356,0.005111,0.004598,0.003657,0.001719,-0.002145", \
				        "0.005512,0.005264,0.004760,0.003812,0.001855,-0.002008", \
				        "0.005996,0.005739,0.005225,0.004237,0.002318,-0.001549", \
				        "0.007100,0.006829,0.006348,0.005314,0.003354,-0.000521", \
				        "0.009605,0.009315,0.008781,0.007763,0.005787,0.001895", \
				        "0.014936,0.014623,0.014046,0.013008,0.010970,0.007046");
			}
			rise_power(Power_X1) {
				values ("0.003355,0.003599,0.004086,0.005060,0.007015,0.010892", \
				        "0.003339,0.003582,0.004068,0.005041,0.006992,0.010870", \
				        "0.003318,0.003560,0.004048,0.005020,0.006966,0.010844", \
				        "0.003324,0.003563,0.004045,0.005014,0.006959,0.010836", \
				        "0.003478,0.003714,0.004192,0.005148,0.007081,0.010956", \
				        "0.004136,0.004366,0.004849,0.005798,0.007724,0.011589", \
				        "0.006191,0.006413,0.006872,0.007823,0.009734,0.013582", \
				        "0.011122,0.011326,0.011758,0.012678,0.014559,0.018376");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & SN";

			fall_power(Power_X1) {
				values ("0.007513,0.007510,0.007505,0.007512,0.007513,0.007517", \
				        "0.007509,0.007506,0.007501,0.007509,0.007510,0.007515", \
				        "0.007525,0.007522,0.007516,0.007524,0.007524,0.007529", \
				        "0.007605,0.007601,0.007593,0.007595,0.007598,0.007603", \
				        "0.007832,0.007823,0.007817,0.007817,0.007807,0.007822", \
				        "0.008368,0.008353,0.008338,0.008337,0.008334,0.008335", \
				        "0.009536,0.009512,0.009477,0.009487,0.009459,0.009449", \
				        "0.011899,0.011862,0.011807,0.011774,0.011745,0.011712");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X1) {
				values ("0.007647,0.007646,0.007649,0.007664,0.007673,0.007686", \
				        "0.007640,0.007640,0.007643,0.007657,0.007666,0.007680", \
				        "0.007652,0.007652,0.007655,0.007667,0.007680,0.007695", \
				        "0.007731,0.007732,0.007734,0.007749,0.007757,0.007774", \
				        "0.007983,0.007982,0.007982,0.007987,0.007994,0.008010", \
				        "0.008662,0.008651,0.008642,0.008634,0.008631,0.008640", \
				        "0.010218,0.010199,0.010179,0.010168,0.010155,0.010154", \
				        "0.013274,0.013249,0.013233,0.013203,0.013177,0.013152");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.242618,0.247864,0.257295,0.273404,0.300336,0.345084", \
				        "0.245618,0.250858,0.260403,0.276795,0.303434,0.348149", \
				        "0.251181,0.256420,0.265912,0.282358,0.309006,0.353253", \
				        "0.257815,0.263058,0.272439,0.288976,0.315721,0.359999", \
				        "0.265498,0.270743,0.280222,0.296475,0.323646,0.368126", \
				        "0.273530,0.278774,0.288215,0.304524,0.331871,0.376429", \
				        "0.279050,0.284287,0.293735,0.309877,0.337014,0.381901", \
				        "0.274706,0.279949,0.289355,0.305214,0.332543,0.377328");
			}
			cell_rise(Timing_X1) {
				values ("0.210936,0.216594,0.227151,0.246866,0.284722,0.360066", \
				        "0.214098,0.219779,0.230341,0.249914,0.287838,0.363119", \
				        "0.219182,0.224854,0.235431,0.255024,0.292680,0.368048", \
				        "0.224799,0.230450,0.241092,0.260914,0.298651,0.373477", \
				        "0.230777,0.236442,0.247012,0.266669,0.304504,0.379431", \
				        "0.235438,0.241131,0.251770,0.271259,0.309263,0.384318", \
				        "0.235931,0.241610,0.252109,0.272257,0.310075,0.385411", \
				        "0.226712,0.232410,0.242914,0.263032,0.300947,0.376142");
			}
			fall_transition(Timing_X1) {
				values ("0.021780,0.024362,0.029098,0.037570,0.052647,0.081441", \
				        "0.021778,0.024356,0.029091,0.037568,0.052636,0.081455", \
				        "0.021774,0.024359,0.029098,0.037576,0.052608,0.081488", \
				        "0.021779,0.024356,0.029095,0.037574,0.052644,0.081618", \
				        "0.021781,0.024363,0.029081,0.037550,0.052624,0.081493", \
				        "0.021781,0.024364,0.029094,0.037578,0.052659,0.081710", \
				        "0.021781,0.024365,0.029107,0.037644,0.052762,0.081613", \
				        "0.021781,0.024368,0.029116,0.037654,0.052757,0.081547");
			}
			rise_transition(Timing_X1) {
				values ("0.022539,0.026321,0.033988,0.050264,0.084858,0.156357", \
				        "0.022529,0.026326,0.034000,0.050238,0.084847,0.156357", \
				        "0.022528,0.026315,0.034006,0.050254,0.084902,0.156154", \
				        "0.022552,0.026332,0.033978,0.050241,0.084909,0.156149", \
				        "0.022563,0.026343,0.034019,0.050260,0.084946,0.156315", \
				        "0.022576,0.026369,0.034030,0.050301,0.084903,0.156337", \
				        "0.022642,0.026419,0.034074,0.050330,0.084968,0.156175", \
				        "0.022771,0.026535,0.034154,0.050341,0.084972,0.156197");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.266908,0.272677,0.283399,0.302891,0.340586,0.415753", \
				        "0.270672,0.276473,0.287123,0.306842,0.344283,0.419451", \
				        "0.276976,0.282800,0.293400,0.312797,0.350487,0.425642", \
				        "0.286731,0.292554,0.303224,0.323192,0.360462,0.435627", \
				        "0.303030,0.308800,0.319553,0.339220,0.377122,0.451658", \
				        "0.334210,0.340026,0.351183,0.370469,0.408216,0.483427", \
				        "0.390290,0.396235,0.406964,0.427331,0.465011,0.539931", \
				        "0.487284,0.493373,0.504240,0.523942,0.562981,0.637864");
			}
			rise_transition(Timing_X1) {
				values ("0.023703,0.027093,0.034375,0.050320,0.084646,0.156257", \
				        "0.023686,0.027086,0.034374,0.050350,0.084644,0.156250", \
				        "0.023693,0.027109,0.034385,0.050342,0.084634,0.156316", \
				        "0.023691,0.027107,0.034380,0.050348,0.084646,0.156269", \
				        "0.023693,0.027092,0.034373,0.050324,0.084660,0.156236", \
				        "0.023690,0.027169,0.034459,0.050241,0.084621,0.156394", \
				        "0.024391,0.027776,0.034881,0.050578,0.084754,0.156165", \
				        "0.025258,0.028554,0.035492,0.050934,0.084834,0.156319");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.382831,0.388431,0.398861,0.418980,0.456814,0.532135", \
				        "0.386635,0.392107,0.402466,0.422724,0.460499,0.535819", \
				        "0.394302,0.399787,0.410202,0.430357,0.468276,0.543441", \
				        "0.409987,0.415444,0.425790,0.445915,0.483626,0.558972", \
				        "0.434121,0.439657,0.450560,0.470627,0.507952,0.583589", \
				        "0.467194,0.472760,0.483388,0.503877,0.541782,0.616902", \
				        "0.512911,0.518503,0.528755,0.550329,0.587865,0.663128", \
				        "0.579891,0.585471,0.595728,0.615899,0.655168,0.730407");
			}
			rise_transition(Timing_X1) {
				values ("0.022172,0.025825,0.033531,0.049937,0.084854,0.156067", \
				        "0.022175,0.025831,0.033515,0.049938,0.084852,0.156059", \
				        "0.022175,0.025825,0.033534,0.049961,0.084857,0.156325", \
				        "0.022176,0.025845,0.033531,0.049970,0.084782,0.156089", \
				        "0.022161,0.025832,0.033533,0.049935,0.084765,0.156255", \
				        "0.022180,0.025847,0.033532,0.049974,0.084841,0.156224", \
				        "0.022177,0.025837,0.033532,0.049972,0.084724,0.156193", \
				        "0.022168,0.025836,0.033524,0.049980,0.084762,0.156216");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & !RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.052909,0.056238,0.062429,0.073556,0.093737,0.132046", \
				        "0.056589,0.059933,0.066136,0.077266,0.097451,0.135764", \
				        "0.064574,0.067922,0.074094,0.085209,0.105398,0.143704", \
				        "0.079978,0.083637,0.089942,0.101131,0.121354,0.159677", \
				        "0.103679,0.107836,0.114770,0.126752,0.147569,0.186101", \
				        "0.138322,0.142712,0.150941,0.164003,0.186557,0.226075", \
				        "0.191885,0.197248,0.206906,0.222710,0.247469,0.289027", \
				        "0.282892,0.289325,0.300155,0.319323,0.349030,0.395571");
			}
			cell_rise(Timing_X1) {
				values ("0.068058,0.073369,0.083491,0.102787,0.140825,0.216281", \
				        "0.069521,0.074832,0.084885,0.104223,0.142173,0.217563", \
				        "0.071367,0.076683,0.086719,0.105890,0.143671,0.219059", \
				        "0.073576,0.078980,0.089167,0.108387,0.145989,0.221406", \
				        "0.076367,0.081840,0.092275,0.111661,0.149429,0.224889", \
				        "0.078075,0.083866,0.094742,0.114696,0.152942,0.228461", \
				        "0.070395,0.076954,0.088930,0.110532,0.150774,0.228198", \
				        "0.034506,0.042417,0.056921,0.081904,0.125504,0.207254");
			}
			fall_transition(Timing_X1) {
				values ("0.012364,0.014353,0.018068,0.025436,0.040450,0.072143", \
				        "0.012384,0.014357,0.018069,0.025417,0.040447,0.072150", \
				        "0.012414,0.014371,0.018038,0.025403,0.040493,0.072149", \
				        "0.012975,0.014752,0.018406,0.025639,0.040563,0.072172", \
				        "0.015179,0.017014,0.020509,0.027594,0.041669,0.072417", \
				        "0.018407,0.020414,0.023945,0.030775,0.044478,0.073759", \
				        "0.023636,0.025519,0.029065,0.036281,0.049240,0.076812", \
				        "0.031358,0.033709,0.038046,0.045316,0.058981,0.084844");
			}
			rise_transition(Timing_X1) {
				values ("0.020214,0.024183,0.032273,0.049307,0.084707,0.156022", \
				        "0.020213,0.024183,0.032259,0.049264,0.084651,0.156086", \
				        "0.020212,0.024189,0.032318,0.049291,0.084657,0.156086", \
				        "0.020468,0.024399,0.032477,0.049377,0.084743,0.156070", \
				        "0.021016,0.024934,0.032911,0.049628,0.084828,0.156105", \
				        "0.022910,0.026745,0.034633,0.051022,0.085601,0.156411", \
				        "0.027271,0.031041,0.038870,0.055035,0.089475,0.159378", \
				        "0.034648,0.039178,0.047335,0.063245,0.096898,0.168230");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.053181,0.056778,0.063069,0.074328,0.094701,0.133109", \
				        "0.056980,0.060460,0.066756,0.078017,0.098394,0.136804", \
				        "0.064918,0.068389,0.074701,0.085953,0.106323,0.144737", \
				        "0.080595,0.084186,0.090574,0.101901,0.122289,0.160681", \
				        "0.105006,0.108796,0.115708,0.127742,0.148744,0.187320", \
				        "0.139724,0.144131,0.152076,0.165570,0.187968,0.227332", \
				        "0.194367,0.199542,0.208787,0.224267,0.249204,0.290162", \
				        "0.285094,0.291493,0.302878,0.320893,0.349657,0.393409");
			}
			fall_transition(Timing_X1) {
				values ("0.012781,0.014556,0.018310,0.025714,0.040683,0.072362", \
				        "0.012715,0.014590,0.018308,0.025664,0.040683,0.072361", \
				        "0.012723,0.014599,0.018323,0.025698,0.040681,0.072364", \
				        "0.013227,0.015023,0.018635,0.025887,0.040759,0.072227", \
				        "0.015480,0.017295,0.020774,0.027586,0.041768,0.072612", \
				        "0.018848,0.020824,0.024303,0.030994,0.044254,0.073609", \
				        "0.023951,0.025933,0.029565,0.036214,0.048749,0.075736", \
				        "0.031488,0.033666,0.037615,0.044566,0.056361,0.080803");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & !RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.053030,0.056354,0.062552,0.073687,0.093926,0.132279", \
				        "0.056742,0.060066,0.066236,0.077378,0.097618,0.135978", \
				        "0.064652,0.067954,0.074164,0.085287,0.105523,0.143889", \
				        "0.080269,0.083788,0.090035,0.101293,0.121527,0.159891", \
				        "0.103985,0.108117,0.114857,0.126859,0.148042,0.186610", \
				        "0.139043,0.143394,0.150802,0.164405,0.186543,0.225960", \
				        "0.192213,0.197573,0.207748,0.222839,0.247552,0.288552", \
				        "0.282071,0.288209,0.298950,0.316771,0.343842,0.386683");
			}
			cell_rise(Timing_X1) {
				values ("0.348696,0.354270,0.364737,0.384350,0.422417,0.497546", \
				        "0.350729,0.356289,0.366951,0.386574,0.424686,0.499789", \
				        "0.354945,0.360534,0.371035,0.390626,0.428601,0.503756", \
				        "0.361666,0.367226,0.378058,0.397456,0.435308,0.510521", \
				        "0.374358,0.379920,0.390335,0.409877,0.447460,0.522716", \
				        "0.395792,0.401346,0.412311,0.431661,0.469726,0.544957", \
				        "0.430531,0.436136,0.446897,0.466729,0.504862,0.580137", \
				        "0.480905,0.486614,0.497436,0.517542,0.555893,0.631528");
			}
			fall_transition(Timing_X1) {
				values ("0.012385,0.014325,0.018046,0.025419,0.040533,0.072097", \
				        "0.012389,0.014328,0.018052,0.025421,0.040557,0.072108", \
				        "0.012405,0.014345,0.018062,0.025433,0.040562,0.072114", \
				        "0.012869,0.014731,0.018422,0.025720,0.040590,0.072092", \
				        "0.015139,0.016995,0.020557,0.027555,0.041792,0.072376", \
				        "0.018354,0.020366,0.023893,0.030729,0.044140,0.073554", \
				        "0.023690,0.025552,0.029247,0.036011,0.048694,0.075856", \
				        "0.029708,0.031792,0.035771,0.042322,0.054159,0.078439");
			}
			rise_transition(Timing_X1) {
				values ("0.022095,0.025735,0.033412,0.049956,0.084513,0.156064", \
				        "0.022103,0.025748,0.033422,0.049956,0.084501,0.156059", \
				        "0.022084,0.025738,0.033428,0.049947,0.084607,0.156013", \
				        "0.022102,0.025749,0.033400,0.049928,0.084815,0.156123", \
				        "0.022111,0.025756,0.033400,0.049902,0.084803,0.156097", \
				        "0.022094,0.025745,0.033404,0.049926,0.084756,0.156115", \
				        "0.022240,0.025888,0.033557,0.050049,0.084780,0.156101", \
				        "0.022822,0.026514,0.034224,0.050721,0.085393,0.156766");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.053344,0.056759,0.063067,0.074404,0.094944,0.133489", \
				        "0.057043,0.060456,0.066751,0.078043,0.098566,0.137112", \
				        "0.064853,0.068353,0.074686,0.086023,0.106540,0.145092", \
				        "0.080608,0.084191,0.090601,0.102004,0.122560,0.161120", \
				        "0.104473,0.108619,0.115690,0.127831,0.149036,0.187775", \
				        "0.139790,0.144210,0.152228,0.165695,0.188423,0.228072", \
				        "0.194295,0.199548,0.208933,0.224888,0.250042,0.291354", \
				        "0.283806,0.290089,0.301294,0.319450,0.347030,0.390024");
			}
			fall_transition(Timing_X1) {
				values ("0.012576,0.014556,0.018382,0.025904,0.040972,0.072280", \
				        "0.012631,0.014575,0.018386,0.025895,0.040967,0.072281", \
				        "0.012714,0.014606,0.018400,0.025893,0.040972,0.072280", \
				        "0.013190,0.015024,0.018714,0.026083,0.041051,0.072298", \
				        "0.015502,0.017415,0.020887,0.027840,0.042126,0.072577", \
				        "0.018853,0.020879,0.024521,0.031426,0.044801,0.073826", \
				        "0.024187,0.026300,0.030141,0.036985,0.049578,0.076261", \
				        "0.030579,0.032755,0.036697,0.043409,0.054955,0.078453");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005319,0.005307,0.005294,0.005283,0.005274,0.005270", \
				        "0.005312,0.005301,0.005288,0.005280,0.005273,0.005268", \
				        "0.005331,0.005320,0.005306,0.005302,0.005294,0.005295", \
				        "0.005409,0.005397,0.005383,0.005381,0.005375,0.005375", \
				        "0.005694,0.005683,0.005665,0.005658,0.005663,0.005665", \
				        "0.006420,0.006406,0.006392,0.006384,0.006385,0.006386", \
				        "0.008062,0.008050,0.008035,0.008028,0.008032,0.008035", \
				        "0.011535,0.011524,0.011509,0.011498,0.011507,0.011507");
			}
			rise_power(Power_X1) {
				values ("0.006468,0.006464,0.006457,0.006461,0.006463,0.006466", \
				        "0.006459,0.006454,0.006449,0.006451,0.006459,0.006460", \
				        "0.006479,0.006474,0.006474,0.006477,0.006477,0.006478", \
				        "0.006566,0.006561,0.006560,0.006569,0.006574,0.006577", \
				        "0.006851,0.006847,0.006843,0.006847,0.006857,0.006864", \
				        "0.007587,0.007582,0.007577,0.007580,0.007588,0.007594", \
				        "0.009248,0.009243,0.009238,0.009246,0.009251,0.009253", \
				        "0.012788,0.012783,0.012778,0.012781,0.012789,0.012786");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X1) {
				values ("0.007513,0.007510,0.007505,0.007512,0.007513,0.007517", \
				        "0.007509,0.007506,0.007501,0.007509,0.007510,0.007515", \
				        "0.007525,0.007522,0.007516,0.007524,0.007524,0.007529", \
				        "0.007605,0.007601,0.007593,0.007595,0.007598,0.007603", \
				        "0.007832,0.007823,0.007817,0.007817,0.007807,0.007822", \
				        "0.008368,0.008353,0.008338,0.008337,0.008334,0.008335", \
				        "0.009536,0.009512,0.009477,0.009487,0.009459,0.009449", \
				        "0.011899,0.011862,0.011807,0.011774,0.011745,0.011712");
			}
			fall_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & !RN";

			fall_power(Power_X1) {
				values ("0.005017,0.004765,0.004276,0.003298,0.001368,-0.002463", \
				        "0.005012,0.004757,0.004267,0.003292,0.001362,-0.002470", \
				        "0.005051,0.004802,0.004303,0.003323,0.001397,-0.002432", \
				        "0.005210,0.004973,0.004480,0.003513,0.001581,-0.002250", \
				        "0.005708,0.005474,0.004971,0.004002,0.002057,-0.001776", \
				        "0.006882,0.006626,0.006137,0.005127,0.003191,-0.000651", \
				        "0.009428,0.009157,0.008663,0.007665,0.005706,0.001851", \
				        "0.014834,0.014549,0.013999,0.012974,0.011002,0.007103");
			}
			rise_power(Power_X1) {
				values ("0.003003,0.003250,0.003741,0.004762,0.006749,0.010620", \
				        "0.002992,0.003239,0.003726,0.004746,0.006720,0.010590", \
				        "0.002982,0.003228,0.003719,0.004728,0.006702,0.010571", \
				        "0.003010,0.003256,0.003741,0.004751,0.006717,0.010585", \
				        "0.003211,0.003454,0.003944,0.004948,0.006909,0.010777", \
				        "0.004030,0.004268,0.004756,0.005754,0.007711,0.011573", \
				        "0.006284,0.006517,0.006988,0.007983,0.009929,0.013776", \
				        "0.011390,0.011609,0.012058,0.013033,0.014955,0.018777");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & RN";

			fall_power(Power_X1) {
				values ("0.004650,0.004658,0.004659,0.004632,0.004651,0.004657", \
				        "0.004648,0.004648,0.004654,0.004630,0.004647,0.004653", \
				        "0.004664,0.004663,0.004665,0.004637,0.004662,0.004668", \
				        "0.004749,0.004749,0.004749,0.004719,0.004742,0.004753", \
				        "0.005016,0.005009,0.005003,0.004968,0.004985,0.004976", \
				        "0.005596,0.005589,0.005581,0.005528,0.005528,0.005530", \
				        "0.006824,0.006804,0.006788,0.006740,0.006728,0.006721", \
				        "0.009224,0.009194,0.009177,0.009134,0.009084,0.009067");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & !RN";

			fall_power(Power_X1) {
				values ("0.012352,0.012104,0.011605,0.010620,0.008700,0.004852", \
				        "0.012341,0.012093,0.011591,0.010613,0.008703,0.004853", \
				        "0.012365,0.012117,0.011612,0.010641,0.008732,0.004884", \
				        "0.012509,0.012267,0.011765,0.010804,0.008872,0.005023", \
				        "0.012967,0.012730,0.012212,0.011247,0.009306,0.005450", \
				        "0.014239,0.013987,0.013439,0.012470,0.010517,0.006656", \
				        "0.017220,0.016944,0.016476,0.015445,0.013512,0.009634", \
				        "0.023524,0.023240,0.022719,0.021698,0.019706,0.015800");
			}
			rise_power(Power_X1) {
				values ("0.009549,0.009792,0.010284,0.011291,0.013226,0.017108", \
				        "0.009523,0.009765,0.010253,0.011259,0.013192,0.017074", \
				        "0.009501,0.009743,0.010233,0.011233,0.013163,0.017045", \
				        "0.009487,0.009728,0.010214,0.011211,0.013152,0.017031", \
				        "0.009484,0.009725,0.010214,0.011213,0.013154,0.017032", \
				        "0.009584,0.009826,0.010316,0.011317,0.013258,0.017136", \
				        "0.010137,0.010378,0.010871,0.011864,0.013801,0.017679", \
				        "0.012187,0.012426,0.012918,0.013921,0.015846,0.019722");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & RN";

			fall_power(Power_X1) {
				values ("0.007647,0.007646,0.007649,0.007664,0.007673,0.007686", \
				        "0.007640,0.007640,0.007643,0.007657,0.007666,0.007680", \
				        "0.007652,0.007652,0.007655,0.007667,0.007680,0.007695", \
				        "0.007731,0.007732,0.007734,0.007749,0.007757,0.007774", \
				        "0.007983,0.007982,0.007982,0.007987,0.007994,0.008010", \
				        "0.008662,0.008651,0.008642,0.008634,0.008631,0.008640", \
				        "0.010218,0.010199,0.010179,0.010168,0.010155,0.010154", \
				        "0.013274,0.013249,0.013233,0.013203,0.013177,0.013152");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFRS_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and active low set, and drive strength X2
*******************************************************************************************/

cell (SDFFRS_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		preset             	: "!SN";
		clear              	: "!RN";
		clear_preset_var1  	: L;
		clear_preset_var2  	: L;
	}

	area               	: 9.310000;

	cell_leakage_power 	: 43279.516562;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.001008;
		fall_capacitance	: 0.000952;
		rise_capacitance	: 0.001064;
		fall_capacitance_range		(0.000775, 0.001096);
		rise_capacitance_range		(0.000864, 0.001181);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.278130;
		min_pulse_width_high	: 0.184380;

		internal_power () {

			power(Hidden_Power_Clk) {
				values ("0.008495,0.009002,0.010058,0.012551,0.017972");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.001128;
		fall_capacitance	: 0.001086;
		rise_capacitance	: 0.001170;
		fall_capacitance_range		(0.000979, 0.001198);
		rise_capacitance_range		(0.001085, 0.001290);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & !SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.115919,-0.117277,-0.125564,-0.141589,-0.185306", \
				        "-0.163051,-0.158621,-0.171976,-0.189283,-0.232695", \
				        "-0.191470,-0.192023,-0.200834,-0.223393,-0.264106", \
				        "-0.247550,-0.246919,-0.253471,-0.274980,-0.320150", \
				        "-0.340267,-0.336865,-0.341354,-0.358638,-0.397923");
			}
			rise_constraint(Hold) {
				values ("-0.094858,-0.066038,-0.058858,-0.066405,-0.092376", \
				        "-0.127944,-0.089403,-0.092835,-0.100382,-0.109513", \
				        "-0.139608,-0.117161,-0.099137,-0.098624,-0.128918", \
				        "-0.147242,-0.117041,-0.118776,-0.125064,-0.136424", \
				        "-0.148444,-0.116801,-0.114347,-0.123510,-0.134198");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.120580,-0.115240,-0.122362,-0.145321,-0.188657", \
				        "-0.161763,-0.163050,-0.168340,-0.183467,-0.236145", \
				        "-0.196264,-0.196518,-0.205098,-0.227325,-0.260674", \
				        "-0.244586,-0.242822,-0.257834,-0.279028,-0.316257", \
				        "-0.334992,-0.330506,-0.345833,-0.362835,-0.401738");
			}
			rise_constraint(Hold) {
				values ("-0.094858,-0.066038,-0.058859,-0.066405,-0.092377", \
				        "-0.127944,-0.089403,-0.092836,-0.100383,-0.109514", \
				        "-0.139607,-0.117161,-0.099138,-0.098625,-0.128919", \
				        "-0.147242,-0.117041,-0.118776,-0.125065,-0.136424", \
				        "-0.148444,-0.116801,-0.114347,-0.109705,-0.134199");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & !SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.181081,0.172165,0.179568,0.198923,0.241270", \
				        "0.229712,0.217165,0.226904,0.240886,0.284270", \
				        "0.259738,0.253588,0.257427,0.277373,0.318542", \
				        "0.319445,0.310659,0.311750,0.330332,0.373801", \
				        "0.411229,0.400182,0.400226,0.414971,0.460949");
			}
			rise_constraint(Setup) {
				values ("0.320589,0.299681,0.285570,0.269840,0.267026", \
				        "0.351106,0.324062,0.315961,0.298199,0.300681", \
				        "0.361742,0.338424,0.321763,0.312648,0.315707", \
				        "0.377263,0.346076,0.335739,0.325752,0.319826", \
				        "0.373642,0.345945,0.343678,0.335372,0.329317");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & SI & SN";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.181081,0.172165,0.179567,0.198923,0.241270", \
				        "0.229711,0.217164,0.220300,0.240885,0.284270", \
				        "0.259736,0.253587,0.257426,0.277372,0.318542", \
				        "0.319443,0.310658,0.311749,0.330331,0.373800", \
				        "0.403875,0.392394,0.400224,0.414969,0.460947");
			}
			rise_constraint(Setup) {
				values ("0.320570,0.299664,0.285555,0.269828,0.267017", \
				        "0.351081,0.324041,0.315941,0.298183,0.300667", \
				        "0.361712,0.338398,0.321739,0.312628,0.315690", \
				        "0.377226,0.346042,0.335708,0.325725,0.319804", \
				        "0.373594,0.345901,0.343636,0.335335,0.329286");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000068,0.000049,0.000036,0.000026,0.000019,0.000014,0.000010,0.000005");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.001917;
		fall_capacitance	: 0.001895;
		rise_capacitance	: 0.001938;
		fall_capacitance_range		(0.001872, 0.001903);
		rise_capacitance_range		(0.001857, 0.001960);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.198445;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.082688,-0.106314,-0.112437,-0.123784,-0.121772", \
				        "-0.065999,-0.085267,-0.096238,-0.103379,-0.100383", \
				        "-0.058510,-0.078513,-0.090013,-0.098755,-0.096506", \
				        "-0.059503,-0.077334,-0.086067,-0.095291,-0.092925", \
				        "-0.064865,-0.087330,-0.095328,-0.103074,-0.103098");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.090803,0.112077,0.120676,0.127889,0.128546", \
				        "0.072970,0.093903,0.102594,0.109808,0.110672", \
				        "0.067329,0.088456,0.096659,0.104082,0.105044", \
				        "0.066674,0.087470,0.096726,0.103484,0.103473", \
				        "0.081981,0.103335,0.111686,0.119218,0.118605");
			}
		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000042,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000042,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000042,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002394,0.002466,0.002821,0.003824,0.006213");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002394,0.002466,0.002821,0.003824,0.006213");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002394,0.002466,0.002821,0.003824,0.006213");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000040,0.000007,0.000004,0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.000042,0.000006,0.000004,-0.000000,-0.000006");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Set_Reset) {
				values ("0.002394,0.002466,0.002821,0.003824,0.006213");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001130;
		fall_capacitance	: 0.001069;
		rise_capacitance	: 0.001191;
		fall_capacitance_range		(0.000950, 0.001131);
		rise_capacitance_range		(0.001113, 0.001254);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.098577,-0.096135,-0.100509,-0.127088,-0.163096", \
				        "-0.143611,-0.135380,-0.144839,-0.164134,-0.209485", \
				        "-0.176353,-0.174006,-0.179838,-0.206820,-0.246755", \
				        "-0.228966,-0.225468,-0.229057,-0.244755,-0.293623", \
				        "-0.314683,-0.297444,-0.310022,-0.335296,-0.366872");
			}
			rise_constraint(Hold) {
				values ("-0.072705,-0.066039,-0.058861,-0.048104,-0.066750", \
				        "-0.103593,-0.089404,-0.077097,-0.080982,-0.096154", \
				        "-0.112911,-0.086999,-0.099139,-0.098628,-0.101020", \
				        "-0.115857,-0.099615,-0.099519,-0.102146,-0.121305", \
				        "-0.107681,-0.094686,-0.090400,-0.082097,-0.099265");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.139160,-0.117277,-0.117426,-0.121322,-0.143643", \
				        "-0.200992,-0.172857,-0.171540,-0.178001,-0.189710", \
				        "-0.246384,-0.237811,-0.234442,-0.222085,-0.240535", \
				        "-0.319852,-0.291301,-0.292096,-0.285514,-0.302792", \
				        "-0.433781,-0.426416,-0.401712,-0.413424,-0.431171");
			}
			rise_constraint(Hold) {
				values ("-0.115071,-0.108864,-0.122353,-0.145314,-0.188650", \
				        "-0.143605,-0.135375,-0.144834,-0.164131,-0.209482", \
				        "-0.143169,-0.143990,-0.154577,-0.176065,-0.218925", \
				        "-0.135264,-0.138712,-0.142734,-0.164792,-0.203102", \
				        "-0.091317,-0.088063,-0.095176,-0.115013,-0.157696");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.164604,0.154387,0.160416,0.177024,0.223006", \
				        "0.212572,0.204870,0.207091,0.225844,0.270241", \
				        "0.247839,0.240823,0.243746,0.261861,0.304160", \
				        "0.300191,0.290106,0.297129,0.313880,0.353687", \
				        "0.389158,0.376811,0.383726,0.396640,0.444451");
			}
			rise_constraint(Setup) {
				values ("0.309698,0.287925,0.272900,0.255341,0.248866", \
				        "0.339770,0.324043,0.302847,0.298184,0.282078", \
				        "0.361715,0.325752,0.321741,0.312629,0.296632", \
				        "0.364510,0.346045,0.335711,0.325727,0.319806", \
				        "0.373599,0.345905,0.335451,0.317130,0.318353");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.374937,0.346626,0.336180,0.327780,0.321472", \
				        "0.430271,0.409300,0.394515,0.387748,0.375032", \
				        "0.479528,0.452236,0.443819,0.435798,0.430050", \
				        "0.542574,0.522662,0.509732,0.505397,0.499780", \
				        "0.665476,0.639662,0.622045,0.617571,0.613627");
			}
			rise_constraint(Setup) {
				values ("0.192063,0.178089,0.185949,0.206221,0.250400", \
				        "0.206865,0.198729,0.207094,0.225847,0.265568", \
				        "0.212170,0.202553,0.209565,0.223100,0.270617", \
				        "0.203983,0.187395,0.194854,0.215226,0.263210", \
				        "0.161261,0.151046,0.152923,0.176828,0.219143");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.004453,0.004470,0.004560,0.004741,0.005078,0.005729,0.006889,0.009235");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.001040;
		fall_capacitance	: 0.001002;
		rise_capacitance	: 0.001078;
		fall_capacitance_range		(0.000947, 0.001026);
		rise_capacitance_range		(0.001057, 0.001088);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.120570,-0.121597,-0.129635,-0.145312,-0.188649", \
				        "-0.161752,-0.163040,-0.168330,-0.183458,-0.236137", \
				        "-0.196254,-0.196508,-0.205088,-0.217065,-0.260665", \
				        "-0.244575,-0.242812,-0.257824,-0.267596,-0.308705", \
				        "-0.334981,-0.330496,-0.333887,-0.349058,-0.401729");
			}
			rise_constraint(Hold) {
				values ("-0.094858,-0.066038,-0.058858,-0.066404,-0.092374", \
				        "-0.127945,-0.089403,-0.092835,-0.100381,-0.109512", \
				        "-0.139608,-0.117161,-0.099137,-0.098623,-0.128917", \
				        "-0.147243,-0.117041,-0.118775,-0.125063,-0.136422", \
				        "-0.148445,-0.116801,-0.114346,-0.123510,-0.134197");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.120569,-0.121596,-0.129634,-0.145311,-0.188648", \
				        "-0.161751,-0.163039,-0.168329,-0.183457,-0.236136", \
				        "-0.196253,-0.196507,-0.205087,-0.217064,-0.260664", \
				        "-0.244574,-0.242811,-0.257823,-0.267595,-0.308704", \
				        "-0.334980,-0.330495,-0.333886,-0.349057,-0.401728");
			}
			rise_constraint(Hold) {
				values ("-0.094858,-0.066038,-0.058858,-0.066405,-0.092376", \
				        "-0.127944,-0.089403,-0.092836,-0.100382,-0.109514", \
				        "-0.139607,-0.117161,-0.099138,-0.098625,-0.128919", \
				        "-0.147242,-0.117041,-0.118776,-0.125064,-0.136424", \
				        "-0.148444,-0.116801,-0.114347,-0.123511,-0.134198");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.192065,0.178091,0.185951,0.198924,0.250402", \
				        "0.229713,0.217166,0.226905,0.240887,0.284271", \
				        "0.259739,0.253589,0.257428,0.277374,0.318544", \
				        "0.319447,0.303814,0.311752,0.330334,0.373803", \
				        "0.403881,0.392400,0.400230,0.414974,0.455456");
			}
			rise_constraint(Setup) {
				values ("0.320571,0.299665,0.285556,0.269828,0.267017", \
				        "0.339769,0.324042,0.315942,0.298183,0.300668", \
				        "0.361714,0.338399,0.321740,0.312629,0.315691", \
				        "0.377228,0.346044,0.335709,0.325726,0.319805", \
				        "0.373597,0.345903,0.343638,0.335337,0.329288");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.192064,0.178090,0.185950,0.198923,0.250401", \
				        "0.229711,0.217164,0.226903,0.240885,0.284270", \
				        "0.259737,0.253587,0.257426,0.277372,0.318542", \
				        "0.319444,0.303811,0.311749,0.330332,0.373801", \
				        "0.403876,0.392395,0.400225,0.414970,0.455452");
			}
			rise_constraint(Setup) {
				values ("0.320571,0.299665,0.285556,0.269829,0.267017", \
				        "0.339769,0.324042,0.315942,0.298183,0.300668", \
				        "0.361714,0.338400,0.321740,0.312629,0.315691", \
				        "0.377228,0.346045,0.335710,0.325727,0.319805", \
				        "0.373597,0.345903,0.343639,0.335337,0.329288");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000051,0.000035,0.000021,0.000013,0.000008,0.000002,0.000000,-0.000005");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.002168;
		fall_capacitance	: 0.002115;
		rise_capacitance	: 0.002222;
		fall_capacitance_range		(0.001992, 0.002162);
		rise_capacitance_range		(0.002114, 0.002252);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.173237;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.065488,-0.078832,-0.083789,-0.092819,-0.091712", \
				        "-0.071321,-0.090271,-0.090968,-0.102138,-0.086010", \
				        "-0.058457,-0.093024,-0.089088,-0.091575,-0.081264", \
				        "-0.053060,-0.080947,-0.067741,-0.075387,-0.057705", \
				        "0.028076,0.013548,0.045292,0.020296,-0.007713");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.121100,0.141555,0.149072,0.156189,0.158004", \
				        "0.132587,0.152736,0.160015,0.166538,0.167406", \
				        "0.150279,0.170327,0.177577,0.183555,0.183873", \
				        "0.184076,0.203650,0.210312,0.215394,0.215851", \
				        "0.245194,0.264352,0.271259,0.276227,0.276671");
			}
		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000043,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000049,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000039,0.000008,0.000004,-0.000000,-0.000007");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000050,0.000009,0.000006,0.000001,-0.000007");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & RN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000044,0.000008,0.000004,-0.000001,-0.000008");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000038,0.000008,0.000004,-0.000000,-0.000007");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.259824,0.267495,0.275720,0.289323,0.311830,0.351026", \
				        "0.263009,0.270679,0.278922,0.292465,0.314956,0.354111", \
				        "0.268075,0.275749,0.283968,0.297518,0.319877,0.358964", \
				        "0.273654,0.281330,0.289521,0.303411,0.325797,0.364536", \
				        "0.279613,0.287293,0.295511,0.309135,0.331606,0.370508", \
				        "0.284249,0.291929,0.300251,0.313697,0.336325,0.375271", \
				        "0.284760,0.292428,0.300619,0.314630,0.337130,0.376296", \
				        "0.275643,0.283311,0.291440,0.305373,0.327952,0.366995");
			}
			cell_rise(Timing_X2) {
				values ("0.304905,0.314478,0.324954,0.343753,0.379846,0.452035", \
				        "0.307901,0.317475,0.327979,0.347098,0.382923,0.455104", \
				        "0.313424,0.322992,0.333528,0.352644,0.388511,0.460402", \
				        "0.320067,0.329627,0.340057,0.359213,0.395120,0.467041", \
				        "0.327734,0.337307,0.347829,0.366752,0.403017,0.475070", \
				        "0.335751,0.345334,0.355762,0.374728,0.411322,0.483448", \
				        "0.341258,0.350827,0.361302,0.380032,0.416353,0.488738", \
				        "0.336947,0.346512,0.357003,0.375520,0.412026,0.484176");
			}
			fall_transition(Timing_X2) {
				values ("0.011533,0.015135,0.019298,0.026785,0.040808,0.069528", \
				        "0.011534,0.015135,0.019291,0.026761,0.040796,0.069535", \
				        "0.011544,0.015141,0.019298,0.026772,0.040794,0.069536", \
				        "0.011539,0.015139,0.019296,0.026771,0.040790,0.069490", \
				        "0.011544,0.015130,0.019299,0.026767,0.040793,0.069408", \
				        "0.011552,0.015142,0.019288,0.026765,0.040806,0.069415", \
				        "0.011549,0.015147,0.019287,0.026816,0.040814,0.069434", \
				        "0.011559,0.015143,0.019304,0.026812,0.040815,0.069585");
			}
			rise_transition(Timing_X2) {
				values ("0.013479,0.019306,0.026620,0.041931,0.074788,0.143732", \
				        "0.013475,0.019320,0.026622,0.041968,0.074785,0.143728", \
				        "0.013482,0.019321,0.026625,0.041965,0.074866,0.143545", \
				        "0.013493,0.019315,0.026621,0.041968,0.074814,0.143579", \
				        "0.013486,0.019309,0.026633,0.041919,0.074827,0.143558", \
				        "0.013470,0.019303,0.026596,0.041975,0.074853,0.143605", \
				        "0.013496,0.019311,0.026631,0.041960,0.074880,0.143725", \
				        "0.013494,0.019322,0.026631,0.041965,0.074835,0.143694");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & !SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.071414,0.079763,0.088460,0.102770,0.126190,0.166200", \
				        "0.075090,0.083427,0.092105,0.106483,0.129828,0.169838", \
				        "0.082834,0.091173,0.099879,0.114187,0.137496,0.177501", \
				        "0.099152,0.107471,0.116194,0.130498,0.154084,0.194149", \
				        "0.130006,0.138776,0.147947,0.162524,0.186148,0.226332", \
				        "0.174013,0.184156,0.194760,0.211356,0.237310,0.279255", \
				        "0.239564,0.251289,0.263270,0.282614,0.311907,0.357450", \
				        "0.344913,0.358535,0.372639,0.395089,0.429256,0.480978");
			}
			cell_rise(Timing_X2) {
				values ("0.053664,0.063170,0.074026,0.093514,0.130339,0.203142", \
				        "0.056365,0.065871,0.076721,0.096185,0.133011,0.205808", \
				        "0.061388,0.070882,0.081730,0.101177,0.138014,0.210805", \
				        "0.070259,0.079846,0.090696,0.110164,0.146904,0.219688", \
				        "0.082056,0.092178,0.103325,0.122949,0.159834,0.232514", \
				        "0.092575,0.103907,0.116266,0.136855,0.173791,0.246346", \
				        "0.093712,0.106915,0.121048,0.144360,0.183123,0.256144", \
				        "0.068300,0.083715,0.100552,0.127959,0.171905,0.247692");
			}
			fall_transition(Timing_X2) {
				values ("0.012244,0.015840,0.020040,0.027602,0.041813,0.070298", \
				        "0.012241,0.015827,0.020046,0.027723,0.041812,0.070296", \
				        "0.012227,0.015841,0.020019,0.027660,0.041755,0.070247", \
				        "0.012257,0.015872,0.020088,0.027701,0.041952,0.070390", \
				        "0.014193,0.017527,0.021508,0.028668,0.042521,0.070666", \
				        "0.018565,0.022160,0.026264,0.033454,0.046783,0.073279", \
				        "0.024433,0.028438,0.032901,0.040584,0.053813,0.079075", \
				        "0.033274,0.037776,0.042724,0.051076,0.065154,0.089908");
			}
			rise_transition(Timing_X2) {
				values ("0.011560,0.017554,0.025342,0.041161,0.074476,0.143297", \
				        "0.011554,0.017564,0.025352,0.041160,0.074495,0.143296", \
				        "0.011528,0.017565,0.025358,0.041138,0.074496,0.143301", \
				        "0.011829,0.017809,0.025426,0.041243,0.074510,0.143316", \
				        "0.013030,0.019009,0.026522,0.041854,0.074729,0.143331", \
				        "0.015582,0.021808,0.029123,0.043858,0.075464,0.143538", \
				        "0.019886,0.027018,0.034830,0.048961,0.078606,0.144798", \
				        "0.026811,0.034912,0.044265,0.059619,0.087319,0.150156");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.071427,0.079777,0.088604,0.102941,0.126395,0.166437", \
				        "0.075081,0.083434,0.092251,0.106549,0.129991,0.170033", \
				        "0.082851,0.091192,0.099998,0.114322,0.137753,0.177789", \
				        "0.099196,0.107513,0.116297,0.130626,0.154027,0.194073", \
				        "0.130130,0.138925,0.148042,0.162605,0.186223,0.226285", \
				        "0.174103,0.184271,0.194759,0.211482,0.237284,0.278998", \
				        "0.239637,0.251329,0.263398,0.282526,0.311319,0.356606", \
				        "0.344672,0.357985,0.371807,0.393416,0.426367,0.474897");
			}
			fall_transition(Timing_X2) {
				values ("0.012221,0.015819,0.020033,0.027675,0.041917,0.070356", \
				        "0.012220,0.015813,0.020021,0.027654,0.041917,0.070355", \
				        "0.012216,0.015813,0.020035,0.027681,0.041914,0.070354", \
				        "0.012236,0.015845,0.020072,0.027707,0.041898,0.070355", \
				        "0.014232,0.017561,0.021459,0.028673,0.042438,0.070554", \
				        "0.018609,0.022191,0.026220,0.033383,0.046453,0.072866", \
				        "0.024389,0.028310,0.032617,0.040022,0.053193,0.078129", \
				        "0.032495,0.036659,0.041222,0.049015,0.062161,0.083191");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & !SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.071368,0.079685,0.088472,0.102791,0.126180,0.166215", \
				        "0.075053,0.083377,0.092140,0.106459,0.129847,0.169882", \
				        "0.082783,0.091103,0.099861,0.114163,0.137553,0.177591", \
				        "0.099098,0.107396,0.116252,0.130590,0.153854,0.193902", \
				        "0.129975,0.138738,0.147943,0.162535,0.186130,0.226314", \
				        "0.174009,0.184149,0.194815,0.211346,0.237209,0.279160", \
				        "0.239561,0.251288,0.263392,0.282726,0.311921,0.357480", \
				        "0.344923,0.358560,0.372685,0.395184,0.429488,0.481212");
			}
			cell_rise(Timing_X2) {
				values ("0.053408,0.062914,0.073696,0.093093,0.129907,0.202749", \
				        "0.056162,0.065666,0.076448,0.095791,0.132662,0.205512", \
				        "0.061175,0.070662,0.081427,0.100744,0.137460,0.210310", \
				        "0.070134,0.079721,0.090525,0.109811,0.146473,0.219281", \
				        "0.081932,0.092060,0.103270,0.122890,0.159683,0.232385", \
				        "0.092623,0.103957,0.116213,0.136816,0.173973,0.246447", \
				        "0.093734,0.106939,0.121128,0.144311,0.183195,0.256213", \
				        "0.068216,0.083635,0.100606,0.128230,0.172279,0.248038");
			}
			fall_transition(Timing_X2) {
				values ("0.012193,0.015774,0.019991,0.027631,0.041816,0.070428", \
				        "0.012186,0.015785,0.019989,0.027632,0.041813,0.070465", \
				        "0.012184,0.015788,0.020005,0.027640,0.041821,0.070465", \
				        "0.012211,0.015821,0.020118,0.027700,0.041847,0.070492", \
				        "0.014168,0.017520,0.021435,0.028622,0.042457,0.070673", \
				        "0.018555,0.022153,0.026225,0.033528,0.046633,0.073256", \
				        "0.024433,0.028445,0.032905,0.040570,0.053838,0.079078", \
				        "0.033308,0.037827,0.042779,0.051192,0.065239,0.089971");
			}
			rise_transition(Timing_X2) {
				values ("0.011510,0.017526,0.025264,0.041064,0.074563,0.143374", \
				        "0.011507,0.017522,0.025259,0.041066,0.074586,0.143391", \
				        "0.011447,0.017492,0.025247,0.041069,0.074586,0.143390", \
				        "0.011829,0.017795,0.025409,0.041175,0.074550,0.143381", \
				        "0.013034,0.019012,0.026521,0.041850,0.074782,0.143366", \
				        "0.015581,0.021806,0.029147,0.043866,0.075586,0.143554", \
				        "0.019885,0.027017,0.034801,0.048838,0.078567,0.144815", \
				        "0.026819,0.034921,0.044261,0.059569,0.087257,0.150118");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.071396,0.079752,0.088556,0.102881,0.126261,0.166262", \
				        "0.075080,0.083431,0.092224,0.106522,0.129901,0.169960", \
				        "0.082811,0.091168,0.099950,0.114249,0.137590,0.177613", \
				        "0.099190,0.107510,0.116271,0.130584,0.153970,0.193917", \
				        "0.130077,0.138860,0.147980,0.162591,0.186257,0.226406", \
				        "0.174179,0.184333,0.194845,0.211474,0.237357,0.279278", \
				        "0.239599,0.251343,0.263481,0.282781,0.312016,0.357563", \
				        "0.344981,0.358632,0.372867,0.395127,0.429529,0.481273");
			}
			fall_transition(Timing_X2) {
				values ("0.012234,0.015830,0.020028,0.027603,0.041863,0.070274", \
				        "0.012247,0.015837,0.020031,0.027607,0.041863,0.070374", \
				        "0.012248,0.015851,0.020032,0.027625,0.041741,0.070279", \
				        "0.012268,0.015871,0.020051,0.027654,0.041891,0.070293", \
				        "0.014199,0.017535,0.021458,0.028683,0.042555,0.070663", \
				        "0.018587,0.022180,0.026232,0.033420,0.046659,0.073159", \
				        "0.024481,0.028494,0.032902,0.040456,0.053762,0.079052", \
				        "0.033358,0.037874,0.042782,0.051108,0.065215,0.090132");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.095939,0.105227,0.115806,0.134971,0.171498,0.244127", \
				        "0.099594,0.108916,0.119500,0.138662,0.175183,0.247807", \
				        "0.107490,0.116810,0.127382,0.146624,0.183061,0.255685", \
				        "0.123469,0.132795,0.143374,0.162599,0.199138,0.271705", \
				        "0.150175,0.159433,0.169934,0.188977,0.225419,0.297942", \
				        "0.189292,0.198515,0.208920,0.228086,0.264519,0.336728", \
				        "0.249999,0.259294,0.269578,0.288672,0.325077,0.397200", \
				        "0.349717,0.359334,0.369666,0.388153,0.424703,0.496463");
			}
			rise_transition(Timing_X2) {
				values ("0.011819,0.017796,0.025458,0.041212,0.074498,0.143319", \
				        "0.011820,0.017790,0.025459,0.041221,0.074499,0.143319", \
				        "0.011822,0.017792,0.025449,0.041276,0.074510,0.143319", \
				        "0.011810,0.017813,0.025467,0.041272,0.074536,0.143305", \
				        "0.011964,0.017897,0.025544,0.041279,0.074528,0.143299", \
				        "0.012319,0.018244,0.025799,0.041447,0.074599,0.143318", \
				        "0.013000,0.018832,0.026246,0.041756,0.074703,0.143344", \
				        "0.014230,0.019975,0.027124,0.042273,0.075024,0.143474");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.096043,0.105348,0.115930,0.135093,0.171621,0.244240", \
				        "0.099705,0.109029,0.119627,0.138920,0.175228,0.247847", \
				        "0.107584,0.116914,0.127482,0.146735,0.183224,0.255700", \
				        "0.123593,0.132905,0.143457,0.162743,0.199287,0.271766", \
				        "0.150283,0.159523,0.170041,0.189173,0.225558,0.298106", \
				        "0.189637,0.198864,0.209415,0.228344,0.264590,0.337066", \
				        "0.250518,0.259850,0.270165,0.289399,0.325504,0.397608", \
				        "0.346760,0.356332,0.366730,0.385883,0.421630,0.493500");
			}
			rise_transition(Timing_X2) {
				values ("0.011839,0.017816,0.025478,0.041225,0.074518,0.143297", \
				        "0.011819,0.017814,0.025476,0.041267,0.074517,0.143295", \
				        "0.011850,0.017823,0.025470,0.041289,0.074535,0.143296", \
				        "0.011830,0.017810,0.025487,0.041297,0.074548,0.143293", \
				        "0.012000,0.017923,0.025568,0.041303,0.074572,0.143322", \
				        "0.012393,0.018305,0.025842,0.041480,0.074580,0.143301", \
				        "0.013078,0.018892,0.026303,0.041791,0.074729,0.143339", \
				        "0.013967,0.019734,0.026938,0.042129,0.074845,0.143341");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.008030,0.007974,0.007941,0.007913,0.007901,0.007894", \
				        "0.008020,0.007965,0.007931,0.007911,0.007897,0.007890", \
				        "0.008040,0.007985,0.007952,0.007929,0.007922,0.007920", \
				        "0.008127,0.008072,0.008037,0.008023,0.008013,0.008011", \
				        "0.008412,0.008356,0.008323,0.008302,0.008293,0.008294", \
				        "0.009148,0.009092,0.009057,0.009037,0.009029,0.009025", \
				        "0.010812,0.010756,0.010719,0.010701,0.010690,0.010688", \
				        "0.014353,0.014297,0.014259,0.014236,0.014226,0.014220");
			}
			rise_power(Power_X2) {
				values ("0.006050,0.005971,0.005914,0.005867,0.005838,0.005823", \
				        "0.006043,0.005964,0.005908,0.005866,0.005836,0.005819", \
				        "0.006061,0.005982,0.005926,0.005886,0.005859,0.005846", \
				        "0.006140,0.006062,0.006005,0.005967,0.005938,0.005924", \
				        "0.006426,0.006347,0.006289,0.006244,0.006223,0.006209", \
				        "0.007153,0.007073,0.007015,0.006972,0.006960,0.006944", \
				        "0.008794,0.008716,0.008658,0.008610,0.008591,0.008581", \
				        "0.012267,0.012188,0.012132,0.012082,0.012067,0.012055");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & !SN";

			fall_power(Power_X2) {
				values ("0.009989,0.009175,0.008117,0.006161,0.002326,-0.005406", \
				        "0.009984,0.009170,0.008112,0.006191,0.002322,-0.005410", \
				        "0.009990,0.009176,0.008120,0.006176,0.002311,-0.005420", \
				        "0.010045,0.009228,0.008169,0.006224,0.002367,-0.005367", \
				        "0.010338,0.009486,0.008430,0.006460,0.002569,-0.005176", \
				        "0.011148,0.010237,0.009137,0.007131,0.003196,-0.004581", \
				        "0.013134,0.012157,0.010970,0.008902,0.004891,-0.002938", \
				        "0.017599,0.016552,0.015278,0.013078,0.008949,0.001023");
			}
			rise_power(Power_X2) {
				values ("0.005144,0.005852,0.006785,0.008728,0.012640,0.020407", \
				        "0.005128,0.005836,0.006769,0.008714,0.012617,0.020384", \
				        "0.005119,0.005827,0.006759,0.008703,0.012596,0.020363", \
				        "0.005145,0.005848,0.006764,0.008709,0.012575,0.020338", \
				        "0.005268,0.005956,0.006861,0.008778,0.012658,0.020411", \
				        "0.005681,0.006345,0.007268,0.009168,0.012996,0.020724", \
				        "0.007137,0.007754,0.008628,0.010512,0.014308,0.021989", \
				        "0.011004,0.011536,0.012375,0.014157,0.017911,0.025518");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "!CK & SN";

			fall_power(Power_X2) {
				values ("0.008002,0.007939,0.007898,0.007861,0.007844,0.007830", \
				        "0.007994,0.007932,0.007882,0.007843,0.007838,0.007824", \
				        "0.008005,0.007942,0.007901,0.007862,0.007845,0.007832", \
				        "0.008061,0.007997,0.007953,0.007914,0.007898,0.007886", \
				        "0.008305,0.008223,0.008166,0.008115,0.008089,0.008072", \
				        "0.008942,0.008830,0.008748,0.008690,0.008637,0.008606", \
				        "0.010493,0.010351,0.010229,0.010129,0.010032,0.009963", \
				        "0.013773,0.013604,0.013431,0.013251,0.013118,0.013019");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & !SN";

			fall_power(Power_X2) {
				values ("0.008032,0.007221,0.006171,0.004201,0.000338,-0.007410", \
				        "0.008031,0.007220,0.006164,0.004194,0.000333,-0.007417", \
				        "0.008054,0.007242,0.006195,0.004220,0.000357,-0.007392", \
				        "0.008185,0.007369,0.006345,0.004371,0.000490,-0.007258", \
				        "0.008709,0.007858,0.006797,0.004785,0.000933,-0.006827", \
				        "0.009960,0.009048,0.007969,0.005890,0.001974,-0.005811", \
				        "0.012669,0.011692,0.010520,0.008397,0.004409,-0.003427", \
				        "0.018333,0.017286,0.016023,0.013790,0.009681,0.001748");
			}
			rise_power(Power_X2) {
				values ("0.003841,0.004547,0.005525,0.007480,0.011410,0.019163", \
				        "0.003830,0.004536,0.005514,0.007463,0.011391,0.019144", \
				        "0.003815,0.004520,0.005495,0.007437,0.011365,0.019119", \
				        "0.003827,0.004526,0.005493,0.007434,0.011343,0.019093", \
				        "0.003984,0.004668,0.005628,0.007549,0.011448,0.019188", \
				        "0.004615,0.005275,0.006231,0.008131,0.011996,0.019710", \
				        "0.006634,0.007250,0.008157,0.010043,0.013873,0.021544", \
				        "0.011661,0.012192,0.013036,0.014850,0.018623,0.026219");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			when	                 : "CK & SN";

			fall_power(Power_X2) {
				values ("0.009249,0.009192,0.009158,0.009138,0.009123,0.009120", \
				        "0.009239,0.009181,0.009151,0.009134,0.009118,0.009113", \
				        "0.009251,0.009193,0.009163,0.009142,0.009129,0.009125", \
				        "0.009317,0.009258,0.009226,0.009204,0.009188,0.009189", \
				        "0.009580,0.009503,0.009443,0.009420,0.009390,0.009381", \
				        "0.010182,0.010076,0.010005,0.009947,0.009903,0.009880", \
				        "0.011460,0.011320,0.011205,0.011128,0.011048,0.010993", \
				        "0.014002,0.013826,0.013668,0.013497,0.013385,0.013288");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X2) {
				values ("0.008203,0.008187,0.008175,0.008180,0.008185,0.008197", \
				        "0.008199,0.008179,0.008166,0.008181,0.008178,0.008190", \
				        "0.008211,0.008191,0.008177,0.008190,0.008194,0.008203", \
				        "0.008302,0.008279,0.008258,0.008267,0.008270,0.008282", \
				        "0.008572,0.008536,0.008513,0.008504,0.008498,0.008505", \
				        "0.009284,0.009213,0.009184,0.009160,0.009136,0.009138", \
				        "0.010929,0.010824,0.010752,0.010722,0.010676,0.010647", \
				        "0.014119,0.013989,0.013890,0.013813,0.013725,0.013655");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.243459,0.252285,0.262227,0.278879,0.306005,0.350900", \
				        "0.246471,0.255250,0.265250,0.282152,0.309098,0.353961", \
				        "0.251981,0.260768,0.270798,0.287709,0.314700,0.359179", \
				        "0.258627,0.267428,0.277327,0.294269,0.321309,0.365825", \
				        "0.266283,0.275111,0.285091,0.301887,0.329200,0.373853", \
				        "0.274293,0.283121,0.293034,0.309766,0.337440,0.382179", \
				        "0.279806,0.288613,0.298558,0.315113,0.342475,0.387594", \
				        "0.275478,0.284247,0.294245,0.310594,0.338137,0.383006");
			}
			cell_rise(Timing_X2) {
				values ("0.210293,0.219657,0.230403,0.249846,0.286617,0.359414", \
				        "0.213478,0.222841,0.233611,0.252984,0.289742,0.362492", \
				        "0.218593,0.227910,0.238650,0.258044,0.294664,0.367346", \
				        "0.224152,0.233488,0.244203,0.263937,0.300588,0.372928", \
				        "0.230099,0.239449,0.250187,0.269656,0.306394,0.378889", \
				        "0.234735,0.244083,0.254926,0.274225,0.311114,0.383649", \
				        "0.235187,0.244549,0.255287,0.275152,0.311903,0.384664", \
				        "0.225948,0.235386,0.246089,0.265889,0.302717,0.375341");
			}
			fall_transition(Timing_X2) {
				values ("0.019439,0.023451,0.028192,0.036650,0.051711,0.079956", \
				        "0.019422,0.023434,0.028195,0.036625,0.051698,0.079959", \
				        "0.019426,0.023437,0.028190,0.036628,0.051704,0.079902", \
				        "0.019421,0.023459,0.028189,0.036622,0.051705,0.079902", \
				        "0.019441,0.023455,0.028205,0.036637,0.051706,0.079887", \
				        "0.019441,0.023455,0.028196,0.036633,0.051737,0.079916", \
				        "0.019432,0.023467,0.028204,0.036690,0.051835,0.080015", \
				        "0.019428,0.023443,0.028220,0.036702,0.051851,0.080065");
			}
			rise_transition(Timing_X2) {
				values ("0.018106,0.023549,0.030798,0.046123,0.079056,0.147819", \
				        "0.018106,0.023550,0.030791,0.046118,0.079055,0.147836", \
				        "0.018125,0.023563,0.030800,0.046118,0.079052,0.147845", \
				        "0.018145,0.023567,0.030812,0.046119,0.079048,0.147813", \
				        "0.018116,0.023572,0.030814,0.046125,0.079054,0.147759", \
				        "0.018156,0.023603,0.030823,0.046167,0.079060,0.147755", \
				        "0.018253,0.023676,0.030880,0.046192,0.079071,0.147877", \
				        "0.018352,0.023775,0.030974,0.046255,0.079091,0.147899");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK & SN";
			sdf_cond	   : "(CK == 1'b0) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.268098,0.277834,0.288776,0.308210,0.345292,0.417639", \
				        "0.272135,0.281891,0.292708,0.312016,0.349200,0.421500", \
				        "0.278475,0.288189,0.299109,0.318505,0.355574,0.427937", \
				        "0.288489,0.298246,0.309114,0.328598,0.365417,0.438067", \
				        "0.304922,0.314626,0.325476,0.345033,0.382059,0.454111", \
				        "0.336176,0.345826,0.356753,0.376848,0.413767,0.486150", \
				        "0.392199,0.402206,0.413264,0.433666,0.470094,0.542663", \
				        "0.489450,0.499768,0.511022,0.530654,0.568387,0.640784");
			}
			rise_transition(Timing_X2) {
				values ("0.019539,0.024685,0.031544,0.046413,0.078919,0.147852", \
				        "0.019568,0.024698,0.031554,0.046427,0.078926,0.147853", \
				        "0.019559,0.024688,0.031551,0.046411,0.078918,0.147844", \
				        "0.019565,0.024694,0.031552,0.046410,0.078905,0.147851", \
				        "0.019549,0.024676,0.031556,0.046403,0.078910,0.147654", \
				        "0.019628,0.024773,0.031630,0.046396,0.078907,0.147676", \
				        "0.020342,0.025494,0.032160,0.046779,0.079109,0.147555", \
				        "0.021249,0.026416,0.032938,0.047209,0.079279,0.147708");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK & SN";
			sdf_cond	   : "(CK == 1'b1) && (SN == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.385599,0.394724,0.405734,0.425641,0.462315,0.534799", \
				        "0.389159,0.398307,0.409413,0.429387,0.466059,0.538678", \
				        "0.396827,0.405954,0.417132,0.437039,0.473643,0.546317", \
				        "0.412550,0.421676,0.432854,0.452697,0.489265,0.561884", \
				        "0.438560,0.447705,0.457964,0.478359,0.515122,0.587656", \
				        "0.472849,0.482002,0.493010,0.512988,0.549731,0.622287", \
				        "0.520651,0.529825,0.540488,0.561541,0.598085,0.670671", \
				        "0.590115,0.599358,0.609950,0.628848,0.667822,0.741077");
			}
			rise_transition(Timing_X2) {
				values ("0.017847,0.023203,0.030473,0.045852,0.078896,0.147750", \
				        "0.017818,0.023216,0.030473,0.045873,0.078892,0.147743", \
				        "0.017815,0.023198,0.030474,0.045842,0.078918,0.147745", \
				        "0.017814,0.023197,0.030464,0.045877,0.078980,0.147740", \
				        "0.017818,0.023199,0.030465,0.045876,0.078963,0.147714", \
				        "0.017837,0.023200,0.030463,0.045856,0.078969,0.147679", \
				        "0.017824,0.023196,0.030456,0.045837,0.078946,0.147689", \
				        "0.017809,0.023242,0.030474,0.045836,0.078877,0.147621");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & !RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.049712,0.055470,0.061954,0.073241,0.093166,0.130309", \
				        "0.053627,0.059159,0.065640,0.076935,0.096855,0.133998", \
				        "0.061278,0.067111,0.073575,0.084893,0.104835,0.141970", \
				        "0.077065,0.082975,0.089565,0.100900,0.120853,0.158012", \
				        "0.100765,0.107559,0.114790,0.127066,0.147732,0.185104", \
				        "0.135034,0.142536,0.151321,0.165016,0.187587,0.226161", \
				        "0.189475,0.198010,0.207827,0.224203,0.249329,0.290227", \
				        "0.279950,0.290676,0.302144,0.321538,0.351651,0.397837");
			}
			cell_rise(Timing_X2) {
				values ("0.063367,0.071955,0.082220,0.101336,0.138152,0.210964", \
				        "0.064836,0.073423,0.083623,0.102758,0.139578,0.212419", \
				        "0.066694,0.075269,0.085464,0.104425,0.140957,0.213772", \
				        "0.068964,0.077647,0.087944,0.106883,0.143306,0.216137", \
				        "0.071724,0.080597,0.091161,0.110278,0.147050,0.219858", \
				        "0.073359,0.082824,0.093917,0.113681,0.150816,0.223772", \
				        "0.065562,0.076325,0.088650,0.110286,0.149430,0.224214", \
				        "0.029744,0.042541,0.057380,0.082518,0.125463,0.204434");
			}
			fall_transition(Timing_X2) {
				values ("0.010202,0.013141,0.016796,0.023839,0.038225,0.068360", \
				        "0.010097,0.013125,0.016786,0.023846,0.038225,0.068374", \
				        "0.010184,0.013095,0.016774,0.023894,0.038268,0.068400", \
				        "0.010737,0.013498,0.017120,0.024113,0.038328,0.068363", \
				        "0.013154,0.015936,0.019358,0.026266,0.039520,0.068672", \
				        "0.016532,0.019396,0.022896,0.029722,0.042750,0.070425", \
				        "0.021790,0.024822,0.028502,0.035324,0.047971,0.073883", \
				        "0.029542,0.033243,0.037581,0.044824,0.058154,0.082526");
			}
			rise_transition(Timing_X2) {
				values ("0.015547,0.021275,0.028927,0.044966,0.078753,0.147486", \
				        "0.015548,0.021275,0.028940,0.044955,0.078704,0.147539", \
				        "0.015561,0.021263,0.028920,0.044970,0.078753,0.147542", \
				        "0.015836,0.021466,0.029064,0.045084,0.078680,0.147533", \
				        "0.016361,0.022020,0.029604,0.045364,0.078908,0.147577", \
				        "0.018082,0.023785,0.031325,0.046851,0.079727,0.147916", \
				        "0.022094,0.028020,0.035684,0.050972,0.083539,0.150909", \
				        "0.028505,0.035771,0.044108,0.059467,0.091228,0.159492");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK & RN";
			sdf_cond	   : "(CK == 1'b0) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.049881,0.055878,0.062443,0.073811,0.093858,0.131183", \
				        "0.053674,0.059568,0.066133,0.077500,0.097545,0.134866", \
				        "0.061575,0.067470,0.074026,0.085378,0.105445,0.142770", \
				        "0.077432,0.083449,0.090062,0.101445,0.121509,0.158848", \
				        "0.101359,0.108238,0.115548,0.127771,0.148529,0.186026", \
				        "0.135991,0.143607,0.152117,0.166128,0.188461,0.227016", \
				        "0.190590,0.199272,0.209075,0.225280,0.250388,0.290952", \
				        "0.281641,0.292280,0.303823,0.322334,0.351615,0.395489");
			}
			fall_transition(Timing_X2) {
				values ("0.010350,0.013289,0.016944,0.024044,0.038411,0.068491", \
				        "0.010341,0.013271,0.016943,0.024039,0.038410,0.068490", \
				        "0.010359,0.013282,0.016942,0.024029,0.038398,0.068491", \
				        "0.010909,0.013677,0.017247,0.024213,0.038585,0.068538", \
				        "0.013400,0.016173,0.019552,0.026118,0.039601,0.068812", \
				        "0.016874,0.020028,0.023347,0.029722,0.042819,0.070283", \
				        "0.022232,0.025060,0.028713,0.035224,0.047543,0.073156", \
				        "0.029599,0.033014,0.036948,0.043880,0.055769,0.079046");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & !RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.050002,0.055541,0.062062,0.073389,0.093339,0.130514", \
				        "0.053457,0.059266,0.065738,0.077096,0.097021,0.134205", \
				        "0.061341,0.067146,0.073697,0.084955,0.104878,0.142069", \
				        "0.077188,0.083126,0.089668,0.101060,0.121046,0.158224", \
				        "0.100967,0.107760,0.114883,0.127215,0.148191,0.185615", \
				        "0.135719,0.143211,0.151479,0.165286,0.187544,0.226017", \
				        "0.189781,0.198325,0.208766,0.224391,0.249284,0.289628", \
				        "0.279221,0.289443,0.300609,0.318872,0.346181,0.388589");
			}
			cell_rise(Timing_X2) {
				values ("0.347867,0.357044,0.367985,0.387305,0.424442,0.496897", \
				        "0.349897,0.359068,0.369964,0.389508,0.426409,0.498871", \
				        "0.354080,0.363278,0.374116,0.393491,0.430435,0.502881", \
				        "0.360807,0.369965,0.381157,0.400453,0.437038,0.509672", \
				        "0.373529,0.382703,0.393494,0.412856,0.449402,0.522017", \
				        "0.394925,0.404124,0.414988,0.434558,0.471473,0.544102", \
				        "0.429717,0.438945,0.449999,0.469690,0.506732,0.579332", \
				        "0.480013,0.489455,0.500671,0.520575,0.557856,0.630838");
			}
			fall_transition(Timing_X2) {
				values ("0.010121,0.013130,0.016800,0.023887,0.038276,0.068336", \
				        "0.010173,0.013108,0.016788,0.023889,0.038292,0.068331", \
				        "0.010185,0.013129,0.016799,0.023917,0.038295,0.068345", \
				        "0.010747,0.013509,0.017090,0.024169,0.038351,0.068323", \
				        "0.013145,0.015947,0.019318,0.026162,0.039640,0.068676", \
				        "0.016424,0.019331,0.023008,0.029806,0.042409,0.070140", \
				        "0.021818,0.024843,0.028549,0.035267,0.047390,0.072916", \
				        "0.027957,0.031197,0.035106,0.041630,0.053164,0.075840");
			}
			rise_transition(Timing_X2) {
				values ("0.017794,0.023116,0.030394,0.045913,0.078837,0.147514", \
				        "0.017766,0.023112,0.030370,0.045913,0.078855,0.147523", \
				        "0.017777,0.023123,0.030370,0.045894,0.078807,0.147488", \
				        "0.017785,0.023112,0.030390,0.045778,0.078966,0.147583", \
				        "0.017772,0.023113,0.030379,0.045796,0.078912,0.147588", \
				        "0.017771,0.023124,0.030414,0.045792,0.078978,0.147590", \
				        "0.017904,0.023257,0.030545,0.046036,0.079017,0.147625", \
				        "0.018375,0.023840,0.031183,0.046697,0.079654,0.148195");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK & RN";
			sdf_cond	   : "(CK == 1'b1) && (RN == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.049922,0.055871,0.062429,0.073848,0.094046,0.131550", \
				        "0.053699,0.059552,0.066116,0.077597,0.097659,0.135163", \
				        "0.061574,0.067439,0.073985,0.085412,0.105533,0.143035", \
				        "0.077448,0.083408,0.089977,0.101507,0.121724,0.159265", \
				        "0.101255,0.108051,0.115432,0.127863,0.148767,0.186508", \
				        "0.136023,0.143442,0.152308,0.166203,0.188821,0.227770", \
				        "0.190485,0.199233,0.209174,0.225782,0.250973,0.291845", \
				        "0.280286,0.290652,0.301893,0.320598,0.348384,0.391217");
			}
			fall_transition(Timing_X2) {
				values ("0.010289,0.013257,0.016972,0.024187,0.038662,0.068696", \
				        "0.010279,0.013242,0.017021,0.024210,0.038663,0.068699", \
				        "0.010300,0.013247,0.016975,0.024184,0.038758,0.068697", \
				        "0.010847,0.013676,0.017323,0.024393,0.038862,0.068725", \
				        "0.013366,0.016230,0.019674,0.026352,0.039930,0.069052", \
				        "0.016784,0.019880,0.023485,0.030071,0.042984,0.070615", \
				        "0.022312,0.025294,0.029131,0.035819,0.048147,0.073571", \
				        "0.028400,0.031742,0.035657,0.042349,0.053927,0.076227");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.006050,0.005971,0.005914,0.005867,0.005838,0.005823", \
				        "0.006043,0.005964,0.005908,0.005866,0.005836,0.005819", \
				        "0.006061,0.005982,0.005926,0.005886,0.005859,0.005846", \
				        "0.006140,0.006062,0.006005,0.005967,0.005938,0.005924", \
				        "0.006426,0.006347,0.006289,0.006244,0.006223,0.006209", \
				        "0.007153,0.007073,0.007015,0.006972,0.006960,0.006944", \
				        "0.008794,0.008716,0.008658,0.008610,0.008591,0.008581", \
				        "0.012267,0.012188,0.012132,0.012082,0.012067,0.012055");
			}
			rise_power(Power_X2) {
				values ("0.008030,0.007974,0.007941,0.007913,0.007901,0.007894", \
				        "0.008020,0.007965,0.007931,0.007911,0.007897,0.007890", \
				        "0.008040,0.007985,0.007952,0.007929,0.007922,0.007920", \
				        "0.008127,0.008072,0.008037,0.008023,0.008013,0.008011", \
				        "0.008412,0.008356,0.008323,0.008302,0.008293,0.008294", \
				        "0.009148,0.009092,0.009057,0.009037,0.009029,0.009025", \
				        "0.010812,0.010756,0.010719,0.010701,0.010690,0.010688", \
				        "0.014353,0.014297,0.014259,0.014236,0.014226,0.014220");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X2) {
				values ("0.009249,0.009192,0.009158,0.009138,0.009123,0.009120", \
				        "0.009239,0.009181,0.009151,0.009134,0.009118,0.009113", \
				        "0.009251,0.009193,0.009163,0.009142,0.009129,0.009125", \
				        "0.009317,0.009258,0.009226,0.009204,0.009188,0.009189", \
				        "0.009580,0.009503,0.009443,0.009420,0.009390,0.009381", \
				        "0.010182,0.010076,0.010005,0.009947,0.009903,0.009880", \
				        "0.011460,0.011320,0.011205,0.011128,0.011048,0.010993", \
				        "0.014002,0.013826,0.013668,0.013497,0.013385,0.013288");
			}
			fall_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & !RN";

			fall_power(Power_X2) {
				values ("0.005625,0.004886,0.003928,0.001987,-0.001883,-0.009589", \
				        "0.005638,0.004886,0.003922,0.001982,-0.001891,-0.009597", \
				        "0.005652,0.004923,0.003956,0.002018,-0.001853,-0.009555", \
				        "0.005836,0.005098,0.004128,0.002181,-0.001676,-0.009377", \
				        "0.006373,0.005627,0.004644,0.002708,-0.001204,-0.008922", \
				        "0.007618,0.006807,0.005830,0.003828,-0.000065,-0.007790", \
				        "0.010355,0.009474,0.008450,0.006408,0.002493,-0.005268", \
				        "0.016052,0.015119,0.013996,0.011886,0.007878,0.000033");
			}
			rise_power(Power_X2) {
				values ("0.003604,0.004320,0.005287,0.007241,0.011139,0.018882", \
				        "0.003594,0.004309,0.005275,0.007223,0.011117,0.018860", \
				        "0.003585,0.004301,0.005264,0.007213,0.011087,0.018828", \
				        "0.003611,0.004331,0.005292,0.007224,0.011097,0.018838", \
				        "0.003818,0.004527,0.005491,0.007413,0.011286,0.019023", \
				        "0.004654,0.005354,0.006307,0.008217,0.012070,0.019792", \
				        "0.006983,0.007661,0.008582,0.010478,0.014302,0.021992", \
				        "0.012283,0.012904,0.013780,0.015625,0.019401,0.027031");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "!CK & RN";

			fall_power(Power_X2) {
				values ("0.005196,0.005195,0.005181,0.005154,0.005156,0.005163", \
				        "0.005198,0.005188,0.005177,0.005149,0.005150,0.005159", \
				        "0.005211,0.005201,0.005192,0.005178,0.005163,0.005172", \
				        "0.005304,0.005293,0.005282,0.005259,0.005269,0.005279", \
				        "0.005576,0.005561,0.005536,0.005496,0.005486,0.005493", \
				        "0.006210,0.006152,0.006124,0.006076,0.006057,0.006050", \
				        "0.007536,0.007426,0.007356,0.007322,0.007264,0.007230", \
				        "0.010126,0.009991,0.009876,0.009774,0.009673,0.009607");
			}
			rise_power(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & !RN";

			fall_power(Power_X2) {
				values ("0.012968,0.012217,0.011233,0.009300,0.005422,-0.002298", \
				        "0.012942,0.012208,0.011212,0.009288,0.005418,-0.002303", \
				        "0.012964,0.012230,0.011242,0.009313,0.005446,-0.002271", \
				        "0.013128,0.012391,0.011392,0.009453,0.005589,-0.002133", \
				        "0.013629,0.012876,0.011862,0.009905,0.006017,-0.001717", \
				        "0.014975,0.014163,0.013128,0.011144,0.007238,-0.000510", \
				        "0.018140,0.017254,0.016241,0.014192,0.010267,0.002482", \
				        "0.024680,0.023751,0.022648,0.020559,0.016542,0.008695");
			}
			rise_power(Power_X2) {
				values ("0.010349,0.011049,0.011994,0.013935,0.017779,0.025522", \
				        "0.010321,0.011021,0.011966,0.013902,0.017751,0.025494", \
				        "0.010295,0.010999,0.011944,0.013874,0.017730,0.025473", \
				        "0.010281,0.010985,0.011928,0.013853,0.017721,0.025460", \
				        "0.010278,0.010982,0.011927,0.013854,0.017725,0.025461", \
				        "0.010379,0.011082,0.012027,0.013958,0.017830,0.025567", \
				        "0.010936,0.011635,0.012587,0.014510,0.018377,0.026115", \
				        "0.012975,0.013674,0.014621,0.016552,0.020408,0.028141");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			when	                 : "CK & RN";

			fall_power(Power_X2) {
				values ("0.008203,0.008187,0.008175,0.008180,0.008185,0.008197", \
				        "0.008199,0.008179,0.008166,0.008181,0.008178,0.008190", \
				        "0.008211,0.008191,0.008177,0.008190,0.008194,0.008203", \
				        "0.008302,0.008279,0.008258,0.008267,0.008270,0.008282", \
				        "0.008572,0.008536,0.008513,0.008504,0.008498,0.008505", \
				        "0.009284,0.009213,0.009184,0.009160,0.009136,0.009138", \
				        "0.010929,0.010824,0.010752,0.010722,0.010676,0.010647", \
				        "0.014119,0.013989,0.013890,0.013813,0.013725,0.013655");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFR_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and drive strength X1
*******************************************************************************************/

cell (SDFFR_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		clear              	: "!RN";
	}

	area               	: 6.916000;

	cell_leakage_power 	: 27275.938281;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000853;
		fall_capacitance	: 0.000798;
		rise_capacitance	: 0.000908;
		fall_capacitance_range		(0.000638, 0.000927);
		rise_capacitance_range		(0.000743, 0.001001);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.145317;
		min_pulse_width_high	: 0.141411;

		internal_power () {

			when      	: "D & !Q & QN & !RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004522,0.005385,0.007444,0.012000");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.007511,0.007964,0.008890,0.011055,0.015794");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004030,0.004442,0.005312,0.007381,0.011948");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004775,0.005180,0.006046,0.008107,0.012654");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004030,0.004442,0.005312,0.007381,0.011948");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004522,0.005385,0.007444,0.012000");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004715,0.005120,0.005990,0.008058,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004522,0.005385,0.007444,0.012000");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004715,0.005120,0.005990,0.008058,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007511,0.007964,0.008890,0.011055,0.015794");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007511,0.007964,0.008890,0.011055,0.015794");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007511,0.007964,0.008890,0.011055,0.015794");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004528,0.005390,0.007451,0.012004");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000933;
		fall_capacitance	: 0.000905;
		rise_capacitance	: 0.000961;
		fall_capacitance_range		(0.000822, 0.000980);
		rise_capacitance_range		(0.000886, 0.001057);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & !SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.111086,-0.105060,-0.115140,-0.132576,-0.174525", \
				        "-0.153872,-0.150513,-0.158761,-0.177480,-0.219364", \
				        "-0.191080,-0.185984,-0.193641,-0.214205,-0.255344", \
				        "-0.251383,-0.247502,-0.252988,-0.273506,-0.315231", \
				        "-0.352081,-0.348174,-0.356695,-0.374081,-0.414001");
			}
			rise_constraint(Hold) {
				values ("-0.069154,-0.043970,-0.051912,-0.052859,-0.074351", \
				        "-0.098858,-0.077270,-0.067866,-0.074005,-0.101725", \
				        "-0.108177,-0.088182,-0.087552,-0.089295,-0.118774", \
				        "-0.111715,-0.083373,-0.084996,-0.089285,-0.122455", \
				        "-0.094827,-0.073754,-0.070596,-0.076873,-0.096295");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.111086,-0.105060,-0.115139,-0.132575,-0.174524", \
				        "-0.153873,-0.150513,-0.158760,-0.177479,-0.219363", \
				        "-0.191081,-0.185984,-0.193641,-0.214204,-0.255342", \
				        "-0.251383,-0.247502,-0.252988,-0.273506,-0.315230", \
				        "-0.352082,-0.348174,-0.356695,-0.374081,-0.414000");
			}
			rise_constraint(Hold) {
				values ("-0.068552,-0.043383,-0.051335,-0.052295,-0.073801", \
				        "-0.098254,-0.076680,-0.067286,-0.073438,-0.101172", \
				        "-0.107573,-0.087591,-0.086970,-0.088726,-0.118219", \
				        "-0.111111,-0.082781,-0.084412,-0.088713,-0.121896", \
				        "-0.094227,-0.073163,-0.070011,-0.076297,-0.095732");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & !SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.134649,0.132326,0.140549,0.162624,0.211192", \
				        "0.180644,0.173121,0.182739,0.204388,0.254322", \
				        "0.215235,0.209128,0.218860,0.241267,0.289217", \
				        "0.275832,0.271824,0.281013,0.301506,0.347315", \
				        "0.383285,0.376282,0.383813,0.404857,0.450519");
			}
			rise_constraint(Setup) {
				values ("0.171010,0.140764,0.140544,0.134608,0.153763", \
				        "0.191464,0.167263,0.162234,0.162851,0.181881", \
				        "0.203922,0.184783,0.173061,0.170416,0.191678", \
				        "0.208511,0.189908,0.172346,0.178643,0.196062", \
				        "0.196278,0.170300,0.161265,0.156667,0.177779");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.134694,0.132367,0.140589,0.162664,0.211233", \
				        "0.180728,0.173197,0.182811,0.204457,0.254385", \
				        "0.215353,0.209235,0.218962,0.241361,0.289302", \
				        "0.276007,0.271986,0.281167,0.301646,0.347436", \
				        "0.383548,0.376528,0.384046,0.405070,0.450703");
			}
			rise_constraint(Setup) {
				values ("0.171011,0.140765,0.140544,0.134609,0.153763", \
				        "0.191465,0.167264,0.162235,0.162852,0.181881", \
				        "0.203924,0.184784,0.173062,0.170417,0.191678", \
				        "0.208513,0.189910,0.179357,0.178645,0.196063", \
				        "0.196281,0.170302,0.161268,0.165532,0.177781");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.003573,0.003564,0.003529,0.003499,0.003565,0.003937,0.005127,0.007913");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.001453;
		fall_capacitance	: 0.001415;
		rise_capacitance	: 0.001490;
		fall_capacitance_range		(0.001398, 0.001421);
		rise_capacitance_range		(0.001465, 0.001496);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.104695;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.046697,-0.066313,-0.073116,-0.070715,-0.053426", \
				        "-0.026422,-0.046246,-0.052914,-0.050793,-0.037635", \
				        "-0.019875,-0.040404,-0.042356,-0.046558,-0.028011", \
				        "-0.012268,-0.030381,-0.034087,-0.038164,-0.018023", \
				        "-0.005155,-0.027547,-0.034045,-0.033993,-0.014994");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.053665,0.074052,0.079966,0.080721,0.064583", \
				        "0.036320,0.056745,0.062764,0.063157,0.047118", \
				        "0.028480,0.049316,0.055070,0.055364,0.038627", \
				        "0.018908,0.039289,0.045210,0.045720,0.028736", \
				        "0.012346,0.032859,0.038685,0.039098,0.022047");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000002,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001497;
		fall_capacitance	: 0.001399;
		rise_capacitance	: 0.001595;
		fall_capacitance_range		(0.001195, 0.001584);
		rise_capacitance_range		(0.001421, 0.001704);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SI";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.069153,-0.068407,-0.072990,-0.097147,-0.136959", \
				        "-0.119126,-0.117221,-0.124675,-0.144556,-0.186685", \
				        "-0.156007,-0.153384,-0.160998,-0.179230,-0.221200", \
				        "-0.217411,-0.209627,-0.215657,-0.234429,-0.278157", \
				        "-0.312506,-0.310510,-0.315825,-0.333552,-0.371066");
			}
			rise_constraint(Hold) {
				values ("-0.058070,-0.031167,-0.037287,-0.043439,-0.061282", \
				        "-0.075091,-0.063364,-0.052138,-0.064033,-0.088104", \
				        "-0.082065,-0.058615,-0.054330,-0.068742,-0.090908", \
				        "-0.080914,-0.049116,-0.047083,-0.055221,-0.077413", \
				        "-0.044757,-0.019358,-0.023303,-0.022263,-0.044215");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & !SI";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.069154,-0.056188,-0.051913,-0.061716,-0.086872", \
				        "-0.110441,-0.090587,-0.090589,-0.092818,-0.127866", \
				        "-0.146443,-0.117161,-0.120195,-0.129265,-0.146087", \
				        "-0.187214,-0.167543,-0.159659,-0.167438,-0.196597", \
				        "-0.263036,-0.245942,-0.234082,-0.238986,-0.276611");
			}
			rise_constraint(Hold) {
				values ("-0.087498,-0.083679,-0.094065,-0.110434,-0.155743", \
				        "-0.098856,-0.097246,-0.105741,-0.125745,-0.167084", \
				        "-0.101797,-0.095428,-0.103876,-0.124275,-0.166580", \
				        "-0.092838,-0.091791,-0.098998,-0.117202,-0.159535", \
				        "-0.060195,-0.057613,-0.064760,-0.083632,-0.126356");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SI";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.113905,0.107029,0.116234,0.138148,0.189142", \
				        "0.164477,0.161496,0.168618,0.191814,0.240801", \
				        "0.209701,0.203150,0.212419,0.233903,0.280012", \
				        "0.276006,0.268709,0.277661,0.297682,0.347436", \
				        "0.383547,0.376527,0.384046,0.405070,0.450702");
			}
			rise_constraint(Setup) {
				values ("0.160623,0.135137,0.128372,0.120605,0.144930", \
				        "0.191469,0.167267,0.155931,0.155632,0.172829", \
				        "0.192629,0.172622,0.166525,0.162963,0.182392", \
				        "0.202401,0.176812,0.165343,0.162798,0.186309", \
				        "0.182178,0.155332,0.145381,0.147812,0.167092");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & !SI";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.181402,0.152023,0.146631,0.148614,0.162598", \
				        "0.218541,0.190659,0.187461,0.184520,0.199990", \
				        "0.243471,0.221283,0.212308,0.207701,0.228833", \
				        "0.288051,0.261980,0.256464,0.257901,0.274122", \
				        "0.365619,0.342555,0.328159,0.333931,0.348899");
			}
			rise_constraint(Setup) {
				values ("0.124257,0.121067,0.129896,0.152119,0.202357", \
				        "0.131907,0.126331,0.137015,0.159247,0.209049", \
				        "0.127666,0.123963,0.133825,0.155511,0.200974", \
				        "0.116754,0.112940,0.121539,0.142990,0.191194", \
				        "0.086938,0.080450,0.089761,0.112370,0.161753");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.001198,0.001185,0.001235,0.001435,0.001977,0.003263,0.006052,0.011824");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.000875;
		fall_capacitance	: 0.000856;
		rise_capacitance	: 0.000895;
		fall_capacitance_range		(0.000807, 0.000870);
		rise_capacitance_range		(0.000879, 0.000902);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SE";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.105844,-0.105060,-0.111627,-0.132576,-0.174525", \
				        "-0.150976,-0.147184,-0.154973,-0.177480,-0.219364", \
				        "-0.191080,-0.185984,-0.193641,-0.209209,-0.255344", \
				        "-0.251383,-0.247502,-0.252988,-0.273506,-0.315231", \
				        "-0.352081,-0.348174,-0.356695,-0.374081,-0.414001");
			}
			rise_constraint(Hold) {
				values ("-0.068552,-0.043383,-0.051335,-0.052295,-0.086320", \
				        "-0.098254,-0.076680,-0.067285,-0.073438,-0.101172", \
				        "-0.107572,-0.087591,-0.086969,-0.088725,-0.118218", \
				        "-0.111111,-0.082781,-0.084412,-0.088713,-0.121896", \
				        "-0.084333,-0.073163,-0.070011,-0.076297,-0.095732");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & SE";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.105845,-0.105060,-0.111627,-0.132575,-0.174523", \
				        "-0.150977,-0.147184,-0.154973,-0.177478,-0.219362", \
				        "-0.191082,-0.185984,-0.193640,-0.209208,-0.255342", \
				        "-0.251384,-0.247503,-0.252988,-0.273506,-0.315229", \
				        "-0.352082,-0.348174,-0.356696,-0.374080,-0.414000");
			}
			rise_constraint(Hold) {
				values ("-0.068553,-0.043384,-0.051336,-0.052296,-0.086321", \
				        "-0.098254,-0.076681,-0.067286,-0.073439,-0.101173", \
				        "-0.107573,-0.087592,-0.086970,-0.088726,-0.118219", \
				        "-0.111112,-0.082782,-0.084413,-0.088714,-0.121897", \
				        "-0.084334,-0.073163,-0.070012,-0.076298,-0.095733");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SE";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132096,0.126736,0.136023,0.159162,0.206815", \
				        "0.175311,0.173197,0.181234,0.202651,0.249857", \
				        "0.215353,0.209235,0.218962,0.239497,0.289302", \
				        "0.276007,0.271986,0.279414,0.301646,0.347436", \
				        "0.383548,0.376528,0.384046,0.405070,0.450703");
			}
			rise_constraint(Setup) {
				values ("0.171010,0.140764,0.140544,0.134608,0.153763", \
				        "0.191464,0.167263,0.162234,0.155629,0.181881", \
				        "0.203922,0.184783,0.173061,0.170416,0.191678", \
				        "0.202393,0.183357,0.172346,0.178643,0.186304", \
				        "0.189223,0.162811,0.161265,0.156667,0.177779");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & SE";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132095,0.126736,0.136022,0.159162,0.206814", \
				        "0.175311,0.173196,0.181234,0.202651,0.249857", \
				        "0.215352,0.209235,0.217326,0.237632,0.284657", \
				        "0.276006,0.271985,0.277661,0.301645,0.347436", \
				        "0.383547,0.376527,0.384045,0.405070,0.450702");
			}
			rise_constraint(Setup) {
				values ("0.171012,0.140765,0.140545,0.134609,0.153763", \
				        "0.191466,0.167265,0.162235,0.155630,0.181882", \
				        "0.203925,0.184785,0.173063,0.170418,0.191679", \
				        "0.202397,0.183360,0.172349,0.178646,0.186307", \
				        "0.189228,0.162815,0.161269,0.156671,0.177782");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.006856,0.006840,0.006813,0.006803,0.006854,0.007244,0.008436,0.011265");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.127214,0.133014,0.143059,0.159520,0.186645,0.232057", \
				        "0.130441,0.136241,0.146245,0.162758,0.189786,0.235097", \
				        "0.135816,0.141614,0.151580,0.168108,0.195206,0.240072", \
				        "0.141880,0.147677,0.157658,0.174278,0.201565,0.246473", \
				        "0.147496,0.153309,0.163293,0.179959,0.207155,0.252255", \
				        "0.150834,0.156642,0.166663,0.183317,0.210519,0.255703", \
				        "0.146969,0.152811,0.162992,0.179663,0.207008,0.252555", \
				        "0.124442,0.130386,0.140727,0.157684,0.185279,0.230880");
			}
			cell_rise(Timing_X1) {
				values ("0.150000,0.156443,0.168317,0.189675,0.229194,0.305506", \
				        "0.153203,0.159648,0.171502,0.192940,0.232245,0.308647", \
				        "0.158600,0.165044,0.177094,0.198497,0.238065,0.313955", \
				        "0.165068,0.171512,0.183558,0.205018,0.244698,0.320484", \
				        "0.171925,0.178379,0.190257,0.211569,0.251356,0.328131", \
				        "0.176231,0.182676,0.194972,0.216432,0.256086,0.332062", \
				        "0.172947,0.179391,0.191153,0.213183,0.252625,0.329105", \
				        "0.147670,0.154121,0.165833,0.188019,0.227446,0.303521");
			}
			fall_transition(Timing_X1) {
				values ("0.023008,0.025457,0.029816,0.037723,0.052662,0.081868", \
				        "0.023010,0.025460,0.029816,0.037716,0.052661,0.081809", \
				        "0.023027,0.025467,0.029826,0.037748,0.052665,0.081906", \
				        "0.023038,0.025473,0.029841,0.037790,0.052693,0.081909", \
				        "0.023075,0.025521,0.029874,0.037803,0.052694,0.081963", \
				        "0.023184,0.025616,0.029959,0.037897,0.052751,0.081951", \
				        "0.023570,0.025993,0.030323,0.038216,0.053040,0.082121", \
				        "0.024857,0.027212,0.031427,0.039175,0.053808,0.082675");
			}
			rise_transition(Timing_X1) {
				values ("0.023257,0.027449,0.035594,0.051905,0.085696,0.156091", \
				        "0.023266,0.027445,0.035595,0.051904,0.085667,0.156028", \
				        "0.023257,0.027451,0.035592,0.051895,0.085670,0.156089", \
				        "0.023267,0.027448,0.035588,0.051899,0.085670,0.156069", \
				        "0.023278,0.027471,0.035629,0.051892,0.085699,0.156089", \
				        "0.023270,0.027448,0.035589,0.051904,0.085631,0.156083", \
				        "0.023268,0.027453,0.035603,0.051926,0.085708,0.156040", \
				        "0.023305,0.027499,0.035636,0.051952,0.085745,0.156089");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.130911,0.136907,0.147072,0.163189,0.188909,0.232039", \
				        "0.134804,0.140776,0.151066,0.167026,0.192760,0.235882", \
				        "0.141493,0.147466,0.157545,0.173618,0.199323,0.242446", \
				        "0.152994,0.158964,0.169144,0.185133,0.210661,0.254023", \
				        "0.175294,0.181255,0.191467,0.207587,0.233201,0.275950", \
				        "0.212657,0.219001,0.229598,0.246372,0.272719,0.316158", \
				        "0.269303,0.276199,0.287359,0.304865,0.332332,0.377314", \
				        "0.355891,0.363173,0.374670,0.392454,0.421608,0.468092");
			}
			fall_transition(Timing_X1) {
				values ("0.023512,0.025892,0.029675,0.036258,0.049706,0.078277", \
				        "0.023519,0.025894,0.029670,0.036280,0.049642,0.078222", \
				        "0.023520,0.025896,0.029679,0.036268,0.049735,0.078268", \
				        "0.023521,0.025897,0.029672,0.036149,0.049523,0.078283", \
				        "0.023737,0.026079,0.029798,0.036206,0.049621,0.078268", \
				        "0.026686,0.028775,0.032071,0.038089,0.051258,0.079117", \
				        "0.031415,0.033113,0.035771,0.041162,0.054156,0.081674", \
				        "0.037635,0.038569,0.040127,0.044900,0.058042,0.085684");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.229818,0.235606,0.245684,0.262687,0.290183,0.336068", \
				        "0.233510,0.239321,0.249362,0.266282,0.293830,0.339696", \
				        "0.241531,0.247345,0.257187,0.274102,0.301598,0.347437", \
				        "0.255073,0.260884,0.270834,0.287808,0.315225,0.361063", \
				        "0.273900,0.279718,0.289645,0.306119,0.333362,0.379237", \
				        "0.296815,0.302632,0.313377,0.330434,0.357869,0.403532", \
				        "0.328455,0.334238,0.344099,0.361896,0.389487,0.434852", \
				        "0.370630,0.376415,0.386288,0.403481,0.431600,0.476406");
			}
			fall_transition(Timing_X1) {
				values ("0.023070,0.025525,0.029941,0.038063,0.053171,0.082609", \
				        "0.023049,0.025511,0.029908,0.038007,0.053194,0.082598", \
				        "0.023033,0.025496,0.029878,0.037993,0.053156,0.082562", \
				        "0.023023,0.025483,0.029853,0.037963,0.053140,0.082523", \
				        "0.023006,0.025475,0.029854,0.037906,0.053103,0.082521", \
				        "0.022995,0.025446,0.029830,0.037896,0.053049,0.082490", \
				        "0.022923,0.025352,0.029711,0.037703,0.052779,0.081844", \
				        "0.022918,0.025347,0.029710,0.037697,0.052897,0.081795");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004852,0.004840,0.004824,0.004812,0.004799,0.004796", \
				        "0.004847,0.004835,0.004821,0.004807,0.004795,0.004793", \
				        "0.004865,0.004853,0.004838,0.004824,0.004817,0.004819", \
				        "0.004939,0.004926,0.004911,0.004905,0.004907,0.004907", \
				        "0.005179,0.005165,0.005150,0.005139,0.005131,0.005136", \
				        "0.005807,0.005794,0.005778,0.005765,0.005755,0.005756", \
				        "0.007259,0.007246,0.007228,0.007213,0.007199,0.007211", \
				        "0.010391,0.010374,0.010352,0.010333,0.010313,0.010301");
			}
			rise_power(Power_X1) {
				values ("0.005172,0.005164,0.005156,0.005150,0.005142,0.005140", \
				        "0.005168,0.005161,0.005151,0.005146,0.005141,0.005141", \
				        "0.005182,0.005174,0.005169,0.005161,0.005167,0.005170", \
				        "0.005253,0.005245,0.005240,0.005232,0.005238,0.005234", \
				        "0.005493,0.005485,0.005477,0.005463,0.005460,0.005471", \
				        "0.006098,0.006090,0.006092,0.006087,0.006087,0.006085", \
				        "0.007507,0.007500,0.007490,0.007494,0.007487,0.007504", \
				        "0.010506,0.010498,0.010487,0.010497,0.010491,0.010491");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			fall_power(Power_X1) {
				values ("0.005730,0.005720,0.005705,0.005691,0.005683,0.005683", \
				        "0.005723,0.005713,0.005701,0.005684,0.005679,0.005679", \
				        "0.005734,0.005724,0.005708,0.005694,0.005688,0.005688", \
				        "0.005768,0.005759,0.005746,0.005735,0.005728,0.005727", \
				        "0.005894,0.005885,0.005866,0.005843,0.005834,0.005838", \
				        "0.006152,0.006142,0.006145,0.006131,0.006120,0.006119", \
				        "0.006673,0.006664,0.006646,0.006645,0.006646,0.006643", \
				        "0.008579,0.008547,0.008499,0.008440,0.008400,0.008366");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.208148,0.212265,0.219769,0.232677,0.255036,0.294981", \
				        "0.211360,0.215472,0.222956,0.235943,0.258020,0.297970", \
				        "0.216748,0.220861,0.228546,0.241619,0.263826,0.303360", \
				        "0.223216,0.227336,0.235018,0.248134,0.270456,0.309927", \
				        "0.230040,0.234150,0.241665,0.254716,0.277361,0.317945", \
				        "0.234389,0.238505,0.246434,0.259442,0.281927,0.321487", \
				        "0.231106,0.235223,0.242618,0.256299,0.278551,0.318516", \
				        "0.205879,0.209996,0.217340,0.231181,0.253394,0.293017");
			}
			cell_rise(Timing_X1) {
				values ("0.138995,0.143580,0.152944,0.171565,0.209231,0.284760", \
				        "0.142218,0.146804,0.156156,0.174811,0.212301,0.287813", \
				        "0.147592,0.152171,0.161480,0.180209,0.217706,0.292693", \
				        "0.153658,0.158240,0.167542,0.186381,0.224090,0.299053", \
				        "0.159209,0.163793,0.173155,0.191875,0.229441,0.304473", \
				        "0.162538,0.167120,0.176488,0.195273,0.232852,0.308077", \
				        "0.158349,0.162922,0.172312,0.191190,0.228799,0.304301", \
				        "0.134904,0.139472,0.148770,0.167727,0.205275,0.280548");
			}
			fall_transition(Timing_X1) {
				values ("0.017074,0.019153,0.023099,0.030502,0.044948,0.075541", \
				        "0.017064,0.019154,0.023099,0.030501,0.044921,0.075429", \
				        "0.017072,0.019158,0.023098,0.030537,0.044923,0.075543", \
				        "0.017064,0.019160,0.023089,0.030531,0.044924,0.075486", \
				        "0.017076,0.019152,0.023103,0.030518,0.044920,0.075481", \
				        "0.017068,0.019160,0.023088,0.030468,0.044905,0.075498", \
				        "0.017067,0.019147,0.023099,0.030543,0.044929,0.075441", \
				        "0.017076,0.019168,0.023092,0.030530,0.044933,0.075471");
			}
			rise_transition(Timing_X1) {
				values ("0.017900,0.022133,0.030947,0.048882,0.084764,0.156777", \
				        "0.017898,0.022134,0.030956,0.048878,0.084793,0.156605", \
				        "0.017918,0.022125,0.030947,0.048890,0.084800,0.156538", \
				        "0.017917,0.022119,0.030946,0.048905,0.084765,0.156544", \
				        "0.017867,0.022187,0.031055,0.048855,0.084791,0.156684", \
				        "0.017934,0.022126,0.030972,0.048858,0.084735,0.156743", \
				        "0.017980,0.022151,0.030964,0.048863,0.084745,0.156699", \
				        "0.018144,0.022246,0.031017,0.048869,0.084794,0.156682");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.142762,0.147388,0.156688,0.175579,0.213319,0.288803", \
				        "0.146658,0.151252,0.160675,0.179434,0.217129,0.292637", \
				        "0.153343,0.157942,0.167160,0.186006,0.223733,0.299214", \
				        "0.164846,0.169439,0.178756,0.197408,0.234973,0.310782", \
				        "0.186866,0.191445,0.200796,0.219607,0.257231,0.332409", \
				        "0.222578,0.227160,0.236420,0.255513,0.293319,0.368591", \
				        "0.276185,0.280785,0.289922,0.308846,0.346618,0.421936", \
				        "0.357377,0.362154,0.371267,0.389533,0.427829,0.502859");
			}
			rise_transition(Timing_X1) {
				values ("0.017923,0.022227,0.031068,0.048906,0.084777,0.156573", \
				        "0.017945,0.022202,0.031074,0.048863,0.084731,0.156631", \
				        "0.017942,0.022212,0.031072,0.048902,0.084760,0.156563", \
				        "0.017945,0.022203,0.031074,0.048847,0.084756,0.156583", \
				        "0.017942,0.022248,0.031102,0.048853,0.084772,0.156578", \
				        "0.018324,0.022426,0.031155,0.048929,0.084776,0.156577", \
				        "0.019140,0.022963,0.031359,0.048979,0.084815,0.156524", \
				        "0.020858,0.024127,0.031873,0.049093,0.084941,0.156749");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.241779,0.246372,0.255692,0.274658,0.312370,0.387890", \
				        "0.245433,0.250001,0.259408,0.278297,0.316131,0.391625", \
				        "0.253301,0.257879,0.267230,0.286178,0.323958,0.399451", \
				        "0.266847,0.271424,0.280896,0.299888,0.337584,0.413128", \
				        "0.285653,0.290221,0.299416,0.318219,0.355695,0.431282", \
				        "0.308676,0.313265,0.323415,0.342377,0.380085,0.455467", \
				        "0.340468,0.345063,0.354214,0.374175,0.412343,0.487753", \
				        "0.382636,0.387221,0.396383,0.415765,0.454577,0.528079");
			}
			rise_transition(Timing_X1) {
				values ("0.017860,0.022260,0.031079,0.048866,0.084728,0.156549", \
				        "0.017864,0.022254,0.031079,0.048878,0.084766,0.156554", \
				        "0.017862,0.022264,0.031077,0.048852,0.084768,0.156576", \
				        "0.017864,0.022262,0.031081,0.048883,0.084739,0.156550", \
				        "0.017847,0.022259,0.031082,0.048868,0.084754,0.156571", \
				        "0.017894,0.022257,0.031101,0.048891,0.084750,0.156550", \
				        "0.017854,0.022246,0.031076,0.048885,0.084789,0.156622", \
				        "0.017851,0.022253,0.031074,0.048882,0.084838,0.156639");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005172,0.005164,0.005156,0.005150,0.005142,0.005140", \
				        "0.005168,0.005161,0.005151,0.005146,0.005141,0.005141", \
				        "0.005182,0.005174,0.005169,0.005161,0.005167,0.005170", \
				        "0.005253,0.005245,0.005240,0.005232,0.005238,0.005234", \
				        "0.005493,0.005485,0.005477,0.005463,0.005460,0.005471", \
				        "0.006098,0.006090,0.006092,0.006087,0.006087,0.006085", \
				        "0.007507,0.007500,0.007490,0.007494,0.007487,0.007504", \
				        "0.010506,0.010498,0.010487,0.010497,0.010491,0.010491");
			}
			rise_power(Power_X1) {
				values ("0.004852,0.004840,0.004824,0.004812,0.004799,0.004796", \
				        "0.004847,0.004835,0.004821,0.004807,0.004795,0.004793", \
				        "0.004865,0.004853,0.004838,0.004824,0.004817,0.004819", \
				        "0.004939,0.004926,0.004911,0.004905,0.004907,0.004907", \
				        "0.005179,0.005165,0.005150,0.005139,0.005131,0.005136", \
				        "0.005807,0.005794,0.005778,0.005765,0.005755,0.005756", \
				        "0.007259,0.007246,0.007228,0.007213,0.007199,0.007211", \
				        "0.010391,0.010374,0.010352,0.010333,0.010313,0.010301");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X1) {
				values ("0.005730,0.005720,0.005705,0.005691,0.005683,0.005683", \
				        "0.005723,0.005713,0.005701,0.005684,0.005679,0.005679", \
				        "0.005734,0.005724,0.005708,0.005694,0.005688,0.005688", \
				        "0.005768,0.005759,0.005746,0.005735,0.005728,0.005727", \
				        "0.005894,0.005885,0.005866,0.005843,0.005834,0.005838", \
				        "0.006152,0.006142,0.006145,0.006131,0.006120,0.006119", \
				        "0.006673,0.006664,0.006646,0.006645,0.006646,0.006643", \
				        "0.008579,0.008547,0.008499,0.008440,0.008400,0.008366");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFR_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low reset, and drive strength X2
*******************************************************************************************/

cell (SDFFR_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		clear              	: "!RN";
	}

	area               	: 6.916000;

	cell_leakage_power 	: 30058.676875;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000853;
		fall_capacitance	: 0.000798;
		rise_capacitance	: 0.000908;
		fall_capacitance_range		(0.000638, 0.000927);
		rise_capacitance_range		(0.000743, 0.001001);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.145317;
		min_pulse_width_high	: 0.149224;

		internal_power () {

			when      	: "D & !Q & QN & !RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004121,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004121,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004523,0.005385,0.007444,0.011999");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.007516,0.007973,0.008898,0.011064,0.015806");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004711,0.005118,0.005990,0.008058,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004782,0.005193,0.006049,0.008112,0.012658");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004711,0.005118,0.005990,0.008058,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004523,0.005385,0.007444,0.011999");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004711,0.005118,0.005990,0.008058,0.012622");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.004121,0.004528,0.005390,0.007451,0.012004");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & RN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004117,0.004523,0.005385,0.007444,0.011999");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004032,0.004442,0.005313,0.007381,0.011947");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007516,0.007973,0.008898,0.011064,0.015806");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007516,0.007973,0.008898,0.011064,0.015806");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & !RN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.007516,0.007973,0.008898,0.011064,0.015806");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !RN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.004121,0.004528,0.005390,0.007451,0.012004");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000933;
		fall_capacitance	: 0.000905;
		rise_capacitance	: 0.000961;
		fall_capacitance_range		(0.000822, 0.000980);
		rise_capacitance_range		(0.000886, 0.001057);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & !SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.111503,-0.105018,-0.114785,-0.131783,-0.179522", \
				        "-0.151498,-0.150617,-0.158552,-0.176832,-0.218216", \
				        "-0.191686,-0.186182,-0.193536,-0.213673,-0.254299", \
				        "-0.252061,-0.247826,-0.253030,-0.273141,-0.314354", \
				        "-0.352812,-0.348623,-0.356914,-0.373935,-0.413364");
			}
			rise_constraint(Hold) {
				values ("-0.069519,-0.055360,-0.049647,-0.056279,-0.074649", \
				        "-0.098026,-0.075245,-0.079503,-0.086135,-0.101351", \
				        "-0.106172,-0.084936,-0.082819,-0.091358,-0.117715", \
				        "-0.107414,-0.094567,-0.087177,-0.090077,-0.120101", \
				        "-0.095830,-0.074211,-0.070383,-0.075197,-0.108597");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "RN & !SE & SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.111504,-0.105018,-0.114784,-0.131782,-0.179520", \
				        "-0.151499,-0.150617,-0.158551,-0.176831,-0.218215", \
				        "-0.191687,-0.186182,-0.193536,-0.213672,-0.254298", \
				        "-0.252062,-0.247826,-0.253030,-0.273140,-0.314353", \
				        "-0.352813,-0.348623,-0.356915,-0.373934,-0.413363");
			}
			rise_constraint(Hold) {
				values ("-0.069519,-0.055360,-0.049647,-0.056279,-0.074649", \
				        "-0.098025,-0.075245,-0.079502,-0.086134,-0.101351", \
				        "-0.106172,-0.084936,-0.082818,-0.091358,-0.117715", \
				        "-0.107414,-0.094566,-0.087176,-0.090077,-0.120101", \
				        "-0.095830,-0.074211,-0.070383,-0.075197,-0.108596");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & !SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.137941,0.130660,0.138918,0.160993,0.209526", \
				        "0.177246,0.172953,0.181359,0.203407,0.251739", \
				        "0.216059,0.210793,0.217950,0.241121,0.290396", \
				        "0.277839,0.271749,0.278265,0.299759,0.347232", \
				        "0.383130,0.375601,0.382245,0.405021,0.448390");
			}
			rise_constraint(Setup) {
				values ("0.171720,0.141307,0.134937,0.135026,0.154139", \
				        "0.192550,0.168182,0.163069,0.156339,0.182507", \
				        "0.205342,0.186036,0.174189,0.171397,0.192513", \
				        "0.210453,0.185090,0.173933,0.180063,0.197252", \
				        "0.191916,0.165274,0.163583,0.158734,0.179533");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "RN & !SE & SI";
			sdf_cond	   : "(RN == 1'b1) && (SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.137941,0.130660,0.138918,0.160993,0.209526", \
				        "0.177246,0.172953,0.181359,0.203407,0.251739", \
				        "0.216059,0.210793,0.217950,0.241121,0.290396", \
				        "0.277839,0.271749,0.278265,0.299759,0.347232", \
				        "0.383130,0.375601,0.382245,0.405021,0.448390");
			}
			rise_constraint(Setup) {
				values ("0.171721,0.141308,0.134938,0.135026,0.154139", \
				        "0.192551,0.168183,0.163070,0.156340,0.182508", \
				        "0.205344,0.186037,0.174190,0.171398,0.192514", \
				        "0.210456,0.185092,0.173934,0.180065,0.197253", \
				        "0.191919,0.165277,0.163586,0.158736,0.179535");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.003573,0.003564,0.003529,0.003499,0.003565,0.003937,0.005127,0.007913");
			}

		}
	}

	pin (RN) {

		direction		: input;
		capacitance		: 0.001453;
		fall_capacitance	: 0.001415;
		rise_capacitance	: 0.001490;
		fall_capacitance_range		(0.001398, 0.001421);
		rise_capacitance_range		(0.001465, 0.001496);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.112507;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.046744,-0.066218,-0.072865,-0.070148,-0.054983", \
				        "-0.026264,-0.045948,-0.052463,-0.052610,-0.036270", \
				        "-0.019510,-0.034942,-0.041701,-0.045600,-0.026454", \
				        "-0.011503,-0.029482,-0.033040,-0.036822,-0.016095", \
				        "-0.003626,-0.025892,-0.032249,-0.031913,-0.015671");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.053665,0.074052,0.079966,0.080721,0.064583", \
				        "0.036320,0.056869,0.062764,0.063157,0.046982", \
				        "0.028480,0.049316,0.055070,0.055364,0.038627", \
				        "0.018908,0.039289,0.045210,0.045720,0.028736", \
				        "0.011857,0.032364,0.038057,0.038581,0.021502");
			}
		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.001858,0.001996,0.002494,0.003758,0.006586");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000012,0.000001,0.000000,-0.000001,-0.000004");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000019,0.000005,0.000004,0.000002,0.000000");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001497;
		fall_capacitance	: 0.001399;
		rise_capacitance	: 0.001595;
		fall_capacitance_range		(0.001195, 0.001584);
		rise_capacitance_range		(0.001421, 0.001704);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SI";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.069403,-0.068240,-0.072509,-0.096270,-0.135624", \
				        "-0.119533,-0.117221,-0.124373,-0.143836,-0.185485", \
				        "-0.156497,-0.153488,-0.160811,-0.178625,-0.220104", \
				        "-0.217995,-0.209857,-0.215615,-0.233990,-0.277228", \
				        "-0.313153,-0.305494,-0.315971,-0.333344,-0.370377");
			}
			rise_constraint(Hold) {
				values ("-0.059085,-0.031023,-0.035647,-0.038615,-0.062154", \
				        "-0.086492,-0.061978,-0.049304,-0.067372,-0.088307", \
				        "-0.080760,-0.056056,-0.066547,-0.061456,-0.090453", \
				        "-0.077313,-0.060997,-0.059252,-0.056657,-0.090494", \
				        "-0.036610,-0.020526,-0.012118,-0.021258,-0.057152");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & !SI";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.079953,-0.055360,-0.049646,-0.056278,-0.087144", \
				        "-0.109559,-0.088512,-0.094601,-0.095515,-0.127441", \
				        "-0.144289,-0.113815,-0.115362,-0.121261,-0.158609", \
				        "-0.182667,-0.161705,-0.161642,-0.168057,-0.194118", \
				        "-0.263620,-0.246003,-0.245177,-0.250498,-0.280079");
			}
			rise_constraint(Hold) {
				values ("-0.087822,-0.083564,-0.093647,-0.114027,-0.154438", \
				        "-0.099190,-0.097184,-0.105386,-0.124983,-0.165852", \
				        "-0.102110,-0.095365,-0.103542,-0.123554,-0.165400", \
				        "-0.093078,-0.091728,-0.098695,-0.116545,-0.158438", \
				        "-0.060310,-0.057498,-0.064457,-0.083037,-0.129667");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SI";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.112303,0.108416,0.116346,0.140188,0.187610", \
				        "0.166551,0.161391,0.168881,0.192675,0.238259", \
				        "0.210477,0.204777,0.211477,0.233732,0.281175", \
				        "0.274814,0.270128,0.278265,0.299759,0.347232", \
				        "0.383129,0.377456,0.382244,0.405020,0.448390");
			}
			rise_constraint(Setup) {
				values ("0.161290,0.130009,0.128831,0.120980,0.145285", \
				        "0.187118,0.168186,0.156745,0.156342,0.173434", \
				        "0.194007,0.173833,0.161069,0.163923,0.183206", \
				        "0.198182,0.178523,0.166908,0.164175,0.187478", \
				        "0.177773,0.157773,0.147655,0.149858,0.158108");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & !SI";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.182154,0.152607,0.147153,0.149074,0.162995", \
				        "0.214296,0.191661,0.188380,0.185313,0.200658", \
				        "0.245037,0.222661,0.213561,0.208787,0.229752", \
				        "0.290264,0.263964,0.258301,0.259530,0.275479", \
				        "0.368835,0.338010,0.330915,0.327532,0.350987");
			}
			rise_constraint(Setup) {
				values ("0.127686,0.122319,0.129889,0.150590,0.200760", \
				        "0.134468,0.126707,0.137688,0.156902,0.206807", \
				        "0.126753,0.123573,0.133800,0.154300,0.202798", \
				        "0.117504,0.112893,0.122074,0.142604,0.192199", \
				        "0.086145,0.080601,0.090709,0.110380,0.161460");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.001198,0.001185,0.001235,0.001435,0.001977,0.003263,0.006052,0.011824");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.000875;
		fall_capacitance	: 0.000856;
		rise_capacitance	: 0.000895;
		fall_capacitance_range		(0.000807, 0.000870);
		rise_capacitance_range		(0.000879, 0.000902);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & RN & SE";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.106241,-0.105018,-0.111262,-0.131783,-0.173251", \
				        "-0.151499,-0.147278,-0.154754,-0.176832,-0.218216", \
				        "-0.188487,-0.182550,-0.193536,-0.213672,-0.254299", \
				        "-0.252061,-0.243607,-0.253030,-0.273141,-0.314354", \
				        "-0.352812,-0.348623,-0.356915,-0.373934,-0.413364");
			}
			rise_constraint(Hold) {
				values ("-0.069519,-0.055360,-0.049647,-0.056279,-0.074649", \
				        "-0.098025,-0.075245,-0.079502,-0.076753,-0.101351", \
				        "-0.106172,-0.084935,-0.082818,-0.091358,-0.117715", \
				        "-0.107414,-0.094566,-0.087176,-0.090077,-0.120100", \
				        "-0.095830,-0.063473,-0.070383,-0.075197,-0.091448");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & RN & SE";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.106241,-0.105018,-0.111261,-0.131781,-0.173249", \
				        "-0.151499,-0.147278,-0.154754,-0.176831,-0.218214", \
				        "-0.188488,-0.182550,-0.193536,-0.213672,-0.254298", \
				        "-0.252062,-0.243607,-0.253030,-0.273140,-0.314352", \
				        "-0.352813,-0.348623,-0.356915,-0.373934,-0.413363");
			}
			rise_constraint(Hold) {
				values ("-0.069520,-0.055362,-0.049648,-0.056281,-0.074651", \
				        "-0.098027,-0.075246,-0.079504,-0.076754,-0.101353", \
				        "-0.106173,-0.084937,-0.082820,-0.091360,-0.117717", \
				        "-0.107415,-0.094568,-0.087178,-0.090079,-0.120102", \
				        "-0.095831,-0.063475,-0.070384,-0.075198,-0.091450");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & RN & SE";
			sdf_cond	   : "(D == 1'b0) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132814,0.127880,0.135908,0.157525,0.205143", \
				        "0.177246,0.172953,0.181359,0.203407,0.251739", \
				        "0.216059,0.209289,0.217950,0.241121,0.285785", \
				        "0.277839,0.271749,0.278265,0.299759,0.347232", \
				        "0.383130,0.377457,0.382245,0.405021,0.453704");
			}
			rise_constraint(Setup) {
				values ("0.171721,0.141307,0.141045,0.135026,0.154139", \
				        "0.192550,0.168182,0.163070,0.156339,0.182507", \
				        "0.205343,0.179932,0.174189,0.171398,0.192513", \
				        "0.204315,0.178518,0.173933,0.172117,0.187474", \
				        "0.191917,0.165275,0.155616,0.158735,0.179534");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & RN & SE";
			sdf_cond	   : "(D == 1'b1) && (RN == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132813,0.127880,0.135908,0.157525,0.205143", \
				        "0.177245,0.172952,0.181358,0.203407,0.251739", \
				        "0.216058,0.207784,0.217950,0.237426,0.285785", \
				        "0.277838,0.271748,0.278264,0.299758,0.347231", \
				        "0.383128,0.377455,0.384213,0.405019,0.453702");
			}
			rise_constraint(Setup) {
				values ("0.171722,0.141308,0.134938,0.135027,0.154139", \
				        "0.192552,0.168184,0.163071,0.156340,0.182508", \
				        "0.205345,0.179934,0.174191,0.171399,0.192514", \
				        "0.204318,0.178520,0.173935,0.172119,0.187476", \
				        "0.191921,0.165279,0.155619,0.158738,0.179536");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.006856,0.006840,0.006813,0.006803,0.006854,0.007244,0.008436,0.011265");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.122057,0.132425,0.143604,0.161041,0.189123,0.234576", \
				        "0.125282,0.135644,0.146874,0.164405,0.192127,0.237612", \
				        "0.130657,0.141019,0.152206,0.169816,0.197606,0.242553", \
				        "0.136762,0.147160,0.158287,0.175916,0.204109,0.249064", \
				        "0.142403,0.152732,0.163902,0.181559,0.209669,0.254815", \
				        "0.145756,0.156094,0.167297,0.184976,0.212858,0.258303", \
				        "0.141947,0.152362,0.163622,0.181317,0.209469,0.254888", \
				        "0.119626,0.130207,0.141626,0.159521,0.187930,0.233549");
			}
			cell_rise(Timing_X2) {
				values ("0.141810,0.152908,0.165463,0.187154,0.226103,0.300261", \
				        "0.144534,0.155628,0.168623,0.190470,0.229086,0.303317", \
				        "0.150380,0.161470,0.174070,0.196112,0.234942,0.308520", \
				        "0.156899,0.167992,0.180474,0.202616,0.241746,0.315891", \
				        "0.163731,0.174828,0.187377,0.209119,0.248235,0.322765", \
				        "0.168079,0.179172,0.191641,0.213966,0.252982,0.326986", \
				        "0.164837,0.175924,0.188390,0.210673,0.249744,0.323834", \
				        "0.139569,0.150669,0.163112,0.185617,0.224622,0.298475");
			}
			fall_transition(Timing_X2) {
				values ("0.019513,0.023895,0.028628,0.036645,0.051241,0.079331", \
				        "0.019513,0.023896,0.028628,0.036691,0.051199,0.079332", \
				        "0.019517,0.023900,0.028640,0.036632,0.051172,0.079359", \
				        "0.019522,0.023909,0.028647,0.036669,0.051297,0.079417", \
				        "0.019565,0.023945,0.028672,0.036674,0.051230,0.079387", \
				        "0.019628,0.024013,0.028750,0.036755,0.051310,0.079388", \
				        "0.019980,0.024358,0.029085,0.037054,0.051568,0.079611", \
				        "0.021223,0.025520,0.030144,0.038002,0.052371,0.080166");
			}
			rise_transition(Timing_X2) {
				values ("0.016426,0.023138,0.031259,0.046922,0.079100,0.146733", \
				        "0.016439,0.023141,0.031255,0.046976,0.079118,0.146636", \
				        "0.016439,0.023131,0.031255,0.046959,0.079131,0.146750", \
				        "0.016437,0.023137,0.031255,0.046984,0.079113,0.146759", \
				        "0.016425,0.023153,0.031289,0.046927,0.079142,0.146751", \
				        "0.016441,0.023140,0.031249,0.046971,0.079107,0.146734", \
				        "0.016432,0.023140,0.031270,0.046976,0.079136,0.146642", \
				        "0.016459,0.023173,0.031297,0.047033,0.079162,0.146707");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.125307,0.135913,0.147386,0.164958,0.191462,0.234400", \
				        "0.129204,0.139804,0.151561,0.168822,0.195338,0.238244", \
				        "0.135923,0.146524,0.157924,0.175428,0.201909,0.244849", \
				        "0.147450,0.158049,0.169507,0.187039,0.213359,0.256361", \
				        "0.169869,0.180436,0.191922,0.209529,0.235867,0.278533", \
				        "0.207564,0.218879,0.230938,0.249232,0.276262,0.319665", \
				        "0.264541,0.277021,0.290115,0.309164,0.337412,0.382255", \
				        "0.352150,0.366150,0.380083,0.399471,0.429242,0.475613");
			}
			fall_transition(Timing_X2) {
				values ("0.019713,0.024437,0.029034,0.035655,0.048320,0.075356", \
				        "0.019713,0.024441,0.029044,0.035657,0.048189,0.075278", \
				        "0.019709,0.024439,0.029035,0.035661,0.048301,0.075336", \
				        "0.019712,0.024442,0.029038,0.035643,0.048085,0.075339", \
				        "0.019905,0.024587,0.029146,0.035665,0.048127,0.075308", \
				        "0.023070,0.027668,0.031765,0.037652,0.049748,0.076282", \
				        "0.028367,0.032857,0.036243,0.041160,0.052903,0.078945", \
				        "0.036873,0.040150,0.042029,0.045455,0.057016,0.083065");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.224695,0.235093,0.246258,0.264066,0.292348,0.338263", \
				        "0.228361,0.238748,0.249973,0.267649,0.296075,0.341971", \
				        "0.236288,0.246650,0.257771,0.275545,0.303852,0.349719", \
				        "0.249829,0.260209,0.271334,0.289144,0.317219,0.363343", \
				        "0.268648,0.279025,0.290004,0.307613,0.335602,0.381423", \
				        "0.291663,0.302040,0.313100,0.331881,0.360012,0.405784", \
				        "0.323376,0.333730,0.344778,0.363359,0.391824,0.437261", \
				        "0.365398,0.375885,0.386752,0.405098,0.433916,0.478874");
			}
			fall_transition(Timing_X2) {
				values ("0.019586,0.023995,0.028775,0.036933,0.051729,0.080096", \
				        "0.019567,0.023967,0.028731,0.036867,0.051756,0.080104", \
				        "0.019569,0.023950,0.028714,0.036868,0.051715,0.080067", \
				        "0.019560,0.023946,0.028699,0.036839,0.051644,0.080035", \
				        "0.019549,0.023934,0.028685,0.036782,0.051606,0.080033", \
				        "0.019528,0.023920,0.028682,0.036785,0.051599,0.079964", \
				        "0.019485,0.023852,0.028583,0.036632,0.051342,0.079403", \
				        "0.019460,0.023846,0.028559,0.036609,0.051391,0.079338");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005441,0.005347,0.005287,0.005227,0.005192,0.005179", \
				        "0.005436,0.005342,0.005283,0.005225,0.005194,0.005177", \
				        "0.005454,0.005360,0.005299,0.005252,0.005213,0.005205", \
				        "0.005528,0.005434,0.005374,0.005327,0.005302,0.005291", \
				        "0.005765,0.005675,0.005610,0.005550,0.005520,0.005508", \
				        "0.006398,0.006302,0.006240,0.006189,0.006150,0.006144", \
				        "0.007859,0.007761,0.007696,0.007638,0.007595,0.007584", \
				        "0.011022,0.010914,0.010838,0.010769,0.010710,0.010680");
			}
			rise_power(Power_X2) {
				values ("0.005683,0.005621,0.005584,0.005549,0.005527,0.005503", \
				        "0.005668,0.005606,0.005578,0.005545,0.005518,0.005514", \
				        "0.005693,0.005630,0.005594,0.005566,0.005550,0.005524", \
				        "0.005765,0.005703,0.005663,0.005635,0.005626,0.005639", \
				        "0.006004,0.005942,0.005904,0.005865,0.005842,0.005824", \
				        "0.006611,0.006549,0.006509,0.006487,0.006471,0.006454", \
				        "0.008021,0.007959,0.007919,0.007894,0.007883,0.007875", \
				        "0.011019,0.010957,0.010917,0.010900,0.010887,0.010872");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			fall_power(Power_X2) {
				values ("0.006323,0.006232,0.006170,0.006123,0.006082,0.006066", \
				        "0.006316,0.006224,0.006166,0.006116,0.006079,0.006064", \
				        "0.006327,0.006234,0.006173,0.006126,0.006088,0.006073", \
				        "0.006361,0.006269,0.006207,0.006161,0.006116,0.006112", \
				        "0.006487,0.006395,0.006331,0.006275,0.006232,0.006216", \
				        "0.006741,0.006655,0.006589,0.006557,0.006516,0.006501", \
				        "0.007266,0.007175,0.007112,0.007071,0.007048,0.007032", \
				        "0.009531,0.009354,0.009209,0.009047,0.008921,0.008823");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.212468,0.219666,0.227694,0.241231,0.263874,0.303382", \
				        "0.215205,0.222384,0.230869,0.244540,0.266950,0.306404", \
				        "0.221048,0.228225,0.236295,0.250158,0.272696,0.311732", \
				        "0.227562,0.234739,0.242719,0.256675,0.279467,0.318977", \
				        "0.234361,0.241548,0.249564,0.263237,0.286206,0.326291", \
				        "0.238747,0.245920,0.253881,0.268024,0.290754,0.330132", \
				        "0.235505,0.242694,0.250636,0.264749,0.287502,0.326960", \
				        "0.210301,0.217481,0.225410,0.239716,0.262344,0.301557");
			}
			cell_rise(Timing_X2) {
				values ("0.140175,0.146716,0.155392,0.173139,0.209390,0.282335", \
				        "0.143387,0.149938,0.158653,0.176528,0.212404,0.285366", \
				        "0.148759,0.155311,0.163972,0.181817,0.217830,0.290300", \
				        "0.154883,0.161438,0.170052,0.187953,0.224438,0.296821", \
				        "0.160508,0.166968,0.175618,0.193382,0.229451,0.302035", \
				        "0.163803,0.170331,0.179013,0.196937,0.232995,0.305841", \
				        "0.159813,0.166395,0.175057,0.192952,0.229132,0.301933", \
				        "0.136909,0.143543,0.152213,0.170051,0.206234,0.278835");
			}
			fall_transition(Timing_X2) {
				values ("0.014691,0.018085,0.022174,0.029607,0.043467,0.072411", \
				        "0.014683,0.018092,0.022174,0.029664,0.043515,0.072362", \
				        "0.014673,0.018088,0.022172,0.029632,0.043519,0.072364", \
				        "0.014680,0.018091,0.022174,0.029659,0.043509,0.072174", \
				        "0.014695,0.018090,0.022178,0.029596,0.043502,0.072428", \
				        "0.014681,0.018090,0.022168,0.029632,0.043519,0.072451", \
				        "0.014691,0.018083,0.022180,0.029654,0.043543,0.072389", \
				        "0.014693,0.018096,0.022183,0.029665,0.043552,0.072408");
			}
			rise_transition(Timing_X2) {
				values ("0.012094,0.017090,0.025072,0.042199,0.076882,0.146521", \
				        "0.012077,0.017085,0.025073,0.042210,0.076932,0.146522", \
				        "0.012084,0.017085,0.025079,0.042226,0.076979,0.146486", \
				        "0.012129,0.017090,0.025091,0.042272,0.076903,0.146484", \
				        "0.012016,0.017057,0.025089,0.042212,0.076980,0.146512", \
				        "0.012144,0.017103,0.025093,0.042271,0.076915,0.146405", \
				        "0.012227,0.017167,0.025098,0.042268,0.076923,0.146398", \
				        "0.012516,0.017346,0.025172,0.042291,0.076952,0.146437");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.143740,0.150346,0.159015,0.176927,0.213261,0.286150", \
				        "0.147624,0.154240,0.163182,0.180815,0.217060,0.289967", \
				        "0.154335,0.160962,0.169554,0.187394,0.223699,0.296588", \
				        "0.165855,0.172481,0.181135,0.199028,0.235024,0.308106", \
				        "0.188006,0.194641,0.203335,0.221184,0.257321,0.330050", \
				        "0.224959,0.231777,0.240396,0.258444,0.294742,0.367631", \
				        "0.280065,0.287347,0.295974,0.313744,0.349953,0.422615", \
				        "0.363262,0.371327,0.380345,0.397503,0.433955,0.506273");
			}
			rise_transition(Timing_X2) {
				values ("0.012187,0.017151,0.025157,0.042219,0.076910,0.146341", \
				        "0.012173,0.017139,0.025150,0.042241,0.076877,0.146315", \
				        "0.012179,0.017154,0.025145,0.042215,0.076925,0.146311", \
				        "0.012169,0.017147,0.025152,0.042245,0.076895,0.146369", \
				        "0.012153,0.017127,0.025173,0.042227,0.076910,0.146351", \
				        "0.012971,0.017657,0.025345,0.042269,0.076926,0.146416", \
				        "0.014341,0.018743,0.025840,0.042385,0.076977,0.146314", \
				        "0.016507,0.020774,0.027003,0.042658,0.077035,0.146449");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "RN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.242818,0.249374,0.257975,0.276077,0.312323,0.385253", \
				        "0.246482,0.253027,0.261730,0.279692,0.316089,0.388984", \
				        "0.254414,0.260947,0.269518,0.287582,0.323917,0.396810", \
				        "0.267954,0.274492,0.283088,0.301198,0.337259,0.410479", \
				        "0.286767,0.293295,0.301745,0.319644,0.355655,0.428526", \
				        "0.309796,0.316284,0.324843,0.343841,0.380017,0.452890", \
				        "0.341484,0.348028,0.356551,0.375505,0.412319,0.485141", \
				        "0.383664,0.390196,0.398767,0.417233,0.454532,0.526033");
			}
			rise_transition(Timing_X2) {
				values ("0.012097,0.017053,0.025141,0.042289,0.076874,0.146333", \
				        "0.012083,0.017047,0.025121,0.042289,0.076905,0.146373", \
				        "0.012078,0.017047,0.025139,0.042261,0.076902,0.146337", \
				        "0.012072,0.017047,0.025122,0.042269,0.076908,0.146378", \
				        "0.012100,0.017049,0.025122,0.042289,0.076898,0.146378", \
				        "0.011974,0.017032,0.025138,0.042291,0.076895,0.146320", \
				        "0.012058,0.017025,0.025128,0.042195,0.076917,0.146406", \
				        "0.012029,0.017030,0.025128,0.042213,0.076984,0.146382");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005683,0.005621,0.005584,0.005549,0.005527,0.005503", \
				        "0.005668,0.005606,0.005578,0.005545,0.005518,0.005514", \
				        "0.005693,0.005630,0.005594,0.005566,0.005550,0.005524", \
				        "0.005765,0.005703,0.005663,0.005635,0.005626,0.005639", \
				        "0.006004,0.005942,0.005904,0.005865,0.005842,0.005824", \
				        "0.006611,0.006549,0.006509,0.006487,0.006471,0.006454", \
				        "0.008021,0.007959,0.007919,0.007894,0.007883,0.007875", \
				        "0.011019,0.010957,0.010917,0.010900,0.010887,0.010872");
			}
			rise_power(Power_X2) {
				values ("0.005441,0.005347,0.005287,0.005227,0.005192,0.005179", \
				        "0.005436,0.005342,0.005283,0.005225,0.005194,0.005177", \
				        "0.005454,0.005360,0.005299,0.005252,0.005213,0.005205", \
				        "0.005528,0.005434,0.005374,0.005327,0.005302,0.005291", \
				        "0.005765,0.005675,0.005610,0.005550,0.005520,0.005508", \
				        "0.006398,0.006302,0.006240,0.006189,0.006150,0.006144", \
				        "0.007859,0.007761,0.007696,0.007638,0.007595,0.007584", \
				        "0.011022,0.010914,0.010838,0.010769,0.010710,0.010680");
			}
		}

		internal_power () {

			related_pin	         : "RN";
			rise_power(Power_X2) {
				values ("0.006323,0.006232,0.006170,0.006123,0.006082,0.006066", \
				        "0.006316,0.006224,0.006166,0.006116,0.006079,0.006064", \
				        "0.006327,0.006234,0.006173,0.006126,0.006088,0.006073", \
				        "0.006361,0.006269,0.006207,0.006161,0.006116,0.006112", \
				        "0.006487,0.006395,0.006331,0.006275,0.006232,0.006216", \
				        "0.006741,0.006655,0.006589,0.006557,0.006516,0.006501", \
				        "0.007266,0.007175,0.007112,0.007071,0.007048,0.007032", \
				        "0.009531,0.009354,0.009209,0.009047,0.008921,0.008823");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFS_X1
 Cell Description	: Pos.edge D-Flip-Flop with active low set, and drive strength X1
*******************************************************************************************/

cell (SDFFS_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		preset             	: "!SN";
	}

	area               	: 7.182000;

	cell_leakage_power 	: 28419.955156;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000886;
		fall_capacitance	: 0.000836;
		rise_capacitance	: 0.000936;
		fall_capacitance_range		(0.000715, 0.000957);
		rise_capacitance_range		(0.000779, 0.001037);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.184380;
		min_pulse_width_high	: 0.137505;

		internal_power () {

			when      	: "!D & Q & !QN & !SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008699,0.009686,0.012010,0.017114");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004125,0.004526,0.005378,0.007413,0.011940");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003793,0.004205,0.005054,0.007089,0.011616");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004055,0.004468,0.005313,0.007351,0.011884");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003787,0.004200,0.005050,0.007089,0.011619");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & !SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008699,0.009686,0.012010,0.017114");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003793,0.004205,0.005054,0.007088,0.011616");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003733,0.004148,0.004994,0.007033,0.011566");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008699,0.009686,0.012010,0.017114");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003787,0.004200,0.005050,0.007089,0.011619");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003788,0.004200,0.005050,0.007089,0.011619");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003733,0.004148,0.004994,0.007033,0.011566");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003799,0.004205,0.005054,0.007088,0.011616");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004054,0.004468,0.005313,0.007351,0.011884");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003798,0.004205,0.005054,0.007088,0.011616");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008699,0.009686,0.012010,0.017114");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000968;
		fall_capacitance	: 0.000936;
		rise_capacitance	: 0.001000;
		fall_capacitance_range		(0.000825, 0.001017);
		rise_capacitance_range		(0.000931, 0.001102);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & !SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.100325,-0.088551,-0.091254,-0.115275,-0.144175", \
				        "-0.146688,-0.140838,-0.142076,-0.150904,-0.188597", \
				        "-0.188053,-0.173361,-0.177066,-0.192172,-0.237778", \
				        "-0.246991,-0.235598,-0.236567,-0.251063,-0.297842", \
				        "-0.346303,-0.337574,-0.346311,-0.357462,-0.388267");
			}
			rise_constraint(Hold) {
				values ("-0.067099,-0.052341,-0.046192,-0.052279,-0.082573", \
				        "-0.095714,-0.072334,-0.076210,-0.082298,-0.109961", \
				        "-0.103860,-0.089327,-0.079581,-0.097598,-0.127020", \
				        "-0.120153,-0.091765,-0.093356,-0.097599,-0.130713", \
				        "-0.103252,-0.082146,-0.078962,-0.085199,-0.121745");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.100345,-0.088573,-0.091277,-0.115300,-0.144203", \
				        "-0.146708,-0.140860,-0.142098,-0.150929,-0.188624", \
				        "-0.188072,-0.173382,-0.177088,-0.192196,-0.237804", \
				        "-0.247010,-0.235618,-0.236589,-0.251086,-0.297867", \
				        "-0.346322,-0.337594,-0.346332,-0.357484,-0.388292");
			}
			rise_constraint(Hold) {
				values ("-0.067102,-0.052345,-0.046196,-0.052283,-0.082578", \
				        "-0.095718,-0.072338,-0.076215,-0.082302,-0.109965", \
				        "-0.103864,-0.089331,-0.079585,-0.097603,-0.127024", \
				        "-0.120157,-0.091769,-0.093360,-0.097603,-0.130718", \
				        "-0.103256,-0.082150,-0.078966,-0.085203,-0.121749");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & !SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.159660,0.151181,0.157994,0.179331,0.228060", \
				        "0.200674,0.195036,0.204969,0.226533,0.271222", \
				        "0.246837,0.237459,0.243060,0.265553,0.310838", \
				        "0.309219,0.301517,0.309657,0.330565,0.379170", \
				        "0.424224,0.412881,0.419199,0.440769,0.484537");
			}
			rise_constraint(Setup) {
				values ("0.205635,0.177299,0.192001,0.193047,0.208841", \
				        "0.239964,0.218541,0.216830,0.202417,0.239313", \
				        "0.255679,0.226978,0.217486,0.227275,0.232630", \
				        "0.259971,0.223712,0.235674,0.248608,0.269888", \
				        "0.250353,0.218450,0.211015,0.227859,0.249718");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.159659,0.151180,0.157993,0.179330,0.228060", \
				        "0.200672,0.195034,0.204968,0.226531,0.271221", \
				        "0.246835,0.237456,0.243058,0.265551,0.310837", \
				        "0.309216,0.298253,0.309654,0.330562,0.379168", \
				        "0.424219,0.412877,0.419195,0.436348,0.484534");
			}
			rise_constraint(Setup) {
				values ("0.205629,0.177294,0.191995,0.193042,0.208837", \
				        "0.239954,0.218532,0.216821,0.202410,0.239307", \
				        "0.255666,0.226967,0.217476,0.227266,0.232623", \
				        "0.259954,0.223697,0.235660,0.248595,0.269877", \
				        "0.250330,0.218429,0.210995,0.227841,0.249702");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000045,0.000034,0.000025,0.000017,0.000013,0.000009,0.000006,0.000001");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001514;
		fall_capacitance	: 0.001440;
		rise_capacitance	: 0.001588;
		fall_capacitance_range		(0.001310, 0.001586);
		rise_capacitance_range		(0.001425, 0.001703);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.063511,-0.051801,-0.056057,-0.070922,-0.106592", \
				        "-0.117653,-0.107470,-0.111726,-0.122659,-0.162456", \
				        "-0.156086,-0.144328,-0.144371,-0.152153,-0.196786", \
				        "-0.216734,-0.201875,-0.208537,-0.217540,-0.253331", \
				        "-0.306667,-0.294471,-0.299546,-0.316903,-0.353916");
			}
			rise_constraint(Hold) {
				values ("-0.047960,-0.032148,-0.024661,-0.036532,-0.063811", \
				        "-0.086879,-0.064180,-0.053396,-0.065815,-0.090494", \
				        "-0.095026,-0.073863,-0.071797,-0.070442,-0.106844", \
				        "-0.096275,-0.066709,-0.066839,-0.067974,-0.109211", \
				        "-0.064973,-0.041667,-0.036044,-0.037250,-0.080536");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.077609,-0.052364,-0.046217,-0.052306,-0.082601", \
				        "-0.118911,-0.099002,-0.091389,-0.101141,-0.136133", \
				        "-0.142163,-0.125586,-0.120421,-0.127609,-0.154364", \
				        "-0.195699,-0.175983,-0.168064,-0.175795,-0.204895", \
				        "-0.271526,-0.254397,-0.242507,-0.260879,-0.293526");
			}
			rise_constraint(Hold) {
				values ("-0.075540,-0.067702,-0.070964,-0.084503,-0.118715", \
				        "-0.094386,-0.083489,-0.088918,-0.098794,-0.135569", \
				        "-0.096653,-0.087831,-0.085969,-0.106114,-0.140985", \
				        "-0.090032,-0.083021,-0.083589,-0.097547,-0.132534", \
				        "-0.060679,-0.051703,-0.057599,-0.067523,-0.109246");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.139052,0.134433,0.139870,0.161945,0.210499", \
				        "0.195391,0.186399,0.192503,0.215826,0.262273", \
				        "0.246983,0.231536,0.243185,0.261954,0.310940", \
				        "0.315521,0.304974,0.309842,0.334682,0.379316", \
				        "0.431565,0.420635,0.427395,0.445439,0.490088");
			}
			rise_constraint(Setup) {
				values ("0.205625,0.177291,0.167301,0.164685,0.208835", \
				        "0.239948,0.218527,0.216817,0.202406,0.239304", \
				        "0.232717,0.214623,0.217470,0.212175,0.232619", \
				        "0.259945,0.223689,0.235652,0.216542,0.269871", \
				        "0.236033,0.218417,0.210984,0.209932,0.228132");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.226843,0.200226,0.192059,0.193098,0.208885", \
				        "0.262087,0.242383,0.242496,0.231732,0.275949", \
				        "0.278768,0.264126,0.270628,0.272643,0.288971", \
				        "0.334630,0.303551,0.321001,0.312857,0.348769", \
				        "0.422054,0.400533,0.388004,0.389174,0.400844");
			}
			rise_constraint(Setup) {
				values ("0.149324,0.139979,0.145876,0.168867,0.214849", \
				        "0.157586,0.148480,0.154750,0.176179,0.226095", \
				        "0.156916,0.146655,0.155154,0.176424,0.227503", \
				        "0.150912,0.135201,0.145623,0.168695,0.213795", \
				        "0.122099,0.107036,0.118330,0.136013,0.185908");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.001423,0.001409,0.001453,0.001631,0.002143,0.003387,0.006125,0.011848");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.001384;
		fall_capacitance	: 0.001361;
		rise_capacitance	: 0.001407;
		fall_capacitance_range		(0.001287, 0.001379);
		rise_capacitance_range		(0.001393, 0.001414);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.102187,-0.092490,-0.092305,-0.111342,-0.143938", \
				        "-0.141419,-0.130714,-0.134893,-0.146268,-0.188207", \
				        "-0.180703,-0.168489,-0.168455,-0.186759,-0.223454", \
				        "-0.242787,-0.227604,-0.234323,-0.243834,-0.281701", \
				        "-0.345180,-0.333792,-0.328206,-0.346270,-0.385424");
			}
			rise_constraint(Hold) {
				values ("-0.068815,-0.044309,-0.038654,-0.045359,-0.076301", \
				        "-0.098406,-0.077440,-0.068488,-0.075192,-0.103534", \
				        "-0.107725,-0.088296,-0.088061,-0.090369,-0.120470", \
				        "-0.111319,-0.100264,-0.085448,-0.101383,-0.124009", \
				        "-0.104439,-0.073868,-0.070992,-0.091173,-0.114824");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.102187,-0.092490,-0.092305,-0.111342,-0.143938", \
				        "-0.141419,-0.130714,-0.134893,-0.146268,-0.188207", \
				        "-0.180703,-0.168489,-0.168455,-0.186760,-0.223454", \
				        "-0.242787,-0.227604,-0.234323,-0.243834,-0.281701", \
				        "-0.345180,-0.333792,-0.328206,-0.346270,-0.385424");
			}
			rise_constraint(Hold) {
				values ("-0.068815,-0.044309,-0.038654,-0.045358,-0.076300", \
				        "-0.098406,-0.077440,-0.068487,-0.075192,-0.103533", \
				        "-0.107725,-0.088295,-0.088061,-0.090369,-0.120469", \
				        "-0.111319,-0.100264,-0.085448,-0.101382,-0.124009", \
				        "-0.104439,-0.073867,-0.070992,-0.091173,-0.114824");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.159722,0.151236,0.158047,0.179382,0.228112", \
				        "0.200779,0.189311,0.198782,0.219424,0.271300", \
				        "0.235742,0.231538,0.236674,0.258242,0.306311", \
				        "0.303343,0.291929,0.302863,0.322838,0.369589", \
				        "0.410486,0.398255,0.407601,0.427773,0.474091");
			}
			rise_constraint(Setup) {
				values ("0.205704,0.177354,0.192056,0.193095,0.208883", \
				        "0.240067,0.218630,0.216912,0.202485,0.239375", \
				        "0.255809,0.214750,0.217589,0.212278,0.232706", \
				        "0.260143,0.223863,0.235819,0.232712,0.269998", \
				        "0.250587,0.218663,0.211214,0.210139,0.249872");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.159722,0.151236,0.158047,0.179383,0.228112", \
				        "0.200780,0.189311,0.198783,0.219425,0.271300", \
				        "0.235743,0.231539,0.236675,0.258242,0.306312", \
				        "0.303345,0.291930,0.302864,0.322839,0.369590", \
				        "0.410488,0.398257,0.407603,0.427774,0.474092");
			}
			rise_constraint(Setup) {
				values ("0.205704,0.177354,0.192055,0.193095,0.208882", \
				        "0.240067,0.218630,0.216912,0.202485,0.239375", \
				        "0.255809,0.214749,0.217589,0.212278,0.232705", \
				        "0.260143,0.223863,0.235818,0.232711,0.269997", \
				        "0.250586,0.218663,0.211214,0.210138,0.249872");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.008404,0.008386,0.008356,0.008323,0.008378,0.008738,0.009915,0.012720");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.002453;
		fall_capacitance	: 0.002402;
		rise_capacitance	: 0.002504;
		fall_capacitance_range		(0.002258, 0.002441);
		rise_capacitance_range		(0.002408, 0.002531);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.107075;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.035099,-0.054658,-0.061411,-0.053899,-0.024991", \
				        "-0.038284,-0.058589,-0.060853,-0.054392,-0.042374", \
				        "-0.027569,-0.043514,-0.060959,-0.045228,-0.038865", \
				        "0.014963,-0.013249,-0.000695,-0.009316,0.006413", \
				        "0.138640,0.077991,0.109084,0.083437,0.160275");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.051344,0.072194,0.078332,0.078654,0.060628", \
				        "0.081277,0.099972,0.104228,0.102313,0.084077", \
				        "0.100435,0.118182,0.122166,0.120752,0.103408", \
				        "0.135087,0.151753,0.155404,0.153753,0.137705", \
				        "0.199871,0.215799,0.218864,0.217429,0.202207");
			}
		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000070,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000070,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000107,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000107,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000070,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000058,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000070,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000107,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000107,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000058,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000058,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000058,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000014,0.000009,0.000002");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.108210,0.114100,0.124160,0.141129,0.168122,0.212059", \
				        "0.111407,0.117244,0.127385,0.144143,0.171087,0.215195", \
				        "0.116803,0.122640,0.132741,0.149660,0.176241,0.220351", \
				        "0.122718,0.128550,0.138578,0.155551,0.182360,0.226208", \
				        "0.128354,0.134197,0.144310,0.161252,0.188266,0.231970", \
				        "0.131378,0.137226,0.147179,0.164005,0.190999,0.234896", \
				        "0.126862,0.132725,0.142812,0.159710,0.186793,0.230893", \
				        "0.101542,0.107676,0.118233,0.135641,0.163040,0.207288");
			}
			cell_rise(Timing_X1) {
				values ("0.149060,0.156734,0.170181,0.193205,0.234936,0.312252", \
				        "0.152485,0.160152,0.173622,0.196681,0.238434,0.315747", \
				        "0.158298,0.165964,0.179408,0.202532,0.244103,0.321280", \
				        "0.165201,0.172866,0.186322,0.209715,0.251263,0.328066", \
				        "0.172489,0.180140,0.193501,0.216730,0.258345,0.335430", \
				        "0.177440,0.185081,0.198499,0.221510,0.263289,0.340359", \
				        "0.172845,0.180463,0.193907,0.217076,0.258647,0.336005", \
				        "0.144902,0.152510,0.165843,0.188964,0.230602,0.307493");
			}
			fall_transition(Timing_X1) {
				values ("0.016614,0.019383,0.024607,0.033663,0.048287,0.076673", \
				        "0.016615,0.019362,0.024593,0.033630,0.048257,0.076828", \
				        "0.016685,0.019392,0.024613,0.033737,0.048337,0.076798", \
				        "0.016626,0.019363,0.024537,0.033572,0.048335,0.076868", \
				        "0.016689,0.019422,0.024621,0.033620,0.048235,0.076814", \
				        "0.016699,0.019422,0.024571,0.033577,0.048325,0.076803", \
				        "0.016877,0.019635,0.024815,0.033808,0.048566,0.076955", \
				        "0.018773,0.021438,0.026444,0.035125,0.049449,0.077497");
			}
			rise_transition(Timing_X1) {
				values ("0.020800,0.025378,0.033836,0.050407,0.084085,0.152305", \
				        "0.020798,0.025367,0.033827,0.050422,0.084078,0.152294", \
				        "0.020777,0.025349,0.033821,0.050407,0.084044,0.152141", \
				        "0.020758,0.025340,0.033809,0.050387,0.084049,0.152271", \
				        "0.020702,0.025256,0.033679,0.050246,0.084004,0.152211", \
				        "0.020662,0.025239,0.033716,0.050296,0.083998,0.152275", \
				        "0.020569,0.025144,0.033626,0.050243,0.083958,0.152216", \
				        "0.020481,0.025065,0.033559,0.050212,0.083962,0.152225");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.128035,0.135025,0.147293,0.168748,0.208241,0.284084", \
				        "0.131928,0.138767,0.151042,0.172493,0.211985,0.287838", \
				        "0.139999,0.147003,0.159110,0.180649,0.220007,0.295845", \
				        "0.155464,0.162435,0.174712,0.196219,0.235635,0.311466", \
				        "0.179524,0.186450,0.198557,0.220066,0.259524,0.335210", \
				        "0.215490,0.222325,0.234696,0.256205,0.295361,0.371102", \
				        "0.273719,0.280207,0.292735,0.314370,0.353723,0.429376", \
				        "0.372611,0.379345,0.391082,0.412936,0.452507,0.527890");
			}
			rise_transition(Timing_X1) {
				values ("0.018423,0.022785,0.030869,0.046965,0.080385,0.150673", \
				        "0.018433,0.022783,0.030865,0.046965,0.080385,0.150657", \
				        "0.018436,0.022780,0.030864,0.047016,0.080385,0.150677", \
				        "0.018432,0.022785,0.030865,0.047003,0.080368,0.150546", \
				        "0.018440,0.022792,0.030872,0.046942,0.080354,0.150700", \
				        "0.018473,0.022825,0.030902,0.046982,0.080355,0.150671", \
				        "0.018529,0.022886,0.030955,0.047073,0.080449,0.150608", \
				        "0.018647,0.022999,0.031064,0.047146,0.080492,0.150407");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X1) {
				values ("0.184835,0.192287,0.205117,0.227467,0.267528,0.343837", \
				        "0.188676,0.195847,0.208828,0.231125,0.271186,0.347495", \
				        "0.195154,0.202498,0.215244,0.237517,0.277547,0.353859", \
				        "0.206823,0.214182,0.227077,0.249305,0.289106,0.365221", \
				        "0.227980,0.235247,0.248126,0.270515,0.310453,0.386641", \
				        "0.258126,0.265389,0.279029,0.300841,0.340976,0.417179", \
				        "0.297182,0.304564,0.317711,0.340899,0.380423,0.456548", \
				        "0.344527,0.351918,0.364759,0.386975,0.428758,0.504917");
			}
			rise_transition(Timing_X1) {
				values ("0.019445,0.023968,0.032271,0.048401,0.081444,0.151225", \
				        "0.019527,0.023950,0.032276,0.048401,0.081445,0.151225", \
				        "0.019527,0.023968,0.032280,0.048387,0.081448,0.151221", \
				        "0.019493,0.023954,0.032281,0.048392,0.081407,0.151205", \
				        "0.019528,0.023899,0.032275,0.048386,0.081445,0.151217", \
				        "0.019564,0.024005,0.032326,0.048354,0.081418,0.151203", \
				        "0.019659,0.024127,0.032427,0.048498,0.081556,0.151220", \
				        "0.019841,0.024304,0.032607,0.048640,0.081626,0.151109");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.006032,0.006020,0.006017,0.005998,0.005990,0.005988", \
				        "0.006027,0.006023,0.006011,0.005991,0.005978,0.005990", \
				        "0.006052,0.006036,0.006024,0.006019,0.006009,0.006004", \
				        "0.006120,0.006109,0.006093,0.006085,0.006082,0.006089", \
				        "0.006354,0.006341,0.006330,0.006313,0.006311,0.006317", \
				        "0.006966,0.006950,0.006938,0.006918,0.006916,0.006921", \
				        "0.008412,0.008401,0.008383,0.008360,0.008356,0.008363", \
				        "0.011558,0.011545,0.011523,0.011493,0.011482,0.011477");
			}
			rise_power(Power_X1) {
				values ("0.005090,0.005076,0.005055,0.005039,0.005028,0.005019", \
				        "0.005091,0.005076,0.005060,0.005038,0.005031,0.005022", \
				        "0.005108,0.005094,0.005078,0.005061,0.005053,0.005042", \
				        "0.005176,0.005162,0.005144,0.005136,0.005125,0.005118", \
				        "0.005403,0.005387,0.005370,0.005357,0.005348,0.005351", \
				        "0.006010,0.005996,0.005980,0.005965,0.005956,0.005949", \
				        "0.007402,0.007388,0.007373,0.007360,0.007351,0.007350", \
				        "0.010397,0.010384,0.010368,0.010352,0.010345,0.010337");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X1) {
				values ("0.006532,0.006533,0.006525,0.006521,0.006518,0.006522", \
				        "0.006537,0.006528,0.006522,0.006517,0.006514,0.006519", \
				        "0.006564,0.006557,0.006547,0.006542,0.006539,0.006544", \
				        "0.006664,0.006656,0.006650,0.006644,0.006639,0.006652", \
				        "0.006953,0.006935,0.006930,0.006920,0.006916,0.006923", \
				        "0.007655,0.007637,0.007646,0.007619,0.007611,0.007612", \
				        "0.009237,0.009217,0.009202,0.009194,0.009168,0.009162", \
				        "0.012227,0.012200,0.012165,0.012127,0.012127,0.012105");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.223490,0.228243,0.236647,0.250802,0.274732,0.316098", \
				        "0.226898,0.231630,0.240088,0.254274,0.278224,0.319593", \
				        "0.232683,0.237428,0.245868,0.260120,0.283871,0.325068", \
				        "0.239573,0.244324,0.252762,0.267293,0.291041,0.331851", \
				        "0.246780,0.251479,0.259878,0.274364,0.298104,0.339201", \
				        "0.251681,0.256422,0.264856,0.279043,0.302959,0.344079", \
				        "0.246953,0.251697,0.260202,0.274559,0.298272,0.339625", \
				        "0.218931,0.223687,0.232075,0.246399,0.270151,0.311005");
			}
			cell_rise(Timing_X1) {
				values ("0.138851,0.143647,0.153062,0.171854,0.209431,0.284729", \
				        "0.142047,0.146845,0.156287,0.174901,0.212459,0.287769", \
				        "0.147481,0.152184,0.161642,0.180351,0.217605,0.292960", \
				        "0.153391,0.158131,0.167515,0.186374,0.223812,0.298758", \
				        "0.159022,0.163704,0.173155,0.191914,0.229533,0.304476", \
				        "0.162049,0.166759,0.176097,0.194833,0.232486,0.307649", \
				        "0.157417,0.162170,0.171574,0.190311,0.227941,0.303214", \
				        "0.131897,0.136610,0.146106,0.164848,0.202391,0.277467");
			}
			fall_transition(Timing_X1) {
				values ("0.017638,0.019934,0.024078,0.031729,0.046230,0.075685", \
				        "0.017660,0.019925,0.024079,0.031768,0.046226,0.075671", \
				        "0.017659,0.019922,0.024089,0.031730,0.046141,0.075483", \
				        "0.017656,0.019932,0.024077,0.031741,0.046208,0.075490", \
				        "0.017619,0.019933,0.024088,0.031698,0.046042,0.075495", \
				        "0.017651,0.019925,0.024074,0.031703,0.046125,0.075751", \
				        "0.017648,0.019909,0.024077,0.031696,0.046057,0.075600", \
				        "0.017651,0.019917,0.024084,0.031713,0.046067,0.075608");
			}
			rise_transition(Timing_X1) {
				values ("0.016176,0.020225,0.028776,0.046255,0.082002,0.153802", \
				        "0.016175,0.020237,0.028779,0.046312,0.081992,0.153715", \
				        "0.016266,0.020225,0.028647,0.046251,0.082009,0.153903", \
				        "0.016209,0.020253,0.028738,0.046321,0.082008,0.153764", \
				        "0.016212,0.020260,0.028785,0.046321,0.082021,0.153877", \
				        "0.016269,0.020231,0.028744,0.046280,0.082052,0.153816", \
				        "0.016237,0.020276,0.028750,0.046324,0.082041,0.153850", \
				        "0.016504,0.020396,0.028840,0.046348,0.082053,0.153777");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.046774,0.050121,0.056111,0.066772,0.086426,0.124539", \
				        "0.050504,0.053857,0.059905,0.070566,0.090224,0.128336", \
				        "0.058702,0.062055,0.068018,0.078680,0.098322,0.136441", \
				        "0.074197,0.077610,0.083736,0.094469,0.114137,0.152300", \
				        "0.096972,0.100827,0.107514,0.118977,0.139151,0.177379", \
				        "0.130561,0.134944,0.142787,0.155566,0.176701,0.215242", \
				        "0.184847,0.189869,0.199039,0.213618,0.236473,0.275810", \
				        "0.277412,0.283555,0.293894,0.310794,0.336771,0.377338");
			}
			fall_transition(Timing_X1) {
				values ("0.010494,0.012361,0.015964,0.023266,0.038733,0.070883", \
				        "0.010507,0.012357,0.015963,0.023265,0.038734,0.070895", \
				        "0.010535,0.012381,0.015993,0.023289,0.038735,0.070879", \
				        "0.011247,0.012969,0.016375,0.023505,0.038785,0.070881", \
				        "0.013312,0.014975,0.018277,0.025062,0.039552,0.071025", \
				        "0.016195,0.017955,0.021152,0.027548,0.041082,0.071559", \
				        "0.020786,0.022302,0.025602,0.031750,0.044374,0.072626", \
				        "0.027267,0.029075,0.032431,0.038489,0.049669,0.075507");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.046824,0.050110,0.056043,0.066753,0.086523,0.124639", \
				        "0.050581,0.053773,0.059796,0.070500,0.090272,0.128391", \
				        "0.058711,0.061948,0.067882,0.078594,0.098363,0.136483", \
				        "0.074207,0.077564,0.083620,0.094432,0.114262,0.152306", \
				        "0.097071,0.100753,0.107451,0.118989,0.139351,0.177553", \
				        "0.130582,0.134721,0.142942,0.155517,0.176889,0.215559", \
				        "0.184419,0.189635,0.198599,0.213472,0.236339,0.275943", \
				        "0.272311,0.277917,0.287548,0.303121,0.327954,0.367583");
			}
			fall_transition(Timing_X1) {
				values ("0.010488,0.012305,0.015991,0.023396,0.038748,0.070880", \
				        "0.010426,0.012397,0.015989,0.023399,0.038748,0.070879", \
				        "0.010461,0.012325,0.016011,0.023413,0.038750,0.070878", \
				        "0.011151,0.012928,0.016447,0.023682,0.038854,0.070888", \
				        "0.013173,0.014949,0.018356,0.025205,0.039711,0.071088", \
				        "0.016080,0.018068,0.021338,0.027912,0.041409,0.071798", \
				        "0.020598,0.022379,0.025692,0.032022,0.044785,0.073016", \
				        "0.023955,0.025948,0.029507,0.035669,0.046989,0.073249");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.005090,0.005076,0.005055,0.005039,0.005028,0.005019", \
				        "0.005091,0.005076,0.005060,0.005038,0.005031,0.005022", \
				        "0.005108,0.005094,0.005078,0.005061,0.005053,0.005042", \
				        "0.005176,0.005162,0.005144,0.005136,0.005125,0.005118", \
				        "0.005403,0.005387,0.005370,0.005357,0.005348,0.005351", \
				        "0.006010,0.005996,0.005980,0.005965,0.005956,0.005949", \
				        "0.007402,0.007388,0.007373,0.007360,0.007351,0.007350", \
				        "0.010397,0.010384,0.010368,0.010352,0.010345,0.010337");
			}
			rise_power(Power_X1) {
				values ("0.006032,0.006020,0.006017,0.005998,0.005990,0.005988", \
				        "0.006027,0.006023,0.006011,0.005991,0.005978,0.005990", \
				        "0.006052,0.006036,0.006024,0.006019,0.006009,0.006004", \
				        "0.006120,0.006109,0.006093,0.006085,0.006082,0.006089", \
				        "0.006354,0.006341,0.006330,0.006313,0.006311,0.006317", \
				        "0.006966,0.006950,0.006938,0.006918,0.006916,0.006921", \
				        "0.008412,0.008401,0.008383,0.008360,0.008356,0.008363", \
				        "0.011558,0.011545,0.011523,0.011493,0.011482,0.011477");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			fall_power(Power_X1) {
				values ("0.006532,0.006533,0.006525,0.006521,0.006518,0.006522", \
				        "0.006537,0.006528,0.006522,0.006517,0.006514,0.006519", \
				        "0.006564,0.006557,0.006547,0.006542,0.006539,0.006544", \
				        "0.006664,0.006656,0.006650,0.006644,0.006639,0.006652", \
				        "0.006953,0.006935,0.006930,0.006920,0.006916,0.006923", \
				        "0.007655,0.007637,0.007646,0.007619,0.007611,0.007612", \
				        "0.009237,0.009217,0.009202,0.009194,0.009168,0.009162", \
				        "0.012227,0.012200,0.012165,0.012127,0.012127,0.012105");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFFS_X2
 Cell Description	: Pos.edge D-Flip-Flop with active low set, and drive strength X2
*******************************************************************************************/

cell (SDFFS_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
		preset             	: "!SN";
	}

	area               	: 7.182000;

	cell_leakage_power 	: 31203.206094;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000886;
		fall_capacitance	: 0.000836;
		rise_capacitance	: 0.000936;
		fall_capacitance_range		(0.000715, 0.000957);
		rise_capacitance_range		(0.000779, 0.001038);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.184380;
		min_pulse_width_high	: 0.149224;

		internal_power () {

			when      	: "!D & Q & !QN & !SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008704,0.009693,0.012017,0.017126");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003790,0.004201,0.005052,0.007089,0.011618");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003793,0.004206,0.005056,0.007089,0.011615");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004053,0.004467,0.005313,0.007351,0.011884");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003790,0.004201,0.005052,0.007089,0.011618");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & !SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008218,0.008703,0.009693,0.012017,0.017126");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003793,0.004206,0.005055,0.007089,0.011615");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003733,0.004148,0.004994,0.007033,0.011565");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008219,0.008704,0.009693,0.012017,0.017126");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003790,0.004201,0.005052,0.007089,0.011618");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.003790,0.004201,0.005052,0.007089,0.011618");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & SE & !SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004055,0.004467,0.005313,0.007351,0.011884");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003800,0.004206,0.005055,0.007089,0.011615");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & SI & SN";

			power(Hidden_Power_Clk) {
				values ("0.004053,0.004467,0.005313,0.007351,0.011884");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.003800,0.004206,0.005056,0.007089,0.011615");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & !SI & !SN";

			power(Hidden_Power_Clk) {
				values ("0.008217,0.008704,0.009693,0.012017,0.017126");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000968;
		fall_capacitance	: 0.000936;
		rise_capacitance	: 0.001000;
		fall_capacitance_range		(0.000825, 0.001017);
		rise_capacitance_range		(0.000931, 0.001102);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & !SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.101514,-0.091259,-0.095644,-0.105367,-0.146594", \
				        "-0.149032,-0.138031,-0.140034,-0.159927,-0.191622", \
				        "-0.185198,-0.178453,-0.175657,-0.192399,-0.227758", \
				        "-0.245336,-0.234642,-0.245761,-0.252537,-0.287896", \
				        "-0.347012,-0.339019,-0.348569,-0.361384,-0.395628");
			}
			rise_constraint(Hold) {
				values ("-0.068462,-0.044662,-0.039477,-0.055568,-0.090791", \
				        "-0.097936,-0.077616,-0.069134,-0.076426,-0.105415", \
				        "-0.107255,-0.088413,-0.088590,-0.091486,-0.122233", \
				        "-0.110908,-0.100323,-0.085918,-0.102352,-0.125626", \
				        "-0.104145,-0.073985,-0.071403,-0.091996,-0.116235");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.103022,-0.092305,-0.091377,-0.109486,-0.153670", \
				        "-0.148412,-0.137599,-0.141999,-0.154231,-0.198767", \
				        "-0.188467,-0.176192,-0.176379,-0.195587,-0.234832", \
				        "-0.251910,-0.236759,-0.243790,-0.254205,-0.294622", \
				        "-0.346757,-0.345616,-0.340389,-0.359496,-0.401247");
			}
			rise_constraint(Hold) {
				values ("-0.068462,-0.044662,-0.039477,-0.055569,-0.078329", \
				        "-0.097936,-0.077616,-0.069134,-0.076427,-0.105415", \
				        "-0.107255,-0.088413,-0.088590,-0.091486,-0.122234", \
				        "-0.110907,-0.100323,-0.085918,-0.102353,-0.125626", \
				        "-0.104145,-0.084689,-0.071403,-0.091996,-0.116235");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & !SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.158782,0.150413,0.157253,0.182076,0.227333", \
				        "0.204550,0.193691,0.203679,0.225325,0.270124", \
				        "0.244752,0.235565,0.241277,0.263907,0.309384", \
				        "0.312262,0.301979,0.307023,0.332098,0.377085", \
				        "0.426749,0.408711,0.419193,0.441563,0.486756");
			}
			rise_constraint(Setup) {
				values ("0.207502,0.178792,0.193494,0.194353,0.209961", \
				        "0.242764,0.220967,0.219069,0.204283,0.240993", \
				        "0.247660,0.217626,0.220286,0.214615,0.234683", \
				        "0.264637,0.227818,0.239593,0.236037,0.272874", \
				        "0.242321,0.224236,0.216427,0.214812,0.232261");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & SI & SN";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.158781,0.150413,0.157253,0.182076,0.227333", \
				        "0.204549,0.193691,0.203679,0.225325,0.270124", \
				        "0.244751,0.235565,0.241276,0.263907,0.309384", \
				        "0.312261,0.301978,0.307022,0.332097,0.377084", \
				        "0.426748,0.408710,0.419192,0.441562,0.486755");
			}
			rise_constraint(Setup) {
				values ("0.207560,0.178839,0.193540,0.194394,0.209996", \
				        "0.242851,0.221042,0.219139,0.204341,0.241045", \
				        "0.247767,0.217718,0.220372,0.214690,0.234747", \
				        "0.264782,0.227945,0.239715,0.236144,0.272967", \
				        "0.242515,0.224415,0.216595,0.214963,0.232388");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.000045,0.000034,0.000025,0.000017,0.000013,0.000009,0.000006,0.000001");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001514;
		fall_capacitance	: 0.001440;
		rise_capacitance	: 0.001588;
		fall_capacitance_range		(0.001310, 0.001586);
		rise_capacitance_range		(0.001425, 0.001703);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.065388,-0.054846,-0.055582,-0.073524,-0.103055", \
				        "-0.112857,-0.103636,-0.111165,-0.125612,-0.159157", \
				        "-0.155907,-0.146677,-0.151495,-0.165209,-0.193464", \
				        "-0.213487,-0.202553,-0.205921,-0.220309,-0.249737", \
				        "-0.306640,-0.302031,-0.304953,-0.318566,-0.349327");
			}
			rise_constraint(Hold) {
				values ("-0.055662,-0.037230,-0.027267,-0.043577,-0.066346", \
				        "-0.082117,-0.068404,-0.055144,-0.063134,-0.092682", \
				        "-0.087919,-0.076995,-0.072534,-0.076714,-0.108606", \
				        "-0.084398,-0.067497,-0.065312,-0.073235,-0.095162", \
				        "-0.063289,-0.048499,-0.041557,-0.040327,-0.079225");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.068462,-0.056764,-0.053411,-0.055569,-0.090792", \
				        "-0.120871,-0.090818,-0.091684,-0.095124,-0.131440", \
				        "-0.145174,-0.131535,-0.121002,-0.131225,-0.163028", \
				        "-0.200815,-0.167197,-0.169396,-0.180102,-0.214250", \
				        "-0.271374,-0.255954,-0.245702,-0.253417,-0.287388");
			}
			rise_constraint(Hold) {
				values ("-0.076142,-0.067332,-0.069899,-0.082512,-0.128359", \
				        "-0.095081,-0.083257,-0.088038,-0.106528,-0.145949", \
				        "-0.097301,-0.087646,-0.093430,-0.104447,-0.138299", \
				        "-0.090542,-0.082836,-0.082848,-0.096019,-0.130033", \
				        "-0.060934,-0.051425,-0.056904,-0.072979,-0.107023");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SI & SN";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.138224,0.133693,0.139160,0.161235,0.214162", \
				        "0.199180,0.187889,0.194295,0.218150,0.261119", \
				        "0.244734,0.235550,0.241262,0.263893,0.309372", \
				        "0.318297,0.301955,0.313953,0.332078,0.377067", \
				        "0.426712,0.416107,0.423104,0.445936,0.492048");
			}
			rise_constraint(Setup) {
				values ("0.207558,0.178837,0.168654,0.165845,0.209995", \
				        "0.220650,0.197108,0.193373,0.204339,0.241044", \
				        "0.236196,0.217716,0.220370,0.214688,0.234745", \
				        "0.239767,0.227941,0.225423,0.220021,0.253180", \
				        "0.228129,0.224410,0.216590,0.214958,0.232385");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & !SI & SN";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.228880,0.201893,0.193541,0.194395,0.209997", \
				        "0.265051,0.244976,0.244904,0.233769,0.277801", \
				        "0.282473,0.267460,0.273777,0.275422,0.272440", \
				        "0.339817,0.308182,0.311159,0.316747,0.352103", \
				        "0.415082,0.392140,0.378231,0.394916,0.405660");
			}
			rise_constraint(Setup) {
				values ("0.148506,0.139270,0.145194,0.168185,0.214168", \
				        "0.156331,0.147362,0.156811,0.178753,0.225141", \
				        "0.155280,0.145183,0.156992,0.175115,0.226304", \
				        "0.148622,0.136376,0.147123,0.166868,0.217036", \
				        "0.118827,0.111441,0.115439,0.137771,0.183590");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.001423,0.001409,0.001453,0.001631,0.002143,0.003387,0.006125,0.011848");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.001384;
		fall_capacitance	: 0.001361;
		rise_capacitance	: 0.001407;
		fall_capacitance_range		(0.001287, 0.001379);
		rise_capacitance_range		(0.001393, 0.001414);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.101516,-0.091262,-0.095648,-0.105370,-0.146598", \
				        "-0.143212,-0.131344,-0.140038,-0.150493,-0.191626", \
				        "-0.178792,-0.171180,-0.175661,-0.182379,-0.227761", \
				        "-0.237758,-0.226197,-0.236399,-0.241345,-0.287900", \
				        "-0.337089,-0.328229,-0.336863,-0.347846,-0.378428");
			}
			rise_constraint(Hold) {
				values ("-0.066149,-0.049449,-0.041317,-0.052420,-0.078851", \
				        "-0.093703,-0.068381,-0.070293,-0.072527,-0.105737", \
				        "-0.113457,-0.091487,-0.088856,-0.086694,-0.122248", \
				        "-0.114626,-0.101191,-0.083979,-0.095564,-0.124816", \
				        "-0.102895,-0.080798,-0.076603,-0.080867,-0.113569");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.103021,-0.092305,-0.091378,-0.109488,-0.153674", \
				        "-0.142485,-0.130807,-0.142000,-0.144693,-0.185566", \
				        "-0.181954,-0.168813,-0.176379,-0.185462,-0.221045", \
				        "-0.236539,-0.228207,-0.234322,-0.242908,-0.279662", \
				        "-0.336727,-0.334719,-0.328577,-0.345853,-0.383942");
			}
			rise_constraint(Hold) {
				values ("-0.066146,-0.049446,-0.041313,-0.052416,-0.078847", \
				        "-0.093700,-0.068378,-0.070290,-0.072524,-0.105733", \
				        "-0.113454,-0.091484,-0.088852,-0.086690,-0.122244", \
				        "-0.114623,-0.101188,-0.093320,-0.095560,-0.124813", \
				        "-0.102892,-0.080795,-0.076600,-0.080864,-0.113565");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SE & SN";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.158780,0.150411,0.157252,0.178602,0.227332", \
				        "0.199189,0.193688,0.200552,0.221740,0.270122", \
				        "0.239155,0.229536,0.238031,0.256504,0.309381", \
				        "0.306194,0.295478,0.300065,0.324225,0.367380", \
				        "0.412743,0.401270,0.407349,0.428347,0.476111");
			}
			rise_constraint(Setup) {
				values ("0.207501,0.178792,0.168614,0.194353,0.209961", \
				        "0.242762,0.220966,0.219068,0.204282,0.240992", \
				        "0.236093,0.217624,0.220284,0.214614,0.234682", \
				        "0.264635,0.227816,0.239591,0.219918,0.253092", \
				        "0.242318,0.224233,0.216424,0.214810,0.232259");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & SE & SN";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1) && (SN == 1'b1)";
			fall_constraint(Setup) {
				values ("0.158780,0.150412,0.157252,0.178602,0.227332", \
				        "0.199190,0.193689,0.200553,0.221741,0.270123", \
				        "0.239157,0.229537,0.238033,0.256505,0.309382", \
				        "0.306197,0.295481,0.300067,0.324227,0.367382", \
				        "0.412747,0.401273,0.407353,0.428350,0.476114");
			}
			rise_constraint(Setup) {
				values ("0.207557,0.178837,0.168654,0.194392,0.209995", \
				        "0.242847,0.221039,0.219136,0.204338,0.241043", \
				        "0.236195,0.217715,0.220369,0.214687,0.234744", \
				        "0.264776,0.227940,0.239710,0.220020,0.253180", \
				        "0.242507,0.224408,0.216588,0.214957,0.232383");
			}
		}

		internal_power () {

			power(Hidden_Power_Data) {
				values ("0.008404,0.008386,0.008356,0.008321,0.008377,0.008738,0.009915,0.012720");
			}

		}
	}

	pin (SN) {

		direction		: input;
		capacitance		: 0.002460;
		fall_capacitance	: 0.002402;
		rise_capacitance	: 0.002518;
		fall_capacitance_range		(0.002258, 0.002441);
		rise_capacitance_range		(0.002480, 0.002530);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.108784;

		timing () {

			related_pin	   : "CK";
			timing_type	   : recovery_rising;
			rise_constraint(Recovery) {
				values ("-0.033193,-0.052908,-0.055053,-0.057685,-0.029919", \
				        "-0.050677,-0.061852,-0.064405,-0.068812,-0.036411", \
				        "-0.040636,-0.057059,-0.054747,-0.039134,-0.032961", \
				        "0.021087,-0.007155,0.005341,-0.003369,0.012185", \
				        "0.144441,0.083792,0.114826,0.089121,0.165783");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : removal_rising;
			rise_constraint(Removal) {
				values ("0.051344,0.072194,0.078207,0.078137,0.060219", \
				        "0.081155,0.099972,0.104102,0.102184,0.083941", \
				        "0.100069,0.117810,0.122040,0.120364,0.102999", \
				        "0.133621,0.150391,0.153896,0.152202,0.136068", \
				        "0.195961,0.212703,0.214969,0.213423,0.198661");
			}
		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000109,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000109,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000052,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000063,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000109,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000109,0.000034,0.000026,0.000019,0.000010");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000061,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000052,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000052,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000062,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000052,0.000019,0.000014,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000061,0.000020,0.000015,0.000009,0.000002");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE & SI";

			power(Hidden_Power_Set_Reset) {
				values ("0.000062,0.000020,0.000015,0.000009,0.000002");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.107275,0.116685,0.126731,0.143719,0.170729,0.214082", \
				        "0.110453,0.119865,0.129990,0.146894,0.173784,0.217142", \
				        "0.115790,0.125214,0.135275,0.152181,0.179026,0.222090", \
				        "0.121768,0.131193,0.141292,0.158236,0.185133,0.228162", \
				        "0.127307,0.136737,0.146834,0.163831,0.190984,0.234208", \
				        "0.130283,0.139716,0.149864,0.166592,0.193960,0.236902", \
				        "0.125814,0.135262,0.145443,0.162257,0.189372,0.232852", \
				        "0.100868,0.110687,0.121172,0.138614,0.166124,0.209758");
			}
			cell_rise(Timing_X2) {
				values ("0.146633,0.158865,0.172422,0.195331,0.236032,0.311334", \
				        "0.150000,0.162231,0.175778,0.198779,0.239498,0.314807", \
				        "0.155828,0.168050,0.181576,0.204615,0.245187,0.320377", \
				        "0.162658,0.174875,0.188474,0.211792,0.252335,0.327237", \
				        "0.170007,0.182213,0.195690,0.218998,0.259679,0.334617", \
				        "0.174937,0.187116,0.200571,0.223535,0.264360,0.339351", \
				        "0.170309,0.182456,0.195897,0.219112,0.259647,0.334980", \
				        "0.142401,0.154525,0.167939,0.190958,0.231449,0.306418");
			}
			fall_transition(Timing_X2) {
				values ("0.015146,0.019246,0.024191,0.033352,0.047906,0.075048", \
				        "0.015150,0.019246,0.024198,0.033327,0.047900,0.075054", \
				        "0.015158,0.019248,0.024205,0.033328,0.047911,0.075001", \
				        "0.015141,0.019252,0.024221,0.033325,0.047948,0.075215", \
				        "0.015141,0.019260,0.024224,0.033393,0.047952,0.075297", \
				        "0.015159,0.019269,0.024244,0.033271,0.047987,0.075075", \
				        "0.015352,0.019493,0.024488,0.033508,0.048111,0.075219", \
				        "0.017168,0.021141,0.025976,0.034895,0.049065,0.075806");
			}
			rise_transition(Timing_X2) {
				values ("0.017342,0.024461,0.032792,0.048757,0.081231,0.146807", \
				        "0.017329,0.024464,0.032799,0.048720,0.081221,0.146817", \
				        "0.017322,0.024437,0.032792,0.048740,0.081135,0.146782", \
				        "0.017301,0.024419,0.032772,0.048735,0.081170,0.146849", \
				        "0.017262,0.024390,0.032724,0.048633,0.081097,0.146831", \
				        "0.017209,0.024319,0.032673,0.048634,0.081174,0.146831", \
				        "0.017101,0.024226,0.032573,0.048556,0.081159,0.146685", \
				        "0.017001,0.024133,0.032501,0.048459,0.081044,0.146791");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.129425,0.140466,0.152871,0.174044,0.212669,0.285966", \
				        "0.133092,0.144212,0.156769,0.177809,0.216398,0.289685", \
				        "0.141178,0.152289,0.164806,0.185891,0.224481,0.297754", \
				        "0.157040,0.168117,0.180510,0.201612,0.240443,0.313549", \
				        "0.182296,0.193225,0.205533,0.226625,0.265079,0.338322", \
				        "0.220010,0.230776,0.243041,0.264181,0.302226,0.375431", \
				        "0.280306,0.290775,0.302972,0.323951,0.362210,0.435140", \
				        "0.382343,0.392647,0.404225,0.425102,0.463158,0.535741");
			}
			rise_transition(Timing_X2) {
				values ("0.015196,0.021977,0.030073,0.045460,0.077441,0.144838", \
				        "0.015186,0.021977,0.030072,0.045459,0.077428,0.144833", \
				        "0.015189,0.021976,0.030071,0.045409,0.077414,0.144822", \
				        "0.015187,0.021979,0.030075,0.045417,0.077530,0.144797", \
				        "0.015206,0.021987,0.030083,0.045435,0.077417,0.144716", \
				        "0.015237,0.022016,0.030111,0.045516,0.077391,0.144700", \
				        "0.015304,0.022085,0.030174,0.045631,0.077485,0.144783", \
				        "0.015435,0.022212,0.030298,0.045716,0.077635,0.144681");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : preset;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : negative_unate;

			cell_rise(Timing_X2) {
				values ("0.184196,0.195984,0.208966,0.231191,0.270458,0.344360", \
				        "0.187678,0.199432,0.212783,0.234860,0.274127,0.348030", \
				        "0.194234,0.205972,0.218856,0.241012,0.280403,0.354283", \
				        "0.205978,0.217850,0.230836,0.252966,0.292195,0.365737", \
				        "0.227287,0.239029,0.251908,0.274206,0.313361,0.387089", \
				        "0.257492,0.269163,0.282889,0.304858,0.344164,0.418010", \
				        "0.297255,0.309013,0.322008,0.345370,0.384005,0.457745", \
				        "0.344677,0.356492,0.369348,0.391795,0.432720,0.506436");
			}
			rise_transition(Timing_X2) {
				values ("0.016154,0.023082,0.031293,0.046920,0.078557,0.145463", \
				        "0.016173,0.023102,0.031312,0.046920,0.078556,0.145463", \
				        "0.016172,0.023102,0.031315,0.046889,0.078593,0.145460", \
				        "0.016112,0.023104,0.031309,0.046892,0.078563,0.145349", \
				        "0.016179,0.023103,0.031308,0.046907,0.078581,0.145330", \
				        "0.016157,0.023099,0.031332,0.046960,0.078597,0.145365", \
				        "0.016254,0.023199,0.031442,0.047037,0.078642,0.145401", \
				        "0.016428,0.023378,0.031610,0.047186,0.078775,0.145399");
			}
			cell_fall(scalar) {values ("0.0");
			}
			fall_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.006700,0.006620,0.006574,0.006563,0.006522,0.006513", \
				        "0.006695,0.006615,0.006571,0.006535,0.006513,0.006507", \
				        "0.006716,0.006636,0.006590,0.006566,0.006537,0.006528", \
				        "0.006781,0.006710,0.006664,0.006634,0.006613,0.006611", \
				        "0.007011,0.006941,0.006893,0.006864,0.006843,0.006845", \
				        "0.007628,0.007548,0.007509,0.007479,0.007458,0.007441", \
				        "0.009079,0.008995,0.008954,0.008922,0.008880,0.008880", \
				        "0.012268,0.012170,0.012108,0.012053,0.012017,0.011999");
			}
			rise_power(Power_X2) {
				values ("0.005852,0.005765,0.005708,0.005658,0.005621,0.005594", \
				        "0.005851,0.005764,0.005705,0.005658,0.005623,0.005598", \
				        "0.005870,0.005781,0.005728,0.005680,0.005642,0.005614", \
				        "0.005935,0.005846,0.005791,0.005755,0.005717,0.005696", \
				        "0.006163,0.006076,0.006020,0.005978,0.005942,0.005920", \
				        "0.006768,0.006680,0.006624,0.006580,0.006553,0.006531", \
				        "0.008156,0.008070,0.008015,0.007973,0.007942,0.007928", \
				        "0.011147,0.011063,0.011009,0.010962,0.010926,0.010903");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			rise_power(Power_X2) {
				values ("0.007149,0.007115,0.007096,0.007079,0.007066,0.007065", \
				        "0.007145,0.007110,0.007094,0.007075,0.007063,0.007061", \
				        "0.007173,0.007138,0.007118,0.007101,0.007088,0.007086", \
				        "0.007277,0.007244,0.007219,0.007200,0.007187,0.007189", \
				        "0.007591,0.007538,0.007505,0.007477,0.007457,0.007456", \
				        "0.008336,0.008263,0.008238,0.008194,0.008162,0.008151", \
				        "0.010017,0.009916,0.009851,0.009807,0.009751,0.009719", \
				        "0.013114,0.012986,0.012893,0.012805,0.012756,0.012697");
			}
			fall_power(scalar) {values ("0.0");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.231869,0.239581,0.248350,0.262804,0.286921,0.327840", \
				        "0.235278,0.242962,0.251716,0.266234,0.290383,0.331298", \
				        "0.240988,0.248719,0.257473,0.272066,0.295987,0.336797", \
				        "0.247730,0.255485,0.264286,0.279187,0.303145,0.343611", \
				        "0.254998,0.262680,0.271389,0.286313,0.310407,0.350966", \
				        "0.259700,0.267451,0.276127,0.290699,0.314956,0.355628", \
				        "0.254908,0.262599,0.271340,0.286169,0.310147,0.351105", \
				        "0.226861,0.234565,0.243288,0.257945,0.281811,0.322338");
			}
			cell_rise(Timing_X2) {
				values ("0.141626,0.148612,0.157492,0.175520,0.211557,0.284117", \
				        "0.144805,0.151793,0.160753,0.178708,0.214625,0.287191", \
				        "0.150133,0.157143,0.166038,0.183963,0.219891,0.292321", \
				        "0.156094,0.163121,0.172029,0.190000,0.225982,0.298133", \
				        "0.161689,0.168640,0.177553,0.195496,0.231676,0.303946", \
				        "0.164631,0.171647,0.180593,0.198427,0.234705,0.307014", \
				        "0.160097,0.167098,0.176061,0.193915,0.229973,0.302588", \
				        "0.135212,0.142224,0.151170,0.169182,0.205172,0.277559");
			}
			fall_transition(Timing_X2) {
				values ("0.016564,0.020195,0.024456,0.032031,0.046049,0.073850", \
				        "0.016595,0.020200,0.024441,0.032019,0.046062,0.073926", \
				        "0.016552,0.020180,0.024451,0.032033,0.045914,0.073846", \
				        "0.016552,0.020193,0.024437,0.032033,0.045984,0.073908", \
				        "0.016581,0.020190,0.024434,0.031969,0.045880,0.073897", \
				        "0.016550,0.020185,0.024442,0.031992,0.045980,0.073930", \
				        "0.016568,0.020176,0.024423,0.032009,0.046107,0.073978", \
				        "0.016563,0.020173,0.024421,0.031975,0.045886,0.073827");
			}
			rise_transition(Timing_X2) {
				values ("0.012589,0.017876,0.025657,0.042497,0.076807,0.146072", \
				        "0.012588,0.017871,0.025658,0.042370,0.076803,0.145940", \
				        "0.012581,0.017867,0.025651,0.042352,0.076822,0.146077", \
				        "0.012520,0.017835,0.025709,0.042354,0.076797,0.145965", \
				        "0.012495,0.017857,0.025708,0.042354,0.076790,0.145976", \
				        "0.012589,0.017872,0.025709,0.042529,0.076782,0.146086", \
				        "0.012647,0.017924,0.025739,0.042533,0.076794,0.146021", \
				        "0.012951,0.018107,0.025768,0.042397,0.076824,0.146088");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "!CK";
			sdf_cond	   : "(CK == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044846,0.050387,0.056611,0.067400,0.086654,0.123408", \
				        "0.048499,0.054112,0.060376,0.071123,0.090439,0.127197", \
				        "0.056682,0.062284,0.068484,0.079209,0.098460,0.135228", \
				        "0.072374,0.078062,0.084389,0.095218,0.114499,0.151290", \
				        "0.095305,0.101842,0.108872,0.120541,0.140407,0.177320", \
				        "0.129231,0.136639,0.144805,0.157975,0.179094,0.216433", \
				        "0.184069,0.192399,0.201648,0.216864,0.240042,0.278538", \
				        "0.276779,0.287083,0.297951,0.315280,0.341788,0.382082");
			}
			fall_transition(Timing_X2) {
				values ("0.008845,0.011626,0.015144,0.022138,0.036697,0.067340", \
				        "0.008821,0.011609,0.015123,0.022114,0.036709,0.067327", \
				        "0.008844,0.011635,0.015142,0.022104,0.036718,0.067336", \
				        "0.009633,0.012203,0.015550,0.022391,0.036948,0.067363", \
				        "0.011860,0.014445,0.017656,0.024123,0.037697,0.067533", \
				        "0.014895,0.017681,0.020856,0.026972,0.039999,0.068312", \
				        "0.019688,0.022349,0.025616,0.031648,0.043539,0.069895", \
				        "0.026944,0.029642,0.032977,0.039031,0.049785,0.073566");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "SN";
			timing_type	   : clear;
			when	           : "CK";
			sdf_cond	   : "(CK == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.044915,0.050334,0.056514,0.067305,0.086699,0.123494", \
				        "0.048464,0.054050,0.060275,0.071058,0.090455,0.127251", \
				        "0.056567,0.062160,0.068327,0.079116,0.098513,0.135309", \
				        "0.072230,0.078000,0.084288,0.095196,0.114633,0.151345", \
				        "0.095316,0.101736,0.108783,0.120494,0.140522,0.177438", \
				        "0.129085,0.136458,0.144930,0.157858,0.179100,0.216617", \
				        "0.183637,0.192078,0.201368,0.216541,0.239478,0.278174", \
				        "0.271741,0.281019,0.290970,0.306951,0.332020,0.370817");
			}
			fall_transition(Timing_X2) {
				values ("0.008662,0.011553,0.015127,0.022202,0.036754,0.067337", \
				        "0.008720,0.011542,0.015124,0.022204,0.036755,0.067337", \
				        "0.008758,0.011565,0.015145,0.022217,0.036757,0.067336", \
				        "0.009484,0.012142,0.015603,0.022541,0.036881,0.067353", \
				        "0.011632,0.014401,0.017679,0.024197,0.037823,0.067584", \
				        "0.014762,0.017695,0.020948,0.027234,0.039930,0.068527", \
				        "0.019188,0.022163,0.025466,0.031660,0.043739,0.070180", \
				        "0.022662,0.025818,0.029418,0.035539,0.046298,0.070566");
			}
			cell_rise(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005860,0.005772,0.005714,0.005665,0.005627,0.005604", \
				        "0.005859,0.005770,0.005713,0.005664,0.005630,0.005604", \
				        "0.005876,0.005788,0.005735,0.005687,0.005647,0.005620", \
				        "0.005941,0.005853,0.005798,0.005760,0.005722,0.005702", \
				        "0.006169,0.006081,0.006025,0.005983,0.005946,0.005924", \
				        "0.006772,0.006684,0.006628,0.006583,0.006556,0.006535", \
				        "0.008161,0.008073,0.008019,0.007976,0.007945,0.007931", \
				        "0.011154,0.011068,0.011014,0.010967,0.010930,0.010907");
			}
			rise_power(Power_X2) {
				values ("0.006700,0.006620,0.006574,0.006563,0.006522,0.006513", \
				        "0.006695,0.006615,0.006571,0.006535,0.006513,0.006507", \
				        "0.006716,0.006636,0.006590,0.006566,0.006537,0.006528", \
				        "0.006781,0.006710,0.006664,0.006634,0.006613,0.006611", \
				        "0.007011,0.006941,0.006893,0.006864,0.006843,0.006845", \
				        "0.007628,0.007548,0.007509,0.007479,0.007458,0.007442", \
				        "0.009079,0.008995,0.008954,0.008922,0.008880,0.008880", \
				        "0.012268,0.012170,0.012108,0.012053,0.012017,0.011999");
			}
		}

		internal_power () {

			related_pin	         : "SN";
			fall_power(Power_X2) {
				values ("0.007172,0.007131,0.007111,0.007095,0.007082,0.007079", \
				        "0.007155,0.007126,0.007109,0.007091,0.007078,0.007076", \
				        "0.007181,0.007152,0.007130,0.007113,0.007101,0.007099", \
				        "0.007290,0.007253,0.007228,0.007211,0.007197,0.007198", \
				        "0.007605,0.007545,0.007518,0.007490,0.007471,0.007469", \
				        "0.008342,0.008267,0.008245,0.008201,0.008169,0.008159", \
				        "0.009999,0.009896,0.009840,0.009798,0.009740,0.009710", \
				        "0.013085,0.012959,0.012866,0.012778,0.012733,0.012676");
			}
			rise_power(scalar) {values ("0.0");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFF_X1
 Cell Description	: Pos.edge D-Flip-Flop with drive strength X1
*******************************************************************************************/

cell (SDFF_X1) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
	}

	area               	: 6.118000;

	cell_leakage_power 	: 15376.247917;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000875;
		fall_capacitance	: 0.000821;
		rise_capacitance	: 0.000930;
		fall_capacitance_range		(0.000653, 0.000952);
		rise_capacitance_range		(0.000758, 0.001017);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;
		min_pulse_width_high	: 0.106255;

		internal_power () {

			when      	: "!D & !Q & QN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003208,0.003662,0.004568,0.006690,0.011330");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003145,0.003605,0.004519,0.006658,0.011310");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003145,0.003605,0.004519,0.006658,0.011310");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003145,0.003605,0.004519,0.006658,0.011310");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003206,0.003661,0.004567,0.006690,0.011329");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003145,0.003605,0.004519,0.006658,0.011310");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003455,0.003903,0.004806,0.006930,0.011569");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003206,0.003661,0.004567,0.006690,0.011329");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000962;
		fall_capacitance	: 0.000934;
		rise_capacitance	: 0.000991;
		fall_capacitance_range		(0.000850, 0.001009);
		rise_capacitance_range		(0.000916, 0.001087);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & !SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.108201,-0.103105,-0.111078,-0.134397,-0.178282", \
				        "-0.148776,-0.148306,-0.153898,-0.178500,-0.215801", \
				        "-0.186775,-0.184082,-0.192383,-0.209851,-0.250816", \
				        "-0.249333,-0.242675,-0.252139,-0.268195,-0.309160", \
				        "-0.350560,-0.345706,-0.351981,-0.374574,-0.414201");
			}
			rise_constraint(Hold) {
				values ("-0.076218,-0.058631,-0.058264,-0.072953,-0.091208", \
				        "-0.106044,-0.091564,-0.087901,-0.093428,-0.117361", \
				        "-0.116535,-0.103161,-0.091950,-0.108327,-0.133433", \
				        "-0.122906,-0.100696,-0.107082,-0.108512,-0.135892", \
				        "-0.102279,-0.085249,-0.085450,-0.097223,-0.116730");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.108202,-0.103106,-0.111079,-0.134398,-0.178283", \
				        "-0.148777,-0.148307,-0.153899,-0.178501,-0.215802", \
				        "-0.186776,-0.184082,-0.192384,-0.209852,-0.250817", \
				        "-0.249334,-0.242676,-0.252140,-0.268196,-0.309161", \
				        "-0.350561,-0.345707,-0.351982,-0.374575,-0.414202");
			}
			rise_constraint(Hold) {
				values ("-0.076218,-0.058631,-0.058264,-0.072953,-0.091208", \
				        "-0.106044,-0.091564,-0.087901,-0.093428,-0.117361", \
				        "-0.116535,-0.103161,-0.091950,-0.108327,-0.133433", \
				        "-0.122906,-0.100696,-0.107082,-0.108512,-0.135892", \
				        "-0.102279,-0.085249,-0.085450,-0.097223,-0.116730");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & !SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.137955,0.134417,0.143449,0.166898,0.218092", \
				        "0.178771,0.176138,0.185813,0.210134,0.262658", \
				        "0.219755,0.213928,0.222847,0.245495,0.299491", \
				        "0.279795,0.273479,0.282339,0.304150,0.358142", \
				        "0.382514,0.380339,0.386444,0.408306,0.460345");
			}
			rise_constraint(Setup) {
				values ("0.166334,0.148171,0.137243,0.145588,0.168681", \
				        "0.194868,0.172634,0.169071,0.165123,0.195588", \
				        "0.205594,0.188422,0.178441,0.185910,0.204478", \
				        "0.213663,0.191184,0.182509,0.184867,0.207462", \
				        "0.192235,0.175988,0.169428,0.169227,0.197898");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.137955,0.134417,0.143449,0.166898,0.218092", \
				        "0.178771,0.176138,0.185813,0.210134,0.262658", \
				        "0.219755,0.213928,0.222847,0.245495,0.299491", \
				        "0.279795,0.273479,0.282339,0.304150,0.358142", \
				        "0.382514,0.380339,0.386444,0.408306,0.460345");
			}
			rise_constraint(Setup) {
				values ("0.166334,0.148170,0.137243,0.145588,0.168681", \
				        "0.194867,0.172634,0.169070,0.165122,0.195588", \
				        "0.205593,0.188421,0.178441,0.185909,0.204478", \
				        "0.213662,0.191183,0.189381,0.184866,0.217081", \
				        "0.192234,0.175987,0.169427,0.169227,0.197897");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN & SE & SI";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000025,0.000016,0.000009,0.000006,0.000001,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.003604,0.003594,0.003560,0.003527,0.003594,0.003969,0.005154,0.007939");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.008173,0.008157,0.008124,0.008094,0.008148,0.008521,0.009707,0.012536");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.003611,0.003592,0.003566,0.003537,0.003592,0.003966,0.005170,0.007946");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & SE & SI";

			power(Hidden_Power_Data) {
				values ("0.000044,0.000024,0.000016,0.000008,0.000005,0.000001,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.000025,0.000021,0.000018,0.000013,0.000010,0.000008,0.000006,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.008182,0.008160,0.008119,0.008098,0.008141,0.008519,0.009711,0.012539");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.003613,0.003596,0.003570,0.003536,0.003593,0.003978,0.005163,0.007952");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.008178,0.008163,0.008125,0.008105,0.008151,0.008530,0.009715,0.012544");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000022,0.000018,0.000014,0.000011,0.000009,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.008177,0.008159,0.008120,0.008109,0.008151,0.008521,0.009716,0.012544");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.003603,0.003597,0.003556,0.003533,0.003598,0.003973,0.005152,0.007934");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001538;
		fall_capacitance	: 0.001439;
		rise_capacitance	: 0.001636;
		fall_capacitance_range		(0.001232, 0.001626);
		rise_capacitance_range		(0.001461, 0.001746);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SI";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.067811,-0.064652,-0.073504,-0.091080,-0.135138", \
				        "-0.115187,-0.115980,-0.124374,-0.141648,-0.183610", \
				        "-0.152761,-0.152350,-0.156531,-0.180454,-0.217159", \
				        "-0.212549,-0.209780,-0.215581,-0.235281,-0.279890", \
				        "-0.311754,-0.303433,-0.311786,-0.334626,-0.371752");
			}
			rise_constraint(Hold) {
				values ("-0.066222,-0.046902,-0.044704,-0.055730,-0.078933", \
				        "-0.083855,-0.065908,-0.073241,-0.075105,-0.104537", \
				        "-0.092001,-0.075159,-0.076118,-0.079084,-0.106610", \
				        "-0.079072,-0.068005,-0.070728,-0.075751,-0.099433", \
				        "-0.044376,-0.032662,-0.028283,-0.044163,-0.057481");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & !SI";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.086213,-0.058631,-0.058264,-0.072954,-0.103484", \
				        "-0.117138,-0.104393,-0.102561,-0.111752,-0.143012", \
				        "-0.153335,-0.131162,-0.131531,-0.137572,-0.166962", \
				        "-0.195962,-0.182423,-0.179791,-0.184955,-0.208812", \
				        "-0.275985,-0.253527,-0.256949,-0.269669,-0.294481");
			}
			rise_constraint(Hold) {
				values ("-0.085483,-0.082400,-0.090584,-0.108408,-0.153630", \
				        "-0.098392,-0.096584,-0.102230,-0.123222,-0.164296", \
				        "-0.097100,-0.095938,-0.104743,-0.121659,-0.170040", \
				        "-0.091161,-0.086422,-0.096763,-0.114594,-0.159151", \
				        "-0.059514,-0.055071,-0.064870,-0.088275,-0.125545");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SI";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.113198,0.110186,0.120078,0.143243,0.192320", \
				        "0.168428,0.162127,0.173687,0.196177,0.249442", \
				        "0.208943,0.205168,0.216549,0.238281,0.290446", \
				        "0.279793,0.273477,0.278954,0.304149,0.353384", \
				        "0.382512,0.380336,0.386441,0.408304,0.460343");
			}
			rise_constraint(Setup) {
				values ("0.156219,0.137188,0.137243,0.131858,0.159984", \
				        "0.189590,0.172634,0.156732,0.165122,0.195588", \
				        "0.194570,0.176530,0.172038,0.171271,0.195327", \
				        "0.201701,0.178355,0.175637,0.177078,0.197842", \
				        "0.178398,0.161284,0.153808,0.151776,0.187340");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & !SI";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.176450,0.159153,0.149141,0.159318,0.186075", \
				        "0.215977,0.195478,0.193746,0.193462,0.213421", \
				        "0.249688,0.224093,0.216861,0.215186,0.241082", \
				        "0.291410,0.268153,0.258102,0.262746,0.294039", \
				        "0.365187,0.337723,0.341238,0.343736,0.366814");
			}
			rise_constraint(Setup) {
				values ("0.128052,0.123648,0.134685,0.156760,0.209501", \
				        "0.134818,0.131302,0.140345,0.164775,0.218608", \
				        "0.133270,0.126345,0.137841,0.158943,0.213568", \
				        "0.121194,0.115788,0.126731,0.146681,0.201174", \
				        "0.089617,0.083290,0.093728,0.115262,0.167724");
			}
		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SI";

			power(Hidden_Power_Data) {
				values ("0.003292,0.003256,0.003317,0.003611,0.004438,0.006489,0.011069,0.020765");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.003608,0.003652,0.003730,0.004028,0.004750,0.006327,0.009475,0.015608");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.001269,0.001261,0.001302,0.001489,0.002024,0.003298,0.006078,0.011841");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.003614,0.003620,0.003727,0.004032,0.004756,0.006327,0.009486,0.015610");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.007838,0.007823,0.007877,0.008161,0.008978,0.011024,0.015617,0.025404");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.001214,0.001202,0.001251,0.001448,0.001989,0.003271,0.006055,0.011821");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SI";

			power(Hidden_Power_Data) {
				values ("0.007860,0.007841,0.007896,0.008171,0.008995,0.011042,0.015632,0.025423");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.003267,0.003255,0.003306,0.003598,0.004422,0.006471,0.011055,0.020751");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.001213,0.001201,0.001253,0.001448,0.001988,0.003270,0.006054,0.011821");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.001271,0.001260,0.001302,0.001488,0.002023,0.003297,0.006077,0.011840");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.008172,0.008200,0.008291,0.008594,0.009320,0.010891,0.014043,0.020166");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.008179,0.008212,0.008293,0.008594,0.009318,0.010890,0.014039,0.020165");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.000889;
		fall_capacitance	: 0.000869;
		rise_capacitance	: 0.000908;
		fall_capacitance_range		(0.000820, 0.000884);
		rise_capacitance_range		(0.000893, 0.000916);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SE";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.103233,-0.099363,-0.110589,-0.129080,-0.170526", \
				        "-0.147540,-0.146565,-0.152698,-0.172472,-0.213992", \
				        "-0.187095,-0.181125,-0.194328,-0.212782,-0.255456", \
				        "-0.250622,-0.245372,-0.252713,-0.270398,-0.313658", \
				        "-0.352149,-0.345219,-0.355252,-0.375043,-0.409675");
			}
			rise_constraint(Hold) {
				values ("-0.076218,-0.058631,-0.058265,-0.072954,-0.091209", \
				        "-0.106043,-0.091564,-0.087901,-0.093429,-0.117362", \
				        "-0.116535,-0.089160,-0.091950,-0.098580,-0.133434", \
				        "-0.122905,-0.100696,-0.097994,-0.108513,-0.135893", \
				        "-0.102278,-0.074732,-0.085450,-0.097223,-0.108267");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & SE";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.103153,-0.103105,-0.111078,-0.130065,-0.172119", \
				        "-0.148776,-0.148306,-0.153898,-0.173893,-0.215801", \
				        "-0.186775,-0.184082,-0.192384,-0.209851,-0.250816", \
				        "-0.249333,-0.242675,-0.252139,-0.273681,-0.316477", \
				        "-0.350560,-0.345707,-0.357724,-0.374575,-0.414201");
			}
			rise_constraint(Hold) {
				values ("-0.079920,-0.059376,-0.056362,-0.066368,-0.094614", \
				        "-0.108850,-0.078586,-0.085205,-0.095211,-0.120747", \
				        "-0.118169,-0.102041,-0.096151,-0.109728,-0.129998", \
				        "-0.122093,-0.097232,-0.101175,-0.108945,-0.131540", \
				        "-0.096471,-0.087613,-0.086388,-0.082249,-0.118855");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SE";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.133003,0.129032,0.140528,0.163519,0.213796", \
				        "0.178770,0.173335,0.182781,0.206644,0.258252", \
				        "0.217051,0.211007,0.222846,0.245494,0.294968", \
				        "0.279793,0.276631,0.282337,0.307989,0.358141", \
				        "0.385917,0.380336,0.388367,0.408304,0.460343");
			}
			rise_constraint(Setup) {
				values ("0.166337,0.148173,0.137245,0.145590,0.168683", \
				        "0.194873,0.172638,0.169074,0.165126,0.195591", \
				        "0.205600,0.188427,0.178446,0.185914,0.204482", \
				        "0.207691,0.191192,0.182517,0.184873,0.207467", \
				        "0.192247,0.175999,0.169438,0.169237,0.187349");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & SE";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132999,0.129029,0.140524,0.163515,0.213792", \
				        "0.178763,0.173329,0.182775,0.206638,0.258247", \
				        "0.214338,0.210998,0.219689,0.245486,0.294961", \
				        "0.279777,0.273463,0.282324,0.307977,0.358130", \
				        "0.385894,0.380315,0.388346,0.408285,0.460327");
			}
			rise_constraint(Setup) {
				values ("0.166334,0.148171,0.137243,0.145588,0.168681", \
				        "0.194867,0.172634,0.169070,0.165123,0.195588", \
				        "0.205594,0.188422,0.178441,0.185909,0.204478", \
				        "0.207682,0.191184,0.182509,0.184867,0.207462", \
				        "0.192235,0.175988,0.169428,0.169227,0.187341");
			}
		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008134,0.008112,0.008087,0.008077,0.008131,0.008523,0.009712,0.012543");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008130,0.008112,0.008089,0.008071,0.008126,0.008522,0.009712,0.012539");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003570,0.003547,0.003525,0.003506,0.003574,0.003960,0.005156,0.007947");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000018,0.000013,0.000009,0.000006,0.000005,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000055,0.000032,0.000023,0.000016,0.000011,0.000007,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000019,0.000014,0.000010,0.000007,0.000006,0.000003,-0.000001");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003563,0.003546,0.003516,0.003508,0.003567,0.003960,0.005146,0.007937");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003573,0.003548,0.003520,0.003514,0.003572,0.003967,0.005155,0.007946");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003567,0.003547,0.003523,0.003512,0.003569,0.003968,0.005153,0.007942");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008129,0.008110,0.008079,0.008070,0.008123,0.008515,0.009705,0.012536");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000033,0.000025,0.000017,0.000012,0.000008,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008132,0.008114,0.008083,0.008073,0.008132,0.008512,0.009710,0.012539");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.084139,0.088934,0.097254,0.111170,0.134605,0.175673", \
				        "0.087307,0.092097,0.100373,0.114213,0.137605,0.178674", \
				        "0.092218,0.097013,0.105248,0.119270,0.142467,0.183542", \
				        "0.097458,0.102260,0.110598,0.124620,0.148070,0.188604", \
				        "0.102278,0.107108,0.115457,0.129479,0.152876,0.193636", \
				        "0.104686,0.109502,0.117885,0.131904,0.155390,0.196305", \
				        "0.098780,0.103610,0.112112,0.126273,0.149894,0.190998", \
				        "0.069800,0.075109,0.084115,0.098974,0.123176,0.164526");
			}
			cell_rise(Timing_X1) {
				values ("0.125317,0.131497,0.142830,0.163698,0.202754,0.278974", \
				        "0.128441,0.134637,0.145994,0.166953,0.206009,0.281992", \
				        "0.133585,0.139781,0.151152,0.172310,0.211306,0.287166", \
				        "0.139300,0.145499,0.156845,0.178025,0.217366,0.293000", \
				        "0.145148,0.151318,0.162633,0.183591,0.223281,0.299957", \
				        "0.148129,0.154321,0.165672,0.186657,0.225946,0.301913", \
				        "0.141356,0.147544,0.158905,0.179796,0.218882,0.295321", \
				        "0.109513,0.115720,0.127843,0.148901,0.187988,0.263824");
			}
			fall_transition(Timing_X1) {
				values ("0.016865,0.019054,0.023032,0.030445,0.045010,0.074899", \
				        "0.016870,0.019077,0.023046,0.030454,0.045010,0.075116", \
				        "0.016870,0.019082,0.023064,0.030483,0.045015,0.075123", \
				        "0.016977,0.019152,0.023111,0.030541,0.045129,0.074960", \
				        "0.017041,0.019230,0.023210,0.030659,0.045202,0.074979", \
				        "0.017213,0.019396,0.023367,0.030790,0.045231,0.075248", \
				        "0.017873,0.020036,0.023891,0.031202,0.045556,0.075209", \
				        "0.021049,0.022904,0.026339,0.033078,0.046858,0.076009");
			}
			rise_transition(Timing_X1) {
				values ("0.021816,0.025895,0.033975,0.050404,0.084677,0.155315", \
				        "0.021833,0.025889,0.033973,0.050406,0.084677,0.155419", \
				        "0.021832,0.025888,0.033970,0.050457,0.084679,0.155422", \
				        "0.021812,0.025892,0.033971,0.050472,0.084703,0.155546", \
				        "0.021887,0.025886,0.033978,0.050424,0.084751,0.155561", \
				        "0.021808,0.025888,0.033978,0.050494,0.084691,0.155495", \
				        "0.021812,0.025881,0.033977,0.050495,0.084778,0.155407", \
				        "0.021906,0.026006,0.034106,0.050611,0.084889,0.155511");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004080,0.004072,0.004068,0.004064,0.004066,0.004070", \
				        "0.004074,0.004069,0.004063,0.004059,0.004061,0.004062", \
				        "0.004097,0.004092,0.004086,0.004088,0.004090,0.004093", \
				        "0.004181,0.004175,0.004169,0.004178,0.004198,0.004201", \
				        "0.004440,0.004436,0.004430,0.004428,0.004431,0.004441", \
				        "0.005106,0.005100,0.005093,0.005091,0.005092,0.005099", \
				        "0.006620,0.006610,0.006601,0.006595,0.006598,0.006608", \
				        "0.009858,0.009845,0.009827,0.009819,0.009812,0.009810");
			}
			rise_power(Power_X1) {
				values ("0.004517,0.004506,0.004496,0.004496,0.004484,0.004471", \
				        "0.004513,0.004504,0.004494,0.004496,0.004492,0.004478", \
				        "0.004534,0.004524,0.004514,0.004522,0.004514,0.004518", \
				        "0.004614,0.004605,0.004595,0.004600,0.004605,0.004592", \
				        "0.004874,0.004862,0.004850,0.004850,0.004851,0.004854", \
				        "0.005515,0.005505,0.005496,0.005495,0.005496,0.005499", \
				        "0.006956,0.006946,0.006936,0.006934,0.006926,0.006934", \
				        "0.009973,0.009964,0.009973,0.009975,0.009968,0.009961");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.177384,0.182065,0.190115,0.203705,0.226408,0.266633", \
				        "0.180517,0.185208,0.193281,0.206953,0.229695,0.269615", \
				        "0.185660,0.190350,0.198437,0.212231,0.234992,0.274776", \
				        "0.191368,0.196071,0.204129,0.217951,0.241054,0.280722", \
				        "0.197188,0.201874,0.209900,0.223621,0.247022,0.288001", \
				        "0.200199,0.204894,0.212971,0.226651,0.249729,0.289731", \
				        "0.193433,0.198117,0.206208,0.219718,0.242469,0.283049", \
				        "0.161733,0.166411,0.175215,0.188827,0.211515,0.251210");
			}
			cell_rise(Timing_X1) {
				values ("0.093257,0.097905,0.107257,0.126072,0.163806,0.239318", \
				        "0.096465,0.101114,0.110362,0.129084,0.166784,0.242316", \
				        "0.101323,0.105991,0.115269,0.134120,0.171608,0.247143", \
				        "0.106551,0.111193,0.120527,0.139358,0.176991,0.251943", \
				        "0.111374,0.116034,0.125377,0.144267,0.181878,0.257018", \
				        "0.113694,0.118335,0.127681,0.146482,0.184123,0.259430", \
				        "0.107399,0.111960,0.121330,0.140165,0.177793,0.253060", \
				        "0.076828,0.081449,0.090656,0.109541,0.147060,0.222066");
			}
			fall_transition(Timing_X1) {
				values ("0.014585,0.016831,0.020872,0.028386,0.042901,0.073011", \
				        "0.014594,0.016826,0.020875,0.028384,0.042923,0.072962", \
				        "0.014594,0.016826,0.020875,0.028387,0.042925,0.072946", \
				        "0.014586,0.016832,0.020874,0.028367,0.042910,0.072748", \
				        "0.014600,0.016833,0.020879,0.028370,0.042913,0.072821", \
				        "0.014591,0.016833,0.020884,0.028389,0.042864,0.072878", \
				        "0.014601,0.016837,0.020890,0.028411,0.042910,0.072874", \
				        "0.014610,0.016866,0.020903,0.028423,0.042934,0.072772");
			}
			rise_transition(Timing_X1) {
				values ("0.012589,0.016797,0.025623,0.043541,0.079392,0.151328", \
				        "0.012665,0.016824,0.025621,0.043537,0.079398,0.151141", \
				        "0.012618,0.016809,0.025632,0.043532,0.079364,0.151137", \
				        "0.012612,0.016818,0.025624,0.043541,0.079442,0.151352", \
				        "0.012686,0.016834,0.025638,0.043533,0.079390,0.151240", \
				        "0.012703,0.016851,0.025639,0.043546,0.079408,0.151212", \
				        "0.012783,0.016883,0.025658,0.043555,0.079378,0.151313", \
				        "0.013221,0.017127,0.025709,0.043569,0.079424,0.151196");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X1) {
				values ("0.004517,0.004506,0.004496,0.004496,0.004484,0.004471", \
				        "0.004513,0.004504,0.004494,0.004496,0.004492,0.004478", \
				        "0.004534,0.004524,0.004514,0.004522,0.004514,0.004518", \
				        "0.004614,0.004605,0.004595,0.004600,0.004605,0.004592", \
				        "0.004874,0.004862,0.004850,0.004850,0.004851,0.004854", \
				        "0.005515,0.005505,0.005496,0.005495,0.005496,0.005499", \
				        "0.006956,0.006946,0.006936,0.006934,0.006926,0.006934", \
				        "0.009973,0.009964,0.009973,0.009975,0.009968,0.009961");
			}
			rise_power(Power_X1) {
				values ("0.004080,0.004072,0.004068,0.004064,0.004066,0.004070", \
				        "0.004074,0.004069,0.004063,0.004059,0.004061,0.004062", \
				        "0.004097,0.004092,0.004086,0.004088,0.004090,0.004093", \
				        "0.004181,0.004175,0.004169,0.004178,0.004198,0.004201", \
				        "0.004440,0.004436,0.004430,0.004428,0.004431,0.004441", \
				        "0.005106,0.005100,0.005093,0.005091,0.005092,0.005099", \
				        "0.006620,0.006610,0.006601,0.006595,0.006598,0.006608", \
				        "0.009858,0.009845,0.009827,0.009819,0.009812,0.009810");
			}
		}
	}

}


/******************************************************************************************
 Module          	: SDFF_X2
 Cell Description	: Pos.edge D-Flip-Flop with drive strength X2
*******************************************************************************************/

cell (SDFF_X2) {

	ff ("IQ" , "IQN") {
		next_state         	: "((SE * SI) + (D * !SE))";
		clocked_on         	: "CK";
	}

	area               	: 6.118000;

	cell_leakage_power 	: 16966.441250;


	pin (CK) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.000874;
		fall_capacitance	: 0.000818;
		rise_capacitance	: 0.000930;
		fall_capacitance_range		(0.000653, 0.000951);
		rise_capacitance_range		(0.000758, 0.001018);
		max_transition		: 0.960000;
		min_pulse_width_low	: 0.137505;
		min_pulse_width_high	: 0.117974;

		internal_power () {

			when      	: "!D & !Q & QN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003207,0.003661,0.004567,0.006690,0.011329");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003412,0.003856,0.004769,0.006906,0.011558");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003412,0.003856,0.004769,0.006906,0.011558");
			}

		}

		internal_power () {

			when      	: "D & Q & !QN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003412,0.003856,0.004769,0.006906,0.011558");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003208,0.003662,0.004568,0.006691,0.011330");
			}

		}

		internal_power () {

			when      	: "!D & Q & !QN & SE & SI";

			power(Hidden_Power_Clk) {
				values ("0.003144,0.003605,0.004520,0.006658,0.011310");
			}

		}

		internal_power () {

			when      	: "!D & !Q & QN & !SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003207,0.003661,0.004567,0.006690,0.011329");
			}

		}

		internal_power () {

			when      	: "D & !Q & QN & SE & !SI";

			power(Hidden_Power_Clk) {
				values ("0.003208,0.003662,0.004568,0.006691,0.011330");
			}

		}
	}

	pin (D) {

		direction		: input;
		nextstate_type		: data;
		capacitance		: 0.000960;
		fall_capacitance	: 0.000932;
		rise_capacitance	: 0.000989;
		fall_capacitance_range		(0.000848, 0.001007);
		rise_capacitance_range		(0.000914, 0.001085);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & !SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.108679,-0.105103,-0.114758,-0.132873,-0.174035", \
				        "-0.150400,-0.148231,-0.158743,-0.177590,-0.218322", \
				        "-0.186507,-0.184928,-0.194464,-0.209574,-0.253970", \
				        "-0.247172,-0.245331,-0.251468,-0.269165,-0.313561", \
				        "-0.350763,-0.346646,-0.353730,-0.371329,-0.412564");
			}
			rise_constraint(Hold) {
				values ("-0.075809,-0.058923,-0.059024,-0.065715,-0.093225", \
				        "-0.105518,-0.091681,-0.088485,-0.094626,-0.119232", \
				        "-0.116009,-0.103219,-0.092476,-0.099690,-0.135186", \
				        "-0.122438,-0.100754,-0.107491,-0.109477,-0.137499", \
				        "-0.101986,-0.085337,-0.085830,-0.098041,-0.118148");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!SE & SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.108680,-0.105104,-0.114760,-0.132874,-0.174036", \
				        "-0.150401,-0.148232,-0.158744,-0.177591,-0.218324", \
				        "-0.186508,-0.184929,-0.194465,-0.209575,-0.253971", \
				        "-0.247173,-0.245332,-0.251469,-0.269166,-0.313562", \
				        "-0.350764,-0.346647,-0.353731,-0.371330,-0.412565");
			}
			rise_constraint(Hold) {
				values ("-0.075809,-0.058923,-0.059024,-0.065715,-0.093225", \
				        "-0.105518,-0.091681,-0.088485,-0.094626,-0.119232", \
				        "-0.116009,-0.103219,-0.092476,-0.099690,-0.135186", \
				        "-0.122438,-0.100754,-0.107491,-0.109477,-0.137499", \
				        "-0.101986,-0.085337,-0.085830,-0.098041,-0.118148");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & !SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.137107,0.133657,0.142704,0.166153,0.217332", \
				        "0.182393,0.177538,0.184483,0.208877,0.261489", \
				        "0.217592,0.214860,0.220977,0.243770,0.297942", \
				        "0.279531,0.273680,0.282930,0.305448,0.355935", \
				        "0.384562,0.379504,0.387997,0.408772,0.457042");
			}
			rise_constraint(Setup) {
				values ("0.167959,0.149509,0.138390,0.146640,0.169637", \
				        "0.197449,0.174833,0.171078,0.166843,0.197117", \
				        "0.208940,0.179399,0.181118,0.180932,0.206486", \
				        "0.206194,0.188832,0.179366,0.188213,0.210282", \
				        "0.198544,0.174420,0.167019,0.174103,0.191451");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!SE & SI";
			sdf_cond	   : "(SE == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.137107,0.133657,0.142704,0.166153,0.217332", \
				        "0.182393,0.177538,0.184483,0.208877,0.261489", \
				        "0.217592,0.214860,0.220977,0.243770,0.297942", \
				        "0.279531,0.273680,0.282930,0.305448,0.355935", \
				        "0.384562,0.379504,0.387997,0.408772,0.457042");
			}
			rise_constraint(Setup) {
				values ("0.167959,0.149509,0.138390,0.146639,0.169637", \
				        "0.197448,0.174832,0.171078,0.166843,0.197117", \
				        "0.208939,0.185391,0.181117,0.180932,0.206485", \
				        "0.206194,0.188832,0.179365,0.188212,0.210281", \
				        "0.198543,0.174419,0.167018,0.174102,0.191451");
			}
		}

		internal_power () {

			when      	: "CK & Q & !QN & SE & SI";

			power(Hidden_Power_Data) {
				values ("0.000036,0.000025,0.000016,0.000009,0.000006,0.000001,-0.000000,-0.000004");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.003604,0.003594,0.003560,0.003527,0.003594,0.003969,0.005154,0.007939");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.008173,0.008157,0.008124,0.008094,0.008148,0.008521,0.009707,0.012536");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.003611,0.003592,0.003566,0.003537,0.003592,0.003967,0.005170,0.007946");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & SE & SI";

			power(Hidden_Power_Data) {
				values ("0.000035,0.000024,0.000015,0.000008,0.000005,0.000000,-0.000001,-0.000005");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000021,0.000018,0.000013,0.000010,0.000008,0.000006,0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & !Q & QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.008173,0.008160,0.008119,0.008098,0.008141,0.008519,0.009711,0.012539");
			}

		}

		internal_power () {

			when      	: "CK & Q & !QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.003613,0.003596,0.003570,0.003536,0.003593,0.003978,0.005163,0.007952");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SE & SI";

			power(Hidden_Power_Data) {
				values ("0.008178,0.008163,0.008125,0.008105,0.008151,0.008530,0.009715,0.012544");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.000026,0.000022,0.000018,0.000014,0.000011,0.000009,0.000006,0.000003");
			}

		}

		internal_power () {

			when      	: "!CK & Q & !QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.008177,0.008159,0.008120,0.008109,0.008151,0.008521,0.009716,0.012544");
			}

		}

		internal_power () {

			when      	: "CK & !Q & QN & !SE & !SI";

			power(Hidden_Power_Data) {
				values ("0.003603,0.003597,0.003556,0.003533,0.003598,0.003974,0.005152,0.007934");
			}

		}
	}

	pin (SE) {

		direction		: input;
		nextstate_type		: scan_enable;
		capacitance		: 0.001537;
		fall_capacitance	: 0.001439;
		rise_capacitance	: 0.001636;
		fall_capacitance_range		(0.001232, 0.001626);
		rise_capacitance_range		(0.001461, 0.001746);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SI";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.068215,-0.063627,-0.073713,-0.093846,-0.137027", \
				        "-0.116755,-0.112621,-0.121791,-0.140702,-0.186109", \
				        "-0.155538,-0.149624,-0.158569,-0.180149,-0.220291", \
				        "-0.214026,-0.208282,-0.219447,-0.236223,-0.276951", \
				        "-0.311920,-0.304335,-0.313503,-0.331353,-0.370092");
			}
			rise_constraint(Hold) {
				values ("-0.065872,-0.047252,-0.045522,-0.057133,-0.080979", \
				        "-0.094481,-0.066142,-0.073884,-0.076362,-0.106437", \
				        "-0.091592,-0.075334,-0.076702,-0.080253,-0.108423", \
				        "-0.093332,-0.068180,-0.071254,-0.076804,-0.093836", \
				        "-0.044259,-0.032896,-0.028810,-0.045098,-0.059001");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & !SI";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0)";
			fall_constraint(Hold) {
				values ("-0.085745,-0.058923,-0.059025,-0.074299,-0.093226", \
				        "-0.116553,-0.104451,-0.103087,-0.112892,-0.138427", \
				        "-0.152633,-0.131104,-0.131911,-0.138566,-0.161952", \
				        "-0.195202,-0.182189,-0.179966,-0.185715,-0.210274", \
				        "-0.275166,-0.253147,-0.256891,-0.270107,-0.295592");
			}
			rise_constraint(Hold) {
				values ("-0.083390,-0.081403,-0.090816,-0.111192,-0.155532", \
				        "-0.099932,-0.096435,-0.103315,-0.122257,-0.166780", \
				        "-0.099794,-0.096668,-0.106721,-0.126203,-0.166402", \
				        "-0.092484,-0.088901,-0.095935,-0.115434,-0.159795", \
				        "-0.059438,-0.055755,-0.066386,-0.084830,-0.123750");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SI";
			sdf_cond	   : "(D == 1'b0) && (SI == 1'b1)";
			fall_constraint(Setup) {
				values ("0.112497,0.109557,0.119450,0.142600,0.195929", \
				        "0.166967,0.163599,0.172416,0.194978,0.248317", \
				        "0.212215,0.206144,0.214708,0.236586,0.288926", \
				        "0.276607,0.273679,0.279560,0.301620,0.351192", \
				        "0.384559,0.379501,0.387995,0.408770,0.457040");
			}
			rise_constraint(Setup) {
				values ("0.157748,0.138431,0.126396,0.132814,0.152147", \
				        "0.186798,0.163315,0.158644,0.166843,0.188153", \
				        "0.197820,0.179398,0.168215,0.173565,0.197286", \
				        "0.200165,0.182370,0.172445,0.172541,0.200614", \
				        "0.184612,0.159620,0.151304,0.156555,0.180846");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & !SI";
			sdf_cond	   : "(D == 1'b1) && (SI == 1'b0)";
			fall_constraint(Setup) {
				values ("0.178170,0.160587,0.150384,0.160465,0.178381", \
				        "0.218749,0.197867,0.195945,0.195374,0.215046", \
				        "0.242297,0.227344,0.219824,0.217767,0.243281", \
				        "0.290591,0.266375,0.262403,0.266570,0.287622", \
				        "0.365725,0.344606,0.332023,0.340794,0.361131");
			}
			rise_constraint(Setup) {
				values ("0.127263,0.122946,0.133984,0.156059,0.208770", \
				        "0.136117,0.130148,0.139234,0.163708,0.217584", \
				        "0.131574,0.127715,0.136364,0.161160,0.212297", \
				        "0.118797,0.116720,0.124626,0.148577,0.199449", \
				        "0.089529,0.083653,0.094473,0.116721,0.170450");
			}
		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SI";

			power(Hidden_Power_Data) {
				values ("0.003291,0.003256,0.003317,0.003610,0.004437,0.006489,0.011068,0.020764");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.003608,0.003652,0.003731,0.004028,0.004750,0.006327,0.009475,0.015608");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.001269,0.001261,0.001302,0.001489,0.002024,0.003298,0.006078,0.011841");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.003614,0.003620,0.003727,0.004032,0.004756,0.006327,0.009486,0.015610");
			}

		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.007838,0.007822,0.007877,0.008161,0.008978,0.011024,0.015617,0.025404");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.001214,0.001202,0.001251,0.001448,0.001989,0.003271,0.006055,0.011821");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SI";

			power(Hidden_Power_Data) {
				values ("0.007859,0.007840,0.007895,0.008170,0.008995,0.011041,0.015631,0.025423");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.003267,0.003255,0.003306,0.003598,0.004422,0.006471,0.011055,0.020751");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SI";

			power(Hidden_Power_Data) {
				values ("0.001213,0.001200,0.001250,0.001447,0.001988,0.003270,0.006054,0.011820");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.001271,0.001261,0.001302,0.001488,0.002023,0.003297,0.006077,0.011840");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.008172,0.008200,0.008291,0.008594,0.009320,0.010891,0.014043,0.020166");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & !SI";

			power(Hidden_Power_Data) {
				values ("0.008179,0.008212,0.008293,0.008594,0.009318,0.010890,0.014039,0.020165");
			}

		}
	}

	pin (SI) {

		direction		: input;
		nextstate_type		: scan_in;
		capacitance		: 0.000889;
		fall_capacitance	: 0.000869;
		rise_capacitance	: 0.000908;
		fall_capacitance_range		(0.000820, 0.000884);
		rise_capacitance_range		(0.000893, 0.000916);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "!D & SE";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.104141,-0.102230,-0.109728,-0.127215,-0.173777", \
				        "-0.148736,-0.146780,-0.155915,-0.175600,-0.217804", \
				        "-0.188481,-0.181555,-0.194089,-0.211539,-0.253042", \
				        "-0.248470,-0.246113,-0.252809,-0.269537,-0.311626", \
				        "-0.348944,-0.346247,-0.355754,-0.374708,-0.416735");
			}
			rise_constraint(Hold) {
				values ("-0.085745,-0.058923,-0.059025,-0.065716,-0.093226", \
				        "-0.105517,-0.091681,-0.088485,-0.094627,-0.119233", \
				        "-0.116008,-0.089277,-0.092476,-0.099690,-0.135187", \
				        "-0.122438,-0.100754,-0.098432,-0.109477,-0.137500", \
				        "-0.101986,-0.074849,-0.074426,-0.084806,-0.109699");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : hold_rising;
			when	           : "D & SE";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.103621,-0.102140,-0.107918,-0.132873,-0.174035", \
				        "-0.150400,-0.144994,-0.155048,-0.177590,-0.218322", \
				        "-0.186507,-0.184928,-0.194464,-0.209574,-0.253970", \
				        "-0.247173,-0.245331,-0.251468,-0.269165,-0.313561", \
				        "-0.350763,-0.346646,-0.353730,-0.371329,-0.412564");
			}
			rise_constraint(Hold) {
				values ("-0.075809,-0.058923,-0.059024,-0.065715,-0.093225", \
				        "-0.105518,-0.091681,-0.088485,-0.094626,-0.119232", \
				        "-0.116009,-0.089277,-0.092476,-0.099690,-0.135186", \
				        "-0.122438,-0.100754,-0.098432,-0.109477,-0.137499", \
				        "-0.101986,-0.074849,-0.074426,-0.084805,-0.109698");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "!D & SE";
			sdf_cond	   : "(D == 1'b0) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132185,0.130979,0.139797,0.162788,0.217331", \
				        "0.177250,0.174749,0.184482,0.208877,0.261489", \
				        "0.217591,0.211954,0.220976,0.243770,0.297941", \
				        "0.282452,0.273679,0.282929,0.305447,0.355934", \
				        "0.384560,0.379502,0.387995,0.408770,0.462251");
			}
			rise_constraint(Setup) {
				values ("0.167963,0.149512,0.138393,0.146642,0.169639", \
				        "0.197454,0.174837,0.171082,0.166847,0.197121", \
				        "0.208947,0.179405,0.181124,0.180938,0.206490", \
				        "0.206204,0.182379,0.179374,0.188220,0.200620", \
				        "0.191592,0.167033,0.159174,0.165340,0.191460");
			}
		}

		timing () {

			related_pin	   : "CK";
			timing_type	   : setup_rising;
			when	           : "D & SE";
			sdf_cond	   : "(D == 1'b1) && (SE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.132185,0.130980,0.139797,0.162789,0.217332", \
				        "0.177251,0.174750,0.184483,0.205403,0.261489", \
				        "0.217592,0.211955,0.220977,0.243770,0.297942", \
				        "0.279531,0.273680,0.282930,0.305448,0.355935", \
				        "0.384562,0.379504,0.387997,0.408772,0.462253");
			}
			rise_constraint(Setup) {
				values ("0.167959,0.149509,0.138390,0.146640,0.169637", \
				        "0.197449,0.174833,0.171078,0.166843,0.197117", \
				        "0.208940,0.179399,0.181118,0.173565,0.206486", \
				        "0.206194,0.182370,0.179365,0.188213,0.200614", \
				        "0.191579,0.167020,0.167019,0.165329,0.191451");
			}
		}

		internal_power () {

			when      	: "!CK & !D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008134,0.008112,0.008087,0.008077,0.008131,0.008524,0.009712,0.012543");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008130,0.008112,0.008089,0.008072,0.008126,0.008522,0.009712,0.012539");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003569,0.003547,0.003524,0.003505,0.003574,0.003959,0.005155,0.007946");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000018,0.000013,0.000009,0.000006,0.000005,0.000002,-0.000002");
			}

		}

		internal_power () {

			when      	: "!CK & D & Q & !QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000045,0.000032,0.000023,0.000016,0.000011,0.000007,0.000004,-0.000000");
			}

		}

		internal_power () {

			when      	: "CK & !D & !Q & QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000021,0.000019,0.000014,0.000010,0.000007,0.000006,0.000003,-0.000001");
			}

		}

		internal_power () {

			when      	: "CK & D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003563,0.003546,0.003516,0.003508,0.003567,0.003961,0.005146,0.007937");
			}

		}

		internal_power () {

			when      	: "CK & !D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003573,0.003548,0.003520,0.003514,0.003572,0.003967,0.005155,0.007946");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & SE";

			power(Hidden_Power_Data) {
				values ("0.003567,0.003547,0.003523,0.003512,0.003569,0.003968,0.005153,0.007942");
			}

		}

		internal_power () {

			when      	: "!CK & D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008129,0.008110,0.008079,0.008070,0.008123,0.008515,0.009705,0.012536");
			}

		}

		internal_power () {

			when      	: "CK & D & Q & !QN & !SE";

			power(Hidden_Power_Data) {
				values ("0.000047,0.000033,0.000025,0.000017,0.000012,0.000008,0.000005,0.000001");
			}

		}

		internal_power () {

			when      	: "!CK & !D & !Q & QN & SE";

			power(Hidden_Power_Data) {
				values ("0.008132,0.008112,0.008082,0.008072,0.008131,0.008511,0.009710,0.012539");
			}

		}
	}

	pin (Q) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQ";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.081849,0.089764,0.098501,0.112844,0.136350,0.176727", \
				        "0.085029,0.092950,0.101677,0.115889,0.139359,0.179754", \
				        "0.089958,0.097906,0.106723,0.120947,0.144302,0.184657", \
				        "0.095213,0.103137,0.111913,0.126352,0.149859,0.189825", \
				        "0.100000,0.107959,0.116753,0.131206,0.154904,0.194987", \
				        "0.102381,0.110351,0.119156,0.133569,0.157129,0.197385", \
				        "0.096618,0.104617,0.113512,0.128048,0.151722,0.192098", \
				        "0.068118,0.076840,0.086283,0.101400,0.125688,0.166478");
			}
			cell_rise(Timing_X2) {
				values ("0.120853,0.130974,0.142600,0.163436,0.201581,0.275440", \
				        "0.124005,0.134138,0.145683,0.166805,0.204763,0.278564", \
				        "0.129084,0.139217,0.150880,0.171945,0.210040,0.283398", \
				        "0.134879,0.145007,0.156593,0.177698,0.216172,0.289577", \
				        "0.140678,0.150764,0.162453,0.183312,0.221946,0.296273", \
				        "0.143670,0.153795,0.165455,0.186316,0.224642,0.298228", \
				        "0.136872,0.147026,0.158695,0.179358,0.217491,0.291688", \
				        "0.105081,0.115249,0.126950,0.148447,0.186612,0.260104");
			}
			fall_transition(Timing_X2) {
				values ("0.014571,0.018194,0.022301,0.029629,0.043673,0.072222", \
				        "0.014576,0.018196,0.022331,0.029629,0.043678,0.072221", \
				        "0.014582,0.018213,0.022332,0.029681,0.043701,0.072263", \
				        "0.014645,0.018261,0.022377,0.029770,0.043760,0.072288", \
				        "0.014747,0.018349,0.022463,0.029883,0.043947,0.072313", \
				        "0.014907,0.018514,0.022613,0.029946,0.043885,0.072366", \
				        "0.015511,0.019146,0.023099,0.030342,0.044183,0.072566", \
				        "0.018869,0.021939,0.025525,0.032248,0.045679,0.073414");
			}
			rise_transition(Timing_X2) {
				values ("0.017299,0.023564,0.031401,0.047227,0.079865,0.147853", \
				        "0.017284,0.023555,0.031392,0.047219,0.079841,0.147837", \
				        "0.017280,0.023553,0.031401,0.047149,0.079869,0.147979", \
				        "0.017293,0.023575,0.031396,0.047123,0.079808,0.147933", \
				        "0.017290,0.023570,0.031446,0.047162,0.079842,0.148006", \
				        "0.017292,0.023565,0.031399,0.047226,0.079867,0.147960", \
				        "0.017256,0.023536,0.031394,0.047146,0.079909,0.148039", \
				        "0.017341,0.023645,0.031501,0.047266,0.080010,0.148018");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.004653,0.004613,0.004591,0.004579,0.004575,0.004576", \
				        "0.004650,0.004609,0.004588,0.004573,0.004570,0.004572", \
				        "0.004673,0.004634,0.004613,0.004602,0.004601,0.004604", \
				        "0.004758,0.004717,0.004695,0.004691,0.004710,0.004717", \
				        "0.005020,0.004978,0.004956,0.004947,0.004958,0.004964", \
				        "0.005687,0.005643,0.005618,0.005604,0.005600,0.005612", \
				        "0.007214,0.007159,0.007131,0.007112,0.007102,0.007107", \
				        "0.010510,0.010436,0.010386,0.010349,0.010323,0.010311");
			}
			rise_power(Power_X2) {
				values ("0.005129,0.005068,0.005025,0.005004,0.004979,0.004958", \
				        "0.005127,0.005066,0.005021,0.005007,0.004982,0.004966", \
				        "0.005146,0.005085,0.005043,0.005027,0.005006,0.004991", \
				        "0.005229,0.005168,0.005124,0.005106,0.005096,0.005081", \
				        "0.005486,0.005423,0.005383,0.005356,0.005334,0.005320", \
				        "0.006128,0.006066,0.006024,0.006002,0.005991,0.005977", \
				        "0.007567,0.007507,0.007465,0.007435,0.007414,0.007411", \
				        "0.010583,0.010523,0.010482,0.010472,0.010452,0.010428");
			}
		}
	}

	pin (QN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "IQN";

		timing () {

			related_pin	   : "CK";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X2) {
				values ("0.184067,0.191826,0.200178,0.213911,0.236751,0.276387", \
				        "0.187214,0.194981,0.203258,0.217290,0.239988,0.279685", \
				        "0.192292,0.200060,0.208454,0.222496,0.245327,0.284516", \
				        "0.198089,0.205851,0.214169,0.228249,0.251415,0.290647", \
				        "0.203850,0.211593,0.220024,0.233841,0.257348,0.297647", \
				        "0.206885,0.214636,0.223037,0.236815,0.259969,0.299428", \
				        "0.200075,0.207870,0.216281,0.229919,0.252752,0.292829", \
				        "0.168475,0.176245,0.184625,0.199055,0.221848,0.261072");
			}
			cell_rise(Timing_X2) {
				values ("0.095153,0.101845,0.110599,0.128603,0.164937,0.237843", \
				        "0.098330,0.105024,0.113807,0.131651,0.167934,0.240853", \
				        "0.103247,0.109935,0.118809,0.136720,0.172869,0.245722", \
				        "0.108467,0.115148,0.123975,0.142075,0.178251,0.250715", \
				        "0.113286,0.119984,0.128797,0.146952,0.183388,0.255875", \
				        "0.115614,0.122317,0.131121,0.149124,0.185365,0.258018", \
				        "0.109605,0.116244,0.125100,0.143088,0.179301,0.251935", \
				        "0.080420,0.087210,0.095897,0.113877,0.150073,0.222516");
			}
			fall_transition(Timing_X2) {
				values ("0.013640,0.017269,0.021362,0.028798,0.042714,0.071519", \
				        "0.013630,0.017265,0.021361,0.028805,0.042750,0.071530", \
				        "0.013632,0.017267,0.021361,0.028758,0.042801,0.071403", \
				        "0.013640,0.017268,0.021365,0.028756,0.042794,0.071398", \
				        "0.013645,0.017276,0.021372,0.028766,0.042866,0.071396", \
				        "0.013639,0.017261,0.021362,0.028797,0.042773,0.071207", \
				        "0.013635,0.017272,0.021371,0.028755,0.042811,0.071247", \
				        "0.013665,0.017298,0.021393,0.028784,0.042823,0.071437");
			}
			rise_transition(Timing_X2) {
				values ("0.009284,0.014635,0.022865,0.040113,0.074735,0.144181", \
				        "0.009266,0.014622,0.022886,0.040106,0.074738,0.144177", \
				        "0.009209,0.014594,0.022876,0.040105,0.074767,0.144051", \
				        "0.009204,0.014587,0.022870,0.040122,0.074826,0.144150", \
				        "0.009314,0.014644,0.022892,0.040115,0.074754,0.144182", \
				        "0.009330,0.014664,0.022895,0.040113,0.074765,0.144163", \
				        "0.009465,0.014730,0.022904,0.040129,0.074765,0.144218", \
				        "0.010195,0.015075,0.023021,0.040161,0.074797,0.144116");
			}
		}

		internal_power () {

			related_pin	         : "CK";
			fall_power(Power_X2) {
				values ("0.005129,0.005068,0.005025,0.005004,0.004979,0.004958", \
				        "0.005127,0.005066,0.005021,0.005007,0.004982,0.004966", \
				        "0.005146,0.005085,0.005043,0.005027,0.005006,0.004991", \
				        "0.005229,0.005168,0.005124,0.005106,0.005096,0.005081", \
				        "0.005486,0.005423,0.005383,0.005356,0.005334,0.005320", \
				        "0.006128,0.006066,0.006024,0.006002,0.005991,0.005977", \
				        "0.007567,0.007507,0.007465,0.007435,0.007414,0.007411", \
				        "0.010583,0.010523,0.010482,0.010472,0.010452,0.010428");
			}
			rise_power(Power_X2) {
				values ("0.004653,0.004613,0.004591,0.004579,0.004575,0.004576", \
				        "0.004650,0.004609,0.004588,0.004573,0.004570,0.004572", \
				        "0.004673,0.004634,0.004613,0.004602,0.004601,0.004604", \
				        "0.004758,0.004717,0.004695,0.004691,0.004710,0.004717", \
				        "0.005020,0.004978,0.004956,0.004947,0.004958,0.004964", \
				        "0.005687,0.005643,0.005618,0.005604,0.005600,0.005612", \
				        "0.007214,0.007159,0.007131,0.007112,0.007102,0.007107", \
				        "0.010510,0.010436,0.010386,0.010349,0.010323,0.010311");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TBUF_X1
 Cell Description	: Combinational tri-state cell (TBUF_X1) with drive strength X1
*******************************************************************************************/

cell (TBUF_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 9753.286750;

	leakage_power () {
		when      	: "!A & !EN";
		value      	: 13443.150000;
	}
	leakage_power () {
		when      	: "A & !EN";
		value      	: 7229.194000;
	}
	leakage_power () {
		when      	: "!A & EN";
		value      	: 10402.680000;
	}
	leakage_power () {
		when      	: "A & EN";
		value      	: 7938.123000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000475;
		fall_capacitance	: 0.000456;
		rise_capacitance	: 0.000494;
		fall_capacitance_range		(0.000386, 0.000531);
		rise_capacitance_range		(0.000391, 0.000559);
		max_transition		: 0.960000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.000721;
		fall_capacitance	: 0.000685;
		rise_capacitance	: 0.000756;
		fall_capacitance_range		(0.000578, 0.000891);
		rise_capacitance_range		(0.000616, 0.000906);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		capacitance		: 0.000739;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "A";
		three_state		: "EN";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.050176,0.053457,0.059723,0.071528,0.094103,0.138248", \
				        "0.054087,0.057370,0.063748,0.075580,0.098137,0.142286", \
				        "0.062163,0.065452,0.071805,0.083538,0.106150,0.150310", \
				        "0.075757,0.079069,0.085401,0.097271,0.119792,0.163950", \
				        "0.095115,0.098550,0.105062,0.117398,0.140087,0.184211", \
				        "0.124402,0.128113,0.134918,0.147540,0.171006,0.215412", \
				        "0.171124,0.175445,0.183197,0.196905,0.221491,0.266813", \
				        "0.248314,0.253853,0.263784,0.280467,0.308428,0.356889");
			}
			cell_rise(Timing_X1) {
				values ("0.068657,0.075593,0.089449,0.116449,0.169914,0.276248", \
				        "0.071808,0.078742,0.092392,0.119245,0.172692,0.279027", \
				        "0.076640,0.083578,0.097312,0.124161,0.177496,0.283867", \
				        "0.081851,0.088802,0.102557,0.129427,0.182790,0.289130", \
				        "0.086304,0.093234,0.106989,0.134120,0.187344,0.293712", \
				        "0.087160,0.094098,0.107844,0.135080,0.188770,0.295097", \
				        "0.077478,0.084711,0.098686,0.126098,0.180107,0.286735", \
				        "0.042192,0.050556,0.066066,0.094877,0.149610,0.257187");
			}
			fall_transition(Timing_X1) {
				values ("0.013998,0.016344,0.021108,0.030511,0.049025,0.086500", \
				        "0.013994,0.016330,0.021056,0.030546,0.049126,0.086484", \
				        "0.014007,0.016357,0.021075,0.030555,0.049193,0.086514", \
				        "0.014259,0.016560,0.021249,0.030594,0.049193,0.086512", \
				        "0.015076,0.017276,0.021917,0.031138,0.049217,0.086575", \
				        "0.016941,0.018981,0.023307,0.032298,0.050123,0.086790", \
				        "0.021078,0.023014,0.027023,0.035333,0.052425,0.087991", \
				        "0.029012,0.031170,0.035301,0.043188,0.059032,0.092557");
			}
			rise_transition(Timing_X1) {
				values ("0.031389,0.037561,0.049891,0.074438,0.123403,0.220835", \
				        "0.031395,0.037555,0.049880,0.074479,0.123391,0.220824", \
				        "0.031393,0.037555,0.049877,0.074482,0.123334,0.220821", \
				        "0.031429,0.037580,0.049894,0.074504,0.123348,0.220831", \
				        "0.031495,0.037635,0.049935,0.074508,0.123353,0.220832", \
				        "0.031981,0.038031,0.050227,0.074711,0.123469,0.220868", \
				        "0.034647,0.040230,0.051747,0.075740,0.124245,0.221238", \
				        "0.042300,0.047752,0.058447,0.080349,0.126910,0.223441");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.320299,0.323297,0.329968,0.348620,0.395235,0.487822,0.701793,1.143426");
			}
			cell_rise(Tristate_Disable) {
				values ("0.040479,0.042437,0.046633,0.045977,0.038496,0.013298,-0.044288,-0.168806");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037197,0.040599,0.046942,0.058777,0.081330,0.125412", \
				        "0.041218,0.044638,0.050963,0.062789,0.085339,0.129416", \
				        "0.048991,0.052389,0.058781,0.070623,0.093164,0.137243", \
				        "0.060662,0.064361,0.071123,0.083323,0.105914,0.149970", \
				        "0.076694,0.080899,0.088186,0.100996,0.124280,0.168920", \
				        "0.101277,0.106288,0.114799,0.128965,0.153204,0.198162", \
				        "0.139974,0.146485,0.157327,0.174737,0.202386,0.249747", \
				        "0.202917,0.211864,0.226718,0.250064,0.285594,0.340765");
			}
			cell_rise(Timing_X1) {
				values ("0.034051,0.042457,0.056810,0.083849,0.137318,0.243659", \
				        "0.036860,0.045520,0.059963,0.087013,0.140462,0.246836", \
				        "0.042286,0.051432,0.066225,0.093270,0.146685,0.253030", \
				        "0.052027,0.063432,0.078957,0.105954,0.159223,0.265457", \
				        "0.053183,0.073622,0.098767,0.131275,0.184768,0.290569", \
				        "0.032988,0.059285,0.106766,0.160102,0.231208,0.341805", \
				        "-0.021918,0.010386,0.065517,0.163135,0.274763,0.428193", \
				        "-0.178791,-0.127245,-0.046559,0.074730,0.267794,0.499630");
			}
			fall_transition(Timing_X1) {
				values ("0.014858,0.017037,0.021481,0.030430,0.048830,0.086296", \
				        "0.014905,0.017098,0.021485,0.030456,0.048826,0.086285", \
				        "0.015004,0.017180,0.021540,0.030462,0.048855,0.086296", \
				        "0.015942,0.017977,0.022232,0.030916,0.048955,0.086302", \
				        "0.017179,0.018994,0.022949,0.031225,0.049308,0.086409", \
				        "0.020639,0.022531,0.026050,0.033469,0.049937,0.086251", \
				        "0.027449,0.029449,0.033278,0.040408,0.055285,0.089008", \
				        "0.039567,0.042045,0.046658,0.054825,0.069563,0.100562");
			}
			rise_transition(Timing_X1) {
				values ("0.037030,0.042059,0.049965,0.074172,0.123229,0.220752", \
				        "0.036761,0.042339,0.050171,0.074151,0.123226,0.220754", \
				        "0.038797,0.042876,0.050782,0.074117,0.123227,0.220753", \
				        "0.049364,0.051630,0.054280,0.073887,0.123221,0.220744", \
				        "0.071217,0.075044,0.077894,0.083475,0.124473,0.220753", \
				        "0.099563,0.111301,0.120986,0.125857,0.151458,0.226199", \
				        "0.128540,0.149776,0.180575,0.205207,0.222286,0.287313", \
				        "0.214959,0.226966,0.253730,0.311367,0.366196,0.420577");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X1) {
				values ("0.002669,0.002427,0.001935,0.000962,-0.000983,-0.004854", \
				        "0.002665,0.002424,0.001941,0.000970,-0.000973,-0.004849", \
				        "0.002706,0.002451,0.001967,0.000996,-0.000944,-0.004824", \
				        "0.002790,0.002550,0.002067,0.001102,-0.000832,-0.004700", \
				        "0.003029,0.002778,0.002304,0.001337,-0.000599,-0.004473", \
				        "0.003578,0.003338,0.002861,0.001901,-0.000044,-0.003918", \
				        "0.004886,0.004650,0.004150,0.003192,0.001251,-0.002625", \
				        "0.007757,0.007452,0.006989,0.006004,0.004054,0.000161");
			}
			rise_power(Power_X1) {
				values ("0.002498,0.002735,0.003223,0.004191,0.006128,0.009995", \
				        "0.002486,0.002729,0.003218,0.004186,0.006125,0.009992", \
				        "0.002508,0.002748,0.003237,0.004207,0.006147,0.010013", \
				        "0.002572,0.002822,0.003305,0.004272,0.006206,0.010074", \
				        "0.002793,0.003037,0.003525,0.004495,0.006434,0.010306", \
				        "0.003377,0.003625,0.004103,0.005077,0.007022,0.010895", \
				        "0.004710,0.004943,0.005431,0.006401,0.008347,0.012214", \
				        "0.007589,0.007816,0.008291,0.009244,0.011163,0.015019");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X1) {
				values ("0.002505,0.002273,0.001801,0.000812,-0.001131,-0.004982", \
				        "0.002525,0.002268,0.001777,0.000831,-0.001106,-0.005001", \
				        "0.002546,0.002305,0.001817,0.000868,-0.001085,-0.004971", \
				        "0.002656,0.002411,0.001926,0.000949,-0.000982,-0.004841", \
				        "0.002907,0.002664,0.002149,0.001221,-0.000742,-0.004597", \
				        "0.003505,0.003248,0.002762,0.001816,-0.000124,-0.004014", \
				        "0.004780,0.004547,0.004072,0.003101,0.001147,-0.002704", \
				        "0.007581,0.007329,0.006839,0.005877,0.003945,0.000091");
			}
			rise_power(Power_X1) {
				values ("0.002875,0.003116,0.003612,0.004571,0.006511,0.010376", \
				        "0.002887,0.003124,0.003604,0.004577,0.006516,0.010382", \
				        "0.002934,0.003190,0.003650,0.004607,0.006559,0.010427", \
				        "0.003021,0.003248,0.003750,0.004714,0.006648,0.010527", \
				        "0.003296,0.003517,0.004005,0.004966,0.006905,0.010788", \
				        "0.003887,0.004113,0.004592,0.005572,0.007498,0.011355", \
				        "0.005219,0.005463,0.005935,0.006905,0.008824,0.012675", \
				        "0.008010,0.008240,0.008737,0.009705,0.011621,0.015498");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TBUF_X16
 Cell Description	: Combinational tri-state cell (TBUF_X16) with drive strength X16
*******************************************************************************************/

cell (TBUF_X16) {

	area               	: 5.054000;

	cell_leakage_power 	: 68481.612500;

	leakage_power () {
		when      	: "!A & !EN";
		value      	: 157169.800000;
	}
	leakage_power () {
		when      	: "A & !EN";
		value      	: 26571.130000;
	}
	leakage_power () {
		when      	: "!A & EN";
		value      	: 79264.350000;
	}
	leakage_power () {
		when      	: "A & EN";
		value      	: 10921.170000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000443;
		fall_capacitance	: 0.000426;
		rise_capacitance	: 0.000459;
		fall_capacitance_range		(0.000379, 0.000462);
		rise_capacitance_range		(0.000391, 0.000525);
		max_transition		: 0.960000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.005061;
		fall_capacitance	: 0.004988;
		rise_capacitance	: 0.005135;
		fall_capacitance_range		(0.002364, 0.006993);
		rise_capacitance_range		(0.002727, 0.006875);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		capacitance		: 0.012317;
		max_capacitance		: 0.204800;
		max_transition		: 0.960000;
		function		: "A";
		three_state		: "EN";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X16) {
				values ("0.163737,0.174698,0.184284,0.200810,0.229159,0.278394", \
				        "0.167459,0.178424,0.188040,0.204452,0.232755,0.282009", \
				        "0.175102,0.186058,0.195667,0.212104,0.240360,0.289624", \
				        "0.190824,0.201792,0.211339,0.227912,0.256251,0.305483", \
				        "0.223459,0.234417,0.243965,0.260615,0.288993,0.338251", \
				        "0.286998,0.298213,0.307850,0.324611,0.353155,0.402563", \
				        "0.378953,0.392085,0.403179,0.422266,0.453563,0.505191", \
				        "0.508841,0.524151,0.537444,0.559497,0.595761,0.652587");
			}
			cell_rise(Timing_X16) {
				values ("0.119438,0.133902,0.148047,0.175147,0.228027,0.332538", \
				        "0.122767,0.137231,0.151356,0.178353,0.231237,0.335764", \
				        "0.129474,0.143942,0.158145,0.185171,0.237969,0.342497", \
				        "0.143157,0.157615,0.171854,0.198921,0.251705,0.356225", \
				        "0.168308,0.182786,0.196969,0.224147,0.276903,0.381385", \
				        "0.200410,0.215431,0.229881,0.257362,0.310114,0.414351", \
				        "0.232502,0.248639,0.263797,0.292200,0.345384,0.449086", \
				        "0.253111,0.270956,0.287486,0.318113,0.373618,0.477433");
			}
			fall_transition(Timing_X16) {
				values ("0.025239,0.030439,0.035207,0.044254,0.061571,0.096370", \
				        "0.025242,0.030440,0.035243,0.044264,0.061642,0.096332", \
				        "0.025231,0.030443,0.035226,0.044293,0.061628,0.096347", \
				        "0.025236,0.030436,0.035245,0.044246,0.061583,0.096372", \
				        "0.025284,0.030493,0.035251,0.044237,0.061584,0.096383", \
				        "0.027833,0.032748,0.037206,0.045672,0.062587,0.096844", \
				        "0.036309,0.041675,0.046362,0.054557,0.069720,0.101445", \
				        "0.047840,0.054027,0.059360,0.068250,0.083291,0.112230");
			}
			rise_transition(Timing_X16) {
				values ("0.030073,0.040561,0.051608,0.074204,0.120539,0.215431", \
				        "0.030072,0.040548,0.051589,0.074262,0.120503,0.215424", \
				        "0.030071,0.040560,0.051606,0.074206,0.120541,0.215420", \
				        "0.030093,0.040567,0.051610,0.074226,0.120545,0.215431", \
				        "0.030751,0.041025,0.051946,0.074416,0.120590,0.215433", \
				        "0.034091,0.043782,0.054181,0.075829,0.121048,0.215491", \
				        "0.040131,0.049637,0.059515,0.079893,0.123067,0.215881", \
				        "0.049793,0.059730,0.069802,0.089725,0.129878,0.218128");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.329616,0.332421,0.336665,0.352340,0.397296,0.489991,0.704760,1.147160");
			}
			cell_rise(Tristate_Disable) {
				values ("0.065917,0.073752,0.084503,0.099720,0.110977,0.111375,0.082694,-0.011023");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X16) {
				values ("0.069483,0.079134,0.087557,0.102132,0.127455,0.173003", \
				        "0.073144,0.082883,0.091279,0.105874,0.131197,0.176747", \
				        "0.080982,0.090698,0.099167,0.113750,0.139085,0.184646", \
				        "0.097138,0.106921,0.115360,0.129999,0.155357,0.200928", \
				        "0.123779,0.134968,0.144143,0.159475,0.185201,0.230893", \
				        "0.158812,0.172657,0.183740,0.201625,0.230041,0.277560", \
				        "0.209080,0.226462,0.240193,0.261762,0.294616,0.346053", \
				        "0.285812,0.308574,0.326239,0.353463,0.394020,0.454062");
			}
			cell_rise(Timing_X16) {
				values ("0.017150,0.030565,0.045605,0.075885,0.130530,0.235013", \
				        "0.020470,0.033632,0.048620,0.078926,0.133627,0.238109", \
				        "0.025780,0.040063,0.054737,0.085059,0.139887,0.244340", \
				        "0.029696,0.050165,0.067258,0.097396,0.152499,0.256831", \
				        "0.027102,0.057060,0.081414,0.120890,0.178105,0.281987", \
				        "0.006035,0.050557,0.085413,0.142268,0.222931,0.333244", \
				        "-0.062232,0.006432,0.057591,0.137790,0.259518,0.417063", \
				        "-0.243215,-0.132110,-0.052443,0.065454,0.239924,0.483594");
			}
			fall_transition(Timing_X16) {
				values ("0.022311,0.026746,0.031013,0.039393,0.056222,0.091011", \
				        "0.022307,0.026695,0.031002,0.039395,0.056216,0.091008", \
				        "0.022372,0.026746,0.031049,0.039442,0.056218,0.090997", \
				        "0.022679,0.026927,0.031210,0.039554,0.056278,0.091025", \
				        "0.025721,0.029841,0.033716,0.041368,0.057323,0.091428", \
				        "0.031423,0.035670,0.039564,0.046928,0.061807,0.094040", \
				        "0.041200,0.045720,0.049873,0.057265,0.071069,0.100147", \
				        "0.057684,0.062621,0.067167,0.075273,0.089462,0.116029");
			}
			rise_transition(Timing_X16) {
				values ("0.015978,0.032697,0.048006,0.073719,0.118622,0.214874", \
				        "0.016153,0.032402,0.047924,0.073778,0.118642,0.214865", \
				        "0.020111,0.032986,0.047576,0.073874,0.118721,0.214855", \
				        "0.028311,0.040663,0.052149,0.074358,0.119042,0.214810", \
				        "0.042607,0.057112,0.070174,0.087954,0.121634,0.214681", \
				        "0.067221,0.084662,0.101704,0.125731,0.153468,0.220814", \
				        "0.112782,0.132397,0.151643,0.187096,0.228685,0.282653", \
				        "0.199923,0.222571,0.243335,0.283184,0.350855,0.426206");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X16) {
				values ("0.032580,0.024507,0.016501,0.000735,-0.030547,-0.092755", \
				        "0.032581,0.024575,0.016498,0.000758,-0.030564,-0.092764", \
				        "0.032563,0.024523,0.016515,0.000743,-0.030558,-0.092764", \
				        "0.032582,0.024598,0.016534,0.000783,-0.030514,-0.092726", \
				        "0.032747,0.024727,0.016689,0.000850,-0.030505,-0.092786", \
				        "0.034335,0.026060,0.017807,0.001875,-0.029601,-0.092018", \
				        "0.039363,0.030495,0.021747,0.005101,-0.027143,-0.090165", \
				        "0.048341,0.038742,0.029462,0.011801,-0.021686,-0.085893");
			}
			rise_power(Power_X16) {
				values ("0.027518,0.035008,0.042816,0.058375,0.089421,0.151448", \
				        "0.027562,0.035027,0.042823,0.058374,0.089429,0.151446", \
				        "0.027536,0.035015,0.042824,0.058383,0.089433,0.151460", \
				        "0.027549,0.035022,0.042816,0.058380,0.089433,0.151449", \
				        "0.027802,0.035200,0.042963,0.058468,0.089473,0.151483", \
				        "0.028918,0.036154,0.043774,0.059135,0.090000,0.151903", \
				        "0.032084,0.038947,0.046287,0.061280,0.091775,0.153296", \
				        "0.039702,0.045842,0.052595,0.066969,0.096631,0.157316");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X16) {
				values ("0.026522,0.019029,0.011293,-0.004266,-0.035213,-0.097123", \
				        "0.026452,0.019010,0.011257,-0.004192,-0.035227,-0.097235", \
				        "0.026434,0.018948,0.011288,-0.004193,-0.035228,-0.097153", \
				        "0.026538,0.019049,0.011321,-0.004173,-0.035099,-0.097079", \
				        "0.026688,0.019236,0.011505,-0.003988,-0.034974,-0.096956", \
				        "0.027128,0.019678,0.011961,-0.003541,-0.034513,-0.096429", \
				        "0.028180,0.020756,0.012948,-0.002559,-0.033533,-0.095456", \
				        "0.030412,0.022904,0.015207,-0.000288,-0.031214,-0.093147");
			}
			rise_power(Power_X16) {
				values ("0.025680,0.033170,0.040817,0.056313,0.087299,0.149262", \
				        "0.025612,0.033114,0.040890,0.056412,0.087317,0.149186", \
				        "0.025614,0.033108,0.040868,0.056416,0.087371,0.149180", \
				        "0.025767,0.033200,0.040956,0.056443,0.087368,0.149326", \
				        "0.025974,0.033431,0.041181,0.056644,0.087549,0.149508", \
				        "0.026577,0.034072,0.041711,0.057183,0.088112,0.150006", \
				        "0.027894,0.035207,0.042932,0.058264,0.089253,0.151110", \
				        "0.030574,0.037945,0.045613,0.060997,0.091830,0.153678");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TBUF_X2
 Cell Description	: Combinational tri-state cell (TBUF_X2) with drive strength X2
*******************************************************************************************/

cell (TBUF_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 13819.027000;

	leakage_power () {
		when      	: "!A & !EN";
		value      	: 23393.190000;
	}
	leakage_power () {
		when      	: "A & !EN";
		value      	: 8564.710000;
	}
	leakage_power () {
		when      	: "!A & EN";
		value      	: 15175.330000;
	}
	leakage_power () {
		when      	: "A & EN";
		value      	: 8142.878000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000485;
		fall_capacitance	: 0.000466;
		rise_capacitance	: 0.000503;
		fall_capacitance_range		(0.000401, 0.000538);
		rise_capacitance_range		(0.000425, 0.000573);
		max_transition		: 0.960000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.000948;
		fall_capacitance	: 0.000905;
		rise_capacitance	: 0.000990;
		fall_capacitance_range		(0.000651, 0.001253);
		rise_capacitance_range		(0.000716, 0.001258);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		capacitance		: 0.001151;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "A";
		three_state		: "EN";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.052713,0.057894,0.064244,0.076034,0.098327,0.141523", \
				        "0.056567,0.061752,0.068133,0.079927,0.102185,0.145390", \
				        "0.064666,0.069846,0.076286,0.088071,0.110339,0.153587", \
				        "0.079760,0.084991,0.091397,0.103243,0.125590,0.168755", \
				        "0.101753,0.107349,0.113940,0.126327,0.148795,0.192164", \
				        "0.133455,0.139696,0.146883,0.159691,0.182880,0.226600", \
				        "0.182309,0.189737,0.198311,0.212490,0.237188,0.281773", \
				        "0.262191,0.271461,0.281912,0.299549,0.327953,0.375885");
			}
			cell_rise(Timing_X2) {
				values ("0.060101,0.070279,0.083665,0.109967,0.161988,0.265719", \
				        "0.063421,0.073597,0.086910,0.113033,0.165067,0.268815", \
				        "0.069128,0.079303,0.092605,0.118698,0.170797,0.274565", \
				        "0.076030,0.086197,0.099572,0.125610,0.177700,0.281484", \
				        "0.082687,0.092842,0.106162,0.132423,0.184384,0.288154", \
				        "0.086421,0.096717,0.110064,0.136497,0.188585,0.292330", \
				        "0.079826,0.091081,0.105129,0.131757,0.184144,0.287975", \
				        "0.048102,0.061149,0.076827,0.105752,0.159111,0.263524");
			}
			fall_transition(Timing_X2) {
				values ("0.011435,0.014886,0.019510,0.028506,0.046401,0.082940", \
				        "0.011457,0.014887,0.019512,0.028511,0.046416,0.082938", \
				        "0.011452,0.014895,0.019516,0.028474,0.046450,0.082941", \
				        "0.011765,0.015088,0.019658,0.028604,0.046493,0.082885", \
				        "0.013129,0.016227,0.020647,0.029415,0.046867,0.082981", \
				        "0.015639,0.018595,0.022645,0.031014,0.047937,0.083500", \
				        "0.020168,0.023175,0.027005,0.034712,0.050764,0.084918", \
				        "0.028024,0.031482,0.035720,0.043364,0.058094,0.089939");
			}
			rise_transition(Timing_X2) {
				values ("0.022937,0.031839,0.043804,0.067748,0.115427,0.210479", \
				        "0.022938,0.031840,0.043798,0.067694,0.115409,0.210480", \
				        "0.022924,0.031854,0.043806,0.067681,0.115417,0.210478", \
				        "0.023019,0.031887,0.043816,0.067737,0.115396,0.210474", \
				        "0.023273,0.032007,0.043885,0.067703,0.115371,0.210468", \
				        "0.024544,0.032814,0.044339,0.067914,0.115529,0.210500", \
				        "0.028591,0.036313,0.046855,0.069294,0.116215,0.210858", \
				        "0.036154,0.044272,0.054646,0.075266,0.119292,0.212895");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.244634,0.248123,0.256803,0.278770,0.326034,0.424700,0.642634,1.085526");
			}
			cell_rise(Tristate_Disable) {
				values ("0.038588,0.040740,0.044754,0.046773,0.039287,0.017214,-0.038616,-0.162402");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.034983,0.040462,0.046935,0.058675,0.080738,0.123724", \
				        "0.039025,0.044483,0.050894,0.062653,0.084712,0.127697", \
				        "0.046805,0.052313,0.058807,0.070570,0.092631,0.135606", \
				        "0.058682,0.064862,0.071740,0.083869,0.105996,0.148944", \
				        "0.074853,0.081928,0.089648,0.102610,0.125515,0.168889", \
				        "0.098841,0.107523,0.116682,0.131337,0.155526,0.199432", \
				        "0.136435,0.147676,0.159374,0.177555,0.205552,0.252152", \
				        "0.196793,0.212390,0.228268,0.252654,0.288884,0.343900");
			}
			cell_rise(Timing_X2) {
				values ("0.020409,0.034487,0.049402,0.075918,0.128026,0.231787", \
				        "0.023261,0.037451,0.052512,0.079045,0.131143,0.234901", \
				        "0.028893,0.043253,0.058689,0.085314,0.137371,0.241121", \
				        "0.032720,0.053323,0.071329,0.098047,0.149931,0.253538", \
				        "0.028658,0.058303,0.086694,0.122228,0.175504,0.278651", \
				        "0.006993,0.044122,0.087952,0.146280,0.219640,0.330046", \
				        "-0.061645,-0.005796,0.049303,0.141263,0.257669,0.412601", \
				        "-0.243200,-0.152484,-0.067416,0.055663,0.241637,0.476665");
			}
			fall_transition(Timing_X2) {
				values ("0.012725,0.015787,0.019924,0.028483,0.046185,0.082677", \
				        "0.012740,0.015902,0.020026,0.028464,0.046164,0.082697", \
				        "0.012984,0.015913,0.020105,0.028493,0.046209,0.082695", \
				        "0.013886,0.016935,0.020854,0.029014,0.046376,0.082700", \
				        "0.015834,0.018501,0.022159,0.029915,0.046892,0.082813", \
				        "0.019635,0.022315,0.025834,0.032792,0.048166,0.082927", \
				        "0.026405,0.029531,0.033295,0.040219,0.054237,0.086238", \
				        "0.038689,0.042444,0.046950,0.055002,0.069320,0.098599");
			}
			rise_transition(Timing_X2) {
				values ("0.024663,0.034908,0.044603,0.067116,0.115204,0.210393", \
				        "0.024699,0.034827,0.044956,0.067107,0.115199,0.210387", \
				        "0.028124,0.036013,0.045248,0.067032,0.115186,0.210389", \
				        "0.037939,0.045596,0.050911,0.067173,0.115157,0.210382", \
				        "0.052898,0.065495,0.072849,0.079924,0.117425,0.210389", \
				        "0.072178,0.094478,0.109724,0.122385,0.146842,0.217570", \
				        "0.114083,0.134011,0.161873,0.192109,0.218781,0.281521", \
				        "0.201821,0.219639,0.242600,0.292269,0.350909,0.414749");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X2) {
				values ("0.004046,0.003336,0.002365,0.000427,-0.003461,-0.011227", \
				        "0.004056,0.003333,0.002375,0.000425,-0.003457,-0.011223", \
				        "0.004073,0.003356,0.002384,0.000451,-0.003432,-0.011199", \
				        "0.004147,0.003435,0.002467,0.000541,-0.003338,-0.011073", \
				        "0.004389,0.003650,0.002697,0.000763,-0.003114,-0.010847", \
				        "0.004938,0.004212,0.003235,0.001310,-0.002568,-0.010325", \
				        "0.006263,0.005504,0.004521,0.002577,-0.001319,-0.009076", \
				        "0.009293,0.008500,0.007455,0.005430,0.001500,-0.006313");
			}
			rise_power(Power_X2) {
				values ("0.003820,0.004541,0.005519,0.007460,0.011337,0.019076", \
				        "0.003799,0.004540,0.005514,0.007450,0.011333,0.019072", \
				        "0.003815,0.004547,0.005501,0.007453,0.011335,0.019077", \
				        "0.003862,0.004591,0.005572,0.007505,0.011385,0.019133", \
				        "0.004045,0.004791,0.005760,0.007880,0.011577,0.019320", \
				        "0.004584,0.005339,0.006303,0.008401,0.012123,0.019869", \
				        "0.005943,0.006653,0.007617,0.009567,0.013417,0.021157", \
				        "0.008994,0.009686,0.010590,0.012429,0.016293,0.023975");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X2) {
				values ("0.003634,0.002918,0.001917,-0.000010,-0.003859,-0.011602", \
				        "0.003644,0.002904,0.001920,-0.000005,-0.003844,-0.011606", \
				        "0.003674,0.002972,0.001972,0.000044,-0.003836,-0.011582", \
				        "0.003774,0.003054,0.002081,0.000140,-0.003745,-0.011490", \
				        "0.004004,0.003274,0.002309,0.000376,-0.003472,-0.011250", \
				        "0.004571,0.003822,0.002883,0.000943,-0.002906,-0.010656", \
				        "0.005856,0.005120,0.004171,0.002225,-0.001629,-0.009374", \
				        "0.008573,0.007863,0.006909,0.004979,0.001111,-0.006618");
			}
			rise_power(Power_X2) {
				values ("0.003972,0.004706,0.005665,0.007590,0.011454,0.019217", \
				        "0.003975,0.004681,0.005648,0.007604,0.011475,0.019212", \
				        "0.004013,0.004751,0.005700,0.007636,0.011494,0.019267", \
				        "0.004113,0.004824,0.005793,0.007726,0.011585,0.019346", \
				        "0.004346,0.005094,0.006027,0.007995,0.011859,0.019581", \
				        "0.004956,0.005663,0.006641,0.008567,0.012441,0.020178", \
				        "0.006291,0.006997,0.007964,0.009894,0.013754,0.021513", \
				        "0.009077,0.009825,0.010771,0.012691,0.016568,0.024264");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TBUF_X4
 Cell Description	: Combinational tri-state cell (TBUF_X4) with drive strength X4
*******************************************************************************************/

cell (TBUF_X4) {

	area               	: 1.862000;

	cell_leakage_power 	: 21641.040000;

	leakage_power () {
		when      	: "!A & !EN";
		value      	: 42536.260000;
	}
	leakage_power () {
		when      	: "A & !EN";
		value      	: 11136.770000;
	}
	leakage_power () {
		when      	: "!A & EN";
		value      	: 24351.370000;
	}
	leakage_power () {
		when      	: "A & EN";
		value      	: 8539.760000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000504;
		fall_capacitance	: 0.000485;
		rise_capacitance	: 0.000523;
		fall_capacitance_range		(0.000421, 0.000547);
		rise_capacitance_range		(0.000433, 0.000604);
		max_transition		: 0.960000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.001457;
		fall_capacitance	: 0.001403;
		rise_capacitance	: 0.001510;
		fall_capacitance_range		(0.000815, 0.002016);
		rise_capacitance_range		(0.000908, 0.001997);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		capacitance		: 0.002912;
		max_capacitance		: 0.051200;
		max_transition		: 0.960000;
		function		: "A";
		three_state		: "EN";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X4) {
				values ("0.074032,0.080680,0.087452,0.099873,0.122976,0.166724", \
				        "0.077793,0.084436,0.091211,0.103622,0.126682,0.170440", \
				        "0.085718,0.092381,0.099182,0.111705,0.134716,0.178494", \
				        "0.102034,0.108695,0.115547,0.128053,0.151088,0.194880", \
				        "0.129999,0.137043,0.144176,0.156966,0.180215,0.224000", \
				        "0.169190,0.177128,0.184986,0.198624,0.222762,0.267081", \
				        "0.226568,0.235987,0.244916,0.260259,0.286101,0.331723", \
				        "0.316864,0.328276,0.339102,0.357484,0.387284,0.436415");
			}
			cell_rise(Timing_X4) {
				values ("0.073708,0.085569,0.098870,0.125072,0.177218,0.281038", \
				        "0.077093,0.088949,0.102293,0.128425,0.180515,0.284354", \
				        "0.083738,0.095591,0.108871,0.134904,0.186907,0.290754", \
				        "0.094011,0.105886,0.119218,0.145259,0.197307,0.301185", \
				        "0.105341,0.117317,0.130726,0.157048,0.208997,0.312888", \
				        "0.115175,0.127475,0.141051,0.167597,0.219627,0.323495", \
				        "0.117140,0.130613,0.144773,0.171778,0.224115,0.327915", \
				        "0.096758,0.111958,0.127773,0.156945,0.210499,0.314512");
			}
			fall_transition(Timing_X4) {
				values ("0.013494,0.017545,0.022113,0.031028,0.048706,0.084683", \
				        "0.013507,0.017544,0.022133,0.031029,0.048721,0.084685", \
				        "0.013499,0.017535,0.022116,0.031021,0.048721,0.084759", \
				        "0.013587,0.017605,0.022194,0.031028,0.048767,0.084758", \
				        "0.015038,0.018772,0.023067,0.031678,0.049097,0.084903", \
				        "0.018310,0.021893,0.025985,0.034137,0.050825,0.085639", \
				        "0.023446,0.027234,0.031211,0.038784,0.054399,0.087724", \
				        "0.031751,0.036164,0.040513,0.048240,0.062647,0.093499");
			}
			rise_transition(Timing_X4) {
				values ("0.024027,0.034189,0.046013,0.069783,0.117450,0.212565", \
				        "0.024026,0.034189,0.045992,0.069848,0.117462,0.212543", \
				        "0.024033,0.034192,0.046012,0.069812,0.117422,0.212538", \
				        "0.024122,0.034244,0.046030,0.069822,0.117435,0.212565", \
				        "0.024625,0.034525,0.046173,0.069881,0.117470,0.212555", \
				        "0.026382,0.035678,0.046884,0.070127,0.117519,0.212590", \
				        "0.030938,0.039771,0.050050,0.071919,0.118138,0.212819", \
				        "0.038851,0.048199,0.058481,0.078786,0.121638,0.214482");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.313144,0.315388,0.320990,0.338806,0.384694,0.476313,0.689361,1.130682");
			}
			cell_rise(Tristate_Disable) {
				values ("0.043528,0.045568,0.050313,0.053391,0.045349,0.023431,-0.031253,-0.153175");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X4) {
				values ("0.034984,0.041124,0.047450,0.059078,0.081094,0.124092", \
				        "0.038916,0.045113,0.051417,0.063058,0.085069,0.128068", \
				        "0.046775,0.052969,0.059307,0.070948,0.092970,0.135958", \
				        "0.058515,0.065491,0.072199,0.084150,0.106182,0.149108", \
				        "0.074576,0.082542,0.090022,0.102733,0.125516,0.168858", \
				        "0.098680,0.108456,0.117237,0.131561,0.155489,0.199222", \
				        "0.136618,0.149229,0.160472,0.178214,0.205812,0.252021", \
				        "0.197919,0.215321,0.230689,0.254409,0.290042,0.344369");
			}
			cell_rise(Timing_X4) {
				values ("0.019151,0.036093,0.050703,0.077066,0.129166,0.232989", \
				        "0.022006,0.038995,0.053783,0.080138,0.132228,0.236036", \
				        "0.027842,0.044824,0.060069,0.086428,0.138460,0.242248", \
				        "0.031946,0.055724,0.072945,0.099165,0.151030,0.254694", \
				        "0.028858,0.061555,0.089844,0.123748,0.176631,0.279832", \
				        "0.007975,0.049519,0.091970,0.149405,0.221393,0.331197", \
				        "-0.058655,0.002987,0.055502,0.145743,0.260844,0.414558", \
				        "-0.237756,-0.137405,-0.056729,0.062471,0.246353,0.480022");
			}
			fall_transition(Timing_X4) {
				values ("0.013170,0.016743,0.020946,0.029627,0.047465,0.084045", \
				        "0.013120,0.016787,0.021016,0.029545,0.047459,0.084044", \
				        "0.013195,0.016910,0.021080,0.029689,0.047482,0.084035", \
				        "0.014323,0.017925,0.021905,0.030173,0.047624,0.084036", \
				        "0.016368,0.019639,0.023247,0.031041,0.048170,0.084166", \
				        "0.020551,0.023673,0.027152,0.034104,0.049430,0.084282", \
				        "0.027895,0.031557,0.035272,0.042101,0.055913,0.087684", \
				        "0.041128,0.045532,0.049996,0.057902,0.071897,0.100573");
			}
			rise_transition(Timing_X4) {
				values ("0.024891,0.036797,0.046273,0.069192,0.117250,0.212481", \
				        "0.024888,0.036805,0.046611,0.069170,0.117231,0.212474", \
				        "0.028141,0.037634,0.046941,0.069092,0.117219,0.212474", \
				        "0.037721,0.046580,0.052008,0.069014,0.117184,0.212477", \
				        "0.050681,0.067139,0.073856,0.080542,0.119166,0.212474", \
				        "0.069697,0.096617,0.111406,0.123619,0.148032,0.219289", \
				        "0.113476,0.133696,0.162797,0.193752,0.219737,0.282676", \
				        "0.200983,0.221184,0.242776,0.292099,0.352559,0.415448");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X4) {
				values ("0.008352,0.006677,0.004761,0.000883,-0.006872,-0.022386", \
				        "0.008366,0.006685,0.004758,0.000884,-0.006869,-0.022395", \
				        "0.008363,0.006680,0.004766,0.000906,-0.006830,-0.022372", \
				        "0.008427,0.006757,0.004834,0.000952,-0.006775,-0.022331", \
				        "0.008653,0.006947,0.005014,0.001167,-0.006571,-0.022041", \
				        "0.009254,0.007506,0.005573,0.001715,-0.006054,-0.021548", \
				        "0.010663,0.008903,0.006909,0.002982,-0.004821,-0.020379", \
				        "0.014114,0.012174,0.010050,0.005991,-0.001971,-0.017658");
			}
			rise_power(Power_X4) {
				values ("0.007175,0.008882,0.010839,0.014737,0.022494,0.037984", \
				        "0.007180,0.008893,0.010838,0.014730,0.022487,0.037992", \
				        "0.007164,0.008882,0.010835,0.014719,0.022479,0.037976", \
				        "0.007178,0.008887,0.010828,0.014734,0.022492,0.037998", \
				        "0.007291,0.009004,0.010955,0.014866,0.022630,0.038138", \
				        "0.007713,0.009427,0.011381,0.015290,0.023063,0.038578", \
				        "0.009068,0.010712,0.012621,0.016497,0.024242,0.039738", \
				        "0.012417,0.013941,0.015778,0.019535,0.027141,0.042527");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X4) {
				values ("0.006912,0.005211,0.003274,-0.000598,-0.008356,-0.023837", \
				        "0.006900,0.005232,0.003283,-0.000613,-0.008336,-0.023827", \
				        "0.006913,0.005256,0.003319,-0.000556,-0.008310,-0.023800", \
				        "0.007062,0.005360,0.003428,-0.000443,-0.008213,-0.023632", \
				        "0.007267,0.005623,0.003649,-0.000206,-0.007949,-0.023449", \
				        "0.007857,0.006172,0.004221,0.000378,-0.007373,-0.022848", \
				        "0.009104,0.007402,0.005501,0.001626,-0.006073,-0.021584", \
				        "0.011800,0.010145,0.008176,0.004335,-0.003374,-0.018847");
			}
			rise_power(Power_X4) {
				values ("0.006779,0.008412,0.010388,0.014280,0.021944,0.037466", \
				        "0.006750,0.008447,0.010336,0.014184,0.021954,0.037476", \
				        "0.006822,0.008491,0.010384,0.014287,0.022003,0.037482", \
				        "0.006887,0.008574,0.010488,0.014372,0.022119,0.037588", \
				        "0.007168,0.008849,0.010802,0.014619,0.022387,0.037832", \
				        "0.007792,0.009466,0.011369,0.015256,0.022939,0.038413", \
				        "0.009155,0.010827,0.012732,0.016580,0.024290,0.039741", \
				        "0.011972,0.013639,0.015572,0.019400,0.027163,0.042514");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TBUF_X8
 Cell Description	: Combinational tri-state cell (TBUF_X8) with drive strength X8
*******************************************************************************************/

cell (TBUF_X8) {

	area               	: 3.192000;

	cell_leakage_power 	: 37272.146500;

	leakage_power () {
		when      	: "!A & !EN";
		value      	: 80790.020000;
	}
	leakage_power () {
		when      	: "A & !EN";
		value      	: 16281.160000;
	}
	leakage_power () {
		when      	: "!A & EN";
		value      	: 42683.840000;
	}
	leakage_power () {
		when      	: "A & EN";
		value      	: 9333.566000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.000505;
		fall_capacitance	: 0.000486;
		rise_capacitance	: 0.000523;
		fall_capacitance_range		(0.000435, 0.000536);
		rise_capacitance_range		(0.000444, 0.000607);
		max_transition		: 0.960000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.002598;
		fall_capacitance	: 0.002537;
		rise_capacitance	: 0.002660;
		fall_capacitance_range		(0.001245, 0.003630);
		rise_capacitance_range		(0.001437, 0.003584);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		capacitance		: 0.006027;
		max_capacitance		: 0.102400;
		max_transition		: 0.960000;
		function		: "A";
		three_state		: "EN";

		timing () {

			related_pin	   : "A";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X8) {
				values ("0.105437,0.113794,0.121449,0.135286,0.160021,0.205242", \
				        "0.109140,0.117510,0.125165,0.138916,0.163650,0.208881", \
				        "0.116855,0.125204,0.132936,0.146726,0.171436,0.216672", \
				        "0.132930,0.141283,0.149114,0.163048,0.187806,0.233051", \
				        "0.165306,0.173721,0.181531,0.195504,0.220277,0.265553", \
				        "0.215453,0.225034,0.233555,0.248475,0.274126,0.319919", \
				        "0.285440,0.296643,0.306379,0.323272,0.351078,0.398719", \
				        "0.390344,0.403559,0.415264,0.435101,0.467172,0.518850");
			}
			cell_rise(Timing_X8) {
				values ("0.090093,0.103105,0.116539,0.142823,0.195050,0.298997", \
				        "0.093451,0.106462,0.119893,0.146128,0.198355,0.302278", \
				        "0.100261,0.113263,0.126762,0.152977,0.205071,0.308996", \
				        "0.113113,0.126146,0.139650,0.165844,0.217943,0.321939", \
				        "0.130847,0.144014,0.157649,0.184056,0.236171,0.340130", \
				        "0.149345,0.163052,0.176834,0.203570,0.255600,0.359485", \
				        "0.163216,0.178110,0.192572,0.219973,0.272199,0.375734", \
				        "0.158997,0.175620,0.191662,0.221264,0.275227,0.378615");
			}
			fall_transition(Timing_X8) {
				values ("0.017261,0.021694,0.026282,0.035241,0.052721,0.088048", \
				        "0.017258,0.021690,0.026277,0.035236,0.052721,0.088052", \
				        "0.017249,0.021700,0.026292,0.035193,0.052717,0.088054", \
				        "0.017278,0.021713,0.026289,0.035249,0.052711,0.088054", \
				        "0.017834,0.022158,0.026651,0.035459,0.052891,0.088125", \
				        "0.022075,0.026225,0.030354,0.038489,0.054939,0.089024", \
				        "0.028424,0.032951,0.037152,0.044801,0.060019,0.092343", \
				        "0.037825,0.042998,0.047717,0.055728,0.070133,0.099801");
			}
			rise_transition(Timing_X8) {
				values ("0.025817,0.036315,0.047759,0.071169,0.118461,0.213519", \
				        "0.025817,0.036315,0.047773,0.071196,0.118490,0.213527", \
				        "0.025821,0.036317,0.047772,0.071218,0.118455,0.213534", \
				        "0.025893,0.036367,0.047820,0.071226,0.118481,0.213526", \
				        "0.026769,0.036911,0.048160,0.071361,0.118507,0.213530", \
				        "0.029230,0.038777,0.049482,0.071953,0.118622,0.213529", \
				        "0.034393,0.043663,0.053640,0.074620,0.119514,0.213717", \
				        "0.042924,0.052744,0.062876,0.082847,0.124210,0.215242");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.322862,0.325224,0.330091,0.346759,0.392620,0.484647,0.697957,1.139443");
			}
			cell_rise(Tristate_Disable) {
				values ("0.053037,0.059232,0.064483,0.072558,0.072904,0.058764,0.014188,-0.099009");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X8) {
				values ("0.048082,0.055753,0.062844,0.075445,0.098361,0.141830", \
				        "0.051942,0.059600,0.066702,0.079312,0.102231,0.145702", \
				        "0.059990,0.067670,0.074768,0.087380,0.110306,0.153780", \
				        "0.074890,0.082882,0.090052,0.102781,0.125742,0.169194", \
				        "0.094820,0.104387,0.112591,0.126449,0.150304,0.193872", \
				        "0.122907,0.134601,0.144304,0.160064,0.185670,0.230489", \
				        "0.165572,0.180397,0.192559,0.211742,0.241224,0.288885", \
				        "0.232709,0.252626,0.268762,0.293675,0.330983,0.386993");
			}
			cell_rise(Timing_X8) {
				values ("0.017281,0.032511,0.049348,0.077691,0.129949,0.233868", \
				        "0.020638,0.035385,0.052302,0.080769,0.133036,0.236948", \
				        "0.026109,0.041419,0.058301,0.087068,0.139291,0.243156", \
				        "0.030089,0.051661,0.070631,0.099738,0.151866,0.255614", \
				        "0.027457,0.057905,0.085400,0.124157,0.177474,0.280741", \
				        "0.006471,0.049941,0.087251,0.147707,0.222501,0.332093", \
				        "-0.061352,0.004939,0.056552,0.141276,0.262281,0.415711", \
				        "-0.242227,-0.134323,-0.054357,0.063990,0.243711,0.481846");
			}
			fall_transition(Timing_X8) {
				values ("0.016424,0.020392,0.024512,0.032818,0.050056,0.085987", \
				        "0.016437,0.020384,0.024506,0.032825,0.050049,0.085986", \
				        "0.016498,0.020470,0.024554,0.032837,0.050063,0.085987", \
				        "0.017591,0.021215,0.025088,0.033250,0.050259,0.086013", \
				        "0.020054,0.023663,0.027450,0.035180,0.051450,0.086337", \
				        "0.024740,0.028451,0.032033,0.039049,0.053929,0.087417", \
				        "0.032965,0.036981,0.040847,0.047795,0.061313,0.091458", \
				        "0.047259,0.052016,0.056440,0.064353,0.078232,0.105447");
			}
			rise_transition(Timing_X8) {
				values ("0.019665,0.036670,0.049628,0.070421,0.117835,0.213407", \
				        "0.019502,0.036369,0.049675,0.070554,0.117817,0.213405", \
				        "0.022645,0.037044,0.049441,0.070963,0.117770,0.213399", \
				        "0.030872,0.045073,0.054337,0.071758,0.117673,0.213396", \
				        "0.044393,0.063024,0.074135,0.085968,0.119333,0.213371", \
				        "0.067886,0.089434,0.108479,0.126970,0.147798,0.219968", \
				        "0.112830,0.132862,0.156713,0.192919,0.225716,0.282719", \
				        "0.200327,0.221889,0.242973,0.287972,0.353396,0.420246");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_X8) {
				values ("0.016004,0.012350,0.008490,0.000774,-0.014752,-0.045756", \
				        "0.016000,0.012315,0.008487,0.000770,-0.014757,-0.045784", \
				        "0.016015,0.012352,0.008507,0.000775,-0.014763,-0.045789", \
				        "0.016050,0.012435,0.008541,0.000804,-0.014732,-0.045767", \
				        "0.016306,0.012594,0.008729,0.001011,-0.014510,-0.045518", \
				        "0.017244,0.013419,0.009470,0.001681,-0.013884,-0.044952", \
				        "0.019481,0.015424,0.011315,0.003280,-0.012466,-0.043721", \
				        "0.024112,0.019805,0.015422,0.006996,-0.009170,-0.040789");
			}
			rise_power(Power_X8) {
				values ("0.014049,0.017702,0.021616,0.029418,0.044942,0.075939", \
				        "0.014027,0.017734,0.021632,0.029424,0.044958,0.075947", \
				        "0.014048,0.017717,0.021621,0.029411,0.044933,0.075945", \
				        "0.014021,0.017700,0.021599,0.029395,0.044926,0.075942", \
				        "0.014091,0.017759,0.021649,0.029439,0.045000,0.076015", \
				        "0.014542,0.018169,0.022036,0.029822,0.045349,0.076370", \
				        "0.016211,0.019662,0.023431,0.031098,0.046520,0.077455", \
				        "0.020581,0.023793,0.027317,0.034709,0.049798,0.080430");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X8) {
				values ("0.013668,0.010066,0.006177,-0.001542,-0.017056,-0.048042", \
				        "0.013664,0.010038,0.006171,-0.001604,-0.017091,-0.048026", \
				        "0.013687,0.010087,0.006212,-0.001532,-0.017046,-0.048005", \
				        "0.013799,0.010168,0.006236,-0.001444,-0.016914,-0.047946", \
				        "0.013990,0.010388,0.006488,-0.001226,-0.016702,-0.047740", \
				        "0.014483,0.010882,0.007020,-0.000750,-0.016206,-0.047195", \
				        "0.015673,0.012015,0.008131,0.000414,-0.015049,-0.045997", \
				        "0.018174,0.014554,0.010660,0.002955,-0.012486,-0.043452");
			}
			rise_power(Power_X8) {
				values ("0.013194,0.016819,0.020669,0.028408,0.043871,0.074856", \
				        "0.013193,0.016823,0.020700,0.028416,0.043883,0.074885", \
				        "0.013217,0.016817,0.020741,0.028422,0.043926,0.074907", \
				        "0.013322,0.016926,0.020794,0.028560,0.044042,0.074977", \
				        "0.013562,0.017218,0.021044,0.028779,0.044180,0.075185", \
				        "0.014185,0.017754,0.021606,0.029371,0.044799,0.075711", \
				        "0.015499,0.019096,0.022867,0.030623,0.046034,0.076932", \
				        "0.018277,0.021854,0.025648,0.033375,0.048826,0.079655");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TINV_X1
 Cell Description	: Combinational tri-state cell (TINV_X1) with drive strength X1
*******************************************************************************************/

cell (TINV_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 6604.844000;

	leakage_power () {
		when      	: "!EN & !I";
		value      	: 3232.350000;
	}
	leakage_power () {
		when      	: "!EN & I";
		value      	: 11200.560000;
	}
	leakage_power () {
		when      	: "EN & !I";
		value      	: 3883.654000;
	}
	leakage_power () {
		when      	: "EN & I";
		value      	: 8102.812000;
	}

	pin (EN) {

		direction		: input;
		capacitance		: 0.000791;
		fall_capacitance	: 0.000755;
		rise_capacitance	: 0.000827;
		fall_capacitance_range		(0.000645, 0.000962);
		rise_capacitance_range		(0.000684, 0.000978);
		max_transition		: 0.960000;
	}

	pin (I) {

		direction		: input;
		capacitance		: 0.000622;
		fall_capacitance	: 0.000610;
		rise_capacitance	: 0.000635;
		fall_capacitance_range		(0.000523, 0.000686);
		rise_capacitance_range		(0.000548, 0.000725);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		capacitance		: 0.000763;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!I";
		three_state		: "EN";

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_disable;
			timing_sense	   : positive_unate;

			cell_fall(Tristate_Disable) {
				values ("0.330440,0.333280,0.339522,0.357607,0.403776,0.496392,0.709742,1.151261");
			}
			cell_rise(Tristate_Disable) {
				values ("0.042044,0.044058,0.048245,0.049233,0.042304,0.020171,-0.032177,-0.147789");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "EN";
			timing_type	   : three_state_enable;
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.037433,0.040816,0.047154,0.058965,0.081486,0.125529", \
				        "0.041439,0.044854,0.051155,0.062963,0.085484,0.129525", \
				        "0.049193,0.052574,0.058927,0.070751,0.093262,0.137300", \
				        "0.060798,0.064493,0.071225,0.083401,0.105957,0.149968", \
				        "0.076608,0.080790,0.088069,0.100864,0.124121,0.168702", \
				        "0.100581,0.105557,0.114028,0.128200,0.152431,0.197339", \
				        "0.137770,0.144210,0.155082,0.172493,0.200136,0.247429", \
				        "0.197473,0.206362,0.221153,0.244441,0.280003,0.335128");
			}
			cell_rise(Timing_X1) {
				values ("0.034512,0.042854,0.057153,0.084196,0.137647,0.244014", \
				        "0.037344,0.045909,0.060315,0.087343,0.140800,0.247164", \
				        "0.042815,0.051848,0.066573,0.093599,0.147027,0.253373", \
				        "0.052793,0.063929,0.079297,0.106296,0.159563,0.265780", \
				        "0.054933,0.074726,0.099309,0.131642,0.185104,0.290902", \
				        "0.034661,0.061667,0.108165,0.160626,0.231597,0.342157", \
				        "-0.019816,0.012184,0.067964,0.164918,0.275365,0.428626", \
				        "-0.175421,-0.124426,-0.044465,0.077266,0.269791,0.500287");
			}
			fall_transition(Timing_X1) {
				values ("0.015035,0.017204,0.021593,0.030542,0.048903,0.086346", \
				        "0.015020,0.017226,0.021616,0.030557,0.048906,0.086334", \
				        "0.015167,0.017332,0.021654,0.030577,0.048930,0.086347", \
				        "0.016084,0.018112,0.022355,0.031032,0.049032,0.086352", \
				        "0.017347,0.019151,0.023099,0.031366,0.049404,0.086458", \
				        "0.020891,0.022721,0.026253,0.033636,0.050062,0.086308", \
				        "0.027720,0.029762,0.033492,0.040586,0.055411,0.089094", \
				        "0.039954,0.042399,0.046998,0.055125,0.069793,0.100659");
			}
			rise_transition(Timing_X1) {
				values ("0.037315,0.042230,0.050240,0.074508,0.123570,0.221105", \
				        "0.037130,0.042611,0.050476,0.074501,0.123575,0.221098", \
				        "0.039058,0.043062,0.051067,0.074466,0.123573,0.221103", \
				        "0.049489,0.051678,0.054379,0.074235,0.123568,0.221100", \
				        "0.071460,0.075192,0.077592,0.083732,0.124801,0.221096", \
				        "0.101079,0.111907,0.121139,0.125396,0.151718,0.226504", \
				        "0.130708,0.152569,0.181785,0.205418,0.221775,0.287558", \
				        "0.215881,0.228127,0.256131,0.313115,0.366391,0.420476");
			}
		}

		timing () {

			related_pin	   : "I";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.023679,0.026811,0.032913,0.044603,0.067093,0.111177", \
				        "0.026413,0.029593,0.035549,0.047253,0.069805,0.113863", \
				        "0.031206,0.034510,0.040716,0.052241,0.074698,0.118796", \
				        "0.037870,0.041694,0.048728,0.061654,0.084752,0.128893", \
				        "0.044264,0.049398,0.058540,0.074624,0.101652,0.148495", \
				        "0.046271,0.053423,0.066105,0.087927,0.123475,0.180214", \
				        "0.036910,0.046592,0.064048,0.094113,0.142842,0.218763", \
				        "0.001224,0.014318,0.037911,0.078737,0.145538,0.249761");
			}
			cell_rise(Timing_X1) {
				values ("0.056016,0.062918,0.076590,0.103567,0.157016,0.263349", \
				        "0.059699,0.066558,0.080129,0.107151,0.160640,0.267020", \
				        "0.066435,0.073338,0.086963,0.113879,0.167356,0.273774", \
				        "0.078712,0.085653,0.099278,0.126224,0.179651,0.286040", \
				        "0.098026,0.106266,0.121715,0.150114,0.203336,0.309452", \
				        "0.128679,0.138422,0.156892,0.190478,0.250564,0.357923", \
				        "0.181935,0.193799,0.216165,0.256536,0.327579,0.451386", \
				        "0.272410,0.288318,0.316333,0.366765,0.453418,0.600773");
			}
			fall_transition(Timing_X1) {
				values ("0.013501,0.016015,0.020907,0.030357,0.049107,0.086557", \
				        "0.013390,0.015933,0.020820,0.030318,0.048988,0.086492", \
				        "0.014249,0.016558,0.021159,0.030286,0.049006,0.086542", \
				        "0.017861,0.020045,0.024547,0.032663,0.049743,0.086560", \
				        "0.025684,0.027980,0.032550,0.040439,0.056097,0.088783", \
				        "0.039582,0.042428,0.047670,0.056637,0.072575,0.103294", \
				        "0.063194,0.066952,0.073845,0.085376,0.104583,0.137247", \
				        "0.101981,0.107419,0.117228,0.133562,0.159531,0.200308");
			}
			rise_transition(Timing_X1) {
				values ("0.031745,0.038007,0.050530,0.075021,0.123738,0.221175", \
				        "0.031741,0.038001,0.050534,0.074989,0.123749,0.221184", \
				        "0.031748,0.037977,0.050501,0.075027,0.123731,0.221178", \
				        "0.033037,0.038794,0.050695,0.075018,0.123745,0.221186", \
				        "0.041014,0.046534,0.057331,0.078314,0.123983,0.221180", \
				        "0.054459,0.060562,0.072393,0.094505,0.135687,0.223244", \
				        "0.075533,0.082637,0.096142,0.120875,0.166562,0.250976", \
				        "0.110679,0.119054,0.135094,0.163860,0.215360,0.309108");
			}
		}

		internal_power () {

			related_pin	         : "EN";
			fall_power(Power_X1) {
				values ("0.002455,0.002220,0.001737,0.000764,-0.001172,-0.005036", \
				        "0.002471,0.002224,0.001733,0.000796,-0.001162,-0.005038", \
				        "0.002509,0.002258,0.001781,0.000806,-0.001119,-0.004998", \
				        "0.002604,0.002362,0.001887,0.000916,-0.001007,-0.004904", \
				        "0.002851,0.002597,0.002125,0.001171,-0.000771,-0.004660", \
				        "0.003425,0.003180,0.002701,0.001724,-0.000213,-0.004082", \
				        "0.004693,0.004472,0.003969,0.003003,0.001098,-0.002808", \
				        "0.007402,0.007158,0.006685,0.005712,0.003804,-0.000071");
			}
			rise_power(Power_X1) {
				values ("0.002908,0.003150,0.003641,0.004606,0.006541,0.010410", \
				        "0.002914,0.003172,0.003647,0.004612,0.006535,0.010417", \
				        "0.002952,0.003193,0.003685,0.004653,0.006579,0.010450", \
				        "0.003044,0.003301,0.003783,0.004759,0.006676,0.010550", \
				        "0.003309,0.003549,0.004044,0.004998,0.006933,0.010797", \
				        "0.003900,0.004122,0.004614,0.005577,0.007480,0.011364", \
				        "0.005198,0.005418,0.005909,0.006883,0.008794,0.012662", \
				        "0.007939,0.008167,0.008631,0.009595,0.011543,0.015417");
			}
		}

		internal_power () {

			related_pin	         : "I";
			fall_power(Power_X1) {
				values ("0.001158,0.000919,0.000426,-0.000534,-0.002473,-0.006340", \
				        "0.001141,0.000900,0.000411,-0.000550,-0.002484,-0.006352", \
				        "0.001134,0.000893,0.000405,-0.000562,-0.002498,-0.006369", \
				        "0.001130,0.000896,0.000416,-0.000552,-0.002497,-0.006368", \
				        "0.001202,0.000955,0.000465,-0.000505,-0.002449,-0.006326", \
				        "0.001505,0.001243,0.000723,-0.000296,-0.002294,-0.006221", \
				        "0.002413,0.002098,0.001526,0.000416,-0.001709,-0.005787", \
				        "0.004454,0.004142,0.003504,0.002274,-0.000050,-0.004422");
			}
			rise_power(Power_X1) {
				values ("0.002172,0.002427,0.002916,0.003882,0.005821,0.009695", \
				        "0.002156,0.002405,0.002895,0.003865,0.005806,0.009680", \
				        "0.002160,0.002396,0.002887,0.003855,0.005793,0.009675", \
				        "0.002154,0.002401,0.002888,0.003860,0.005797,0.009676", \
				        "0.002219,0.002459,0.002942,0.003898,0.005825,0.009692", \
				        "0.002541,0.002765,0.003209,0.004130,0.006008,0.009822", \
				        "0.003470,0.003664,0.004066,0.004909,0.006678,0.010356", \
				        "0.005547,0.005711,0.006062,0.006820,0.008434,0.011874");
			}
		}
	}

}


/******************************************************************************************
 Module          	: TLAT_X1
 Cell Description	: High enable Latch with drive strength X1
*******************************************************************************************/

cell (TLAT_X1) {

	latch ("IQ" , "IQN") {
		data_in            	: "D";
		enable             	: "G";
	}

	area               	: 3.724000;

	cell_leakage_power 	: 35445.760000;


	pin (D) {

		direction		: input;
		capacitance		: 0.000895;
		fall_capacitance	: 0.000859;
		rise_capacitance	: 0.000931;
		fall_capacitance_range		(0.000811, 0.000880);
		rise_capacitance_range		(0.000911, 0.000940);
		max_transition		: 0.960000;

		timing () {

			related_pin	   : "G";
			timing_type	   : hold_falling;
			when	           : "OE";
			sdf_cond	   : "(OE == 1'b1)";
			fall_constraint(Hold) {
				values ("-0.065495,-0.048714,-0.042041,-0.032979,-0.015184", \
				        "-0.109028,-0.090877,-0.082745,-0.070685,-0.051276", \
				        "-0.142281,-0.123421,-0.113727,-0.101826,-0.081378", \
				        "-0.195239,-0.176521,-0.166947,-0.155146,-0.134832", \
				        "-0.282808,-0.263945,-0.255945,-0.243228,-0.226761");
			}
			rise_constraint(Hold) {
				values ("-0.018162,0.014279,0.031672,0.057450,0.097175", \
				        "-0.048791,-0.014935,0.004252,0.031633,0.074359", \
				        "-0.064839,-0.029403,-0.009936,0.018331,0.062120", \
				        "-0.077178,-0.040178,-0.020277,0.008702,0.052769", \
				        "-0.075875,-0.036178,-0.014514,0.014235,0.059741");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : setup_falling;
			when	           : "OE";
			sdf_cond	   : "(OE == 1'b1)";
			fall_constraint(Setup) {
				values ("0.079867,0.068164,0.065687,0.069434,0.088177", \
				        "0.124585,0.112413,0.108284,0.107536,0.120302", \
				        "0.160147,0.147068,0.141053,0.139630,0.148601", \
				        "0.215887,0.204229,0.199526,0.196754,0.205635", \
				        "0.308575,0.296932,0.291780,0.287431,0.299934");
			}
			rise_constraint(Setup) {
				values ("0.021862,-0.011570,-0.028654,-0.053260,-0.090754", \
				        "0.052675,0.018610,-0.000584,-0.027264,-0.067116", \
				        "0.069124,0.033150,0.013407,-0.014680,-0.055765", \
				        "0.080855,0.043212,0.022539,-0.006089,-0.049031", \
				        "0.078241,0.037746,0.016617,-0.012992,-0.058497");
			}
		}
	}

	pin (G) {

		direction		: input;
		clock   		: true;
		capacitance		: 0.001020;
		fall_capacitance	: 0.000961;
		rise_capacitance	: 0.001079;
		fall_capacitance_range		(0.000789, 0.001110);
		rise_capacitance_range		(0.000882, 0.001194);
		max_transition		: 0.960000;
		min_pulse_width_high	: 0.082817;

		internal_power () {

			when      	: "D & OE & Q";

			power(Hidden_Power_Clk) {
				values ("0.003343,0.003936,0.005084,0.007759,0.013542");
			}

		}

		internal_power () {

			when      	: "!D & OE & !Q";

			power(Hidden_Power_Clk) {
				values ("0.003495,0.004075,0.005214,0.007870,0.013639");
			}

		}

		internal_power () {

			when      	: "!D & !OE & !Q";

			power(Hidden_Power_Clk) {
				values ("0.003495,0.004075,0.005214,0.007870,0.013639");
			}

		}

		internal_power () {

			when      	: "D & !OE & Q";

			power(Hidden_Power_Clk) {
				values ("0.003343,0.003936,0.005084,0.007759,0.013542");
			}

		}
	}

	pin (OE) {

		direction		: input;
		capacitance		: 0.000727;
		fall_capacitance	: 0.000697;
		rise_capacitance	: 0.000758;
		fall_capacitance_range		(0.000628, 0.000797);
		rise_capacitance_range		(0.000697, 0.000820);
		max_transition		: 0.960000;
	}

	pin (Q) {

		direction		: output;
		capacitance		: 0.000687;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "IQ";
		three_state		: "!OE";

		timing () {

			related_pin	   : "D";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.102270,0.106214,0.113367,0.126250,0.150056,0.195083", \
				        "0.106018,0.109940,0.117101,0.129844,0.153574,0.198600", \
				        "0.112448,0.116388,0.123537,0.136267,0.160351,0.205378", \
				        "0.124331,0.128230,0.135408,0.148331,0.171904,0.216930", \
				        "0.145788,0.149812,0.157375,0.170294,0.194371,0.239427", \
				        "0.179103,0.183402,0.191971,0.205427,0.230173,0.275689", \
				        "0.233272,0.238069,0.246411,0.262459,0.287703,0.334139", \
				        "0.319856,0.325697,0.335527,0.353756,0.381386,0.429806");
			}
			cell_rise(Timing_X1) {
				values ("0.103674,0.110770,0.124673,0.151857,0.205593,0.312170", \
				        "0.106234,0.113320,0.127172,0.154329,0.208063,0.314645", \
				        "0.111050,0.118141,0.131983,0.159033,0.212645,0.319230", \
				        "0.120254,0.127343,0.141205,0.168375,0.221791,0.328387", \
				        "0.133866,0.140971,0.154853,0.181891,0.235609,0.342197", \
				        "0.149720,0.156897,0.171111,0.198505,0.252223,0.358853", \
				        "0.164557,0.171968,0.186018,0.213965,0.267737,0.374444", \
				        "0.168720,0.176548,0.191980,0.219911,0.274412,0.381550");
			}
			fall_transition(Timing_X1) {
				values ("0.017071,0.019252,0.023699,0.032462,0.050233,0.086915", \
				        "0.017075,0.019244,0.023695,0.032468,0.050201,0.086832", \
				        "0.017067,0.019251,0.023697,0.032410,0.050675,0.086960", \
				        "0.017028,0.019195,0.023601,0.032365,0.050239,0.086770", \
				        "0.017658,0.019761,0.024023,0.032635,0.050463,0.086824", \
				        "0.019535,0.021611,0.025828,0.034216,0.051238,0.087349", \
				        "0.022751,0.024940,0.028847,0.036789,0.053531,0.088566", \
				        "0.028523,0.030636,0.034453,0.042118,0.057850,0.091273");
			}
			rise_transition(Timing_X1) {
				values ("0.031311,0.037390,0.049537,0.073888,0.122804,0.220605", \
				        "0.031312,0.037388,0.049550,0.073873,0.122835,0.220616", \
				        "0.031322,0.037399,0.049551,0.074054,0.122867,0.220613", \
				        "0.031341,0.037405,0.049567,0.074020,0.122857,0.220615", \
				        "0.031554,0.037665,0.049720,0.073966,0.122888,0.220614", \
				        "0.032181,0.038127,0.050044,0.074176,0.122939,0.220647", \
				        "0.034099,0.039789,0.051344,0.074918,0.123162,0.220792", \
				        "0.038950,0.044310,0.055174,0.077662,0.124671,0.221788");
			}
		}

		timing () {

			related_pin	   : "G";
			timing_type	   : rising_edge;
			timing_sense	   : non_unate;

			cell_fall(Timing_X1) {
				values ("0.102754,0.106952,0.114516,0.127861,0.152003,0.197196", \
				        "0.105963,0.110136,0.117706,0.130969,0.155095,0.200291", \
				        "0.111095,0.115264,0.122856,0.136191,0.160240,0.205154", \
				        "0.117297,0.121460,0.129029,0.142536,0.166626,0.211627", \
				        "0.124211,0.128384,0.135978,0.149379,0.173681,0.218798", \
				        "0.131434,0.135641,0.143262,0.156597,0.180740,0.226041", \
				        "0.135910,0.140170,0.147871,0.161292,0.185490,0.230672", \
				        "0.128914,0.133364,0.141311,0.155318,0.179800,0.225228");
			}
			cell_rise(Timing_X1) {
				values ("0.128208,0.135312,0.149223,0.176404,0.230091,0.336626", \
				        "0.131464,0.138572,0.152482,0.179889,0.233529,0.339907", \
				        "0.137112,0.144218,0.158131,0.185336,0.238892,0.345281", \
				        "0.143031,0.150166,0.164094,0.191625,0.245347,0.351716", \
				        "0.149602,0.156724,0.170633,0.197912,0.252274,0.358714", \
				        "0.154264,0.161373,0.175288,0.202452,0.256324,0.363504", \
				        "0.151412,0.158520,0.172437,0.199665,0.253730,0.360705", \
				        "0.131207,0.138330,0.152305,0.179200,0.233182,0.340038");
			}
			fall_transition(Timing_X1) {
				values ("0.018094,0.020379,0.024703,0.033076,0.050564,0.086901", \
				        "0.018083,0.020404,0.024700,0.033077,0.050566,0.086901", \
				        "0.018097,0.020392,0.024701,0.033080,0.050586,0.087000", \
				        "0.018092,0.020400,0.024723,0.033081,0.050601,0.086920", \
				        "0.018108,0.020421,0.024724,0.033130,0.050613,0.086926", \
				        "0.018207,0.020472,0.024789,0.033149,0.050570,0.086986", \
				        "0.018543,0.020816,0.025075,0.033322,0.050688,0.087035", \
				        "0.019654,0.021891,0.026025,0.034018,0.051102,0.087168");
			}
			rise_transition(Timing_X1) {
				values ("0.031466,0.037503,0.049798,0.074131,0.123007,0.220616", \
				        "0.031472,0.037508,0.049795,0.074130,0.123000,0.220614", \
				        "0.031467,0.037506,0.049799,0.074124,0.123000,0.220641", \
				        "0.031466,0.037705,0.049809,0.074137,0.123001,0.220639", \
				        "0.031504,0.037715,0.049818,0.074124,0.122996,0.220622", \
				        "0.031488,0.037519,0.049801,0.074129,0.122993,0.220588", \
				        "0.031503,0.037536,0.049823,0.074145,0.123009,0.220647", \
				        "0.031599,0.037631,0.049906,0.074202,0.123043,0.220659");
			}
		}

		timing () {

			related_pin	   : "OE";
			timing_type	   : three_state_disable;
			timing_sense	   : negative_unate;

			cell_fall(Tristate_Disable) {
				values ("0.368257,0.397973,0.451833,0.546807,0.726833,1.086742,1.792017,3.189436");
			}
			cell_rise(Tristate_Disable) {
				values ("0.042285,0.063872,0.108820,0.199759,0.379160,0.737437,1.450641,2.871713");
			}
			fall_transition(scalar) {values ("0.0");
			}
			rise_transition(scalar) {values ("0.0");
			}
		}

		timing () {

			related_pin	   : "OE";
			timing_type	   : three_state_enable;
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.010984,0.013850,0.020220,0.033755,0.057003,0.101127", \
				        "0.013848,0.017074,0.023286,0.036768,0.060006,0.104159", \
				        "0.016209,0.020916,0.029246,0.043004,0.066140,0.110214", \
				        "0.015902,0.022899,0.035224,0.054229,0.078695,0.122440", \
				        "0.007146,0.017627,0.036017,0.063896,0.098058,0.147527", \
				        "-0.023552,-0.007690,0.019433,0.061174,0.112544,0.181922", \
				        "-0.107368,-0.082318,-0.042428,0.020298,0.103056,0.203923", \
				        "-0.314980,-0.272482,-0.208712,-0.115906,0.014448,0.175424");
			}
			cell_rise(Timing_X1) {
				values ("0.052968,0.059928,0.073660,0.100678,0.154166,0.260552", \
				        "0.056254,0.063195,0.076927,0.103950,0.157447,0.263829", \
				        "0.061940,0.068914,0.082641,0.109655,0.163146,0.269526", \
				        "0.068015,0.075531,0.089438,0.116445,0.169923,0.276318", \
				        "0.071625,0.078961,0.093332,0.121675,0.176452,0.282831", \
				        "0.073282,0.080998,0.095360,0.123134,0.177974,0.286753", \
				        "0.062308,0.072280,0.089113,0.117941,0.172857,0.281040", \
				        "0.017528,0.031335,0.054353,0.090771,0.149346,0.259328");
			}
			fall_transition(Timing_X1) {
				values ("0.008173,0.011866,0.019455,0.030409,0.048340,0.085760", \
				        "0.010068,0.013082,0.019656,0.030475,0.048392,0.085765", \
				        "0.014906,0.017977,0.023065,0.031262,0.048352,0.085749", \
				        "0.023033,0.027320,0.033573,0.039551,0.050386,0.085719", \
				        "0.036979,0.042872,0.051093,0.058207,0.066313,0.091626", \
				        "0.060092,0.068002,0.079119,0.090452,0.098601,0.124414", \
				        "0.099320,0.109032,0.124423,0.143440,0.158055,0.184045", \
				        "0.175837,0.184694,0.202366,0.229451,0.261493,0.289938");
			}
			rise_transition(Timing_X1) {
				values ("0.030452,0.036711,0.049099,0.073650,0.122592,0.220151", \
				        "0.030374,0.036660,0.049070,0.073641,0.122584,0.220145", \
				        "0.030434,0.036698,0.049093,0.073652,0.122595,0.220159", \
				        "0.030440,0.036530,0.048899,0.073653,0.122593,0.220153", \
				        "0.028593,0.034761,0.047549,0.073444,0.122172,0.220166", \
				        "0.030926,0.035829,0.046838,0.071196,0.121070,0.219530", \
				        "0.039491,0.043727,0.052369,0.072868,0.120550,0.218318", \
				        "0.056011,0.060666,0.069280,0.086001,0.126005,0.220882");
			}
		}

		internal_power () {

			related_pin	         : "D";
			fall_power(Power_X1) {
				values ("0.007839,0.007597,0.007116,0.006154,0.004199,0.000325", \
				        "0.007829,0.007586,0.007108,0.006139,0.004186,0.000313", \
				        "0.007819,0.007578,0.007097,0.006129,0.004220,0.000329", \
				        "0.007827,0.007581,0.007091,0.006133,0.004184,0.000314", \
				        "0.007981,0.007746,0.007275,0.006333,0.004375,0.000502", \
				        "0.008636,0.008388,0.007918,0.006951,0.004997,0.001123", \
				        "0.010406,0.010137,0.009659,0.008707,0.006758,0.002866", \
				        "0.014342,0.014088,0.013603,0.012634,0.010684,0.006770");
			}
			rise_power(Power_X1) {
				values ("0.007436,0.007687,0.008166,0.009137,0.011088,0.014991", \
				        "0.007418,0.007668,0.008147,0.009118,0.011068,0.014971", \
				        "0.007406,0.007657,0.008133,0.009104,0.011049,0.014954", \
				        "0.007430,0.007680,0.008162,0.009134,0.011059,0.014964", \
				        "0.007599,0.007845,0.008314,0.009280,0.011230,0.015132", \
				        "0.008178,0.008429,0.008916,0.009900,0.011851,0.015743", \
				        "0.009852,0.010098,0.010569,0.011557,0.013516,0.017411", \
				        "0.013740,0.013975,0.014428,0.015393,0.017339,0.021222");
			}
		}

		internal_power () {

			related_pin	         : "G";
			fall_power(Power_X1) {
				values ("0.009643,0.009402,0.008904,0.007936,0.006000,0.002132", \
				        "0.009640,0.009395,0.008898,0.007927,0.005989,0.002122", \
				        "0.009701,0.009458,0.008961,0.007996,0.006062,0.002185", \
				        "0.009934,0.009685,0.009196,0.008239,0.006312,0.002446", \
				        "0.010599,0.010353,0.009865,0.008904,0.006977,0.003117", \
				        "0.012284,0.012041,0.011544,0.010578,0.008658,0.004792", \
				        "0.016105,0.015858,0.015361,0.014392,0.012468,0.008604", \
				        "0.024257,0.024008,0.023511,0.022558,0.020618,0.016764");
			}
			rise_power(Power_X1) {
				values ("0.010571,0.010821,0.011319,0.012290,0.014248,0.018133", \
				        "0.010561,0.010811,0.011307,0.012309,0.014263,0.018143", \
				        "0.010650,0.010900,0.011398,0.012367,0.014317,0.018208", \
				        "0.010839,0.011093,0.011579,0.012588,0.014537,0.018424", \
				        "0.011477,0.011738,0.012224,0.013206,0.015202,0.019096", \
				        "0.013088,0.013338,0.013835,0.014802,0.016781,0.020698", \
				        "0.016675,0.016926,0.017423,0.018394,0.020394,0.024289", \
				        "0.024283,0.024535,0.025035,0.025967,0.027950,0.031888");
			}
		}

		internal_power () {

			related_pin	         : "OE";
			fall_power(Power_X1) {
				values ("0.001428,0.001201,0.000724,-0.000267,-0.002199,-0.006067", \
				        "0.001435,0.001213,0.000663,-0.000239,-0.002174,-0.006093", \
				        "0.001466,0.001190,0.000751,-0.000271,-0.002203,-0.006042", \
				        "0.001494,0.001310,0.000794,-0.000176,-0.002122,-0.006005", \
				        "0.001709,0.001494,0.000988,0.000005,-0.001946,-0.005817", \
				        "0.002264,0.002022,0.001488,0.000516,-0.001399,-0.005293", \
				        "0.003484,0.003249,0.002773,0.001760,-0.000158,-0.004013", \
				        "0.006181,0.005927,0.005422,0.004467,0.002505,-0.001372");
			}
			rise_power(Power_X1) {
				values ("0.001928,0.002178,0.002669,0.003649,0.005572,0.009439", \
				        "0.001915,0.002181,0.002648,0.003619,0.005578,0.009441", \
				        "0.001937,0.002211,0.002709,0.003655,0.005586,0.009460", \
				        "0.002023,0.002257,0.002727,0.003723,0.005634,0.009518", \
				        "0.002174,0.002448,0.002922,0.003894,0.005827,0.009671", \
				        "0.002725,0.002968,0.003423,0.004421,0.006358,0.010235", \
				        "0.003945,0.004203,0.004709,0.005660,0.007553,0.011449", \
				        "0.006584,0.006849,0.007350,0.008323,0.010253,0.014167");
			}
		}
	}

}


/******************************************************************************************
 Module          	: XNOR2_X1
 Cell Description	: Combinational cell (XNOR2_X1) with drive strength X1
*******************************************************************************************/

cell (XNOR2_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 13039.330000;

	leakage_power () {
		when      	: "!A & !B";
		value      	: 11357.800000;
	}
	leakage_power () {
		when      	: "A & !B";
		value      	: 11907.600000;
	}
	leakage_power () {
		when      	: "!A & B";
		value      	: 17333.780000;
	}
	leakage_power () {
		when      	: "A & B";
		value      	: 11558.140000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001029;
		fall_capacitance	: 0.001010;
		rise_capacitance	: 0.001047;
		fall_capacitance_range		(0.000831, 0.001126);
		rise_capacitance_range		(0.000853, 0.001254);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001151;
		fall_capacitance	: 0.001123;
		rise_capacitance	: 0.001179;
		fall_capacitance_range		(0.000977, 0.001262);
		rise_capacitance_range		(0.001044, 0.001310);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "!(A ^ B)";

		timing () {

			related_pin	   : "A";
			when	           : "!B";
			sdf_cond	   : "(B == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.021890,0.024715,0.030501,0.041795,0.063880,0.107506", \
				        "0.024817,0.027624,0.033343,0.044706,0.066841,0.110462", \
				        "0.030924,0.033857,0.039323,0.050408,0.072627,0.116202", \
				        "0.037941,0.041954,0.049214,0.062299,0.084642,0.128164", \
				        "0.043497,0.048932,0.058867,0.076616,0.106189,0.153295", \
				        "0.043648,0.050910,0.064434,0.088282,0.128219,0.192095", \
				        "0.028599,0.038843,0.057058,0.089314,0.143163,0.229288", \
				        "-0.020232,-0.006958,0.017700,0.061055,0.133812,0.250207");
			}
			cell_rise(Timing_X1) {
				values ("0.045532,0.052265,0.065697,0.092326,0.145482,0.251574", \
				        "0.048629,0.055310,0.068672,0.095306,0.148448,0.254581", \
				        "0.055469,0.062110,0.075405,0.101787,0.154742,0.260726", \
				        "0.070688,0.077048,0.089846,0.115866,0.168260,0.273766", \
				        "0.095238,0.103364,0.118727,0.146089,0.197207,0.301365", \
				        "0.131027,0.141264,0.160630,0.195872,0.256533,0.360179", \
				        "0.187073,0.200225,0.224261,0.268162,0.345256,0.474798", \
				        "0.280637,0.296706,0.327130,0.381765,0.477694,0.641129");
			}
			fall_transition(Timing_X1) {
				values ("0.016918,0.019509,0.024500,0.033771,0.052208,0.089324", \
				        "0.016545,0.019213,0.024356,0.033843,0.052219,0.089391", \
				        "0.018452,0.020433,0.024794,0.033466,0.052365,0.089496", \
				        "0.025627,0.027685,0.031732,0.038157,0.053424,0.089658", \
				        "0.037753,0.040184,0.044807,0.052869,0.066745,0.094098", \
				        "0.058639,0.061647,0.067415,0.077354,0.094735,0.123786", \
				        "0.094931,0.099021,0.106460,0.119527,0.141550,0.178258", \
				        "0.159412,0.164892,0.175070,0.192731,0.222061,0.269158");
			}
			rise_transition(Timing_X1) {
				values ("0.040887,0.047104,0.059388,0.083662,0.132188,0.229312", \
				        "0.040865,0.047084,0.059501,0.083734,0.132251,0.229338", \
				        "0.040428,0.046878,0.059394,0.083683,0.132240,0.229340", \
				        "0.043148,0.048355,0.059642,0.083559,0.132203,0.229327", \
				        "0.055414,0.060417,0.069837,0.088696,0.132413,0.229318", \
				        "0.074732,0.080959,0.092599,0.113468,0.149956,0.231779", \
				        "0.107083,0.114013,0.127716,0.153076,0.198395,0.274187", \
				        "0.165419,0.173192,0.188634,0.217725,0.271685,0.366853");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B";
			sdf_cond	   : "(B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.069850,0.072688,0.078420,0.089758,0.111895,0.155737", \
				        "0.073664,0.076514,0.082288,0.093713,0.115806,0.159649", \
				        "0.081776,0.084642,0.090483,0.101870,0.123951,0.167793", \
				        "0.097030,0.099920,0.105732,0.117021,0.139098,0.182882", \
				        "0.119432,0.122478,0.128513,0.140466,0.162833,0.206704", \
				        "0.152773,0.156010,0.162261,0.174439,0.197549,0.242028", \
				        "0.205929,0.209692,0.216944,0.229950,0.254023,0.299206", \
				        "0.293472,0.298360,0.307080,0.322779,0.349973,0.398183");
			}
			cell_rise(Timing_X1) {
				values ("0.077752,0.082539,0.092100,0.111419,0.148978,0.224394", \
				        "0.080753,0.085550,0.095103,0.113966,0.151746,0.227183", \
				        "0.086085,0.090898,0.100436,0.119309,0.157107,0.232639", \
				        "0.092741,0.097558,0.107266,0.126509,0.164345,0.239848", \
				        "0.098734,0.103570,0.113337,0.132800,0.171152,0.246680", \
				        "0.103830,0.108733,0.118370,0.137696,0.175654,0.251096", \
				        "0.100546,0.105674,0.115724,0.135247,0.173792,0.249656", \
				        "0.074425,0.080335,0.091512,0.112592,0.152309,0.230039");
			}
			fall_transition(Timing_X1) {
				values ("0.021890,0.024198,0.028909,0.038425,0.057015,0.094312", \
				        "0.021888,0.024196,0.028890,0.038344,0.056962,0.094264", \
				        "0.021870,0.024182,0.028877,0.038416,0.057017,0.094309", \
				        "0.021982,0.024276,0.028975,0.038497,0.056984,0.094256", \
				        "0.022033,0.024314,0.029087,0.038574,0.057159,0.094305", \
				        "0.022698,0.024778,0.029185,0.038394,0.056610,0.093977", \
				        "0.026427,0.028328,0.032299,0.040794,0.057933,0.093738", \
				        "0.034723,0.036699,0.040570,0.048338,0.064119,0.097724");
			}
			rise_transition(Timing_X1) {
				values ("0.041409,0.045953,0.055109,0.073372,0.109651,0.181846", \
				        "0.041416,0.045945,0.055127,0.073399,0.109689,0.181877", \
				        "0.041426,0.045963,0.055123,0.073371,0.109692,0.181852", \
				        "0.041487,0.046049,0.055191,0.073410,0.109698,0.181849", \
				        "0.040571,0.045057,0.054305,0.073014,0.109397,0.181855", \
				        "0.041941,0.046257,0.055120,0.072924,0.108629,0.181246", \
				        "0.045920,0.049930,0.058366,0.075771,0.111088,0.182021", \
				        "0.057375,0.061112,0.068655,0.084212,0.117426,0.188065");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A";
			sdf_cond	   : "(A == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.027551,0.030443,0.036299,0.047674,0.070017,0.113996", \
				        "0.030596,0.033428,0.039256,0.050677,0.072984,0.116993", \
				        "0.037132,0.039855,0.045392,0.056707,0.079035,0.122941", \
				        "0.047410,0.050940,0.057481,0.069552,0.091525,0.135252", \
				        "0.057363,0.062229,0.071144,0.087478,0.115300,0.160783", \
				        "0.063972,0.070368,0.082418,0.104284,0.141683,0.202830", \
				        "0.060067,0.068676,0.084643,0.113634,0.163480,0.245404", \
				        "0.031354,0.042739,0.063780,0.101896,0.167677,0.276410");
			}
			cell_rise(Timing_X1) {
				values ("0.065780,0.072533,0.086045,0.112664,0.165832,0.271916", \
				        "0.069310,0.075951,0.089315,0.116059,0.169368,0.275560", \
				        "0.075470,0.082240,0.095629,0.122408,0.175807,0.282153", \
				        "0.086720,0.093543,0.107135,0.133998,0.187455,0.293940", \
				        "0.105470,0.113402,0.128624,0.156683,0.210078,0.316517", \
				        "0.135060,0.144484,0.162632,0.196045,0.256040,0.363752", \
				        "0.186064,0.197833,0.219760,0.259904,0.330978,0.455480", \
				        "0.271159,0.286639,0.314763,0.365139,0.452394,0.601331");
			}
			fall_transition(Timing_X1) {
				values ("0.021155,0.023725,0.028597,0.037978,0.056651,0.094225", \
				        "0.020988,0.023566,0.028500,0.037990,0.056689,0.094207", \
				        "0.021464,0.023747,0.028505,0.037804,0.056722,0.094240", \
				        "0.028146,0.030089,0.033949,0.040686,0.057017,0.094295", \
				        "0.040526,0.042879,0.047335,0.055176,0.068748,0.097455", \
				        "0.060737,0.063782,0.069600,0.079693,0.096974,0.125836", \
				        "0.094569,0.098753,0.106520,0.119933,0.142690,0.180099", \
				        "0.152816,0.158756,0.169666,0.188250,0.218883,0.267863");
			}
			rise_transition(Timing_X1) {
				values ("0.040908,0.047078,0.059405,0.083729,0.132235,0.229325", \
				        "0.040900,0.047079,0.059446,0.083729,0.132252,0.229340", \
				        "0.040897,0.047058,0.059365,0.083673,0.132209,0.229327", \
				        "0.041838,0.047583,0.059481,0.083602,0.132196,0.229326", \
				        "0.050327,0.055562,0.065812,0.086581,0.132380,0.229338", \
				        "0.066038,0.071592,0.082579,0.103500,0.143767,0.231270", \
				        "0.092783,0.098614,0.110238,0.132679,0.176262,0.259110", \
				        "0.139299,0.145872,0.158632,0.183187,0.230070,0.319874");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A";
			sdf_cond	   : "(A == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.077432,0.080314,0.086054,0.097285,0.119045,0.162593", \
				        "0.081151,0.084036,0.089820,0.100953,0.122821,0.166419", \
				        "0.089110,0.091996,0.097832,0.109184,0.131098,0.174713", \
				        "0.105616,0.108524,0.114296,0.125611,0.147468,0.191058", \
				        "0.133095,0.136083,0.142086,0.153627,0.175538,0.219222", \
				        "0.173117,0.176372,0.182536,0.194431,0.217141,0.260908", \
				        "0.234220,0.237911,0.244758,0.257516,0.280986,0.325341", \
				        "0.334381,0.338928,0.347261,0.361628,0.387212,0.433305");
			}
			cell_rise(Timing_X1) {
				values ("0.085485,0.090304,0.099850,0.119228,0.156947,0.232427", \
				        "0.088148,0.092969,0.102667,0.122024,0.159745,0.235250", \
				        "0.092423,0.097257,0.106836,0.125926,0.163753,0.239323", \
				        "0.098955,0.103802,0.113486,0.132788,0.170557,0.246270", \
				        "0.105336,0.110220,0.120087,0.139719,0.178123,0.253654", \
				        "0.110409,0.115363,0.125160,0.144550,0.182717,0.258440", \
				        "0.106717,0.111899,0.121875,0.141707,0.180488,0.256641", \
				        "0.077349,0.083177,0.094563,0.115523,0.155780,0.234069");
			}
			fall_transition(Timing_X1) {
				values ("0.017721,0.019922,0.024475,0.033668,0.052229,0.089362", \
				        "0.017718,0.019919,0.024448,0.033710,0.052203,0.089353", \
				        "0.017706,0.019908,0.024458,0.033683,0.052225,0.089327", \
				        "0.017773,0.019964,0.024471,0.033725,0.052093,0.089316", \
				        "0.018559,0.020646,0.024980,0.034122,0.052248,0.089393", \
				        "0.020490,0.022427,0.026583,0.035271,0.052986,0.089503", \
				        "0.024000,0.025793,0.029595,0.037830,0.054733,0.090361", \
				        "0.030526,0.032255,0.035733,0.043276,0.058890,0.092891");
			}
			rise_transition(Timing_X1) {
				values ("0.041397,0.045937,0.055099,0.073374,0.109675,0.181826", \
				        "0.041401,0.045941,0.055110,0.073375,0.109636,0.181814", \
				        "0.041408,0.045951,0.055111,0.073352,0.109689,0.181868", \
				        "0.041482,0.045994,0.055146,0.073422,0.109629,0.181861", \
				        "0.040726,0.045267,0.054681,0.073185,0.109506,0.181874", \
				        "0.041879,0.046216,0.055083,0.072944,0.108782,0.181427", \
				        "0.045422,0.049528,0.058018,0.075523,0.110890,0.181983", \
				        "0.054631,0.058495,0.066352,0.082507,0.116566,0.187647");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B";

			rise_power(Power_X1) {
				values ("0.002362,0.002594,0.003067,0.004041,0.005979,0.009861", \
				        "0.002346,0.002590,0.003075,0.004043,0.005990,0.009864", \
				        "0.002350,0.002608,0.003093,0.004057,0.005993,0.009869", \
				        "0.002445,0.002688,0.003161,0.004115,0.006034,0.009897", \
				        "0.002681,0.002906,0.003361,0.004287,0.006171,0.009984", \
				        "0.003214,0.003416,0.003849,0.004737,0.006562,0.010294", \
				        "0.004437,0.004611,0.004984,0.005785,0.007500,0.011123", \
				        "0.007157,0.007295,0.007564,0.008208,0.009706,0.013063");
			}
			fall_power(Power_X1) {
				values ("0.001084,0.000835,0.000349,-0.000607,-0.002535,-0.006390", \
				        "0.001086,0.000848,0.000360,-0.000600,-0.002525,-0.006380", \
				        "0.001108,0.000856,0.000373,-0.000586,-0.002512,-0.006367", \
				        "0.001142,0.000904,0.000415,-0.000552,-0.002486,-0.006374", \
				        "0.001317,0.001059,0.000553,-0.000446,-0.002412,-0.006304", \
				        "0.001837,0.001546,0.000987,-0.000087,-0.002143,-0.006114", \
				        "0.003105,0.002786,0.002154,0.000951,-0.001306,-0.005502", \
				        "0.005893,0.005553,0.004847,0.003493,0.000966,-0.003679");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B";

			fall_power(Power_X1) {
				values ("0.003457,0.003187,0.002696,0.001712,-0.000248,-0.004135", \
				        "0.003440,0.003181,0.002690,0.001707,-0.000255,-0.004150", \
				        "0.003472,0.003219,0.002726,0.001734,-0.000226,-0.004120", \
				        "0.003576,0.003320,0.002826,0.001847,-0.000111,-0.004001", \
				        "0.003803,0.003562,0.003070,0.002097,0.000135,-0.003757", \
				        "0.004391,0.004136,0.003648,0.002679,0.000728,-0.003167", \
				        "0.005693,0.005444,0.004979,0.003999,0.002057,-0.001826", \
				        "0.008617,0.008361,0.007866,0.006871,0.004927,0.001047");
			}
			rise_power(Power_X1) {
				values ("0.004278,0.004518,0.004994,0.005951,0.007871,0.011722", \
				        "0.004285,0.004499,0.004987,0.005944,0.007858,0.011709", \
				        "0.004280,0.004520,0.004999,0.005952,0.007871,0.011722", \
				        "0.004321,0.004561,0.005051,0.006015,0.007940,0.011794", \
				        "0.004540,0.004767,0.005259,0.006219,0.008145,0.012000", \
				        "0.005126,0.005366,0.005845,0.006807,0.008735,0.012589", \
				        "0.006558,0.006789,0.007271,0.008212,0.010131,0.013966", \
				        "0.009723,0.009914,0.010387,0.011304,0.013171,0.016970");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A";

			rise_power(Power_X1) {
				values ("0.002554,0.002810,0.003300,0.004273,0.006222,0.010087", \
				        "0.002534,0.002777,0.003268,0.004247,0.006192,0.010073", \
				        "0.002498,0.002749,0.003238,0.004219,0.006176,0.010060", \
				        "0.002472,0.002718,0.003214,0.004197,0.006153,0.010048", \
				        "0.002498,0.002736,0.003224,0.004196,0.006147,0.010035", \
				        "0.002781,0.003002,0.003456,0.004382,0.006279,0.010116", \
				        "0.003726,0.003904,0.004288,0.005120,0.006888,0.010592", \
				        "0.006016,0.006132,0.006431,0.007077,0.008612,0.012017");
			}
			fall_power(Power_X1) {
				values ("0.001336,0.001091,0.000607,-0.000354,-0.002283,-0.006139", \
				        "0.001338,0.001090,0.000603,-0.000356,-0.002286,-0.006143", \
				        "0.001331,0.001094,0.000611,-0.000348,-0.002278,-0.006138", \
				        "0.001378,0.001126,0.000646,-0.000324,-0.002262,-0.006129", \
				        "0.001517,0.001266,0.000769,-0.000221,-0.002188,-0.006083", \
				        "0.001956,0.001687,0.001158,0.000114,-0.001918,-0.005885", \
				        "0.003057,0.002774,0.002190,0.001068,-0.001095,-0.005253", \
				        "0.005539,0.005216,0.004583,0.003354,0.001007,-0.003444");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A";

			fall_power(Power_X1) {
				values ("0.003586,0.003321,0.002854,0.001872,-0.000070,-0.003938", \
				        "0.003559,0.003316,0.002844,0.001878,-0.000069,-0.003943", \
				        "0.003596,0.003345,0.002869,0.001895,-0.000051,-0.003922", \
				        "0.003665,0.003433,0.002944,0.001975,0.000036,-0.003836", \
				        "0.003888,0.003654,0.003170,0.002204,0.000274,-0.003594", \
				        "0.004416,0.004193,0.003695,0.002735,0.000803,-0.003063", \
				        "0.005632,0.005388,0.004887,0.003943,0.002003,-0.001861", \
				        "0.008215,0.007970,0.007489,0.006510,0.004571,0.000700");
			}
			rise_power(Power_X1) {
				values ("0.004124,0.004358,0.004846,0.005812,0.007725,0.011576", \
				        "0.004119,0.004356,0.004842,0.005802,0.007718,0.011572", \
				        "0.004084,0.004323,0.004798,0.005767,0.007697,0.011552", \
				        "0.004061,0.004307,0.004783,0.005765,0.007690,0.011549", \
				        "0.004122,0.004356,0.004854,0.005823,0.007757,0.011613", \
				        "0.004506,0.004748,0.005244,0.006201,0.008135,0.011990", \
				        "0.005624,0.005883,0.006345,0.007296,0.009220,0.013077", \
				        "0.008247,0.008467,0.008935,0.009864,0.011772,0.015596");
			}
		}
	}

}


/******************************************************************************************
 Module          	: XNOR2_X2
 Cell Description	: Combinational cell (XNOR2_X2) with drive strength X2
*******************************************************************************************/

cell (XNOR2_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 21771.802500;

	leakage_power () {
		when      	: "!A & !B";
		value      	: 22556.580000;
	}
	leakage_power () {
		when      	: "A & !B";
		value      	: 23461.480000;
	}
	leakage_power () {
		when      	: "!A & B";
		value      	: 28137.970000;
	}
	leakage_power () {
		when      	: "A & B";
		value      	: 12931.180000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001395;
		fall_capacitance	: 0.001371;
		rise_capacitance	: 0.001419;
		fall_capacitance_range		(0.000830, 0.001704);
		rise_capacitance_range		(0.000854, 0.001899);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001586;
		fall_capacitance	: 0.001532;
		rise_capacitance	: 0.001639;
		fall_capacitance_range		(0.001324, 0.001849);
		rise_capacitance_range		(0.001461, 0.001915);
		max_transition		: 0.960000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "!(A ^ B)";

		timing () {

			related_pin	   : "A";
			when	           : "!B";
			sdf_cond	   : "(B == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.017374,0.021631,0.027208,0.038262,0.059870,0.102467", \
				        "0.020423,0.024461,0.030064,0.041121,0.062798,0.105446", \
				        "0.025611,0.030399,0.036241,0.046999,0.068624,0.111249", \
				        "0.030496,0.037074,0.044790,0.058248,0.080672,0.123165", \
				        "0.033313,0.042149,0.052573,0.070854,0.100942,0.148312", \
				        "0.029617,0.041569,0.055732,0.080334,0.120904,0.185101", \
				        "0.009599,0.025921,0.045091,0.078308,0.133019,0.219492", \
				        "-0.045776,-0.024571,0.001243,0.045828,0.119677,0.236521");
			}
			cell_rise(Timing_X2) {
				values ("0.035319,0.045187,0.058402,0.084444,0.136375,0.239958", \
				        "0.038396,0.048227,0.061293,0.087368,0.139296,0.242915", \
				        "0.045437,0.055078,0.067982,0.093812,0.145490,0.249032", \
				        "0.059904,0.070136,0.082689,0.107948,0.158994,0.261982", \
				        "0.080998,0.093999,0.109935,0.138020,0.188117,0.289647", \
				        "0.112934,0.129194,0.149140,0.185046,0.246321,0.348729", \
				        "0.164517,0.185043,0.209819,0.254399,0.331890,0.461282", \
				        "0.252276,0.277733,0.309071,0.364716,0.461087,0.623768");
			}
			fall_transition(Timing_X2) {
				values ("0.012400,0.016199,0.020877,0.030123,0.048262,0.084765", \
				        "0.012354,0.015989,0.020797,0.030086,0.048391,0.084805", \
				        "0.015485,0.018144,0.022003,0.030220,0.048460,0.084857", \
				        "0.022115,0.025309,0.029307,0.035792,0.049942,0.084987", \
				        "0.033397,0.037231,0.042086,0.050102,0.064017,0.090350", \
				        "0.053026,0.057921,0.063939,0.074120,0.091561,0.120579", \
				        "0.087346,0.093987,0.101873,0.115230,0.137565,0.174136", \
				        "0.149140,0.158053,0.168749,0.186997,0.216807,0.264017");
			}
			rise_transition(Timing_X2) {
				values ("0.030262,0.039335,0.051450,0.075096,0.122406,0.217286", \
				        "0.030183,0.039308,0.051338,0.075090,0.122475,0.217276", \
				        "0.030102,0.039032,0.051307,0.075064,0.122470,0.217264", \
				        "0.035256,0.042153,0.052448,0.074984,0.122467,0.217268", \
				        "0.046519,0.054456,0.064337,0.081976,0.123133,0.217276", \
				        "0.064021,0.073589,0.085508,0.106663,0.142841,0.220866", \
				        "0.094809,0.105424,0.119179,0.144637,0.190070,0.265730", \
				        "0.151574,0.163512,0.178887,0.207951,0.261517,0.356001");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B";
			sdf_cond	   : "(B == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.068604,0.073025,0.078678,0.089767,0.111434,0.154217", \
				        "0.072343,0.076764,0.082477,0.093536,0.115208,0.158034", \
				        "0.080351,0.084799,0.090616,0.101737,0.123400,0.166209", \
				        "0.096170,0.100646,0.106412,0.117543,0.139247,0.182003", \
				        "0.120372,0.125117,0.131122,0.142845,0.164790,0.207682", \
				        "0.155365,0.160613,0.167148,0.179292,0.202069,0.245593", \
				        "0.209908,0.216187,0.223876,0.237254,0.261335,0.305741", \
				        "0.298630,0.306674,0.315925,0.332498,0.360190,0.407952");
			}
			cell_rise(Timing_X2) {
				values ("0.069443,0.076349,0.085555,0.104012,0.140304,0.212883", \
				        "0.072389,0.079339,0.088600,0.106848,0.143108,0.215782", \
				        "0.077931,0.084936,0.094166,0.112326,0.148740,0.221505", \
				        "0.085675,0.092683,0.102042,0.120604,0.156843,0.229773", \
				        "0.093565,0.100611,0.109878,0.128538,0.165191,0.238112", \
				        "0.100559,0.107752,0.117140,0.135584,0.172036,0.244493", \
				        "0.099442,0.107254,0.117115,0.135950,0.172807,0.245643", \
				        "0.073781,0.083297,0.094851,0.116249,0.154859,0.229221");
			}
			fall_transition(Timing_X2) {
				values ("0.017558,0.020865,0.025399,0.034448,0.052431,0.088838", \
				        "0.017544,0.020854,0.025397,0.034477,0.052449,0.088873", \
				        "0.017565,0.020862,0.025414,0.034463,0.052423,0.088832", \
				        "0.017723,0.020975,0.025516,0.034546,0.052448,0.088862", \
				        "0.018191,0.021383,0.025835,0.034853,0.052615,0.088927", \
				        "0.019754,0.022637,0.026759,0.035317,0.052598,0.088734", \
				        "0.024156,0.026934,0.030660,0.038465,0.054593,0.088998", \
				        "0.032799,0.035739,0.039564,0.046983,0.061736,0.093613");
			}
			rise_transition(Timing_X2) {
				values ("0.031568,0.038076,0.046828,0.064354,0.099354,0.168974", \
				        "0.031562,0.038077,0.046840,0.064344,0.099348,0.168960", \
				        "0.031615,0.038103,0.046835,0.064333,0.099354,0.168952", \
				        "0.031719,0.038240,0.046965,0.064436,0.099360,0.168982", \
				        "0.031221,0.037505,0.046149,0.063926,0.099040,0.169002", \
				        "0.033213,0.039171,0.047440,0.064302,0.098484,0.168239", \
				        "0.038876,0.044225,0.051715,0.067713,0.100988,0.169291", \
				        "0.051000,0.056787,0.064084,0.078145,0.108403,0.175154");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A";
			sdf_cond	   : "(A == 1'b0)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.022013,0.026320,0.031999,0.043068,0.064765,0.107620", \
				        "0.025051,0.029263,0.034980,0.046056,0.067748,0.110615", \
				        "0.031520,0.035759,0.041223,0.052221,0.073849,0.116583", \
				        "0.039415,0.045188,0.052064,0.064716,0.086331,0.128889", \
				        "0.046300,0.054151,0.063584,0.080403,0.108809,0.154495", \
				        "0.048985,0.059288,0.071885,0.094520,0.132656,0.194344", \
				        "0.039867,0.053843,0.070448,0.100371,0.151082,0.233573", \
				        "0.005171,0.023150,0.045161,0.084284,0.151090,0.260363");
			}
			cell_rise(Timing_X2) {
				values ("0.051425,0.061366,0.074534,0.100567,0.152476,0.256072", \
				        "0.054771,0.064579,0.077749,0.103945,0.155956,0.259648", \
				        "0.060641,0.070654,0.083862,0.109978,0.162120,0.265964", \
				        "0.071453,0.081801,0.095161,0.121322,0.173458,0.277402", \
				        "0.087755,0.100196,0.115676,0.144043,0.196301,0.300133", \
				        "0.115143,0.130003,0.148480,0.182088,0.241895,0.347882", \
				        "0.162173,0.181224,0.203784,0.244409,0.315380,0.438612", \
				        "0.241396,0.265847,0.295050,0.346540,0.434349,0.582244");
			}
			fall_transition(Timing_X2) {
				values ("0.016040,0.019744,0.024284,0.033463,0.051908,0.088701", \
				        "0.015721,0.019531,0.024199,0.033520,0.051882,0.088767", \
				        "0.017569,0.020544,0.024741,0.033466,0.051893,0.088755", \
				        "0.024407,0.027453,0.031085,0.037555,0.052851,0.088771", \
				        "0.035739,0.039506,0.044249,0.052123,0.065742,0.092985", \
				        "0.054382,0.059392,0.065384,0.075850,0.093410,0.122316", \
				        "0.085958,0.092870,0.101105,0.114943,0.138049,0.175586", \
				        "0.140989,0.150908,0.162461,0.181851,0.213043,0.262091");
			}
			rise_transition(Timing_X2) {
				values ("0.030275,0.039257,0.051430,0.075110,0.122452,0.217286", \
				        "0.030275,0.039275,0.051322,0.075081,0.122477,0.217274", \
				        "0.030300,0.039313,0.051396,0.075111,0.122476,0.217247", \
				        "0.032781,0.040652,0.051923,0.075105,0.122476,0.217257", \
				        "0.041546,0.049389,0.059690,0.079192,0.122970,0.217278", \
				        "0.056323,0.064531,0.075526,0.096226,0.135924,0.219987", \
				        "0.081646,0.090431,0.102102,0.124335,0.167416,0.249137", \
				        "0.126227,0.136123,0.149090,0.173627,0.220128,0.308484");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A";
			sdf_cond	   : "(A == 1'b1)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.076607,0.081162,0.086995,0.098130,0.119869,0.162597", \
				        "0.080305,0.084867,0.090727,0.101772,0.123504,0.166315", \
				        "0.088252,0.092813,0.098666,0.109940,0.131606,0.174390", \
				        "0.104686,0.109271,0.115221,0.126439,0.148149,0.190914", \
				        "0.133439,0.138252,0.144306,0.155803,0.177569,0.220397", \
				        "0.174905,0.180269,0.186688,0.198887,0.221296,0.264424", \
				        "0.236957,0.243322,0.251145,0.264311,0.287961,0.331814", \
				        "0.338784,0.346563,0.355490,0.370966,0.397182,0.443029");
			}
			cell_rise(Timing_X2) {
				values ("0.076862,0.083867,0.093106,0.111627,0.148009,0.220792", \
				        "0.079551,0.086551,0.095923,0.114454,0.150914,0.223656", \
				        "0.083926,0.090962,0.100267,0.118662,0.155149,0.227993", \
				        "0.090954,0.098011,0.107403,0.125968,0.162362,0.235203", \
				        "0.098817,0.105950,0.115418,0.134229,0.171034,0.243910", \
				        "0.105754,0.113040,0.122463,0.141174,0.177921,0.250740", \
				        "0.103796,0.111696,0.121630,0.140730,0.178045,0.251327", \
				        "0.075707,0.084967,0.096623,0.117586,0.156567,0.231740");
			}
			fall_transition(Timing_X2) {
				values ("0.014502,0.017605,0.021945,0.030769,0.048527,0.084703", \
				        "0.014487,0.017612,0.021945,0.030798,0.048570,0.084712", \
				        "0.014504,0.017602,0.021962,0.030728,0.048564,0.084779", \
				        "0.014545,0.017649,0.021975,0.030856,0.048573,0.084795", \
				        "0.015671,0.018545,0.022636,0.031260,0.048800,0.084863", \
				        "0.018347,0.020970,0.024811,0.033022,0.049672,0.085094", \
				        "0.022643,0.025150,0.028622,0.036172,0.051996,0.086333", \
				        "0.029877,0.032406,0.035711,0.042669,0.057103,0.089376");
			}
			rise_transition(Timing_X2) {
				values ("0.031540,0.038049,0.046814,0.064367,0.099312,0.168938", \
				        "0.031544,0.038052,0.046822,0.064368,0.099333,0.168964", \
				        "0.031566,0.038072,0.046818,0.064352,0.099277,0.168972", \
				        "0.031701,0.038181,0.046905,0.064434,0.099288,0.168961", \
				        "0.031257,0.037611,0.046346,0.064077,0.099117,0.168958", \
				        "0.032950,0.039016,0.047329,0.064300,0.098610,0.168491", \
				        "0.037488,0.043152,0.050959,0.067267,0.100870,0.169291", \
				        "0.047139,0.053005,0.060489,0.075467,0.107053,0.174730");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B";

			rise_power(Power_X2) {
				values ("0.003580,0.004307,0.005291,0.007238,0.011117,0.018876", \
				        "0.003576,0.004314,0.005285,0.007228,0.011111,0.018870", \
				        "0.003627,0.004347,0.005321,0.007251,0.011121,0.018867", \
				        "0.003838,0.004526,0.005469,0.007371,0.011200,0.018912", \
				        "0.004322,0.004995,0.005904,0.007746,0.011500,0.019115", \
				        "0.005477,0.006098,0.006937,0.008687,0.012307,0.019771", \
				        "0.008162,0.008629,0.009332,0.010903,0.014290,0.021474", \
				        "0.013997,0.014286,0.014780,0.015972,0.018899,0.025547");
			}
			fall_power(Power_X2) {
				values ("0.001607,0.000885,-0.000081,-0.002002,-0.005864,-0.013581", \
				        "0.001606,0.000899,-0.000070,-0.001990,-0.005853,-0.013569", \
				        "0.001613,0.000905,-0.000045,-0.001971,-0.005833,-0.013555", \
				        "0.001771,0.001016,0.000044,-0.001899,-0.005777,-0.013516", \
				        "0.002183,0.001378,0.000346,-0.001665,-0.005612,-0.013413", \
				        "0.003372,0.002471,0.001317,-0.000882,-0.005029,-0.013012", \
				        "0.006133,0.005108,0.003819,0.001347,-0.003231,-0.011702", \
				        "0.012043,0.010915,0.009469,0.006705,0.001556,-0.007848");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B";

			fall_power(Power_X2) {
				values ("0.005243,0.004487,0.003487,0.001500,-0.002428,-0.010211", \
				        "0.005234,0.004495,0.003497,0.001489,-0.002442,-0.010251", \
				        "0.005261,0.004542,0.003520,0.001528,-0.002409,-0.010221", \
				        "0.005348,0.004608,0.003601,0.001642,-0.002283,-0.010084", \
				        "0.005558,0.004841,0.003849,0.001925,-0.002041,-0.009838", \
				        "0.006116,0.005370,0.004413,0.002459,-0.001451,-0.009251", \
				        "0.007372,0.006688,0.005724,0.003755,-0.000136,-0.007913", \
				        "0.010448,0.009664,0.008634,0.006658,0.002734,-0.005045");
			}
			rise_power(Power_X2) {
				values ("0.006420,0.007130,0.008090,0.010004,0.013822,0.021505", \
				        "0.006422,0.007104,0.008090,0.009989,0.013806,0.021496", \
				        "0.006376,0.007084,0.008054,0.009950,0.013799,0.021501", \
				        "0.006421,0.007130,0.008078,0.010016,0.013850,0.021563", \
				        "0.006615,0.007321,0.008273,0.010204,0.014048,0.021769", \
				        "0.007224,0.007927,0.008863,0.010793,0.014632,0.022330", \
				        "0.008772,0.009473,0.010398,0.012271,0.016075,0.023736", \
				        "0.012224,0.012900,0.013801,0.015606,0.019325,0.026866");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A";

			rise_power(Power_X2) {
				values ("0.004052,0.004776,0.005765,0.007719,0.011595,0.019345", \
				        "0.003995,0.004714,0.005720,0.007673,0.011560,0.019331", \
				        "0.003927,0.004670,0.005675,0.007632,0.011543,0.019310", \
				        "0.003885,0.004627,0.005634,0.007587,0.011501,0.019286", \
				        "0.004021,0.004731,0.005698,0.007624,0.011506,0.019266", \
				        "0.004758,0.005399,0.006285,0.008102,0.011860,0.019494", \
				        "0.006915,0.007391,0.008133,0.009724,0.013224,0.020561", \
				        "0.011856,0.012181,0.012693,0.013930,0.016874,0.023617");
			}
			fall_power(Power_X2) {
				values ("0.002369,0.001645,0.000681,-0.001244,-0.005099,-0.012828", \
				        "0.002359,0.001639,0.000676,-0.001252,-0.005111,-0.012831", \
				        "0.002377,0.001648,0.000698,-0.001227,-0.005102,-0.012817", \
				        "0.002470,0.001742,0.000782,-0.001162,-0.005050,-0.012789", \
				        "0.002824,0.002057,0.001056,-0.000943,-0.004885,-0.012692", \
				        "0.003827,0.003004,0.001916,-0.000205,-0.004298,-0.012268", \
				        "0.006215,0.005321,0.004145,0.001840,-0.002543,-0.010898", \
				        "0.011397,0.010432,0.009155,0.006653,0.001893,-0.007097");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A";

			fall_power(Power_X2) {
				values ("0.004941,0.004205,0.003237,0.001291,-0.002593,-0.010341", \
				        "0.004918,0.004213,0.003231,0.001285,-0.002595,-0.010357", \
				        "0.004923,0.004208,0.003249,0.001305,-0.002580,-0.010337", \
				        "0.005013,0.004281,0.003317,0.001377,-0.002508,-0.010278", \
				        "0.005215,0.004489,0.003537,0.001596,-0.002272,-0.010008", \
				        "0.005757,0.005021,0.004059,0.002123,-0.001747,-0.009486", \
				        "0.006985,0.006248,0.005272,0.003339,-0.000537,-0.008277", \
				        "0.009749,0.008935,0.007919,0.005946,0.002059,-0.005716");
			}
			rise_power(Power_X2) {
				values ("0.006082,0.006794,0.007760,0.009675,0.013516,0.021214", \
				        "0.006070,0.006780,0.007740,0.009676,0.013515,0.021207", \
				        "0.006016,0.006733,0.007695,0.009631,0.013481,0.021182", \
				        "0.005973,0.006692,0.007661,0.009593,0.013451,0.021163", \
				        "0.006020,0.006729,0.007720,0.009643,0.013504,0.021221", \
				        "0.006438,0.007131,0.008074,0.010009,0.013870,0.021584", \
				        "0.007611,0.008292,0.009213,0.011137,0.014958,0.022652", \
				        "0.010333,0.011011,0.011937,0.013815,0.017595,0.025230");
			}
		}
	}

}


/******************************************************************************************
 Module          	: XOR2_X1
 Cell Description	: Combinational cell (XOR2_X1) with drive strength X1
*******************************************************************************************/

cell (XOR2_X1) {

	area               	: 1.596000;

	cell_leakage_power 	: 11118.265500;

	leakage_power () {
		when      	: "!A & !B";
		value      	: 7436.641000;
	}
	leakage_power () {
		when      	: "A & !B";
		value      	: 7325.251000;
	}
	leakage_power () {
		when      	: "!A & B";
		value      	: 12751.340000;
	}
	leakage_power () {
		when      	: "A & B";
		value      	: 16959.830000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001059;
		fall_capacitance	: 0.001036;
		rise_capacitance	: 0.001081;
		fall_capacitance_range		(0.000875, 0.001145);
		rise_capacitance_range		(0.000903, 0.001244);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001118;
		fall_capacitance	: 0.001111;
		rise_capacitance	: 0.001125;
		fall_capacitance_range		(0.000959, 0.001202);
		rise_capacitance_range		(0.000934, 0.001348);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A ^ B)";

		timing () {

			related_pin	   : "A";
			when	           : "!B";
			sdf_cond	   : "(B == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.077121,0.080170,0.085964,0.097088,0.118027,0.157079", \
				        "0.080357,0.083406,0.089241,0.100452,0.121315,0.160358", \
				        "0.087497,0.090556,0.096486,0.107743,0.128585,0.167649", \
				        "0.102009,0.105057,0.110943,0.122022,0.142836,0.181854", \
				        "0.124715,0.127897,0.134016,0.145599,0.166841,0.206050", \
				        "0.158101,0.161490,0.167967,0.180023,0.201866,0.241870", \
				        "0.210620,0.214532,0.222174,0.235278,0.258769,0.300333", \
				        "0.296563,0.301415,0.310274,0.326330,0.353764,0.400245");
			}
			cell_rise(Timing_X1) {
				values ("0.101478,0.108075,0.121465,0.148111,0.200887,0.306601", \
				        "0.104732,0.111379,0.124777,0.151141,0.203939,0.309667", \
				        "0.110449,0.117165,0.130524,0.156864,0.209924,0.315723", \
				        "0.117615,0.124410,0.137963,0.164676,0.217443,0.323332", \
				        "0.123683,0.130791,0.144936,0.172248,0.225263,0.331288", \
				        "0.125461,0.132434,0.146580,0.174551,0.229617,0.337271", \
				        "0.119699,0.126877,0.141070,0.168875,0.223665,0.331938", \
				        "0.090939,0.098905,0.114056,0.142924,0.198171,0.306840");
			}
			fall_transition(Timing_X1) {
				values ("0.024758,0.026753,0.030766,0.038660,0.053968,0.085090", \
				        "0.024745,0.026743,0.030739,0.038612,0.053993,0.085097", \
				        "0.024726,0.026723,0.030726,0.038635,0.053974,0.085097", \
				        "0.024863,0.026855,0.030859,0.038741,0.054073,0.085142", \
				        "0.025564,0.027585,0.031690,0.039625,0.054841,0.085574", \
				        "0.027683,0.029581,0.033412,0.041089,0.055914,0.086269", \
				        "0.033507,0.035437,0.039119,0.046421,0.060474,0.089221", \
				        "0.044271,0.046492,0.050644,0.058255,0.072153,0.099778");
			}
			rise_transition(Timing_X1) {
				values ("0.050669,0.056805,0.069208,0.093914,0.142843,0.240508", \
				        "0.050664,0.056809,0.069196,0.093874,0.142894,0.240515", \
				        "0.050655,0.056798,0.069212,0.093916,0.142877,0.240516", \
				        "0.050677,0.056805,0.069212,0.093880,0.142867,0.240509", \
				        "0.049291,0.055802,0.068445,0.093319,0.142894,0.240517", \
				        "0.046299,0.052466,0.065056,0.090284,0.141073,0.239533", \
				        "0.047153,0.052955,0.064827,0.089219,0.138381,0.236915", \
				        "0.054325,0.059481,0.070028,0.092248,0.139439,0.236671");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B";
			sdf_cond	   : "(B == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.020024,0.022770,0.028281,0.039266,0.061024,0.104475", \
				        "0.023182,0.025857,0.031360,0.042340,0.064094,0.107508", \
				        "0.029174,0.032174,0.037732,0.048501,0.070207,0.113499", \
				        "0.035809,0.039855,0.047287,0.060501,0.082818,0.125885", \
				        "0.040928,0.046503,0.056596,0.074495,0.104284,0.151584", \
				        "0.040610,0.048017,0.061684,0.085838,0.126005,0.190122", \
				        "0.024905,0.035298,0.053828,0.086459,0.140604,0.227018", \
				        "-0.024777,-0.011137,0.013826,0.057516,0.130730,0.247537");
			}
			cell_rise(Timing_X1) {
				values ("0.044311,0.051201,0.064922,0.091742,0.145029,0.251242", \
				        "0.047313,0.054172,0.067788,0.094652,0.147978,0.254250", \
				        "0.053984,0.060757,0.074339,0.101005,0.154166,0.260318", \
				        "0.069132,0.075665,0.088539,0.114822,0.167511,0.273230", \
				        "0.093330,0.101637,0.117218,0.144770,0.196216,0.300650", \
				        "0.128729,0.138975,0.158657,0.194254,0.255245,0.359205", \
				        "0.183818,0.197319,0.221596,0.266035,0.343557,0.473410", \
				        "0.276319,0.292759,0.323644,0.378789,0.475275,0.639275");
			}
			fall_transition(Timing_X1) {
				values ("0.014318,0.016898,0.021693,0.031076,0.049864,0.087281", \
				        "0.014292,0.016700,0.021556,0.031092,0.049870,0.087294", \
				        "0.017070,0.018783,0.022814,0.031131,0.049902,0.087291", \
				        "0.024108,0.026167,0.030206,0.036592,0.051225,0.087273", \
				        "0.036069,0.038554,0.043251,0.051306,0.065226,0.092132", \
				        "0.056780,0.059861,0.065591,0.075622,0.093091,0.122296", \
				        "0.092815,0.096946,0.104483,0.117691,0.139796,0.176617", \
				        "0.156914,0.162450,0.172754,0.190640,0.220140,0.267376");
			}
			rise_transition(Timing_X1) {
				values ("0.041933,0.048158,0.060392,0.084281,0.132739,0.229827", \
				        "0.041805,0.048041,0.060438,0.084419,0.132797,0.229849", \
				        "0.040917,0.047502,0.060229,0.084445,0.132814,0.229863", \
				        "0.043414,0.048749,0.060166,0.084154,0.132839,0.229866", \
				        "0.055416,0.060460,0.070067,0.089147,0.132971,0.229911", \
				        "0.074468,0.080727,0.092520,0.113529,0.150326,0.232362", \
				        "0.106429,0.113484,0.127294,0.152806,0.198312,0.274480", \
				        "0.164405,0.172120,0.187776,0.217064,0.271320,0.366764");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A";
			sdf_cond	   : "(A == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.098348,0.101379,0.107117,0.118122,0.138982,0.177929", \
				        "0.102048,0.105077,0.110730,0.121532,0.142363,0.181324", \
				        "0.108363,0.111392,0.117193,0.128142,0.148841,0.187793", \
				        "0.119313,0.122362,0.128174,0.139375,0.160104,0.199100", \
				        "0.137073,0.140256,0.146383,0.157867,0.178877,0.218076", \
				        "0.164273,0.167743,0.174276,0.186592,0.208712,0.249011", \
				        "0.211504,0.215419,0.223034,0.236569,0.260575,0.302978", \
				        "0.289251,0.293909,0.302905,0.318535,0.346306,0.393757");
			}
			cell_rise(Timing_X1) {
				values ("0.092439,0.099264,0.112644,0.139585,0.192586,0.298452", \
				        "0.095778,0.102595,0.116068,0.143028,0.196033,0.301920", \
				        "0.102420,0.109263,0.122625,0.149051,0.202006,0.307957", \
				        "0.112659,0.119515,0.132959,0.159645,0.212453,0.318475", \
				        "0.124293,0.131043,0.144456,0.171300,0.224112,0.330233", \
				        "0.135189,0.142023,0.155504,0.182334,0.235381,0.341230", \
				        "0.139845,0.146862,0.160492,0.187589,0.241042,0.347155", \
				        "0.127329,0.134858,0.149308,0.176937,0.230911,0.337640");
			}
			fall_transition(Timing_X1) {
				values ("0.024556,0.026567,0.030577,0.038595,0.053893,0.085069", \
				        "0.024557,0.026564,0.030578,0.038571,0.053896,0.085065", \
				        "0.024563,0.026570,0.030593,0.038515,0.053880,0.085051", \
				        "0.024661,0.026660,0.030673,0.038636,0.053932,0.085090", \
				        "0.025728,0.027763,0.031748,0.039502,0.054549,0.085440", \
				        "0.027639,0.029672,0.033676,0.041504,0.056408,0.086570", \
				        "0.032558,0.034690,0.038790,0.046588,0.061368,0.090274", \
				        "0.041076,0.043452,0.047928,0.056327,0.071720,0.100858");
			}
			rise_transition(Timing_X1) {
				values ("0.041507,0.047604,0.059730,0.084085,0.132775,0.229818", \
				        "0.041505,0.047612,0.059729,0.084072,0.132774,0.229827", \
				        "0.041502,0.047602,0.059724,0.084109,0.132756,0.229825", \
				        "0.041508,0.047612,0.059722,0.084069,0.132781,0.229842", \
				        "0.041128,0.047236,0.059426,0.083959,0.132755,0.229820", \
				        "0.041773,0.047700,0.059616,0.083749,0.132103,0.229550", \
				        "0.043520,0.049111,0.060708,0.084534,0.132777,0.229404", \
				        "0.049475,0.054415,0.064835,0.087114,0.134276,0.230766");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A";
			sdf_cond	   : "(A == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X1) {
				values ("0.026973,0.029696,0.035251,0.046143,0.067907,0.111417", \
				        "0.029706,0.032520,0.037990,0.049002,0.070797,0.114279", \
				        "0.034407,0.037390,0.043037,0.054011,0.075843,0.119428", \
				        "0.040882,0.044414,0.051061,0.063437,0.085918,0.129562", \
				        "0.047265,0.052040,0.060720,0.076157,0.102710,0.149133", \
				        "0.048800,0.055543,0.067765,0.088996,0.124079,0.180538", \
				        "0.036332,0.045826,0.063138,0.093125,0.142000,0.218112", \
				        "-0.008998,0.004594,0.028638,0.070544,0.139054,0.245455");
			}
			cell_rise(Timing_X1) {
				values ("0.060423,0.067256,0.080837,0.107769,0.161234,0.267637", \
				        "0.063553,0.070399,0.083877,0.110808,0.164232,0.270643", \
				        "0.070439,0.077140,0.090607,0.117347,0.170626,0.276951", \
				        "0.085114,0.091819,0.105010,0.131447,0.184285,0.290152", \
				        "0.114380,0.121711,0.135705,0.161396,0.213253,0.317876", \
				        "0.156723,0.165940,0.183875,0.216668,0.274201,0.376746", \
				        "0.221117,0.233324,0.255408,0.296804,0.370155,0.494805", \
				        "0.328719,0.343335,0.371268,0.422249,0.513093,0.670650");
			}
			fall_transition(Timing_X1) {
				values ("0.014297,0.016745,0.021586,0.030976,0.049874,0.087270", \
				        "0.014315,0.016710,0.021672,0.031070,0.049843,0.087304", \
				        "0.015218,0.017496,0.021911,0.031031,0.049830,0.087220", \
				        "0.019048,0.021192,0.025605,0.033459,0.050508,0.087311", \
				        "0.027575,0.029673,0.033900,0.041530,0.057020,0.089493", \
				        "0.043336,0.045799,0.050461,0.058716,0.073972,0.104265", \
				        "0.070998,0.073861,0.079657,0.089893,0.107745,0.139058", \
				        "0.116694,0.121104,0.128913,0.143065,0.166682,0.205028");
			}
			rise_transition(Timing_X1) {
				values ("0.050605,0.056830,0.069421,0.094032,0.142876,0.240506", \
				        "0.050581,0.056835,0.069369,0.094033,0.142897,0.240515", \
				        "0.050452,0.056750,0.069421,0.094016,0.142889,0.240517", \
				        "0.050371,0.056352,0.068875,0.093893,0.142834,0.240499", \
				        "0.060068,0.064951,0.074930,0.096053,0.142627,0.240502", \
				        "0.079310,0.085783,0.097460,0.118329,0.155951,0.241610", \
				        "0.108024,0.115853,0.130765,0.157393,0.203186,0.279453", \
				        "0.154512,0.163847,0.182137,0.215045,0.273099,0.370874");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B";

			fall_power(Power_X1) {
				values ("0.004397,0.004140,0.003654,0.002664,0.000704,-0.003198", \
				        "0.004406,0.004142,0.003654,0.002676,0.000707,-0.003192", \
				        "0.004428,0.004192,0.003691,0.002716,0.000746,-0.003162", \
				        "0.004526,0.004275,0.003787,0.002805,0.000853,-0.003039", \
				        "0.004757,0.004513,0.004008,0.003036,0.001090,-0.002803", \
				        "0.005276,0.005038,0.004542,0.003566,0.001620,-0.002283", \
				        "0.006508,0.006257,0.005766,0.004781,0.002822,-0.001072", \
				        "0.009259,0.009009,0.008497,0.007501,0.005512,0.001601");
			}
			rise_power(Power_X1) {
				values ("0.003418,0.003655,0.004118,0.005079,0.006987,0.010837", \
				        "0.003413,0.003653,0.004117,0.005069,0.006982,0.010836", \
				        "0.003407,0.003649,0.004132,0.005097,0.007019,0.010872", \
				        "0.003457,0.003692,0.004171,0.005133,0.007059,0.010917", \
				        "0.003626,0.003865,0.004343,0.005323,0.007251,0.011116", \
				        "0.004147,0.004373,0.004874,0.005842,0.007789,0.011663", \
				        "0.005363,0.005598,0.006099,0.007079,0.009023,0.012907", \
				        "0.008058,0.008301,0.008787,0.009757,0.011704,0.015590");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B";

			rise_power(Power_X1) {
				values ("0.002774,0.003009,0.003490,0.004466,0.006419,0.010302", \
				        "0.002768,0.003002,0.003493,0.004472,0.006416,0.010306", \
				        "0.002789,0.003032,0.003512,0.004483,0.006421,0.010311", \
				        "0.002876,0.003113,0.003586,0.004540,0.006464,0.010331", \
				        "0.003102,0.003326,0.003787,0.004716,0.006600,0.010427", \
				        "0.003632,0.003843,0.004274,0.005163,0.006994,0.010738", \
				        "0.004850,0.005023,0.005401,0.006206,0.007936,0.011561", \
				        "0.007596,0.007719,0.007982,0.008618,0.010126,0.013507");
			}
			fall_power(Power_X1) {
				values ("0.000506,0.000269,-0.000224,-0.001182,-0.003110,-0.006977", \
				        "0.000515,0.000280,-0.000210,-0.001175,-0.003103,-0.006966", \
				        "0.000532,0.000290,-0.000191,-0.001151,-0.003091,-0.006865", \
				        "0.000597,0.000351,-0.000135,-0.001116,-0.003057,-0.006935", \
				        "0.000809,0.000545,0.000023,-0.000995,-0.002975,-0.006884", \
				        "0.001375,0.001071,0.000499,-0.000601,-0.002684,-0.006677", \
				        "0.002685,0.002353,0.001712,0.000484,-0.001807,-0.006042", \
				        "0.005522,0.005151,0.004434,0.003072,0.000513,-0.004177");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A";

			fall_power(Power_X1) {
				values ("0.004674,0.004430,0.003947,0.002955,0.000994,-0.002912", \
				        "0.004669,0.004428,0.003927,0.002936,0.000964,-0.002940", \
				        "0.004658,0.004399,0.003895,0.002913,0.000942,-0.002969", \
				        "0.004599,0.004369,0.003869,0.002881,0.000919,-0.002985", \
				        "0.004608,0.004353,0.003863,0.002887,0.000937,-0.002955", \
				        "0.004856,0.004606,0.004122,0.003150,0.001201,-0.002692", \
				        "0.005781,0.005519,0.005034,0.004058,0.002113,-0.001778", \
				        "0.008043,0.007796,0.007288,0.006283,0.004331,0.000426");
			}
			rise_power(Power_X1) {
				values ("0.003494,0.003741,0.004220,0.005184,0.007125,0.011003", \
				        "0.003481,0.003726,0.004212,0.005178,0.007121,0.010994", \
				        "0.003479,0.003719,0.004207,0.005183,0.007122,0.011002", \
				        "0.003507,0.003755,0.004236,0.005215,0.007163,0.011042", \
				        "0.003638,0.003890,0.004369,0.005355,0.007303,0.011175", \
				        "0.004063,0.004297,0.004802,0.005779,0.007730,0.011614", \
				        "0.005115,0.005359,0.005851,0.006826,0.008777,0.012674", \
				        "0.007460,0.007703,0.008188,0.009149,0.011103,0.014990");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A";

			rise_power(Power_X1) {
				values ("0.003114,0.003352,0.003838,0.004807,0.006746,0.010626", \
				        "0.003106,0.003350,0.003839,0.004804,0.006743,0.010618", \
				        "0.003136,0.003371,0.003852,0.004817,0.006751,0.010621", \
				        "0.003205,0.003447,0.003923,0.004875,0.006780,0.010652", \
				        "0.003436,0.003663,0.004124,0.005051,0.007053,0.010755", \
				        "0.003946,0.004165,0.004609,0.005510,0.007270,0.011077", \
				        "0.005096,0.005314,0.005717,0.006564,0.008620,0.011921", \
				        "0.007597,0.007768,0.008147,0.008918,0.010499,0.013949");
			}
			fall_power(Power_X1) {
				values ("0.000327,0.000073,-0.000418,-0.001372,-0.003306,-0.007168", \
				        "0.000307,0.000060,-0.000425,-0.001387,-0.003313,-0.007178", \
				        "0.000284,0.000046,-0.000437,-0.001398,-0.003325,-0.007191", \
				        "0.000290,0.000052,-0.000426,-0.001389,-0.003324,-0.007192", \
				        "0.000412,0.000148,-0.000357,-0.001335,-0.003279,-0.007149", \
				        "0.000779,0.000503,-0.000045,-0.001095,-0.003116,-0.007047", \
				        "0.001832,0.001511,0.000898,-0.000270,-0.002479,-0.006622", \
				        "0.004229,0.003869,0.003184,0.001871,-0.000598,-0.005161");
			}
		}
	}

}


/******************************************************************************************
 Module          	: XOR2_X2
 Cell Description	: Combinational cell (XOR2_X2) with drive strength X2
*******************************************************************************************/

cell (XOR2_X2) {

	area               	: 1.596000;

	cell_leakage_power 	: 18502.467500;

	leakage_power () {
		when      	: "!A & !B";
		value      	: 11251.090000;
	}
	leakage_power () {
		when      	: "A & !B";
		value      	: 10888.180000;
	}
	leakage_power () {
		when      	: "!A & B";
		value      	: 22963.480000;
	}
	leakage_power () {
		when      	: "A & B";
		value      	: 28907.120000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.001437;
		fall_capacitance	: 0.001419;
		rise_capacitance	: 0.001455;
		fall_capacitance_range		(0.000902, 0.001736);
		rise_capacitance_range		(0.000872, 0.001892);
		max_transition		: 0.960000;
	}

	pin (B) {

		direction		: input;
		capacitance		: 0.001576;
		fall_capacitance	: 0.001580;
		rise_capacitance	: 0.001572;
		fall_capacitance_range		(0.001245, 0.001798);
		rise_capacitance_range		(0.001104, 0.002028);
		max_transition		: 0.960000;
	}

	pin (Z) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.960000;
		function		: "(A ^ B)";

		timing () {

			related_pin	   : "A";
			when	           : "!B";
			sdf_cond	   : "(B == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.077890,0.082703,0.088672,0.099965,0.120632,0.158862", \
				        "0.081061,0.085848,0.091904,0.103194,0.123919,0.162161", \
				        "0.088044,0.092867,0.098948,0.110383,0.131084,0.169339", \
				        "0.102738,0.107603,0.113596,0.124916,0.145595,0.183755", \
				        "0.126955,0.132032,0.138364,0.150109,0.171171,0.209501", \
				        "0.161938,0.167500,0.174463,0.186729,0.208661,0.247877", \
				        "0.215977,0.222412,0.230431,0.244155,0.267827,0.308799", \
				        "0.303247,0.311174,0.320314,0.337147,0.365081,0.411129");
			}
			cell_rise(Timing_X2) {
				values ("0.085731,0.095394,0.108377,0.134097,0.185438,0.288366", \
				        "0.088944,0.098674,0.111716,0.137252,0.188730,0.291756", \
				        "0.094727,0.104565,0.117587,0.143266,0.194743,0.297887", \
				        "0.102670,0.112689,0.125883,0.151698,0.203326,0.306624", \
				        "0.110088,0.120427,0.134054,0.160610,0.212398,0.315952", \
				        "0.115030,0.125339,0.139040,0.166002,0.219029,0.323649", \
				        "0.112207,0.123195,0.137205,0.164245,0.217376,0.322468", \
				        "0.085161,0.098065,0.113637,0.142724,0.196655,0.302211");
			}
			fall_transition(Timing_X2) {
				values ("0.021455,0.024481,0.028458,0.036076,0.050650,0.080218", \
				        "0.021434,0.024475,0.028445,0.036055,0.050672,0.080233", \
				        "0.021434,0.024465,0.028409,0.036060,0.050693,0.080178", \
				        "0.021561,0.024563,0.028520,0.036151,0.050706,0.080230", \
				        "0.022462,0.025495,0.029487,0.037100,0.051514,0.080736", \
				        "0.025170,0.028095,0.031820,0.039085,0.053203,0.081814", \
				        "0.031293,0.034316,0.038022,0.045032,0.058293,0.085219", \
				        "0.041817,0.045429,0.049721,0.057222,0.070622,0.096283");
			}
			rise_transition(Timing_X2) {
				values ("0.036870,0.045984,0.058060,0.082109,0.129960,0.225202", \
				        "0.036870,0.045994,0.058060,0.082158,0.129925,0.225213", \
				        "0.036884,0.045989,0.058060,0.082114,0.129941,0.225234", \
				        "0.036909,0.046007,0.058068,0.082144,0.129938,0.225205", \
				        "0.034830,0.044303,0.057022,0.081399,0.129951,0.225219", \
				        "0.033965,0.042630,0.054582,0.078828,0.127681,0.224112", \
				        "0.037094,0.044811,0.055760,0.078814,0.126238,0.221883", \
				        "0.045834,0.053186,0.063141,0.083723,0.128219,0.222419");
			}
		}

		timing () {

			related_pin	   : "A";
			when	           : "B";
			sdf_cond	   : "(B == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.015680,0.019795,0.025178,0.035866,0.057158,0.099576", \
				        "0.018912,0.022815,0.028230,0.038928,0.060223,0.102625", \
				        "0.023583,0.028593,0.034494,0.045186,0.066348,0.108630", \
				        "0.028015,0.034733,0.042611,0.056393,0.078930,0.120965", \
				        "0.030151,0.039311,0.049951,0.068543,0.098972,0.146657", \
				        "0.025729,0.038033,0.052515,0.077563,0.118537,0.183134", \
				        "0.004648,0.021538,0.041089,0.074932,0.130172,0.217164", \
				        "-0.051941,-0.029991,-0.003742,0.041491,0.116124,0.233703");
			}
			cell_rise(Timing_X2) {
				values ("0.033007,0.043238,0.056671,0.082952,0.135078,0.238837", \
				        "0.035993,0.046172,0.059523,0.085913,0.138001,0.241801", \
				        "0.043068,0.052875,0.066085,0.092226,0.144135,0.247883", \
				        "0.057305,0.067877,0.080605,0.106077,0.157475,0.260666", \
				        "0.077745,0.091170,0.107434,0.135884,0.186337,0.288153", \
				        "0.109091,0.125585,0.145969,0.182374,0.244174,0.346963", \
				        "0.159325,0.180553,0.205728,0.250958,0.329088,0.459033", \
				        "0.245611,0.271814,0.303805,0.360188,0.457376,0.620837");
			}
			fall_transition(Timing_X2) {
				values ("0.010156,0.013757,0.018355,0.027499,0.045972,0.082713", \
				        "0.010639,0.013894,0.018272,0.027534,0.045950,0.082726", \
				        "0.014141,0.016921,0.020355,0.027967,0.045917,0.082666", \
				        "0.020561,0.023737,0.027831,0.034426,0.047897,0.082743", \
				        "0.031652,0.035583,0.040482,0.048622,0.062544,0.088632", \
				        "0.050988,0.055979,0.062099,0.072384,0.090009,0.119193", \
				        "0.084867,0.091686,0.099749,0.113371,0.135802,0.172620", \
				        "0.146093,0.155250,0.166079,0.184725,0.214850,0.262319");
			}
			rise_transition(Timing_X2) {
				values ("0.030319,0.039452,0.051397,0.074742,0.122087,0.216881", \
				        "0.029963,0.039313,0.051396,0.074867,0.122103,0.216886", \
				        "0.029618,0.038685,0.051270,0.074945,0.122120,0.216892", \
				        "0.034679,0.041694,0.051980,0.074699,0.122224,0.216893", \
				        "0.045575,0.053610,0.063717,0.081549,0.122906,0.216960", \
				        "0.062639,0.072347,0.084469,0.105892,0.142492,0.220583", \
				        "0.092987,0.103776,0.117720,0.143408,0.189179,0.265333", \
				        "0.149382,0.161260,0.176969,0.206261,0.260213,0.355091");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "!A";
			sdf_cond	   : "(A == 1'b0)";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X2) {
				values ("0.098992,0.103792,0.109771,0.121007,0.141672,0.179761", \
				        "0.102675,0.107485,0.113412,0.124481,0.145105,0.183213", \
				        "0.109016,0.113835,0.119879,0.131000,0.151560,0.189669", \
				        "0.120081,0.124919,0.130993,0.142396,0.163075,0.201248", \
				        "0.138592,0.143679,0.150079,0.161639,0.182586,0.220896", \
				        "0.166838,0.172400,0.179358,0.191845,0.214121,0.253630", \
				        "0.215156,0.221453,0.229571,0.243246,0.267450,0.309229", \
				        "0.294859,0.302407,0.311313,0.327652,0.355249,0.401985");
			}
			cell_rise(Timing_X2) {
				values ("0.079977,0.089980,0.103121,0.129173,0.180912,0.284316", \
				        "0.083282,0.093243,0.106495,0.132578,0.184360,0.287725", \
				        "0.089986,0.100000,0.113145,0.138914,0.190649,0.294138", \
				        "0.100916,0.110937,0.124148,0.150036,0.201769,0.305328", \
				        "0.113886,0.123818,0.136981,0.162951,0.214651,0.318329", \
				        "0.126398,0.136542,0.149725,0.176019,0.227636,0.331051", \
				        "0.132889,0.143778,0.157378,0.183823,0.236005,0.339618", \
				        "0.122066,0.134406,0.149164,0.177044,0.229729,0.333713");
			}
			fall_transition(Timing_X2) {
				values ("0.021230,0.024272,0.028263,0.035947,0.050591,0.080156", \
				        "0.021232,0.024275,0.028250,0.035965,0.050588,0.080148", \
				        "0.021244,0.024277,0.028266,0.035962,0.050600,0.080177", \
				        "0.021336,0.024369,0.028312,0.036001,0.050623,0.080182", \
				        "0.022405,0.025471,0.029374,0.036907,0.051252,0.080566", \
				        "0.024379,0.027488,0.031495,0.039111,0.053372,0.081976", \
				        "0.029213,0.032519,0.036567,0.044266,0.058428,0.085949", \
				        "0.037401,0.041112,0.045657,0.053883,0.068802,0.096530");
			}
			rise_transition(Timing_X2) {
				values ("0.030093,0.038897,0.050731,0.074521,0.122075,0.216873", \
				        "0.030094,0.038878,0.050732,0.074504,0.122075,0.216853", \
				        "0.030082,0.038905,0.050746,0.074501,0.122074,0.216882", \
				        "0.030124,0.038888,0.050734,0.074502,0.122037,0.216888", \
				        "0.030045,0.038631,0.050439,0.074292,0.122079,0.216894", \
				        "0.031185,0.039467,0.050898,0.074296,0.121474,0.216593", \
				        "0.034589,0.042027,0.052715,0.075341,0.122167,0.216511", \
				        "0.042176,0.049112,0.058713,0.079141,0.123957,0.217815");
			}
		}

		timing () {

			related_pin	   : "B";
			when	           : "A";
			sdf_cond	   : "(A == 1'b1)";
			timing_sense	   : negative_unate;

			cell_fall(Timing_X2) {
				values ("0.020806,0.024904,0.030314,0.040995,0.062347,0.104837", \
				        "0.023353,0.027508,0.032891,0.043649,0.064982,0.107555", \
				        "0.027362,0.031996,0.037728,0.048473,0.069919,0.112577", \
				        "0.032152,0.037957,0.044873,0.057373,0.079726,0.122591", \
				        "0.035573,0.043546,0.052825,0.068795,0.095733,0.141828", \
				        "0.032679,0.043999,0.057080,0.079304,0.115226,0.171850", \
				        "0.014454,0.030257,0.048671,0.079969,0.130023,0.206788", \
				        "-0.039096,-0.016785,0.008871,0.052469,0.122574,0.229855");
			}
			cell_rise(Timing_X2) {
				values ("0.045431,0.055418,0.068708,0.094966,0.147137,0.250978", \
				        "0.048551,0.058523,0.071755,0.097977,0.150172,0.253991", \
				        "0.055560,0.065407,0.078524,0.104582,0.156537,0.260302", \
				        "0.071007,0.080416,0.093170,0.118776,0.170210,0.273434", \
				        "0.096182,0.108156,0.122844,0.149215,0.199428,0.301272", \
				        "0.133446,0.148330,0.166978,0.200866,0.259521,0.360479", \
				        "0.192181,0.211368,0.234315,0.276681,0.350967,0.476368", \
				        "0.293292,0.316588,0.345592,0.397681,0.489438,0.647053");
			}
			fall_transition(Timing_X2) {
				values ("0.010165,0.013788,0.018366,0.027499,0.045929,0.082677", \
				        "0.010255,0.013686,0.018326,0.027548,0.045909,0.082686", \
				        "0.011813,0.014943,0.019033,0.027694,0.045962,0.082711", \
				        "0.015866,0.018912,0.022870,0.030587,0.046845,0.082735", \
				        "0.024142,0.027317,0.031339,0.038967,0.053959,0.085492", \
				        "0.038990,0.042825,0.047644,0.056028,0.071090,0.100705", \
				        "0.064376,0.069366,0.075615,0.086314,0.104378,0.135437", \
				        "0.106775,0.113912,0.122481,0.137482,0.161824,0.200510");
			}
			rise_transition(Timing_X2) {
				values ("0.036758,0.046001,0.058300,0.082239,0.129958,0.225226", \
				        "0.036706,0.045977,0.058292,0.082207,0.129961,0.225216", \
				        "0.036270,0.045817,0.058240,0.082287,0.129906,0.225236", \
				        "0.038453,0.046600,0.058137,0.082172,0.129926,0.225238", \
				        "0.049400,0.057284,0.066918,0.086347,0.130003,0.225230", \
				        "0.065918,0.076024,0.088215,0.109719,0.146480,0.227535", \
				        "0.091264,0.103661,0.119051,0.146265,0.192794,0.268861", \
				        "0.134834,0.149890,0.168477,0.201748,0.259906,0.357582");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "!B";

			fall_power(Power_X2) {
				values ("0.006524,0.005784,0.004782,0.002794,-0.001138,-0.008955", \
				        "0.006549,0.005777,0.004788,0.002802,-0.001142,-0.008960", \
				        "0.006569,0.005803,0.004807,0.002833,-0.001103,-0.008944", \
				        "0.006630,0.005874,0.004889,0.002932,-0.000995,-0.008800", \
				        "0.006868,0.006108,0.005118,0.003156,-0.000751,-0.008555", \
				        "0.007402,0.006642,0.005665,0.003685,-0.000211,-0.008032", \
				        "0.008680,0.007903,0.006918,0.004929,0.000998,-0.006825", \
				        "0.011632,0.010851,0.009805,0.007767,0.003771,-0.004106");
			}
			rise_power(Power_X2) {
				values ("0.005219,0.005918,0.006856,0.008756,0.012560,0.020245", \
				        "0.005197,0.005901,0.006849,0.008748,0.012568,0.020244", \
				        "0.005159,0.005869,0.006835,0.008745,0.012581,0.020278", \
				        "0.005152,0.005879,0.006841,0.008759,0.012612,0.020322", \
				        "0.005280,0.005998,0.006984,0.008915,0.012779,0.020503", \
				        "0.005740,0.006442,0.007446,0.009395,0.013280,0.021030", \
				        "0.006927,0.007646,0.008640,0.010579,0.014469,0.022246", \
				        "0.009692,0.010435,0.011352,0.013277,0.017142,0.024901");
			}
		}

		internal_power () {

			related_pin	         : "A";
			when	                 : "B";

			rise_power(Power_X2) {
				values ("0.003814,0.004562,0.005528,0.007479,0.011377,0.019139", \
				        "0.003800,0.004550,0.005523,0.007478,0.011371,0.019139", \
				        "0.003878,0.004603,0.005570,0.007507,0.011379,0.019144", \
				        "0.004078,0.004777,0.005722,0.007620,0.011464,0.019188", \
				        "0.004569,0.005245,0.006154,0.007994,0.011750,0.019391", \
				        "0.005751,0.006347,0.007190,0.008943,0.012577,0.020042", \
				        "0.008420,0.008897,0.009587,0.011150,0.014566,0.021750", \
				        "0.014243,0.014559,0.015050,0.016239,0.019148,0.025828");
			}
			fall_power(Power_X2) {
				values ("0.000924,0.000202,-0.000763,-0.002685,-0.006548,-0.014282", \
				        "0.000934,0.000218,-0.000742,-0.002675,-0.006535,-0.014262", \
				        "0.000990,0.000250,-0.000702,-0.002643,-0.006513,-0.014238", \
				        "0.001151,0.000390,-0.000588,-0.002554,-0.006446,-0.014201", \
				        "0.001663,0.000822,-0.000239,-0.002291,-0.006264,-0.014084", \
				        "0.002912,0.001986,0.000796,-0.001442,-0.005660,-0.013663", \
				        "0.005722,0.004695,0.003376,0.000873,-0.003769,-0.012314", \
				        "0.011700,0.010526,0.009076,0.006288,0.001096,-0.008376");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "!A";

			fall_power(Power_X2) {
				values ("0.006835,0.006077,0.005088,0.003118,-0.000823,-0.008650", \
				        "0.006845,0.006079,0.005080,0.003100,-0.000845,-0.008676", \
				        "0.006806,0.006073,0.005062,0.003076,-0.000874,-0.008702", \
				        "0.006737,0.005999,0.005006,0.003040,-0.000899,-0.008733", \
				        "0.006695,0.005947,0.004971,0.003014,-0.000886,-0.008686", \
				        "0.006932,0.006187,0.005196,0.003259,-0.000641,-0.008443", \
				        "0.007887,0.007102,0.006129,0.004172,0.000254,-0.007549", \
				        "0.010257,0.009493,0.008459,0.006449,0.002499,-0.005337");
			}
			rise_power(Power_X2) {
				values ("0.004758,0.005481,0.006467,0.008410,0.012276,0.020016", \
				        "0.004762,0.005475,0.006454,0.008399,0.012264,0.020012", \
				        "0.004751,0.005479,0.006454,0.008390,0.012268,0.020013", \
				        "0.004758,0.005480,0.006467,0.008408,0.012291,0.020044", \
				        "0.004877,0.005606,0.006578,0.008528,0.012410,0.020185", \
				        "0.005260,0.006002,0.006996,0.008935,0.012832,0.020595", \
				        "0.006294,0.007048,0.008004,0.009954,0.013855,0.021627", \
				        "0.008696,0.009405,0.010373,0.012304,0.016178,0.023939");
			}
		}

		internal_power () {

			related_pin	         : "B";
			when	                 : "A";

			rise_power(Power_X2) {
				values ("0.004668,0.005389,0.006357,0.008311,0.012192,0.019956", \
				        "0.004664,0.005391,0.006360,0.008306,0.012188,0.019945", \
				        "0.004720,0.005448,0.006395,0.008335,0.012203,0.019950", \
				        "0.004913,0.005615,0.006558,0.008462,0.012288,0.019999", \
				        "0.005407,0.006080,0.006999,0.008842,0.012603,0.020228", \
				        "0.006536,0.007172,0.008036,0.009816,0.013452,0.020913", \
				        "0.008998,0.009590,0.010384,0.012042,0.015502,0.022680", \
				        "0.014254,0.014763,0.015485,0.016965,0.020142,0.026924");
			}
			fall_power(Power_X2) {
				values ("0.000721,-0.000002,-0.000967,-0.002896,-0.006757,-0.014479", \
				        "0.000692,-0.000018,-0.000982,-0.002907,-0.006762,-0.014497", \
				        "0.000674,-0.000048,-0.001007,-0.002926,-0.006781,-0.014523", \
				        "0.000700,-0.000013,-0.000975,-0.002906,-0.006761,-0.014501", \
				        "0.001009,0.000231,-0.000787,-0.002764,-0.006661,-0.014418", \
				        "0.001965,0.001072,-0.000047,-0.002196,-0.006289,-0.014183", \
				        "0.004287,0.003292,0.002027,-0.000383,-0.004877,-0.013239", \
				        "0.009409,0.008295,0.006883,0.004177,-0.000860,-0.010097");
			}
		}
	}

}

}
/*
* End of file
*/
