//
// This config is for LR experiments
//

params:
{
    //techname = "IWLS";
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000019_s27.def";
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_007161_tv80.def"; target_clock_cycle = 3.0;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_019107_b20.def"; target_clock_cycle = 4.0;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000086_b01.def";

    techname = "SCL";
    //def = "c:/Kornyakov/VLSI/ITLabTrunk/itlPlace/bin/SCL/C1355.def";

    objective = "LR";
    //target_clock_cycle = 0.0;
};

SCL:
{
    benchmark:
    {
        def = "@params.def";
        lef = "SCL/v00_nhm_nominal_1266_v110.lef";
        lib = "SCL/v00_nhm_nominal_1266_v110.lib";
        useTechMapping = false;
        exportDEFFileName = ""; //if empty will be placed to the ExportDEF folder
        target_clock_cycle = "@params.target_clock_cycle";
        CanDoTiming = true;
    };
};

plotter:
{
    enabled = true;
    windowHeight = 1100;
    //saveImages = true;
    saveMilestoneImages = true;
    embeedMilestones = true;
    //createVideo = true;
};

DesignFlow:
{
    SkipSpecialNets = true;
    SkipBrokenNets = true;

    //RandomPlacement = true;
    LR          = true;
    Legalization = true;
};

CriticalPaths:
{
    countLogReportCriticalPaths = 0;  //set to -1 if you want to print all the critical paths
    countPlotCriticalPaths = 0;       //set to -1 if you want to plot all the critical paths
    plotWait = 1;
    thicknessLines = 2;
};

LR:
{
    Clustering:
    {
        useClusteringInformationFromFile  = false;
        desiredFinalNumberOfClusters      = 1000000;
    };

    GlobalPlacement:
    {
        placeToTheCenter = false;

        useQAClass = true;
        QAcriteria = "LTNS";
        earlyExit = true;
        nTolerantIterations = 3;
        nConvergedIterations = 3;
        improvementTreshold = 0.00;

        useLR = true;
        useQuadraticSpreading = true;
        useUnidirectSpreading = "@~useQuadraticSpreading";  //used only with useQuadraticSpreading = true 
        useBorderBounds    = true;

        plotSolverState   = true;
        gradientScaling = 0.0e+10;
        saveTAOmilestones = false;

        LagrangianRelaxation:
        {
            muLR     = 0.5;
            alphaTWL = 0.0e-8; //07 for weak wirelenght, 04 for 2% degradation
            alphaTWLMultiplier = 1.0;
            theta    = 2.0;
            minFactor = 0.01;
            referenceValue = 100;

            Reporter:
            {
                verbose = true;
                plotMus = false;
                order = "CriticalPath"; // "Topological"
            };
        };
    };

    TAOOptions:
    {
        commandLine         = ""; //-tao_monitor
        nInnerIterations    = 64;
        spreadingWeightInitialMultiplier = 0.08;
        muSpreadingMultiplier = 1.0;
        frtol = 1.0e-18;
    };

    Abacus:
    {
        useWeights = true;
        weightMultiplier = 10.0;
    };
};