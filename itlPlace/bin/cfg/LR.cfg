//
// This config is for LR experiments
//

params:
{
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000019_s27.def";
    def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_007161_tv80.def";

    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000045_b02.def";

    target_clock_cycle = 0.0;
};

plotter:
{
    enabled = true;
    windowHeight = 850;
    //saveImages = true;
    saveMilestoneImages = true;
    embeedMilestones = true;
    //createVideo = true;
};

DesignFlow:
{
    SkipSpecialNets = true;
    SkipBrokenNets = true;

    //RandomPlacement = true;
    //GlobalPlacement = true;
    LR          = true;
    //Legalization = true;
    //DetailedPlacement = true;
};

LR:
{
    Clustering:
    {
        useClusteringInformationFromFile  = false;
        desiredFinalNumberOfClusters      = 1000000;
    };

    GlobalPlacement:
    {
        useQAClass = true;
        QAcriteria = "LTNS";
        earlyExit = true;
        nTolerantIterations = 10;
        nConvergedIterations = 2;
        placeToTheCenter = false;
        improvementTreshold = 0.00;

        useLR = true;
        useQuadraticSpreading = true;
        useUnidirectSpreading = "@~useQuadraticSpreading";  //used only with useQuadraticSpreading = true 
        useBorderBounds    = true;

        plotSolverState   = true;
        gradientScaling = 0.0e+10;
        saveTAOmilestones = false;

        LagrangianRelaxation:
        {
            muLR     = 0.99;
            alphaTWL = 1.0e-8; //07 for weak wirelenght, 04 for 2% degradation
            alphaTWLMultiplier = 1.0;
            gamma    = 0.1;
            theta    = 4.0;

            Reporter:
            {
                verbose = false;
                order = "CriticalPath"; // "Topological"
            };
        };
    };

    TAOOptions:
    {
        commandLine         = ""; //-tao_monitor
        nInnerIterations    = 32;
        spreadingWeightInitialMultiplier = 0.1;
        muSpreadingMultiplier = 1.0;
        frtol = 1.0e-11;
    };

    Abacus:
    {
        useWeights = true;
        weightMultiplier = 10.0;
    };
};