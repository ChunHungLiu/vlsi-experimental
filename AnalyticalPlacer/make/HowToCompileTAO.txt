TAO вполне успешно компилируется С++ компилятором из MSVS8.0, необходимо только
подкрутить в разных местах. Здесь вероятно указано не все, при наличии вопросов 
можно посмотреть документ Василия Рябова, или спросить Кирилла Корнякова.

Основная проблема при компиляции TAO состоит в том, что конфигурационный скрипт
падает в разных местах. При этом когда запускаешь его заново, он проходит место
предыдущего падения (а иногда не доходит до него), но падает уже в другом месте.
У меня есть смутные воспомнинания, что собрать TAO на своем ноутбуке с Vista 
мне так и не удалось, а сделал я это на машине в ITLab c WinXP.


===============================================================================
ССЫЛКИ
===============================================================================
Страница TAO
http://www-unix.mcs.anl.gov/tao/
Процедура инсталляции TAO
http://www-unix.mcs.anl.gov/tao/documentation/installation.html
Процедура инсталляции PETSc
http://www-unix.mcs.anl.gov/petsc/petsc-as/documentation/installation.html


===============================================================================
СТАТУС
===============================================================================
Сейчас в проекте VLSI используется версия TAO, скомпированная при помощи
программ и библиотек следующих версий:
 - cygwin setup version 2.573.2.2
 - tao-1.9
 - petsc-2.3.3-p6
 - C++ compiler Microsoft Visual Studio 2005
 - Intel MKL 8.0
 - mpich2
В результате компиляции созданы следующие библиотеки:
libpetsc.lib
libpetsccontrib.lib
libpetscdm.lib
libpetscksp.lib
libpetscmat.lib
libpetscsnes.lib
libpetscts.lib
libpetscvec.lib
libtao.lib
libtaopetsc.lib
Для компилятора никаких ключей оптимизации не указывалось, поэтому есть 
подозрения, что эти библиотеки скомпилированы в отладочной конфигурации. Еще
один симптом этого - то что компилятор позволяет заходить внутрь исходного 
кода библиотек.


===============================================================================
ПРОЦЕДУРА
===============================================================================
1. Собирается TAO хоть и для windows, но все равно под cygwin. Первым делом  
   нужно скачать и поставить его.
2. Скачать и распаковать petsc-2.3.3-p6 и tao-1.9. Возможно следует взять более
   новые версии. Могу ошибаться, но возможно когда я ковырялся уже была 
   petsc-2.3.3-p7, но у меня с ней была какая-то проблема.
2. Прежде чем запускать конфигурацию, необходимо в makefile изменить расширение 
   у будущих статических библиотек. По умолчанию это *.a, но стоит сделать как 
   это принято в windows, то есть *.lib. 
   Это на строках 72, 137 (естественно, они могут "поехать").
3. Поставить Intel MKL - из нее нужен BLAS. Путь до MKL вписать в PATH.
4. Поставить MPI (лучше MPICH2). Путь до нее тоже вписать в PATH.
5. чтобы находился майкрософтовский компилятор стоит открыть консоль, запустить 
   "c:\Program Files\Microsoft Visual Studio 8\VC\bin\vcvars32.bat", а потом из 
   этой же консоли запустить cygwin.
6. Запускаем конфигурирующий скрипта configure.py со следующими ключами:
  --with-clanguage=C++
  --with-cxx="путь до компилитора --nodetect" (здесь в кавычках еще вроде надо 
  указать использовать обертку win32fe)
  --with MPI, указываем где лежат lib и include 
  Когда я сейчас осенью пытался снова это скомпилировать, я пришел в следующей 
  комбинации ключей конфигурационного скрипта:
  $./config/configure.py --with-clanguage=C++ --with-cxx='win32fe cl --nodetect' 
  CXXOPTFLAGS='/O2' --with-mpi-lib="/cygdrive/c/Program Files/MPICH2/lib/mpi.lib" 
  --with-mpi-include="/cygdrive/c/Program Files/MPICH2/include" --with-fc=0 
  --download-blas-lapack=1
  Сейчас уже не скажу почему вместо MKL (последний из ключей) у меня стоит
  необходимость скачивания его из интернет.
7. в файле tao_common на строке 2 нужно дописать
   include src\petstao\include