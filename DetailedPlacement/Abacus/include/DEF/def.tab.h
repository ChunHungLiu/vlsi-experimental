/* A Bison parser, made by GNU Bison 2.1.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     QSTRING = 258,
     T_STRING = 259,
     SITE_PATTERN = 260,
     NUMBER = 261,
     K_HISTORY = 262,
     K_NAMESCASESENSITIVE = 263,
     K_DESIGN = 264,
     K_VIAS = 265,
     K_TECH = 266,
     K_UNITS = 267,
     K_ARRAY = 268,
     K_FLOORPLAN = 269,
     K_SITE = 270,
     K_CANPLACE = 271,
     K_CANNOTOCCUPY = 272,
     K_DIEAREA = 273,
     K_PINS = 274,
     K_DEFAULTCAP = 275,
     K_MINPINS = 276,
     K_WIRECAP = 277,
     K_TRACKS = 278,
     K_GCELLGRID = 279,
     K_DO = 280,
     K_BY = 281,
     K_STEP = 282,
     K_LAYER = 283,
     K_ROW = 284,
     K_RECT = 285,
     K_COMPS = 286,
     K_COMP_GEN = 287,
     K_SOURCE = 288,
     K_WEIGHT = 289,
     K_EEQMASTER = 290,
     K_FIXED = 291,
     K_COVER = 292,
     K_UNPLACED = 293,
     K_PLACED = 294,
     K_FOREIGN = 295,
     K_REGION = 296,
     K_REGIONS = 297,
     K_NETS = 298,
     K_START_NET = 299,
     K_MUSTJOIN = 300,
     K_ORIGINAL = 301,
     K_USE = 302,
     K_STYLE = 303,
     K_PATTERN = 304,
     K_PATTERNNAME = 305,
     K_ESTCAP = 306,
     K_ROUTED = 307,
     K_NEW = 308,
     K_SNETS = 309,
     K_SHAPE = 310,
     K_WIDTH = 311,
     K_VOLTAGE = 312,
     K_SPACING = 313,
     K_NONDEFAULTRULE = 314,
     K_NONDEFAULTRULES = 315,
     K_N = 316,
     K_S = 317,
     K_E = 318,
     K_W = 319,
     K_FN = 320,
     K_FE = 321,
     K_FS = 322,
     K_FW = 323,
     K_GROUPS = 324,
     K_GROUP = 325,
     K_SOFT = 326,
     K_MAXX = 327,
     K_MAXY = 328,
     K_MAXHALFPERIMETER = 329,
     K_CONSTRAINTS = 330,
     K_NET = 331,
     K_PATH = 332,
     K_SUM = 333,
     K_DIFF = 334,
     K_SCANCHAINS = 335,
     K_START = 336,
     K_FLOATING = 337,
     K_ORDERED = 338,
     K_STOP = 339,
     K_IN = 340,
     K_OUT = 341,
     K_RISEMIN = 342,
     K_RISEMAX = 343,
     K_FALLMIN = 344,
     K_FALLMAX = 345,
     K_WIREDLOGIC = 346,
     K_MAXDIST = 347,
     K_ASSERTIONS = 348,
     K_DISTANCE = 349,
     K_MICRONS = 350,
     K_END = 351,
     K_IOTIMINGS = 352,
     K_RISE = 353,
     K_FALL = 354,
     K_VARIABLE = 355,
     K_SLEWRATE = 356,
     K_CAPACITANCE = 357,
     K_DRIVECELL = 358,
     K_FROMPIN = 359,
     K_TOPIN = 360,
     K_PARALLEL = 361,
     K_TIMINGDISABLES = 362,
     K_THRUPIN = 363,
     K_MACRO = 364,
     K_PARTITIONS = 365,
     K_TURNOFF = 366,
     K_FROMCLOCKPIN = 367,
     K_FROMCOMPPIN = 368,
     K_FROMIOPIN = 369,
     K_TOCLOCKPIN = 370,
     K_TOCOMPPIN = 371,
     K_TOIOPIN = 372,
     K_SETUPRISE = 373,
     K_SETUPFALL = 374,
     K_HOLDRISE = 375,
     K_HOLDFALL = 376,
     K_VPIN = 377,
     K_SUBNET = 378,
     K_XTALK = 379,
     K_PIN = 380,
     K_SYNTHESIZED = 381,
     K_DEFINE = 382,
     K_DEFINES = 383,
     K_DEFINEB = 384,
     K_IF = 385,
     K_THEN = 386,
     K_ELSE = 387,
     K_FALSE = 388,
     K_TRUE = 389,
     K_EQ = 390,
     K_NE = 391,
     K_LE = 392,
     K_LT = 393,
     K_GE = 394,
     K_GT = 395,
     K_OR = 396,
     K_AND = 397,
     K_NOT = 398,
     K_SPECIAL = 399,
     K_DIRECTION = 400,
     K_RANGE = 401,
     K_FPC = 402,
     K_HORIZONTAL = 403,
     K_VERTICAL = 404,
     K_ALIGN = 405,
     K_MIN = 406,
     K_MAX = 407,
     K_EQUAL = 408,
     K_BOTTOMLEFT = 409,
     K_TOPRIGHT = 410,
     K_ROWS = 411,
     K_TAPER = 412,
     K_TAPERRULE = 413,
     K_VERSION = 414,
     K_DIVIDERCHAR = 415,
     K_BUSBITCHARS = 416,
     K_PROPERTYDEFINITIONS = 417,
     K_STRING = 418,
     K_REAL = 419,
     K_INTEGER = 420,
     K_PROPERTY = 421,
     K_BEGINEXT = 422,
     K_ENDEXT = 423,
     K_NAMEMAPSTRING = 424,
     K_ON = 425,
     K_OFF = 426,
     K_X = 427,
     K_Y = 428,
     K_COMPONENT = 429,
     K_PINPROPERTIES = 430,
     K_TEST = 431,
     K_COMMONSCANPINS = 432,
     K_SNET = 433,
     K_COMPONENTPIN = 434,
     K_REENTRANTPATHS = 435,
     K_SHIELD = 436,
     K_SHIELDNET = 437,
     K_NOSHIELD = 438,
     K_ANTENNAPINPARTIALMETALAREA = 439,
     K_ANTENNAPINPARTIALMETALSIDEAREA = 440,
     K_ANTENNAPINGATEAREA = 441,
     K_ANTENNAPINDIFFAREA = 442,
     K_ANTENNAPINMAXAREACAR = 443,
     K_ANTENNAPINMAXSIDEAREACAR = 444,
     K_ANTENNAPINPARTIALCUTAREA = 445,
     K_ANTENNAPINMAXCUTCAR = 446,
     K_SIGNAL = 447,
     K_POWER = 448,
     K_GROUND = 449,
     K_CLOCK = 450,
     K_TIEOFF = 451,
     K_ANALOG = 452,
     K_SCAN = 453,
     K_RESET = 454,
     K_RING = 455,
     K_STRIPE = 456,
     K_FOLLOWPIN = 457,
     K_IOWIRE = 458,
     K_COREWIRE = 459,
     K_BLOCKWIRE = 460,
     K_FILLWIRE = 461,
     K_BLOCKAGEWIRE = 462,
     K_PADRING = 463,
     K_BLOCKRING = 464,
     K_BLOCKAGES = 465,
     K_PLACEMENT = 466,
     K_SLOTS = 467,
     K_FILLS = 468,
     K_PUSHDOWN = 469,
     K_NETLIST = 470,
     K_DIST = 471,
     K_USER = 472,
     K_TIMING = 473,
     K_BALANCED = 474,
     K_STEINER = 475,
     K_TRUNK = 476,
     K_FIXEDBUMP = 477,
     K_FENCE = 478,
     K_FREQUENCY = 479,
     K_GUIDE = 480,
     K_MAXBITS = 481,
     K_PARTITION = 482,
     K_TYPE = 483,
     K_ANTENNAMODEL = 484,
     K_DRCFILL = 485,
     K_OXIDE1 = 486,
     K_OXIDE2 = 487,
     K_OXIDE3 = 488,
     K_OXIDE4 = 489,
     K_CUTSIZE = 490,
     K_CUTSPACING = 491,
     K_DESIGNRULEWIDTH = 492,
     K_DIAGWIDTH = 493,
     K_ENCLOSURE = 494,
     K_HALO = 495,
     K_GROUNDSENSITIVITY = 496,
     K_HARDSPACING = 497,
     K_LAYERS = 498,
     K_MINCUTS = 499,
     K_NETEXPR = 500,
     K_OFFSET = 501,
     K_ORIGIN = 502,
     K_ROWCOL = 503,
     K_STYLES = 504,
     K_POLYGON = 505,
     K_PORT = 506,
     K_SUPPLYSENSITIVITY = 507,
     K_VIA = 508,
     K_VIARULE = 509,
     K_WIREEXT = 510,
     K_EXCEPTPGNET = 511,
     K_FILLWIREOPC = 512,
     K_OPC = 513,
     K_PARTIAL = 514,
     K_ROUTEHALO = 515
   };
#endif
/* Tokens.  */
#define QSTRING 258
#define T_STRING 259
#define SITE_PATTERN 260
#define NUMBER 261
#define K_HISTORY 262
#define K_NAMESCASESENSITIVE 263
#define K_DESIGN 264
#define K_VIAS 265
#define K_TECH 266
#define K_UNITS 267
#define K_ARRAY 268
#define K_FLOORPLAN 269
#define K_SITE 270
#define K_CANPLACE 271
#define K_CANNOTOCCUPY 272
#define K_DIEAREA 273
#define K_PINS 274
#define K_DEFAULTCAP 275
#define K_MINPINS 276
#define K_WIRECAP 277
#define K_TRACKS 278
#define K_GCELLGRID 279
#define K_DO 280
#define K_BY 281
#define K_STEP 282
#define K_LAYER 283
#define K_ROW 284
#define K_RECT 285
#define K_COMPS 286
#define K_COMP_GEN 287
#define K_SOURCE 288
#define K_WEIGHT 289
#define K_EEQMASTER 290
#define K_FIXED 291
#define K_COVER 292
#define K_UNPLACED 293
#define K_PLACED 294
#define K_FOREIGN 295
#define K_REGION 296
#define K_REGIONS 297
#define K_NETS 298
#define K_START_NET 299
#define K_MUSTJOIN 300
#define K_ORIGINAL 301
#define K_USE 302
#define K_STYLE 303
#define K_PATTERN 304
#define K_PATTERNNAME 305
#define K_ESTCAP 306
#define K_ROUTED 307
#define K_NEW 308
#define K_SNETS 309
#define K_SHAPE 310
#define K_WIDTH 311
#define K_VOLTAGE 312
#define K_SPACING 313
#define K_NONDEFAULTRULE 314
#define K_NONDEFAULTRULES 315
#define K_N 316
#define K_S 317
#define K_E 318
#define K_W 319
#define K_FN 320
#define K_FE 321
#define K_FS 322
#define K_FW 323
#define K_GROUPS 324
#define K_GROUP 325
#define K_SOFT 326
#define K_MAXX 327
#define K_MAXY 328
#define K_MAXHALFPERIMETER 329
#define K_CONSTRAINTS 330
#define K_NET 331
#define K_PATH 332
#define K_SUM 333
#define K_DIFF 334
#define K_SCANCHAINS 335
#define K_START 336
#define K_FLOATING 337
#define K_ORDERED 338
#define K_STOP 339
#define K_IN 340
#define K_OUT 341
#define K_RISEMIN 342
#define K_RISEMAX 343
#define K_FALLMIN 344
#define K_FALLMAX 345
#define K_WIREDLOGIC 346
#define K_MAXDIST 347
#define K_ASSERTIONS 348
#define K_DISTANCE 349
#define K_MICRONS 350
#define K_END 351
#define K_IOTIMINGS 352
#define K_RISE 353
#define K_FALL 354
#define K_VARIABLE 355
#define K_SLEWRATE 356
#define K_CAPACITANCE 357
#define K_DRIVECELL 358
#define K_FROMPIN 359
#define K_TOPIN 360
#define K_PARALLEL 361
#define K_TIMINGDISABLES 362
#define K_THRUPIN 363
#define K_MACRO 364
#define K_PARTITIONS 365
#define K_TURNOFF 366
#define K_FROMCLOCKPIN 367
#define K_FROMCOMPPIN 368
#define K_FROMIOPIN 369
#define K_TOCLOCKPIN 370
#define K_TOCOMPPIN 371
#define K_TOIOPIN 372
#define K_SETUPRISE 373
#define K_SETUPFALL 374
#define K_HOLDRISE 375
#define K_HOLDFALL 376
#define K_VPIN 377
#define K_SUBNET 378
#define K_XTALK 379
#define K_PIN 380
#define K_SYNTHESIZED 381
#define K_DEFINE 382
#define K_DEFINES 383
#define K_DEFINEB 384
#define K_IF 385
#define K_THEN 386
#define K_ELSE 387
#define K_FALSE 388
#define K_TRUE 389
#define K_EQ 390
#define K_NE 391
#define K_LE 392
#define K_LT 393
#define K_GE 394
#define K_GT 395
#define K_OR 396
#define K_AND 397
#define K_NOT 398
#define K_SPECIAL 399
#define K_DIRECTION 400
#define K_RANGE 401
#define K_FPC 402
#define K_HORIZONTAL 403
#define K_VERTICAL 404
#define K_ALIGN 405
#define K_MIN 406
#define K_MAX 407
#define K_EQUAL 408
#define K_BOTTOMLEFT 409
#define K_TOPRIGHT 410
#define K_ROWS 411
#define K_TAPER 412
#define K_TAPERRULE 413
#define K_VERSION 414
#define K_DIVIDERCHAR 415
#define K_BUSBITCHARS 416
#define K_PROPERTYDEFINITIONS 417
#define K_STRING 418
#define K_REAL 419
#define K_INTEGER 420
#define K_PROPERTY 421
#define K_BEGINEXT 422
#define K_ENDEXT 423
#define K_NAMEMAPSTRING 424
#define K_ON 425
#define K_OFF 426
#define K_X 427
#define K_Y 428
#define K_COMPONENT 429
#define K_PINPROPERTIES 430
#define K_TEST 431
#define K_COMMONSCANPINS 432
#define K_SNET 433
#define K_COMPONENTPIN 434
#define K_REENTRANTPATHS 435
#define K_SHIELD 436
#define K_SHIELDNET 437
#define K_NOSHIELD 438
#define K_ANTENNAPINPARTIALMETALAREA 439
#define K_ANTENNAPINPARTIALMETALSIDEAREA 440
#define K_ANTENNAPINGATEAREA 441
#define K_ANTENNAPINDIFFAREA 442
#define K_ANTENNAPINMAXAREACAR 443
#define K_ANTENNAPINMAXSIDEAREACAR 444
#define K_ANTENNAPINPARTIALCUTAREA 445
#define K_ANTENNAPINMAXCUTCAR 446
#define K_SIGNAL 447
#define K_POWER 448
#define K_GROUND 449
#define K_CLOCK 450
#define K_TIEOFF 451
#define K_ANALOG 452
#define K_SCAN 453
#define K_RESET 454
#define K_RING 455
#define K_STRIPE 456
#define K_FOLLOWPIN 457
#define K_IOWIRE 458
#define K_COREWIRE 459
#define K_BLOCKWIRE 460
#define K_FILLWIRE 461
#define K_BLOCKAGEWIRE 462
#define K_PADRING 463
#define K_BLOCKRING 464
#define K_BLOCKAGES 465
#define K_PLACEMENT 466
#define K_SLOTS 467
#define K_FILLS 468
#define K_PUSHDOWN 469
#define K_NETLIST 470
#define K_DIST 471
#define K_USER 472
#define K_TIMING 473
#define K_BALANCED 474
#define K_STEINER 475
#define K_TRUNK 476
#define K_FIXEDBUMP 477
#define K_FENCE 478
#define K_FREQUENCY 479
#define K_GUIDE 480
#define K_MAXBITS 481
#define K_PARTITION 482
#define K_TYPE 483
#define K_ANTENNAMODEL 484
#define K_DRCFILL 485
#define K_OXIDE1 486
#define K_OXIDE2 487
#define K_OXIDE3 488
#define K_OXIDE4 489
#define K_CUTSIZE 490
#define K_CUTSPACING 491
#define K_DESIGNRULEWIDTH 492
#define K_DIAGWIDTH 493
#define K_ENCLOSURE 494
#define K_HALO 495
#define K_GROUNDSENSITIVITY 496
#define K_HARDSPACING 497
#define K_LAYERS 498
#define K_MINCUTS 499
#define K_NETEXPR 500
#define K_OFFSET 501
#define K_ORIGIN 502
#define K_ROWCOL 503
#define K_STYLES 504
#define K_POLYGON 505
#define K_PORT 506
#define K_SUPPLYSENSITIVITY 507
#define K_VIA 508
#define K_VIARULE 509
#define K_WIREEXT 510
#define K_EXCEPTPGNET 511
#define K_FILLWIREOPC 512
#define K_OPC 513
#define K_PARTIAL 514
#define K_ROUTEHALO 515




#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
#line 269 "def.y"
typedef union YYSTYPE {
        double dval ;
        int    integer ;
        char * string ;
        int    keyword ;  /* really just a nop */
        struct defpoint pt;
        defTOKEN *tk;
} YYSTYPE;
/* Line 1447 of yacc.c.  */
#line 567 "def.tab.h"
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

extern YYSTYPE defyylval;



